var rE=Object.defineProperty;var sE=(Ds,Dr,ta)=>Dr in Ds?rE(Ds,Dr,{enumerable:!0,configurable:!0,writable:!0,value:ta}):Ds[Dr]=ta;var X=(Ds,Dr,ta)=>sE(Ds,typeof Dr!="symbol"?Dr+"":Dr,ta);(function(){"use strict";const Ds=new Map,Dr=[],ta=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=Ds.get(e);if(s===void 0)Ds.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const a=Dr.indexOf(e);a!==-1&&Dr.splice(a,1);for(let n=0;n<Dr.length;n++)if(Ds.get(Dr[n]).priority<=t){Dr.splice(n,0,e);return}Dr.push(e)}return}throw new TypeError("not a valid backend")},vv=async e=>{const r=Ds.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},dp=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Dr:t;let a;const n=[],i=new Set;for(const l of s){const c=await vv(l);typeof c=="string"?n.push({name:l,err:c}):(a||(a=c),a===c&&i.add(l))}if(!a)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const o=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[a,new Proxy(e,{get:(l,c)=>c==="executionProviders"?o:Reflect.get(l,c)})]},xv="1.20.1";let pp="warning";const ps={wasm:{},webgl:{},webgpu:{},versions:{common:xv},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);pp=e}},get logLevel(){return pp}};Object.defineProperty(ps,"logLevel",{enumerable:!0});const Tv=ps,Ev=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let a,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(a=e.dims[2],n=e.dims[3]):(a=e.dims[3],n=e.dims[2]);const i=(r==null?void 0:r.format)!==void 0?r.format:"RGB",o=r==null?void 0:r.norm;let l,c;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?c=[0,0,0,0]:typeof o.bias=="number"?c=[o.bias,o.bias,o.bias,o.bias]:(c=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(c[3]=o.bias[3]));const p=n*a;let d=0,h=p,g=p*2,_=-1;i==="RGBA"?(d=0,h=p,g=p*2,_=p*3):i==="RGB"?(d=0,h=p,g=p*2):i==="RBG"&&(d=0,g=p,h=p*2);for(let E=0;E<n;E++)for(let A=0;A<a;A++){const M=(e.data[d++]-c[0])*l[0],y=(e.data[h++]-c[1])*l[1],k=(e.data[g++]-c[2])*l[2],P=_===-1?255:(e.data[_++]-c[3])*l[3];s.fillStyle="rgba("+M+","+y+","+k+","+P+")",s.fillRect(A,E,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Pv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let a,n,i;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(a=e.dims[2],n=e.dims[1],i=e.dims[3]):(a=e.dims[3],n=e.dims[2],i=e.dims[1]);const o=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const d=n*a;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const h=4;let g=0,_=1,E=2,A=3,M=0,y=d,k=d*2,P=-1;o==="RGBA"?(M=0,y=d,k=d*2,P=d*3):o==="RGB"?(M=0,y=d,k=d*2):o==="RBG"&&(M=0,k=d,y=d*2),s=t.createImageData(a,n);for(let b=0;b<n*a;g+=h,_+=h,E+=h,A+=h,b++)s.data[g]=(e.data[M++]-p[0])*c[0],s.data[_]=(e.data[y++]-p[1])*c[1],s.data[E]=(e.data[k++]-p[2])*c[2],s.data[A]=P===-1?255:(e.data[P++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},Dc=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,a=r.norm??{mean:255,bias:0};let n,i;typeof a.mean=="number"?n=[a.mean,a.mean,a.mean,a.mean]:n=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?i=[a.bias,a.bias,a.bias,a.bias]:i=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const o=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let d=4,h=0,g=1,_=2,E=3,A=0,M=c,y=c*2,k=-1;o==="RGB"&&(d=3,h=0,g=1,_=2,E=-1),l==="RGBA"?k=c*3:l==="RBG"?(A=0,y=c,M=c*2):l==="BGR"&&(y=0,M=c,A=c*2);for(let b=0;b<c;b++,h+=d,_+=d,g+=d,E+=d)p[A++]=(e[h]+i[0])/n[0],p[M++]=(e[g]+i[1])/n[1],p[y++]=(e[_]+i[2])/n[2],k!==-1&&E!==-1&&(p[k++]=(e[E]+i[3])/n[3]);return l==="RGBA"?new ts("float32",p,[1,4,t,s]):new ts("float32",p,[1,3,t,s])},Cv=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,a=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let i,o=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){let h=e.height,g=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(h=r.resizedHeight,g=r.resizedWidth),r!==void 0){if(o=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=h,o.width=g}else o.tensorFormat="RGBA",o.height=h,o.width=g;d.drawImage(e,0,0),i=d.getImageData(0,0,g,h).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(o=r),o.format="RGBA",o.height=p,o.width=d,r!==void 0){const h=l();h.width=d,h.height=p;const g=c(h);if(g!=null)g.putImageData(e,0,0),i=g.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(a){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){const h=e.height,g=e.width;return d.drawImage(e,0,0,g,h),i=d.getImageData(0,0,g,h).data,o.height=h,o.width=g,Dc(i,o)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{const h=l(),g=c(h);if(!e||!g)return d();const _=new Image;_.crossOrigin="Anonymous",_.src=e,_.onload=()=>{h.width=_.width,h.height=_.height,g.drawImage(_,0,0,h.width,h.height);const E=g.getImageData(0,0,h.width,h.height);o.height=h.height,o.width=h.width,p(Dc(E.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Dc(i,o);throw new Error("Input data provided is not supported - aborted tensor creation")},Sv=(e,r)=>{const{width:t,height:s,download:a,dispose:n}=r,i=[1,s,t,4];return new ts({location:"texture",type:"float32",texture:e,dims:i,download:a,dispose:n})},kv=(e,r)=>{const{dataType:t,dims:s,download:a,dispose:n}=r;return new ts({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:a,dispose:n})},$v=(e,r)=>{const{dataType:t,dims:s,download:a,dispose:n}=r;return new ts({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:a,dispose:n})},Av=(e,r,t)=>new ts({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),ra=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Do=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let hp=!1;const Iv=()=>{if(!hp){hp=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=typeof Float16Array<"u"&&Float16Array.from;e&&(ra.set("int64",BigInt64Array),Do.set(BigInt64Array,"int64")),r&&(ra.set("uint64",BigUint64Array),Do.set(BigUint64Array,"uint64")),t?(ra.set("float16",Float16Array),Do.set(Float16Array,"float16")):ra.set("float16",Uint16Array)}},Ov=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Fv=(e,r)=>{switch(e.location){case"cpu":return new ts(e.type,e.data,r);case"cpu-pinned":return new ts({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new ts({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new ts({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new ts({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let ts=class{constructor(r,t,s){Iv();let a,n;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,a=r.type,n=r.dims,r.location){case"cpu-pinned":{const o=ra.get(a);if(!o)throw new TypeError(`unsupported type "${a}" to create tensor from pinned buffer`);if(!(r.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=r.data;break}case"texture":{if(a!=="float32")throw new TypeError(`unsupported type "${a}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint8"&&a!=="bool"&&a!=="uint4"&&a!=="int4")throw new TypeError(`unsupported type "${a}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint64"&&a!=="int8"&&a!=="uint8"&&a!=="bool")throw new TypeError(`unsupported type "${a}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,l;if(typeof r=="string")if(a=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{const c=ra.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?o=c.from(t,BigInt):o=c.from(t)}else if(t instanceof c)o=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${a} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")a="string",o=r;else if(c==="boolean")a="bool",o=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)a="uint8",o=Uint8Array.from(r);else{const c=Do.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);a=c,o=r}if(l===void 0)l=[o.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=o,this.dataLocation="cpu"}const i=Ov(n);if(this.cpuData&&i!==this.cpuData.length&&!((a==="uint4"||a==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=a,this.dims=n,this.size=i}static async fromImage(r,t){return Cv(r,t)}static fromTexture(r,t){return Sv(r,t)}static fromGpuBuffer(r,t){return kv(r,t)}static fromMLTensor(r,t){return $v(r,t)}static fromPinnedBuffer(r,t,s){return Av(r,t,s)}toDataURL(r){return Ev(this,r)}toImageData(r){return Pv(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Fv(this,r)}};const hs=ts,fp=(e,r)=>{(typeof ps.trace>"u"?!ps.wasm.trace:!ps.trace)||console.timeStamp(`${e}::ORT::${r}`)},mp=(e,r)=>{var a;const t=((a=new Error().stack)==null?void 0:a.split(/\r\n|\r|\n/g))||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),fp("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Lc=e=>{(typeof ps.trace>"u"?!ps.wasm.trace:!ps.trace)||mp("BEGIN",e)},zc=e=>{(typeof ps.trace>"u"?!ps.wasm.trace:!ps.trace)||mp("END",e)},Dv=class wv{constructor(r){this.handler=r}async run(r,t,s){Lc();const a={};let n={};if(typeof r!="object"||r===null||r instanceof hs||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof hs)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);a[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(p.indexOf(d)!==-1){const h=t[d];(h===null||h instanceof hs)&&(c=!0,i=!1,a[d]=h)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(const c of this.outputNames)a[c]=null;const o=await this.handler.run(r,a,n),l={};for(const c in o)if(Object.hasOwnProperty.call(o,c)){const p=o[c];p instanceof hs?l[c]=p:l[c]=new hs(p.type,p.data,p.dims)}return zc(),l}async release(){return this.handler.dispose()}static async create(r,t,s,a){Lc();let n,i={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let d=0,h=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(h=r.byteLength-d,typeof s=="number"){if(h=s,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||d+h>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof a=="object"&&a!==null)i=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[o,l]=await dp(i),c=await o.createInferenceSessionHandler(n,l);return zc(),new wv(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}},Lv="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";var zv=Object.freeze({__proto__:null,InferenceSession:Dv,TRACE:fp,TRACE_FUNC_BEGIN:Lc,TRACE_FUNC_END:zc,Tensor:hs,TrainingSession:class yv{constructor(r,t,s){this.handler=r,this.hasOptimizerModel=t,this.hasEvalModel=s}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(r,t){const s=r.evalModel||"",a=r.optimizerModel||"",n=t||{},[i,o]=await dp(n);if(i.createTrainingSessionHandler){const l=await i.createTrainingSessionHandler(r.checkpointState,r.trainModel,s,a,o);return new yv(l,!!r.optimizerModel,!!r.evalModel)}else throw new Error(Lv)}typeNarrowingForRunStep(r,t,s,a,n){const i={};let o={};if(typeof s!="object"||s===null||s instanceof hs||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if(typeof a=="object"){if(a===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(a instanceof hs)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(a)){if(a.length===0)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(const c of a){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(t.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(a);for(const d of t)if(p.indexOf(d)!==-1){const h=a[d];(h===null||h instanceof hs)&&(c=!0,l=!1,i[d]=h)}if(c){if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else o=a}}else if(typeof a<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of r)if(typeof s[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(l)for(const c of t)i[c]=null;return[i,o]}convertHandlerReturnTypeToMapOfTensors(r){const t={};for(const s in r)if(Object.hasOwnProperty.call(r,s)){const a=r[s];a instanceof hs?t[s]=a:t[s]=new hs(a.type,a.data,a.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(r,t,s){const[a,n]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,r,t,s),i=await this.handler.runTrainStep(r,a,n);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(r){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(r||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(r,t,s){if(this.hasEvalModel){const[a,n]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,r,t,s),i=await this.handler.runEvalStep(r,a,n);return this.convertHandlerReturnTypeToMapOfTensors(i)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(r=!0){return this.handler.getParametersSize(r)}async loadParametersBuffer(r,t=!0){const s=await this.getParametersSize(t);if(r.length!==4*s)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(r,t)}async getContiguousParameters(r=!0){return this.handler.getContiguousParameters(r)}async release(){return this.handler.dispose()}},env:Tv,registerBackend:ta});/*!
 * ONNX Runtime Web v1.22.0-dev.20250306-ccf8fdd9ea
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Bc=Object.defineProperty,Bv=Object.getOwnPropertyDescriptor,Rv=Object.getOwnPropertyNames,Nv=Object.prototype.hasOwnProperty,jv=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ue=(e,r)=>()=>(e&&(r=e(e=0)),r),Ha=(e,r)=>{for(var t in r)Bc(e,t,{get:r[t],enumerable:!0})},Vv=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let a of Rv(r))!Nv.call(e,a)&&a!==t&&Bc(e,a,{get:()=>r[a],enumerable:!(s=Bv(r,a))||s.enumerable});return e},Lo=e=>Vv(Bc({},"__esModule",{value:!0}),e),qa,on,Cn,_p,gp,wp=Ue(()=>{qa=new Map,on=[],Cn=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=qa.get(e);if(s===void 0)qa.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let a=on.indexOf(e);a!==-1&&on.splice(a,1);for(let n=0;n<on.length;n++)if(qa.get(on[n]).priority<=t){on.splice(n,0,e);return}on.push(e)}return}throw new TypeError("not a valid backend")},_p=async e=>{let r=qa.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},gp=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?on:t,a,n=[],i=new Set;for(let l of s){let c=await _p(l);typeof c=="string"?n.push({name:l,err:c}):(a||(a=c),a===c&&i.add(l))}if(!a)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let o=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[a,new Proxy(e,{get:(l,c)=>c==="executionProviders"?o:Reflect.get(l,c)})]}}),Uv=Ue(()=>{wp()}),yp,Wv=Ue(()=>{yp="1.22.0-dev.20250306-aafa8d170a"}),Rc,rs,Mp=Ue(()=>{Wv(),Rc="warning",rs={wasm:{},webgl:{},webgpu:{},versions:{common:yp},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Rc=e}},get logLevel(){return Rc}},Object.defineProperty(rs,"logLevel",{enumerable:!0})}),qt,Gv=Ue(()=>{Mp(),qt=rs}),bp,vp,Kv=Ue(()=>{bp=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let a,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(a=e.dims[2],n=e.dims[3]):(a=e.dims[3],n=e.dims[2]);let i=(r==null?void 0:r.format)!==void 0?r.format:"RGB",o=r==null?void 0:r.norm,l,c;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?c=[0,0,0,0]:typeof o.bias=="number"?c=[o.bias,o.bias,o.bias,o.bias]:(c=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(c[3]=o.bias[3]));let p=n*a,d=0,h=p,g=p*2,_=-1;i==="RGBA"?(d=0,h=p,g=p*2,_=p*3):i==="RGB"?(d=0,h=p,g=p*2):i==="RBG"&&(d=0,g=p,h=p*2);for(let E=0;E<n;E++)for(let A=0;A<a;A++){let M=(e.data[d++]-c[0])*l[0],y=(e.data[h++]-c[1])*l[1],k=(e.data[g++]-c[2])*l[2],P=_===-1?255:(e.data[_++]-c[3])*l[3];s.fillStyle="rgba("+M+","+y+","+k+","+P+")",s.fillRect(A,E,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},vp=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let a,n,i;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(a=e.dims[2],n=e.dims[1],i=e.dims[3]):(a=e.dims[3],n=e.dims[2],i=e.dims[1]);let o=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let d=n*a;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,_=1,E=2,A=3,M=0,y=d,k=d*2,P=-1;o==="RGBA"?(M=0,y=d,k=d*2,P=d*3):o==="RGB"?(M=0,y=d,k=d*2):o==="RBG"&&(M=0,k=d,y=d*2),s=t.createImageData(a,n);for(let b=0;b<n*a;g+=h,_+=h,E+=h,A+=h,b++)s.data[g]=(e.data[M++]-p[0])*c[0],s.data[_]=(e.data[y++]-p[1])*c[1],s.data[E]=(e.data[k++]-p[2])*c[2],s.data[A]=P===-1?255:(e.data[P++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),zo,xp,Tp,Ep,Pp,Cp,Hv=Ue(()=>{jc(),zo=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,a=r.norm??{mean:255,bias:0},n,i;typeof a.mean=="number"?n=[a.mean,a.mean,a.mean,a.mean]:n=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?i=[a.bias,a.bias,a.bias,a.bias]:i=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),d=4,h=0,g=1,_=2,E=3,A=0,M=c,y=c*2,k=-1;o==="RGB"&&(d=3,h=0,g=1,_=2,E=-1),l==="RGBA"?k=c*3:l==="RBG"?(A=0,y=c,M=c*2):l==="BGR"&&(y=0,M=c,A=c*2);for(let P=0;P<c;P++,h+=d,_+=d,g+=d,E+=d)p[A++]=(e[h]+i[0])/n[0],p[M++]=(e[g]+i[1])/n[1],p[y++]=(e[_]+i[2])/n[2],k!==-1&&E!==-1&&(p[k++]=(e[E]+i[3])/n[3]);return l==="RGBA"?new Kr("float32",p,[1,4,t,s]):new Kr("float32",p,[1,3,t,s])},xp=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,a=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",i,o=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let h=e.height,g=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(h=r.resizedHeight,g=r.resizedWidth),r!==void 0){if(o=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=h,o.width=g}else o.tensorFormat="RGBA",o.height=h,o.width=g;d.drawImage(e,0,0),i=d.getImageData(0,0,g,h).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(o=r),o.format="RGBA",o.height=p,o.width=d,r!==void 0){let h=l();h.width=d,h.height=p;let g=c(h);if(g!=null)g.putImageData(e,0,0),i=g.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(a){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let h=e.height,g=e.width;return d.drawImage(e,0,0,g,h),i=d.getImageData(0,0,g,h).data,o.height=h,o.width=g,zo(i,o)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{let h=l(),g=c(h);if(!e||!g)return d();let _=new Image;_.crossOrigin="Anonymous",_.src=e,_.onload=()=>{h.width=_.width,h.height=_.height,g.drawImage(_,0,0,h.width,h.height);let E=g.getImageData(0,0,h.width,h.height);o.height=h.height,o.width=h.width,p(zo(E.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return zo(i,o);throw new Error("Input data provided is not supported - aborted tensor creation")},Tp=(e,r)=>{let{width:t,height:s,download:a,dispose:n}=r,i=[1,s,t,4];return new Kr({location:"texture",type:"float32",texture:e,dims:i,download:a,dispose:n})},Ep=(e,r)=>{let{dataType:t,dims:s,download:a,dispose:n}=r;return new Kr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:a,dispose:n})},Pp=(e,r)=>{let{dataType:t,dims:s,download:a,dispose:n}=r;return new Kr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:a,dispose:n})},Cp=(e,r,t)=>new Kr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),Sn,Qa,Nc,Sp,qv=Ue(()=>{Sn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Qa=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Nc=!1,Sp=()=>{if(!Nc){Nc=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(Sn.set("int64",BigInt64Array),Qa.set(BigInt64Array,"int64")),r&&(Sn.set("uint64",BigUint64Array),Qa.set(BigUint64Array,"uint64")),s?(Sn.set("float16",t),Qa.set(t,"float16")):Sn.set("float16",Uint16Array)}}}),kp,$p,Qv=Ue(()=>{jc(),kp=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},$p=(e,r)=>{switch(e.location){case"cpu":return new Kr(e.type,e.data,r);case"cpu-pinned":return new Kr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Kr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Kr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Kr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Kr,jc=Ue(()=>{Kv(),Hv(),qv(),Qv(),Kr=class{constructor(e,r,t){Sp();let s,a;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,a=e.dims,e.location){case"cpu-pinned":{let i=Sn.get(s);if(!i)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,o;if(typeof e=="string")if(s=e,o=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");i=r}else{let l=Sn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?i=l.from(r,BigInt):i=l.from(r)}else if(r instanceof l)i=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)i=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(o=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",i=e;else if(l==="boolean")s="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",i=Uint8Array.from(e);else{let l=Qa.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,i=e}if(o===void 0)o=[i.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");a=o,this.cpuData=i,this.dataLocation="cpu"}let n=kp(a);if(this.cpuData&&n!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=a,this.size=n}static async fromImage(e,r){return xp(e,r)}static fromTexture(e,r){return Tp(e,r)}static fromGpuBuffer(e,r){return Ep(e,r)}static fromMLTensor(e,r){return Pp(e,r)}static fromPinnedBuffer(e,r,t){return Cp(e,r,t)}toDataURL(e){return bp(this,e)}toImageData(e){return vp(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return $p(this,e)}}}),fs,Ap=Ue(()=>{jc(),fs=Kr}),Xa,Vc,ms,ss,Ip=Ue(()=>{Mp(),Xa=(e,r)=>{(typeof rs.trace>"u"?!rs.wasm.trace:!rs.trace)||console.timeStamp(`${e}::ORT::${r}`)},Vc=(e,r)=>{var a;let t=((a=new Error().stack)==null?void 0:a.split(/\r\n|\r|\n/g))||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),Xa("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},ms=e=>{(typeof rs.trace>"u"?!rs.wasm.trace:!rs.trace)||Vc("BEGIN",e)},ss=e=>{(typeof rs.trace>"u"?!rs.wasm.trace:!rs.trace)||Vc("END",e)}}),Op,Xv=Ue(()=>{wp(),Ap(),Ip(),Op=class Mv{constructor(r){this.handler=r}async run(r,t,s){ms();let a={},n={};if(typeof r!="object"||r===null||r instanceof fs||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof fs)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);a[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(p.indexOf(d)!==-1){let h=t[d];(h===null||h instanceof fs)&&(c=!0,i=!1,a[d]=h)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(let c of this.outputNames)a[c]=null;let o=await this.handler.run(r,a,n),l={};for(let c in o)if(Object.hasOwnProperty.call(o,c)){let p=o[c];p instanceof fs?l[c]=p:l[c]=new fs(p.type,p.data,p.dims)}return ss(),l}async release(){return this.handler.dispose()}static async create(r,t,s,a){ms();let n,i={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,d=0,h=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(h=r.byteLength-d,typeof s=="number"){if(h=s,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||d+h>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof a=="object"&&a!==null)i=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,l]=await gp(i),c=await o.createInferenceSessionHandler(n,l);return ss(),new Mv(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Uc,Jv=Ue(()=>{Xv(),Uc=Op}),Yv=Ue(()=>{}),Zv=Ue(()=>{}),ex=Ue(()=>{}),tx=Ue(()=>{}),Fp={};Ha(Fp,{InferenceSession:()=>Uc,TRACE:()=>Xa,TRACE_FUNC_BEGIN:()=>ms,TRACE_FUNC_END:()=>ss,Tensor:()=>fs,env:()=>qt,registerBackend:()=>Cn});var _s=Ue(()=>{Uv(),Gv(),Jv(),Ap(),Yv(),Zv(),Ip(),ex(),tx()}),Wc=Ue(()=>{}),Dp={};Ha(Dp,{default:()=>Lp});var Gc,Kc,Lp,rx=Ue(()=>{var e;hy(),kn(),eu(),Gc="ort-wasm-proxy-worker",Kc=((e=globalThis.self)==null?void 0:e.name)===Gc,Kc&&(self.onmessage=r=>{let{type:t,in:s}=r.data;try{switch(t){case"init-wasm":su(s.wasm).then(()=>{pd(s).then(()=>{postMessage({type:t})},a=>{postMessage({type:t,err:a})})},a=>{postMessage({type:t,err:a})});break;case"init-ep":{let{epName:a,env:n}=s;hd(n,a).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})});break}case"copy-from":{let{buffer:a}=s,n=tl(a);postMessage({type:t,out:n});break}case"create":{let{model:a,options:n}=s;fd(a,n).then(i=>{postMessage({type:t,out:i})},i=>{postMessage({type:t,err:i})});break}case"release":md(s),postMessage({type:t});break;case"run":{let{sessionId:a,inputIndices:n,inputs:i,outputIndices:o,options:l}=s;gd(a,n,i,o,new Array(o.length).fill(null),l).then(c=>{c.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},yd([...i,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":wd(s),postMessage({type:t});break;default:}}catch(a){postMessage({type:t,err:a})}}),Lp=Kc?null:r=>new Worker(r??Hr,{type:"module",name:Gc})}),zp={};Ha(zp,{default:()=>Bp});var Hc,qc,Bp,Rp,sx=Ue(()=>{var e,r;qc=(Hc=self.location.href,async function(t={}){var Io;var s,a,n=t,i=new Promise((u,f)=>{s=u,a=f}),o=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((Io=self.name)==null?void 0:Io.startsWith("em-pthread"));n.mountExternalData=(u,f)=>{u.startsWith("./")&&(u=u.substring(2)),(n.Bd||(n.Bd=new Map)).set(u,f)},n.unmountExternalData=()=>{delete n.Bd};var p=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let d=()=>{let u=(x,C,I)=>(...G)=>{let ie=Ut,ye=C==null?void 0:C();G=x(...G);let Pe=C==null?void 0:C();return ye!==Pe&&(x=Pe,I(ye),C=I=null),Ut!=ie?new Promise((Be,Ze)=>{Mn={resolve:Be,reject:Ze}}):G},f=x=>async(...C)=>{var I;try{if(n.Cd)throw Error("Session already started");let G=n.Cd={be:C[0],errors:[]},ie=await x(...C);if(n.Cd!==G)throw Error("Session mismatch");(I=n.Dd)==null||I.flush();let ye=G.errors;if(0<ye.length){let Pe=await Promise.all(ye);if(Pe=Pe.filter(Be=>Be),0<Pe.length)throw Error(Pe.join(`
`))}return ie}finally{n.Cd=null}};n._OrtCreateSession=u(n._OrtCreateSession,()=>n._OrtCreateSession,x=>n._OrtCreateSession=x),n._OrtRun=f(u(n._OrtRun,()=>n._OrtRun,x=>n._OrtRun=x)),n._OrtRunWithBinding=f(u(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,x=>n._OrtRunWithBinding=x)),n._OrtBindInput=u(n._OrtBindInput,()=>n._OrtBindInput,x=>n._OrtBindInput=x),d=void 0};n.jsepInit=(u,f)=>{if(d==null||d(),u==="webgpu"){[n.Dd,n.Rd,n.Vd,n.Hd,n.Ud,n.hc,n.Wd,n.Zd,n.Sd,n.Td,n.Xd]=f;let x=n.Dd;n.jsepRegisterBuffer=(C,I,G,ie)=>x.registerBuffer(C,I,G,ie),n.jsepGetBuffer=C=>x.getBuffer(C),n.jsepCreateDownloader=(C,I,G)=>x.createDownloader(C,I,G),n.jsepOnCreateSession=C=>{x.onCreateSession(C)},n.jsepOnReleaseSession=C=>{x.onReleaseSession(C)},n.jsepOnRunStart=C=>x.onRunStart(C),n.$d=(C,I)=>{x.upload(C,I)}}else if(u==="webnn"){[n.Dd,n.Yd,n.Id,n.jsepEnsureTensor,n.Jd,n.jsepDownloadTensor]=f,n.jsepReleaseTensorId=n.Id,n.jsepUploadTensor=n.Jd;let x=n.Dd;n.jsepOnRunStart=C=>x.onRunStart(C),n.jsepOnRunEnd=x.onRunEnd.bind(x),n.jsepRegisterMLContext=(C,I)=>{x.registerMLContext(C,I)},n.jsepOnReleaseSession=C=>{x.onReleaseSession(C)},n.jsepCreateMLTensorDownloader=(C,I)=>x.createMLTensorDownloader(C,I),n.jsepRegisterMLTensor=(C,I,G,ie)=>x.registerMLTensor(C,I,G,ie),n.jsepCreateMLContext=C=>x.createMLContext(C),n.jsepRegisterMLConstant=(C,I,G,ie,ye)=>x.registerMLConstant(C,I,G,ie,ye,n.Bd),n.jsepRegisterGraphInput=x.registerGraphInput.bind(x),n.jsepIsGraphInput=x.isGraphInput.bind(x),n.jsepCreateTemporaryTensor=x.createTemporaryTensor.bind(x)}};var h,g,_=Object.assign({},n),E=(u,f)=>{throw f},A="";(o||l)&&(l?A=self.location.href:typeof document<"u"&&document.currentScript&&(A=document.currentScript.src),Hc&&(A=Hc),A=A.startsWith("blob:")?"":A.slice(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(g=u=>{var f=new XMLHttpRequest;return f.open("GET",u,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),h=async u=>{if(de(u))return new Promise((x,C)=>{var I=new XMLHttpRequest;I.open("GET",u,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?x(I.response):C(I.status)},I.onerror=C,I.send(null)});var f=await fetch(u,{credentials:"same-origin"});if(f.ok)return f.arrayBuffer();throw Error(f.status+" : "+f.url)});var M=console.log.bind(console),y=console.error.bind(console),k=M,P=y;Object.assign(n,_),_=null;var b,w,T,$,z,N,Y,J,W,te,H,R,q,ee=n.wasmBinary,le=!1,de=u=>u.startsWith("file://");function j(){return b.buffer!=$.buffer&&Q(),$}function F(){return b.buffer!=$.buffer&&Q(),z}function K(){return b.buffer!=$.buffer&&Q(),N}function ae(){return b.buffer!=$.buffer&&Q(),Y}function Z(){return b.buffer!=$.buffer&&Q(),J}function we(){return b.buffer!=$.buffer&&Q(),W}function _e(){return b.buffer!=$.buffer&&Q(),te}function Ae(){return b.buffer!=$.buffer&&Q(),q}if(c){let u=function(f){try{var x=f.data,C=x.yd;if(C==="load"){let I=[];self.onmessage=G=>I.push(G),self.startWorker=()=>{postMessage({yd:"loaded"});for(let G of I)u(G);self.onmessage=u};for(let G of x.Od)n[G]&&!n[G].proxy||(n[G]=(...ie)=>{postMessage({yd:"callHandler",Nd:G,args:ie})},G=="print"&&(k=n[G]),G=="printErr"&&(P=n[G]));b=x.he,Q(),qe(x.ie)}else if(C==="run"){Xs(x.xd),ba(x.xd,0,0,1,0,0),Gt(),Lt(x.xd),Me||(Ma(),Me=!0);try{Ur(x.de,x.Fd)}catch(I){if(I!="unwind")throw I}}else x.target!=="setimmediate"&&(C==="checkMailbox"?Me&&Ht():C&&(P(`worker: received unknown command ${C}`),P(x)))}catch(I){throw Ii(),I}};var qe,Me=!1;P=function(...f){f=f.join(" "),console.error(f)},self.alert=function(...f){postMessage({yd:"alert",text:f.join(" "),fe:Xn()})},self.onunhandledrejection=f=>{throw f.reason||f},self.onmessage=u}function Q(){var u=b.buffer;n.HEAP8=$=new Int8Array(u),n.HEAP16=N=new Int16Array(u),n.HEAPU8=z=new Uint8Array(u),n.HEAPU16=Y=new Uint16Array(u),n.HEAP32=J=new Int32Array(u),n.HEAPU32=W=new Uint32Array(u),n.HEAPF32=te=new Float32Array(u),n.HEAPF64=q=new Float64Array(u),n.HEAP64=H=new BigInt64Array(u),n.HEAPU64=R=new BigUint64Array(u)}function V(){c?startWorker(n):De.Bb()}c||(b=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),Q());var fe,Ce=0,Ee=null;function Oe(){if(--Ce==0&&Ee){var u=Ee;Ee=null,u()}}function Ie(u){throw P(u="Aborted("+u+")"),le=!0,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),a(u),u}function ze(){return{a:{Ta:D,Va:Ge,W:Js,la:ut,b:zs,u:Bs,R:Rs,Za:Ys,d:br,pb:tt,g:Yr,T:zr,Ga:Ps,lb:Ss,nb:ks,Ha:os,Ea:Ns,wb:pn,Da:hn,pa:fn,mb:mn,jb:$s,Fa:_n,kb:gn,Ma:js,za:Un,eb:Wn,cb:Vs,ya:he,V:O,N:U,db:re,ma:ft,fb:kt,zb:It,hb:kr,qb:us,ab:$r,Aa:As,yb:Lt,Ja:Xt,S:ds,Wa:Is,$:pl,H:hl,E:ml,l:cs,F:hi,B:wl,X:fi,J:yl,v:mi,O:Sd,D:Ml,t:_i,A:bl,z:da,w:vl,r:xl,tb:Tl,ub:El,vb:pa,rb:ha,sb:Mi,bb:bi,Oa:kd,La:$d,y:Cl,ja:Sl,Ba:kl,Ka:Pl,qa:$l,Ia:Al,ib:_a,U:nn,fa:Il,Sa:Ol,gb:Fl,Qa:xi,Pa:Dl,Ab:Ei,Ca:wa,ob:Ve,aa:Pi,oa:Ci,xb:ya,na:Si,$a:tc,ia:ko,sa:dc,ga:To,da:ac,ua:Ua,p:Yl,e:Nl,c:Bl,ea:Po,f:jl,n:Vl,k:vo,Y:Wl,ka:Xl,j:Zl,wa:sc,Ra:Ao,ca:So,Ua:hc,P:nc,K:bo,_:Co,Q:ec,Z:cc,x:Gl,m:Rl,va:oc,i:yo,h:Ul,ra:pc,ta:$o,o:Mo,q:Kl,s:ql,I:Ql,C:xo,L:Jl,xa:rc,_a:Eo,G:lc,Ya:Va,ba:uc,M:Hl,Xa:ic,ha:ki,a:b,Na:Ne}}}var je={1320978:()=>typeof wasmOffsetConverter<"u",1321035:(u,f,x,C,I)=>{if(n===void 0||!n.Bd)return 1;if((u=Nt(Number(u>>>0))).startsWith("./")&&(u=u.substring(2)),!(u=n.Bd.get(u)))return 2;if(f=Number(f>>>0),x=Number(x>>>0),C=Number(C>>>0),f+x>u.byteLength)return 3;try{let G=u.subarray(f,f+x);switch(I){case 0:F().set(G,C>>>0);break;case 1:n.$d(C,G);break;default:return 4}return 0}catch{return 4}},1321750:(u,f,x)=>{n.Jd(u,F().subarray(f>>>0,f+x>>>0))},1321813:()=>n.Yd(),1321854:u=>{n.Id(u)},1321890:()=>{n.Sd()},1321921:()=>{n.Td()},1321950:()=>{n.Xd()},1321975:u=>n.Rd(u),1322008:u=>n.Vd(u),1322040:(u,f,x)=>{n.Hd(Number(u),Number(f),Number(x),!0)},1322103:(u,f,x)=>{n.Hd(Number(u),Number(f),Number(x))},1322160:u=>{n.hc("Abs",u,void 0)},1322211:u=>{n.hc("Neg",u,void 0)},1322262:u=>{n.hc("Floor",u,void 0)},1322315:u=>{n.hc("Ceil",u,void 0)},1322367:u=>{n.hc("Reciprocal",u,void 0)},1322425:u=>{n.hc("Sqrt",u,void 0)},1322477:u=>{n.hc("Exp",u,void 0)},1322528:u=>{n.hc("Erf",u,void 0)},1322579:u=>{n.hc("Sigmoid",u,void 0)},1322634:(u,f,x)=>{n.hc("HardSigmoid",u,{alpha:f,beta:x})},1322713:u=>{n.hc("Log",u,void 0)},1322764:u=>{n.hc("Sin",u,void 0)},1322815:u=>{n.hc("Cos",u,void 0)},1322866:u=>{n.hc("Tan",u,void 0)},1322917:u=>{n.hc("Asin",u,void 0)},1322969:u=>{n.hc("Acos",u,void 0)},1323021:u=>{n.hc("Atan",u,void 0)},1323073:u=>{n.hc("Sinh",u,void 0)},1323125:u=>{n.hc("Cosh",u,void 0)},1323177:u=>{n.hc("Asinh",u,void 0)},1323230:u=>{n.hc("Acosh",u,void 0)},1323283:u=>{n.hc("Atanh",u,void 0)},1323336:u=>{n.hc("Tanh",u,void 0)},1323388:u=>{n.hc("Not",u,void 0)},1323439:(u,f,x)=>{n.hc("Clip",u,{min:f,max:x})},1323508:u=>{n.hc("Clip",u,void 0)},1323560:(u,f)=>{n.hc("Elu",u,{alpha:f})},1323618:u=>{n.hc("Gelu",u,void 0)},1323670:u=>{n.hc("Relu",u,void 0)},1323722:(u,f)=>{n.hc("LeakyRelu",u,{alpha:f})},1323786:(u,f)=>{n.hc("ThresholdedRelu",u,{alpha:f})},1323856:(u,f)=>{n.hc("Cast",u,{to:f})},1323914:u=>{n.hc("Add",u,void 0)},1323965:u=>{n.hc("Sub",u,void 0)},1324016:u=>{n.hc("Mul",u,void 0)},1324067:u=>{n.hc("Div",u,void 0)},1324118:u=>{n.hc("Pow",u,void 0)},1324169:u=>{n.hc("Equal",u,void 0)},1324222:u=>{n.hc("Greater",u,void 0)},1324277:u=>{n.hc("GreaterOrEqual",u,void 0)},1324339:u=>{n.hc("Less",u,void 0)},1324391:u=>{n.hc("LessOrEqual",u,void 0)},1324450:(u,f,x,C,I)=>{n.hc("ReduceMean",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1324625:(u,f,x,C,I)=>{n.hc("ReduceMax",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1324799:(u,f,x,C,I)=>{n.hc("ReduceMin",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1324973:(u,f,x,C,I)=>{n.hc("ReduceProd",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325148:(u,f,x,C,I)=>{n.hc("ReduceSum",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325322:(u,f,x,C,I)=>{n.hc("ReduceL1",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325495:(u,f,x,C,I)=>{n.hc("ReduceL2",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325668:(u,f,x,C,I)=>{n.hc("ReduceLogSum",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1325845:(u,f,x,C,I)=>{n.hc("ReduceSumSquare",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1326025:(u,f,x,C,I)=>{n.hc("ReduceLogSumExp",u,{keepDims:!!f,noopWithEmptyAxes:!!x,axes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1326205:u=>{n.hc("Where",u,void 0)},1326258:(u,f,x)=>{n.hc("Transpose",u,{perm:f?Array.from(Z().subarray(Number(f)>>>0,Number(x)>>>0)):[]})},1326382:(u,f,x,C)=>{n.hc("DepthToSpace",u,{blocksize:f,mode:Nt(x),format:C?"NHWC":"NCHW"})},1326515:(u,f,x,C)=>{n.hc("DepthToSpace",u,{blocksize:f,mode:Nt(x),format:C?"NHWC":"NCHW"})},1326648:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt,Nr)=>{n.hc("ConvTranspose",u,{format:Pe?"NHWC":"NCHW",autoPad:f,dilations:[x],group:C,kernelShape:[I],pads:[G,ie],strides:[ye],wIsConst:()=>!!j()[Be>>>0],outputPadding:Ze?Array.from(Z().subarray(Number(Ze)>>>0,Number(ot)>>>0)):[],outputShape:gt?Array.from(Z().subarray(Number(gt)>>>0,Number(jt)>>>0)):[],activation:Nt(Nr)})},1327081:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>{n.hc("ConvTranspose",u,{format:ye?"NHWC":"NCHW",autoPad:f,dilations:Array.from(Z().subarray(Number(x)>>>0,2+(Number(x)>>>0)>>>0)),group:C,kernelShape:Array.from(Z().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),pads:Array.from(Z().subarray(Number(G)>>>0,4+(Number(G)>>>0)>>>0)),strides:Array.from(Z().subarray(Number(ie)>>>0,2+(Number(ie)>>>0)>>>0)),wIsConst:()=>!!j()[Pe>>>0],outputPadding:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],outputShape:ot?Array.from(Z().subarray(Number(ot)>>>0,Number(gt)>>>0)):[],activation:Nt(jt)})},1327742:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt,Nr)=>{n.hc("ConvTranspose",u,{format:Pe?"NHWC":"NCHW",autoPad:f,dilations:[x],group:C,kernelShape:[I],pads:[G,ie],strides:[ye],wIsConst:()=>!!j()[Be>>>0],outputPadding:Ze?Array.from(Z().subarray(Number(Ze)>>>0,Number(ot)>>>0)):[],outputShape:gt?Array.from(Z().subarray(Number(gt)>>>0,Number(jt)>>>0)):[],activation:Nt(Nr)})},1328175:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>{n.hc("ConvTranspose",u,{format:ye?"NHWC":"NCHW",autoPad:f,dilations:Array.from(Z().subarray(Number(x)>>>0,2+(Number(x)>>>0)>>>0)),group:C,kernelShape:Array.from(Z().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),pads:Array.from(Z().subarray(Number(G)>>>0,4+(Number(G)>>>0)>>>0)),strides:Array.from(Z().subarray(Number(ie)>>>0,2+(Number(ie)>>>0)>>>0)),wIsConst:()=>!!j()[Pe>>>0],outputPadding:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],outputShape:ot?Array.from(Z().subarray(Number(ot)>>>0,Number(gt)>>>0)):[],activation:Nt(jt)})},1328836:(u,f)=>{n.hc("GlobalAveragePool",u,{format:f?"NHWC":"NCHW"})},1328927:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>{n.hc("AveragePool",u,{format:jt?"NHWC":"NCHW",auto_pad:f,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:G?Array.from(Z().subarray(Number(G)>>>0,Number(ie)>>>0)):[],kernel_shape:ye?Array.from(Z().subarray(Number(ye)>>>0,Number(Pe)>>>0)):[],pads:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],strides:ot?Array.from(Z().subarray(Number(ot)>>>0,Number(gt)>>>0)):[]})},1329406:(u,f)=>{n.hc("GlobalAveragePool",u,{format:f?"NHWC":"NCHW"})},1329497:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>{n.hc("AveragePool",u,{format:jt?"NHWC":"NCHW",auto_pad:f,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:G?Array.from(Z().subarray(Number(G)>>>0,Number(ie)>>>0)):[],kernel_shape:ye?Array.from(Z().subarray(Number(ye)>>>0,Number(Pe)>>>0)):[],pads:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],strides:ot?Array.from(Z().subarray(Number(ot)>>>0,Number(gt)>>>0)):[]})},1329976:(u,f)=>{n.hc("GlobalMaxPool",u,{format:f?"NHWC":"NCHW"})},1330063:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>{n.hc("MaxPool",u,{format:jt?"NHWC":"NCHW",auto_pad:f,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:G?Array.from(Z().subarray(Number(G)>>>0,Number(ie)>>>0)):[],kernel_shape:ye?Array.from(Z().subarray(Number(ye)>>>0,Number(Pe)>>>0)):[],pads:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],strides:ot?Array.from(Z().subarray(Number(ot)>>>0,Number(gt)>>>0)):[]})},1330538:(u,f)=>{n.hc("GlobalMaxPool",u,{format:f?"NHWC":"NCHW"})},1330625:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>{n.hc("MaxPool",u,{format:jt?"NHWC":"NCHW",auto_pad:f,ceil_mode:x,count_include_pad:C,storage_order:I,dilations:G?Array.from(Z().subarray(Number(G)>>>0,Number(ie)>>>0)):[],kernel_shape:ye?Array.from(Z().subarray(Number(ye)>>>0,Number(Pe)>>>0)):[],pads:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],strides:ot?Array.from(Z().subarray(Number(ot)>>>0,Number(gt)>>>0)):[]})},1331100:(u,f,x,C,I)=>{n.hc("Gemm",u,{alpha:f,beta:x,transA:C,transB:I})},1331204:u=>{n.hc("MatMul",u,void 0)},1331258:(u,f,x,C)=>{n.hc("ArgMax",u,{keepDims:!!f,selectLastIndex:!!x,axis:C})},1331366:(u,f,x,C)=>{n.hc("ArgMin",u,{keepDims:!!f,selectLastIndex:!!x,axis:C})},1331474:(u,f)=>{n.hc("Softmax",u,{axis:f})},1331537:(u,f)=>{n.hc("Concat",u,{axis:f})},1331597:(u,f,x,C,I)=>{n.hc("Split",u,{axis:f,numOutputs:x,splitSizes:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1331753:u=>{n.hc("Expand",u,void 0)},1331807:(u,f)=>{n.hc("Gather",u,{axis:Number(f)})},1331878:(u,f)=>{n.hc("GatherElements",u,{axis:Number(f)})},1331957:(u,f)=>{n.hc("GatherND",u,{batch_dims:Number(f)})},1332036:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze)=>{n.hc("Resize",u,{antialias:f,axes:x?Array.from(Z().subarray(Number(x)>>>0,Number(C)>>>0)):[],coordinateTransformMode:Nt(I),cubicCoeffA:G,excludeOutside:ie,extrapolationValue:ye,keepAspectRatioPolicy:Nt(Pe),mode:Nt(Be),nearestMode:Nt(Ze)})},1332398:(u,f,x,C,I,G,ie)=>{n.hc("Slice",u,{starts:f?Array.from(Z().subarray(Number(f)>>>0,Number(x)>>>0)):[],ends:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[],axes:G?Array.from(Z().subarray(Number(G)>>>0,Number(ie)>>>0)):[]})},1332662:u=>{n.hc("Tile",u,void 0)},1332714:(u,f,x)=>{n.hc("InstanceNormalization",u,{epsilon:f,format:x?"NHWC":"NCHW"})},1332828:(u,f,x)=>{n.hc("InstanceNormalization",u,{epsilon:f,format:x?"NHWC":"NCHW"})},1332942:u=>{n.hc("Range",u,void 0)},1332995:(u,f)=>{n.hc("Einsum",u,{equation:Nt(f)})},1333076:(u,f,x,C,I)=>{n.hc("Pad",u,{mode:f,value:x,pads:C?Array.from(Z().subarray(Number(C)>>>0,Number(I)>>>0)):[]})},1333219:(u,f,x,C,I,G)=>{n.hc("BatchNormalization",u,{epsilon:f,momentum:x,spatial:!!I,trainingMode:!!C,format:G?"NHWC":"NCHW"})},1333388:(u,f,x,C,I,G)=>{n.hc("BatchNormalization",u,{epsilon:f,momentum:x,spatial:!!I,trainingMode:!!C,format:G?"NHWC":"NCHW"})},1333557:(u,f,x)=>{n.hc("CumSum",u,{exclusive:Number(f),reverse:Number(x)})},1333654:(u,f,x)=>{n.hc("DequantizeLinear",u,{axis:f,blockSize:x})},1333744:(u,f,x,C,I)=>{n.hc("GridSample",u,{align_corners:f,mode:Nt(x),padding_mode:Nt(C),format:I?"NHWC":"NCHW"})},1333914:(u,f,x,C,I)=>{n.hc("GridSample",u,{align_corners:f,mode:Nt(x),padding_mode:Nt(C),format:I?"NHWC":"NCHW"})},1334084:(u,f)=>{n.hc("ScatterND",u,{reduction:Nt(f)})},1334169:(u,f,x,C,I,G,ie,ye,Pe)=>{n.hc("Attention",u,{numHeads:f,isUnidirectional:x,maskFilterValue:C,scale:I,doRotary:G,qkvHiddenSizes:ie?Array.from(Z().subarray(Number(ye)>>>0,Number(ye)+ie>>>0)):[],pastPresentShareBuffer:!!Pe})},1334441:u=>{n.hc("BiasAdd",u,void 0)},1334496:u=>{n.hc("BiasSplitGelu",u,void 0)},1334557:u=>{n.hc("FastGelu",u,void 0)},1334613:(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt,Nr,Us)=>{n.hc("Conv",u,{format:ot?"NHWC":"NCHW",auto_pad:f,dilations:x?Array.from(Z().subarray(Number(x)>>>0,Number(C)>>>0)):[],group:I,kernel_shape:G?Array.from(Z().subarray(Number(G)>>>0,Number(ie)>>>0)):[],pads:ye?Array.from(Z().subarray(Number(ye)>>>0,Number(Pe)>>>0)):[],strides:Be?Array.from(Z().subarray(Number(Be)>>>0,Number(Ze)>>>0)):[],w_is_const:()=>!!j()[Number(gt)>>>0],activation:Nt(jt),activation_params:Nr?Array.from(_e().subarray(Number(Nr)>>>0,Number(Us)>>>0)):[]})},1335197:u=>{n.hc("Gelu",u,void 0)},1335249:(u,f,x,C,I,G,ie,ye,Pe)=>{n.hc("GroupQueryAttention",u,{numHeads:f,kvNumHeads:x,scale:C,softcap:I,doRotary:G,rotaryInterleaved:ie,smoothSoftmax:ye,localWindowSize:Pe})},1335466:(u,f,x,C)=>{n.hc("LayerNormalization",u,{axis:f,epsilon:x,simplified:!!C})},1335577:(u,f,x,C)=>{n.hc("LayerNormalization",u,{axis:f,epsilon:x,simplified:!!C})},1335688:(u,f,x,C,I,G)=>{n.hc("MatMulNBits",u,{k:f,n:x,accuracyLevel:C,bits:I,blockSize:G})},1335815:(u,f,x,C,I,G)=>{n.hc("MultiHeadAttention",u,{numHeads:f,isUnidirectional:x,maskFilterValue:C,scale:I,doRotary:G})},1335974:(u,f)=>{n.hc("QuickGelu",u,{alpha:f})},1336038:(u,f,x,C,I)=>{n.hc("RotaryEmbedding",u,{interleaved:!!f,numHeads:x,rotaryEmbeddingDim:C,scale:I})},1336177:(u,f,x)=>{n.hc("SkipLayerNormalization",u,{epsilon:f,simplified:!!x})},1336279:(u,f,x)=>{n.hc("SkipLayerNormalization",u,{epsilon:f,simplified:!!x})},1336381:(u,f,x,C)=>{n.hc("GatherBlockQuantized",u,{gatherAxis:f,quantizeAxis:x,blockSize:C})},1336502:u=>{n.Wd(u)},1336536:(u,f)=>n.Zd(Number(u),Number(f),n.Cd.be,n.Cd.errors)};function Ge(u,f,x){return di(async()=>{await n.Ud(Number(u),Number(f),Number(x))})}function D(){return typeof wasmOffsetConverter<"u"}class se{constructor(f){X(this,"name","ExitStatus");this.message=`Program terminated with exit(${f})`,this.status=f}}var B=u=>{u.terminate(),u.onmessage=()=>{}},ne=[],ue=u=>{Qe.length==0&&(xs(),_r(Qe[0]));var f=Qe.pop();if(!f)return 6;Je.push(f),Mt[u.xd]=f,f.xd=u.xd;var x={yd:"run",de:u.ce,Fd:u.Fd,xd:u.xd};return f.postMessage(x,u.Ld),0},ve=0,xe=(u,f,...x)=>{for(var C=2*x.length,I=_t(),G=Jn(8*C),ie=G>>>3,ye=0;ye<x.length;ye++){var Pe=x[ye];typeof Pe=="bigint"?(H[ie+2*ye]=1n,H[ie+2*ye+1]=Pe):(H[ie+2*ye]=0n,Ae()[ie+2*ye+1>>>0]=Pe)}return u=va(u,0,C,G,f),mt(I),u};function Ne(u){if(c)return xe(0,1,u);if(T=u,!(0<ve)){for(var f of Je)B(f);for(f of Qe)B(f);Qe=[],Je=[],Mt={},le=!0}E(0,new se(u))}function Fe(u){if(c)return xe(1,0,u);Ve(u)}var Ve=u=>{if(T=u,c)throw Fe(u),"unwind";Ne(u)},Qe=[],Je=[],pt=[],Mt={},dr=u=>{var f=u.xd;delete Mt[f],Qe.push(u),Je.splice(Je.indexOf(u),1),u.xd=0,Oi(f)};function Gt(){pt.forEach(u=>u())}var _r=u=>new Promise(f=>{u.onmessage=I=>{var G=(I=I.data).yd;if(I.Ed&&I.Ed!=Xn()){var ie=Mt[I.Ed];ie?ie.postMessage(I,I.Ld):P(`Internal error! Worker sent a message "${G}" to target pthread ${I.Ed}, but that thread no longer exists!`)}else G==="checkMailbox"?Ht():G==="spawnThread"?ue(I):G==="cleanupThread"?dr(Mt[I.ee]):G==="loaded"?(u.loaded=!0,f(u)):G==="alert"?alert(`Thread ${I.fe}: ${I.text}`):I.target==="setimmediate"?u.postMessage(I):G==="callHandler"?n[I.Nd](...I.args):G&&P(`worker sent an unknown command ${G}`)},u.onerror=I=>{throw P(`worker sent an error! ${I.filename}:${I.lineno}: ${I.message}`),I};var x,C=[];for(x of[])n.propertyIsEnumerable(x)&&C.push(x);u.postMessage({yd:"load",Od:C,he:b,ie:w})});function xs(){var u=new Worker((()=>{let f=URL;return self.location.href>"file:"&&self.location.href<"file;"?new f("ort.bundle.min.mjs",self.location.href):new URL(self.location.href)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});Qe.push(u)}var Xs=u=>{Q();var f=we()[u+52>>>2>>>0];u=we()[u+56>>>2>>>0],Di(f,f-u),mt(f)},Ur=(u,f)=>{ve=0,u=Ca(u,f),0<ve?T=u:xa(u)},Ts=[];function Js(u){var f=new is(u>>>=0);if(j()[f.wd+12>>>0]==0){var x=1;j()[f.wd+12>>>0]=x}return x=0,j()[f.wd+13>>>0]=x,Ts.push(f),Ea(u),Bi(u)}var Jr=0,ut=()=>{wt(0,0);var u=Ts.pop();Li(u.Gd),Jr=0};class is{constructor(f){this.Gd=f,this.wd=f-24}}function Yr(u){throw Jr||(Jr=u>>>0),Jr}var Es=u=>{var f=Jr;if(!f)return an(0),0;var x=new is(f);we()[x.wd+16>>>2>>>0]=f;var C=we()[x.wd+4>>>2>>>0];if(!C)return an(0),f;for(var I of u){if(I===0||I===C)break;if(zi(I,C,x.wd+16))return an(I),f}return an(C),f};function zs(){return Es([])}function Bs(u){return Es([u>>>0])}function Rs(u,f){return Es([u>>>0,f>>>0])}var Ys=()=>{var u=Ts.pop();u||Ie("no exception to throw");var f=u.Gd;if(j()[u.wd+13>>>0]==0){Ts.push(u);var x=1;j()[u.wd+13>>>0]=x,x=0,j()[u.wd+12>>>0]=x}throw Jr=f};function br(u,f,x){var C=new is(u>>>=0);throw f>>>=0,x>>>=0,we()[C.wd+16>>>2>>>0]=0,we()[C.wd+4>>>2>>>0]=f,we()[C.wd+8>>>2>>>0]=x,Jr=u}function Re(u,f,x,C){return c?xe(2,1,u,f,x,C):tt(u,f,x,C)}function tt(u,f,x,C){if(u>>>=0,x>>>=0,C>>>=0,p===void 0)return 6;var I=[];return c&&I.length===0?Re(u,f>>>=0,x,C):(u={ce:x,xd:u,Fd:C,Ld:I},c?(u.yd="spawnThread",postMessage(u,I),0):ue(u))}var it=typeof TextDecoder<"u"?new TextDecoder:void 0,cr=(u,f=0,x=NaN)=>{var C=(f>>>=0)+x;for(x=f;u[x]&&!(x>=C);)++x;if(16<x-f&&u.buffer&&it)return it.decode(u.buffer instanceof ArrayBuffer?u.subarray(f,x):u.slice(f,x));for(C="";f<x;){var I=u[f++];if(128&I){var G=63&u[f++];if((224&I)==192)C+=String.fromCharCode((31&I)<<6|G);else{var ie=63&u[f++];65536>(I=(240&I)==224?(15&I)<<12|G<<6|ie:(7&I)<<18|G<<12|ie<<6|63&u[f++])?C+=String.fromCharCode(I):(I-=65536,C+=String.fromCharCode(55296|I>>10,56320|1023&I))}}else C+=String.fromCharCode(I)}return C},Nt=(u,f)=>(u>>>=0)?cr(F(),u,f):"";function zr(u,f,x){return c?xe(3,1,u,f,x):0}function Ps(u,f){if(c)return xe(4,1,u,f)}var Cs=u=>{for(var f=0,x=0;x<u.length;++x){var C=u.charCodeAt(x);127>=C?f++:2047>=C?f+=2:55296<=C&&57343>=C?(f+=4,++x):f+=3}return f},Ir=(u,f,x)=>{var C=F();if(f>>>=0,0<x){var I=f;x=f+x-1;for(var G=0;G<u.length;++G){var ie=u.charCodeAt(G);if(55296<=ie&&57343>=ie&&(ie=65536+((1023&ie)<<10)|1023&u.charCodeAt(++G)),127>=ie){if(f>=x)break;C[f++>>>0]=ie}else{if(2047>=ie){if(f+1>=x)break;C[f++>>>0]=192|ie>>6}else{if(65535>=ie){if(f+2>=x)break;C[f++>>>0]=224|ie>>12}else{if(f+3>=x)break;C[f++>>>0]=240|ie>>18,C[f++>>>0]=128|ie>>12&63}C[f++>>>0]=128|ie>>6&63}C[f++>>>0]=128|63&ie}}C[f>>>0]=0,u=f-I}else u=0;return u};function Ss(u,f){if(c)return xe(5,1,u,f)}function ks(u,f,x){if(c)return xe(6,1,u,f,x)}function os(u,f,x){return c?xe(7,1,u,f,x):0}function Ns(u,f){if(c)return xe(8,1,u,f)}function pn(u,f,x){if(c)return xe(9,1,u,f,x)}function hn(u,f,x,C){if(c)return xe(10,1,u,f,x,C)}function fn(u,f,x,C){if(c)return xe(11,1,u,f,x,C)}function mn(u,f,x,C){if(c)return xe(12,1,u,f,x,C)}function $s(u){if(c)return xe(13,1,u)}function _n(u,f){if(c)return xe(14,1,u,f)}function gn(u,f,x){if(c)return xe(15,1,u,f,x)}var wn,Wr,js=()=>Ie(""),Sr=u=>{for(var f="";F()[u>>>0];)f+=wn[F()[u++>>>0]];return f},Zs={},en={};function Br(u,f,x={}){return function(C,I,G={}){var ie=I.name;if(!C)throw new Wr(`type "${ie}" must have a positive integer typeid pointer`);if(en.hasOwnProperty(C)){if(G.Pd)return;throw new Wr(`Cannot register type '${ie}' twice`)}en[C]=I,Zs.hasOwnProperty(C)&&(I=Zs[C],delete Zs[C],I.forEach(ye=>ye()))}(u,f,x)}var ls=(u,f,x)=>{switch(f){case 1:return x?C=>j()[C>>>0]:C=>F()[C>>>0];case 2:return x?C=>K()[C>>>1>>>0]:C=>ae()[C>>>1>>>0];case 4:return x?C=>Z()[C>>>2>>>0]:C=>we()[C>>>2>>>0];case 8:return x?C=>H[C>>>3]:C=>R[C>>>3];default:throw new TypeError(`invalid integer width (${f}): ${u}`)}};function Un(u,f,x){x>>>=0,Br(u>>>=0,{name:f=Sr(f>>>0),fromWireType:C=>C,toWireType:function(C,I){if(typeof I!="bigint"&&typeof I!="number")throw I=I===null?"null":(C=typeof I)=="object"||C==="array"||C==="function"?I.toString():""+I,new TypeError(`Cannot convert "${I}" to ${this.name}`);return typeof I=="number"&&(I=BigInt(I)),I},zd:Gr,readValueFromPointer:ls(f,x,f.indexOf("u")==-1),Ad:null})}var Gr=8;function Wn(u,f,x,C){Br(u>>>=0,{name:f=Sr(f>>>0),fromWireType:function(I){return!!I},toWireType:function(I,G){return G?x:C},zd:Gr,readValueFromPointer:function(I){return this.fromWireType(F()[I>>>0])},Ad:null})}var tn=[],Rr=[];function cs(u){9<(u>>>=0)&&--Rr[u+1]==0&&(Rr[u]=void 0,tn.push(u))}var gr=u=>{if(!u)throw new Wr("Cannot use deleted val. handle = "+u);return Rr[u]},vr=u=>{switch(u){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let f=tn.pop()||Rr.length;return Rr[f]=u,Rr[f+1]=1,f}};function rn(u){return this.fromWireType(we()[u>>>2>>>0])}var Gn={name:"emscripten::val",fromWireType:u=>{var f=gr(u);return cs(u),f},toWireType:(u,f)=>vr(f),zd:Gr,readValueFromPointer:rn,Ad:null};function Vs(u){return Br(u>>>0,Gn)}var Kn=(u,f)=>{switch(f){case 4:return function(x){return this.fromWireType(_e()[x>>>2>>>0])};case 8:return function(x){return this.fromWireType(Ae()[x>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${u}`)}};function he(u,f,x){x>>>=0,Br(u>>>=0,{name:f=Sr(f>>>0),fromWireType:C=>C,toWireType:(C,I)=>I,zd:Gr,readValueFromPointer:Kn(f,x),Ad:null})}function O(u,f,x,C,I){if(u>>>=0,x>>>=0,f=Sr(f>>>0),I===-1&&(I=4294967295),I=ye=>ye,C===0){var G=32-8*x;I=ye=>ye<<G>>>G}var ie=f.includes("unsigned")?function(ye,Pe){return Pe>>>0}:function(ye,Pe){return Pe};Br(u,{name:f,fromWireType:I,toWireType:ie,zd:Gr,readValueFromPointer:ls(f,x,C!==0),Ad:null})}function U(u,f,x){function C(G){var ie=we()[G>>>2>>>0];return G=we()[G+4>>>2>>>0],new I(j().buffer,G,ie)}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];Br(u>>>=0,{name:x=Sr(x>>>0),fromWireType:C,zd:Gr,readValueFromPointer:C},{Pd:!0})}function re(u,f){Br(u>>>=0,{name:f=Sr(f>>>0),fromWireType:function(x){for(var C,I=we()[x>>>2>>>0],G=x+4,ie=G,ye=0;ye<=I;++ye){var Pe=G+ye;ye!=I&&F()[Pe>>>0]!=0||(ie=Nt(ie,Pe-ie),C===void 0?C=ie:(C+="\0",C+=ie),ie=Pe+1)}return Zr(x),C},toWireType:function(x,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var I=typeof C=="string";if(!(I||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new Wr("Cannot pass non-string to std::string");var G=I?Cs(C):C.length,ie=xn(4+G+1),ye=ie+4;if(we()[ie>>>2>>>0]=G,I)Ir(C,ye,G+1);else if(I)for(I=0;I<G;++I){var Pe=C.charCodeAt(I);if(255<Pe)throw Zr(ie),new Wr("String has UTF-16 code units that do not fit in 8 bits");F()[ye+I>>>0]=Pe}else for(I=0;I<G;++I)F()[ye+I>>>0]=C[I];return x!==null&&x.push(Zr,ie),ie},zd:Gr,readValueFromPointer:rn,Ad(x){Zr(x)}})}var ce=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,pe=(u,f)=>{for(var x=u>>1,C=x+f/2;!(x>=C)&&ae()[x>>>0];)++x;if(32<(x<<=1)-u&&ce)return ce.decode(F().slice(u,x));for(x="",C=0;!(C>=f/2);++C){var I=K()[u+2*C>>>1>>>0];if(I==0)break;x+=String.fromCharCode(I)}return x},Se=(u,f,x)=>{if(x??(x=2147483647),2>x)return 0;var C=f;x=(x-=2)<2*u.length?x/2:u.length;for(var I=0;I<x;++I){var G=u.charCodeAt(I);K()[f>>>1>>>0]=G,f+=2}return K()[f>>>1>>>0]=0,f-C},We=u=>2*u.length,Xe=(u,f)=>{for(var x=0,C="";!(x>=f/4);){var I=Z()[u+4*x>>>2>>>0];if(I==0)break;++x,65536<=I?(I-=65536,C+=String.fromCharCode(55296|I>>10,56320|1023&I)):C+=String.fromCharCode(I)}return C},He=(u,f,x)=>{if(f>>>=0,x??(x=2147483647),4>x)return 0;var C=f;x=C+x-4;for(var I=0;I<u.length;++I){var G=u.charCodeAt(I);if(55296<=G&&57343>=G&&(G=65536+((1023&G)<<10)|1023&u.charCodeAt(++I)),Z()[f>>>2>>>0]=G,(f+=4)+4>x)break}return Z()[f>>>2>>>0]=0,f-C},et=u=>{for(var f=0,x=0;x<u.length;++x){var C=u.charCodeAt(x);55296<=C&&57343>=C&&++x,f+=4}return f};function ft(u,f,x){if(u>>>=0,f>>>=0,x=Sr(x>>>=0),f===2)var C=pe,I=Se,G=We,ie=ye=>ae()[ye>>>1>>>0];else f===4&&(C=Xe,I=He,G=et,ie=ye=>we()[ye>>>2>>>0]);Br(u,{name:x,fromWireType:ye=>{for(var Pe,Be=we()[ye>>>2>>>0],Ze=ye+4,ot=0;ot<=Be;++ot){var gt=ye+4+ot*f;ot!=Be&&ie(gt)!=0||(Ze=C(Ze,gt-Ze),Pe===void 0?Pe=Ze:(Pe+="\0",Pe+=Ze),Ze=gt+f)}return Zr(ye),Pe},toWireType:(ye,Pe)=>{if(typeof Pe!="string")throw new Wr(`Cannot pass non-string to C++ string type ${x}`);var Be=G(Pe),Ze=xn(4+Be+f);return we()[Ze>>>2>>>0]=Be/f,I(Pe,Ze+4,Be+f),ye!==null&&ye.push(Zr,Ze),Ze},zd:Gr,readValueFromPointer:rn,Ad(ye){Zr(ye)}})}function kt(u,f){Br(u>>>=0,{Qd:!0,name:f=Sr(f>>>0),zd:0,fromWireType:()=>{},toWireType:()=>{}})}function It(u){ba(u>>>0,!l,1,!o,131072,!1),Gt()}var Qt=u=>{if(!le)try{if(u(),!(0<ve))try{c?xa(T):Ve(T)}catch(f){f instanceof se||f=="unwind"||E(0,f)}}catch(f){f instanceof se||f=="unwind"||E(0,f)}};function Lt(u){u>>>=0,typeof Atomics.ge=="function"&&(Atomics.ge(Z(),u>>>2,u).value.then(Ht),u+=128,Atomics.store(Z(),u>>>2,1))}var Ht=()=>{var u=Xn();u&&(Lt(u),Qt(Fi))};function kr(u,f){(u>>>=0)==f>>>0?setTimeout(Ht):c?postMessage({Ed:u,yd:"checkMailbox"}):(u=Mt[u])&&u.postMessage({yd:"checkMailbox"})}var xr=[];function us(u,f,x,C,I){for(f>>>=0,C/=2,xr.length=C,x=I>>>0>>>3,I=0;I<C;I++)xr[I]=H[x+2*I]?H[x+2*I+1]:Ae()[x+2*I+1>>>0];return(f?je[f]:zl[u])(...xr)}var $r=()=>{ve=0};function As(u){u>>>=0,c?postMessage({yd:"cleanupThread",ee:u}):dr(Mt[u])}function Xt(u){}var ir=(u,f)=>{var x=en[u];if(x===void 0)throw u=Ai(u),x=Sr(u),Zr(u),new Wr(`${f} has unknown type ${x}`);return x},Tr=(u,f,x)=>{var C=[];return u=u.toWireType(C,x),C.length&&(we()[f>>>2>>>0]=vr(C)),u};function ds(u,f,x){return f>>>=0,x>>>=0,u=gr(u>>>0),f=ir(f,"emval::as"),Tr(f,x,u)}function Is(u,f){return f>>>=0,u=gr(u>>>0),(f=ir(f,"emval::as")).toWireType(null,u)}var Yt=u=>{try{u()}catch(f){Ie(f)}},wr=0,Ut=null,sr=0,Zt=[],or={},pr={},yn=0,Mn=null,dl=[];function di(u){return function(f){if(!le){if(wr===0){var x=!1,C=!1;f((I=0)=>{if(!le&&(sr=I,x=!0,C)){wr=2,Yt(()=>go(Ut)),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.resume(),I=!1;try{var G=function(){var Pe=Z()[Ut+8>>>2>>>0];return Pe=De[pr[Pe]],--ve,Pe()}()}catch(Pe){G=Pe,I=!0}var ie=!1;if(!Ut){var ye=Mn;ye&&(Mn=null,(I?ye.reject:ye.resolve)(G),ie=!0)}if(I&&!ie)throw G}}),C=!0,x||(wr=1,Ut=function(){var I=xn(65548),G=I+12;we()[I>>>2>>>0]=G,we()[I+4>>>2>>>0]=G+65536,G=Zt[0];var ie=or[G];return ie===void 0&&(ie=yn++,or[G]=ie,pr[ie]=G),G=ie,Z()[I+8>>>2>>>0]=G,I}(),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.pause(),Yt(()=>mo(Ut)))}else wr===2?(wr=0,Yt(wo),Zr(Ut),Ut=null,dl.forEach(Qt)):Ie(`invalid state: ${wr}`);return sr}}(f=>{u().then(f)})}function pl(u){return u>>>=0,di(async()=>{var f=await gr(u);return vr(f)})}var Os=[];function hl(u,f,x,C){return x>>>=0,C>>>=0,(u=Os[u>>>0])(null,f=gr(f>>>0),x,C)}var fl={},Hn=u=>{var f=fl[u];return f===void 0?Sr(u):f};function ml(u,f,x,C,I){return x>>>=0,C>>>=0,I>>>=0,(u=Os[u>>>0])(f=gr(f>>>0),f[x=Hn(x)],C,I)}var pi=()=>typeof globalThis=="object"?globalThis:Function("return this")();function hi(u){return(u>>>=0)==0?vr(pi()):(u=Hn(u),vr(pi()[u]))}var _l=u=>{var f=Os.length;return Os.push(u),f},gl=(u,f)=>{for(var x=Array(u),C=0;C<u;++C)x[C]=ir(we()[f+4*C>>>2>>>0],"parameter "+C);return x},ua=(u,f)=>Object.defineProperty(f,"name",{value:u});function wl(u,f,x){var C=(f=gl(u,f>>>0)).shift();u--;var I=`return function (obj, func, destructorsRef, args) {
`,G=0,ie=[];x===0&&ie.push("obj");for(var ye=["retType"],Pe=[C],Be=0;Be<u;++Be)ie.push("arg"+Be),ye.push("argType"+Be),Pe.push(f[Be]),I+=`  var arg${Be} = argType${Be}.readValueFromPointer(args${G?"+"+G:""});
`,G+=f[Be].zd;return I+=`  var rv = ${x===1?"new func":"func.call"}(${ie.join(", ")});
`,C.Qd||(ye.push("emval_returnValue"),Pe.push(Tr),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),ye.push(I+`};
`),u=function(Ze){var ot=Function;if(!(ot instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof ot} which is not a function`);var gt=ua(ot.name||"unknownFunctionName",function(){});return gt.prototype=ot.prototype,gt=new gt,(Ze=ot.apply(gt,Ze))instanceof Object?Ze:gt}(ye)(...Pe),x=`methodCaller<(${f.map(Ze=>Ze.name).join(", ")}) => ${C.name}>`,_l(ua(x,u))}function fi(u){return u=Hn(u>>>0),vr(n[u])}function yl(u,f){return f>>>=0,u=gr(u>>>0),f=gr(f),vr(u[f])}function mi(u){9<(u>>>=0)&&(Rr[u+1]+=1)}function Sd(){return vr([])}function Ml(u){u=gr(u>>>0);for(var f=Array(u.length),x=0;x<u.length;x++)f[x]=u[x];return vr(f)}function _i(u){return vr(Hn(u>>>0))}function bl(){return vr({})}function da(u){for(var f=gr(u>>>=0);f.length;){var x=f.pop();f.pop()(x)}cs(u)}function vl(u,f,x){f>>>=0,x>>>=0,u=gr(u>>>0),f=gr(f),x=gr(x),u[f]=x}function xl(u,f){return f>>>=0,u=(u=ir(u>>>0,"_emval_take_value")).readValueFromPointer(f),vr(u)}function Tl(u,f){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),f>>>=0,u=new Date(1e3*u),Z()[f>>>2>>>0]=u.getUTCSeconds(),Z()[f+4>>>2>>>0]=u.getUTCMinutes(),Z()[f+8>>>2>>>0]=u.getUTCHours(),Z()[f+12>>>2>>>0]=u.getUTCDate(),Z()[f+16>>>2>>>0]=u.getUTCMonth(),Z()[f+20>>>2>>>0]=u.getUTCFullYear()-1900,Z()[f+24>>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,Z()[f+28>>>2>>>0]=u}var gi=u=>u%4==0&&(u%100!=0||u%400==0),wi=[0,31,60,91,121,152,182,213,244,274,305,335],yi=[0,31,59,90,120,151,181,212,243,273,304,334];function El(u,f){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),f>>>=0,u=new Date(1e3*u),Z()[f>>>2>>>0]=u.getSeconds(),Z()[f+4>>>2>>>0]=u.getMinutes(),Z()[f+8>>>2>>>0]=u.getHours(),Z()[f+12>>>2>>>0]=u.getDate(),Z()[f+16>>>2>>>0]=u.getMonth(),Z()[f+20>>>2>>>0]=u.getFullYear()-1900,Z()[f+24>>>2>>>0]=u.getDay();var x=(gi(u.getFullYear())?wi:yi)[u.getMonth()]+u.getDate()-1|0;Z()[f+28>>>2>>>0]=x,Z()[f+36>>>2>>>0]=-60*u.getTimezoneOffset(),x=new Date(u.getFullYear(),6,1).getTimezoneOffset();var C=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=0|(x!=C&&u.getTimezoneOffset()==Math.min(C,x)),Z()[f+32>>>2>>>0]=u}function pa(u){u>>>=0;var f=new Date(Z()[u+20>>>2>>>0]+1900,Z()[u+16>>>2>>>0],Z()[u+12>>>2>>>0],Z()[u+8>>>2>>>0],Z()[u+4>>>2>>>0],Z()[u>>>2>>>0],0),x=Z()[u+32>>>2>>>0],C=f.getTimezoneOffset(),I=new Date(f.getFullYear(),6,1).getTimezoneOffset(),G=new Date(f.getFullYear(),0,1).getTimezoneOffset(),ie=Math.min(G,I);return 0>x?Z()[u+32>>>2>>>0]=+(I!=G&&ie==C):0<x!=(ie==C)&&(I=Math.max(G,I),f.setTime(f.getTime()+6e4*((0<x?ie:I)-C))),Z()[u+24>>>2>>>0]=f.getDay(),x=(gi(f.getFullYear())?wi:yi)[f.getMonth()]+f.getDate()-1|0,Z()[u+28>>>2>>>0]=x,Z()[u>>>2>>>0]=f.getSeconds(),Z()[u+4>>>2>>>0]=f.getMinutes(),Z()[u+8>>>2>>>0]=f.getHours(),Z()[u+12>>>2>>>0]=f.getDate(),Z()[u+16>>>2>>>0]=f.getMonth(),Z()[u+20>>>2>>>0]=f.getYear(),u=f.getTime(),BigInt(isNaN(u)?-1:u/1e3)}function ha(u,f,x,C,I,G,ie){return c?xe(16,1,u,f,x,C,I,G,ie):-52}function Mi(u,f,x,C,I,G){if(c)return xe(17,1,u,f,x,C,I,G)}var sn={},nn=()=>performance.timeOrigin+performance.now();function bi(u,f){if(c)return xe(18,1,u,f);if(sn[u]&&(clearTimeout(sn[u].id),delete sn[u]),!f)return 0;var x=setTimeout(()=>{delete sn[u],Qt(()=>Ta(u,performance.timeOrigin+performance.now()))},f);return sn[u]={id:x,ke:f},0}function kd(u,f,x,C){u>>>=0,f>>>=0,x>>>=0,C>>>=0;var I=new Date().getFullYear(),G=new Date(I,0,1).getTimezoneOffset();I=new Date(I,6,1).getTimezoneOffset();var ie=Math.max(G,I);we()[u>>>2>>>0]=60*ie,Z()[f>>>2>>>0]=+(G!=I),u=(f=ye=>{var Pe=Math.abs(ye);return`UTC${0<=ye?"-":"+"}${String(Math.floor(Pe/60)).padStart(2,"0")}${String(Pe%60).padStart(2,"0")}`})(G),f=f(I),I<G?(Ir(u,x,17),Ir(f,C,17)):(Ir(u,C,17),Ir(f,x,17))}var Pl=()=>Date.now();function $d(u,f,x){return 0<=u&&3>=u?(u===0?u=Date.now():u=performance.timeOrigin+performance.now(),H[x>>>0>>>3]=BigInt(Math.round(1e6*u)),0):28}var fa=[],ma=(u,f)=>{fa.length=0;for(var x;x=F()[u++>>>0];){var C=x!=105;f+=(C&=x!=112)&&f%8?4:0,fa.push(x==112?we()[f>>>2>>>0]:x==106?H[f>>>3]:x==105?Z()[f>>>2>>>0]:Ae()[f>>>3>>>0]),f+=C?8:4}return fa};function Cl(u,f,x){return u>>>=0,f=ma(f>>>0,x>>>0),je[u](...f)}function Sl(u,f,x){return u>>>=0,f=ma(f>>>0,x>>>0),je[u](...f)}var kl=()=>{};function $l(u,f){return P(Nt(u>>>0,f>>>0))}var Al=()=>{throw ve+=1,"unwind"};function _a(){return 4294901760}var Il=()=>navigator.hardwareConcurrency;function Ol(){return Ie("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Fl(u){u>>>=0;var f=F().length;if(u<=f||4294901760<u)return!1;for(var x=1;4>=x;x*=2){var C=f*(1+.2/x);C=Math.min(C,u+100663296);e:{C=(Math.min(4294901760,65536*Math.ceil(Math.max(u,C)/65536))-b.buffer.byteLength+65535)/65536|0;try{b.grow(C),Q();var I=1;break e}catch{}I=void 0}if(I)return!0}return!1}var bn=()=>(Ie("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),vn={},vi=u=>{u.forEach(f=>{bn()})};function xi(){var u=Error().stack.toString().split(`
`);return u[0]=="Error"&&u.shift(),vi(u),vn.Kd=bn(),vn.ae=u,vn.Kd}function Dl(u,f,x){if(u>>>=0,f>>>=0,vn.Kd==u)var C=vn.ae;else(C=Error().stack.toString().split(`
`))[0]=="Error"&&C.shift(),vi(C);for(var I=3;C[I]&&bn()!=u;)++I;for(u=0;u<x&&C[u+I];++u)Z()[f+4*u>>>2>>>0]=bn();return u}var ga,qn={},Ti=()=>{if(!ga){var u,f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(u in qn)qn[u]===void 0?delete f[u]:f[u]=qn[u];var x=[];for(u in f)x.push(`${u}=${f[u]}`);ga=x}return ga};function Ei(u,f){if(c)return xe(19,1,u,f);u>>>=0,f>>>=0;var x=0;return Ti().forEach((C,I)=>{var G=f+x;for(I=we()[u+4*I>>>2>>>0]=G,G=0;G<C.length;++G)j()[I++>>>0]=C.charCodeAt(G);j()[I>>>0]=0,x+=C.length+1}),0}function wa(u,f){if(c)return xe(20,1,u,f);u>>>=0,f>>>=0;var x=Ti();we()[u>>>2>>>0]=x.length;var C=0;return x.forEach(I=>C+=I.length+1),we()[f>>>2>>>0]=C,0}function Pi(u){return c?xe(21,1,u):52}function Ci(u,f,x,C){return c?xe(22,1,u,f,x,C):52}function ya(u,f,x,C){return c?xe(23,1,u,f,x,C):70}var Ll=[null,[],[]];function Si(u,f,x,C){if(c)return xe(24,1,u,f,x,C);f>>>=0,x>>>=0,C>>>=0;for(var I=0,G=0;G<x;G++){var ie=we()[f>>>2>>>0],ye=we()[f+4>>>2>>>0];f+=8;for(var Pe=0;Pe<ye;Pe++){var Be=F()[ie+Pe>>>0],Ze=Ll[u];Be===0||Be===10?((u===1?k:P)(cr(Ze)),Ze.length=0):Ze.push(Be)}I+=ye}return we()[C>>>2>>>0]=I,0}function ki(u){return u>>>0}c||function(){for(var u=n.numThreads-1;u--;)xs();ne.unshift(()=>{Ce++,function(f){c?f():Promise.all(Qe.map(_r)).then(f)}(()=>Oe())})}();for(var $i=Array(256),Qn=0;256>Qn;++Qn)$i[Qn]=String.fromCharCode(Qn);wn=$i,Wr=n.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},n.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Rr.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Rr.length/2-5-tn.length;var De,zl=[Ne,Fe,Re,zr,Ps,Ss,ks,os,Ns,pn,hn,fn,mn,$s,_n,gn,ha,Mi,bi,Ei,wa,Pi,Ci,ya,Si];(async function(){function u(C,I){return De=C.exports,De=function(){var G=De,ie={};for(let[ye,Pe]of Object.entries(G))ie[ye]=typeof Pe=="function"?(...Be)=>{Zt.push(ye);try{return Pe(...Be)}finally{le||(Zt.pop(),Ut&&wr===1&&Zt.length===0&&(wr=0,ve+=1,Yt(_o),typeof Fibers<"u"&&Fibers.le()))}}:Pe;return ie}(),De=function(){var G=De,ie=Pe=>Be=>Pe(Be)>>>0,ye=Pe=>()=>Pe()>>>0;return(G=Object.assign({},G)).Cb=ie(G.Cb),G.fc=ye(G.fc),G.ic=ie(G.ic),G.vc=ie(G.vc),G.wc=ye(G.wc),G.Ac=ie(G.Ac),G}(),pt.push(De.jc),w=I,Oe(),De}Ce++;var f=ze();if(n.instantiateWasm)return new Promise(C=>{n.instantiateWasm(f,(I,G)=>{u(I,G),C(I.exports)})});if(c)return new Promise(C=>{qe=I=>{var G=new WebAssembly.Instance(I,ze());C(u(G,I))}});fe??(fe=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",A):A+"ort-wasm-simd-threaded.jsep.wasm":new URL("/assets/ort-wasm-simd-threaded.jsep-BAR87mbD.wasm",self.location.href).href);try{var x=await async function(C){var I=fe;if(!ee&&typeof WebAssembly.instantiateStreaming=="function"&&!de(I))try{var G=fetch(I,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(G,C)}catch(ie){P(`wasm streaming compile failed: ${ie}`),P("falling back to ArrayBuffer instantiation")}return async function(ie,ye){try{var Pe=await async function(Be){if(!ee)try{var Ze=await h(Be);return new Uint8Array(Ze)}catch{}if(Be==fe&&ee)Be=new Uint8Array(ee);else{if(!g)throw"both async and sync fetching of the wasm failed";Be=g(Be)}return Be}(ie);return await WebAssembly.instantiate(Pe,ye)}catch(Be){P(`failed to asynchronously prepare wasm: ${Be}`),Ie(Be)}}(I,C)}(f);return u(x.instance,x.module)}catch(C){return a(C),Promise.reject(C)}})();var Ai=u=>(Ai=De.Cb)(u),Ma=()=>(Ma=De.Db)();n._OrtInit=(u,f)=>(n._OrtInit=De.Eb)(u,f),n._OrtGetLastError=(u,f)=>(n._OrtGetLastError=De.Fb)(u,f),n._OrtCreateSessionOptions=(u,f,x,C,I,G,ie,ye,Pe,Be)=>(n._OrtCreateSessionOptions=De.Gb)(u,f,x,C,I,G,ie,ye,Pe,Be),n._OrtAppendExecutionProvider=(u,f)=>(n._OrtAppendExecutionProvider=De.Hb)(u,f),n._OrtAddFreeDimensionOverride=(u,f,x)=>(n._OrtAddFreeDimensionOverride=De.Ib)(u,f,x),n._OrtAddSessionConfigEntry=(u,f,x)=>(n._OrtAddSessionConfigEntry=De.Jb)(u,f,x),n._OrtReleaseSessionOptions=u=>(n._OrtReleaseSessionOptions=De.Kb)(u),n._OrtCreateSession=(u,f,x)=>(n._OrtCreateSession=De.Lb)(u,f,x),n._OrtReleaseSession=u=>(n._OrtReleaseSession=De.Mb)(u),n._OrtGetInputOutputCount=(u,f,x)=>(n._OrtGetInputOutputCount=De.Nb)(u,f,x),n._OrtGetInputName=(u,f)=>(n._OrtGetInputName=De.Ob)(u,f),n._OrtGetOutputName=(u,f)=>(n._OrtGetOutputName=De.Pb)(u,f),n._OrtFree=u=>(n._OrtFree=De.Qb)(u),n._OrtCreateTensor=(u,f,x,C,I,G)=>(n._OrtCreateTensor=De.Rb)(u,f,x,C,I,G),n._OrtGetTensorData=(u,f,x,C,I)=>(n._OrtGetTensorData=De.Sb)(u,f,x,C,I),n._OrtReleaseTensor=u=>(n._OrtReleaseTensor=De.Tb)(u),n._OrtCreateRunOptions=(u,f,x,C)=>(n._OrtCreateRunOptions=De.Ub)(u,f,x,C),n._OrtAddRunConfigEntry=(u,f,x)=>(n._OrtAddRunConfigEntry=De.Vb)(u,f,x),n._OrtReleaseRunOptions=u=>(n._OrtReleaseRunOptions=De.Wb)(u),n._OrtCreateBinding=u=>(n._OrtCreateBinding=De.Xb)(u),n._OrtBindInput=(u,f,x)=>(n._OrtBindInput=De.Yb)(u,f,x),n._OrtBindOutput=(u,f,x,C)=>(n._OrtBindOutput=De.Zb)(u,f,x,C),n._OrtClearBoundOutputs=u=>(n._OrtClearBoundOutputs=De._b)(u),n._OrtReleaseBinding=u=>(n._OrtReleaseBinding=De.$b)(u),n._OrtRunWithBinding=(u,f,x,C,I)=>(n._OrtRunWithBinding=De.ac)(u,f,x,C,I),n._OrtRun=(u,f,x,C,I,G,ie,ye)=>(n._OrtRun=De.bc)(u,f,x,C,I,G,ie,ye),n._OrtEndProfiling=u=>(n._OrtEndProfiling=De.cc)(u),n._JsepOutput=(u,f,x)=>(n._JsepOutput=De.dc)(u,f,x),n._JsepGetNodeName=u=>(n._JsepGetNodeName=De.ec)(u);var Xn=()=>(Xn=De.fc)(),Zr=n._free=u=>(Zr=n._free=De.gc)(u),xn=n._malloc=u=>(xn=n._malloc=De.ic)(u),ba=(u,f,x,C,I,G)=>(ba=De.kc)(u,f,x,C,I,G),Ii=()=>(Ii=De.lc)(),va=(u,f,x,C,I)=>(va=De.mc)(u,f,x,C,I),Oi=u=>(Oi=De.nc)(u),xa=u=>(xa=De.oc)(u),Ta=(u,f)=>(Ta=De.pc)(u,f),Fi=()=>(Fi=De.qc)(),wt=(u,f)=>(wt=De.rc)(u,f),an=u=>(an=De.sc)(u),Di=(u,f)=>(Di=De.tc)(u,f),mt=u=>(mt=De.uc)(u),Jn=u=>(Jn=De.vc)(u),_t=()=>(_t=De.wc)(),Li=u=>(Li=De.xc)(u),Ea=u=>(Ea=De.yc)(u),zi=(u,f,x)=>(zi=De.zc)(u,f,x),Bi=u=>(Bi=De.Ac)(u),Pa=n.dynCall_iii=(u,f,x)=>(Pa=n.dynCall_iii=De.Bc)(u,f,x),Ri=n.dynCall_vi=(u,f)=>(Ri=n.dynCall_vi=De.Cc)(u,f),Ca=n.dynCall_ii=(u,f)=>(Ca=n.dynCall_ii=De.Dc)(u,f),Sa=n.dynCall_vii=(u,f,x)=>(Sa=n.dynCall_vii=De.Ec)(u,f,x),Ni=n.dynCall_iiii=(u,f,x,C)=>(Ni=n.dynCall_iiii=De.Fc)(u,f,x,C),ji=n.dynCall_viii=(u,f,x,C)=>(ji=n.dynCall_viii=De.Gc)(u,f,x,C),ka=n.dynCall_iiiii=(u,f,x,C,I)=>(ka=n.dynCall_iiiii=De.Hc)(u,f,x,C,I),Vi=n.dynCall_viiii=(u,f,x,C,I)=>(Vi=n.dynCall_viiii=De.Ic)(u,f,x,C,I),Ui=n.dynCall_viiiiii=(u,f,x,C,I,G,ie)=>(Ui=n.dynCall_viiiiii=De.Jc)(u,f,x,C,I,G,ie),$a=n.dynCall_viiiiiii=(u,f,x,C,I,G,ie,ye)=>($a=n.dynCall_viiiiiii=De.Kc)(u,f,x,C,I,G,ie,ye),Wi=n.dynCall_ji=(u,f)=>(Wi=n.dynCall_ji=De.Lc)(u,f),Gi=n.dynCall_v=u=>(Gi=n.dynCall_v=De.Mc)(u),Aa=n.dynCall_viiiii=(u,f,x,C,I,G)=>(Aa=n.dynCall_viiiii=De.Nc)(u,f,x,C,I,G),Ki=n.dynCall_i=u=>(Ki=n.dynCall_i=De.Oc)(u),Hi=n.dynCall_fii=(u,f,x)=>(Hi=n.dynCall_fii=De.Pc)(u,f,x),Ia=n.dynCall_viiiiiiii=(u,f,x,C,I,G,ie,ye,Pe)=>(Ia=n.dynCall_viiiiiiii=De.Qc)(u,f,x,C,I,G,ie,ye,Pe),qi=n.dynCall_viiiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be,Ze)=>(qi=n.dynCall_viiiiiiiiii=De.Rc)(u,f,x,C,I,G,ie,ye,Pe,Be,Ze),Qi=n.dynCall_jiii=(u,f,x,C)=>(Qi=n.dynCall_jiii=De.Sc)(u,f,x,C),Oa=n.dynCall_dii=(u,f,x)=>(Oa=n.dynCall_dii=De.Tc)(u,f,x),Xi=n.dynCall_viiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be)=>(Xi=n.dynCall_viiiiiiiii=De.Uc)(u,f,x,C,I,G,ie,ye,Pe,Be),Ji=n.dynCall_viiiiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot)=>(Ji=n.dynCall_viiiiiiiiiii=De.Vc)(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot),Fa=n.dynCall_iiiiii=(u,f,x,C,I,G)=>(Fa=n.dynCall_iiiiii=De.Wc)(u,f,x,C,I,G),Yi=n.dynCall_iij=(u,f,x)=>(Yi=n.dynCall_iij=De.Xc)(u,f,x),Zi=n.dynCall_iiiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be)=>(Zi=n.dynCall_iiiiiiiiii=De.Yc)(u,f,x,C,I,G,ie,ye,Pe,Be),eo=n.dynCall_iiiiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be,Ze)=>(eo=n.dynCall_iiiiiiiiiii=De.Zc)(u,f,x,C,I,G,ie,ye,Pe,Be,Ze),to=n.dynCall_vij=(u,f,x)=>(to=n.dynCall_vij=De._c)(u,f,x),Da=n.dynCall_iiif=(u,f,x,C)=>(Da=n.dynCall_iiif=De.$c)(u,f,x,C),ro=n.dynCall_iiij=(u,f,x,C)=>(ro=n.dynCall_iiij=De.ad)(u,f,x,C),so=n.dynCall_fiii=(u,f,x,C)=>(so=n.dynCall_fiii=De.bd)(u,f,x,C),La=n.dynCall_viiiiiiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)=>(La=n.dynCall_viiiiiiiiiiiii=De.cd)(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt),no=n.dynCall_vjiii=(u,f,x,C,I)=>(no=n.dynCall_vjiii=De.dd)(u,f,x,C,I),ao=n.dynCall_vif=(u,f,x)=>(ao=n.dynCall_vif=De.ed)(u,f,x),za=n.dynCall_iiiiiii=(u,f,x,C,I,G,ie)=>(za=n.dynCall_iiiiiii=De.fd)(u,f,x,C,I,G,ie),io=n.dynCall_iiiij=(u,f,x,C,I)=>(io=n.dynCall_iiiij=De.gd)(u,f,x,C,I),oo=n.dynCall_iiiiiiii=(u,f,x,C,I,G,ie,ye)=>(oo=n.dynCall_iiiiiiii=De.hd)(u,f,x,C,I,G,ie,ye),Ba=n.dynCall_viiiiiiiiiiii=(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt)=>(Ba=n.dynCall_viiiiiiiiiiii=De.id)(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt),lo=n.dynCall_diii=(u,f,x,C)=>(lo=n.dynCall_diii=De.jd)(u,f,x,C),co=n.dynCall_jiiii=(u,f,x,C,I)=>(co=n.dynCall_jiiii=De.kd)(u,f,x,C,I),Ra=n.dynCall_viiij=(u,f,x,C,I)=>(Ra=n.dynCall_viiij=De.ld)(u,f,x,C,I),uo=n.dynCall_fiiii=(u,f,x,C,I)=>(uo=n.dynCall_fiiii=De.md)(u,f,x,C,I),po=n.dynCall_viiif=(u,f,x,C,I)=>(po=n.dynCall_viiif=De.nd)(u,f,x,C,I),Na=n.dynCall_diiii=(u,f,x,C,I)=>(Na=n.dynCall_diiii=De.od)(u,f,x,C,I),ho=n.dynCall_viiid=(u,f,x,C,I)=>(ho=n.dynCall_viiid=De.pd)(u,f,x,C,I),fo=n.dynCall_iiiijii=(u,f,x,C,I,G,ie)=>(fo=n.dynCall_iiiijii=De.qd)(u,f,x,C,I,G,ie),ja=n.dynCall_iiiiiij=(u,f,x,C,I,G,ie)=>(ja=n.dynCall_iiiiiij=De.rd)(u,f,x,C,I,G,ie),mo=u=>(mo=De.sd)(u),_o=()=>(_o=De.td)(),go=u=>(go=De.ud)(u),wo=()=>(wo=De.vd)();function yo(u,f,x){var C=_t();try{Sa(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function Bl(u,f,x){var C=_t();try{return Pa(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function Rl(u,f){var x=_t();try{Ri(u,f)}catch(C){if(mt(x),C!==C+0)throw C;wt(1,0)}}function Nl(u,f){var x=_t();try{return Ca(u,f)}catch(C){if(mt(x),C!==C+0)throw C;wt(1,0)}}function jl(u,f,x,C){var I=_t();try{return Ni(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;wt(1,0)}}function Mo(u,f,x,C,I){var G=_t();try{Vi(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function Vl(u,f,x,C,I){var G=_t();try{return ka(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function Ul(u,f,x,C){var I=_t();try{ji(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;wt(1,0)}}function Wl(u,f,x,C,I,G,ie){var ye=_t();try{return za(u,f,x,C,I,G,ie)}catch(Pe){if(mt(ye),Pe!==Pe+0)throw Pe;wt(1,0)}}function Gl(u){var f=_t();try{Gi(u)}catch(x){if(mt(f),x!==x+0)throw x;wt(1,0)}}function bo(u,f,x){var C=_t();try{return Yi(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function Kl(u,f,x,C,I,G){var ie=_t();try{Aa(u,f,x,C,I,G)}catch(ye){if(mt(ie),ye!==ye+0)throw ye;wt(1,0)}}function Hl(u,f,x){var C=_t();try{to(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function ql(u,f,x,C,I,G,ie){var ye=_t();try{Ui(u,f,x,C,I,G,ie)}catch(Pe){if(mt(ye),Pe!==Pe+0)throw Pe;wt(1,0)}}function Ql(u,f,x,C,I,G,ie,ye){var Pe=_t();try{$a(u,f,x,C,I,G,ie,ye)}catch(Be){if(mt(Pe),Be!==Be+0)throw Be;wt(1,0)}}function vo(u,f,x,C,I,G){var ie=_t();try{return Fa(u,f,x,C,I,G)}catch(ye){if(mt(ie),ye!==ye+0)throw ye;wt(1,0)}}function Xl(u,f,x,C,I,G,ie,ye){var Pe=_t();try{return oo(u,f,x,C,I,G,ie,ye)}catch(Be){if(mt(Pe),Be!==Be+0)throw Be;wt(1,0)}}function Jl(u,f,x,C,I,G,ie,ye,Pe,Be){var Ze=_t();try{Xi(u,f,x,C,I,G,ie,ye,Pe,Be)}catch(ot){if(mt(Ze),ot!==ot+0)throw ot;wt(1,0)}}function xo(u,f,x,C,I,G,ie,ye,Pe){var Be=_t();try{Ia(u,f,x,C,I,G,ie,ye,Pe)}catch(Ze){if(mt(Be),Ze!==Ze+0)throw Ze;wt(1,0)}}function Yl(u){var f=_t();try{return Ki(u)}catch(x){if(mt(f),x!==x+0)throw x;wt(1,0)}}function Zl(u,f,x,C,I,G,ie,ye,Pe,Be){var Ze=_t();try{return Zi(u,f,x,C,I,G,ie,ye,Pe,Be)}catch(ot){if(mt(Ze),ot!==ot+0)throw ot;wt(1,0)}}function To(u,f,x){var C=_t();try{return Hi(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function ec(u,f,x,C){var I=_t();try{return Qi(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;return wt(1,0),0n}}function tc(u,f,x){var C=_t();try{return Oa(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function Eo(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot){var gt=_t();try{Ji(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot)}catch(jt){if(mt(gt),jt!==jt+0)throw jt;wt(1,0)}}function rc(u,f,x,C,I,G,ie,ye,Pe,Be,Ze){var ot=_t();try{qi(u,f,x,C,I,G,ie,ye,Pe,Be,Ze)}catch(gt){if(mt(ot),gt!==gt+0)throw gt;wt(1,0)}}function sc(u,f,x,C,I,G,ie,ye,Pe,Be,Ze){var ot=_t();try{return eo(u,f,x,C,I,G,ie,ye,Pe,Be,Ze)}catch(gt){if(mt(ot),gt!==gt+0)throw gt;wt(1,0)}}function Po(u,f,x,C){var I=_t();try{return Da(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;wt(1,0)}}function nc(u,f,x,C){var I=_t();try{return ro(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;wt(1,0)}}function ac(u,f,x,C){var I=_t();try{return so(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;wt(1,0)}}function Va(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt){var Nr=_t();try{La(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt,jt)}catch(Us){if(mt(Nr),Us!==Us+0)throw Us;wt(1,0)}}function ic(u,f,x,C,I){var G=_t();try{no(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function oc(u,f,x){var C=_t();try{ao(u,f,x)}catch(I){if(mt(C),I!==I+0)throw I;wt(1,0)}}function Co(u,f){var x=_t();try{return Wi(u,f)}catch(C){if(mt(x),C!==C+0)throw C;return wt(1,0),0n}}function So(u,f,x,C,I){var G=_t();try{return io(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function lc(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt){var jt=_t();try{Ba(u,f,x,C,I,G,ie,ye,Pe,Be,Ze,ot,gt)}catch(Nr){if(mt(jt),Nr!==Nr+0)throw Nr;wt(1,0)}}function ko(u,f,x,C){var I=_t();try{return lo(u,f,x,C)}catch(G){if(mt(I),G!==G+0)throw G;wt(1,0)}}function cc(u,f,x,C,I){var G=_t();try{return co(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;return wt(1,0),0n}}function uc(u,f,x,C,I){var G=_t();try{Ra(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function Ua(u,f,x,C,I){var G=_t();try{return uo(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function $o(u,f,x,C,I){var G=_t();try{po(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function dc(u,f,x,C,I){var G=_t();try{return Na(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function pc(u,f,x,C,I){var G=_t();try{ho(u,f,x,C,I)}catch(ie){if(mt(G),ie!==ie+0)throw ie;wt(1,0)}}function hc(u,f,x,C,I,G,ie){var ye=_t();try{return fo(u,f,x,C,I,G,ie)}catch(Pe){if(mt(ye),Pe!==Pe+0)throw Pe;wt(1,0)}}function Ao(u,f,x,C,I,G,ie){var ye=_t();try{return ja(u,f,x,C,I,G,ie)}catch(Pe){if(mt(ye),Pe!==Pe+0)throw Pe;wt(1,0)}}return n.stackSave=()=>_t(),n.stackRestore=u=>mt(u),n.stackAlloc=u=>Jn(u),n.setValue=function(u,f,x="i8"){switch(x.endsWith("*")&&(x="*"),x){case"i1":case"i8":j()[u>>>0]=f;break;case"i16":K()[u>>>1>>>0]=f;break;case"i32":Z()[u>>>2>>>0]=f;break;case"i64":H[u>>>3]=BigInt(f);break;case"float":_e()[u>>>2>>>0]=f;break;case"double":Ae()[u>>>3>>>0]=f;break;case"*":we()[u>>>2>>>0]=f;break;default:Ie(`invalid type for setValue: ${x}`)}},n.getValue=function(u,f="i8"){switch(f.endsWith("*")&&(f="*"),f){case"i1":case"i8":return j()[u>>>0];case"i16":return K()[u>>>1>>>0];case"i32":return Z()[u>>>2>>>0];case"i64":return H[u>>>3];case"float":return _e()[u>>>2>>>0];case"double":return Ae()[u>>>3>>>0];case"*":return we()[u>>>2>>>0];default:Ie(`invalid type for getValue: ${f}`)}},n.UTF8ToString=Nt,n.stringToUTF8=Ir,n.lengthBytesUTF8=Cs,function u(){if(0<Ce)Ee=u;else if(c)s(n),V();else{for(;0<ne.length;)ne.shift()(n);0<Ce?Ee=u:(n.calledRun=!0,le||(V(),s(n)))}}(),n.PTR_SIZE=4,i}),Bp=qc,Rp=(r=(e=globalThis.self)==null?void 0:e.name)==null?void 0:r.startsWith("em-pthread"),Rp&&qc()}),Qc,Xc,Np,Hr,jp,Bo,Vp,Up,Jc,Wp,Yc,Gp,Zc,Kp,eu=Ue(()=>{Wc(),Qc=typeof location>"u"?void 0:location.origin,Xc=self.location.href>"file:"&&self.location.href<"file;",Np=()=>{{if(Xc){let e=URL;return new URL(new e("ort.bundle.min.mjs",self.location.href).href,Qc).href}return self.location.href}},Hr=Np(),jp=()=>{if(Hr&&!Hr.startsWith("blob:"))return Hr.substring(0,Hr.lastIndexOf("/")+1)},Bo=(e,r)=>{try{let t=r??Hr;return(t?new URL(e,t):new URL(e)).origin===Qc}catch{return!1}},Vp=(e,r)=>{let t=r??Hr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Up=(e,r)=>`${r??"./"}${e}`,Jc=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},Wp=async e=>(await import(e)).default,Yc=(rx(),Lo(Dp)).default,Gp=async()=>{if(!Hr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Bo(Hr))return[void 0,Yc()];let e=await Jc(Hr);return[e,Yc(e)]},Zc=(sx(),Lo(zp)).default,Kp=async(e,r,t)=>{if(!e&&!r&&Zc&&Hr&&Bo(Hr))return[void 0,Zc];{let s="ort-wasm-simd-threaded.jsep.mjs",a=e??Vp(s,r),n=t&&a&&!Bo(a,r),i=n?await Jc(a):a??Up(s,r);return[n?i:void 0,await Wp(i)]}}}),tu,Ro,Ja,ru,Hp,qp,su,fr,kn=Ue(()=>{eu(),Ro=!1,Ja=!1,ru=!1,Hp=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},qp=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},su=async e=>{if(Ro)return Promise.resolve();if(Ja)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(ru)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ja=!0;let r=e.initTimeout,t=e.numThreads;if(!qp())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=Hp();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let a=e.wasmPaths,n=typeof a=="string"?a:void 0,i=a==null?void 0:a.mjs,o=(i==null?void 0:i.href)??i,l=a==null?void 0:a.wasm,c=(l==null?void 0:l.href)??l,p=e.wasmBinary,[d,h]=await Kp(o,n,t>1),g=!1,_=[];if(r>0&&_.push(new Promise(E=>{setTimeout(()=>{g=!0,E()},r)})),_.push(new Promise((E,A)=>{let M={numThreads:t};if(p)M.wasmBinary=p;else if(c||n)M.locateFile=y=>c??n+y;else if(o&&o.indexOf("blob:")!==0)M.locateFile=y=>new URL(y,o).href;else if(d){let y=jp();y&&(M.locateFile=k=>y+k)}h(M).then(y=>{Ja=!1,Ro=!0,tu=y,E(),d&&URL.revokeObjectURL(d)},y=>{Ja=!1,ru=!0,A(y)})})),await Promise.race(_),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},fr=()=>{if(Ro&&tu)return tu;throw new Error("WebAssembly is not initialized yet.")}}),Cr,No,Ft,nu=Ue(()=>{kn(),Cr=(e,r)=>{let t=fr(),s=t.lengthBytesUTF8(e)+1,a=t._malloc(s);return t.stringToUTF8(e,a,s),r.push(a),a},No=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([a,n])=>{let i=r?r+a:a;if(typeof n=="object")No(n,i+".",t,s);else if(typeof n=="string"||typeof n=="number")s(i,n.toString());else if(typeof n=="boolean")s(i,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},Ft=e=>{let r=fr(),t=r.stackSave();try{let s=r.PTR_SIZE,a=r.stackAlloc(2*s);r._OrtGetLastError(a,a+s);let n=Number(r.getValue(a,s===4?"i32":"i64")),i=r.getValue(a+s,"*"),o=i?r.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{r.stackRestore(t)}}}),Qp,nx=Ue(()=>{kn(),nu(),Qp=e=>{let r=fr(),t=0,s=[],a=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)a.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)a.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(a.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Cr(e.tag,s)),t=r._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,n),t===0&&Ft("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&No(e.extra,"",new WeakSet,(i,o)=>{let l=Cr(i,s),c=Cr(o,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&Ft(`Can't set a run config entry: ${i} - ${o}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(i=>r._free(i)),n}}}),Xp,Jp,Yp,Zp,eh,ax=Ue(()=>{kn(),nu(),Xp=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Jp=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Yp=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Zp=(e,r,t)=>{for(let s of r){let a=typeof s=="string"?s:s.name;switch(a){case"webnn":if(a="WEBNN",typeof s!="string"){let i=s==null?void 0:s.deviceType;if(i){let o=Cr("deviceType",t),l=Cr(i,t);fr()._OrtAddSessionConfigEntry(e,o,l)!==0&&Ft(`Can't set a session config entry: 'deviceType' - ${i}.`)}}break;case"webgpu":if(a="JS",typeof s!="string"){let i=s;if(i!=null&&i.preferredLayout){if(i.preferredLayout!=="NCHW"&&i.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let o=Cr("preferredLayout",t),l=Cr(i.preferredLayout,t);fr()._OrtAddSessionConfigEntry(e,o,l)!==0&&Ft(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${a}`)}let n=Cr(a,t);fr()._OrtAppendExecutionProvider(e,n)!==0&&Ft(`Can't append execution provider: ${a}.`)}},eh=e=>{let r=fr(),t=0,s=[],a=e||{};Yp(a);try{let n=Xp(a.graphOptimizationLevel??"all"),i=Jp(a.executionMode??"sequential"),o=typeof a.logId=="string"?Cr(a.logId,s):0,l=a.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=a.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof a.optimizedModelFilePath=="string"?Cr(a.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(n,!!a.enableCpuMemArena,!!a.enableMemPattern,i,!!a.enableProfiling,0,o,l,c,p),t===0&&Ft("Can't create session options."),a.executionProviders&&Zp(t,a.executionProviders,s),a.enableGraphCapture!==void 0){if(typeof a.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);let d=Cr("enableGraphCapture",s),h=Cr(a.enableGraphCapture.toString(),s);r._OrtAddSessionConfigEntry(t,d,h)!==0&&Ft(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(let[d,h]of Object.entries(a.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=Cr(d,s);r._OrtAddFreeDimensionOverride(t,g,h)!==0&&Ft(`Can't set a free dimension override: ${d} - ${h}.`)}return a.extra!==void 0&&No(a.extra,"",new WeakSet,(d,h)=>{let g=Cr(d,s),_=Cr(h,s);r._OrtAddSessionConfigEntry(t,g,_)!==0&&Ft(`Can't set a session config entry: ${d} - ${h}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&Ft("Can't release session options."),s.forEach(i=>r._free(i)),n}}}),sa,$n,An,au,jo,iu,ou,lu,ht=Ue(()=>{sa=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},$n=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},An=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((a,n)=>a*n,1);return t>0?Math.ceil(s*t):void 0},au=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},jo=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},iu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ou=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",lu=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),cu,th=Ue(()=>{Wc(),cu=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let a=r.body.getReader(),n;try{n=new ArrayBuffer(s)}catch(o){if(o instanceof RangeError){let l=Math.ceil(s/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw o}let i=0;for(;;){let{done:o,value:l}=await a.read();if(o)break;let c=l.byteLength;new Uint8Array(n,i,c).set(l),i+=c}return new Uint8Array(n,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),rh,sh,nh,ah,uu,ih,$t,Gs=Ue(()=>{ht(),rh=["V","I","W","E","F"],sh=(e,r)=>{console.log(`[${rh[e]},${new Date().toISOString()}]${r}`)},uu=(e,r)=>{nh=e,ah=r},ih=(e,r)=>{let t=jo(e),s=jo(nh);t>=s&&sh(t,typeof r=="function"?r():r)},$t=(...e)=>{ah&&ih(...e)}}),du,oh=Ue(()=>{ht(),du=(e,r)=>new(au(r))(e)}),pu=Ue(()=>{}),hu,Vo,Uo,lh,ch,fu,mu,uh,dh,ix=Ue(()=>{Gs(),pu(),hu=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Vo=[],Uo=e=>Math.ceil(Number(e)/16)*16,lh=e=>{for(let r=0;r<Vo.length;r++){let t=Vo[r];if(e<=t)return t}return Math.ceil(e/16)*16},ch=1,fu=()=>ch++,mu=async(e,r,t,s)=>{let a=Uo(t),n=e.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(r,0,n,0,a),e.flush(),await n.mapAsync(GPUMapMode.READ);let o=n.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(o,0,t)),l}else return new Uint8Array(o.slice(0,t))}finally{n.destroy()}},uh=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of hu)Vo.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,a=r.byteLength,n=Uo(a),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==a)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${a}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,a)),o.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(o,0,i.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),o.destroy(),$t("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let a=Uo(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,a)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return $t("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=fu();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),$t("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),$t("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=lh(e),s,a=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||n){let o=(a?this.freeBuffers:this.freeUniformBuffers).get(t);o?o.length>0?s=o.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let i={id:fu(),type:0,buffer:s};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),$t("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return $t("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await mu(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=hu.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&($t("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},dh=(...e)=>new uh(...e)}),ph,zt,nr=Ue(()=>{ph=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},zt=e=>new ph(e)}),hh,na,Te,Wo,fh,mh,_h,vt=Ue(()=>{hh=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},na=class{static calcShape(e,r,t=!1){let s=e.length,a=r.length;if(s===0)return r;if(a===0)return e;let n=Math.max(e.length,r.length),i=new Array(n);if(t){if(s<2||a<2)return;let o=hh.calcMatMulShape([e[s-2],e[s-1]],[r[a-2],r[a-1]]);if(o===void 0)return;[i[n-2],i[n-1]]=o}for(let o=t?3:1;o<=n;o++){let l=s-o<0?1:e[s-o],c=a-o<0?1:r[a-o];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)i[n-o]=Math.max(l,c);else{if(p>1)return;i[n-o]=0}}return i}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let a=1;a<=t;a++)if(e[t-a]!==1&&e[t-a]!==r[s-a])return!1;return!0}},Te=class Fc{static size(r){return Fc.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let a=new Array(s),n=s-1;for(;n>=0;){if(r[n]%t===0){a[n]=r[n]/t;break}if(t%r[n]!==0)throw new Error("cannot convert shape");a[n]=1,t/=r[n],n--}for(n--;n>=0;n--)a[n]=r[n];return a}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return Fc.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return Fc.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let a=1;for(let n=t;n<s;n++){if(r[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");a*=Number(r[n])}return a}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let a=t-3;a>=0;--a)s[a]=s[a+1]*r[a+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((a,n)=>a+t[n]+t[n+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,a)=>s===t[a])}},Wo=class Fo{static adjustPoolAttributes(r,t,s,a,n,i){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let o=0;o<t.length-2;o++)o>=s.length?s.push(t[o+2]):s[o]=t[o+2];for(let o=0;o<s.length;o++)if(o<a.length){if(a[o]<0)throw new Error("strides should be greater than or equal to 1")}else a.push(1);for(let o=0;o<s.length;o++)if(o<n.length){if(n[o]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let o=0;o<s.length*2;o++)if(o<i.length){if(i[o]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let o=0;o<s.length;o++){if(s[o]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[o]>=s[o]||i[o+s.length]>=s[o])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,a,n,i,o){if(o){if(n.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(a.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)Fo.adjustPadAndReturnShape(r[l+(i?1:2)],t[l],s[l],a[l],n,l,l+r.length-2,o)}}static computePoolOutputShape(r,t,s,a,n,i,o){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Fo.computeShapeHelper(r,t,l,s,a,n,i,o),l}static computeConvOutputShape(r,t,s,a,n,i,o){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return Fo.computeShapeHelper(!1,r,l,s,a,n,i,o),l}static computeShapeHelper(r,t,s,a,n,i,o,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(Fo.adjustPadAndReturnShape(t[c+2],a[c],n[c],i[c],o,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,a,n,i,o,l){let c=s*(a-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[i]=0,n[o]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+a-r;return n[i]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),n[o]=p-n[i],Math.floor((r+p-a)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+n[i]+n[o]-c)/t+1)}},fh=class{static getShapeOfGemmResult(e,r,t,s,a){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,i,o;r?(n=e[1],i=e[0]):(n=e[0],i=e[1]);let l=-1;if(s?(o=t[0],l=1):(o=t[1],l=0),t[l]!==i)throw new Error("dimension mismatch");if(n<=0||o<=0||i<=0)throw new Error("invalid shape specified");if(a&&!na.isValidBroadcast(a,[n,o]))throw new Error("gemm: invalid bias shape for broadcast");return[n,o,i]}},mh=-34028234663852886e22,_h=34028234663852886e22}),aa,Go,mr,Ar,at,tr,_u,ia,ln,st,Ya,$e,rt,gh,gu,wh,yh,Et=Ue(()=>{ht(),vt(),aa=64,Go=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},mr=(e,r=1)=>{let t=Go(e,r);return typeof t=="string"?t:t[0]},Ar=(e,r=1)=>{let t=Go(e,r);return typeof t=="string"?t:t[1]},at=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:Te.computeStrides(t)})}),r},tr=e=>e%4===0?4:e%2===0?2:1,_u=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,ia=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,ln=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,st=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Ya=(e,r,t,s,a)=>{let n=typeof t=="number",i=n?t:t.length,o=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,c=Go(r,a),p=typeof c=="string"?c:c[1],d=typeof c=="string"?c:c[0],h={indices:l,value:p,storage:d,tensor:r},g=j=>typeof j=="string"?j:`${j}u`,_={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},E=n?"uniforms.":"",A=`${E}${e}_shape`,M=`${E}${e}_strides`,y="";for(let j=0;j<i-1;j++)y+=`
    let dim${j} = current / ${st(M,j,i)};
    let rest${j} = current % ${st(M,j,i)};
    indices[${j}] = dim${j};
    current = rest${j};
    `;y+=`indices[${i-1}] = current;`;let k=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${y}
    return indices;
  }`,P=j=>(_.offsetToIndices=!0,i<2?j:`o2i_${e}(${j})`),b=[];if(i>=2)for(let j=i-1;j>=0;j--)b.push(`${st(M,j,i)} * (indices[${j}])`);let w=i<2?"":`
  fn i2o_${e}(indices: ${h.indices}) -> u32 {
    return ${b.join("+")};
  }`,T=j=>(_.indicesToOffset=!0,i<2?j:`i2o_${e}(${j})`),$=(...j)=>i===0?"0u":`${h.indices}(${j.map(g).join(",")})`,z=(j,F)=>i<2?`${j}`:`${st(j,F,i)}`,N=(j,F,K)=>i<2?`${j}=${K};`:`${st(j,F,i)}=${K};`,Y={},J=(j,F)=>{_.broadcastedIndicesToOffset=!0;let K=`${F.name}broadcastedIndicesTo${e}Offset`;if(K in Y)return`${K}(${j})`;let ae=[];for(let Z=i-1;Z>=0;Z--){let we=F.indicesGet("outputIndices",Z+F.rank-i);ae.push(`${z(M,Z)} * (${we} % ${z(A,Z)})`)}return Y[K]=`fn ${K}(outputIndices: ${F.type.indices}) -> u32 {
             return ${ae.length>0?ae.join("+"):"0u"};
           }`,`${K}(${j})`},W=(j,F)=>(()=>{if(h.storage===h.value)return`${e}[${j}]=${F};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${e}[${j}]=vec2<u32>(u32(${F}), select(0u, 0xFFFFFFFFu, ${F} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${e}[${j}]=vec2<u32>(u32(${F}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${e}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${F}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),te=j=>(()=>{if(h.storage===h.value)return`${e}[${j}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${e}[${j}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${e}[${j}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${j}] & 0xFFu), bool(${e}[${j}] & 0xFF00u), bool(${e}[${j}] & 0xFF0000u), bool(${e}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),H=i<2?"":`
  fn get_${e}ByIndices(indices: ${h.indices}) -> ${p} {
    return ${te(`i2o_${e}(indices)`)};
  }`,R=i<2?"":(()=>{let j=o.map(K=>`d${K}: u32`).join(", "),F=o.map(K=>`d${K}`).join(", ");return`
  fn get_${e}(${j}) -> ${p} {
    return get_${e}ByIndices(${$(F)});
  }`})(),q=(...j)=>{if(j.length!==i)throw new Error(`indices length must be ${i}`);let F=j.map(g).join(",");return i===0?te("0u"):i===1?te(F[0]):(_.get=!0,_.getByIndices=!0,_.indicesToOffset=!0,`get_${e}(${F})`)},ee=j=>i<2?te(j):(_.getByIndices=!0,_.indicesToOffset=!0,`get_${e}ByIndices(${j})`),le=i<2?"":`
  fn set_${e}ByIndices(indices: ${h.indices}, value: ${p}) {
    ${W(`i2o_${e}(indices)`,"value")}
  }`,de=i<2?"":(()=>{let j=o.map(K=>`d${K}: u32`).join(", "),F=o.map(K=>`d${K}`).join(", ");return`
  fn set_${e}(${j}, value: ${p}) {
    set_${e}ByIndices(${$(F)}, value);
  }`})();return{impl:()=>{let j=[],F=!1;return _.offsetToIndices&&(j.push(k),F=!0),_.indicesToOffset&&(j.push(w),F=!0),_.broadcastedIndicesToOffset&&(Object.values(Y).forEach(K=>j.push(K)),F=!0),_.set&&(j.push(de),F=!0),_.setByIndices&&(j.push(le),F=!0),_.get&&(j.push(R),F=!0),_.getByIndices&&(j.push(H),F=!0),!n&&F&&j.unshift(`const ${A} = ${h.indices}(${t.join(",")});`,`const ${M} = ${h.indices}(${Te.computeStrides(t).join(",")});`),j.join(`
`)},type:h,offsetToIndices:P,indicesToOffset:T,broadcastedIndicesToOffset:J,indices:$,indicesGet:z,indicesSet:N,set:(...j)=>{if(j.length!==i+1)throw new Error(`indices length must be ${i}`);let F=j[i];if(typeof F!="string")throw new Error("value must be string");let K=j.slice(0,i).map(g).join(",");return i===0?W("0u",F):i===1?W(K[0],F):(_.set=!0,_.setByIndices=!0,_.indicesToOffset=!0,`set_${e}(${K}, ${F})`)},setByOffset:W,setByIndices:(j,F)=>i<2?W(j,F):(_.setByIndices=!0,_.indicesToOffset=!0,`set_${e}ByIndices(${j}, ${F});`),get:q,getByOffset:te,getByIndices:ee,usage:s,name:e,strides:M,shape:A,rank:i}},$e=(e,r,t,s=1)=>Ya(e,r,t,"input",s),rt=(e,r,t,s=1)=>Ya(e,r,t,"output",s),gh=(e,r,t)=>Ya(e,r,t,"atomicOutput",1),gu=(e,r,t,s=1)=>Ya(e,r,t,"internal",s),wh=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=aa){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=a?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=a?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${n}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let a=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${a}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},yh=(e,r)=>new wh(e,r)}),Mh,wu,bh,vh,xh,Th,qr,Eh,Ph,cn=Ue(()=>{ht(),vt(),nr(),Et(),Mh=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},wu=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),bh=(e,r)=>Te.sortBasedOnPerm(e,wu(e.length,r)),vh=(e,r,t,s)=>{let a=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<r;++n)a+=`a[${e[n]}]=i[${n}];`;return a+="return a;}"},xh=(e,r)=>{let t=[],s=[];for(let a=0;a<e.length;++a)e[a]!==1&&t.push(e[a]),e[r[a]]!==1&&s.push(r[a]);return{newShape:t,newPerm:s}},Th=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},qr=(e,r)=>{let t=e.dataType,s=e.dims.length,a=wu(s,r),n=bh(e.dims,a),i=e.dims,o=n,l=s<2||Th(a,e.dims),c;if(l)return c=_=>{let E=$e("input",t,i,4),A=rt("output",t,o,4);return`
  ${_.registerUniform("output_size","u32").declareVariables(E,A)}
  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let _=Te.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(_/64/4)},programUniforms:[{type:12,data:Math.ceil(_/4)}]}},getShaderSource:c};let{newShape:p,newPerm:d}=xh(e.dims,a),h=Te.areEqual(d,[2,3,1]),g=Te.areEqual(d,[3,1,2]);if(p.length===2||h||g){i=h?[p[0],p[1]*p[2]]:g?[p[0]*p[1],p[2]]:p,o=[i[1],i[0]];let _=16;return c=E=>{let A=$e("a",t,i.length),M=rt("output",t,o.length);return`
  ${E.registerUniform("output_size","u32").declareVariables(A,M)}
  var<workgroup> tile : array<array<${M.type.value}, ${_+1}>, ${_}>;
  ${E.mainStart([_,_,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${_} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${_}u + local_id.x;
    let input_row = workgroup_id_x * ${_}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${A.getByIndices(`${A.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${_}u + local_id.x;
    let output_row = workgroup_id_y * ${_}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${M.setByIndices(`${M.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let E=Te.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(o[1]/_),y:Math.ceil(o[0]/_)},programUniforms:[{type:12,data:E},...at(i,o)]}},getShaderSource:c}}return c=_=>{let E=$e("a",t,i.length),A=rt("output",t,o.length);return`
  ${_.registerUniform("output_size","u32").declareVariables(E,A)}

  ${vh(a,s,E,A)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${A.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${A.setByOffset("global_idx",E.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let _=Te.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:12,data:_},...at(i,o)]}},getShaderSource:c}},Eh=(e,r)=>{Mh(e.inputs,r.perm),e.compute(qr(e.inputs[0],r.perm))},Ph=e=>zt({perm:e.perm})}),Ch,Sh,kh,$h,Ah,Ih,Oh,Fh,Dh,Lh,gs,zh,Bh,Rh,Nh,jh,Vh,Uh,Wh,Gh,Kh,ox=Ue(()=>{ht(),vt(),Et(),Mu(),cn(),Ch={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Sh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},kh={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},$h={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ah=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},Ih=(e,r)=>{let t=[],s=e.length;for(let n=0;n<s;n++)r.indexOf(n)===-1&&t.push(e[n]);let a=r.map(n=>e[n]);return[t,a]},Oh=(e,r)=>{let t=e.length+r.length,s=[],a=0;for(let n=0;n<t;n++)r.indexOf(n)===-1?s.push(e[a++]):s.push(1);return s},Fh=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},Dh=(e,r)=>{let t=[];if(!Fh(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},Lh=(e,r,t,s,a,n,i)=>{let o=t[0].dims,l=Te.size(n),c=Te.size(i),p=$e("_A",t[0].dataType,o),d=rt("output",a,n),h=64;l===1&&(h=256);let g=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `,_=E=>`
        ${E.registerUniform("reduceSize","u32").declareVariables(p,d)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${E.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${kh[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${Ch[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Sh[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${s==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${$h[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${h}`,inputDependencies:["type"]},getShaderSource:_,getRunData:()=>({outputs:[{dims:n,dataType:a}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},gs=(e,r,t,s)=>{let a=e.inputs.length===1?t:yu(e.inputs,t),n=a.axes;n.length===0&&!a.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((g,_)=>_));let i=Te.normalizeAxes(n,e.inputs[0].dims.length),o=i,l=e.inputs[0],c=Dh(o,e.inputs[0].dims.length);c.length>0&&(l=e.compute(qr(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],o=Ah(o.length,l.dims.length));let[p,d]=Ih(l.dims,o),h=p;a.keepDims&&(h=Oh(p,i)),e.compute(Lh(r,a.cacheKey,[l],s,e.inputs[0].dataType,h,d),{inputs:[l]})},zh=(e,r)=>{gs(e,"ReduceMeanShared",r,"mean")},Bh=(e,r)=>{gs(e,"ReduceL1Shared",r,"l1")},Rh=(e,r)=>{gs(e,"ReduceL2Shared",r,"l2")},Nh=(e,r)=>{gs(e,"ReduceLogSumExpShared",r,"logSumExp")},jh=(e,r)=>{gs(e,"ReduceMaxShared",r,"max")},Vh=(e,r)=>{gs(e,"ReduceMinShared",r,"min")},Uh=(e,r)=>{gs(e,"ReduceProdShared",r,"prod")},Wh=(e,r)=>{gs(e,"ReduceSumShared",r,"sum")},Gh=(e,r)=>{gs(e,"ReduceSumSquareShared",r,"sumSquare")},Kh=(e,r)=>{gs(e,"ReduceLogSumShared",r,"logSum")}}),ws,Hh,Ko,yu,ys,qh,Qh,Xh,Jh,Yh,Zh,ef,tf,rf,sf,Ms,nf,af,of,lf,cf,uf,df,pf,hf,ff,Mu=Ue(()=>{ht(),vt(),nr(),Et(),ox(),ws=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Hh=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Ko=(e,r,t,s,a,n,i=!1,o=!1)=>{let l=[],c=t[0].dims,p=c.length,d=Te.normalizeAxes(a,p),h=!o&&d.length===0;c.forEach((E,A)=>{h||d.indexOf(A)>=0?i&&l.push(1):l.push(E)});let g=l.length,_=Te.size(l);return{name:e,shaderCache:r,getShaderSource:E=>{let A=[],M=$e("_A",t[0].dataType,p),y=rt("output",n,g),k=s(M,y,d),P=k[2];for(let b=0,w=0;b<p;b++)h||d.indexOf(b)>=0?(i&&w++,P=`for(var j${b}: u32 = 0; j${b} < ${c[b]}; j${b}++) {
                  ${k[2].includes("last_index")?`let last_index = j${b};`:""}
                  ${M.indicesSet("input_indices",b,`j${b}`)}
                  ${P}
                }`):(A.push(`${M.indicesSet("input_indices",b,y.indicesGet("output_indices",w))};`),w++);return`

        ${E.registerUniform("output_size","u32").declareVariables(M,y)}

        ${E.mainStart()}
          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${M.type.indices};
          let output_indices = ${y.offsetToIndices("global_idx")};

          ${A.join(`
`)}
          ${k[0]}       // init ops for reduce max/min
          ${k[1]}
          ${P}
          ${k[3]}
          ${k.length===4?y.setByOffset("global_idx","value"):k.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:12,data:_},...at(c,l)]})}},yu=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),zt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},ys=(e,r,t,s)=>{let a=e.inputs,n=a.length===1?t:yu(a,t);e.compute(Ko(r,{hint:n.cacheKey,inputDependencies:["rank"]},[a[0]],n.noopWithEmptyAxes&&n.axes.length===0?Hh:s,n.axes,a[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},qh=(e,r)=>{ws(e.inputs),ys(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},Qh=(e,r)=>{ws(e.inputs),ys(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},Xh=(e,r)=>{ws(e.inputs),ys(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Jh=(e,r)=>{ws(e.inputs),ys(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},Yh=(e,r)=>{ws(e.inputs),ys(e,"ReduceMax",r,(t,s,a)=>{let n=[];for(let i=0;i<t.rank;i++)(a.indexOf(i)>=0||a.length===0)&&n.push(t.indicesSet("input_indices",i,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},Zh=(e,r)=>{ws(e.inputs),ys(e,"ReduceMean",r,(t,s,a)=>{let n=1;for(let i=0;i<t.rank;i++)(a.indexOf(i)>=0||a.length===0)&&(n*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},ef=(e,r)=>{ws(e.inputs),ys(e,"ReduceMin",r,(t,s,a)=>{let n=[];for(let i=0;i<t.rank;i++)(a.indexOf(i)>=0||a.length===0)&&n.push(`input_indices[${i}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},tf=(e,r)=>{ws(e.inputs),ys(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},rf=(e,r)=>{ws(e.inputs),ys(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},sf=(e,r)=>{ws(e.inputs),ys(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Ms=(e,r,t)=>{if(r.length===0)return t;let s=1,a=1;for(let n=0;n<r.length;n++)r.indexOf(n)===-1?s*=e[n]:a*=e[n];return a<32&&s>1024},nf=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Zh(e,r):zh(e,r)},af=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Qh(e,r):Bh(e,r)},of=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Xh(e,r):Rh(e,r)},lf=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Jh(e,r):Nh(e,r)},cf=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Yh(e,r):jh(e,r)},uf=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ef(e,r):Vh(e,r)},df=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?tf(e,r):Uh(e,r)},pf=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rf(e,r):Wh(e,r)},hf=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?sf(e,r):Gh(e,r)},ff=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?qh(e,r):Kh(e,r)}}),bu,mf,_f,vu,lx=Ue(()=>{ht(),nr(),Mu(),bu=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},mf=(e,r)=>{bu(e.inputs);let t=(s,a,n)=>{let i=[];for(let o=0;o<s.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};e.compute(Ko("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},_f=(e,r)=>{bu(e.inputs);let t=(s,a,n)=>{let i=[];for(let o=0;o<s.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};e.compute(Ko("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},vu=e=>zt(e)}),gf,Ho,wf,yf,Mf,Za,bf,vf,xu=Ue(()=>{ht(),vt(),pu(),Et(),gf=(e,r)=>{let t=e[0],s=e[1],a=e[2],n=e[3],i=e[4],o=e[5];if(i&&o)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=a.dims[0]/3,h=d,g=h;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let k of r.qkvHiddenSizes)if(k%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],g=r.qkvHiddenSizes[2]}let _=c;if(d!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==d+h+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let E=0;if(i){if(h!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==h/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(E=i.dims[3])}let A=_+E,M=-1,y=0;if(n)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(o){if(o.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==r.numHeads||o.dims[2]!==c||o.dims[3]!==A)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:E,kvSequenceLength:_,totalSequenceLength:A,maxSequenceLength:M,inputHiddenSize:p,hiddenSize:d,vHiddenSize:g,headSize:Math.floor(d/r.numHeads),vHeadSize:Math.floor(g/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:y,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ho=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,wf=(e,r,t,s,a,n,i,o)=>{let l=tr(i?1:n),c=64,p=n/l;p<c&&(c=32);let d=Math.ceil(n/l/c),h=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:a},{type:12,data:p},{type:12,data:d}],g=mr(e.dataType,l),_=Ar(1,l),E=["type"];i&&E.push("type"),o&&E.push("type");let A=M=>{let y=rt("x",e.dataType,e.dims,l),k=[y],P=i?$e("seq_lens",i.dataType,i.dims):void 0;P&&k.push(P);let b=o?$e("total_sequence_length_input",o.dataType,o.dims):void 0;b&&k.push(b);let w=Ar(e.dataType),T=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${M.registerUniforms(T).declareVariables(...k)}
  ${M.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${Ho(P,b,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${_}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${_}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${_}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${_}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${y.type.value}(${w}(1.0) / ${w}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${_}(x[offset + i]);
        x[offset + i] = ${y.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${y.type.value}(${w}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${g};${l}`,inputDependencies:E},getShaderSource:A,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:a,z:r*t},programUniforms:h})}},yf=(e,r,t,s,a,n,i,o,l)=>{let c=i+n.kvSequenceLength,p=[n.batchSize,n.numHeads,n.sequenceLength,c],d=e>1&&s,h=n.kvNumHeads?n.kvNumHeads:n.numHeads,g=d?[n.batchSize,h,c,n.headSize]:void 0,_=n.nReps?n.nReps:1,E=n.scale===0?1/Math.sqrt(n.headSize):n.scale,A=tr(n.headSize),M=n.headSize/A,y=12,k={x:Math.ceil(c/y),y:Math.ceil(n.sequenceLength/y),z:n.batchSize*n.numHeads},P=[{type:12,data:n.sequenceLength},{type:12,data:M},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:E},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:_}],b=d&&s&&Te.size(s.dims)>0,w=["type","type"];b&&w.push("type"),a&&w.push("type"),o&&w.push("type"),l&&w.push("type");let T=[{dims:p,dataType:r.dataType,gpuDataType:0}];d&&T.push({dims:g,dataType:r.dataType,gpuDataType:0});let $=z=>{let N=$e("q",r.dataType,r.dims,A),Y=$e("key",t.dataType,t.dims,A),J=[N,Y];if(b){let le=$e("past_key",s.dataType,s.dims,A);J.push(le)}a&&J.push($e("attention_bias",a.dataType,a.dims));let W=o?$e("seq_lens",o.dataType,o.dims):void 0;W&&J.push(W);let te=l?$e("total_sequence_length_input",l.dataType,l.dims):void 0;te&&J.push(te);let H=rt("output",r.dataType,p),R=[H];d&&R.push(rt("present_key",r.dataType,g,A));let q=Ar(1,A),ee=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${y}u;

  var<workgroup> tileQ: array<${N.type.storage}, ${y*y}>;
  var<workgroup> tileK: array<${N.type.storage}, ${y*y}>;
  ${z.registerUniforms(ee).declareVariables(...J,...R)}
  ${z.mainStart([y,y,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${_===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${_===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${Ho(W,te,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${b&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${q}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${b&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${q}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(A){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${A}`)}})()};
        output[outputIdx] = ${H.type.value} (sum * uniforms.alpha) + ${a?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${A};${a!==void 0};${s!==void 0};${e}`,inputDependencies:w},getRunData:()=>({outputs:T,dispatchGroup:k,programUniforms:P}),getShaderSource:$}},Mf=(e,r,t,s,a,n,i=void 0,o=void 0)=>{let l=n+a.kvSequenceLength,c=a.nReps?a.nReps:1,p=a.vHiddenSize*c,d=e>1&&s,h=a.kvNumHeads?a.kvNumHeads:a.numHeads,g=d?[a.batchSize,h,l,a.headSize]:void 0,_=[a.batchSize,a.sequenceLength,p],E=12,A={x:Math.ceil(a.vHeadSize/E),y:Math.ceil(a.sequenceLength/E),z:a.batchSize*a.numHeads},M=[{type:12,data:a.sequenceLength},{type:12,data:l},{type:12,data:a.vHeadSize},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:12,data:p},{type:12,data:n},{type:12,data:a.kvSequenceLength},{type:12,data:c}],y=d&&s&&Te.size(s.dims)>0,k=["type","type"];y&&k.push("type"),i&&k.push("type"),o&&k.push("type");let P=[{dims:_,dataType:r.dataType,gpuDataType:0}];d&&P.push({dims:g,dataType:r.dataType,gpuDataType:0});let b=w=>{let T=$e("probs",r.dataType,r.dims),$=$e("v",t.dataType,t.dims),z=[T,$];y&&z.push($e("past_value",s.dataType,s.dims));let N=i?$e("seq_lens",i.dataType,i.dims):void 0;i&&z.push(N);let Y=o?$e("total_sequence_length_input",o.dataType,o.dims):void 0;o&&z.push(Y);let J=[rt("output",r.dataType,_)];d&&J.push(rt("present_value",r.dataType,g));let W=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${E}u;
  var<workgroup> tileQ: array<${T.type.value}, ${E*E}>;
  var<workgroup> tileV: array<${T.type.value}, ${E*E}>;
  ${w.registerUniforms(W).declareVariables(...z,...J)}
  ${w.mainStart([E,E,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${Ho(N,Y,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${y&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${T.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${y&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:k},getRunData:()=>({outputs:P,dispatchGroup:A,programUniforms:M}),getShaderSource:b}},Za=(e,r,t,s,a,n,i,o,l,c,p=void 0,d=void 0)=>{let h=Math.min(e.outputCount,1+(i?1:0)+(o?1:0)),g=h>1?c.pastSequenceLength:0,_=g+c.kvSequenceLength,E=l&&Te.size(l.dims)>0?l:void 0,A=[r,t];h>1&&i&&Te.size(i.dims)>0&&A.push(i),E&&A.push(E),p&&A.push(p),d&&A.push(d);let M=e.compute(yf(h,r,t,i,E,c,g,p,d),{inputs:A,outputs:h>1?[-1,1]:[-1]})[0];e.compute(wf(M,c.batchSize,c.numHeads,g,c.sequenceLength,_,p,d),{inputs:p&&d?[M,p,d]:[M],outputs:[]});let y=[M,s];h>1&&o&&Te.size(o.dims)>0&&y.push(o),p&&y.push(p),d&&y.push(d),e.compute(Mf(h,M,s,o,c,g,p,d),{inputs:y,outputs:h>1?[0,2]:[0]})},bf=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,a=r.inputHiddenSize,n=r.headSize,i=12,o={x:Math.ceil(r.headSize/i),y:Math.ceil(r.sequenceLength/i),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:a},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=d=>{let h=rt("output_q",l[0].dataType,t),g=rt("output_k",l[0].dataType,t),_=rt("output_v",l[0].dataType,t),E=$e("input",l[0].dataType,l[0].dims),A=$e("weight",l[1].dataType,l[1].dims),M=$e("bias",l[2].dataType,l[2].dims),y=E.type.storage,k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${y}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${y}, ${i*i}>;
  var<workgroup> tileWeightK: array<${y}, ${i*i}>;
  var<workgroup> tileWeightV: array<${y}, ${i*i}>;
  ${d.registerUniforms(k).declareVariables(E,A,M,h,g,_)}
  ${d.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${y}(0);
    var valueK = ${y}(0);
    var valueV = ${y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},vf=(e,r)=>{let t=gf(e.inputs,r),[s,a,n]=bf(e,t);return Za(e,s,a,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),xf,Tf,Ef,Pf,cx=Ue(()=>{_s(),ht(),vt(),nr(),Et(),xf=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,a,n)=>{let i=a.length;if(i!==s.length)throw new Error(`${n}: num dimensions != ${i}`);a.forEach((o,l)=>{if(o!==s[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Tf=(e,r)=>{let{epsilon:t,spatial:s,format:a}=r,n=e[0].dims,i=s?tr(n[n.length-1]):1,o=a==="NHWC"&&n.length>1?i:1,l=Te.size(n)/i,c=s,p=c?n.length:n,d=$e("x",e[0].dataType,e[0].dims,i),h=$e("scale",e[1].dataType,e[1].dims,o),g=$e("bias",e[2].dataType,e[2].dims,o),_=$e("inputMean",e[3].dataType,e[3].dims,o),E=$e("inputVar",e[4].dataType,e[4].dims,o),A=rt("y",e[0].dataType,p,i),M=()=>{let k="";if(s)k=`let cOffset = ${n.length===1?"0u":a==="NHWC"?`outputIndices[${n.length-1}] / ${i}`:"outputIndices[1]"};`;else if(a==="NCHW")k=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{k=`var cIndices = ${h.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let P=1;P<h.rank;P++)k+=`cIndices[${P}] = outputIndices[${P}];`;k+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return k},y=k=>`
  const epsilon = ${t};
  ${k.registerUniform("outputSize","u32").declareVariables(d,h,g,_,E,A)}
  ${k.mainStart()}
  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${i}`)};
    ${M()}
    let scale = ${h.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${_.getByOffset("cOffset")};
    let inputVar = ${E.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${i}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...at(n)]:[{type:12,data:l}]})}},Ef=e=>zt(e),Pf=(e,r)=>{let{inputs:t,outputCount:s}=e,a=Ef({...r,outputCount:s});if(qt.webgpu.validateInputContent&&xf(t,a),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Tf(t,a))}}),Cf,Sf,kf,ux=Ue(()=>{vt(),Et(),Cf=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Sf=e=>{let r=e[0].dims,t=e[0].dims[2],s=Te.size(r)/4,a=e[0].dataType,n=$e("input",a,r,4),i=$e("bias",a,[t],4),o=$e("residual",a,r,4),l=rt("output",a,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,i,o,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${n.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},kf=e=>{Cf(e.inputs),e.compute(Sf(e.inputs))}}),$f,At,Af,If,Of,Ff,Df,Lf,zf,Bf,Rf,Nf,jf,Vf,Uf,Wf,ei,Gf,qo,Kf,Hf,qf,Qf,Xf,Jf,Yf,Zf,em,tm,rm,sm,nm,am,im,om,Tu,lm,Eu,Pu,cm,um,dm,pm,hm,fm,Cu=Ue(()=>{ht(),vt(),nr(),Et(),$f=(e,r,t,s,a,n,i)=>{let o=Math.ceil(r/4),l="";typeof a=="string"?l=`${a}(a)`:l=a("a");let c=$e("inputData",t,[o],4),p=rt("outputData",s,[o],4),d=[{name:"vec_size",type:"u32"}];return i&&d.push(...i),`
      ${e.registerUniforms(d).declareVariables(c,p)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},At=(e,r,t,s,a,n=e.dataType,i,o)=>{let l=[{type:12,data:Math.ceil(Te.size(e.dims)/4)}];return i&&l.push(...i),{name:r,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:c=>$f(c,Te.size(e.dims),e.dataType,n,t,s,o),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(Te.size(c[0].dims)/64/4)},programUniforms:l})}},Af=e=>{e.compute(At(e.inputs[0],"Abs","abs"))},If=e=>{e.compute(At(e.inputs[0],"Acos","acos"))},Of=e=>{e.compute(At(e.inputs[0],"Acosh","acosh"))},Ff=e=>{e.compute(At(e.inputs[0],"Asin","asin"))},Df=e=>{e.compute(At(e.inputs[0],"Asinh","asinh"))},Lf=e=>{e.compute(At(e.inputs[0],"Atan","atan"))},zf=e=>{e.compute(At(e.inputs[0],"Atanh","atanh"))},Bf=e=>zt(e),Rf=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(At(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},Nf=e=>{let r,t,s=e.length>=2&&e[1].data!==0,a=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=a?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=a?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return zt({min:r,max:t})},jf=(e,r)=>{let t=r||Nf(e.inputs),s=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"Clip",a=>`clamp(${a}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},Vf=e=>{e.compute(At(e.inputs[0],"Ceil","ceil"))},Uf=e=>{e.compute(At(e.inputs[0],"Cos","cos"))},Wf=e=>{e.compute(At(e.inputs[0],"Cosh","cosh"))},ei=e=>zt(e),Gf=(e,r)=>{let t=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},qo=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Kf=e=>{let r=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,qo(r)))},Hf=e=>{e.compute(At(e.inputs[0],"Exp","exp"))},qf=e=>{e.compute(At(e.inputs[0],"Floor","floor"))},Qf=e=>{let r=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,qo(r)))},Xf=(e,r)=>{let t=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},Jf=e=>{e.compute(At(e.inputs[0],"Not",r=>`!${r}`))},Yf=e=>{e.compute(At(e.inputs[0],"Neg",r=>`-${r}`))},Zf=e=>{e.compute(At(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},em=e=>{let r=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},tm=e=>{e.compute(At(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},rm=e=>zt(e),sm=(e,r)=>{let t=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},nm=e=>{e.compute(At(e.inputs[0],"Sin","sin"))},am=e=>{e.compute(At(e.inputs[0],"Sinh","sinh"))},im=e=>{e.compute(At(e.inputs[0],"Sqrt","sqrt"))},om=e=>{e.compute(At(e.inputs[0],"Tan","tan"))},Tu=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,lm=e=>{e.compute(At(e.inputs[0],"Tanh",Tu))},Eu=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Tu("v")};
}
`,Pu=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,cm=e=>{let r=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"FastGelu",Pu,Eu(r),void 0,e.inputs[0].dataType))},um=(e,r)=>{let t=Ar(e.inputs[0].dataType);return e.compute(At(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},dm=e=>{e.compute(At(e.inputs[0],"Log","log"))},pm=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,hm=e=>`quick_gelu_impl(${e})`,fm=(e,r)=>{let t=Ar(e.inputs[0].dataType);e.compute(At(e.inputs[0],"QuickGelu",hm,pm(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),mm,_m,gm,dx=Ue(()=>{vt(),Et(),Cu(),mm=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},_m=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=$e("input",e[0].dataType,e[0].dims,4),s=$e("bias",e[0].dataType,[e[0].dims[2]],4),a=rt("output",e[0].dataType,r,4),n=Te.size(r)/4,i=mr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:o=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${o.declareVariables(t,s,a)}

  ${qo(i)}

  ${o.mainStart()}
    ${o.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${a.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},gm=e=>{mm(e.inputs),e.compute(_m(e.inputs))}}),wm,ym,bs,Mm,bm,vm,xm,Tm,Em,Pm,Cm,Sm,km,px=Ue(()=>{ht(),vt(),Et(),wm=(e,r,t,s,a,n,i,o,l,c,p,d)=>{let h,g;typeof o=="string"?h=g=(y,k)=>`${o}((${y}),(${k}))`:typeof o=="function"?h=g=o:(h=o.scalar,g=o.vector);let _=rt("outputData",p,s.length,4),E=$e("aData",l,r.length,4),A=$e("bData",c,t.length,4),M;if(a)if(n){let y=Te.size(r)===1,k=Te.size(t)===1,P=r.length>0&&r[r.length-1]%4===0,b=t.length>0&&t[t.length-1]%4===0;y||k?M=_.setByOffset("global_idx",g(y?`${E.type.value}(${E.getByOffset("0")}.x)`:E.getByOffset("global_idx"),k?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):M=`
            let outputIndices = ${_.offsetToIndices("global_idx * 4u")};
            let offsetA = ${E.broadcastedIndicesToOffset("outputIndices",_)};
            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",_)};
            ${_.setByOffset("global_idx",g(i||P?E.getByOffset("offsetA / 4u"):`${E.type.value}(${E.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||b?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else M=_.setByOffset("global_idx",g(E.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let y=(k,P,b="")=>{let w=`aData[indexA${P}][componentA${P}]`,T=`bData[indexB${P}][componentB${P}]`;return`
            let outputIndices${P} = ${_.offsetToIndices(`global_idx * 4u + ${P}u`)};
            let offsetA${P} = ${E.broadcastedIndicesToOffset(`outputIndices${P}`,_)};
            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,_)};
            let indexA${P} = offsetA${P} / 4u;
            let indexB${P} = offsetB${P} / 4u;
            let componentA${P} = offsetA${P} % 4u;
            let componentB${P} = offsetB${P} % 4u;
            ${k}[${P}] = ${b}(${h(w,T)});
          `};p===9?M=`
            var data = vec4<u32>(0);
            ${y("data",0,"u32")}
            ${y("data",1,"u32")}
            ${y("data",2,"u32")}
            ${y("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:M=`
            ${y("outputData[global_idx]",0)}
            ${y("outputData[global_idx]",1)}
            ${y("outputData[global_idx]",2)}
            ${y("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(E,A,_)}

        ${d??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${M}
      }`},ym=(e,r,t,s,a,n,i=t.dataType)=>{let o=t.dims.map(E=>Number(E)??1),l=s.dims.map(E=>Number(E)??1),c=!Te.areEqual(o,l),p=o,d=Te.size(o),h=!1,g=!1,_=[c];if(c){let E=na.calcShape(o,l,!1);if(!E)throw new Error("Can't perform binary op on the given tensors");p=E.slice(),d=Te.size(p);let A=Te.size(o)===1,M=Te.size(l)===1,y=o.length>0&&o[o.length-1]%4===0,k=l.length>0&&l[l.length-1]%4===0;_.push(A),_.push(M),_.push(y),_.push(k);let P=1;for(let b=1;b<p.length;b++){let w=o[o.length-b],T=l[l.length-b];if(w===T)P*=w;else break}P%4===0?(g=!0,h=!0):(A||M||y||k)&&(h=!0)}else h=!0;return _.push(h),{name:e,shaderCache:{hint:r+_.map(E=>E.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:E=>wm(E,o,l,p,h,c,g,a,t.dataType,s.dataType,i,n),getRunData:()=>({outputs:[{dims:p,dataType:i}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(Te.size(p)/4)},...at(o,l,p)]})}},bs=(e,r,t,s,a,n)=>{e.compute(ym(r,a??"",e.inputs[0],e.inputs[1],t,s,n))},Mm=e=>{bs(e,"Add",(r,t)=>`${r}+${t}`)},bm=e=>{bs(e,"Div",(r,t)=>`${r}/${t}`)},vm=e=>{bs(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},xm=e=>{bs(e,"Mul",(r,t)=>`${r}*${t}`)},Tm=e=>{let r=$e("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;bs(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Em=e=>{bs(e,"Sub",(r,t)=>`${r}-${t}`)},Pm=e=>{bs(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Cm=e=>{bs(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Sm=e=>{bs(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},km=e=>{bs(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),$m,Am,Im,Om,Fm,Dm,hx=Ue(()=>{ht(),vt(),nr(),Et(),$m=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],a=s.dataType,n=s.dims.length;e.forEach((i,o)=>{if(o!==t){if(i.dataType!==a)throw new Error("input tensors should be one type");if(i.dims.length!==n)throw new Error("input tensors should have the same shape");i.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},Am=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Im=(e,r)=>{let t=e.length,s=[];for(let a=0;a<t;++a){let n=r.setByOffset("global_idx",e[a].getByIndices("indices"));t===1?s.push(n):a===0?s.push(`if (inputIndex == ${a}u) { ${n} }`):a===t-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${a}) { ${n} }`)}return s.join(`
`)},Om=(e,r,t,s)=>{let a=Te.size(t),n=new Array(e.length),i=new Array(e.length),o=0,l=[],c=[],p=[{type:12,data:a}];for(let E=0;E<e.length;++E)o+=e[E].dims[r],n[E]=o,c.push(e[E].dims.length),i[E]=$e(`input${E}`,s,c[E]),l.push("rank"),p.push({type:12,data:n[E]});for(let E=0;E<e.length;++E)p.push(...at(e[E].dims));p.push(...at(t));let d=rt("output",s,t.length),h=d.indicesGet("indices",r),g=Array.from(Array(n.length).keys()).map(E=>`uniforms.sizeInConcatAxis${E}`).join(","),_=E=>`

  ${(()=>{E.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)E.registerUniform(`sizeInConcatAxis${A}`,"u32");return E.declareVariables(...i,d)})()}

  ${Am(n.length,g)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${g});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Im(i,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p}),getShaderSource:_}},Fm=(e,r)=>{let t=e.inputs,s=t[0].dims,a=Te.normalizeAxis(r.axis,s.length);$m(t,a);let n=s.slice();n[a]=t.reduce((o,l)=>o+(l.dims.length>a?l.dims[a]:0),0);let i=t.filter(o=>Te.size(o.dims)>0);e.compute(Om(i,a,n,t[0].dataType),{inputs:i})},Dm=e=>zt({axis:e.axis})}),In,On,Fn,Su,Dn=Ue(()=>{ht(),vt(),In=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},On=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Fn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},Su=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[t,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=(e==null?void 0:e.activation_params)||[mh,_h];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:t}}return{activation:r}}}),Mr,Lm,ku=Ue(()=>{Mr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},Lm=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),zm,fx=Ue(()=>{zm=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),ti,$u,Au=Ue(()=>{ht(),vt(),Et(),Dn(),ti=(e,r,t,s,a)=>{let n=s-t;return`
      ${Array.from({length:t}).map((i,o)=>`
      if (${st(r.shape,o,r.rank)} != 1) {
        ${r.indicesSet(e,o,st(a,o+n,s))}
      } else {
        ${r.indicesSet(e,o,0)}
      }`).join("")}
`},$u=(e,r,t,s,a=!1,n)=>{let i=e[0].dims,o=e[1].dims,l=i[i.length-2],c=o[o.length-1],p=i[i.length-1],d=tr(c),h=tr(p),g=tr(l),_=Te.size(t)/d/g,E=e.length>2,A=s?s.slice(0,-2):t.slice(0,-2),M=[Te.size(A),l,c],y=[{type:12,data:_},{type:12,data:l},{type:12,data:c},{type:12,data:p}];On(r,y),y.push(...at(A,i,o)),E&&y.push(...at(e[2].dims)),y.push(...at(M));let k=P=>{let b=gu("batch_dims",e[0].dataType,A.length),w=$e("a",e[0].dataType,i.length,h),T=$e("b",e[1].dataType,o.length,d),$=rt("output",e[0].dataType,M.length,d),z=mr($.type.tensor),N=In(r,$.type.value,z),Y=[w,T],J="";if(E){let H=a?d:1;Y.push($e("bias",e[2].dataType,e[2].dims.length,H)),J=`${a?`value += bias[col / ${H}];`:`value += ${$.type.value}(bias[row + i]);`}`}let W=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Fn(r,W);let te=()=>{let H=`var a_data: ${w.type.value};`;for(let R=0;R<h;R++)H+=`
              let b_data${R} = b[(b_offset + (k + ${R}) * uniforms.N + col) / ${d}];`;for(let R=0;R<g;R++){H+=`a_data = a[(a_offset + (row + ${R}) * uniforms.K + k) / ${h}];`;for(let q=0;q<h;q++)H+=`
            values[${R}] = fma(${T.type.value}(a_data${h===1?"":`[${q}]`}), b_data${q}, values[${R}]);
`}return H};return`
  ${P.registerUniforms(W).registerInternalVariables(b).declareVariables(...Y,$)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${g};
    let row = (index1 % stride1) * ${g};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${b.offsetToIndices("batch")};`}

    var a_indices: ${w.type.indices};
    ${ti("a_indices",w,w.rank-2,b.rank,"batch_indices")}
    ${w.indicesSet("a_indices",w.rank-2,0)}
    ${w.indicesSet("a_indices",w.rank-1,0)}
    let a_offset = ${w.indicesToOffset("a_indices")};

    var b_indices: ${T.type.indices};
    ${ti("b_indices",T,T.rank-2,b.rank,"batch_indices")}
    ${T.indicesSet("b_indices",T.rank-2,0)}
    ${T.indicesSet("b_indices",T.rank-1,0)}
    let b_offset = ${T.indicesToOffset("b_indices")};
    var values: array<${$.type.value}, ${g}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${te()}
    }
    for (var i = 0u; i < ${g}u; i++) {
      var value = values[i];
      ${J}
      ${N}
      let cur_indices = ${$.type.indices}(batch, row + i, col);
      let offset = ${$.indicesToOffset("cur_indices")};
      ${$.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${d};${h};${g};${a}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:y}),getShaderSource:k}}}),Bm,Rm,Iu,Ou,Nm,Fu,jm,Qo,Du=Ue(()=>{ht(),vt(),Et(),Dn(),Au(),ku(),Bm=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,Rm=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Iu=(e,r,t="f32",s,a=!1,n=32,i=!1,o=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=a?l:n,d=a?n:l,h=p/r[0],g=n/r[1];if(!((a&&h===4&&e[1]===4||!a&&(h===3||h===4))&&p%r[0]===0&&n%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${a} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${t}>, ${p/h}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${h};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(o/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Bm(a,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Rm(a,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Ou=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,Nm=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Fu=(e,r,t="f32",s,a=!1,n=32,i=!1,o=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],d=a?c:n,h=a?n:c;if(!(h%r[1]===0&&d%r[0]===0&&n%r[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let g=h/r[1],_=d/r[0],E=n/r[1],A=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${r[0]}) {
          ${Ou(a,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${_};
let tileRowB = i32(localId.y) * ${E};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${_}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Ou(a,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${E}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Nm(a)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(o/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${A}
  }
`},jm=(e,r,t,s,a=!1)=>{let[n,i,o,l]=s,c=mr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Mr(e,c)} {
      var value = ${Mr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${ti("aIndices",i,i.rank-2,n.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Mr(e,c)} {
      var value = ${Mr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${o.type.indices};
        ${ti("bIndices",o,o.rank-2,n.rank,"batchIndices")}
        ${o.indicesSet("bIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("bIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Mr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${a?"bias[colIn]":`${Mr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Qo=(e,r,t,s,a=!1,n)=>{let i=e[0].dims,o=e[1].dims,l=i.slice(0,-2),c=o.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),d=Te.size(p),h=i[i.length-2],g=i[i.length-1],_=o[o.length-1],E=g%4===0&&_%4===0,A=h<=8?[4,1,1]:[4,4,1],M=[8,8,1],y=[Math.ceil(_/M[0]/A[0]),Math.ceil(h/M[1]/A[1]),Math.ceil(d/M[2]/A[2])],k=E?4:1,P=[...l,h,g/k],b=P.length,w=[...c,g,_/k],T=w.length,$=[d,h,_/k],z=[{type:6,data:h},{type:6,data:_},{type:6,data:g}];On(r,z),z.push(...at(p,P,w));let N=["rank","rank"],Y=e.length>2;Y&&(z.push(...at(e[2].dims)),N.push("rank")),z.push(...at($));let J=W=>{let te=p.length,H=gu("batchDims",e[0].dataType,te,1),R=mr(e[0].dataType),q=$e("a",e[0].dataType,b,k),ee=$e("b",e[1].dataType,T,k),le=rt("result",e[0].dataType,$.length,k),de=[q,ee];if(Y){let Z=a?k:1;de.push($e("bias",e[2].dataType,e[2].dims.length,Z))}let j=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Fn(r,j);let F=mr(le.type.tensor),K=In(r,le.type.value,F),ae=jm(k,Y,K,[H,q,ee,le],a);return`
  ${W.registerUniforms(j).registerInternalVariables(H).declareVariables(...de,le)}
  ${ae}
  ${E?Iu(A,M,R,H):Fu(A,M,R,H)}
                   `};return{name:"MatMul",shaderCache:{hint:`${A};${r.activation};${E};${a}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:z}),getShaderSource:J}}}),Vm,Um,mx=Ue(()=>{ht(),Gs(),Et(),Dn(),ku(),fx(),Du(),Vm=(e,r,t,s,a=!1,n,i=4,o=4,l=4,c="f32")=>{let p=z=>{switch(z){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},d=z=>{switch(z){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},h=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,_=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",E=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",M=e?"col":"row",y=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${M} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${M} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${M} % inChannels;
    var resData = ${Mr(i,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${_} && xCol >= 0 && xCol < ${E}) {
      ${h}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(i)}
    }
    return resData;`,k=e?r&&s?`
    let col = colIn * ${i};
    ${y}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${y}
    }
    return ${Mr(i,c)}(0.0);`:s&&t?`
    let col = colIn * ${i};
    ${y}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${y}
    }
    return ${Mr(i,c)}(0.0);`,P=e?s&&t?d(o):`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(o)}
    }
    return ${Mr(o,c)}(0.0);`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(o)}
    }
    return ${Mr(o,c)}(0.0);`,b=Mr(l,c),w=Mr(e?i:o,c),T=Mr(e?o:i,c),$=In(n,b,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${w} {
      ${e?k:P}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${T} {
      ${e?P:k}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${b}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Lm(a)}
      ${$}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Um=(e,r,t,s,a,n,i,o,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],d=t[0],h=c?t[2]:t[3],g=c?t[1]:t[2],_=c?t[3]:t[1],E=c&&(p%4===0||p%3===0)&&_%4===0,A=c?_:h*g,M=c?h*g:_,y=[8,8,1],k=s<=8?[4,1,1]:[4,4,1],P=[Math.ceil(A/y[0]/k[0]),Math.ceil(M/y[1]/k[1]),Math.ceil(d/y[2]/k[2])];$t("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${P}`);let b=E?c&&p%4!==0?3:4:1,w=y[1]*k[1],T=y[0]*k[0],$=Math.max(y[0]*b,y[1]),z=s%w===0,N=a%T===0,Y=n%$===0,J=E?[b,4,4]:[1,1,1],W=[{type:6,data:s},{type:6,data:a},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];On(r,W),W.push(...at(e[0].dims,e[1].dims));let te=["rank","rank"];i&&(W.push(...at(e[2].dims)),te.push("rank")),W.push(...at(t));let H=R=>{let q=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Fn(r,q);let ee=E?4:1,le=mr(e[0].dataType),de=`
      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${le}>`:le}) {
        result[flatIndex] = ${E?`vec4<${le}>`:le}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${le}>`:le}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);
      }`,j=$e("x",e[0].dataType,e[0].dims.length,b===3?1:b),F=$e("w",e[1].dataType,e[1].dims.length,ee),K=[j,F],ae=rt("result",e[0].dataType,t.length,ee);if(i){let Z=$e("bias",e[2].dataType,e[2].dims.length,ee);K.push(Z),de+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${le}>`:le} {
          return bias[coords.${c?"w":"y"}${E?"/ 4":""}];
        }`}return`
        ${zm("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${R.registerUniforms(q).declareVariables(...K,ae)}
        ${de}
        ${Vm(c,z,N,Y,i,r,J[0],J[1],J[2],le)}
        ${E?Iu(k,y,le,void 0,!c,$):Fu(k,y,le,void 0,!c,$,!1,void 0,o)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${b};${E};${z};${N};${Y};${w};${T};${$}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:P[0],y:P[1],z:P[2]},programUniforms:W}),getShaderSource:H}}}),Wm,Lu,ri,Gm,zu,Km,Hm,qm,_x=Ue(()=>{ht(),Gs(),vt(),Et(),Dn(),ku(),Wm=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},Lu=e=>typeof e=="number"?[e,e,e]:e,ri=(e,r)=>r<=1?e:e+(e-1)*(r-1),Gm=(e,r,t,s=1)=>{let a=ri(r,s);return Math.floor((e[0]*(t-1)-t+a)/2)},zu=(e,r,t,s,a)=>{a==null&&(a=Gm(e,r[0],s[0]));let n=[0,0,0,t];for(let i=0;i<3;i++)e[i]+2*a>=r[i]&&(n[i]=Math.trunc((e[i]-r[i]+2*a)/s[i]+1));return n},Km=(e,r,t,s,a,n,i,o,l,c)=>{let p,d,h,g;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let _=zu([r,t,s,1],[o,l,c],1,[a,n,i],e);d=_[0],h=_[1],g=_[2]}else if(Array.isArray(e)){if(!e.every((E,A,M)=>E===M[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let _=zu([r,t,s,1],[o,l,c],1,[a,n,i],e[0]);d=_[0],h=_[1],g=_[2]}else if(e==="SAME_UPPER"){d=Math.ceil(r/a),h=Math.ceil(t/n),g=Math.ceil(s/i);let _=(d-1)*a+o-r,E=(h-1)*n+l-t,A=(g-1)*i+c-s,M=Math.floor(_/2),y=_-M,k=Math.floor(E/2),P=E-k,b=Math.floor(A/2),w=A-b;p={top:k,bottom:P,left:b,right:w,front:M,back:y}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:g}},Hm=(e,r,t,s,a,n=!1,i="channelsLast")=>{let o,l,c,p,d;if(i==="channelsLast")[o,l,c,p,d]=e;else if(i==="channelsFirst")[o,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,,g,_,E]=r,[A,M,y]=Lu(t),[k,P,b]=Lu(s),w=ri(g,k),T=ri(_,P),$=ri(E,b),{padInfo:z,outDepth:N,outHeight:Y,outWidth:J}=Km(a,l,c,p,A,M,y,w,T,$),W=n?h*d:h,te=[0,0,0,0,0];return i==="channelsFirst"?te=[o,W,N,Y,J]:i==="channelsLast"&&(te=[o,N,Y,J,W]),{batchSize:o,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:N,outHeight:Y,outWidth:J,outChannels:W,padInfo:z,strideDepth:A,strideHeight:M,strideWidth:y,filterDepth:g,filterHeight:_,filterWidth:E,effectiveFilterDepth:w,effectiveFilterHeight:T,effectiveFilterWidth:$,dilationDepth:k,dilationHeight:P,dilationWidth:b,inShape:e,outShape:te,filterShape:r}},qm=(e,r,t,s,a,n)=>{let i=n==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let o=[64,1,1],l={x:t.map((A,M)=>M)},c=[Math.ceil(Wm(l.x.map(A=>t[A]))/o[0]),1,1];$t("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,d=Te.size(t),h=[{type:12,data:d},{type:12,data:s},{type:12,data:a},{type:12,data:r.strides},{type:12,data:r.dilations}];On(r,h),h.push(...at(e[0].dims,e[1].dims));let g=["rank","rank"],_=e.length===3;_&&(h.push(...at(e[2].dims)),g.push("rank")),h.push(...at(t));let E=A=>{let M=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:a.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];Fn(r,M);let y=1,k=mr(e[0].dataType),P=$e("x",e[0].dataType,e[0].dims.length,p),b=$e("W",e[1].dataType,e[1].dims.length,y),w=[P,b],T=rt("result",e[0].dataType,t.length,y),$="";if(_){let Y=$e("bias",e[2].dataType,e[2].dims.length,y);w.push(Y),$+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${k} {
          return bias[${i?st("coords",4,5):st("coords",1,5)}];
        }`}let z=Mr(p,k),N=In(r,z,k);return`
            ${$}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${P.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${b.getByIndices("aIndices")};
            }
          ${A.registerUniforms(M).declareVariables(...w,T)}
          ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${T.offsetToIndices("global_idx")};
              let batch = ${st("coords",0,P.rank)};
              let d2 = ${i?st("coords",P.rank-1,P.rank):st("coords",1,P.rank)};
              let xFRCCorner = vec3<u32>(${i?st("coords",1,P.rank):st("coords",2,P.rank)},
              ${i?st("coords",2,P.rank):st("coords",3,P.rank)},
              ${i?st("coords",3,P.rank):st("coords",4,P.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?st("uniforms.x_shape",1,P.rank):st("uniforms.x_shape",2,P.rank)};
              let xShapeZ = ${i?st("uniforms.x_shape",2,P.rank):st("uniforms.x_shape",3,P.rank)};
              let xShapeW = ${i?st("uniforms.x_shape",3,P.rank):st("uniforms.x_shape",4,P.rank)};
              let xShapeU = ${i?st("uniforms.x_shape",4,P.rank):st("uniforms.x_shape",1,P.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${_?"value = value + getBiasByOutputCoords(coords)":""};
              ${N}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${i};${p};${_}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:h}),getShaderSource:E}}}),Qm,Xm,gx=Ue(()=>{ht(),vt(),Et(),Dn(),Qm=(e,r,t,s)=>{let a=e.length>2,n=a?"value += b[output_channel];":"",i=e[0].dims,o=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,d=l&&p>=4?tr(c):1,h=Te.size(t)/d,g=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];On(r,g),g.push(...at(i,[o[0],o[1],o[2],o[3]/d]));let _=a?["rank","rank","rank"]:["rank","rank"];g.push(...at([t[0],t[1],t[2],t[3]/d]));let E=A=>{let M=rt("output",e[0].dataType,t.length,d),y=mr(M.type.tensor),k=In(r,M.type.value,y),P=$e("x",e[0].dataType,i.length),b=$e("w",e[1].dataType,o.length,d),w=[P,b];a&&w.push($e("b",e[2].dataType,e[2].dims,d));let T=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Fn(r,T);let $=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${P.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${b.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${P.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${b.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${A.registerUniforms(T).declareVariables(...w,M)}

  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${M.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${M.type.value} = ${M.type.value}(0);
    ${$}
    ${n}
    ${k}
    ${M.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${d}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:g}),getShaderSource:E}},Xm=(e,r,t,s)=>{let a=e.length>2,n=tr(t[3]),i=tr(t[2]),o=Te.size(t)/n/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],p=[t[0],t[1],t[2],t[3]/n],d=[{type:12,data:o},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];On(r,d),d.push(...at(l,c,p));let h=(i-1)*r.strides[1]+c[1],g=_=>{let E=rt("output",e[0].dataType,p.length,n),A=mr(E.type.tensor),M=In(r,E.type.value,A),y=$e("x",e[0].dataType,l.length,n),k=$e("w",e[1].dataType,c.length,n),P=[y,k];a&&P.push($e("b",e[2].dataType,e[2].dims,n));let b=a?"value += b[output_channel];":"",w=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Fn(r,w),`
  ${_.registerUniforms(w).declareVariables(...P,E)}
  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${y.type.value}, ${h}>;
    var values: array<${E.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${y.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${y.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${k.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${b}
      ${M}
      ${E.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${i};${h};${c[0]};${c[1]}`,inputDependencies:a?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:g}}}),Jm,Xo,Ym,Jo,Bu,Ru,Zm,e_,Nu,wx=Ue(()=>{vt(),mx(),_x(),Du(),gx(),Dn(),Au(),cn(),Jm=(e,r,t,s,a,n)=>{let i=e[0],o=e.slice(n?1:2,n?3:4),l=o.length,c=r[0],p=r.slice(2).map((h,g)=>h+(h-1)*(t[g]-1)),d=o.map((h,g)=>h+s[g]+s[g+l]).map((h,g)=>Math.floor((h-p[g]+a[g])/a[g]));return d.splice(0,0,i),d.splice(n?3:1,0,c),d},Xo=[2,3,1,0],Ym=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let a=e[0].dims.length-2;if(r.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(r.strides.length!==a)throw new Error(`strides should be ${a}D`);if(r.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Jo=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let n=2;n<r[1].dims.length;++n)t[n-2]===0&&(t[n-2]=r[1].dims[n]);let s=e.pads.slice();Wo.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let a=Object.assign({},e);return Object.assign(a,{kernelShape:t,pads:s}),a},Bu=e=>{let r=Su(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],a=e.dilations,n=e.group,i=e.kernel_shape,o=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:a,group:n,kernelShape:i,pads:o,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},Ru=(e,r,t,s)=>{let a=t.format==="NHWC",n=Jm(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,a);if(t.group!==1){let w=[r[0]];if(a){let T=e.kernelCustomData.wT??e.compute(qr(r[1],Xo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T),w.push(T)}else w.push(r[1]);r.length===3&&w.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&a&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(Xm(w,t,n,s),{inputs:w}):e.compute(Qm(w,t,n,s),{inputs:w});return}let i=r.length===3,o=r[0].dims[a?1:2],l=r[0].dims[a?2:3],c=r[0].dims[a?3:1],p=r[1].dims[2],d=r[1].dims[3],h=n[a?1:2],g=n[a?2:3],_=n[a?3:1],E=a&&p===o&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(E||p===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let w=n[0],T,$,z,N=[];if(a){let W=e.kernelCustomData.wT??e.compute(qr(r[1],Xo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=W),E){let te=o*l*c;T=r[0].reshape([1,w,te]),$=W.reshape([1,te,_]),z=[1,w,_]}else T=r[0].reshape([w,o*l,c]),$=W.reshape([1,c,_]),z=[w,h*g,_];N.push(T),N.push($)}else T=r[0].reshape([w,c,o*l]),$=r[1].reshape([1,_,c]),z=[w,_,h*g],N.push($),N.push(T);i&&N.push(r[2]);let Y=z[2],J=N[0].dims[N[0].dims.length-1];Y<8&&J<8?e.compute($u(N,t,n,z,a,s),{inputs:N}):e.compute(Qo(N,t,n,z,a,s),{inputs:N});return}let A=!0,M=e.kernelCustomData.wT??e.compute(qr(r[1],Xo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=M);let y=[r[0],M];i&&y.push(r[2]);let k=a?h*g:_,P=a?_:h*g,b=p*d*c;e.compute(Um(y,t,n,k,P,b,i,A,s),{inputs:y})},Zm=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let a=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),i=[1].concat(r.dilations),o=[1].concat(r.kernelShape),l=Jo({...r,pads:a,strides:n,dilations:i,kernelShape:o},s);Ru(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},e_=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",a=Jo(t,r),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,i=Hm(r[0].dims,r[1].dims,t.strides,t.dilations,n,!1,s);e.compute(qm(r,a,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],s))},Nu=(e,r)=>{if(Ym(e.inputs,r),e.inputs[0].dims.length===3)Zm(e,r);else if(e.inputs[0].dims.length===5)e_(e,e.inputs,r);else{let t=Jo(r,e.inputs);Ru(e,e.inputs,t)}}}),t_,yx=Ue(()=>{ht(),Gs(),vt(),Et(),t_=(e,r,t)=>{let s=e.length>2,a=r.outputShape,n=r.format==="NHWC",i=r.group,o=e[1].dims,l=o[2]/i,c=o[3],p=n?tr(l):1,d=n&&c===1&&l>=4,h=d?Math.floor(l/4)*4:Math.floor(l/p)*p,g=l-h,_=n?tr(c):1,E=n?c===1?p:_:1,A=Te.size(a)/_,M=[Math.ceil(A/64),1,1];$t("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${M}`);let y=["rank","rank"],k=[r.strides[0],r.strides[1]],P=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],b=[r.dilations[0],r.dilations[1]],w=[P[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),P[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],T=[w[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),w[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],$=[{type:12,data:A},{type:12,data:k},{type:12,data:P},{type:12,data:b},{type:12,data:w},{type:6,data:T},{type:12,data:h},{type:12,data:l},{type:12,data:c},...at(e[0].dims,e[1].dims)];s&&($.push(...at(e[2].dims)),y.push("rank")),$.push(...at(a));let z=N=>{let Y=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:k.length},{name:"filter_dims",type:"u32",length:P.length},{name:"dilations",type:"u32",length:P.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:T.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],J=mr(e[0].dataType),W=n?1:2,te=n?2:3,H=n?3:1,R=$e("W",e[1].dataType,e[1].dims.length,E),q=$e("Dy",e[0].dataType,e[0].dims.length,p),ee=[q,R];s&&ee.push($e("bias",e[2].dataType,[a[H]].length,_));let le=rt("result",e[0].dataType,a.length,_),de=()=>{let K="";if(d)p===4?K+=`
        let xValue = ${q.getByOffset("x_offset")};
        let wValue = ${R.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?K+=`
          dotProd = dotProd + dot(vec4<${J}>(${q.getByOffset("x_offset")}, ${q.getByOffset("x_offset + 1u")}), vec4<${J}>(${R.getByOffset("w_offset")}, ${R.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(K+=`
          dotProd = dotProd + dot(vec4<${J}>(${q.getByOffset("x_offset")}, ${q.getByOffset("x_offset + 1u")}, ${q.getByOffset("x_offset + 2u")}, ${q.getByOffset("x_offset + 3u")}), vec4<${J}>(${R.getByOffset("w_offset")}, ${R.getByOffset("w_offset + 1u")}, ${R.getByOffset("w_offset + 2u")}, ${R.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(K+=`
                  let xValue = ${n?q.getByOffset(`${q.indicesToOffset(`${q.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):q.get("batch","inputChannel","idyR","idyC")};
        `,p===1)K+=`
          let w_offset = ${R.indicesToOffset(`${R.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${R.getByOffset(`w_offset / ${E}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let ae=0;ae<p;ae++)K+=`
            let wValue${ae} = ${R.getByOffset(`${R.indicesToOffset(`${R.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${ae}, wOutChannel)`)} / ${E}`)};
            dotProd = dotProd + xValue[${ae}] * wValue${ae};`;return K},j=()=>{if(g===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let K="";if(p===1){K+="dotProd = dotProd";for(let ae=0;ae<g;ae++)K+=`
            + ${q.getByOffset(`x_offset + ${ae}`)} * ${R.getByOffset(`w_offset + ${ae}`)}`;K+=";"}else if(p===2){if(g!==2)throw new Error(`Invalid inputChannelsRemainder ${g}.`);K+=`
          let xValue = ${q.getByOffset("x_offset")};
          let wValue = ${R.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return K},F=`
            let outputIndices = ${le.offsetToIndices(`global_idx * ${_}`)};
            let batch = ${le.indicesGet("outputIndices",0)};
            let d1 = ${le.indicesGet("outputIndices",H)};
            let r = ${le.indicesGet("outputIndices",W)};
            let c = ${le.indicesGet("outputIndices",te)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${le.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${J}(dyRCorner) + ${J}(wR)) / ${J}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${J}(uniforms.Dy_shape[${W}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${J}(dyCCorner) + ${J}(wC)) / ${J}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${J}(uniforms.Dy_shape[${te}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${q.indicesToOffset(`${q.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${R.indicesToOffset(`${R.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${E};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:p}) {
                  ${de()}
                  inputChannel = inputChannel + ${d?4:p};
                }
                ${j()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${_}]`:""};
            ${le.setByOffset("global_idx","value")};
          `;return`
    ${N.registerUniforms(Y).declareVariables(...ee,le)}
      ${N.mainStart()}
      ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${F}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${E}${_}${d}${g}`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:M[0],y:M[1],z:M[2]},outputs:[{dims:t?t(a):a,dataType:e[0].dataType}],programUniforms:$}),getShaderSource:z}}}),r_,s_,n_,ju,a_,i_,Vu,o_,l_,Mx=Ue(()=>{yx(),Dn(),cn(),r_=(e,r,t,s,a,n)=>(e-1)*r+t+(s-1)*a+1-n,s_=(e,r,t,s,a)=>{let n=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=n,t[a]=e-n):r==="SAME_LOWER"&&(t[s]=e-n,t[a]=n)},n_=(e,r,t,s,a,n,i,o,l,c)=>{let p=e.length-2,d=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let h=e[0],g=r[o?3:1]*a;for(let _=0,E=e.length-p-(o?1:0);_<p;++_,++E){let A=e[E],M=d?A*i[_]:c[_],y=r_(A,i[_],n[_],r[E],t[_],M);s_(y,s,n,_,_+p),d&&c.push(i[_]*(A-1)+l[_]+(r[E]-1)*t[_]+1-n[_]-n[_+p])}c.splice(0,0,h),c.splice(o?3:1,0,g)},ju=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((d,h)=>d*h,1)===0){t.length=0;for(let d=2;d<r[1].dims.length;++d)t.push(r[1].dims[d])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let a=e.pads.slice(),n=e.outputShape.slice(),i=e.outputPadding.slice(),o=r[0].dims,l=e.dilations.slice();if(l.reduce((d,h)=>d+h,0)===0){let d=r[0].dims.length-2;l=new Array(d).fill(1)}let c=e.strides.slice();if(c.reduce((d,h)=>d+h,0)===0){let d=r[0].dims.length-2;c=new Array(d).fill(1)}n_(o,t,l,e.autoPad,e.group,a,c,s,i,n);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:a,outputPadding:i,outputShape:n,dilations:l,strides:c}),p},a_=e=>{let r=Su(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],a=e.dilations,n=e.group,i=e.kernelShape,o=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,d=e.outputShape;return{autoPad:s,format:t,dilations:a,group:n,kernelShape:i,outputPadding:p,outputShape:d,pads:o,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},i_=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let a=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==a))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.reduce((i,o)=>i+o,0)>0&&r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.reduce((i,o)=>i+o,0)>0&&r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.reduce((i,o)=>i+o,0)>0&&r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.outputPadding.length!==n&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(r.kernelShape.reduce((i,o)=>i+o,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Vu=(e,r,t,s)=>{let a=e.kernelCustomData.wT??e.compute(qr(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=a);let n=[r[0],a];r.length===3&&n.push(r[2]),e.compute(t_(n,t,s),{inputs:n})},o_=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let a=r.kernelShape;(a.length===0||a[0]===0)&&(a=[e.inputs[1].dims[2]]);let n=r.dilations;(n.length===0||n[0]===0)&&(n=[1]);let i=r.strides;(i.length===0||i[0]===0)&&(i=[1]);let o=r.pads;o.length===0&&(o=[0,0]),o=[0,o[0],0,o[1]],i=[1].concat(i),n=[1].concat(n),a=[1].concat(a);let l=r.outputPadding;l=[0].concat(l);let c=ju({...r,pads:o,strides:i,dilations:n,kernelShape:a,outputPadding:l},s);Vu(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},l_=(e,r)=>{if(i_(e.inputs,r),e.inputs[0].dims.length===3)o_(e,r);else{let t=ju(r,e.inputs);Vu(e,e.inputs,t)}}}),c_,u_,d_,bx=Ue(()=>{ht(),vt(),nr(),Et(),c_=(e,r,t,s)=>{let a=Te.size(r),n=r.length,i=$e("input",e,n),o=rt("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=Te.normalizeAxis(l,n),p=d=>{let h=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,g=st("uniforms.input_shape","uniforms.axis",n),_=s.reverse?h+(s.exclusive?" + 1":""):"0",E=s.reverse?g:h+(s.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,o)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${o.offsetToIndices("global_idx")};
                  var sum = ${o.type.value}(0);
                  let first : i32 = ${_};
                  let last : i32 = ${E};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${o.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:c},...at(r,r)]}),getShaderSource:p}},u_=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,a=e.inputs[1];e.compute(c_(s,t,a,r),{inputs:[0]})},d_=e=>{let r=e.exclusive===1,t=e.reverse===1;return zt({exclusive:r,reverse:t})}}),p_,h_,f_,m_,__,vx=Ue(()=>{ht(),vt(),nr(),Et(),p_=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},h_=(e,r,t,s)=>{let a=[];a.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<r;++n)a.push(t.indicesSet("a",e[n],`i[${n}]`));return a.push("return a;}"),a.join(`
`)},f_=(e,r)=>{let t,s,a,n,i,o,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,a,n]=e.dims,i=p?[t,s,a,c,c,n/c**2]:[t,s,a,n/c**2,c,c],o=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,a,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=p?[t,c,c,n/c**2,s,a]:[t,n/c**2,c,c,s,a],o=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(i),h=d.dims.length,g=e.dataType,_=$e("a",g,h),E=rt("output",g,h),A=M=>`
  ${M.registerUniform("output_size","u32").declareVariables(_,E)}

  ${h_(o,h,_,E)}

  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${E.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${E.setByOffset("global_idx",_.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:M=>{let y=l?[t,s*c,a*c,n/c**2]:[t,n/c**2,s*c,a*c],k=Te.size(y),P=d.dims,b=Te.sortBasedOnPerm(P,o);return{outputs:[{dims:y,dataType:M[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:[{type:12,data:k},...at(P,b)]}},getShaderSource:A}},m_=(e,r)=>{p_(e.inputs),e.compute(f_(e.inputs[0],r))},__=e=>zt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Yo,si,Uu,g_,w_,y_,M_,Wu,b_,v_,x_,xx=Ue(()=>{ht(),vt(),nr(),Et(),Yo="[a-zA-Z]|\\.\\.\\.",si="("+Yo+")+",Uu="^"+si+"$",g_="("+si+",)*"+si,w_="^"+g_+"$",y_=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},M_=class{constructor(e,r){var a;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(w_)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,i)=>{let o=e[i].dims.slice();if(!n.match(RegExp(Uu)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,o,i);this.lhs.push(l)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,i])=>i.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(si)))throw new Error("Invalid RHS");(a=s.match(RegExp(Yo,"g")))==null||a.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(n);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let a=t.length,n=!1,i=[],o=0;if(!e.match(RegExp(Uu))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Yo,"g")),c=new y_(s);return l==null||l.forEach((p,d)=>{if(p==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let h=a-l.length+1;if(h<0)throw new Error("Ellipsis out of bounds");if(i=t.slice(o,o+h),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let g=0;g<i.length;g++){let _=String.fromCharCode(48+g);c.addSymbol(_,d+g),this.addSymbol(_,t[o++],s)}}else c.addSymbol(p,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[o++],s)}),c}},Wu=e=>e+"_max",b_=(e,r,t,s)=>{let a=e.map(c=>c.length).map((c,p)=>$e(`input${p}`,r,c)),n=Te.size(s),i=rt("output",r,s.length),o=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],d="var prod = 1.0;",h="var sum = 0.0;",g="sum += prod;",_=[],E=[],A=[],M=[],y=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((P,b)=>{var w;if(t.rhs.symbolToIndices.has(b)){let T=(w=t.rhs.symbolToIndices.get(b))==null?void 0:w[0];T!==void 0&&t.lhs.forEach(($,z)=>{if(P.inputIndices.includes(z)){let N=$.symbolToIndices.get(b);if(N===void 0)throw new Error("Invalid symbol error");N.forEach(Y=>{p.push(`${a[z].indicesSet(`input${z}Indices`,Y,i.indicesGet("outputIndices",T))}`)})}})}else t.lhs.forEach((T,$)=>{if(P.inputIndices.includes($)){let z=T.symbolToIndices.get(b);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(N=>{_.push(`${a[$].indicesSet(`input${$}Indices`,N,`${b}`)}`)}),M.push(`prod *= ${a[$].getByIndices(`input${$}Indices`)};`)}}),E.push(`for(var ${b}: u32 = 0; ${b} < uniforms.${Wu(b)}; ${b}++) {`),A.push("}")});let k=y?[...p,`let sum = ${a.map((P,b)=>P.getByIndices(`input${b}Indices`)).join(" * ")};`]:[...p,h,...E,..._,d,...M,g,...A];return`
            ${c.registerUniforms(o.map(P=>({name:`${Wu(P)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...a,i)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${a.map((P,b)=>`var input${b}Indices: ${a[b].type.indices};`).join(`
`)}
            ${k.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=o.filter(d=>t.symbolToInfo.has(d)).map(d=>{var h;return{type:12,data:((h=t.symbolToInfo.get(d))==null?void 0:h.dimValue)||0}});c.push({type:12,data:n});let p=e.map((d,h)=>[...at(d)]).reduce((d,h)=>d.concat(h),c);return p.push(...at(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}},getShaderSource:l}},v_=(e,r)=>{let t=new M_(e.inputs,r.equation),s=t.outputDims,a=e.inputs.map((n,i)=>n.dims);e.compute(b_(a,e.inputs[0].dataType,t,s))},x_=e=>{let r=e.equation.replace(/\s+/g,"");return zt({equation:r})}}),T_,Gu,E_,P_,C_,Tx=Ue(()=>{ht(),vt(),Et(),T_=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,a=r.length<t.length?0:r.length-t.length;for(;s<t.length&&a<r.length;++s,++a)if(t[s]!==r[a]&&t[s]!==1&&r[a]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Gu=(e,r)=>{let t=e.length-r.length,s=[];for(let a=0;a<t;++a)s.push(e[a]);for(let a=0;a<r.length;++a)s.push(r[a]===1?e[a+t]:r[a]);return s},E_=(e,r)=>e.length>r.length?Gu(e,r):Gu(r,e),P_=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=E_(r,t),a=e[0].dataType,n=a===9||Te.size(r)===1,i=a===9||r.length>0&&r[r.length-1]%4===0?4:1,o=n||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(Te.size(s)/o),c=d=>{let h=$e("input",a,r.length,i),g=rt("output",a,s.length,o),_;if(a===9){let E=(A,M,y="")=>`
          let outputIndices${M} = ${g.offsetToIndices(`outputOffset + ${M}u`)};
          let offset${M} = ${h.broadcastedIndicesToOffset(`outputIndices${M}`,g)};
          let index${M} = offset${M} / 4u;
          let component${M} = offset${M} % 4u;
          ${A}[${M}] = ${y}(${h.getByOffset(`index${M}`)}[component${M}]);
        `;_=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${E("data",0,"u32")}
        ${E("data",1,"u32")}
        ${E("data",2,"u32")}
        ${E("data",3,"u32")}
        ${g.setByOffset("global_idx","data")}
      }`}else _=`
        let outputIndices = ${g.offsetToIndices(`global_idx * ${o}`)};
        let inputOffset = ${h.broadcastedIndicesToOffset("outputIndices",g)};
        let data = ${g.type.value}(${h.getByOffset(`inputOffset / ${i}`)});
        ${g.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(h,g)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${_}`},p=[{type:12,data:l},...at(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${i}${o}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},C_=e=>{T_(e.inputs),e.compute(P_(e.inputs),{inputs:[0]})}}),S_,k_,Ex=Ue(()=>{ht(),vt(),Et(),Cu(),S_=e=>{let r=e[0].dataType,t=Te.size(e[0].dims),s=Te.size(e[1].dims),a=s%4===0,n=i=>{let o=$e("x",r,[1],4),l=$e("bias",r,[1],4),c=rt("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=g=>`
      let bias${g}_offset: u32 = (global_idx * 4 + ${g}) % uniforms.bias_size;
      let bias${g} = ${l.getByOffset(`bias${g}_offset / 4`)}[bias${g}_offset % 4];`,h=a?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${o.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(p).declareVariables(o,l,c)}

    ${Eu(Ar(r))}

    ${i.mainStart(aa)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${o.getByOffset("global_idx")};
      ${h}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Pu("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/aa/4)}})}},k_=e=>{e.inputs.length<2||Te.size(e.inputs[1].dims)===0?cm(e):e.compute(S_(e.inputs))}}),$_,A_,I_,O_,Px=Ue(()=>{ht(),vt(),nr(),Et(),$_=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},A_=(e,r)=>{let t=e[0].dims,s=e[1].dims,a=t.length,n=Te.normalizeAxis(r.axis,a),i=t.slice(0);i.splice(n,1,...s);let o=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(Te.size(i)/l),p=[{type:12,data:c},{type:6,data:o},{type:12,data:n},...at(e[0].dims,e[1].dims,i)],d=h=>{let g=$e("data",e[0].dataType,e[0].dims.length,l),_=$e("inputIndices",e[1].dataType,e[1].dims.length),E=rt("output",e[0].dataType,i.length,l),A=y=>{let k=s.length,P=`var indicesIndices${y}  = ${_.type.indices}(0);`;for(let b=0;b<k;b++)P+=`${k>1?`indicesIndices${y}[${b}]`:`indicesIndices${y}`} = ${i.length>1?`outputIndices${y}[uniforms.axis + ${b}]`:`outputIndices${y}`};`;P+=`
          var idx${y} = ${_.getByIndices(`indicesIndices${y}`)};
          if (idx${y} < 0) {
            idx${y} = idx${y} + uniforms.axisDimLimit;
          }
          var dataIndices${y} : ${g.type.indices};
        `;for(let b=0,w=0;b<a;b++)b===n?(P+=`${a>1?`dataIndices${y}[${b}]`:`dataIndices${y}`} = u32(idx${y});`,w+=k):(P+=`${a>1?`dataIndices${y}[${b}]`:`dataIndices${y}`} = ${i.length>1?`outputIndices${y}[${w}]`:`outputIndices${y}`};`,w++);return P},M;if(e[0].dataType===9){let y=(k,P,b="")=>`
          let outputIndices${P} = ${E.offsetToIndices(`outputOffset + ${P}u`)};
          ${A(P)};
          let offset${P} = ${g.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${k}[${P}] = ${b}(${g.getByOffset(`index${P}`)}[component${P}]);
        `;M=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${y("value",0,"u32")}
        ${y("value",1,"u32")}
        ${y("value",2,"u32")}
        ${y("value",3,"u32")}
        ${E.setByOffset("global_idx","value")}
      `}else M=`
      let outputIndices = ${E.offsetToIndices("global_idx")};
      ${A("")};
      let value = ${g.getByIndices("dataIndices")};
      ${E.setByOffset("global_idx","value")};
      `;return`
      ${h.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,_,E)}
      ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${M}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:d}},I_=e=>zt({axis:e.axis}),O_=(e,r)=>{let t=e.inputs;$_(t),e.compute(A_(e.inputs,r))}}),F_,D_,L_,Cx=Ue(()=>{ht(),vt(),Et(),F_=(e,r,t,s,a,n,i,o,l)=>{let c=[{type:12,data:n},{type:12,data:s},{type:12,data:a},{type:12,data:t},{type:12,data:i},{type:12,data:o},{type:12,data:l}],p=[n];c.push(...at(r.dims,p));let d=h=>{let g=$e("indices_data",r.dataType,r.dims.length),_=rt("input_slice_offsets_data",12,1,1),E=[g,_],A=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:a.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${h.registerUniforms(A).declareVariables(...E)}
  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${a.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${a.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:d},{inputs:[r],outputs:[-1]})[0]},D_=(e,r)=>{let t=e.inputs,s=t[0].dims,a=t[0].dataType,n=t[1].dims,i=n[n.length-1],o=Te.sizeToDimension(n,n.length-1),l=Te.sizeFromDimension(s,r.batchDims+i),c=Te.sizeToDimension(s,r.batchDims),p=Te.sizeFromDimension(s,r.batchDims),d=o/c,h=new Array(i),g=l;for(let P=0;P<i;++P)h[i-1-P]=g,g*=s[r.batchDims+i-1-P];let _=F_(e,t[1],h,r.batchDims,s,o,d,p,i),E=r.batchDims+i;if(E>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let A=n.slice(0,-1).concat(s.slice(E)),M=Te.size(A),y=[{type:12,data:M},{type:12,data:l},...at(t[0].dims,_.dims,A)],k=P=>{let b=$e("data",t[0].dataType,t[0].dims.length),w=$e("slice_offsets",12,_.dims.length),T=rt("output",t[0].dataType,A.length);return`
          ${P.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(b,w,T)}
            ${P.mainStart()}
            ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:A,dataType:a}],dispatchGroup:{x:Math.ceil(M/64)},programUniforms:y}),getShaderSource:k},{inputs:[t[0],_]})},L_=e=>({batchDims:e.batch_dims,cacheKey:""})}),z_,B_,R_,N_,Sx=Ue(()=>{ht(),vt(),nr(),Et(),z_=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=Te.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,a=e[0],n=e[2],i=e.length===4?e[3]:void 0;if(n.dims.length!==a.dims.length||!a.dims.map((o,l)=>l===t?Math.ceil(o/s)===n.dims[l]:o===n.dims[l]).reduce((o,l)=>o&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==a.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==n.dims.length||!i.dims.map((o,l)=>o===n.dims[l]).reduce((o,l)=>o&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},B_=(e,r)=>{let t=e[0].dims,s=e[1].dims,a=t.length,n=Te.normalizeAxis(r.gatherAxis,a),i=Te.normalizeAxis(r.quantizeAxis,a),o=t.slice(0);o.splice(n,1,...s);let l=Te.size(o),c=e[2].dataType,p=e[0].dataType===22,d=[{type:12,data:l},{type:12,data:i},{type:12,data:n},{type:12,data:r.blockSize},...at(...e.map((g,_)=>g.dims),o)],h=g=>{let _=$e("data",e[0].dataType,e[0].dims.length),E=$e("inputIndices",e[1].dataType,e[1].dims.length),A=$e("scales",e[2].dataType,e[2].dims.length),M=e.length>3?$e("zeroPoint",e[3].dataType,e[3].dims.length):void 0,y=rt("output",c,o.length),k=[_,E,A];M&&k.push(M);let P=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${g.registerUniforms(P).declareVariables(...k,y)}
        ${g.mainStart()}
        let output_indices = ${y.offsetToIndices("global_idx")};
        var indices_indices = ${E.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${y.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${E.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${y.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${_.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${y.indicesGet("output_indices","i")};
          ${_.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${E.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${_.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {
          let index = ${y.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${_.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${_.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${_.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${A.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${A.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${A.getByIndices("scale_indices")};
        ${M?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${M.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${M.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Ar(c)}(quantized_data - zero_point) * scale;
        ${y.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((g,_)=>_!==1).map(g=>g.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(g,_)=>"rank")},getRunData:()=>({outputs:[{dims:o,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:h}},R_=(e,r)=>{let t=e.inputs;z_(t,r),e.compute(B_(e.inputs,r))},N_=e=>zt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),j_,V_,U_,W_,kx=Ue(()=>{ht(),vt(),nr(),Et(),j_=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},V_=(e,r)=>{let t=e[0].dims,s=e[0].dataType,a=t.length,n=e[1].dims,i=e[1].dataType,o=Te.normalizeAxis(r.axis,a),l=t[o],c=n.slice(0),p=Te.size(c),d=$e("input",s,a),h=$e("indicesInput",i,n.length),g=rt("output",s,c.length),_=[{type:12,data:p},{type:6,data:l},{type:12,data:o}];return _.push(...at(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:_}),getShaderSource:E=>`
      ${E.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,h,g)}
      ${E.mainStart()}
      ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},U_=e=>zt({axis:e.axis}),W_=(e,r)=>{let t=e.inputs;j_(t),e.compute(V_(e.inputs,r))}}),G_,K_,H_,q_,$x=Ue(()=>{ht(),vt(),Et(),G_=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},K_=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[a,n,i]=fh.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),o=[a,n];if(!o)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),p=Math.ceil(a/l),d=!0,h=Te.size(o),g=[{type:12,data:d?c:h},{type:12,data:a},{type:12,data:n},{type:12,data:i},{type:1,data:r.alpha},{type:1,data:r.beta}],_=["type","type"];e.length===3&&(g.push(...at(e[2].dims)),_.push("rank")),g.push(...at(o));let E=M=>{let y="";r.transA&&r.transB?y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let k=r.alpha===1?"":"value *= uniforms.alpha;",P=$e("a",e[0].dataType,e[0].dims),b=$e("b",e[1].dataType,e[1].dims),w=P.type.value,T=null,$=[P,b];e.length===3&&(T=$e("c",e[2].dataType,e[2].dims.length),$.push(T));let z=rt("output",e[0].dataType,o.length);$.push(z);let N=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${M.registerUniforms(N).declareVariables(...$)}

  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${w}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${y}
    }

    ${k}
    ${T!=null?`let cOffset = ${T.broadcastedIndicesToOffset("vec2(m, n)",z)}; value += ${w}(uniforms.beta) * ${T.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},A=M=>{let y=$e("a",e[0].dataType,e[0].dims),k=$e("b",e[1].dataType,e[1].dims),P=null,b=[y,k];e.length===3&&(P=$e("c",e[2].dataType,e[2].dims.length),b.push(P));let w=rt("output",e[0].dataType,o.length);b.push(w);let T=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],$="",z="";r.transA&&r.transB?(z=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(z=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(z=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(z=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,$="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let N=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${M.registerUniforms(T).declareVariables(...b)}
  var<workgroup> tile_a: array<array<${y.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${k.type.storage}, ${l}>, ${l}>;
  ${M.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${w.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${z}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${$}
      }
      workgroupBarrier();
    }

    ${N}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${P!=null?`let cOffset = ${P.broadcastedIndicesToOffset("vec2(m, n)",w)}; value += ${w.type.value}(uniforms.beta) * ${P.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:g}),getShaderSource:A}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:g}),getShaderSource:E}},H_=e=>{let r=e.transA,t=e.transB,s=e.alpha,a=e.beta;return{transA:r,transB:t,alpha:s,beta:a,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},q_=(e,r)=>{G_(e.inputs),e.compute(K_(e.inputs,r))}}),Ls,Ks,Ln,zn,Q_,X_,J_,Y_,Z_,eg,tg,rg,sg,ng,Ax=Ue(()=>{ht(),vt(),nr(),Et(),[Ls,Ks,Ln,zn]=[0,1,2,3],Q_=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},X_=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,J_=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,Y_=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Z_=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,eg=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${Ls}] = batch;
     indices[${Ks}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Ln}] = u32(r);
            indices[${zn}] = u32(c);
          }
        `;case"border":return`
          indices[${Ln}] = u32(clamp(r, 0, H - 1));
          indices[${zn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Ln}] = gs_reflect(r, border[1], border[3]);
          indices[${zn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,tg=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ls}], indices[${Ks}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ls}], indices[${Ks}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ls}], indices[${Ks}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ls}], indices[${Ks}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ls}], indices[${Ks}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ls}], indices[${Ks}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,rg=(e,r)=>{let t=$e("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],a=$e("grid",e[1].dataType,s.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Ls,Ks,Ln,zn]=[0,3,1,2]);let i=rt("output",e[0].dataType,n.length),o=t.type.value,l=Te.size(n),c=[{type:12,data:l},...at(e[0].dims,s,n)],p=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,a,i)}
  ${X_}
  ${J_(o)}
  ${Y_(r)}
  ${Z_(r)}
  ${eg(t,o,r)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Ln}]);
      let W_in = i32(uniforms.x_shape[${zn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Ls}], indices[${Ln}], indices[${zn}]);
      let nxy = ${a.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${tg(i,o,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let h=Te.size(n);return{outputs:[{dims:n,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:c}},getShaderSource:p}},sg=(e,r)=>{Q_(e.inputs),e.compute(rg(e.inputs,r))},ng=e=>zt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Lr,ag,ig,Ku,og,ni,lg,cg=Ue(()=>{ht(),vt(),nr(),pu(),xu(),Et(),cn(),Lr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,ag=(e,r)=>{let t=e[0],s=Lr(e,1),a=Lr(e,2),n=Lr(e,3),i=Lr(e,4),o=Lr(e,5),l=Lr(e,6),c=Lr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],d=t.dims[1],h=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],g=d,_=0,E=0,A=Math.floor(h/r.numHeads);if(l&&c&&Te.size(l.dims)&&Te.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==A)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==A)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');_=l.dims[2],E=l.dims[2]}else if(l&&Te.size(l.dims)||c&&Te.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let M;if(s&&Te.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');M=2,g=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==A)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect "value" be none when "key" has packed kv format.');M=5,g=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==A)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');M=0,g=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');M=3}if(n&&Te.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let y=_+g,k=0;if(i&&Te.size(i.dims)>0){k=8;let T=i.dims;throw T.length===1?T[0]===p?k=1:T[0]===3*p+2&&(k=3):T.length===2&&T[0]===p&&T[1]===y&&(k=5),k===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let P=!1,b=h;if(a&&Te.size(a.dims)>0){if(a.dims.length!==3&&a.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==a.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(a.dims.length===3){if(g!==a.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');b=a.dims[2]}else{if(g!==a.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');b=a.dims[1]*a.dims[3],P=!0}}let w=!1;if(i&&Te.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(o&&Te.size(o.dims)>0){if(o.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(o.dims[0]!==p||o.dims[1]!==r.numHeads||o.dims[2]!==d||o.dims[3]!==y)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:d,pastSequenceLength:_,kvSequenceLength:g,totalSequenceLength:y,maxSequenceLength:E,inputHiddenSize:0,hiddenSize:h,vHiddenSize:b,headSize:A,vHeadSize:Math.floor(b/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:k,scale:r.scale,broadcastResPosBias:w,passPastInKv:P,qkvFormat:M}},ig=e=>zt({...e}),Ku=zt({perm:[0,2,1,3]}),og=(e,r,t,s,a,n,i)=>{let o=[s,a,n],l=Te.size(o),c=[{type:12,data:l},{type:12,data:i},{type:12,data:n}],p=d=>{let h=rt("qkv_with_bias",r.dataType,o),g=$e("qkv",r.dataType,o),_=$e("bias",t.dataType,o),E=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(E).declareVariables(g,_,h)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},ni=(e,r,t,s,a,n,i,o)=>{let l=n;if(i&&Te.size(i.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=og(e,n,i,r,s,t*a,o),l=l.reshape([r,s,t,a]),t===1||s===1?l:e.compute(qr(l,Ku.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([r,s,t,a])),t===1||s===1?l:e.compute(qr(l,Ku.perm),{inputs:[l],outputs:[-1]})[0]},lg=(e,r)=>{let t=ag(e.inputs,r),s=e.inputs[0],a=Lr(e.inputs,1),n=Lr(e.inputs,2),i=Lr(e.inputs,3),o=Lr(e.inputs,4),l=Lr(e.inputs,5),c=Lr(e.inputs,6),p=Lr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((a==null?void 0:a.dims.length)===5)throw new Error("Packed KV is not implemented");let d=a&&n&&a.dims.length===4&&n.dims.length===4,h=ni(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,i,0);if(d)return Za(e,h,a,n,o,void 0,c,p,l,t);if(!a||!n)throw new Error("key and value must be provided");let g=ni(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,a,i,t.hiddenSize),_=ni(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,i,2*t.hiddenSize);Za(e,h,g,_,o,void 0,c,p,l,t)}}),ug,dg,pg,hg,Hu,fg,mg,_g=Ue(()=>{ht(),vt(),nr(),Et(),ug=e=>{if(!e||e.length<1)throw new Error("too few inputs")},dg=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(a=>t.push(Number(a))),s=t.length),zt({numOutputs:s,axis:r.axis,splitSizes:t})},pg=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${st("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,hg=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let a=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(a):s===0?t.push(`if (output_number == ${s}u) { ${a} }`):s===r-1?t.push(`else { ${a} }`):t.push(`else if (output_number == ${s}) { ${a} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},Hu=(e,r)=>{let t=e[0].dims,s=Te.size(t),a=e[0].dataType,n=Te.normalizeAxis(r.axis,t.length),i=new Array(r.numOutputs),o=$e("input",a,t.length),l=new Array(r.numOutputs),c=[],p=[],d=0,h=[{type:12,data:s}];for(let _=0;_<r.numOutputs;_++){d+=r.splitSizes[_],l[_]=d;let E=t.slice();E[n]=r.splitSizes[_],p.push(E),i[_]=rt(`output${_}`,a,E.length),c.push({dims:p[_],dataType:e[0].dataType})}h.push({type:12,data:l},...at(t,...p));let g=_=>`
  ${_.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...i)}
  ${pg(l.length)}
  ${hg(i)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${o.offsetToIndices("global_idx")};
    var index = ${o.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${st("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${o.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:h})}},fg=(e,r)=>{ug(e.inputs);let t=e.inputs.length===1?r:dg(e.inputs,r);e.compute(Hu(e.inputs,t),{inputs:[0]})},mg=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return zt({axis:r,numOutputs:s,splitSizes:t})}}),gg,wg,qu,yg,Ix=Ue(()=>{nr(),xu(),cg(),_g(),cn(),gg=(e,r)=>{if(r.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],a=e[2],n=e[3],i=e[4];if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let o=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?o?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],d=c,h=0,g=!s||s.dims.length===0,_=Math.floor(g?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);g&&(p=_*r.numHeads);let E=n&&n.dims.length!==0,A=i&&i.dims.length!==0;if(E&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===_)throw new Error("BSNH pastKey/pastValue is not supported");if(E&&A){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');h=n.dims[2]}else if(E||A)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let M=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect "value" be none when "key" has packed kv format.');d=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');M=3}let y=0,k=!1,P=r.kvNumHeads?_*r.kvNumHeads:p;if(a&&a.dims.length>0){if(a.dims.length!==3&&a.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==a.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(a.dims.length===3){if(d!==a.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');P=a.dims[2]}else{if(d!==a.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');P=a.dims[1]*a.dims[3],k=!0}}let b=e.length>4?e[5]:void 0;if(b&&b.dims.length!==1&&b.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:h,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:P,headSize:_,vHeadSize:Math.floor(P/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:y,scale:r.scale,broadcastResPosBias:!1,passPastInKv:k,qkvFormat:M}},wg=zt({perm:[0,2,1,3]}),qu=(e,r,t)=>{let s=r,a=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,a,t.headSize]),s=e.compute(qr(s,wg.perm),{inputs:[s],outputs:[-1]})[0]),s},yg=(e,r)=>{var A;let t=gg(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((A=e.inputs[1])==null?void 0:A.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],a=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,o=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=zt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[h,g,_]=!a&&!n?e.compute(Hu([s],d),{inputs:[s],outputs:[-1,-1,-1]}):[s,a,n],E=ni(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,h,void 0,0);Za(e,E,qu(e,g,t),qu(e,_,t),void 0,void 0,i,o,void 0,t,l,c)}}),Qu,Mg,bg,vg,Ox=Ue(()=>{ht(),vt(),cn(),Et(),Qu=(e,r,t,s,a,n,i,o)=>{let l=tr(n),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,d=a*i,h=64;d===1&&(h=256);let g=[a,i,n/l],_=[a,i,2],E=["rank","type","type"],A=[];A.push(...at(g,_));let M=y=>{let k=$e("x",r.dataType,3,l),P=$e("scale",t.dataType,t.dims),b=$e("bias",s.dataType,s.dims),w=rt("output",1,3,2),T=[k,P,b,w];return`
  var<workgroup> workgroup_shared : array<${p}, ${h}>;
  const workgroup_size = ${h}u;
  ${y.declareVariables(...T)}
  ${y.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${k.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${ln("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${ln("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o};${h}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:_,dataType:1}],dispatchGroup:{x:d},programUniforms:A}),getShaderSource:M},{inputs:[r,t,s],outputs:[-1]})[0]},Mg=(e,r,t)=>{let s=r[0].dims,a=s,n=2,i=s[0],o=s[1],l=Te.sizeFromDimension(s,n),c=tr(l),p=Te.size(a)/c,d=Qu(e,r[0],r[1],r[2],i,l,o,t.epsilon),h=[i,o,l/c],g=[i,o],_=["type","none"],E=A=>{let M=$e("x",r[0].dataType,h.length,c),y=$e("scale_shift",1,g.length,2),k=rt("output",r[0].dataType,h.length,c),P=[M,y,k];return`
  ${A.registerUniform("output_size","u32").declareVariables(...P)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${k.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${y.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${M.getByOffset("global_idx")} * ${k.type.value}(scale_shift.x) + ${k.type.value}(scale_shift.y);
      ${k.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...at(h,g,h)]}),getShaderSource:E},{inputs:[r[0],d]})},bg=(e,r,t)=>{let s=r[0].dims,a=s,n=s[0],i=s[s.length-1],o=Te.sizeFromDimension(s,1)/i,l=tr(i),c=Te.size(a)/l,p=[{type:12,data:o},{type:12,data:Math.floor(i/l)}],d=["type","type"],h=!1,g=[0,s.length-1];for(let M=0;M<s.length-2;M++)h=h||s[M+1]!==1,g.push(M+1);h=h&&s[s.length-1]!==1;let _=h?e.compute(qr(e.inputs[0],g),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(M,y)=>s[g[y]])),E=Qu(e,_,r[1],r[2],n,o,i,t.epsilon),A=M=>{let y=mr(r[0].dataType),k=l===1?"vec2f":`mat${l}x2f`,P=T=>{let $=T===0?"x":"y",z=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${y}(${z}(scale.${$}))`;case 2:return`vec2<${y}>(${z}(scale[0].${$}, scale[1].${$}))`;case 4:return`vec4<${y}>(${z}(scale[0].${$}, scale[1].${$}, scale[2].${$}, scale[3].${$}))`;default:throw new Error(`Not supported compoents ${l}`)}},b=$e("input",r[0].dataType,r[0].dims,l),w=rt("output",r[0].dataType,a,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${b.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${k}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${w.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${M.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${P(0)}, ${P(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:A},{inputs:[r[0],E]})},vg=(e,r)=>{r.format==="NHWC"?bg(e,e.inputs,r):Mg(e,e.inputs,r)}}),xg,Tg,Eg,Fx=Ue(()=>{ht(),vt(),Et(),xg=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Tg=(e,r,t)=>{let s=r.simplified,a=e[0].dims,n=e[1],i=!s&&e[2],o=a,l=Te.normalizeAxis(r.axis,a.length),c=Te.sizeToDimension(a,l),p=Te.sizeFromDimension(a,l),d=Te.size(n.dims),h=i?Te.size(i.dims):0;if(d!==p||i&&h!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${h}`);let g=[];for(let b=0;b<a.length;++b)b<l?g.push(a[b]):g.push(1);let _=tr(p),E=["type","type"],A=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/_)},{type:1,data:r.epsilon}];i&&E.push("type");let M=t>1,y=t>2,k=b=>{let w=mr(e[0].dataType),T=[$e("x",e[0].dataType,e[0].dims,_),$e("scale",n.dataType,n.dims,_)];i&&T.push($e("bias",i.dataType,i.dims,_)),T.push(rt("output",e[0].dataType,o,_)),M&&T.push(rt("mean_data_output",1,g)),y&&T.push(rt("inv_std_output",1,g));let $=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${b.registerUniforms($).declareVariables(...T)}
  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${_u("f32",_)};
    var mean_square_vector = ${_u("f32",_)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${ia(w,_,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${ln("mean_vector",_)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${ln("mean_square_vector",_)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${ia(w,_,"x[j + offset]")};
      let f32scale = ${ia(w,_,"scale[j]")};
      output[j + offset] = ${T[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${ia(w,_,"bias[j]")}`:""}
      );
    }

    ${M?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},P=[{dims:o,dataType:e[0].dataType}];return M&&P.push({dims:g,dataType:1}),y&&P.push({dims:g,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${t};${s}`,inputDependencies:E},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:A}),getShaderSource:k}},Eg=(e,r)=>{xg(e.inputs),e.compute(Tg(e.inputs,r,e.outputCount))}}),Pg,Cg,Dx=Ue(()=>{vt(),Au(),Du(),Pg=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Cg=e=>{Pg(e.inputs);let r=na.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute($u(e.inputs,{activation:""},r));else{let a=r[r.length-2],n=Te.size(e.inputs[0].dims.slice(0,-2)),i=Te.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&a===1&&i===1){let o=e.inputs[0].reshape([1,n,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,n,t],p=[o,l];e.compute(Qo(p,{activation:""},r,c),{inputs:p})}else e.compute(Qo(e.inputs,{activation:""},r))}}}),Sg,kg,$g,Ag,Ig,Lx=Ue(()=>{ht(),vt(),nr(),Et(),Sg=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let a=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,i=e[1];if(!Te.areEqual(i.dims,[r.n,a,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(Te.size(o)!==r.n*a)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*a:r.n*Math.floor((a+1)/2);if(Te.size(l)!==c)throw new Error("zeroPoints input size error.")}},kg=(e,r)=>{let t=e[0].dims,s=t.length,a=t[s-2],n=r.k,i=r.n,o=t.slice(0,s-2),l=Te.size(o),c=e[1].dims[2]/4,p=e[0].dataType,d=tr(r.k),h=tr(c),g=tr(i),_=o.concat([a,i]),E=a>1&&i/g%2===0?2:1,A=Te.size(_)/g/E,M=64,y=[],k=[l,a,n/d],P=Te.convertShape(e[1].dims).slice();P.splice(-1,1,c/h),y.push(...at(k)),y.push(...at(P)),y.push(...at(e[2].dims)),e.length===4&&y.push(...at(Te.convertShape(e[3].dims)));let b=[l,a,i/g];y.push(...at(b));let w=T=>{let $=k.length,z=$e("a",e[0].dataType,$,d),N=$e("b",12,P.length,h),Y=$e("scales",e[2].dataType,e[2].dims.length),J=[z,N,Y],W=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;W&&J.push(W);let te=b.length,H=rt("output",e[0].dataType,te,g),R=mr(e[0].dataType),q=(()=>{switch(d){case 1:return`array<${R}, 8>`;case 2:return`mat4x2<${R}>`;case 4:return`mat2x4<${R}>`;default:throw new Error(`${d}-component is not supported.`)}})(),ee=()=>{let j=`
          // reuse a data
            var input_offset = ${z.indicesToOffset(`${z.type.indices}(batch, row, word_offset)`)};
            var a_data: ${q};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${z.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let F=0;F<g*E;F++)j+=`
            b_value = ${h===1?`b${F}_data`:`b${F}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${q}(${Array.from({length:4},(K,ae)=>`${R}(b_value_lower[${ae}]), ${R}(b_value_upper[${ae}])`).join(", ")});
            b_dequantized_values = ${d===1?`${q}(${Array.from({length:8},(K,ae)=>`(b_quantized_values[${ae}] - ${W?`zero_point${F}`:"zero_point"}) * scale${F}`).join(", ")});`:`(b_quantized_values - ${q}(${Array(8).fill(`${W?`zero_point${F}`:"zero_point"}`).join(",")})) * scale${F};`};
            workgroup_shared[local_id.x * ${E} + ${Math.floor(F/g)}]${g>1?`[${F%g}]`:""} += ${Array.from({length:8/d},(K,ae)=>`${d===1?`a_data[${ae}] * b_dequantized_values[${ae}]`:`dot(a_data[${ae}], b_dequantized_values[${ae}])`}`).join(" + ")};
          `;return j},le=()=>{let j=`
            var col_index = col * ${g};
            ${W?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${R}(8);`}
            `;for(let F=0;F<g*E;F++)j+=`
            let scale${F} = ${Y.getByOffset("col_index * nBlocksPerCol + block")};
            ${W?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${W.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${F} = ${R}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return j},de=()=>{let j=`col_index = col * ${g};`;for(let F=0;F<g*E;F++)j+=`
            let b${F}_data = ${N.getByIndices(`${N.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return j+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${q};
            var b_dequantized_values: ${q};`,j};return`
        var<workgroup> workgroup_shared: array<${H.type.value}, ${E*M}>;
        ${T.declareVariables(...J,H)}
        ${T.mainStart([M,1,1])}
          let output_indices = ${H.offsetToIndices(`(global_idx / ${M}) * ${E}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${M}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/d};
            ${le()}
            for (var word: u32 = 0; word < ${c}; word += ${h}) {
              ${de()}
              for (var i: u32 = 0; i < ${h}; i++) {
                ${ee()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${E}) {
            var output_value: ${H.type.value} = ${H.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${M}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${E};
            }
            ${H.setByIndices(`${H.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${d};${h};${g};${E};${M}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:A},programUniforms:y}),getShaderSource:w}},$g=(e,r)=>{let t=e[0].dims,s=t.length,a=t[s-2],n=r.k,i=r.n,o=t.slice(0,s-2),l=Te.size(o),c=e[1].dims[2]/4,p=e[0].dataType,d=tr(r.k),h=tr(c),g=o.concat([a,i]),_=128,E=i%8===0?8:i%4===0?4:1,A=_/E,M=A*h*8,y=M/d,k=M/r.blockSize,P=Te.size(g)/E,b=[],w=[l,a,n/d],T=Te.convertShape(e[1].dims).slice();T.splice(-1,1,c/h),b.push(...at(w)),b.push(...at(T)),b.push(...at(e[2].dims)),e.length===4&&b.push(...at(Te.convertShape(e[3].dims)));let $=[l,a,i];b.push(...at($));let z=N=>{let Y=w.length,J=$e("a",e[0].dataType,Y,d),W=$e("b",12,T.length,h),te=$e("scales",e[2].dataType,e[2].dims.length),H=[J,W,te],R=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;R&&H.push(R);let q=$.length,ee=rt("output",e[0].dataType,q),le=mr(e[0].dataType),de=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${le}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${le}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${le}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${le}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${J.type.value}, ${y}>;
        var<workgroup> inter_results: array<array<${ee.type.value}, ${A}>, ${E}>;
        ${N.declareVariables(...H,ee)}
        ${N.mainStart([A,E,1])}
          let output_indices = ${ee.offsetToIndices(`workgroup_index * ${E}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${k} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${y}; a_offset += ${_})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${J.getByIndices(`${J.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${J.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${k} + local_id.x;
            ${R?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${R.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${le}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${le}(8);`}
            let scale = ${te.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${W.getByIndices(`${W.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/d};
            for (var i: u32 = 0; i < ${h}; i++) {
              ${de()}
              let b_value = ${h===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${le}>(${Array.from({length:4},(j,F)=>`${le}(b_value_lower[${F}]), ${le}(b_value_upper[${F}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${le}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(j,F)=>`${`dot(a_data${F}, b_dequantized_values[${F}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${E}) {
            var output_value: ${ee.type.value} = ${ee.type.value}(0);
            for (var b = 0u; b < ${A}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ee.setByIndices(`${ee.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${d};${h};${A};${E}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:g,dataType:p}],dispatchGroup:{x:P},programUniforms:b}),getShaderSource:z}},Ag=(e,r)=>{Sg(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute($g(e.inputs,r)):e.compute(kg(e.inputs,r))},Ig=e=>zt(e)}),Og,Fg,Dg,Lg,zg,Bg,Rg,Ng,jg,zx=Ue(()=>{ht(),vt(),Et(),Og=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Fg=(e,r,t)=>{let s="";for(let a=r-1;a>=0;--a)s+=`
            k = i32(${e.indicesGet("indices",a)}) - ${st("uniforms.pads",a,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${st("uniforms.x_shape",a,r)})) {
              break;
            }
            offset += k * i32(${st("uniforms.x_strides",a,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},Dg=(e,r,t)=>{let s="";for(let a=r-1;a>=0;--a)s+=`
                k = i32(${e.indicesGet("indices",a)}) - ${st("uniforms.pads",a,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${st("uniforms.x_shape",a,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${st("uniforms.x_shape",a,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${st("uniforms.x_strides",a,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Lg=(e,r,t)=>{let s="";for(let a=r-1;a>=0;--a)s+=`
                k = i32(${e.indicesGet("indices",a)}) - ${st("uniforms.pads",a,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${st("uniforms.x_shape",a,r)})) {
                  k = i32(${st("uniforms.x_shape",a,r)}) - 1;
                }
                offset += k * i32(${st("uniforms.x_strides",a,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},zg=(e,r,t)=>{let s="";for(let a=r-1;a>=0;--a)s+=`
                k = i32(${e.indicesGet("indices",a)}) - ${st("uniforms.pads",a,t)};
                if (k < 0)  {
                  k += i32(${st("uniforms.x_shape",a,r)}]);
                }
                if (k >= i32(${st("uniforms.x_shape",a,r)})) {
                  k -= i32(${st("uniforms.x_shape",a,r)});
                }
                offset += k * i32(${st("uniforms.x_strides",a,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Bg=(e,r,t)=>{switch(t.mode){case 0:return Fg(e,r,t.pads.length);case 1:return Dg(e,r,t.pads.length);case 2:return Lg(e,r,t.pads.length);case 3:return zg(e,r,t.pads.length);default:throw new Error("Invalid mode")}},Rg=(e,r)=>{let t=Te.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,a=Te.size(t),n=[{type:12,data:a},{type:6,data:r.pads}],i=e.length>=3&&e[2].data;r.mode===0&&n.push({type:i?e[2].dataType:1,data:r.value}),n.push(...at(e[0].dims,t));let o=["rank"],l=c=>{let p=rt("output",e[0].dataType,t.length),d=$e("x",e[0].dataType,s.length),h=d.type.value,g=Bg(p,s.length,r),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&_.push({name:"constant_value",type:i?h:"f32"}),`
            ${c.registerUniforms(_).declareVariables(d,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${h}(0);
            ${g}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${i}`,inputDependencies:o},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Te.size(t)/64)},programUniforms:n}),getShaderSource:l}},Ng=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,a=e[0].dims.length,n=new Int32Array(2*a).fill(0);if(e.length>=4){let o=e[3].getBigInt64Array();for(let l=0;l<o.length;l++)n[Number(o[l])]=Number(t[l]),n[Number(o[l])+a]=Number(t[l+o.length])}else t.forEach((o,l)=>n[Number(l)]=Number(o));let i=[];return n.forEach(o=>i.push(o)),{mode:r.mode,value:s,pads:i}}else return r},jg=(e,r)=>{Og(e.inputs);let t=Ng(e.inputs,r);e.compute(Rg(e.inputs,t),{inputs:[0]})}}),ai,Xu,Ju,Yu,Zu,Vg,Ug,ed,td,Wg,Gg,rd,Kg,Hg,sd,qg,Qg,Xg,Jg,Bx=Ue(()=>{_s(),ht(),vt(),Et(),ai=e=>{if(qt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Xu=(e,r,t)=>{let s=r.format==="NHWC",a=e.dims.slice();s&&a.splice(1,0,a.pop());let n=Object.hasOwnProperty.call(r,"dilations"),i=r.kernelShape.slice(),o=r.strides.slice(),l=n?r.dilations.slice():[],c=r.pads.slice();Wo.adjustPoolAttributes(t,a,i,o,l,c);let p=Wo.computePoolOutputShape(t,a,o,l,i,c,r.autoPad),d=Object.assign({},r);n?Object.assign(d,{kernelShape:i,strides:o,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(d,{kernelShape:i,strides:o,pads:c,cacheKey:r.cacheKey});let h=p.slice();return h.push(h.splice(1,1)[0]),[d,s?h:p]},Ju=(e,r)=>{let t=r.format==="NHWC",s=Te.size(e),a=Te.size(r.kernelShape),n=[{type:12,data:s},{type:12,data:a}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let o=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],d=!!(c+p);n.push({type:12,data:o},{type:12,data:l},{type:12,data:c},{type:12,data:p}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let h=!1;if(r.kernelShape.length===2){let g=r.kernelShape[r.kernelShape.length-2],_=r.strides[r.strides.length-2],E=r.pads[r.pads.length/2-2],A=r.pads[r.pads.length-2];h=!!(E+A),n.push({type:12,data:g},{type:12,data:_},{type:12,data:E},{type:12,data:A}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,i,!0,d,h]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=Te.computeStrides(r.kernelShape);n.push({type:12,data:o},{type:12,data:r.pads},{type:12,data:r.strides}),i.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[n,i,!!l,!1,!1]}},Yu=(e,r,t,s,a,n,i,o,l,c,p,d)=>{let h=a.format==="NHWC",g=r.type.value,_=rt("output",r.type.tensor,s);if(a.kernelShape.length<=2){let E="",A="",M="",y=t-(h?2:1);if(p?E=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${y}] < 0 || xIndices[${y}]
                      >= uniforms.x_shape[${y}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:E=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,a.kernelShape.length===2){let k=t-(h?3:2);d?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${k}] < 0 || xIndices[${k}] >= uniforms.x_shape[${k}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                `,M=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,_)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${_.offsetToIndices("global_idx")};
              var xIndices = ${_.offsetToIndices("global_idx")};

              var value = ${g}(${o});
              var pad = 0;
              ${A}
              ${E}
              ${M}
              ${i}

              output[global_idx] = value;
            }`}else{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let E=a.kernelShape.length,A=a.pads.length,M="";return c?M=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:M=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(r,_)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${_.offsetToIndices("global_idx")};
              var xIndices = ${_.offsetToIndices("global_idx")};

              var offsets: array<u32, ${E}>;

              var value = ${g}(${o});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${E-1}u; j++) {
                  offsets[j] = offset / ${st("uniforms.kernelStrides","j",E)};
                  offset -= offsets[j] * ${st("uniforms.kernelStrides","j",E)};
                }
                offsets[${E-1}] = offset;

                isPad = false;
                for (var j = ${t-E}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${st("uniforms.strides",`j - ${t-E}u`,E)}
                    + offsets[j - ${t-E}u] - ${st("uniforms.pads","j - 2u",A)};
                  ${M}
              }
              ${i}

              output[global_idx] = value;
            }`}},Zu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Vg=e=>`${Zu(e)};${e.countIncludePad}`,Ug=e=>`${Zu(e)};${e.storageOrder};${e.dilations}`,ed=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),td=(e,r,t,s)=>{let[a,n]=Xu(r,s,t),i=$e("x",r.dataType,r.dims.length),o=i.type.value,l="value += x_val;",c="";a.countIncludePad?c+=`value /= ${o}(uniforms.kernelSize);`:c+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[p,d,h,g,_]=Ju(n,a);p.push(...at(r.dims,n));let E=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${h};${g};${_}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Te.size(n)/64)},programUniforms:p}),getShaderSource:A=>Yu(A,i,r.dims.length,n.length,a,l,c,0,d,h,g,_)}},Wg=e=>{let r=e.count_include_pad!==0,t=ed(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:Vg(s)}},Gg=(e,r)=>{ai(e.inputs),e.compute(td("AveragePool",e.inputs[0],!1,r))},rd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Kg=e=>{let r=e.format;return{format:r,...rd,cacheKey:r}},Hg=(e,r)=>{ai(e.inputs),e.compute(td("GlobalAveragePool",e.inputs[0],!0,r))},sd=(e,r,t,s)=>{let[a,n]=Xu(r,s,t),i=`
      value = max(x_val, value);
    `,o="",l=$e("x",r.dataType,r.dims.length),c=["rank"],[p,d,h,g,_]=Ju(n,a);return p.push(...at(r.dims,n)),{name:e,shaderCache:{hint:`${s.cacheKey};${h};${g};${_}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Te.size(n)/64)},programUniforms:p}),getShaderSource:E=>Yu(E,l,r.dims.length,n.length,a,i,o,r.dataType===10?-65504:-1e5,d,h,g,_)}},qg=(e,r)=>{ai(e.inputs),e.compute(sd("MaxPool",e.inputs[0],!1,r))},Qg=e=>{let r=e.storage_order,t=e.dilations,s=ed(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let a={storageOrder:r,dilations:t,...s,cacheKey:""};return{...a,cacheKey:Ug(a)}},Xg=e=>{let r=e.format;return{format:r,...rd,cacheKey:r}},Jg=(e,r)=>{ai(e.inputs),e.compute(sd("GlobalMaxPool",e.inputs[0],!0,r))}}),Yg,Zg,ew,tw,Rx=Ue(()=>{ht(),vt(),nr(),Et(),Yg=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((a,n)=>n===r.axis||a===e[0].dims[n]).reduce((a,n)=>a&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Zg=(e,r)=>{let t=Te.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,a=s===3,n=e[0].dims,i=e[1].dataType,o=Te.size(n),l=s===3||s===2,c=l?[Math.ceil(Te.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,d=e.length>2?e[2]:void 0,h=d?l?[Math.ceil(Te.size(d.dims)/4)]:d.dims:void 0,g=p.length===0||p.length===1&&p[0]===1,_=g===!1&&p.length===1,E=tr(o),A=g&&(!l||E===4),M=A?E:1,y=A&&!l?E:1,k=$e("input",l?12:s,c.length,y),P=$e("scale",i,p.length),b=d?$e("zero_point",l?12:s,h.length):void 0,w=rt("output",i,n.length,M),T=[k,P];b&&T.push(b);let $=[c,p];d&&$.push(h);let z=[{type:12,data:o/M},{type:12,data:t},{type:12,data:r.blockSize},...at(...$,n)],N=Y=>{let J=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Y.registerUniforms(J).declareVariables(...T,w)}
      ${Y.mainStart()}
          ${Y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${w.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${k.getByOffset("global_idx / 4")};
            let x_vec = ${a?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${M===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${k.getByOffset("global_idx")};`};

          // Set scale input
          ${g?`let scale_value= ${P.getByOffset("0")}`:_?`
            let scale_index = ${w.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${P.getByOffset("scale_index")};`:`
            var scale_indices: ${P.type.indices} = output_indices;
            let index = ${P.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${P.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${P.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${b?g?l?`
                let zero_point_input = ${b.getByOffset("0")};
                let zero_point_vec =  ${a?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${b.getByOffset("0")}`:_?l?`
                let zero_point_index = ${w.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${b.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${a?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${w.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${b.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${P.indicesToOffset("scale_indices")};
                let zero_point_input = ${b.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${a?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${b.getByIndices("scale_indices")};`:`let zero_point_value = ${l?a?"i32":"u32":k.type.value}(0);`};
      // Compute and write output
      ${w.setByOffset("global_idx",`${w.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getShaderSource:N,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:Math.ceil(o/M/64),y:1,z:1},programUniforms:z})}},ew=(e,r)=>{Yg(e.inputs,r),e.compute(Zg(e.inputs,r))},tw=e=>zt({axis:e.axis,blockSize:e.blockSize})}),rw,sw,nw,Nx=Ue(()=>{_s(),ht(),Et(),rw=(e,r,t)=>{let s=e===r,a=e<r&&t<0,n=e>r&&t>0;if(s||a||n)throw new Error("Range these inputs' contents are invalid.")},sw=(e,r,t,s)=>{let a=Math.abs(Math.ceil((r-e)/t)),n=[a],i=a,o=[{type:12,data:i},{type:s,data:e},{type:s,data:t},...at(n)],l=c=>{let p=rt("output",s,n.length),d=p.type.value,h=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${c.registerUniforms(h).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:o})}},nw=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),qt.webgpu.validateInputContent&&rw(r,t,s),e.compute(sw(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),aw,iw,ow,lw,jx=Ue(()=>{ht(),vt(),nr(),Et(),aw=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let a=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${a}bitcast<${s}>(oldValue) + (${t})${n}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${a}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${a}min(bitcast<${s}>(oldValue), (${t}))${n}`;case"mul":return`${a}(bitcast<${s}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},iw=(e,r)=>{let t=e[0].dims,s=e[1].dims,a=t,n=1,i=Math.ceil(Te.size(s)/n),o=s[s.length-1],l=Te.sizeFromDimension(t,o),c=[{type:12,data:i},{type:12,data:o},{type:12,data:l},...at(e[1].dims,e[2].dims,a)],p=d=>{let h=$e("indices",e[1].dataType,e[1].dims.length),g=$e("updates",e[2].dataType,e[2].dims.length,n),_=r.reduction!=="none"&&r.reduction!==""?gh("output",e[0].dataType,a.length):rt("output",e[0].dataType,a.length,n);return`
      ${d.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(h,g,_)}
      ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    let n = ${Te.size(s)};
    for (var i = 0; i < n; i = i + 1) {
      for (var j = i + 1; j < n; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    indices_start = 0u;
  }
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${aw(r.reduction,"output[data_offset + i]","value",_.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c}),getShaderSource:p}},ow=e=>zt({reduction:e.reduction}),lw=(e,r)=>{e.compute(iw(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),cw,uw,dw,nd,pw,hw,fw,mw,_w,gw,ww,yw,ad,Mw,bw,vw,xw,Tw,Ew,Pw,Vx=Ue(()=>{ht(),vt(),nr(),Et(),cw=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},uw=(e,r,t)=>{r.every(a=>a>=0&&a<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((a,n)=>s[a]=e[n]),s},dw=(e,r,t,s,a,n)=>{let[i,o,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(p=>n.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&e[o].dims.length===1&&e[o].dims[0]>0){if(e[o].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");cw(s,r),r.axes.length>0&&uw(s,r.axes,c).forEach((p,d)=>s[d]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>a.push(Number(p))),a.length!==0&&a.length!==c&&t>=18&&a.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(a.length!==0&&a.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof a<"u"&&s.length>0&&a.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},nd=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,pw=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${nd("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${nd("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",hw=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",fw=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),a=e.length===0?s:e.slice();return r.length>0?(r.forEach((n,i)=>{s[n]=a[i],s[i+t]=a[r.length+i]}),s):a},mw=(e,r,t,s)=>{let a=[];if(t.length>0)if(s.length>0){if(e.forEach(n=>a.push(n)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((n,i)=>a[n]=t[i])}else t.forEach(n=>a.push(n));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");a=e.map((n,i)=>Math.round(n*r[i]))}return a},_w=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>r[n]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>r[n]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let a=e.slice();return t.axes.length>0?(t.axes.forEach(n=>r[n]=s),t.axes.forEach(n=>a[n]=Math.round(e[n]*r[n]))):(r.fill(s,0,r.length),a.forEach((n,i)=>a[i]=Math.round(n*r[i]))),a},gw=(e,r,t,s,a)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${st("uniforms.scales","i",s)};
        var roi_low = ${st("uniforms.roi","i",a)};
        var roi_hi = ${st("uniforms.roi",`i + ${r.length}`,a)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${st("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${st("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,ww=(e,r,t,s,a,n,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${st("uniforms.scales","i",a)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${st("uniforms.roi","i",n)};
          var roi_hi = ${st("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${st("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${st("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,yw=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${st("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,ad=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",Mw=(e,r,t,s,a)=>{let[n,i,o,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",o,`max(0, min(col, ${t[o]} - 1))`)};
      ${ad(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${i}];
      var col:${c} = originalIndices[${o}];
      ${s?`if (row < 0 || row > (${t[i]} - 1) || col < 0 || col > (${t[o]} - 1)) {
        return ${a};
      }`:""};
      row = max(0, min(row, ${t[i]} - 1));
      col = max(0, min(col, ${t[o]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},bw=(e,r,t,s,a,n,i,o,l,c)=>{let p=t.length===2,[d,h]=p?[0,1]:[2,3],g=e.type.value,_=E=>{let A=E===d?"row":"col";return`
      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${g} {
        var output_index = ${r.indicesGet("output_indices",E)};
        var originalIdx: ${g} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[E]},
        ${s[E]}, ${t[E]}, ${n[E]}, ${n[E]} + ${t.length});
        var fractOriginalIdx: ${g} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${o} && (originalIdx < 0 || originalIdx > (${t[E]} - 1))) {
          return ${l};
        }
        var data: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${A}: ${g} = originalIdx + ${g}(i);
          if (${A} < 0 || ${A} >= ${t[E]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:o?`return ${l};`:`${A} = max(0, min(${A}, ${t[E]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",E,`u32(${A})`)};
          data[i + 1] = ${E===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${_(d)};
    ${_(h)};
  fn getCubicInterpolationCoefs(s: ${g}) -> array<${g}, 4> {
    var absS = abs(s);
    var coeffs: array<${g}, 4> = array<${g}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${g} = 1.0 - absS;
    var twoMinusAbsS: ${g} = 2.0 - absS;
    var onePlusAbsS: ${g} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${g}, 4>, coefs: array<${g}, 4>) -> ${g} {
    var coefsSum: ${g} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${g} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},vw=(e,r,t,s,a)=>{let[n,i,o,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",o,`max(0, min(height, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${ad(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${i}];
      var height:${p} = originalIndices[${o}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[i]} - 1) || height < 0 || height > (${t[o]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${a};
        }`:""};

    depth = max(0, min(depth, ${t[i]} - 1));
      height = max(0, min(height, ${t[o]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},xw=(e,r,t,s,a,n)=>{let i=e.dims,o=fw(n,r.axes,i.length),l=mw(i,s,a,r.axes),c=s.slice();s.length===0&&(c=i.map((y,k)=>y===0?1:l[k]/y),r.keepAspectRatioPolicy!=="stretch"&&(l=_w(i,c,r)));let p=rt("output",e.dataType,l.length),d=$e("input",e.dataType,i.length),h=Te.size(l),g=i.length===l.length&&i.every((y,k)=>y===l[k]),_=r.coordinateTransformMode==="tf_crop_and_resize",E=r.extrapolationValue,A=d.type.value,M=y=>`
      ${g?"":`
      ${pw(r.coordinateTransformMode,A)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${yw(d,i)};
              ${hw(r.nearestMode,t,A)};
              ${ww(d,p,i,l,c.length,o.length,_)};
              `;case"linear":return`
              ${gw(p,i,l,c.length,o.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${Mw(d,p,i,_,E)}`;if(i.length===3||i.length===5)return`${vw(d,p,i,_,E)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${bw(d,p,i,l,c,o,r.cubicCoeffA,_,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${y.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",o.length).declareVariables(d,p)}
      ${y.mainStart()}
        ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${a.length>0?a:""}|${o.length>0?o:""}|${g}|${r.mode==="nearest"?i.length:i}`,inputDependencies:["rank"]},getShaderSource:M,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:c},{type:1,data:o},...at(i,l)]})}},Tw=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Ew=(e,r)=>{let t=[],s=[],a=[],n=Tw(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");dw(e.inputs,r,n,t,s,a),e.compute(xw(e.inputs[0],r,n,t,s,a),{inputs:[0]})},Pw=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,a=e.cubicCoeffA,n=e.excludeOutside!==0,i=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return zt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:a,excludeOutside:n,extrapolationValue:i,keepAspectRatioPolicy:o,mode:l,nearestMode:c})}}),Cw,Sw,kw,Ux=Ue(()=>{ht(),vt(),nr(),Et(),Cw=(e,r)=>{let[t,s,a,n]=e,{numHeads:i,rotaryEmbeddingDim:o}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!Te.areEqual(s.dims,[])&&!Te.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!Te.areEqual(a.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=a.dims[0],d=Te.sizeFromDimension(t.dims,1)/c,h=o===0?a.dims[1]*2:d/i;if(o>h)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(h/2!==a.dims[1]&&o/2!==a.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Sw=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:a,scale:n}=r,i=e[0].dims[0],o=Te.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=o/l,p=e[2].dims[1],d=a===0?p*2:c/s,h=new Array(i,l,c/d,d-p),g=Te.computeStrides(h),_=[{type:1,data:n},{type:12,data:h},{type:12,data:g},...e[0].dims.length===3?new Array({type:12,data:[o,c,d,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[o,d,l*d,1]}):[],...at(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],E=A=>{let M=$e("input",e[0].dataType,e[0].dims.length),y=$e("position_ids",e[1].dataType,e[1].dims.length),k=$e("cos_cache",e[2].dataType,e[2].dims.length),P=$e("sin_cache",e[3].dataType,e[3].dims.length),b=rt("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:g.length},{name:"input_output_strides",type:"u32",length:g.length}]),`
        ${A.declareVariables(M,y,k,P,b)}

        ${A.mainStart(aa)}
          let half_rotary_emb_dim = uniforms.${k.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${y.broadcastedIndicesToOffset("bsnh.xy",rt("",y.type.tensor,2))};
            let position_id =
                u32(${y.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${M.getByOffset("i")} * ${k.get("position_id","bsnh[3]")} -
                ${M.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};
            ${b.setByOffset("i","re")}
            let im = ${M.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +
                ${M.getByOffset("j")} * ${k.get("position_id","bsnh[3]")};
            ${b.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${b.setByOffset("k",M.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:zt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:E,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Te.size(h)/aa)},programUniforms:_})}},kw=(e,r)=>{Cw(e.inputs,r),e.compute(Sw(e.inputs,r))}}),$w,Aw,Iw,Wx=Ue(()=>{ht(),vt(),Et(),$w=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let a=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==a)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==a)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==a)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==a)throw new Error("Bias must have the same hidden size as input")}},Aw=(e,r,t,s)=>{let a=r.simplified,n=e[0].dims,i=Te.size(n),o=n,l=i,c=n.slice(-1)[0],p=s?n.slice(0,-1).concat(1):[],d=!a&&e.length>3,h=e.length>4,g=s&&t>1,_=s&&t>2,E=t>3,A=64,M=tr(c),y=[{type:12,data:l},{type:12,data:M},{type:12,data:c},{type:1,data:r.epsilon}],k=b=>{let w=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],T=[$e("x",e[0].dataType,e[0].dims,M),$e("skip",e[1].dataType,e[1].dims,M),$e("gamma",e[2].dataType,e[2].dims,M)];d&&T.push($e("beta",e[3].dataType,e[3].dims,M)),h&&T.push($e("bias",e[4].dataType,e[4].dims,M)),T.push(rt("output",e[0].dataType,o,M)),g&&T.push(rt("mean_output",1,p)),_&&T.push(rt("inv_std_output",1,p)),E&&T.push(rt("input_skip_bias_sum",e[0].dataType,o,M));let $=mr(e[0].dataType),z=mr(1,M);return`

      ${b.registerUniforms(w).declareVariables(...T)}
      var<workgroup> sum_shared : array<${z}, ${A}>;
      var<workgroup> sum_squared_shared : array<${z}, ${A}>;

      ${b.mainStart([A,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${A};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${A};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${A-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${h?"bias[offset1d + i]":$+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${E?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${ia($,M,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${A};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${ln("sum",M)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${ln("square_sum",M)} / f32(uniforms.hidden_size) ${a?"":"- mean * mean"} + uniforms.epsilon);
        ${g?"mean_output[global_idx] = mean;":""}
        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${a?"":`- ${$}(mean)`}) *
            ${$}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},P=[{dims:o,dataType:e[0].dataType}];return t>1&&P.push({dims:p,dataType:1}),t>2&&P.push({dims:p,dataType:1}),t>3&&P.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${M};${g};${_};${E}`,inputDependencies:e.map((b,w)=>"type")},getShaderSource:k,getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:y})}},Iw=(e,r)=>{$w(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(Aw(e.inputs,r,e.outputCount,!1),{outputs:t})}}),Ow,ii,Fw,id,Dw,Lw,zw,Bw,Gx=Ue(()=>{ht(),vt(),nr(),Et(),Ow=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},ii=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Fw=(e,r)=>{if(e.length>1){let t=ii(e,1),s=ii(e,2),a=ii(e,3);return a.length===0&&(a=[...Array(e[0].dims.length).keys()]),zt({starts:t,ends:s,axes:a})}else return r},id=(e,r,t,s,a)=>{let n=e;return e<0&&(n+=t[s[r]]),a[r]<0?Math.max(0,Math.min(n,t[s[r]]-1)):Math.max(0,Math.min(n,t[s[r]]))},Dw=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${st("uniforms.input_shape","i",t.length)};
            let steps_i = ${st("uniforms.steps","i",t.length)};
            let signs_i = ${st("uniforms.signs","i",t.length)};
            let starts_i = ${st("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Lw=(e,r)=>{let t=e[0].dims,s=Te.size(t),a=r.axes.length>0?Te.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],n=ii(e,4);n.forEach(M=>M!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(a.length).fill(1));let i=r.starts.map((M,y)=>id(M,y,t,a,n)),o=r.ends.map((M,y)=>id(M,y,t,a,n));if(a.length!==i.length||a.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(a.length!==t.length)for(let M=0;M<t.length;++M)a.includes(M)||(i.splice(M,0,0),o.splice(M,0,t[M]),n.splice(M,0,1));let l=n.map(M=>Math.sign(M));n.forEach((M,y,k)=>{if(M<0){let P=(o[y]-i[y])/M,b=i[y],w=b+P*n[y];i[y]=w,o[y]=b,k[y]=-M}});let c=t.slice(0);a.forEach((M,y)=>{c[M]=Math.ceil((o[M]-i[M])/n[M])});let p={dims:c,dataType:e[0].dataType},d=rt("output",e[0].dataType,c.length),h=$e("input",e[0].dataType,e[0].dims.length),g=Te.size(c),_=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],E=[{type:12,data:g},{type:12,data:i},{type:6,data:l},{type:12,data:n},...at(e[0].dims,c)],A=M=>`
      ${M.registerUniforms(_).declareVariables(h,d)}
        ${Dw(h,d,t)}
        ${M.mainStart()}
          ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:E})}},zw=(e,r)=>{Ow(e.inputs,r);let t=Fw(e.inputs,r);e.compute(Lw(e.inputs,t),{inputs:[0]})},Bw=e=>{let r=e.starts,t=e.ends,s=e.axes;return zt({starts:r,ends:t,axes:s})}}),Rw,Nw,jw,Vw,Kx=Ue(()=>{ht(),vt(),nr(),cn(),Et(),Rw=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Nw=(e,r)=>{let t=e.inputs[0],s=t.dims,a=Te.size(s),n=s.length,i=Te.normalizeAxis(r.axis,n),o=i<s.length-1,l,c=[];o?(c=Array.from({length:n},(T,$)=>$),c[i]=n-1,c[n-1]=i,l=e.compute(qr(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,d=p[n-1],h=a/d,g=tr(d),_=d/g,E=64;h===1&&(E=256);let A=(T,$)=>$===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:$===2?`max(${T}.x, ${T}.y)`:$===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,M=$e("x",l.dataType,l.dims,g),y=rt("result",l.dataType,l.dims,g),k=M.type.value,P=mr(l.dataType)==="f32"?`var threadMax = ${k}(-3.402823e+38f);`:`var threadMax = ${k}(-65504.0h);`,b=T=>`
      var<workgroup> rowMaxShared : ${k};
      var<workgroup> rowSumShared : ${k};
      var<workgroup> threadShared : array<${k}, ${E}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${k} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${k}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(M,y)}
      ${T.mainStart(E)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${E};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${P}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${k}(${A("threadShared[0]",g)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${k}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${k}(${ln("threadShared[0]",g)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,w=e.compute({name:"Softmax",shaderCache:{hint:`${g};${E}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:_}]}),getShaderSource:b},{inputs:[l],outputs:[o?-1:0]})[0];o&&e.compute(qr(w,c),{inputs:[w]})},jw=(e,r)=>{Rw(e.inputs),Nw(e,r)},Vw=e=>zt({axis:e.axis})}),od,Uw,Ww,Gw,Kw,Hx=Ue(()=>{ht(),vt(),Et(),od=e=>Array.from(e.getBigInt64Array(),Number),Uw=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Ww=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},Gw=(e,r)=>{let t=e[0].dims,s=r??od(e[1]),a=Ww(t,s),n=Te.size(a),i=e[0].dataType,o=$e("input",i,t.length),l=rt("output",i,a.length),c=p=>`
      const inputShape = ${o.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(o,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${o.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${o.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",o.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...at(e[0].dims,a)]}),getShaderSource:c}},Kw=e=>{Uw(e.inputs),e.compute(Gw(e.inputs),{inputs:[0]})}}),Hw,qw,Qw,qx=Ue(()=>{ht(),vt(),Et(),Hw=(e,r,t,s,a)=>{let n=rt("output_data",a,t.length,4),i=$e("a_data",r[1].dataType,r[1].dims.length,4),o=$e("b_data",r[2].dataType,r[2].dims.length,4),l=$e("c_data",r[0].dataType,r[0].dims.length,4),c,p=(d,h,g)=>`select(${h}, ${d}, ${g})`;if(!s)c=n.setByOffset("global_idx",p(i.getByOffset("global_idx"),o.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(h,g,_="")=>{let E=`a_data[index_a${g}][component_a${g}]`,A=`b_data[index_b${g}][component_b${g}]`,M=`bool(c_data[index_c${g}] & (0xffu << (component_c${g} * 8)))`;return`
            let output_indices${g} = ${n.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${i.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let offset_b${g} = ${o.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let offset_c${g} = ${l.broadcastedIndicesToOffset(`output_indices${g}`,n)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            let component_c${g} = offset_c${g} % 4u;
            ${h}[${g}] = ${_}(${p(E,A,M)});
          `};a===9?c=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,i,o,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},qw=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,a=e[1].dataType,n=!(Te.areEqual(r,t)&&Te.areEqual(t,s)),i=r,o=Te.size(r);if(n){let c=na.calcShape(na.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");i=c,o=Te.size(i)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>Hw(c,e,i,n,a),getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...at(s,r,t,i)]})}},Qw=e=>{e.compute(qw(e.inputs))}}),Xw,Qx=Ue(()=>{lx(),xu(),cx(),ux(),dx(),px(),hx(),wx(),Mx(),bx(),vx(),xx(),Tx(),Ex(),Px(),Cx(),Sx(),kx(),$x(),Ax(),Ix(),Ox(),Fx(),Dx(),Lx(),cg(),zx(),Bx(),Rx(),Nx(),jx(),Mu(),Vx(),Ux(),Wx(),Gx(),Kx(),_g(),Hx(),cn(),Cu(),qx(),Xw=new Map([["Abs",[Af]],["Acos",[If]],["Acosh",[Of]],["Add",[Mm]],["ArgMax",[_f,vu]],["ArgMin",[mf,vu]],["Asin",[Ff]],["Asinh",[Df]],["Atan",[Lf]],["Atanh",[zf]],["Attention",[vf]],["AveragePool",[Gg,Wg]],["BatchNormalization",[Pf]],["BiasAdd",[kf]],["BiasSplitGelu",[gm]],["Cast",[Rf,Bf]],["Ceil",[Vf]],["Clip",[jf]],["Concat",[Fm,Dm]],["Conv",[Nu,Bu]],["ConvTranspose",[l_,a_]],["Cos",[Uf]],["Cosh",[Wf]],["CumSum",[u_,d_]],["DepthToSpace",[m_,__]],["DequantizeLinear",[ew,tw]],["Div",[bm]],["Einsum",[v_,x_]],["Elu",[Gf,ei]],["Equal",[vm]],["Erf",[Kf]],["Exp",[Hf]],["Expand",[C_]],["FastGelu",[k_]],["Floor",[qf]],["FusedConv",[Nu,Bu]],["Gather",[O_,I_]],["GatherElements",[W_,U_]],["GatherBlockQuantized",[R_,N_]],["GatherND",[D_,L_]],["Gelu",[Qf]],["Gemm",[q_,H_]],["GlobalAveragePool",[Hg,Kg]],["GlobalMaxPool",[Jg,Xg]],["Greater",[Pm]],["GreaterOrEqual",[Sm]],["GridSample",[sg,ng]],["GroupQueryAttention",[yg]],["HardSigmoid",[sm,rm]],["InstanceNormalization",[vg]],["LayerNormalization",[Eg]],["LeakyRelu",[Xf,ei]],["Less",[Cm]],["LessOrEqual",[km]],["Log",[dm]],["MatMul",[Cg]],["MatMulNBits",[Ag,Ig]],["MaxPool",[qg,Qg]],["Mul",[xm]],["MultiHeadAttention",[lg,ig]],["Neg",[Yf]],["Not",[Jf]],["Pad",[jg]],["Pow",[Tm]],["QuickGelu",[fm,ei]],["Range",[nw]],["Reciprocal",[Zf]],["ReduceMin",[uf]],["ReduceMean",[nf]],["ReduceMax",[cf]],["ReduceSum",[pf]],["ReduceProd",[df]],["ReduceL1",[af]],["ReduceL2",[of]],["ReduceLogSum",[ff]],["ReduceLogSumExp",[lf]],["ReduceSumSquare",[hf]],["Relu",[em]],["Resize",[Ew,Pw]],["RotaryEmbedding",[kw]],["ScatterND",[lw,ow]],["Sigmoid",[tm]],["Sin",[nm]],["Sinh",[am]],["Slice",[zw,Bw]],["SkipLayerNormalization",[Iw]],["Split",[fg,mg]],["Sqrt",[im]],["Softmax",[jw,Vw]],["Sub",[Em]],["Tan",[om]],["Tanh",[lm]],["ThresholdedRelu",[um,ei]],["Tile",[Kw]],["Transpose",[Eh,Ph]],["Where",[Qw]]])}),Jw,Xx=Ue(()=>{_s(),Gs(),Et(),Jw=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,a){ms(e.programInfo.name);let n=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let o=[];for(let c of r)o.push({binding:o.length,resource:{buffer:c.buffer}});for(let c of t)o.push({binding:o.length,resource:{buffer:c.buffer}});a&&o.push({binding:o.length,resource:a});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ss(e.programInfo.name)}dispose(){}build(e,r){ms(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let a=yh(r,this.backend.device.limits),n=e.getShaderSource(a),i=`${s.join(`
`)}
${a.additionalImplementations}
${n}`,o=t.createShaderModule({code:i,label:e.name});$t("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let l=t.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return ss(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=a&&t<=a&&s<=a)return[r,t,s];let n=r*t*s,i=Math.ceil(Math.sqrt(n));if(i>a){if(i=Math.ceil(Math.cbrt(n)),i>a)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),Yw,Zw,ey,ty,Jx=Ue(()=>{_s(),ht(),Gs(),oh(),ix(),Qx(),Xx(),Yw=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let a=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${a}`);break}case"rank":{let n=e[s].dims.length;t.push(`${a};${n}`);break}case"dims":{let n=e[s].dims.join(",");t.push(`${a};${n}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},Zw=(e,r,t)=>{var a,n;let s=e.name;return(a=e.shaderCache)!=null&&a.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${Yw(r,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(r.length).fill("dims"))}`,s},ey=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},ty=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},a=n=>r.features.has(n)&&t.push(n)&&!0;a("chromium-experimental-timestamp-query-inside-passes")||a("timestamp-query"),a("shader-f16"),a("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new ey(r.info||await r.requestAdapterInfo()),this.gpuDataManager=dh(this),this.programManager=new Jw(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,uu(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;ms(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let a=0;a<r.length/2;a++){let n=t[a],i=n.kernelId,o=this.kernels.get(i),l=o.kernelType,c=o.kernelName,p=n.programName,d=n.inputTensorViews,h=n.outputTensorViews,g=r[a*2],_=r[a*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let E=Number(g-this.queryTimeBase),A=Number(_-this.queryTimeBase);if(!Number.isSafeInteger(E)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(M=>({dims:M.dims,dataType:$n(M.dataType)})),outputsMetadata:h.map(M=>({dims:M.dims,dataType:$n(M.dataType)})),kernelId:i,kernelType:l,kernelName:c,programName:p,startTime:E,endTime:A});else{let M="";d.forEach((k,P)=>{M+=`input[${P}]: [${k.dims}] | ${$n(k.dataType)}, `});let y="";h.forEach((k,P)=>{y+=`output[${P}]: [${k.dims}] | ${$n(k.dataType)}, `}),console.log(`[profiling] kernel "${i}|${l}|${c}|${p}" ${M}${y}execution time: ${A-E} ns`)}Xa("GPU",`${p}::${g}::${_}`)}e.unmap(),this.pendingQueries.delete(e)}),ss()}run(e,r,t,s,a,n){ms(e.name);let i=[];for(let y=0;y<r.length;++y){let k=r[y].data;if(k===0)continue;let P=this.gpuDataManager.get(k);if(!P)throw new Error(`no GPU data for input: ${k}`);i.push(P)}let{outputs:o,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?o.map((y,k)=>k):t;if(p.length!==o.length)throw new Error(`Output size ${p.length} must be equal to ${o.length}.`);let d=[],h=[];for(let y=0;y<o.length;++y){if(!Number.isInteger(p[y])||p[y]<-3||p[y]>=n)throw new Error(`Invalid output index: ${p[y]}`);if(p[y]===-3)continue;let k=p[y]===-1,P=p[y]===-2,b=k||P?a(o[y].dataType,o[y].dims):s(p[y],o[y].dataType,o[y].dims);if(d.push(b),b.data===0)continue;let w=this.gpuDataManager.get(b.data);if(!w)throw new Error(`no GPU data for output: ${b.data}`);if(k&&this.temporaryData.push(w),P){let T=this.kernelPersistentData.get(this.currentKernelId);T||(T=[],this.kernelPersistentData.set(this.currentKernelId,T)),T.push(w)}h.push(w)}if(i.length!==r.length||h.length!==d.length){if(h.length===0)return ss(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let g;if(c){let y=0,k=[];c.forEach(T=>{let $=typeof T.data=="number"?[T.data]:T.data;if($.length===0)return;let z=T.type===10?2:4,N,Y;T.type===10?(Y=$.length>4?16:$.length>2?8:$.length*z,N=$.length>4?16:z*$.length):(Y=$.length<=2?$.length*z:16,N=16),y=Math.ceil(y/Y)*Y,k.push(y);let J=T.type===10?8:4;y+=$.length>4?Math.ceil($.length/J)*N:$.length*z});let P=16;y=Math.ceil(y/P)*P;let b=new ArrayBuffer(y);c.forEach((T,$)=>{let z=k[$],N=typeof T.data=="number"?[T.data]:T.data;if(T.type===6)new Int32Array(b,z,N.length).set(N);else if(T.type===12)new Uint32Array(b,z,N.length).set(N);else if(T.type===10)new Uint16Array(b,z,N.length).set(N);else if(T.type===1)new Float32Array(b,z,N.length).set(N);else throw new Error(`Unsupported uniform type: ${$n(T.type)}`)});let w=this.gpuDataManager.create(y,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(w.buffer,0,b,0,y),this.gpuDataManager.release(w.id),g={offset:0,size:y,buffer:w.buffer}}let _=this.programManager.normalizeDispatchGroupSize(l),E=_[1]===1&&_[2]===1,A=Zw(e,r,E),M=this.programManager.getArtifact(A);if(M||(M=this.programManager.build(e,_),this.programManager.setArtifact(A,M),$t("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),c&&M.uniformVariablesInfo){if(c.length!==M.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${M.uniformVariablesInfo.length}, got ${c.length} in program "${M.programInfo.name}".`);for(let y=0;y<c.length;y++){let k=c[y],P=k.type,b=typeof k.data=="number"?1:k.data.length,[w,T]=M.uniformVariablesInfo[y];if(P!==w||b!==T)throw new Error(`Uniform variable ${y} mismatch: expect type ${w} with size ${T}, got type ${P} with size ${b} in program "${M.programInfo.name}".`)}}if($t("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${_[0]}x${_[1]}x${_[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let y={kernelId:this.currentKernelId,programName:M.programInfo.name,inputTensorViews:r,outputTensorViews:d};this.pendingKernels.push(y),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(y)}return this.programManager.run(M,i,h,_,g),ss(e.name),d}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let a=Xw.get(e);if(!a)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:s,kernelEntry:a[0],attributes:[a[1],t]};this.kernels.set(r,n)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let a=s.kernelType,n=s.kernelName,i=s.kernelEntry,o=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${a}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),$t("info",()=>`[WebGPU] Start to run kernel "[${a}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(r,o[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${a}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let a=this.sessionExternalDataMapping.get(e);a||(a=new Map,this.sessionExternalDataMapping.set(e,a));let n=a.get(r),i=this.gpuDataManager.registerExternalBuffer(t,s,n);return a.set(r,[i,t]),i}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await mu(this,e,r);return du(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){$t("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){$t("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){$t("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let a=this.getComputePassEncoder(),n=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),a.setPipeline(n.computePipeline),a.setBindGroup(0,n.bindGroup),a.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),ry,ld,sy,cd,ud,dd,ny,ay,Yx=Ue(()=>{Gs(),ry=1,ld=()=>ry++,sy=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),cd=(e,r)=>{let t=sy.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,a)=>s*a)*t/8):0},ud=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return cd(this.dataType,this.tensorShape)}destroy(){$t("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,a)=>s===t[a])}},dd=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let a=this.tensorManager.getMLContext(e);if(this.wrapper){if(this.wrapper.canReuseTensor(a,r,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==cd(r,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let n=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,r,t,n,!0,!0),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else $t("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},ny=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=ld();return this.tensorTrackersById.set(e,new dd(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,a){$t("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${a}}`);let n=this.tensorTrackersById.get(r);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,s,a)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){$t("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let a=this.getMLContext(e),n=ld(),i=new ud({sessionId:e,context:a,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(n,new dd(this,i)),this.externalTensors.add(i),n}async getCachedTensor(e,r,t,s,a,n){let i=this.getMLContext(e);for(let[l,c]of this.freeTensors.entries())if(c.canReuseTensor(i,r,t)){$t("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let p=this.freeTensors.splice(l,1)[0];return p.sessionId=e,p}$t("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let o=await i.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:a,readable:n});return new ud({sessionId:e,context:i,tensor:o,dataType:r,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},ay=(...e)=>new ny(...e)}),Zo,iy,oy,Zx=Ue(()=>{ht(),kn(),oh(),Yx(),Gs(),Zo=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),iy=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((a,n)=>a===s[n]&&e[a]===r[a])},oy=class{constructor(e){this.tensorManager=ay(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,uu(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){$t("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){$t("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)$t("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>iy(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(a=>a.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){$t("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,a){let n=Zo.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,n,s,a)}async createTemporaryTensor(e,r,t){$t("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=Zo.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let a=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,a,s,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(a):this.temporarySessionTensorIds.set(e,[a]),a}uploadTensor(e,r){if(!fr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");$t("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return du(t,r)}}registerMLTensor(e,r,t,s){let a=Zo.get(t);if(!a)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,r,a,s);return $t("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${a}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(e,r,t,s,a,n){if(!n)throw new Error("External mounted files are not available.");let i=e;e.startsWith("./")&&(i=e.substring(2));let o=n.get(i);if(!o)throw new Error(`File with name ${i} not found in preloaded files.`);if(r+t>o.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let l=o.slice(r,r+t).buffer,c;switch(a.dataType){case"float32":c=new Float32Array(l);break;case"float16":c=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(l):new Uint16Array(l);break;case"int32":c=new Int32Array(l);break;case"uint32":c=new Uint32Array(l);break;case"int64":c=new BigInt64Array(l);break;case"uint64":c=new BigUint64Array(l);break;case"int8":c=new Int8Array(l);break;case"int4":case"uint4":case"uint8":c=new Uint8Array(l);break;default:throw new Error(`Unsupported data type: ${a.dataType} in creating WebNN Constant from external data.`)}return $t("verbose",()=>`[WebNN] registerMLConstant {dataType: ${a.dataType}, shape: ${a.shape}}}`),s.constant(a,c)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}flush(){}}}),ly={};Ha(ly,{init:()=>uy});var el,cy,uy,eT=Ue(()=>{ht(),Jx(),Gs(),vt(),Zx(),el=class bv{constructor(r,t,s,a){this.module=r,this.dataType=t,this.data=s,this.dims=a}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=Te.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(Te.size(r)!==Te.size(this.dims))throw new Error("Invalid new shape");return new bv(this.module,this.dataType,this.data,r)}},cy=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,a=t/e.PTR_SIZE,n=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*a++,n));let i=Number(e.getValue(s*a++,n));this.outputCount=Number(e.getValue(s*a++,n)),this.customDataOffset=Number(e.getValue(s*a++,"*")),this.customDataSize=Number(e.getValue(s*a++,n));let o=[];for(let l=0;l<i;l++){let c=Number(e.getValue(s*a++,n)),p=Number(e.getValue(s*a++,"*")),d=Number(e.getValue(s*a++,n)),h=[];for(let g=0;g<d;g++)h.push(Number(e.getValue(s*a++,n)));o.push(new el(e,c,p,h))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){var i;let t=((i=r==null?void 0:r.inputs)==null?void 0:i.map(o=>typeof o=="number"?this.inputs[o]:o))??this.inputs,s=(r==null?void 0:r.outputs)??[],a=(o,l,c)=>new el(this.module,l,this.output(o,c),c),n=(o,l)=>{let c=An(o,l);if(!c)throw new Error(`Unsupported data type: ${o}`);let p=c>0?this.backend.gpuDataManager.create(c).id:0;return new el(this.module,o,p,l)};return this.backend.run(e,t,s,a,n,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,a=s===4?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,a);for(let i=0;i<r.length;i++)this.module.setValue(n+s*(i+1),r[i],a);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},uy=async(e,r,t,s)=>{let a=r.jsepInit;if(!a)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=new ty;await n.initialize(t,s),a("webgpu",[n,i=>n.alloc(Number(i)),i=>n.free(i),(i,o,l,c=!1)=>{if(c)$t("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(i)}, dst=${Number(o)}, size=${Number(l)}`),n.memcpy(Number(i),Number(o));else{$t("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(i)}, gpuDataId=${Number(o)}, size=${Number(l)}`);let p=r.HEAPU8.subarray(Number(i>>>0),Number(i>>>0)+Number(l));n.upload(Number(o),p)}},async(i,o,l)=>{$t("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${o}, size=${l}`),await n.download(Number(i),()=>r.HEAPU8.subarray(Number(o)>>>0,Number(o+l)>>>0))},(i,o,l)=>n.createKernel(i,Number(o),l,r.UTF8ToString(r._JsepGetNodeName(Number(o)))),i=>n.releaseKernel(i),(i,o,l,c)=>{$t("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${l}, kernel=${i}, contextDataOffset=${o}`);let p=new cy(r,n,Number(o));return n.computeKernel(Number(i),p,c)},()=>n.captureBegin(),()=>n.captureEnd(),()=>n.replay()])}else{let n=new oy(t);a("webnn",[n,()=>n.reserveTensorId(),i=>n.releaseTensorId(i),async(i,o,l,c,p)=>n.ensureTensor(i,o,l,c,p),(i,o)=>{n.uploadTensor(i,o)},async(i,o)=>n.downloadTensor(i,o)])}}}),dy,pd,hd,un,py,tl,fd,md,_d,gd,wd,yd,hy=Ue(()=>{nx(),ax(),ht(),kn(),nu(),th(),dy=(e,r)=>{fr()._OrtInit(e,r)!==0&&Ft("Can't initialize onnxruntime.")},pd=async e=>{dy(e.wasm.numThreads,jo(e.logLevel))},hd=async(e,r)=>{{let t=(eT(),Lo(ly)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let a=e.webgpu.powerPreference;if(a!==void 0&&a!=="low-power"&&a!=="high-performance")throw new Error(`Invalid powerPreference setting: "${a}"`);let n=e.webgpu.forceFallbackAdapter;if(n!==void 0&&typeof n!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${n}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:a,forceFallbackAdapter:n}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await t("webgpu",fr(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",fr(),e)}}},un=new Map,py=e=>{let r=fr(),t=r.stackSave();try{let s=r.PTR_SIZE,a=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,a,a+s)!==0&&Ft("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(r.getValue(a,n)),Number(r.getValue(a+s,n))]}finally{r.stackRestore(t)}},tl=e=>{let r=fr(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},fd=async(e,r)=>{var d,h,g;let t,s,a=fr();Array.isArray(e)?[t,s]=e:e.buffer===a.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=tl(e);let n=0,i=0,o=0,l=[],c=[],p=[];try{if([i,l]=eh(r),(r==null?void 0:r.externalData)&&a.mountExternalData){let b=[];for(let w of r.externalData){let T=typeof w=="string"?w:w.path;b.push(cu(typeof w=="string"?w:w.data).then($=>{a.mountExternalData(T,$)}))}await Promise.all(b)}for(let b of(r==null?void 0:r.executionProviders)??[])if((typeof b=="string"?b:b.name)==="webnn"){if(a.shouldTransferToMLTensor=!1,typeof b!="string"){let w=b,T=w==null?void 0:w.context,$=w==null?void 0:w.gpuDevice,z=w==null?void 0:w.deviceType,N=w==null?void 0:w.powerPreference;T?a.currentContext=T:$?a.currentContext=await a.jsepCreateMLContext($):a.currentContext=await a.jsepCreateMLContext({deviceType:z,powerPreference:N})}else a.currentContext=await a.jsepCreateMLContext();break}n=await a._OrtCreateSession(t,s,i),n===0&&Ft("Can't create a session."),(d=a.jsepOnCreateSession)==null||d.call(a),a.currentContext&&(a.jsepRegisterMLContext(n,a.currentContext),a.currentContext=void 0,a.shouldTransferToMLTensor=!0);let[_,E]=py(n),A=!!(r!=null&&r.enableGraphCapture),M=[],y=[],k=[];for(let b=0;b<_;b++){let w=a._OrtGetInputName(n,b);w===0&&Ft("Can't get an input name."),c.push(w),M.push(a.UTF8ToString(w))}for(let b=0;b<E;b++){let w=a._OrtGetOutputName(n,b);w===0&&Ft("Can't get an output name."),p.push(w);let T=a.UTF8ToString(w);y.push(T);{if(A&&(r==null?void 0:r.preferredOutputLocation)===void 0){k.push("gpu-buffer");continue}let $=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:((h=r==null?void 0:r.preferredOutputLocation)==null?void 0:h[T])??"cpu";if($!=="cpu"&&$!=="cpu-pinned"&&$!=="gpu-buffer"&&$!=="ml-tensor")throw new Error(`Not supported preferred output location: ${$}.`);if(A&&$!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${$}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);k.push($)}}let P=null;return k.some(b=>b==="gpu-buffer"||b==="ml-tensor")&&(o=a._OrtCreateBinding(n),o===0&&Ft("Can't create IO binding."),P={handle:o,outputPreferredLocations:k,outputPreferredLocationsEncoded:k.map(b=>lu(b))}),un.set(n,[n,c,p,P,A,!1]),[n,M,y]}catch(_){throw c.forEach(E=>a._OrtFree(E)),p.forEach(E=>a._OrtFree(E)),o!==0&&a._OrtReleaseBinding(o)!==0&&Ft("Can't release IO binding."),n!==0&&a._OrtReleaseSession(n)!==0&&Ft("Can't release session."),_}finally{a._free(t),i!==0&&a._OrtReleaseSessionOptions(i)!==0&&Ft("Can't release session options."),l.forEach(_=>a._free(_)),(g=a.unmountExternalData)==null||g.call(a)}},md=e=>{var l;let r=fr(),t=un.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,a,n,i,o]=t;i&&(o&&r._OrtClearBoundOutputs(i.handle)!==0&&Ft("Can't clear bound outputs."),r._OrtReleaseBinding(i.handle)!==0&&Ft("Can't release IO binding.")),(l=r.jsepOnReleaseSession)==null||l.call(r,e),a.forEach(c=>r._OrtFree(c)),n.forEach(c=>r._OrtFree(c)),r._OrtReleaseSession(s)!==0&&Ft("Can't release session."),un.delete(e)},_d=async(e,r,t,s,a,n=!1)=>{if(!e){r.push(0);return}let i=fr(),o=i.PTR_SIZE,l=e[0],c=e[1],p=e[3],d=p,h,g;if(l==="string"&&(p==="gpu-buffer"||p==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(n&&p!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if(p==="gpu-buffer"){let A=e[2].gpuBuffer;g=An(sa(l),c);let M=i.jsepRegisterBuffer;if(!M)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');h=M(s,a,A,g)}else if(p==="ml-tensor"){let A=e[2].mlTensor;g=An(sa(l),c);let M=i.jsepRegisterMLTensor;if(!M)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');h=M(s,A,sa(l),c)}else{let A=e[2];if(Array.isArray(A)){g=o*A.length,h=i._malloc(g),t.push(h);for(let M=0;M<A.length;M++){if(typeof A[M]!="string")throw new TypeError(`tensor data at index ${M} is not a string`);i.setValue(h+M*o,Cr(A[M],t),"*")}}else{let M=i.jsepIsGraphInput;if(l!=="string"&&M){let y=i._OrtGetInputName(s,a),k=i.UTF8ToString(y);if(M(s,k)){let P=sa(l);g=An(P,c),d="ml-tensor";let b=i.jsepCreateTemporaryTensor,w=i.jsepUploadTensor;if(!b||!w)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let T=await b(s,P,c);w(T,new Uint8Array(A.buffer,A.byteOffset,A.byteLength)),h=T}else g=A.byteLength,h=i._malloc(g),t.push(h),i.HEAPU8.set(new Uint8Array(A.buffer,A.byteOffset,g),h)}else g=A.byteLength,h=i._malloc(g),t.push(h),i.HEAPU8.set(new Uint8Array(A.buffer,A.byteOffset,g),h)}}let _=i.stackSave(),E=i.stackAlloc(4*c.length);try{c.forEach((M,y)=>i.setValue(E+y*o,M,o===4?"i32":"i64"));let A=i._OrtCreateTensor(sa(l),h,g,E,c.length,lu(d));A===0&&Ft(`Can't create tensor for input/output. session=${s}, index=${a}.`),r.push(A)}finally{i.stackRestore(_)}},gd=async(e,r,t,s,a,n)=>{var Y,J,W;let i=fr(),o=i.PTR_SIZE,l=un.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],d=l[2],h=l[3],g=l[4],_=l[5],E=r.length,A=s.length,M=0,y=[],k=[],P=[],b=[],w=i.stackSave(),T=i.stackAlloc(E*o),$=i.stackAlloc(E*o),z=i.stackAlloc(A*o),N=i.stackAlloc(A*o);try{[M,y]=Qp(n);for(let R=0;R<E;R++)await _d(t[R],k,b,e,r[R],g);for(let R=0;R<A;R++)await _d(a[R],P,b,e,E+s[R],g);for(let R=0;R<E;R++)i.setValue(T+R*o,k[R],"*"),i.setValue($+R*o,p[r[R]],"*");for(let R=0;R<A;R++)i.setValue(z+R*o,P[R],"*"),i.setValue(N+R*o,d[s[R]],"*");if(h&&!_){let{handle:R,outputPreferredLocations:q,outputPreferredLocationsEncoded:ee}=h;if(p.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model's input count (${p.length}).`);for(let le=0;le<E;le++){let de=r[le];await i._OrtBindInput(R,p[de],k[le])!==0&&Ft(`Can't bind input[${le}] for session=${e}.`)}for(let le=0;le<A;le++){let de=s[le];(Y=a[le])!=null&&Y[3]?i._OrtBindOutput(R,d[de],P[le],0)!==0&&Ft(`Can't bind pre-allocated output[${le}] for session=${e}.`):i._OrtBindOutput(R,d[de],0,ee[de])!==0&&Ft(`Can't bind output[${le}] to ${q[le]} for session=${e}.`)}un.set(e,[c,p,d,h,g,!0])}(J=i.jsepOnRunStart)==null||J.call(i,c);let te;h?te=await i._OrtRunWithBinding(c,h.handle,A,z,M):te=await i._OrtRun(c,$,T,E,N,A,z,M),te!==0&&Ft("failed to call OrtRun().");let H=[];for(let R=0;R<A;R++){let q=Number(i.getValue(z+R*o,"*"));if(q===P[R]){H.push(a[R]);continue}let ee=i.stackSave(),le=i.stackAlloc(4*o),de=!1,j,F=0;try{i._OrtGetTensorData(q,le,le+o,le+2*o,le+3*o)!==0&&Ft(`Can't access output tensor data on index ${R}.`);let K=o===4?"i32":"i64",ae=Number(i.getValue(le,K));F=i.getValue(le+o,"*");let Z=i.getValue(le+o*2,"*"),we=Number(i.getValue(le+o*3,K)),_e=[];for(let Me=0;Me<we;Me++)_e.push(Number(i.getValue(Z+Me*o,K)));i._OrtFree(Z)!==0&&Ft("Can't free memory for tensor dims.");let Ae=_e.reduce((Me,Q)=>Me*Q,1);j=$n(ae);let qe=h==null?void 0:h.outputPreferredLocations[s[R]];if(j==="string"){if(qe==="gpu-buffer"||qe==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Me=[];for(let Q=0;Q<Ae;Q++){let V=i.getValue(F+Q*o,"*"),fe=i.getValue(F+(Q+1)*o,"*"),Ce=Q===Ae-1?void 0:fe-V;Me.push(i.UTF8ToString(V,Ce))}H.push([j,_e,Me,"cpu"])}else if(qe==="gpu-buffer"&&Ae>0){let Me=i.jsepGetBuffer;if(!Me)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Q=Me(F),V=An(ae,Ae);if(V===void 0||!iu(j))throw new Error(`Unsupported data type: ${j}`);de=!0,H.push([j,_e,{gpuBuffer:Q,download:i.jsepCreateDownloader(Q,V,j),dispose:()=>{i._OrtReleaseTensor(q)!==0&&Ft("Can't release tensor.")}},"gpu-buffer"])}else if(qe==="ml-tensor"&&Ae>0){let Me=i.jsepEnsureTensor;if(!Me)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(An(ae,Ae)===void 0||!ou(j))throw new Error(`Unsupported data type: ${j}`);let Q=await Me(e,F,ae,_e,!1);de=!0,H.push([j,_e,{mlTensor:Q,download:i.jsepCreateMLTensorDownloader(F,j),dispose:()=>{i.jsepReleaseTensorId(F),i._OrtReleaseTensor(q)}},"ml-tensor"])}else{let Me=au(j),Q=new Me(Ae);new Uint8Array(Q.buffer,Q.byteOffset,Q.byteLength).set(i.HEAPU8.subarray(F,F+Q.byteLength)),H.push([j,_e,Q,"cpu"])}}finally{i.stackRestore(ee),j==="string"&&F&&i._free(F),de||i._OrtReleaseTensor(q),(W=i.jsepOnRunEnd)==null||W.call(i,c)}}return h&&!g&&(i._OrtClearBoundOutputs(h.handle)!==0&&Ft("Can't clear bound outputs."),un.set(e,[c,p,d,h,g,!1])),H}finally{i.stackRestore(w),k.forEach(te=>i._OrtReleaseTensor(te)),P.forEach(te=>i._OrtReleaseTensor(te)),b.forEach(te=>i._free(te)),M!==0&&i._OrtReleaseRunOptions(M),y.forEach(te=>i._free(te))}},wd=e=>{let r=fr(),t=un.get(e);if(!t)throw new Error("invalid session id");let s=t[0],a=r._OrtEndProfiling(s);a===0&&Ft("Can't get an profile file name."),r._OrtFree(a)},yd=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),dn,jr,oa,oi,li,rl,Md,sl,Bn,Rn,fy,my,_y,gy,wy,yy,My,by,vy=Ue(()=>{_s(),hy(),kn(),eu(),dn=()=>!!qt.wasm.proxy&&typeof document<"u",oa=!1,oi=!1,li=!1,sl=new Map,Bn=(e,r)=>{let t=sl.get(e);t?t.push(r):sl.set(e,[r])},Rn=()=>{if(oa||!oi||li||!jr)throw new Error("worker not ready")},fy=e=>{switch(e.data.type){case"init-wasm":oa=!1,e.data.err?(li=!0,Md[1](e.data.err)):(oi=!0,Md[0]()),rl&&(URL.revokeObjectURL(rl),rl=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=sl.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},my=async()=>{if(!oi){if(oa)throw new Error("multiple calls to 'initWasm()' detected.");if(li)throw new Error("previous call to 'initWasm()' failed.");if(oa=!0,dn())return new Promise((e,r)=>{jr==null||jr.terminate(),Gp().then(([t,s])=>{try{jr=s,jr.onerror=n=>r(n),jr.onmessage=fy,Md=[e,r];let a={type:"init-wasm",in:qt};!a.in.wasm.wasmPaths&&(t||Xc)&&(a.in.wasm.wasmPaths={wasm:new URL("/assets/ort-wasm-simd-threaded.jsep-BAR87mbD.wasm",self.location.href).href}),jr.postMessage(a),rl=t}catch(a){r(a)}},r)});try{await su(qt.wasm),await pd(qt),oi=!0}catch(e){throw li=!0,e}finally{oa=!1}}},_y=async e=>{if(dn())return Rn(),new Promise((r,t)=>{Bn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:qt}};jr.postMessage(s)});await hd(qt,e)},gy=async e=>dn()?(Rn(),new Promise((r,t)=>{Bn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};jr.postMessage(s,[e.buffer])})):tl(e),wy=async(e,r)=>{if(dn()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Rn(),new Promise((t,s)=>{Bn("create",[t,s]);let a={type:"create",in:{model:e,options:{...r}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),jr.postMessage(a,n)})}else return fd(e,r)},yy=async e=>{if(dn())return Rn(),new Promise((r,t)=>{Bn("release",[r,t]);let s={type:"release",in:e};jr.postMessage(s)});md(e)},My=async(e,r,t,s,a,n)=>{if(dn()){if(t.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(a.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return Rn(),new Promise((i,o)=>{Bn("run",[i,o]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:n}};jr.postMessage(c,yd(l))})}else return gd(e,r,t,s,a,n)},by=async e=>{if(dn())return Rn(),new Promise((r,t)=>{Bn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};jr.postMessage(s)});wd(e)}}),bd,xy,Ty,tT=Ue(()=>{_s(),vy(),ht(),Wc(),th(),bd=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},xy=e=>{switch(e[3]){case"cpu":return new fs(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!iu(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:a}=e[2];return fs.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:a})}case"ml-tensor":{let r=e[0];if(!ou(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:a}=e[2];return fs.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:a})}default:throw new Error(`invalid data location: ${e[3]}`)}},Ty=class{async fetchModelAndCopyToWasmMemory(e){return gy(await cu(e))}async loadModel(e,r){ms();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await wy(t,r),ss()}async dispose(){return yy(this.sessionId)}async run(e,r,t){ms();let s=[],a=[];Object.entries(e).forEach(d=>{let h=d[0],g=d[1],_=this.inputNames.indexOf(h);if(_===-1)throw new Error(`invalid input '${h}'`);s.push(g),a.push(_)});let n=[],i=[];Object.entries(r).forEach(d=>{let h=d[0],g=d[1],_=this.outputNames.indexOf(h);if(_===-1)throw new Error(`invalid output '${h}'`);n.push(g),i.push(_)});let o=s.map((d,h)=>bd(d,()=>`input "${this.inputNames[a[h]]}"`)),l=n.map((d,h)=>d?bd(d,()=>`output "${this.outputNames[i[h]]}"`):null),c=await My(this.sessionId,a,o,i,l,t),p={};for(let d=0;d<c.length;d++)p[this.outputNames[i[d]]]=n[d]??xy(c[d]);return ss(),p}startProfiling(){}endProfiling(){by(this.sessionId)}}}),Ey={};Ha(Ey,{OnnxruntimeWebAssemblyBackend:()=>xd,initializeFlags:()=>vd,wasmBackend:()=>Py});var vd,xd,Py,rT=Ue(()=>{_s(),vy(),tT(),vd=()=>{if((typeof qt.wasm.initTimeout!="number"||qt.wasm.initTimeout<0)&&(qt.wasm.initTimeout=0),qt.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof qt.wasm.proxy!="boolean"&&(qt.wasm.proxy=!1),typeof qt.wasm.trace!="boolean"&&(qt.wasm.trace=!1),typeof qt.wasm.numThreads!="number"||!Number.isInteger(qt.wasm.numThreads)||qt.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)qt.wasm.numThreads=1;else{let e=typeof navigator>"u"?jv("node:os").cpus().length:navigator.hardwareConcurrency;qt.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},xd=class{async init(e){vd(),await my(),await _y(e)}async createInferenceSessionHandler(e,r){let t=new Ty;return await t.loadModel(e,r),Promise.resolve(t)}},Py=new xd});_s(),_s(),_s();var sT="1.22.0-dev.20250306-ccf8fdd9ea",nT=Fp;{let e=(rT(),Lo(Ey)).wasmBackend;Cn("webgpu",e,5),Cn("webnn",e,5),Cn("cpu",e,10),Cn("wasm",e,10)}Object.defineProperty(qt.versions,"web",{value:sT,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var aT=Object.freeze({__proto__:null,get InferenceSession(){return Uc},get TRACE(){return Xa},get TRACE_FUNC_BEGIN(){return ms},get TRACE_FUNC_END(){return ss},get Tensor(){return fs},default:nT,get env(){return qt},get registerBackend(){return Cn}}),Hs={},iT={"onnxruntime-common":e=>{e.exports=zv},"onnxruntime-web":e=>{e.exports=aT},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>Oe,Interpreter:()=>Ie,Template:()=>Ge,parse:()=>j,tokenize:()=>d});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),a=Object.freeze({set:s.Set,for:s.For,in:s.In,is:s.Is,if:s.If,else:s.Else,endif:s.EndIf,elif:s.ElseIf,endfor:s.EndFor,and:s.And,or:s.Or,not:s.Not,"not in":s.NotIn,macro:s.Macro,endmacro:s.EndMacro,true:s.BooleanLiteral,false:s.BooleanLiteral,none:s.NullLiteral,True:s.BooleanLiteral,False:s.BooleanLiteral,None:s.NullLiteral}),n=class{constructor(D,se){this.value=D,this.type=se}};function i(D){return/\w/.test(D)}function o(D){return/[0-9]/.test(D)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],c=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function p(D,se={}){return D.endsWith(`
`)&&(D=D.slice(0,-1)),D=D.replace(/{#.*?#}/gs,"{##}"),se.lstrip_blocks&&(D=D.replace(/^[ \t]*({[#%])/gm,"$1")),se.trim_blocks&&(D=D.replace(/([#%]})\n/g,"$1")),D.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function d(D,se={}){var xe,Ne,Fe;const B=[],ne=p(D,se);let ue=0;const ve=Ve=>{let Qe="";for(;Ve(ne[ue]);){if(ne[ue]==="\\"){if(++ue,ue>=ne.length)throw new SyntaxError("Unexpected end of input");const Je=ne[ue++],pt=c.get(Je);if(pt===void 0)throw new SyntaxError(`Unexpected escaped character: ${Je}`);Qe+=pt;continue}if(Qe+=ne[ue++],ue>=ne.length)throw new SyntaxError("Unexpected end of input")}return Qe};e:for(;ue<ne.length;){const Ve=(xe=B.at(-1))==null?void 0:xe.type;if(Ve===void 0||Ve===s.CloseStatement||Ve===s.CloseExpression){let Je="";for(;ue<ne.length&&!(ne[ue]==="{"&&(ne[ue+1]==="%"||ne[ue+1]==="{"));)Je+=ne[ue++];if(Je.length>0){B.push(new n(Je,s.Text));continue}}ve(Je=>/\s/.test(Je));const Qe=ne[ue];if(Qe==="-"||Qe==="+"){const Je=(Ne=B.at(-1))==null?void 0:Ne.type;if(Je===s.Text||Je===void 0)throw new SyntaxError(`Unexpected character: ${Qe}`);switch(Je){case s.Identifier:case s.NumericLiteral:case s.BooleanLiteral:case s.NullLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++ue;const pt=ve(o);B.push(new n(`${Qe}${pt}`,pt.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[Je,pt]of l)if(ne.slice(ue,ue+Je.length)===Je){B.push(new n(Je,pt)),ue+=Je.length;continue e}if(Qe==="'"||Qe==='"'){++ue;const Je=ve(pt=>pt!==Qe);B.push(new n(Je,s.StringLiteral)),++ue;continue}if(o(Qe)){const Je=ve(o);B.push(new n(Je,s.NumericLiteral));continue}if(i(Qe)){const Je=ve(i),pt=Object.hasOwn(a,Je)?a[Je]:s.Identifier;pt===s.In&&((Fe=B.at(-1))==null?void 0:Fe.type)===s.Not?(B.pop(),B.push(new n("not in",s.NotIn))):B.push(new n(Je,pt));continue}throw new SyntaxError(`Unexpected character: ${Qe}`)}return B}var h=class{constructor(){X(this,"type","Statement")}},g=class extends h{constructor(se){super();X(this,"type","Program");this.body=se}},_=class extends h{constructor(se,B,ne){super();X(this,"type","If");this.test=se,this.body=B,this.alternate=ne}},E=class extends h{constructor(se,B,ne,ue){super();X(this,"type","For");this.loopvar=se,this.iterable=B,this.body=ne,this.defaultBlock=ue}},A=class extends h{constructor(se,B){super();X(this,"type","Set");this.assignee=se,this.value=B}},M=class extends h{constructor(se,B,ne){super();X(this,"type","Macro");this.name=se,this.args=B,this.body=ne}},y=class extends h{constructor(){super(...arguments);X(this,"type","Expression")}},k=class extends y{constructor(se,B,ne){super();X(this,"type","MemberExpression");this.object=se,this.property=B,this.computed=ne}},P=class extends y{constructor(se,B){super();X(this,"type","CallExpression");this.callee=se,this.args=B}},b=class extends y{constructor(se){super();X(this,"type","Identifier");this.value=se}},w=class extends y{constructor(se){super();X(this,"type","Literal");this.value=se}},T=class extends w{constructor(){super(...arguments);X(this,"type","NumericLiteral")}},$=class extends w{constructor(){super(...arguments);X(this,"type","StringLiteral")}},z=class extends w{constructor(){super(...arguments);X(this,"type","BooleanLiteral")}},N=class extends w{constructor(){super(...arguments);X(this,"type","NullLiteral")}},Y=class extends w{constructor(){super(...arguments);X(this,"type","ArrayLiteral")}},J=class extends w{constructor(){super(...arguments);X(this,"type","TupleLiteral")}},W=class extends w{constructor(){super(...arguments);X(this,"type","ObjectLiteral")}},te=class extends y{constructor(se,B,ne){super();X(this,"type","BinaryExpression");this.operator=se,this.left=B,this.right=ne}},H=class extends y{constructor(se,B){super();X(this,"type","FilterExpression");this.operand=se,this.filter=B}},R=class extends y{constructor(se,B){super();X(this,"type","SelectExpression");this.iterable=se,this.test=B}},q=class extends y{constructor(se,B,ne){super();X(this,"type","TestExpression");this.operand=se,this.negate=B,this.test=ne}},ee=class extends y{constructor(se,B){super();X(this,"type","UnaryExpression");this.operator=se,this.argument=B}},le=class extends y{constructor(se=void 0,B=void 0,ne=void 0){super();X(this,"type","SliceExpression");this.start=se,this.stop=B,this.step=ne}},de=class extends y{constructor(se,B){super();X(this,"type","KeywordArgumentExpression");this.key=se,this.value=B}};function j(D){const se=new g([]);let B=0;function ne(Re,tt){const it=D[B++];if(!it||it.type!==Re)throw new Error(`Parser Error: ${tt}. ${it.type} !== ${Re}.`);return it}function ue(){switch(D[B].type){case s.Text:return Ne();case s.OpenStatement:return Fe();case s.OpenExpression:return Ve();default:throw new SyntaxError(`Unexpected token type: ${D[B].type}`)}}function ve(...Re){return B+Re.length<=D.length&&Re.some((tt,it)=>tt!==D[B+it].type)}function xe(...Re){return B+Re.length<=D.length&&Re.every((tt,it)=>tt===D[B+it].type)}function Ne(){return new $(ne(s.Text,"Expected text token").value)}function Fe(){ne(s.OpenStatement,"Expected opening statement token");let Re;switch(D[B].type){case s.Set:++B,Re=Qe(),ne(s.CloseStatement,"Expected closing statement token");break;case s.If:++B,Re=Je(),ne(s.OpenStatement,"Expected {% token"),ne(s.EndIf,"Expected endif token"),ne(s.CloseStatement,"Expected %} token");break;case s.Macro:++B,Re=pt(),ne(s.OpenStatement,"Expected {% token"),ne(s.EndMacro,"Expected endmacro token"),ne(s.CloseStatement,"Expected %} token");break;case s.For:++B,Re=dr(),ne(s.OpenStatement,"Expected {% token"),ne(s.EndFor,"Expected endfor token"),ne(s.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${D[B].type}`)}return Re}function Ve(){ne(s.OpenExpression,"Expected opening expression token");const Re=Gt();return ne(s.CloseExpression,"Expected closing expression token"),Re}function Qe(){const Re=Gt();if(xe(s.Equals)){++B;const tt=Qe();return new A(Re,tt)}return Re}function Je(){var cr,Nt,zr,Ps,Cs,Ir,Ss,ks;const Re=Gt();ne(s.CloseStatement,"Expected closing statement token");const tt=[],it=[];for(;!(((cr=D[B])==null?void 0:cr.type)===s.OpenStatement&&(((Nt=D[B+1])==null?void 0:Nt.type)===s.ElseIf||((zr=D[B+1])==null?void 0:zr.type)===s.Else||((Ps=D[B+1])==null?void 0:Ps.type)===s.EndIf));)tt.push(ue());if(((Cs=D[B])==null?void 0:Cs.type)===s.OpenStatement&&((Ir=D[B+1])==null?void 0:Ir.type)!==s.EndIf)if(++B,xe(s.ElseIf))ne(s.ElseIf,"Expected elseif token"),it.push(Je());else for(ne(s.Else,"Expected else token"),ne(s.CloseStatement,"Expected closing statement token");!(((Ss=D[B])==null?void 0:Ss.type)===s.OpenStatement&&((ks=D[B+1])==null?void 0:ks.type)===s.EndIf);)it.push(ue());return new _(Re,tt,it)}function pt(){const Re=br();if(Re.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const tt=is();ne(s.CloseStatement,"Expected closing statement token");const it=[];for(;ve(s.OpenStatement,s.EndMacro);)it.push(ue());return new M(Re,tt,it)}function Mt(Re=!1){const tt=Re?br:Gt,it=[tt()],cr=xe(s.Comma);for(;cr&&(++B,it.push(tt()),!!xe(s.Comma)););return cr?new J(it):it[0]}function dr(){const Re=Mt(!0);if(!(Re instanceof b||Re instanceof J))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Re.type} instead`);ne(s.In,"Expected `in` keyword following loop variable");const tt=Gt();ne(s.CloseStatement,"Expected closing statement token");const it=[];for(;ve(s.OpenStatement,s.EndFor)&&ve(s.OpenStatement,s.Else);)it.push(ue());const cr=[];if(xe(s.OpenStatement,s.Else))for(++B,++B,ne(s.CloseStatement,"Expected closing statement token");ve(s.OpenStatement,s.EndFor);)cr.push(ue());return new E(Re,tt,it,cr)}function Gt(){return _r()}function _r(){const Re=xs();if(xe(s.If)){++B;const tt=xs();if(xe(s.Else)){++B;const it=xs();return new _(tt,[Re],[it])}else return new R(Re,tt)}return Re}function xs(){let Re=Xs();for(;xe(s.Or);){const tt=D[B];++B;const it=Xs();Re=new te(tt,Re,it)}return Re}function Xs(){let Re=Ur();for(;xe(s.And);){const tt=D[B];++B;const it=Ur();Re=new te(tt,Re,it)}return Re}function Ur(){let Re;for(;xe(s.Not);){const tt=D[B];++B;const it=Ur();Re=new ee(tt,it)}return Re??Ts()}function Ts(){let Re=Js();for(;xe(s.ComparisonBinaryOperator)||xe(s.In)||xe(s.NotIn);){const tt=D[B];++B;const it=Js();Re=new te(tt,Re,it)}return Re}function Js(){let Re=Bs();for(;xe(s.AdditiveBinaryOperator);){const tt=D[B];++B;const it=Bs();Re=new te(tt,Re,it)}return Re}function Jr(){const Re=zs(br());return xe(s.OpenParen)?ut(Re):Re}function ut(Re){let tt=new P(Re,is());return tt=zs(tt),xe(s.OpenParen)&&(tt=ut(tt)),tt}function is(){ne(s.OpenParen,"Expected opening parenthesis for arguments list");const Re=Yr();return ne(s.CloseParen,"Expected closing parenthesis for arguments list"),Re}function Yr(){const Re=[];for(;!xe(s.CloseParen);){let tt=Gt();if(xe(s.Equals)){if(++B,!(tt instanceof b))throw new SyntaxError("Expected identifier for keyword argument");const it=Gt();tt=new de(tt,it)}Re.push(tt),xe(s.Comma)&&++B}return Re}function Es(){const Re=[];let tt=!1;for(;!xe(s.CloseSquareBracket);)xe(s.Colon)?(Re.push(void 0),++B,tt=!0):(Re.push(Gt()),xe(s.Colon)&&(++B,tt=!0));if(Re.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(tt){if(Re.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new le(...Re)}return Re[0]}function zs(Re){for(;xe(s.Dot)||xe(s.OpenSquareBracket);){const tt=D[B];++B;let it;const cr=tt.type!==s.Dot;if(cr)it=Es(),ne(s.CloseSquareBracket,"Expected closing square bracket");else if(it=br(),it.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Re=new k(Re,it,cr)}return Re}function Bs(){let Re=Rs();for(;xe(s.MultiplicativeBinaryOperator);){const tt=D[B];++B;const it=Rs();Re=new te(tt,Re,it)}return Re}function Rs(){let Re=Ys();for(;xe(s.Is);){++B;const tt=xe(s.Not);tt&&++B;let it=br();if(it instanceof z?it=new b(it.value.toString()):it instanceof N&&(it=new b("none")),!(it instanceof b))throw new SyntaxError("Expected identifier for the test");Re=new q(Re,tt,it)}return Re}function Ys(){let Re=Jr();for(;xe(s.Pipe);){++B;let tt=br();if(!(tt instanceof b))throw new SyntaxError("Expected identifier for the filter");xe(s.OpenParen)&&(tt=ut(tt)),Re=new H(Re,tt)}return Re}function br(){const Re=D[B];switch(Re.type){case s.NumericLiteral:return++B,new T(Number(Re.value));case s.StringLiteral:return++B,new $(Re.value);case s.BooleanLiteral:return++B,new z(Re.value.toLowerCase()==="true");case s.NullLiteral:return++B,new N(null);case s.Identifier:return++B,new b(Re.value);case s.OpenParen:{++B;const tt=Mt();if(D[B].type!==s.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${D[B].type} instead`);return++B,tt}case s.OpenSquareBracket:{++B;const tt=[];for(;!xe(s.CloseSquareBracket);)tt.push(Gt()),xe(s.Comma)&&++B;return++B,new Y(tt)}case s.OpenCurlyBracket:{++B;const tt=new Map;for(;!xe(s.CloseCurlyBracket);){const it=Gt();ne(s.Colon,"Expected colon between key and value in object literal");const cr=Gt();tt.set(it,cr),xe(s.Comma)&&++B}return++B,new W(tt)}default:throw new SyntaxError(`Unexpected token: ${Re.type}`)}}for(;B<D.length;)se.body.push(ue());return se}function F(D,se,B=1){se===void 0&&(se=D,D=0);const ne=[];for(let ue=D;ue<se;ue+=B)ne.push(ue);return ne}function K(D,se,B,ne=1){const ue=Math.sign(ne);ue>=0?(se=(se??(se=0))<0?Math.max(D.length+se,0):Math.min(se,D.length),B=(B??(B=D.length))<0?Math.max(D.length+B,0):Math.min(B,D.length)):(se=(se??(se=D.length-1))<0?Math.max(D.length+se,-1):Math.min(se,D.length-1),B=(B??(B=-1))<-1?Math.max(D.length+B,-1):Math.min(B,D.length-1));const ve=[];for(let xe=se;ue*xe<ue*B;xe+=ne)ve.push(D[xe]);return ve}function ae(D){return D.replace(/\b\w/g,se=>se.toUpperCase())}var Z=class{constructor(D=void 0){X(this,"type","RuntimeValue");X(this,"value");X(this,"builtins",new Map);this.value=D}__bool__(){return new Ae(!!this.value)}},we=class extends Z{constructor(){super(...arguments);X(this,"type","NumericValue")}},_e=class extends Z{constructor(){super(...arguments);X(this,"type","StringValue");X(this,"builtins",new Map([["upper",new fe(()=>new _e(this.value.toUpperCase()))],["lower",new fe(()=>new _e(this.value.toLowerCase()))],["strip",new fe(()=>new _e(this.value.trim()))],["title",new fe(()=>new _e(ae(this.value)))],["length",new we(this.value.length)],["rstrip",new fe(()=>new _e(this.value.trimEnd()))],["lstrip",new fe(()=>new _e(this.value.trimStart()))],["split",new fe(se=>{const B=se[0]??new Ce;if(!(B instanceof _e||B instanceof Ce))throw new Error("sep argument must be a string or null");const ne=se[1]??new we(-1);if(!(ne instanceof we))throw new Error("maxsplit argument must be a number");let ue=[];if(B instanceof Ce){const ve=this.value.trimStart();for(const{0:xe,index:Ne}of ve.matchAll(/\S+/g)){if(ne.value!==-1&&ue.length>=ne.value&&Ne!==void 0){ue.push(xe+ve.slice(Ne+xe.length));break}ue.push(xe)}}else{if(B.value==="")throw new Error("empty separator");ue=this.value.split(B.value),ne.value!==-1&&ue.length>ne.value&&ue.push(ue.splice(ne.value).join(B.value))}return new Q(ue.map(ve=>new _e(ve)))})]]))}},Ae=class extends Z{constructor(){super(...arguments);X(this,"type","BooleanValue")}},qe=class extends Z{constructor(){super(...arguments);X(this,"type","ObjectValue");X(this,"builtins",new Map([["get",new fe(([se,B])=>{if(!(se instanceof _e))throw new Error(`Object key must be a string: got ${se.type}`);return this.value.get(se.value)??B??new Ce})],["items",new fe(()=>new Q(Array.from(this.value.entries()).map(([se,B])=>new Q([new _e(se),B]))))]]))}__bool__(){return new Ae(this.value.size>0)}},Me=class extends qe{constructor(){super(...arguments);X(this,"type","KeywordArgumentsValue")}},Q=class extends Z{constructor(){super(...arguments);X(this,"type","ArrayValue");X(this,"builtins",new Map([["length",new we(this.value.length)]]))}__bool__(){return new Ae(this.value.length>0)}},V=class extends Q{constructor(){super(...arguments);X(this,"type","TupleValue")}},fe=class extends Z{constructor(){super(...arguments);X(this,"type","FunctionValue")}},Ce=class extends Z{constructor(){super(...arguments);X(this,"type","NullValue")}},Ee=class extends Z{constructor(){super(...arguments);X(this,"type","UndefinedValue")}},Oe=class{constructor(D){X(this,"variables",new Map([["namespace",new fe(D=>{if(D.length===0)return new qe(new Map);if(D.length!==1||!(D[0]instanceof qe))throw new Error("`namespace` expects either zero arguments or a single object argument");return D[0]})]]));X(this,"tests",new Map([["boolean",D=>D.type==="BooleanValue"],["callable",D=>D instanceof fe],["odd",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${D.type}`);return D.value%2!==0}],["even",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${D.type}`);return D.value%2===0}],["false",D=>D.type==="BooleanValue"&&!D.value],["true",D=>D.type==="BooleanValue"&&D.value],["none",D=>D.type==="NullValue"],["string",D=>D.type==="StringValue"],["number",D=>D.type==="NumericValue"],["integer",D=>D.type==="NumericValue"&&Number.isInteger(D.value)],["iterable",D=>D.type==="ArrayValue"||D.type==="StringValue"],["mapping",D=>D.type==="ObjectValue"],["lower",D=>{const se=D.value;return D.type==="StringValue"&&se===se.toLowerCase()}],["upper",D=>{const se=D.value;return D.type==="StringValue"&&se===se.toUpperCase()}],["none",D=>D.type==="NullValue"],["defined",D=>D.type!=="UndefinedValue"],["undefined",D=>D.type==="UndefinedValue"],["equalto",(D,se)=>D.value===se.value],["eq",(D,se)=>D.value===se.value]]));this.parent=D}set(D,se){return this.declareVariable(D,ze(se))}declareVariable(D,se){if(this.variables.has(D))throw new SyntaxError(`Variable already declared: ${D}`);return this.variables.set(D,se),se}setVariable(D,se){return this.variables.set(D,se),se}resolve(D){if(this.variables.has(D))return this;if(this.parent)return this.parent.resolve(D);throw new Error(`Unknown variable: ${D}`)}lookupVariable(D){try{return this.resolve(D).variables.get(D)??new Ee}catch{return new Ee}}},Ie=class{constructor(D){X(this,"global");this.global=D??new Oe}run(D){return this.evaluate(D,this.global)}evaluateBinaryExpression(D,se){const B=this.evaluate(D.left,se);switch(D.operator.value){case"and":return B.__bool__().value?this.evaluate(D.right,se):B;case"or":return B.__bool__().value?B:this.evaluate(D.right,se)}const ne=this.evaluate(D.right,se);switch(D.operator.value){case"==":return new Ae(B.value==ne.value);case"!=":return new Ae(B.value!=ne.value)}if(B instanceof Ee||ne instanceof Ee)throw new Error("Cannot perform operation on undefined values");if(B instanceof Ce||ne instanceof Ce)throw new Error("Cannot perform operation on null values");if(B instanceof we&&ne instanceof we)switch(D.operator.value){case"+":return new we(B.value+ne.value);case"-":return new we(B.value-ne.value);case"*":return new we(B.value*ne.value);case"/":return new we(B.value/ne.value);case"%":return new we(B.value%ne.value);case"<":return new Ae(B.value<ne.value);case">":return new Ae(B.value>ne.value);case">=":return new Ae(B.value>=ne.value);case"<=":return new Ae(B.value<=ne.value)}else if(B instanceof Q&&ne instanceof Q)switch(D.operator.value){case"+":return new Q(B.value.concat(ne.value))}else if(ne instanceof Q){const ue=ne.value.find(ve=>ve.value===B.value)!==void 0;switch(D.operator.value){case"in":return new Ae(ue);case"not in":return new Ae(!ue)}}if(B instanceof _e||ne instanceof _e)switch(D.operator.value){case"+":return new _e(B.value.toString()+ne.value.toString())}if(B instanceof _e&&ne instanceof _e)switch(D.operator.value){case"in":return new Ae(ne.value.includes(B.value));case"not in":return new Ae(!ne.value.includes(B.value))}if(B instanceof _e&&ne instanceof qe)switch(D.operator.value){case"in":return new Ae(ne.value.has(B.value));case"not in":return new Ae(!ne.value.has(B.value))}throw new SyntaxError(`Unknown operator "${D.operator.value}" between ${B.type} and ${ne.type}`)}evaluateArguments(D,se){const B=[],ne=new Map;for(const ue of D)if(ue.type==="KeywordArgumentExpression"){const ve=ue;ne.set(ve.key.value,this.evaluate(ve.value,se))}else{if(ne.size>0)throw new Error("Positional arguments must come before keyword arguments");B.push(this.evaluate(ue,se))}return[B,ne]}evaluateFilterExpression(D,se){const B=this.evaluate(D.operand,se);if(D.filter.type==="Identifier"){const ne=D.filter;if(ne.value==="tojson")return new _e(je(B));if(B instanceof Q)switch(ne.value){case"list":return B;case"first":return B.value[0];case"last":return B.value[B.value.length-1];case"length":return new we(B.value.length);case"reverse":return new Q(B.value.reverse());case"sort":return new Q(B.value.sort((ue,ve)=>{if(ue.type!==ve.type)throw new Error(`Cannot compare different types: ${ue.type} and ${ve.type}`);switch(ue.type){case"NumericValue":return ue.value-ve.value;case"StringValue":return ue.value.localeCompare(ve.value);default:throw new Error(`Cannot compare type: ${ue.type}`)}}));case"join":return new _e(B.value.map(ue=>ue.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${ne.value}`)}else if(B instanceof _e)switch(ne.value){case"length":return new we(B.value.length);case"upper":return new _e(B.value.toUpperCase());case"lower":return new _e(B.value.toLowerCase());case"title":return new _e(ae(B.value));case"capitalize":return new _e(B.value.charAt(0).toUpperCase()+B.value.slice(1));case"trim":return new _e(B.value.trim());case"indent":return new _e(B.value.split(`
`).map((ue,ve)=>ve===0||ue.length===0?ue:"    "+ue).join(`
`));case"join":case"string":return B;default:throw new Error(`Unknown StringValue filter: ${ne.value}`)}else if(B instanceof we)switch(ne.value){case"abs":return new we(Math.abs(B.value));default:throw new Error(`Unknown NumericValue filter: ${ne.value}`)}else if(B instanceof qe)switch(ne.value){case"items":return new Q(Array.from(B.value.entries()).map(([ue,ve])=>new Q([new _e(ue),ve])));case"length":return new we(B.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ne.value}`)}throw new Error(`Cannot apply filter "${ne.value}" to type: ${B.type}`)}else if(D.filter.type==="CallExpression"){const ne=D.filter;if(ne.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ne.callee.type}`);const ue=ne.callee.value;if(ue==="tojson"){const[,ve]=this.evaluateArguments(ne.args,se),xe=ve.get("indent")??new Ce;if(!(xe instanceof we||xe instanceof Ce))throw new Error("If set, indent must be a number");return new _e(je(B,xe.value))}else if(ue==="join"){let ve;if(B instanceof _e)ve=Array.from(B.value);else if(B instanceof Q)ve=B.value.map(Ve=>Ve.value);else throw new Error(`Cannot apply filter "${ue}" to type: ${B.type}`);const[xe,Ne]=this.evaluateArguments(ne.args,se),Fe=xe.at(0)??Ne.get("separator")??new _e("");if(!(Fe instanceof _e))throw new Error("separator must be a string");return new _e(ve.join(Fe.value))}if(B instanceof Q){switch(ue){case"selectattr":case"rejectattr":{const ve=ue==="selectattr";if(B.value.some(Je=>!(Je instanceof qe)))throw new Error(`\`${ue}\` can only be applied to array of objects`);if(ne.args.some(Je=>Je.type!=="StringLiteral"))throw new Error(`arguments of \`${ue}\` must be strings`);const[xe,Ne,Fe]=ne.args.map(Je=>this.evaluate(Je,se));let Ve;if(Ne){const Je=se.tests.get(Ne.value);if(!Je)throw new Error(`Unknown test: ${Ne.value}`);Ve=Je}else Ve=(...Je)=>Je[0].__bool__().value;const Qe=B.value.filter(Je=>{const pt=Je.value.get(xe.value),Mt=pt?Ve(pt,Fe):!1;return ve?Mt:!Mt});return new Q(Qe)}case"map":{const[,ve]=this.evaluateArguments(ne.args,se);if(ve.has("attribute")){const xe=ve.get("attribute");if(!(xe instanceof _e))throw new Error("attribute must be a string");const Ne=ve.get("default"),Fe=B.value.map(Ve=>{if(!(Ve instanceof qe))throw new Error("items in map must be an object");return Ve.value.get(xe.value)??Ne??new Ee});return new Q(Fe)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ue}`)}else if(B instanceof _e){switch(ue){case"indent":{const[ve,xe]=this.evaluateArguments(ne.args,se),Ne=ve.at(0)??xe.get("width")??new we(4);if(!(Ne instanceof we))throw new Error("width must be a number");const Fe=ve.at(1)??xe.get("first")??new Ae(!1),Ve=ve.at(2)??xe.get("blank")??new Ae(!1),Qe=B.value.split(`
`),Je=" ".repeat(Ne.value),pt=Qe.map((Mt,dr)=>!Fe.value&&dr===0||!Ve.value&&Mt.length===0?Mt:Je+Mt);return new _e(pt.join(`
`))}}throw new Error(`Unknown StringValue filter: ${ue}`)}else throw new Error(`Cannot apply filter "${ue}" to type: ${B.type}`)}throw new Error(`Unknown filter: ${D.filter.type}`)}evaluateTestExpression(D,se){const B=this.evaluate(D.operand,se),ne=se.tests.get(D.test.value);if(!ne)throw new Error(`Unknown test: ${D.test.value}`);const ue=ne(B);return new Ae(D.negate?!ue:ue)}evaluateUnaryExpression(D,se){const B=this.evaluate(D.argument,se);switch(D.operator.value){case"not":return new Ae(!B.value);default:throw new SyntaxError(`Unknown operator: ${D.operator.value}`)}}evalProgram(D,se){return this.evaluateBlock(D.body,se)}evaluateBlock(D,se){let B="";for(const ne of D){const ue=this.evaluate(ne,se);ue.type!=="NullValue"&&ue.type!=="UndefinedValue"&&(B+=ue.value)}return new _e(B)}evaluateIdentifier(D,se){return se.lookupVariable(D.value)}evaluateCallExpression(D,se){const[B,ne]=this.evaluateArguments(D.args,se);ne.size>0&&B.push(new Me(ne));const ue=this.evaluate(D.callee,se);if(ue.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ue.type}`);return ue.value(B,se)}evaluateSliceExpression(D,se,B){if(!(D instanceof Q||D instanceof _e))throw new Error("Slice object must be an array or string");const ne=this.evaluate(se.start,B),ue=this.evaluate(se.stop,B),ve=this.evaluate(se.step,B);if(!(ne instanceof we||ne instanceof Ee))throw new Error("Slice start must be numeric or undefined");if(!(ue instanceof we||ue instanceof Ee))throw new Error("Slice stop must be numeric or undefined");if(!(ve instanceof we||ve instanceof Ee))throw new Error("Slice step must be numeric or undefined");return D instanceof Q?new Q(K(D.value,ne.value,ue.value,ve.value)):new _e(K(Array.from(D.value),ne.value,ue.value,ve.value).join(""))}evaluateMemberExpression(D,se){const B=this.evaluate(D.object,se);let ne;if(D.computed){if(D.property.type==="SliceExpression")return this.evaluateSliceExpression(B,D.property,se);ne=this.evaluate(D.property,se)}else ne=new _e(D.property.value);let ue;if(B instanceof qe){if(!(ne instanceof _e))throw new Error(`Cannot access property with non-string: got ${ne.type}`);ue=B.value.get(ne.value)??B.builtins.get(ne.value)}else if(B instanceof Q||B instanceof _e)if(ne instanceof we)ue=B.value.at(ne.value),B instanceof _e&&(ue=new _e(B.value.at(ne.value)));else if(ne instanceof _e)ue=B.builtins.get(ne.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ne.type}`);else{if(!(ne instanceof _e))throw new Error(`Cannot access property with non-string: got ${ne.type}`);ue=B.builtins.get(ne.value)}return ue instanceof Z?ue:new Ee}evaluateSet(D,se){const B=this.evaluate(D.value,se);if(D.assignee.type==="Identifier"){const ne=D.assignee.value;se.setVariable(ne,B)}else if(D.assignee.type==="MemberExpression"){const ne=D.assignee,ue=this.evaluate(ne.object,se);if(!(ue instanceof qe))throw new Error("Cannot assign to member of non-object");if(ne.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ue.value.set(ne.property.value,B)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(D.assignee)}`);return new Ce}evaluateIf(D,se){const B=this.evaluate(D.test,se);return this.evaluateBlock(B.__bool__().value?D.body:D.alternate,se)}evaluateFor(D,se){const B=new Oe(se);let ne,ue;if(D.iterable.type==="SelectExpression"){const Ve=D.iterable;ue=this.evaluate(Ve.iterable,B),ne=Ve.test}else ue=this.evaluate(D.iterable,B);if(!(ue instanceof Q))throw new Error(`Expected iterable type in for loop: got ${ue.type}`);const ve=[],xe=[];for(let Ve=0;Ve<ue.value.length;++Ve){const Qe=new Oe(B),Je=ue.value[Ve];let pt;if(D.loopvar.type==="Identifier")pt=Mt=>Mt.setVariable(D.loopvar.value,Je);else if(D.loopvar.type==="TupleLiteral"){const Mt=D.loopvar;if(Je.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Je.type}`);const dr=Je;if(Mt.value.length!==dr.value.length)throw new Error(`Too ${Mt.value.length>dr.value.length?"few":"many"} items to unpack`);pt=Gt=>{for(let _r=0;_r<Mt.value.length;++_r){if(Mt.value[_r].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Mt.value[_r].type}`);Gt.setVariable(Mt.value[_r].value,dr.value[_r])}}}else throw new Error(`Invalid loop variable(s): ${D.loopvar.type}`);ne&&(pt(Qe),!this.evaluate(ne,Qe).__bool__().value)||(ve.push(Je),xe.push(pt))}let Ne="",Fe=!0;for(let Ve=0;Ve<ve.length;++Ve){const Qe=new Map([["index",new we(Ve+1)],["index0",new we(Ve)],["revindex",new we(ve.length-Ve)],["revindex0",new we(ve.length-Ve-1)],["first",new Ae(Ve===0)],["last",new Ae(Ve===ve.length-1)],["length",new we(ve.length)],["previtem",Ve>0?ve[Ve-1]:new Ee],["nextitem",Ve<ve.length-1?ve[Ve+1]:new Ee]]);B.setVariable("loop",new qe(Qe)),xe[Ve](B);const Je=this.evaluateBlock(D.body,B);Ne+=Je.value,Fe=!1}if(Fe){const Ve=this.evaluateBlock(D.defaultBlock,B);Ne+=Ve.value}return new _e(Ne)}evaluateMacro(D,se){return se.setVariable(D.name.value,new fe((B,ne)=>{var xe;const ue=new Oe(ne);B=B.slice();let ve;((xe=B.at(-1))==null?void 0:xe.type)==="KeywordArgumentsValue"&&(ve=B.pop());for(let Ne=0;Ne<D.args.length;++Ne){const Fe=D.args[Ne],Ve=B[Ne];if(Fe.type==="Identifier"){const Qe=Fe;if(!Ve)throw new Error(`Missing positional argument: ${Qe.value}`);ue.setVariable(Qe.value,Ve)}else if(Fe.type==="KeywordArgumentExpression"){const Qe=Fe,Je=Ve??(ve==null?void 0:ve.value.get(Qe.key.value))??this.evaluate(Qe.value,ue);ue.setVariable(Qe.key.value,Je)}else throw new Error(`Unknown argument type: ${Fe.type}`)}return this.evaluateBlock(D.body,ue)})),new Ce}evaluate(D,se){if(D===void 0)return new Ee;switch(D.type){case"Program":return this.evalProgram(D,se);case"Set":return this.evaluateSet(D,se);case"If":return this.evaluateIf(D,se);case"For":return this.evaluateFor(D,se);case"Macro":return this.evaluateMacro(D,se);case"NumericLiteral":return new we(Number(D.value));case"StringLiteral":return new _e(D.value);case"BooleanLiteral":return new Ae(D.value);case"NullLiteral":return new Ce(D.value);case"ArrayLiteral":return new Q(D.value.map(B=>this.evaluate(B,se)));case"TupleLiteral":return new V(D.value.map(B=>this.evaluate(B,se)));case"ObjectLiteral":{const B=new Map;for(const[ne,ue]of D.value){const ve=this.evaluate(ne,se);if(!(ve instanceof _e))throw new Error(`Object keys must be strings: got ${ve.type}`);B.set(ve.value,this.evaluate(ue,se))}return new qe(B)}case"Identifier":return this.evaluateIdentifier(D,se);case"CallExpression":return this.evaluateCallExpression(D,se);case"MemberExpression":return this.evaluateMemberExpression(D,se);case"UnaryExpression":return this.evaluateUnaryExpression(D,se);case"BinaryExpression":return this.evaluateBinaryExpression(D,se);case"FilterExpression":return this.evaluateFilterExpression(D,se);case"TestExpression":return this.evaluateTestExpression(D,se);default:throw new SyntaxError(`Unknown node type: ${D.type}`)}}};function ze(D){switch(typeof D){case"number":return new we(D);case"string":return new _e(D);case"boolean":return new Ae(D);case"undefined":return new Ee;case"object":return D===null?new Ce:Array.isArray(D)?new Q(D.map(ze)):new qe(new Map(Object.entries(D).map(([se,B])=>[se,ze(B)])));case"function":return new fe((se,B)=>{const ne=D(...se.map(ue=>ue.value))??null;return ze(ne)});default:throw new Error(`Cannot convert to runtime value: ${D}`)}}function je(D,se,B){const ne=B??0;switch(D.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(D.value);case"ArrayValue":case"ObjectValue":{const ue=se?" ".repeat(se):"",ve=`
`+ue.repeat(ne),xe=ve+ue;if(D.type==="ArrayValue"){const Ne=D.value.map(Fe=>je(Fe,se,ne+1));return se?`[${xe}${Ne.join(`,${xe}`)}${ve}]`:`[${Ne.join(", ")}]`}else{const Ne=Array.from(D.value.entries()).map(([Fe,Ve])=>{const Qe=`"${Fe}": ${je(Ve,se,ne+1)}`;return se?`${xe}${Qe}`:Qe});return se?`{${Ne.join(",")}${ve}}`:`{${Ne.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${D.type}`)}}var Ge=class{constructor(D){X(this,"parsed");const se=d(D,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=j(se)}render(D){const se=new Oe;if(se.set("false",!1),se.set("true",!0),se.set("raise_exception",ue=>{throw new Error(ue)}),se.set("range",F),D)for(const[ue,ve]of Object.entries(D))se.set(ue,ve);return new Ie(se).run(this.parsed).value}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>o.Tensor,createInferenceSession:()=>A,deviceToExecutionProviders:()=>_,isONNXProxy:()=>k,isONNXTensor:()=>M});var a=t("./src/env.js"),n=t("?2ce3"),i=t("onnxruntime-web"),o=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,d;const h=Symbol.for("onnxruntime");if(h in globalThis)d=globalThis[h];else if(a.apis.IS_NODE_ENV){switch(d=n??(s||(s=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else d=i,a.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),a.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const g=d.InferenceSession;function _(P=null){if(!P)return p;switch(P){case"auto":return c;case"gpu":return c.filter(b=>["webgpu","cuda","dml","webnn-gpu"].includes(b))}if(c.includes(P))return[l[P]??P];throw new Error(`Unsupported device: "${P}". Should be one of: ${c.join(", ")}.`)}let E=null;async function A(P,b,w){E&&await E;const T=g.create(P,b);E??(E=T);const $=await T;return $.config=w,$}function M(P){return P instanceof d.Tensor}const y=d==null?void 0:d.env;y!=null&&y.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!y.wasm.wasmPaths&&(y.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${a.env.version}/dist/`),y.wasm.proxy=!1),y!=null&&y.webgpu&&(y.webgpu.powerPreference="high-performance");function k(){var P;return(P=y==null?void 0:y.wasm)==null?void 0:P.proxy}a.env.backends.onnx=y},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>i,validate_audio_inputs:()=>o});var s=t("./src/utils/constants.js"),a=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends a.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p){const d=await(0,n.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(d)}}function o(l,c){var p;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((p=l==null?void 0:l.constructor)==null?void 0:p.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>P,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>k,post_process_object_detection:()=>h,post_process_panoptic_segmentation:()=>y,post_process_semantic_segmentation:()=>g});var s=t("./src/utils/generic.js"),a=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var i=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(b,w,T=0,$=null){const z=b/w;let N=(0,n.bankers_round)(z)*w;return $!==null&&N>$&&(N=Math.floor(z)*w),N<T&&(N=Math.ceil(z)*w),N}function p([b,w],T){return[Math.max(Math.floor(b/T),1)*T,Math.max(Math.floor(w/T),1)*T]}function d([b,w,T,$]){return[b-T/2,w-$/2,b+T/2,w+$/2]}function h(b,w=.5,T=null,$=!1){const z=b.logits,N=b.pred_boxes,[Y,J,W]=z.dims;if(T!==null&&T.length!==Y)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let te=[];for(let H=0;H<Y;++H){let R=T!==null?T[H]:null,q={boxes:[],classes:[],scores:[]},ee=z[H],le=N[H];for(let de=0;de<J;++de){let j=ee[de],F=[],K;if($){K=j.sigmoid().data;for(let ae=0;ae<K.length;++ae)K[ae]>w&&F.push(ae)}else{let ae=(0,n.max)(j.data)[1];if(ae===W-1||(K=(0,n.softmax)(j.data),K[ae]<w))continue;F.push(ae)}for(const ae of F){let Z=le[de].data;Z=d(Z),R!==null&&(Z=Z.map((we,_e)=>we*R[(_e+1)%2])),q.boxes.push(Z),q.classes.push(ae),q.scores.push(K[ae])}}te.push(q)}return te}function g(b,w=null){const T=b.logits,$=T.dims[0];if(w!==null&&w.length!==$)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const z=[];for(let N=0;N<$;++N){const Y=w!==null?w[N]:null;let J=T[N];Y!==null&&(J=(0,a.interpolate)(J,Y,"bilinear",!1));const[W,te]=Y??J.dims.slice(-2),H=new a.Tensor("int32",new Int32Array(W*te),[W,te]),R=J[0].data,q=H.data;for(let de=1;de<J.dims[0];++de){const j=J[de].data;for(let F=0;F<j.length;++F)j[F]>R[F]&&(R[F]=j[F],q[F]=de)}const ee=new Array(J.dims[0]);for(let de=0;de<q.length;++de){const j=q[de];ee[j]=j}const le=ee.filter(de=>de!==void 0);z.push({segmentation:H,labels:le})}return z}function _(b,w,T,$){const z=[],N=[],Y=[];for(let J=0;J<b.dims[0];++J){const W=b[J],te=w[J],H=(0,n.max)(W.data)[1];if(H===$)continue;const q=(0,n.softmax)(W.data)[H];q>T&&(z.push(te),N.push(q),Y.push(H))}return[z,N,Y]}function E(b,w,T,$=.5,z=.8){const N=[];let Y=0,J=0;const W=w[T].data;for(let H=0;H<b.length;++H)b[H]===T&&(N.push(H),++Y),W[H]>=$&&++J;let te=Y>0&&J>0;return te&&(te=Y/J>z),[te,N]}function A(b,w,T,$,z,N=null,Y=null){const[J,W]=Y??b[0].dims,te=new a.Tensor("int32",new Int32Array(J*W),[J,W]),H=[];if(Y!==null)for(let de=0;de<b.length;++de)b[de]=(0,a.interpolate)(b[de],Y,"bilinear",!1);const R=new Int32Array(b[0].data.length),q=new Float32Array(b[0].data.length);for(let de=0;de<b.length;++de){let j=w[de];const F=b[de].data;for(let K=0;K<F.length;++K)F[K]*=j,F[K]>q[K]&&(R[K]=de,q[K]=F[K])}let ee=0;const le=te.data;for(let de=0;de<T.length;++de){const j=T[de],[F,K]=E(R,b,de,$,z);if(F){++ee;for(const ae of K)le[ae]=ee;H.push({id:ee,label_id:j,score:w[de]})}}return[te,H]}function M(b,w,T=28,$=56*56,z=14*14*4*1280){if(b<T||w<T)throw new Error(`height:${b} or width:${w} must be larger than factor:${T}`);if(Math.max(b,w)/Math.min(b,w)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(b,w)/Math.min(b,w)}`);let N=Math.round(b/T)*T,Y=Math.round(w/T)*T;if(N*Y>z){const J=Math.sqrt(b*w/z);N=Math.floor(b/J/T)*T,Y=Math.floor(w/J/T)*T}else if(N*Y<$){const J=Math.sqrt($/(b*w));N=Math.ceil(b*J/T)*T,Y=Math.ceil(w*J/T)*T}return[N,Y]}function y(b,w=.5,T=.5,$=.8,z=null,N=null){z===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),z=new Set);const Y=b.class_queries_logits??b.logits,W=(b.masks_queries_logits??b.pred_masks).sigmoid();let[te,H,R]=Y.dims;if(R-=1,N!==null&&N.length!==te)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let q=[];for(let ee=0;ee<te;++ee){let le=N!==null?N[ee]:null,de=Y[ee],j=W[ee],[F,K,ae]=_(de,j,w,R);if(ae.length===0){let[_e,Ae]=le??j.dims.slice(-2),qe=new a.Tensor("int32",new Int32Array(_e*Ae).fill(-1),[_e,Ae]);q.push({segmentation:qe,segments_info:[]});continue}let[Z,we]=A(F,K,ae,T,$,z,le);q.push({segmentation:Z,segments_info:we})}return q}function k(b,w=.5,T=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class P extends s.Callable{constructor(w){super(),this.image_mean=w.image_mean??w.mean,this.image_std=w.image_std??w.std,this.resample=w.resample??2,this.do_rescale=w.do_rescale??!0,this.rescale_factor=w.rescale_factor??1/255,this.do_normalize=w.do_normalize,this.do_thumbnail=w.do_thumbnail,this.size=w.size??w.image_size,this.do_resize=w.do_resize??this.size!==void 0,this.size_divisibility=w.size_divisibility??w.size_divisor,this.do_center_crop=w.do_center_crop,this.crop_size=w.crop_size,this.do_convert_rgb=w.do_convert_rgb??!0,this.do_crop_margin=w.do_crop_margin,this.pad_size=w.pad_size,this.do_pad=w.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=w.do_flip_channel_order??!1,this.config=w}async thumbnail(w,T,$=2){const z=w.height,N=w.width,Y=T.height,J=T.width;let W=Math.min(z,Y),te=Math.min(N,J);return W===z&&te===N?w:(z>N?te=Math.floor(N*W/z):N>z&&(W=Math.floor(z*te/N)),await w.resize(te,W,{resample:$}))}async crop_margin(w,T=200){const $=w.clone().grayscale(),z=(0,n.min)($.data)[0],Y=(0,n.max)($.data)[0]-z;if(Y===0)return w;const J=T/255;let W=$.width,te=$.height,H=0,R=0;const q=$.data;for(let ee=0;ee<$.height;++ee){const le=ee*$.width;for(let de=0;de<$.width;++de)(q[le+de]-z)/Y<J&&(W=Math.min(W,de),te=Math.min(te,ee),H=Math.max(H,de),R=Math.max(R,ee))}return w=await w.crop([W,te,H,R]),w}pad_image(w,T,$,{mode:z="constant",center:N=!1,constant_values:Y=0}={}){const[J,W,te]=T;let H,R;if(typeof $=="number"?(H=$,R=$):$==="square"?H=R=Math.max(J,W):(H=$.width,R=$.height),H!==W||R!==J){const q=new Float32Array(H*R*te);if(Array.isArray(Y))for(let de=0;de<q.length;++de)q[de]=Y[de%te];else Y!==0&&q.fill(Y);const[ee,le]=N?[Math.floor((H-W)/2),Math.floor((R-J)/2)]:[0,0];for(let de=0;de<J;++de){const j=(de+le)*H,F=de*W;for(let K=0;K<W;++K){const ae=(j+K+ee)*te,Z=(F+K)*te;for(let we=0;we<te;++we)q[ae+we]=w[Z+we]}}if(z==="symmetric"){if(N)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const de=J-1,j=W-1;for(let F=0;F<R;++F){const K=F*H,ae=(0,i.calculateReflectOffset)(F,de)*W;for(let Z=0;Z<H;++Z){if(F<J&&Z<W)continue;const we=(K+Z)*te,_e=(ae+(0,i.calculateReflectOffset)(Z,j))*te;for(let Ae=0;Ae<te;++Ae)q[we+Ae]=w[_e+Ae]}}}w=q,T=[R,H,te]}return[w,T]}rescale(w){for(let T=0;T<w.length;++T)w[T]=this.rescale_factor*w[T]}get_resize_output_image_size(w,T){const[$,z]=w.size;let N,Y;if(this.do_thumbnail){const{height:J,width:W}=T;N=Math.min(J,W)}else Number.isInteger(T)?(N=T,Y=this.config.max_size??N):T!==void 0&&(N=T.shortest_edge,Y=T.longest_edge);if(N!==void 0||Y!==void 0){const J=N===void 0?1:Math.max(N/$,N/z),W=$*J,te=z*J,H=Y===void 0?1:Math.min(Y/W,Y/te);let R=Math.floor(Number((W*H).toFixed(2))),q=Math.floor(Number((te*H).toFixed(2)));return this.size_divisibility!==void 0&&([R,q]=p([R,q],this.size_divisibility)),[R,q]}else if(T!==void 0&&T.width!==void 0&&T.height!==void 0){let J=T.width,W=T.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let te=W/z,H=J/$;Math.abs(1-H)<Math.abs(1-te)?te=H:H=te,W=c(te*z,this.config.ensure_multiple_of),J=c(H*$,this.config.ensure_multiple_of)}return[J,W]}else{if(this.size_divisibility!==void 0)return p([$,z],this.size_divisibility);if(T.min_pixels!==void 0&&T.max_pixels!==void 0){const{min_pixels:J,max_pixels:W}=T,te=this.config.patch_size*this.config.merge_size;return M(z,$,te,J,W)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(T)}`)}}async resize(w){const[T,$]=this.get_resize_output_image_size(w,this.size);return await w.resize(T,$,{resample:this.resample})}async preprocess(w,{do_normalize:T=null,do_pad:$=null,do_convert_rgb:z=null,do_convert_grayscale:N=null,do_flip_channel_order:Y=null}={}){this.do_crop_margin&&(w=await this.crop_margin(w));const[J,W]=w.size;if(z??this.do_convert_rgb?w=w.rgb():N&&(w=w.grayscale()),this.do_resize&&(w=await this.resize(w)),this.do_thumbnail&&(w=await this.thumbnail(w,this.size,this.resample)),this.do_center_crop){let ee,le;Number.isInteger(this.crop_size)?(ee=this.crop_size,le=this.crop_size):(ee=this.crop_size.width,le=this.crop_size.height),w=await w.center_crop(ee,le)}const te=[w.height,w.width];let H=Float32Array.from(w.data),R=[w.height,w.width,w.channels];if(this.do_rescale&&this.rescale(H),T??this.do_normalize){let ee=this.image_mean;Array.isArray(this.image_mean)||(ee=new Array(w.channels).fill(ee));let le=this.image_std;if(Array.isArray(this.image_std)||(le=new Array(w.channels).fill(ee)),ee.length!==w.channels||le.length!==w.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ee.length}) and \`image_std\` (${le.length}) must match the number of channels in the image (${w.channels}).`);for(let de=0;de<H.length;de+=w.channels)for(let j=0;j<w.channels;++j)H[de+j]=(H[de+j]-ee[j])/le[j]}if($??this.do_pad){if(this.pad_size)[H,R]=this.pad_image(H,[w.height,w.width,w.channels],this.pad_size);else if(this.size_divisibility){const[ee,le]=p([R[1],R[0]],this.size_divisibility);[H,R]=this.pad_image(H,R,{width:ee,height:le})}}if(Y??this.do_flip_channel_order){if(R[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ee=0;ee<H.length;ee+=3){const le=H[ee];H[ee]=H[ee+2],H[ee+2]=le}}const q=new a.Tensor("float32",H,R).permute(2,0,1);return{original_size:[W,J],reshaped_input_size:te,pixel_values:q}}async _call(w,...T){Array.isArray(w)||(w=[w]);const $=await Promise.all(w.map(N=>this.preprocess(N)));return{pixel_values:(0,a.stack)($.map(N=>N.pixel_values),0),original_sizes:$.map(N=>N.original_size),reshaped_input_sizes:$.map(N=>N.reshaped_input_size)}}static async from_pretrained(w,T){const $=await(0,o.getModelJSON)(w,l.IMAGE_PROCESSOR_NAME,!0,T);return new this($)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>i});var s=t("./src/utils/constants.js"),a=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends a.Callable{constructor(l,c){super(),this.config=l,this.components=c}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c){const[p,d]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(h=>h in this).map(async h=>{const g=await this[h].from_pretrained(l,c);return[h.replace(/_class$/,""),g]})).then(Object.fromEntries)]);return new this(p,d)}}X(i,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),X(i,"uses_processor_config",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>c,PretrainedConfig:()=>l,getKeyValueShapes:()=>o});var s=t("./src/utils/core.js"),a=t("./src/utils/hub.js");async function n(p,d){return await(0,a.getModelJSON)(p,"config.json",!0,d)}function i(p){const d={};let h={};switch(p.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":h=i(p.text_config);break;case"moondream1":h=i(p.phi_config);break;case"musicgen":h=i(p.decoder);break;case"multi_modality":h=i(p.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":d.num_heads="n_head",d.num_layers="n_layer",d.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":d.num_heads="num_attention_heads",d.num_layers="num_hidden_layers",d.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":d.num_heads="num_key_value_heads",d.num_layers="num_hidden_layers",d.hidden_size="hidden_size",d.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":d.num_heads="num_key_value_heads",d.num_layers="num_hidden_layers",d.dim_kv="head_dim";break;case"openelm":d.num_heads="num_kv_heads",d.num_layers="num_transformer_layers",d.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":d.num_heads="num_heads",d.num_layers="num_layers",d.hidden_size="hidden_size";break;case"bloom":d.num_heads="n_head",d.num_layers="n_layer",d.hidden_size="hidden_size";break;case"mpt":d.num_heads="n_heads",d.num_layers="n_layers",d.hidden_size="d_model";break;case"exaone":d.num_heads="num_key_value_heads",d.num_layers="num_layers",d.dim_kv="head_dim",d.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":d.num_decoder_layers="num_decoder_layers",d.num_decoder_heads="num_heads",d.decoder_dim_kv="d_kv",d.num_encoder_layers="num_layers",d.num_encoder_heads="num_heads",d.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":d.num_decoder_layers="decoder_layers",d.num_decoder_heads="decoder_attention_heads",d.decoder_hidden_size="d_model",d.num_encoder_layers="encoder_layers",d.num_encoder_heads="encoder_attention_heads",d.encoder_hidden_size="d_model";break;case"speecht5":d.num_decoder_layers="decoder_layers",d.num_decoder_heads="decoder_attention_heads",d.decoder_hidden_size="hidden_size",d.num_encoder_layers="encoder_layers",d.num_encoder_heads="encoder_attention_heads",d.encoder_hidden_size="hidden_size";break;case"trocr":d.num_encoder_layers=d.num_decoder_layers="decoder_layers",d.num_encoder_heads=d.num_decoder_heads="decoder_attention_heads",d.encoder_hidden_size=d.decoder_hidden_size="d_model";break;case"musicgen_decoder":d.num_encoder_layers=d.num_decoder_layers="num_hidden_layers",d.num_encoder_heads=d.num_decoder_heads="num_attention_heads",d.encoder_hidden_size=d.decoder_hidden_size="hidden_size";break;case"moonshine":d.num_decoder_layers="decoder_num_hidden_layers",d.num_decoder_heads="decoder_num_key_value_heads",d.num_encoder_layers="encoder_num_hidden_layers",d.num_encoder_heads="encoder_num_key_value_heads",d.encoder_hidden_size=d.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const _=i(p.decoder),E="num_decoder_layers"in _,A=(0,s.pick)(p,["model_type","is_encoder_decoder"]);return E?(A.num_decoder_layers=_.num_decoder_layers,A.num_decoder_heads=_.num_decoder_heads,A.decoder_hidden_size=_.decoder_hidden_size,A.num_encoder_layers=_.num_encoder_layers,A.num_encoder_heads=_.num_encoder_heads,A.encoder_hidden_size=_.encoder_hidden_size):(A.num_layers=_.num_layers,A.num_heads=_.num_heads,A.hidden_size=_.hidden_size),A}const g={...h,...(0,s.pick)(p,["model_type","multi_query","is_encoder_decoder"])};for(const _ in d)g[_]=p[d[_]];return g}function o(p,{prefix:d="past_key_values",batch_size:h=1}={}){const g={},_=p.normalized_config;if(_.is_encoder_decoder&&"num_encoder_heads"in _&&"num_decoder_heads"in _){const E=_.encoder_dim_kv??_.encoder_hidden_size/_.num_encoder_heads,A=_.decoder_dim_kv??_.decoder_hidden_size/_.num_decoder_heads,M=[h,_.num_encoder_heads,0,E],y=[h,_.num_decoder_heads,0,A];for(let k=0;k<_.num_decoder_layers;++k)g[`${d}.${k}.encoder.key`]=M,g[`${d}.${k}.encoder.value`]=M,g[`${d}.${k}.decoder.key`]=y,g[`${d}.${k}.decoder.value`]=y}else{const E=_.num_heads,A=_.num_layers,M=_.dim_kv??_.hidden_size/(_.num_attention_heads??E);if(_.model_type==="falcon"){const y=[h*E,0,M];for(let k=0;k<A;++k)g[`${d}.${k}.key`]=y,g[`${d}.${k}.value`]=y}else if(_.multi_query){const y=[h*E,0,2*M];for(let k=0;k<A;++k)g[`${d}.${k}.key_value`]=y}else if(_.model_type==="bloom"){const y=[h*E,M,0],k=[h*E,0,M];for(let P=0;P<A;++P)g[`${d}.${P}.key`]=y,g[`${d}.${P}.value`]=k}else if(_.model_type==="openelm")for(let y=0;y<A;++y){const k=[h,E[y],0,M];g[`${d}.${y}.key`]=k,g[`${d}.${y}.value`]=k}else{const y=[h,E,0,M];for(let k=0;k<A;++k)g[`${d}.${k}.key`]=y,g[`${d}.${k}.value`]=y}}return g}class l{constructor(d){X(this,"model_type",null);X(this,"is_encoder_decoder",!1);X(this,"max_position_embeddings");X(this,"transformers.js_config");Object.assign(this,d),this.normalized_config=i(this)}static async from_pretrained(d,{progress_callback:h=null,config:g=null,cache_dir:_=null,local_files_only:E=!1,revision:A="main"}={}){g&&!(g instanceof l)&&(g=new l(g));const M=g??await n(d,{progress_callback:h,config:g,cache_dir:_,local_files_only:E,revision:A});return new this(M)}}class c{static async from_pretrained(...d){return l.from_pretrained(...d)}}},"./src/env.js":(e,r,t)=>{var $,z;t.r(r),t.d(r,{apis:()=>A,env:()=>w});var s=t("?569f"),a=t("?3f59"),n=t("?154a");const i="3.4.2",o=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&(($=self.constructor)==null?void 0:$.name)==="DedicatedWorkerGlobalScope",c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,h=typeof process<"u",g=h&&((z=process==null?void 0:process.release)==null?void 0:z.name)==="node",_=!T(s),E=!T(a),A=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:h,IS_NODE_ENV:g,IS_FS_AVAILABLE:_,IS_PATH_AVAILABLE:E}),M=_&&E;let y="./";if(M){const N=Object({url:self.location.href}).url;N?y=a.dirname(a.dirname(n.fileURLToPath(N))):typeof __dirname<"u"&&(y=a.dirname(__dirname))}const k=M?a.join(y,"/.cache/"):null,P="/models/",b=M?a.join(y,P):P,w={version:i,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(o||l),localModelPath:b,useFS:_,useBrowserCache:c,useFSCache:_,cacheDir:k,useCustomCache:!1,customCache:null};function T(N){return Object.keys(N).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>a});var s=t("./src/utils/core.js");class a{constructor(i){X(this,"max_length",20);X(this,"max_new_tokens",null);X(this,"min_length",0);X(this,"min_new_tokens",null);X(this,"early_stopping",!1);X(this,"max_time",null);X(this,"do_sample",!1);X(this,"num_beams",1);X(this,"num_beam_groups",1);X(this,"penalty_alpha",null);X(this,"use_cache",!0);X(this,"temperature",1);X(this,"top_k",50);X(this,"top_p",1);X(this,"typical_p",1);X(this,"epsilon_cutoff",0);X(this,"eta_cutoff",0);X(this,"diversity_penalty",0);X(this,"repetition_penalty",1);X(this,"encoder_repetition_penalty",1);X(this,"length_penalty",1);X(this,"no_repeat_ngram_size",0);X(this,"bad_words_ids",null);X(this,"force_words_ids",null);X(this,"renormalize_logits",!1);X(this,"constraints",null);X(this,"forced_bos_token_id",null);X(this,"forced_eos_token_id",null);X(this,"remove_invalid_values",!1);X(this,"exponential_decay_length_penalty",null);X(this,"suppress_tokens",null);X(this,"streamer",null);X(this,"begin_suppress_tokens",null);X(this,"forced_decoder_ids",null);X(this,"guidance_scale",null);X(this,"num_return_sequences",1);X(this,"output_attentions",!1);X(this,"output_hidden_states",!1);X(this,"output_scores",!1);X(this,"return_dict_in_generate",!1);X(this,"pad_token_id",null);X(this,"bos_token_id",null);X(this,"eos_token_id",null);X(this,"encoder_no_repeat_ngram_size",0);X(this,"decoder_start_token_id",null);X(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(i,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>M,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>o,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>_,MinNewTokensLengthLogitsProcessor:()=>E,NoBadWordsLogitsProcessor:()=>A,NoRepeatNGramLogitsProcessor:()=>h,RepetitionPenaltyLogitsProcessor:()=>g,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>y,TopKLogitsWarper:()=>P,TopPLogitsWarper:()=>k,WhisperTimeStampLogitsProcessor:()=>d});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var a=t("./src/utils/maths.js");class n extends s.Callable{_call(w,T){throw Error("`_call` should be implemented in a subclass")}}class i extends s.Callable{_call(w,T){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{constructor(){super(),this.processors=[]}push(w){this.processors.push(w)}extend(w){this.processors.push(...w)}_call(w,T){let $=T;for(const z of this.processors)$=z(w,$);return $}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(w){super(),this.bos_token_id=w}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length===1){const z=T[$].data;z.fill(-1/0),z[this.bos_token_id]=0}return T}}class c extends n{constructor(w,T){super(),this.max_length=w,this.eos_token_id=Array.isArray(T)?T:[T]}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length===this.max_length-1){const z=T[$].data;z.fill(-1/0);for(const N of this.eos_token_id)z[N]=0}return T}}class p extends n{constructor(w,T){super(),this.begin_suppress_tokens=w,this.begin_index=T}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length===this.begin_index){const z=T[$].data;for(const N of this.begin_suppress_tokens)z[N]=-1/0}return T}}class d extends n{constructor(w,T){super(),this.eos_token_id=Array.isArray(w.eos_token_id)?w.eos_token_id[0]:w.eos_token_id,this.no_timestamps_token_id=w.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=T.length,T.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=w.max_initial_timestamp_index}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data;if(z[this.no_timestamps_token_id]=-1/0,w[$].length===this.begin_index-1){z.fill(-1/0),z[this.timestamp_begin]=0;continue}const N=w[$].slice(this.begin_index),Y=N.length>=1&&N[N.length-1]>=this.timestamp_begin,J=N.length<2||N[N.length-2]>=this.timestamp_begin;if(Y&&(J?z.subarray(this.timestamp_begin).fill(-1/0):z.subarray(0,this.eos_token_id).fill(-1/0)),w[$].length===this.begin_index&&this.max_initial_timestamp_index!==null){const R=this.timestamp_begin+this.max_initial_timestamp_index;z.subarray(R+1).fill(-1/0)}const W=(0,a.log_softmax)(z),te=Math.log(W.subarray(this.timestamp_begin).map(Math.exp).reduce((R,q)=>R+q)),H=(0,a.max)(W.subarray(0,this.timestamp_begin))[0];te>H&&z.subarray(0,this.timestamp_begin).fill(-1/0)}return T}}class h extends n{constructor(w){super(),this.no_repeat_ngram_size=w}getNgrams(w){const T=w.length,$=[];for(let N=0;N<T+1-this.no_repeat_ngram_size;++N){const Y=[];for(let J=0;J<this.no_repeat_ngram_size;++J)Y.push(w[N+J]);$.push(Y.map(Number))}const z=new Map;for(const N of $){const Y=N.slice(0,N.length-1),J=JSON.stringify(Y),W=z.get(J)??[];W.push(N[N.length-1]),z.set(J,W)}return z}getGeneratedNgrams(w,T){const $=T.slice(T.length+1-this.no_repeat_ngram_size,T.length);return w.get(JSON.stringify($.map(Number)))??[]}calcBannedNgramTokens(w){const T=[];if(w.length+1<this.no_repeat_ngram_size)return T;{const $=this.getNgrams(w);return this.getGeneratedNgrams($,w)}}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data,N=this.calcBannedNgramTokens(w[$]);for(const Y of N)z[Y]=-1/0}return T}}class g extends n{constructor(w){super(),this.penalty=w}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data;for(const N of new Set(w[$])){const Y=Number(N);z[Y]<0?z[Y]*=this.penalty:z[Y]/=this.penalty}}return T}}class _ extends n{constructor(w,T){super(),this.min_length=w,this.eos_token_id=Array.isArray(T)?T:[T]}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length<this.min_length){const z=T[$].data;for(const N of this.eos_token_id)z[N]=-1/0}return T}}class E extends n{constructor(w,T,$){super(),this.prompt_length_to_skip=w,this.min_new_tokens=T,this.eos_token_id=Array.isArray($)?$:[$]}_call(w,T){for(let $=0;$<w.length;++$)if(w[$].length-this.prompt_length_to_skip<this.min_new_tokens){const N=T[$].data;for(const Y of this.eos_token_id)N[Y]=-1/0}return T}}class A extends n{constructor(w,T){super(),this.bad_words_ids=w,this.eos_token_id=Array.isArray(T)?T:[T]}_call(w,T){for(let $=0;$<w.length;++$){const z=T[$].data,N=w[$];for(const Y of this.bad_words_ids){let J=!0;for(let W=1;W<=Y.length-1&&Y.length<N.length;++W)if(Y.at(-W-1)!=N.at(-W)){J=!1;break}J&&(z[Y.at(-1)]=-1/0)}}return T}}class M extends n{constructor(w){if(super(),w<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${w}.`);this.guidance_scale=w}_call(w,T){if(T.dims[0]!==2*w.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${T.dims[0]} for the logits and ${w.length} for the input ids.`);const $=w.length,z=T.slice([0,$],null),N=T.slice([$,T.dims[0]],null);for(let Y=0;Y<N.data.length;++Y)N.data[Y]+=(z.data[Y]-N.data[Y])*this.guidance_scale;return N}}class y extends i{constructor(w){super(),this.temperature=w}_call(w,T){const $=T.data;for(let z=0;z<$.length;++z)$[z]/=this.temperature;return T}}class k extends i{constructor(w,{filter_value:T=-1/0,min_tokens_to_keep:$=1}={}){if(super(),w<0||w>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${w}`);if(!Number.isInteger($)||$<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${$}`);this.top_p=w,this.filter_value=T,this.min_tokens_to_keep=$}}class P extends i{constructor(w,{filter_value:T=-1/0,min_tokens_to_keep:$=1}={}){if(super(),!Number.isInteger(w)||w<0)throw new Error(`\`top_k\` must be a positive integer, but is ${w}`);this.top_k=Math.max(w,$),this.filter_value=T}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>i});var s=t("./src/utils/generic.js"),a=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class i extends s.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,h){let g=d.dims.at(-1),_=d.data;if(h===-1)_=_.slice(-g);else{let E=h*g;_=_.slice(E,E+g)}return _}randomSelect(d){let h=0;for(let _=0;_<d.length;++_)h+=d[_];let g=Math.random()*h;for(let _=0;_<d.length;++_)if(g-=d[_],g<=0)return _;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new c(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new o(d)}}class o extends i{async sample(d){const h=(0,n.max)(d.data)[1];return[[BigInt(h),0]]}}class l extends i{async sample(d){let h=d.dims.at(-1);this.generation_config.top_k>0&&(h=Math.min(this.generation_config.top_k,h));const[g,_]=await(0,a.topk)(d,h),E=(0,n.softmax)(g.data);return Array.from({length:this.generation_config.num_beams},()=>{const A=this.randomSelect(E);return[_.data[A],Math.log(E[A])]})}}class c extends i{async sample(d){let h=d.dims.at(-1);this.generation_config.top_k>0&&(h=Math.min(this.generation_config.top_k,h));const[g,_]=await(0,a.topk)(d,h),E=(0,n.softmax)(g.data);return Array.from({length:this.generation_config.num_beams},(A,M)=>[_.data[M],Math.log(E[M])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>o,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>a,StoppingCriteriaList:()=>n});var s=t("./src/utils/generic.js");class a extends s.Callable{_call(p,d){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof n?p=p.criteria:p instanceof a&&(p=[p]),this.criteria.push(...p)}_call(p,d){const h=new Array(p.length).fill(!1);for(const g of this.criteria){const _=g(p,d);for(let E=0;E<h.length;++E)h[E]||(h[E]=_[E])}return h}[Symbol.iterator](){return this.criteria.values()}}class i extends a{constructor(p,d=null){super(),this.max_length=p,this.max_position_embeddings=d}_call(p){return p.map(d=>d.length>=this.max_length)}}class o extends a{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,d){return p.map(h=>{const g=h.at(-1);return this.eos_token_id.some(_=>g==_)})}}class l extends a{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,d){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),a=t("./src/tokenizers.js"),n=t("./src/env.js");class i{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const o=n.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends i{constructor(d,{skip_prompt:h=!1,callback_function:g=null,token_callback_function:_=null,skip_special_tokens:E=!0,decode_kwargs:A={},...M}={}){super(),this.tokenizer=d,this.skip_prompt=h,this.callback_function=g??o,this.token_callback_function=_,this.decode_kwargs={skip_special_tokens:E,...A,...M},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){var A;if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const h=this.next_tokens_are_prompt;if(h&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const g=d[0];(A=this.token_callback_function)==null||A.call(this,g),this.token_cache=(0,s.mergeArrays)(this.token_cache,g);const _=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let E;h||_.endsWith(`
`)?(E=_.slice(this.print_len),this.token_cache=[],this.print_len=0):_.length>0&&(0,a.is_chinese_char)(_.charCodeAt(_.length-1))?(E=_.slice(this.print_len),this.print_len+=E.length):(E=_.slice(this.print_len,_.lastIndexOf(" ")+1),this.print_len+=E.length),this.on_finalized_text(E,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,h){var g,_;d.length>0&&((g=this.callback_function)==null||g.call(this,d)),h&&this.callback_function===o&&n.apis.IS_PROCESS_AVAILABLE&&((_=this.callback_function)==null||_.call(this,`
`))}}class c extends l{constructor(d,{skip_prompt:h=!1,callback_function:g=null,token_callback_function:_=null,on_chunk_start:E=null,on_chunk_end:A=null,on_finalize:M=null,time_precision:y=.02,skip_special_tokens:k=!0,decode_kwargs:P={}}={}){super(d,{skip_prompt:h,skip_special_tokens:k,callback_function:g,token_callback_function:_,decode_kwargs:P}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=E,this.on_chunk_end=A,this.on_finalize=M,this.time_precision=y,this.waiting_for_timestamp=!1}put(d){var g,_;if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const h=d[0];if(h.length===1){const E=Number(h[0])-this.timestamp_begin;if(E>=0){const A=E*this.time_precision;this.waiting_for_timestamp?(g=this.on_chunk_end)==null||g.call(this,A):(_=this.on_chunk_start)==null||_.call(this,A),this.waiting_for_timestamp=!this.waiting_for_timestamp,d=[[]]}}return super.put(d)}end(){var d;super.end(),(d=this.on_finalize)==null||d.call(this)}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>gl,ASTModel:()=>_l,ASTPreTrainedModel:()=>hi,AlbertForMaskedLM:()=>U,AlbertForQuestionAnswering:()=>O,AlbertForSequenceClassification:()=>he,AlbertModel:()=>Kn,AlbertPreTrainedModel:()=>Vs,AutoModel:()=>sp,AutoModelForAudioClassification:()=>rv,AutoModelForAudioFrameClassification:()=>nv,AutoModelForAudioTextToText:()=>hv,AutoModelForCTC:()=>tv,AutoModelForCausalLM:()=>W0,AutoModelForDepthEstimation:()=>lv,AutoModelForDocumentQuestionAnswering:()=>av,AutoModelForImageClassification:()=>q0,AutoModelForImageFeatureExtraction:()=>dv,AutoModelForImageMatting:()=>iv,AutoModelForImageSegmentation:()=>Q0,AutoModelForImageTextToText:()=>pv,AutoModelForImageToImage:()=>ov,AutoModelForMaskGeneration:()=>ev,AutoModelForMaskedLM:()=>G0,AutoModelForNormalEstimation:()=>cv,AutoModelForObjectDetection:()=>Y0,AutoModelForPoseEstimation:()=>uv,AutoModelForQuestionAnswering:()=>K0,AutoModelForSemanticSegmentation:()=>X0,AutoModelForSeq2SeqLM:()=>N0,AutoModelForSequenceClassification:()=>B0,AutoModelForSpeechSeq2Seq:()=>j0,AutoModelForTextToSpectrogram:()=>V0,AutoModelForTextToWaveform:()=>U0,AutoModelForTokenClassification:()=>R0,AutoModelForUniversalSegmentation:()=>J0,AutoModelForVision2Seq:()=>H0,AutoModelForXVector:()=>sv,AutoModelForZeroShotObjectDetection:()=>Z0,BartForConditionalGeneration:()=>Qt,BartForSequenceClassification:()=>Lt,BartModel:()=>It,BartPretrainedModel:()=>kt,BaseModelOutput:()=>Ce,BeitForImageClassification:()=>ac,BeitModel:()=>nc,BeitPreTrainedModel:()=>Po,BertForMaskedLM:()=>Ie,BertForQuestionAnswering:()=>Ge,BertForSequenceClassification:()=>ze,BertForTokenClassification:()=>je,BertModel:()=>Oe,BertPreTrainedModel:()=>Ee,BlenderbotForConditionalGeneration:()=>ir,BlenderbotModel:()=>Xt,BlenderbotPreTrainedModel:()=>As,BlenderbotSmallForConditionalGeneration:()=>Is,BlenderbotSmallModel:()=>ds,BlenderbotSmallPreTrainedModel:()=>Tr,BloomForCausalLM:()=>oo,BloomModel:()=>io,BloomPreTrainedModel:()=>za,CLIPModel:()=>bi,CLIPPreTrainedModel:()=>nn,CLIPSegForImageSegmentation:()=>vi,CLIPSegModel:()=>vn,CLIPSegPreTrainedModel:()=>bn,CLIPTextModel:()=>kd,CLIPTextModelWithProjection:()=>Pl,CLIPVisionModel:()=>$d,CLIPVisionModelWithProjection:()=>fa,CamembertForMaskedLM:()=>zs,CamembertForQuestionAnswering:()=>Ys,CamembertForSequenceClassification:()=>Bs,CamembertForTokenClassification:()=>Rs,CamembertModel:()=>Es,CamembertPreTrainedModel:()=>Yr,CausalLMOutput:()=>Yn,CausalLMOutputWithPast:()=>J1,ChineseCLIPModel:()=>Al,ChineseCLIPPreTrainedModel:()=>$l,ClapAudioModelWithProjection:()=>Mb,ClapModel:()=>wb,ClapPreTrainedModel:()=>wc,ClapTextModelWithProjection:()=>yb,CodeGenForCausalLM:()=>Zr,CodeGenModel:()=>Xn,CodeGenPreTrainedModel:()=>Ma,CohereForCausalLM:()=>Ui,CohereModel:()=>Vi,CoherePreTrainedModel:()=>ka,ConvBertForMaskedLM:()=>Gt,ConvBertForQuestionAnswering:()=>Xs,ConvBertForSequenceClassification:()=>_r,ConvBertForTokenClassification:()=>xs,ConvBertModel:()=>dr,ConvBertPreTrainedModel:()=>Mt,ConvNextForImageClassification:()=>fM,ConvNextModel:()=>hM,ConvNextPreTrainedModel:()=>Dd,ConvNextV2ForImageClassification:()=>_M,ConvNextV2Model:()=>mM,ConvNextV2PreTrainedModel:()=>Ld,DPTForDepthEstimation:()=>Qy,DPTModel:()=>qy,DPTPreTrainedModel:()=>Id,DacDecoderModel:()=>l0,DacDecoderOutput:()=>a0,DacEncoderModel:()=>o0,DacEncoderOutput:()=>n0,DacModel:()=>i0,DacPreTrainedModel:()=>Ec,DebertaForMaskedLM:()=>tt,DebertaForQuestionAnswering:()=>Nt,DebertaForSequenceClassification:()=>it,DebertaForTokenClassification:()=>cr,DebertaModel:()=>Re,DebertaPreTrainedModel:()=>br,DebertaV2ForMaskedLM:()=>Cs,DebertaV2ForQuestionAnswering:()=>ks,DebertaV2ForSequenceClassification:()=>Ir,DebertaV2ForTokenClassification:()=>Ss,DebertaV2Model:()=>Ps,DebertaV2PreTrainedModel:()=>zr,DecisionTransformerModel:()=>jb,DecisionTransformerPreTrainedModel:()=>Nb,DeiTForImageClassification:()=>Pe,DeiTModel:()=>ye,DeiTPreTrainedModel:()=>ie,DepthAnythingForDepthEstimation:()=>Jy,DepthAnythingPreTrainedModel:()=>Xy,DepthProForDepthEstimation:()=>rM,DepthProPreTrainedModel:()=>tM,DetrForObjectDetection:()=>oc,DetrForSegmentation:()=>Co,DetrModel:()=>ic,DetrObjectDetectionOutput:()=>So,DetrPreTrainedModel:()=>Va,DetrSegmentationOutput:()=>lc,Dinov2ForImageClassification:()=>wM,Dinov2Model:()=>gM,Dinov2PreTrainedModel:()=>zd,Dinov2WithRegistersForImageClassification:()=>MM,Dinov2WithRegistersModel:()=>yM,Dinov2WithRegistersPreTrainedModel:()=>Bd,DistilBertForMaskedLM:()=>mn,DistilBertForQuestionAnswering:()=>fn,DistilBertForSequenceClassification:()=>pn,DistilBertForTokenClassification:()=>hn,DistilBertModel:()=>Ns,DistilBertPreTrainedModel:()=>os,DonutSwinModel:()=>pM,DonutSwinPreTrainedModel:()=>dM,EfficientNetForImageClassification:()=>Cb,EfficientNetModel:()=>Pb,EfficientNetPreTrainedModel:()=>qd,ElectraForMaskedLM:()=>Js,ElectraForQuestionAnswering:()=>is,ElectraForSequenceClassification:()=>Jr,ElectraForTokenClassification:()=>ut,ElectraModel:()=>Ts,ElectraPreTrainedModel:()=>Ur,EsmForMaskedLM:()=>gn,EsmForSequenceClassification:()=>wn,EsmForTokenClassification:()=>Wr,EsmModel:()=>_n,EsmPreTrainedModel:()=>$s,ExaoneForCausalLM:()=>mt,ExaoneModel:()=>Di,ExaonePreTrainedModel:()=>an,FalconForCausalLM:()=>gb,FalconModel:()=>_b,FalconPreTrainedModel:()=>Gd,FastViTForImageClassification:()=>Hl,FastViTModel:()=>Kl,FastViTPreTrainedModel:()=>bo,Florence2ForConditionalGeneration:()=>gi,Florence2PreTrainedModel:()=>Tl,GLPNForDepthEstimation:()=>uM,GLPNModel:()=>cM,GLPNPreTrainedModel:()=>Fd,GPT2LMHeadModel:()=>ga,GPT2Model:()=>Dl,GPT2PreTrainedModel:()=>xi,GPTBigCodeForCausalLM:()=>Ai,GPTBigCodeModel:()=>zl,GPTBigCodePreTrainedModel:()=>De,GPTJForCausalLM:()=>Qn,GPTJModel:()=>$i,GPTJPreTrainedModel:()=>ki,GPTNeoForCausalLM:()=>Ci,GPTNeoModel:()=>Pi,GPTNeoPreTrainedModel:()=>wa,GPTNeoXForCausalLM:()=>Si,GPTNeoXModel:()=>Ll,GPTNeoXPreTrainedModel:()=>ya,Gemma2ForCausalLM:()=>Hi,Gemma2Model:()=>Ki,Gemma2PreTrainedModel:()=>Aa,Gemma3ForCausalLM:()=>Qi,Gemma3Model:()=>qi,Gemma3PreTrainedModel:()=>Ia,GemmaForCausalLM:()=>Gi,GemmaModel:()=>Wi,GemmaPreTrainedModel:()=>$a,GlmForCausalLM:()=>wt,GlmModel:()=>Fi,GlmPreTrainedModel:()=>Ta,GraniteForCausalLM:()=>ji,GraniteModel:()=>Ni,GranitePreTrainedModel:()=>Sa,GroundingDinoForObjectDetection:()=>vM,GroundingDinoPreTrainedModel:()=>bM,GroupViTModel:()=>Gl,GroupViTPreTrainedModel:()=>Wl,HeliumForCausalLM:()=>xa,HeliumModel:()=>Oi,HeliumPreTrainedModel:()=>va,HieraForImageClassification:()=>ot,HieraModel:()=>Ze,HieraPreTrainedModel:()=>Be,HubertForCTC:()=>YM,HubertForSequenceClassification:()=>ZM,HubertModel:()=>JM,HubertPreTrainedModel:()=>z1,IJepaForImageClassification:()=>_o,IJepaModel:()=>mo,IJepaPreTrainedModel:()=>ja,Idefics3ForConditionalGeneration:()=>pa,Idefics3PreTrainedModel:()=>El,ImageMattingOutput:()=>mv,JAISLMHeadModel:()=>Ei,JAISModel:()=>Ti,JAISPreTrainedModel:()=>qn,JinaCLIPModel:()=>Il,JinaCLIPPreTrainedModel:()=>_a,JinaCLIPTextModel:()=>Ol,JinaCLIPVisionModel:()=>Fl,LiteWhisperForConditionalGeneration:()=>yl,LlamaForCausalLM:()=>Ii,LlamaModel:()=>ba,LlamaPreTrainedModel:()=>xn,LlavaForConditionalGeneration:()=>da,LlavaOnevisionForConditionalGeneration:()=>vl,LlavaPreTrainedModel:()=>bl,LongT5ForConditionalGeneration:()=>Xe,LongT5Model:()=>We,LongT5PreTrainedModel:()=>Se,M2M100ForConditionalGeneration:()=>IM,M2M100Model:()=>AM,M2M100PreTrainedModel:()=>jd,MBartForCausalLM:()=>$r,MBartForConditionalGeneration:()=>xr,MBartForSequenceClassification:()=>us,MBartModel:()=>kr,MBartPreTrainedModel:()=>Ht,MPNetForMaskedLM:()=>Gr,MPNetForQuestionAnswering:()=>Rr,MPNetForSequenceClassification:()=>Wn,MPNetForTokenClassification:()=>tn,MPNetModel:()=>Un,MPNetPreTrainedModel:()=>ls,MT5ForConditionalGeneration:()=>ft,MT5Model:()=>et,MT5PreTrainedModel:()=>He,MarianMTModel:()=>$M,MarianModel:()=>kM,MarianPreTrainedModel:()=>Nd,MaskFormerForInstanceSegmentation:()=>lM,MaskFormerModel:()=>oM,MaskFormerPreTrainedModel:()=>Od,MaskedLMOutput:()=>Er,Metric3DForDepthEstimation:()=>nM,Metric3DPreTrainedModel:()=>sM,Metric3Dv2ForDepthEstimation:()=>iM,Metric3Dv2PreTrainedModel:()=>aM,MgpstrForSceneTextRecognition:()=>Kb,MgpstrModelOutput:()=>Wb,MgpstrPreTrainedModel:()=>Gb,MimiDecoderModel:()=>s0,MimiDecoderOutput:()=>e0,MimiEncoderModel:()=>r0,MimiEncoderOutput:()=>Zb,MimiModel:()=>t0,MimiPreTrainedModel:()=>Tc,MistralForCausalLM:()=>hb,MistralModel:()=>pb,MistralPreTrainedModel:()=>Ud,MobileBertForMaskedLM:()=>Zs,MobileBertForQuestionAnswering:()=>Br,MobileBertForSequenceClassification:()=>en,MobileBertModel:()=>Sr,MobileBertPreTrainedModel:()=>js,MobileLLMForCausalLM:()=>Li,MobileLLMModel:()=>_t,MobileLLMPreTrainedModel:()=>Jn,MobileNetV1ForImageClassification:()=>kb,MobileNetV1ForSemanticSegmentation:()=>$b,MobileNetV1Model:()=>Sb,MobileNetV1PreTrainedModel:()=>Mc,MobileNetV2ForImageClassification:()=>Ib,MobileNetV2ForSemanticSegmentation:()=>Ob,MobileNetV2Model:()=>Ab,MobileNetV2PreTrainedModel:()=>bc,MobileNetV3ForImageClassification:()=>Db,MobileNetV3ForSemanticSegmentation:()=>Lb,MobileNetV3Model:()=>Fb,MobileNetV3PreTrainedModel:()=>vc,MobileNetV4ForImageClassification:()=>Bb,MobileNetV4ForSemanticSegmentation:()=>Rb,MobileNetV4Model:()=>zb,MobileNetV4PreTrainedModel:()=>xc,MobileViTForImageClassification:()=>Jl,MobileViTModel:()=>Xl,MobileViTPreTrainedModel:()=>vo,MobileViTV2ForImageClassification:()=>Zl,MobileViTV2Model:()=>Yl,MobileViTV2PreTrainedModel:()=>xo,ModelOutput:()=>fe,ModernBertForMaskedLM:()=>B,ModernBertForSequenceClassification:()=>ne,ModernBertForTokenClassification:()=>ue,ModernBertModel:()=>se,ModernBertPreTrainedModel:()=>D,Moondream1ForConditionalGeneration:()=>xl,MoonshineForConditionalGeneration:()=>Ml,MoonshineModel:()=>Sd,MoonshinePreTrainedModel:()=>mi,MptForCausalLM:()=>co,MptModel:()=>lo,MptPreTrainedModel:()=>Ba,MultiModalityCausalLM:()=>Ub,MultiModalityPreTrainedModel:()=>Vb,MusicgenForCausalLM:()=>j1,MusicgenForConditionalGeneration:()=>Xd,MusicgenModel:()=>N1,MusicgenPreTrainedModel:()=>Qd,NomicBertModel:()=>xe,NomicBertPreTrainedModel:()=>ve,OPTForCausalLM:()=>po,OPTModel:()=>uo,OPTPreTrainedModel:()=>Ra,Olmo2ForCausalLM:()=>Ca,Olmo2Model:()=>Ri,Olmo2PreTrainedModel:()=>Pa,OlmoForCausalLM:()=>Bi,OlmoModel:()=>zi,OlmoPreTrainedModel:()=>Ea,OpenELMForCausalLM:()=>Ji,OpenELMModel:()=>Xi,OpenELMPreTrainedModel:()=>Oa,OwlViTForObjectDetection:()=>tc,OwlViTModel:()=>ec,OwlViTPreTrainedModel:()=>To,Owlv2ForObjectDetection:()=>sc,Owlv2Model:()=>rc,Owlv2PreTrainedModel:()=>Eo,PaliGemmaForConditionalGeneration:()=>yi,PaliGemmaPreTrainedModel:()=>wi,PatchTSMixerForPrediction:()=>Xb,PatchTSMixerModel:()=>Qb,PatchTSMixerPreTrainedModel:()=>Yd,PatchTSTForPrediction:()=>qb,PatchTSTModel:()=>Hb,PatchTSTPreTrainedModel:()=>Jd,Phi3ForCausalLM:()=>ao,Phi3Model:()=>no,Phi3PreTrainedModel:()=>La,Phi3VForCausalLM:()=>sn,Phi3VPreTrainedModel:()=>Mi,PhiForCausalLM:()=>so,PhiModel:()=>ro,PhiPreTrainedModel:()=>Da,PreTrainedModel:()=>V,PretrainedMixin:()=>Ot,PvtForImageClassification:()=>Rl,PvtModel:()=>Bl,PvtPreTrainedModel:()=>yo,PyAnnoteForAudioFrameClassification:()=>BM,PyAnnoteModel:()=>zM,PyAnnotePreTrainedModel:()=>Vd,QuestionAnsweringModelOutput:()=>Or,Qwen2ForCausalLM:()=>Zi,Qwen2Model:()=>Yi,Qwen2PreTrainedModel:()=>Fa,Qwen2VLForConditionalGeneration:()=>to,Qwen2VLPreTrainedModel:()=>eo,RFDetrForObjectDetection:()=>u,RFDetrModel:()=>Io,RFDetrObjectDetectionOutput:()=>f,RFDetrPreTrainedModel:()=>Ao,RTDetrForObjectDetection:()=>uc,RTDetrModel:()=>cc,RTDetrObjectDetectionOutput:()=>Ua,RTDetrPreTrainedModel:()=>ko,RTDetrV2ForObjectDetection:()=>pc,RTDetrV2Model:()=>dc,RTDetrV2ObjectDetectionOutput:()=>hc,RTDetrV2PreTrainedModel:()=>$o,ResNetForImageClassification:()=>Nr,ResNetModel:()=>jt,ResNetPreTrainedModel:()=>gt,RoFormerForMaskedLM:()=>Ve,RoFormerForQuestionAnswering:()=>pt,RoFormerForSequenceClassification:()=>Qe,RoFormerForTokenClassification:()=>Je,RoFormerModel:()=>Fe,RoFormerPreTrainedModel:()=>Ne,RobertaForMaskedLM:()=>Ut,RobertaForQuestionAnswering:()=>or,RobertaForSequenceClassification:()=>sr,RobertaForTokenClassification:()=>Zt,RobertaModel:()=>wr,RobertaPreTrainedModel:()=>Yt,SamImageSegmentationOutput:()=>SM,SamModel:()=>CM,SamPreTrainedModel:()=>PM,SapiensForDepthEstimation:()=>Zy,SapiensForNormalEstimation:()=>eM,SapiensForSemanticSegmentation:()=>Yy,SapiensPreTrainedModel:()=>fc,SegformerForImageClassification:()=>vb,SegformerForSemanticSegmentation:()=>xb,SegformerModel:()=>R1,SegformerPreTrainedModel:()=>yc,Seq2SeqLMOutput:()=>X1,SequenceClassifierOutput:()=>xt,SiglipModel:()=>Cl,SiglipPreTrainedModel:()=>ma,SiglipTextModel:()=>Sl,SiglipVisionModel:()=>kl,SmolVLMForConditionalGeneration:()=>ha,SnacDecoderModel:()=>d0,SnacEncoderModel:()=>u0,SnacModel:()=>c0,SnacPreTrainedModel:()=>Pc,SpeechT5ForSpeechToText:()=>ob,SpeechT5ForTextToSpeech:()=>lb,SpeechT5HifiGan:()=>cb,SpeechT5Model:()=>B1,SpeechT5PreTrainedModel:()=>gc,SqueezeBertForMaskedLM:()=>vr,SqueezeBertForQuestionAnswering:()=>Gn,SqueezeBertForSequenceClassification:()=>rn,SqueezeBertModel:()=>gr,SqueezeBertPreTrainedModel:()=>cs,StableLmForCausalLM:()=>Eb,StableLmModel:()=>Tb,StableLmPreTrainedModel:()=>Hd,Starcoder2ForCausalLM:()=>mb,Starcoder2Model:()=>fb,Starcoder2PreTrainedModel:()=>Wd,StyleTextToSpeech2Model:()=>ib,StyleTextToSpeech2PreTrainedModel:()=>ab,Swin2SRForImageSuperResolution:()=>Hy,Swin2SRModel:()=>Ky,Swin2SRPreTrainedModel:()=>Ad,SwinForImageClassification:()=>Wy,SwinForSemanticSegmentation:()=>Gy,SwinModel:()=>Uy,SwinPreTrainedModel:()=>Us,T5ForConditionalGeneration:()=>pe,T5Model:()=>ce,T5PreTrainedModel:()=>re,TableTransformerForObjectDetection:()=>I,TableTransformerModel:()=>C,TableTransformerObjectDetectionOutput:()=>G,TableTransformerPreTrainedModel:()=>x,TokenClassifierOutput:()=>yr,TrOCRForCausalLM:()=>db,TrOCRPreTrainedModel:()=>ub,UltravoxModel:()=>Yb,UltravoxPreTrainedModel:()=>Jb,UniSpeechForCTC:()=>VM,UniSpeechForSequenceClassification:()=>UM,UniSpeechModel:()=>jM,UniSpeechPreTrainedModel:()=>mc,UniSpeechSatForAudioFrameClassification:()=>HM,UniSpeechSatForCTC:()=>GM,UniSpeechSatForSequenceClassification:()=>KM,UniSpeechSatModel:()=>WM,UniSpeechSatPreTrainedModel:()=>Oo,ViTForImageClassification:()=>fo,ViTMAEModel:()=>jl,ViTMAEPreTrainedModel:()=>Nl,ViTMSNForImageClassification:()=>Ul,ViTMSNModel:()=>Vl,ViTMSNPreTrainedModel:()=>Mo,ViTModel:()=>ho,ViTPreTrainedModel:()=>Na,VisionEncoderDecoderModel:()=>_i,VitMatteForImageMatting:()=>Ql,VitMattePreTrainedModel:()=>ql,VitPoseForPoseEstimation:()=>wo,VitPosePreTrainedModel:()=>go,VitsModel:()=>Kd,VitsModelOutput:()=>_v,VitsPreTrainedModel:()=>bb,Wav2Vec2BertForCTC:()=>QM,Wav2Vec2BertForSequenceClassification:()=>XM,Wav2Vec2BertModel:()=>qM,Wav2Vec2BertPreTrainedModel:()=>_c,Wav2Vec2ForAudioFrameClassification:()=>LM,Wav2Vec2ForCTC:()=>FM,Wav2Vec2ForSequenceClassification:()=>DM,Wav2Vec2Model:()=>OM,Wav2Vec2PreTrainedModel:()=>Tn,WavLMForAudioFrameClassification:()=>nb,WavLMForCTC:()=>tb,WavLMForSequenceClassification:()=>rb,WavLMForXVector:()=>sb,WavLMModel:()=>eb,WavLMPreTrainedModel:()=>Wa,WeSpeakerResNetModel:()=>NM,WeSpeakerResNetPreTrainedModel:()=>RM,WhisperForConditionalGeneration:()=>fi,WhisperModel:()=>wl,WhisperPreTrainedModel:()=>ua,XLMForQuestionAnswering:()=>pl,XLMForSequenceClassification:()=>dl,XLMForTokenClassification:()=>di,XLMModel:()=>yn,XLMPreTrainedModel:()=>pr,XLMRobertaForMaskedLM:()=>fl,XLMRobertaForQuestionAnswering:()=>pi,XLMRobertaForSequenceClassification:()=>Hn,XLMRobertaForTokenClassification:()=>ml,XLMRobertaModel:()=>hl,XLMRobertaPreTrainedModel:()=>Os,XLMWithLMHeadModel:()=>Mn,XVectorOutput:()=>fv,YolosForObjectDetection:()=>TM,YolosModel:()=>xM,YolosObjectDetectionOutput:()=>EM,YolosPreTrainedModel:()=>Rd});var s=t("./src/configs.js"),a=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),i=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),h=t("./src/utils/tensor.js"),g=t("./src/utils/image.js"),_=t("./src/utils/maths.js"),E=t("./src/generation/stopping_criteria.js"),A=t("./src/generation/logits_sampler.js"),M=t("./src/env.js"),y=t("./src/models/whisper/generation_whisper.js"),k=t("./src/models/whisper/common_whisper.js");const P={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},b=new Map,w=new Map,T=new Map;async function $(v,S,L){var Pr;const oe=((Pr=L.config)==null?void 0:Pr["transformers.js_config"])??{};let ge=L.device??oe.device;ge&&typeof ge!="string"&&(ge.hasOwnProperty(S)?ge=ge[S]:(console.warn(`device not specified for "${S}". Using the default device.`),ge=null));const me=ge??(M.apis.IS_NODE_ENV?"cpu":"wasm"),ke=(0,a.deviceToExecutionProviders)(me);let Le=L.dtype??oe.dtype;if(typeof Le!="string"&&(Le&&Le.hasOwnProperty(S)?Le=Le[S]:(Le=n.DEFAULT_DEVICE_DTYPE_MAPPING[me]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${S}". Using the default dtype (${Le}) for this device (${me}).`))),Le===n.DATA_TYPES.auto){let St=oe.dtype;typeof St!="string"&&(St=St[S]),St&&St!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(St)?Le=St:Le=n.DEFAULT_DEVICE_DTYPE_MAPPING[me]??n.DATA_TYPES.fp32}const Ke=Le;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Ke)){if(Ke===n.DATA_TYPES.fp16&&me==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${me}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Ke}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const Ye=oe.kv_cache_dtype?typeof oe.kv_cache_dtype=="string"?oe.kv_cache_dtype:oe.kv_cache_dtype[Ke]??"float32":void 0;if(Ye&&!["float32","float16"].includes(Ye))throw new Error(`Invalid kv_cache_dtype: ${Ye}. Should be one of: float32, float16`);const ct={dtype:Ke,kv_cache_dtype:Ye},bt=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Ke],nt=`${S}${bt}.onnx`,Ct=`${L.subfolder??""}/${nt}`,lt={...L.session_options};lt.executionProviders??(lt.executionProviders=ke);const Tt=oe.free_dimension_overrides;Tt?lt.freeDimensionOverrides??(lt.freeDimensionOverrides=Tt):me.startsWith("webnn")&&!lt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const dt=(0,l.getModelFile)(v,Ct,!0,L,M.apis.IS_NODE_ENV),Pt=L.use_external_data_format??oe.use_external_data_format;let Bt=[];if(Pt){let St;typeof Pt=="object"?Pt.hasOwnProperty(nt)?St=Pt[nt]:Pt.hasOwnProperty(S)?St=Pt[S]:St=!1:St=Pt;const Wt=+St;if(Wt>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Wt}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let lr=0;lr<Wt;++lr){const ur=`${nt}_data${lr===0?"":"_"+lr}`,es=`${L.subfolder??""}/${ur}`;Bt.push(new Promise(async(En,Cc)=>{const Fr=await(0,l.getModelFile)(v,es,!0,L,M.apis.IS_NODE_ENV);En(Fr instanceof Uint8Array?{path:ur,data:Fr}:ur)}))}}else lt.externalData!==void 0&&(Bt=lt.externalData.map(async St=>{if(typeof St.data=="string"){const Wt=await(0,l.getModelFile)(v,St.data,!0,L);return{...St,data:Wt}}return St}));if(Bt.length>0){const St=await Promise.all(Bt);M.apis.IS_NODE_ENV||(lt.externalData=St)}if(me==="webgpu"){const St=(0,s.getKeyValueShapes)(L.config,{prefix:"present"});if(Object.keys(St).length>0&&!(0,a.isONNXProxy)()){const Wt={};for(const lr in St)Wt[lr]="gpu-buffer";lt.preferredOutputLocation=Wt}}return{buffer_or_path:await dt,session_options:lt,session_config:ct}}async function z(v,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async oe=>{const{buffer_or_path:ge,session_options:me,session_config:ke}=await $(v,S[oe],L),Le=await(0,a.createInferenceSession)(ge,me,ke);return[oe,Le]})))}async function N(v,S,L){return Object.fromEntries(await Promise.all(Object.keys(S).map(async oe=>{const ge=await(0,l.getModelJSON)(v,S[oe],!1,L);return[oe,ge]})))}function Y(v,S){const L=Object.create(null),oe=[];for(const ke of v.inputNames){const Le=S[ke];if(!(Le instanceof h.Tensor)){oe.push(ke);continue}L[ke]=(0,a.isONNXProxy)()?Le.clone():Le}if(oe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${oe.join(", ")}.`);const ge=Object.keys(S).length,me=v.inputNames.length;if(ge>me){let ke=Object.keys(S).filter(Le=>!v.inputNames.includes(Le));console.warn(`WARNING: Too many inputs were provided (${ge} > ${me}). The following inputs will be ignored: "${ke.join(", ")}".`)}return L}async function J(v,S){const L=Y(v,S);try{const oe=Object.fromEntries(Object.entries(L).map(([me,ke])=>[me,ke.ort_tensor]));let ge=await v.run(oe);return ge=W(ge),ge}catch(oe){const ge=Object.fromEntries(Object.entries(L).map(([me,{type:ke,dims:Le,data:Ke}])=>[me,{type:ke,dims:Le,data:Ke}]));throw console.error(`An error occurred during model execution: "${oe}".`),console.error("Inputs given to model:",ge),oe}}function W(v){for(let S in v)(0,a.isONNXTensor)(v[S])?v[S]=new h.Tensor(v[S]):typeof v[S]=="object"&&W(v[S]);return v}function te(v){if(v instanceof h.Tensor)return v;if(v.length===0)throw Error("items must be non-empty");if(Array.isArray(v[0])){if(v.some(S=>S.length!==v[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new h.Tensor("int64",BigInt64Array.from(v.flat().map(S=>BigInt(S))),[v.length,v[0].length])}else return new h.Tensor("int64",BigInt64Array.from(v.map(S=>BigInt(S))),[1,v.length])}function H(v){return new h.Tensor("bool",[v],[1])}async function R(v,S){let{encoder_outputs:L,input_ids:oe,decoder_input_ids:ge,...me}=S;if(!L){const Le=(0,o.pick)(S,v.sessions.model.inputNames);L=(await q(v,Le)).last_hidden_state}return me.input_ids=ge,me.encoder_hidden_states=L,v.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(me.encoder_attention_mask=S.attention_mask),await le(v,me,!0)}async function q(v,S){const L=v.sessions.model,oe=(0,o.pick)(S,L.inputNames);if(L.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds){if(!S.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");oe.inputs_embeds=await v.encode_text({input_ids:S.input_ids})}if(L.inputNames.includes("token_type_ids")&&!oe.token_type_ids){if(!oe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");oe.token_type_ids=(0,h.zeros_like)(oe.input_ids)}if(L.inputNames.includes("pixel_mask")&&!oe.pixel_mask){if(!oe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const ge=oe.pixel_values.dims;oe.pixel_mask=(0,h.ones)([ge[0],ge[2],ge[3]])}return await J(L,oe)}async function ee(v,S){const L=await v.encode(S);return await v.decode(L)}async function le(v,S,L=!1){const oe=v.sessions[L?"decoder_model_merged":"model"],{past_key_values:ge,...me}=S;if(oe.inputNames.includes("use_cache_branch")&&(me.use_cache_branch=H(!!ge)),oe.inputNames.includes("position_ids")&&me.attention_mask&&!me.position_ids){const Le=["paligemma","gemma3_text","gemma3"].includes(v.config.model_type)?1:0;me.position_ids=_e(me,ge,Le)}v.addPastKeyValues(me,ge);const ke=(0,o.pick)(me,oe.inputNames);return await J(oe,ke)}function de({modality_token_id:v,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge}){const me=oe.tolist().map(Ye=>Ye.reduce((ct,bt,nt)=>(bt==v&&ct.push(nt),ct),[])),ke=me.reduce((Ye,ct)=>Ye+ct.length,0),Le=L.dims[0];if(ke!==Le)throw new Error(`Number of tokens and features do not match: tokens: ${ke}, features ${Le}`);let Ke=0;for(let Ye=0;Ye<me.length;++Ye){const ct=me[Ye],bt=S[Ye];for(let nt=0;nt<ct.length;++nt)bt[ct[nt]].data.set(L[Ke++].data)}return{inputs_embeds:S,attention_mask:ge}}function j({image_token_id:v,inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){return de({modality_token_id:v,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge})}function F({audio_token_id:v,inputs_embeds:S,audio_features:L,input_ids:oe,attention_mask:ge}){return de({modality_token_id:v,inputs_embeds:S,modality_features:L,input_ids:oe,attention_mask:ge})}async function K(v,{encode_function:S,merge_function:L,modality_input_name:oe,modality_output_name:ge,input_ids:me=null,attention_mask:ke=null,position_ids:Le=null,inputs_embeds:Ke=null,past_key_values:Ye=null,generation_config:ct=null,logits_processor:bt=null,...nt}){const Ct=nt[oe];if(!Ke){if(Ke=await v.encode_text({input_ids:me,...nt}),Ct&&me.dims[1]!==1){const Tt=await S({[oe]:Ct,...nt});({inputs_embeds:Ke,attention_mask:ke}=L({[ge]:Tt,inputs_embeds:Ke,input_ids:me,attention_mask:ke}))}else if(Ye&&Ct&&me.dims[1]===1){const Tt=me.dims[1],dt=Object.values(Ye)[0].dims.at(-2);ke=(0,h.cat)([(0,h.ones)([me.dims[0],dt]),ke.slice(null,[ke.dims[1]-Tt,ke.dims[1]])],1)}}if(!Le&&v.config.model_type==="qwen2_vl"){const{image_grid_thw:Tt,video_grid_thw:dt}=nt;[Le]=v.get_rope_index(me,Tt,dt,ke)}return await le(v,{inputs_embeds:Ke,past_key_values:Ye,attention_mask:ke,position_ids:Le,generation_config:ct,logits_processor:bt},!0)}async function ae(v,S){return await K(v,{...S,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:v.encode_audio.bind(v),merge_function:v._merge_input_ids_with_audio_features.bind(v)})}async function Z(v,S){return await K(v,{...S,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:v.encode_image.bind(v),merge_function:v._merge_input_ids_with_image_features.bind(v)})}function we(v,S=0){const[L,oe]=v.dims,ge=v.data,me=new BigInt64Array(ge.length);for(let ke=0;ke<L;++ke){const Le=ke*oe;let Ke=BigInt(S);for(let Ye=0;Ye<oe;++Ye){const ct=Le+Ye;ge[ct]===0n?me[ct]=BigInt(1):(me[ct]=Ke,Ke+=ge[ct])}}return{data:me,dims:v.dims}}function _e(v,S=null,L=0){const{input_ids:oe,inputs_embeds:ge,attention_mask:me}=v,{data:ke,dims:Le}=we(me,L);let Ke=new h.Tensor("int64",ke,Le);if(S){const Ye=-(oe??ge).dims.at(1);Ke=Ke.slice(null,[Ye,null])}return Ke}function Ae(v,S,L,oe){if(L.past_key_values){const ge=Object.values(L.past_key_values)[0].dims.at(-2),{input_ids:me,attention_mask:ke}=L;if(!(ke&&ke.dims[1]>me.dims[1])){if(ge<me.dims[1])L.input_ids=me.slice(null,[ge,null]);else if(v.config.image_token_index!=null&&me.data.some(Le=>Le==v.config.image_token_index)){const Le=v.config.num_image_tokens;if(!Le)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ke=me.dims[1]-(ge-Le);L.input_ids=me.slice(null,[-Ke,null]),L.attention_mask=(0,h.ones)([1,ge+Ke])}}}return L}function qe(v,S,L,oe){return L.past_key_values&&(S=S.map(ge=>[ge.at(-1)])),{...L,decoder_input_ids:te(S)}}function Me(v,...S){return v.config.is_encoder_decoder?qe(v,...S):Ae(v,...S)}function Q(v,S,L,oe){const ge=!!L.past_key_values;return oe.guidance_scale!==null&&oe.guidance_scale>1&&(ge?L.input_ids=(0,h.cat)([L.input_ids,L.input_ids],0):(L.input_ids=(0,h.cat)([L.input_ids,(0,h.full_like)(L.input_ids,BigInt(oe.pad_token_id))],0),L.attention_mask=(0,h.cat)([L.attention_mask,(0,h.full_like)(L.attention_mask,0n)],0))),(ge||!L.pixel_values)&&(L.pixel_values=(0,h.full)([0,0,3,384,384],1)),ge&&(L.images_seq_mask=new h.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),L.images_emb_mask=new h.Tensor("bool",new Array(0).fill(!1),[1,1,0])),L}class V extends i.Callable{constructor(L,oe,ge){super();X(this,"main_input_name","input_ids");X(this,"forward_params",["input_ids","attention_mask"]);this.config=L,this.sessions=oe,this.configs=ge;const me=T.get(this.constructor),ke=b.get(me);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,ke){case P.DecoderOnly:this.can_generate=!0,this._forward=le,this._prepare_inputs_for_generation=Ae;break;case P.Seq2Seq:case P.Vision2Seq:case P.Musicgen:this.can_generate=!0,this._forward=R,this._prepare_inputs_for_generation=qe;break;case P.EncoderDecoder:this._forward=R;break;case P.ImageTextToText:this.can_generate=!0,this._forward=Z,this._prepare_inputs_for_generation=Me;break;case P.AudioTextToText:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=Me;break;case P.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=Me;break;case P.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Q;break;case P.AutoEncoder:this._forward=ee;break;default:this._forward=q;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var oe;const L=[];for(const ge of Object.values(this.sessions))(oe=ge==null?void 0:ge.handler)!=null&&oe.dispose&&L.push(ge.handler.dispose());return await Promise.all(L)}static async from_pretrained(L,{progress_callback:oe=null,config:ge=null,cache_dir:me=null,local_files_only:ke=!1,revision:Le="main",model_file_name:Ke=null,subfolder:Ye="onnx",device:ct=null,dtype:bt=null,use_external_data_format:nt=null,session_options:Ct={}}={}){let lt={progress_callback:oe,config:ge,cache_dir:me,local_files_only:ke,revision:Le,model_file_name:Ke,subfolder:Ye,device:ct,dtype:bt,use_external_data_format:nt,session_options:Ct};const Tt=T.get(this),dt=b.get(Tt);ge=lt.config=await s.AutoConfig.from_pretrained(L,lt);let Pt;if(dt===P.DecoderOnly)Pt=await Promise.all([z(L,{model:lt.model_file_name??"model"},lt),N(L,{generation_config:"generation_config.json"},lt)]);else if(dt===P.Seq2Seq||dt===P.Vision2Seq)Pt=await Promise.all([z(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},lt),N(L,{generation_config:"generation_config.json"},lt)]);else if(dt===P.MaskGeneration)Pt=await Promise.all([z(L,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},lt)]);else if(dt===P.EncoderDecoder)Pt=await Promise.all([z(L,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},lt)]);else if(dt===P.ImageTextToText){const Bt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};ge.is_encoder_decoder&&(Bt.model="encoder_model"),Pt=await Promise.all([z(L,Bt,lt),N(L,{generation_config:"generation_config.json"},lt)])}else if(dt===P.AudioTextToText){const Bt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};Pt=await Promise.all([z(L,Bt,lt),N(L,{generation_config:"generation_config.json"},lt)])}else if(dt===P.Musicgen)Pt=await Promise.all([z(L,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},lt),N(L,{generation_config:"generation_config.json"},lt)]);else if(dt===P.MultiModality)Pt=await Promise.all([z(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},lt),N(L,{generation_config:"generation_config.json"},lt)]);else if(dt===P.Phi3V)Pt=await Promise.all([z(L,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},lt),N(L,{generation_config:"generation_config.json"},lt)]);else if(dt===P.AutoEncoder)Pt=await Promise.all([z(L,{encoder_model:"encoder_model",decoder_model:"decoder_model"},lt)]);else{if(dt!==P.EncoderOnly){const Bt=Tt??(ge==null?void 0:ge.model_type);Bt!=="custom"&&console.warn(`Model type for '${Bt}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}Pt=await Promise.all([z(L,{model:lt.model_file_name??"model"},lt)])}return new this(ge,...Pt)}async _call(L){return await this.forward(L)}async forward(L){return await this._forward(this,L)}get generation_config(){var L;return((L=this.configs)==null?void 0:L.generation_config)??null}_get_logits_warper(L){const oe=new p.LogitsProcessorList;return L.temperature!==null&&L.temperature!==1&&oe.push(new p.TemperatureLogitsWarper(L.temperature)),L.top_k!==null&&L.top_k!==0&&oe.push(new p.TopKLogitsWarper(L.top_k)),L.top_p!==null&&L.top_p<1&&oe.push(new p.TopPLogitsWarper(L.top_p)),oe}_get_logits_processor(L,oe,ge=null){const me=new p.LogitsProcessorList;if(L.repetition_penalty!==null&&L.repetition_penalty!==1&&me.push(new p.RepetitionPenaltyLogitsProcessor(L.repetition_penalty)),L.no_repeat_ngram_size!==null&&L.no_repeat_ngram_size>0&&me.push(new p.NoRepeatNGramLogitsProcessor(L.no_repeat_ngram_size)),L.bad_words_ids!==null&&me.push(new p.NoBadWordsLogitsProcessor(L.bad_words_ids,L.eos_token_id)),L.min_length!==null&&L.eos_token_id!==null&&L.min_length>0&&me.push(new p.MinLengthLogitsProcessor(L.min_length,L.eos_token_id)),L.min_new_tokens!==null&&L.eos_token_id!==null&&L.min_new_tokens>0&&me.push(new p.MinNewTokensLengthLogitsProcessor(oe,L.min_new_tokens,L.eos_token_id)),L.forced_bos_token_id!==null&&me.push(new p.ForcedBOSTokenLogitsProcessor(L.forced_bos_token_id)),L.forced_eos_token_id!==null&&me.push(new p.ForcedEOSTokenLogitsProcessor(L.max_length,L.forced_eos_token_id)),L.begin_suppress_tokens!==null){const ke=oe>1||L.forced_bos_token_id===null?oe:oe+1;me.push(new p.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,ke))}return L.guidance_scale!==null&&L.guidance_scale>1&&me.push(new p.ClassifierFreeGuidanceLogitsProcessor(L.guidance_scale)),ge!==null&&me.extend(ge),me}_prepare_generation_config(L,oe,ge=d.GenerationConfig){const me={...this.config};for(const Le of["decoder","generator","text_config"])Le in me&&Object.assign(me,me[Le]);const ke=new ge(me);return Object.assign(ke,this.generation_config??{}),L&&Object.assign(ke,L),oe&&Object.assign(ke,(0,o.pick)(oe,Object.getOwnPropertyNames(ke))),ke}_get_stopping_criteria(L,oe=null){const ge=new E.StoppingCriteriaList;return L.max_length!==null&&ge.push(new E.MaxLengthCriteria(L.max_length,this.config.max_position_embeddings??null)),L.eos_token_id!==null&&ge.push(new E.EosTokenCriteria(L.eos_token_id)),oe&&ge.extend(oe),ge}_validate_model_class(){if(!this.can_generate){const L=[tp,rp,ep,Zd],oe=T.get(this.constructor),ge=new Set,me=this.config.model_type;for(const Le of L){const Ke=Le.get(me);Ke&&ge.add(Ke[0])}let ke=`The current model class (${oe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw ge.size>0&&(ke+=` Please use the following class instead: ${[...ge].join(", ")}`),Error(ke)}}prepare_inputs_for_generation(...L){return this._prepare_inputs_for_generation(this,...L)}_update_model_kwargs_for_generation({generated_input_ids:L,outputs:oe,model_inputs:ge,is_encoder_decoder:me}){return ge.past_key_values=this.getPastKeyValues(oe,ge.past_key_values),ge.input_ids=new h.Tensor("int64",L.flat(),[L.length,1]),me||(ge.attention_mask=(0,h.cat)([ge.attention_mask,(0,h.ones)([ge.attention_mask.dims[0],1])],1)),ge.position_ids=null,ge}_prepare_model_inputs({inputs:L,bos_token_id:oe,model_kwargs:ge}){const me=(0,o.pick)(ge,this.forward_params),ke=this.main_input_name;if(ke in me){if(L)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else me[ke]=L;return{inputs_tensor:me[ke],model_inputs:me,model_input_name:ke}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:L,model_inputs:oe,model_input_name:ge,generation_config:me}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Le,pixel_values:Ke,attention_mask:Ye,...ct}=oe,bt=await this._prepare_inputs_embeds(oe);oe={...ct,...(0,o.pick)(bt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:ke}=await q(this,oe);if(me.guidance_scale!==null&&me.guidance_scale>1)ke=(0,h.cat)([ke,(0,h.full_like)(ke,0)],0),"attention_mask"in oe&&(oe.attention_mask=(0,h.cat)([oe.attention_mask,(0,h.zeros_like)(oe.attention_mask)],0));else if(oe.decoder_input_ids){const Le=te(oe.decoder_input_ids).dims[0];if(Le!==ke.dims[0]){if(ke.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${ke.dims[0]}) than the decoder inputs (${Le}).`);ke=(0,h.cat)(Array.from({length:Le},()=>ke),0)}}return oe.encoder_outputs=ke,oe}_prepare_decoder_input_ids_for_generation({batch_size:L,model_input_name:oe,model_kwargs:ge,decoder_start_token_id:me,bos_token_id:ke,generation_config:Le}){let{decoder_input_ids:Ke,...Ye}=ge;if(!(Ke instanceof h.Tensor)){if(Ke)Array.isArray(Ke[0])||(Ke=Array.from({length:L},()=>Ke));else if(me??(me=ke),this.config.model_type==="musicgen")Ke=Array.from({length:L*this.config.decoder.num_codebooks},()=>[me]);else if(Array.isArray(me)){if(me.length!==L)throw new Error(`\`decoder_start_token_id\` expcted to have length ${L} but got ${me.length}`);Ke=me}else Ke=Array.from({length:L},()=>[me]);Ke=te(Ke)}return ge.decoder_attention_mask=(0,h.ones_like)(Ke),{input_ids:Ke,model_inputs:Ye}}async generate({inputs:L=null,generation_config:oe=null,logits_processor:ge=null,stopping_criteria:me=null,streamer:ke=null,...Le}){this._validate_model_class(),oe=this._prepare_generation_config(oe,Le);let{inputs_tensor:Ke,model_inputs:Ye,model_input_name:ct}=this._prepare_model_inputs({inputs:L,model_kwargs:Le});const bt=this.config.is_encoder_decoder;bt&&("encoder_outputs"in Ye||(Ye=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ke,model_inputs:Ye,model_input_name:ct,generation_config:oe})));let nt;bt?{input_ids:nt,model_inputs:Ye}=this._prepare_decoder_input_ids_for_generation({batch_size:Ye[ct].dims.at(0),model_input_name:ct,model_kwargs:Ye,decoder_start_token_id:oe.decoder_start_token_id,bos_token_id:oe.bos_token_id,generation_config:oe}):nt=Ye[ct];let Ct=nt.dims.at(-1);oe.max_new_tokens!==null&&(oe.max_length=Ct+oe.max_new_tokens);const lt=this._get_logits_processor(oe,Ct,ge),Tt=this._get_stopping_criteria(oe,me),dt=Ye[ct].dims.at(0),Pt=A.LogitsSampler.getSampler(oe),Bt=new Array(dt).fill(0),er=nt.tolist();ke&&ke.put(er);let Pr,St={};for(;;){if(Ye=this.prepare_inputs_for_generation(er,Ye,oe),Pr=await this.forward(Ye),oe.output_attentions&&oe.return_dict_in_generate){const Fr=this.getAttentions(Pr);for(const Ws in Fr)Ws in St||(St[Ws]=[]),St[Ws].push(Fr[Ws])}const ur=Pr.logits.slice(null,-1,null),es=lt(er,ur),En=[];for(let Fr=0;Fr<es.dims.at(0);++Fr){const Ws=es[Fr],np=await Pt(Ws);for(const[Sc,kc]of np){const $c=BigInt(Sc);Bt[Fr]+=kc,er[Fr].push($c),En.push([$c]);break}}if(ke&&ke.put(En),Tt(er).every(Fr=>Fr))break;Ye=this._update_model_kwargs_for_generation({generated_input_ids:En,outputs:Pr,model_inputs:Ye,is_encoder_decoder:bt})}ke&&ke.end();const Wt=this.getPastKeyValues(Pr,Ye.past_key_values,!0),lr=new h.Tensor("int64",er.flat(),[er.length,er[0].length]);if(oe.return_dict_in_generate)return{sequences:lr,past_key_values:Wt,...St};for(const ur of Object.values(Pr))ur.location==="gpu-buffer"&&ur.dispose();return lr}getPastKeyValues(L,oe,ge=!1){const me=Object.create(null);for(const ke in L)if(ke.startsWith("present")){const Le=ke.replace("present","past_key_values"),Ke=ke.includes("encoder");if(Ke&&oe?me[Le]=oe[Le]:me[Le]=L[ke],oe&&(!Ke||ge)){const Ye=oe[Le];Ye.location==="gpu-buffer"&&Ye.dispose()}}return me}getAttentions(L){const oe={};for(const ge of["cross_attentions","encoder_attentions","decoder_attentions"])for(const me in L)me.startsWith(ge)&&(ge in oe||(oe[ge]=[]),oe[ge].push(L[me]));return oe}addPastKeyValues(L,oe){var ge,me,ke;if(oe)Object.assign(L,oe);else{const Le=this.sessions.decoder_model_merged??this.sessions.model,Ke=((ge=Le==null?void 0:Le.config)==null?void 0:ge.kv_cache_dtype)??"float32",Ye=Ke==="float16"?new h.DataTypeMap.float16:[],ct=((ke=(me=L[this.main_input_name]??L.attention_mask)==null?void 0:me.dims)==null?void 0:ke[0])??1,bt=(0,s.getKeyValueShapes)(this.config,{batch_size:ct});for(const nt in bt)L[nt]=new h.Tensor(Ke,Ye,bt[nt])}}async encode_image({pixel_values:L}){const oe=(await J(this.sessions.vision_encoder,{pixel_values:L})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${oe.dims[1]}).`),this.config.num_image_tokens=oe.dims[1]),oe}async encode_text({input_ids:L}){return(await J(this.sessions.embed_tokens,{input_ids:L})).inputs_embeds}async encode_audio({audio_values:L}){return(await J(this.sessions.audio_encoder,{audio_values:L})).audio_features}}class fe{}class Ce extends fe{constructor({last_hidden_state:S,hidden_states:L=null,attentions:oe=null}){super(),this.last_hidden_state=S,this.hidden_states=L,this.attentions=oe}}class Ee extends V{}class Oe extends Ee{}class Ie extends Ee{async _call(S){return new Er(await super._call(S))}}class ze extends Ee{async _call(S){return new xt(await super._call(S))}}class je extends Ee{async _call(S){return new yr(await super._call(S))}}class Ge extends Ee{async _call(S){return new Or(await super._call(S))}}class D extends V{}class se extends D{}class B extends D{async _call(S){return new Er(await super._call(S))}}class ne extends D{async _call(S){return new xt(await super._call(S))}}class ue extends D{async _call(S){return new yr(await super._call(S))}}class ve extends V{}class xe extends ve{}class Ne extends V{}class Fe extends Ne{}class Ve extends Ne{async _call(S){return new Er(await super._call(S))}}class Qe extends Ne{async _call(S){return new xt(await super._call(S))}}class Je extends Ne{async _call(S){return new yr(await super._call(S))}}class pt extends Ne{async _call(S){return new Or(await super._call(S))}}class Mt extends V{}class dr extends Mt{}class Gt extends Mt{async _call(S){return new Er(await super._call(S))}}class _r extends Mt{async _call(S){return new xt(await super._call(S))}}class xs extends Mt{async _call(S){return new yr(await super._call(S))}}class Xs extends Mt{async _call(S){return new Or(await super._call(S))}}class Ur extends V{}class Ts extends Ur{}class Js extends Ur{async _call(S){return new Er(await super._call(S))}}class Jr extends Ur{async _call(S){return new xt(await super._call(S))}}class ut extends Ur{async _call(S){return new yr(await super._call(S))}}class is extends Ur{async _call(S){return new Or(await super._call(S))}}class Yr extends V{}class Es extends Yr{}class zs extends Yr{async _call(S){return new Er(await super._call(S))}}class Bs extends Yr{async _call(S){return new xt(await super._call(S))}}class Rs extends Yr{async _call(S){return new yr(await super._call(S))}}class Ys extends Yr{async _call(S){return new Or(await super._call(S))}}class br extends V{}class Re extends br{}class tt extends br{async _call(S){return new Er(await super._call(S))}}class it extends br{async _call(S){return new xt(await super._call(S))}}class cr extends br{async _call(S){return new yr(await super._call(S))}}class Nt extends br{async _call(S){return new Or(await super._call(S))}}class zr extends V{}class Ps extends zr{}class Cs extends zr{async _call(S){return new Er(await super._call(S))}}class Ir extends zr{async _call(S){return new xt(await super._call(S))}}class Ss extends zr{async _call(S){return new yr(await super._call(S))}}class ks extends zr{async _call(S){return new Or(await super._call(S))}}class os extends V{}class Ns extends os{}class pn extends os{async _call(S){return new xt(await super._call(S))}}class hn extends os{async _call(S){return new yr(await super._call(S))}}class fn extends os{async _call(S){return new Or(await super._call(S))}}class mn extends os{async _call(S){return new Er(await super._call(S))}}class $s extends V{}class _n extends $s{}class gn extends $s{async _call(S){return new Er(await super._call(S))}}class wn extends $s{async _call(S){return new xt(await super._call(S))}}class Wr extends $s{async _call(S){return new yr(await super._call(S))}}class js extends V{}class Sr extends js{}class Zs extends js{async _call(S){return new Er(await super._call(S))}}class en extends js{async _call(S){return new xt(await super._call(S))}}class Br extends js{async _call(S){return new Or(await super._call(S))}}class ls extends V{}class Un extends ls{}class Gr extends ls{async _call(S){return new Er(await super._call(S))}}class Wn extends ls{async _call(S){return new xt(await super._call(S))}}class tn extends ls{async _call(S){return new yr(await super._call(S))}}class Rr extends ls{async _call(S){return new Or(await super._call(S))}}class cs extends V{}class gr extends cs{}class vr extends cs{async _call(S){return new Er(await super._call(S))}}class rn extends cs{async _call(S){return new xt(await super._call(S))}}class Gn extends cs{async _call(S){return new Or(await super._call(S))}}class Vs extends V{}class Kn extends Vs{}class he extends Vs{async _call(S){return new xt(await super._call(S))}}class O extends Vs{async _call(S){return new Or(await super._call(S))}}class U extends Vs{async _call(S){return new Er(await super._call(S))}}class re extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class ce extends re{}class pe extends re{}class Se extends V{}class We extends Se{}class Xe extends Se{}class He extends V{}class et extends He{}class ft extends He{}class kt extends V{}class It extends kt{}class Qt extends kt{}class Lt extends kt{async _call(S){return new xt(await super._call(S))}}class Ht extends V{}class kr extends Ht{}class xr extends Ht{}class us extends Ht{async _call(S){return new xt(await super._call(S))}}class $r extends Ht{}class As extends V{}class Xt extends As{}class ir extends As{}class Tr extends V{}class ds extends Tr{}class Is extends Tr{}class Yt extends V{}class wr extends Yt{}class Ut extends Yt{async _call(S){return new Er(await super._call(S))}}class sr extends Yt{async _call(S){return new xt(await super._call(S))}}class Zt extends Yt{async _call(S){return new yr(await super._call(S))}}class or extends Yt{async _call(S){return new Or(await super._call(S))}}class pr extends V{}class yn extends pr{}class Mn extends pr{async _call(S){return new Er(await super._call(S))}}class dl extends pr{async _call(S){return new xt(await super._call(S))}}class di extends pr{async _call(S){return new yr(await super._call(S))}}class pl extends pr{async _call(S){return new Or(await super._call(S))}}class Os extends V{}class hl extends Os{}class fl extends Os{async _call(S){return new Er(await super._call(S))}}class Hn extends Os{async _call(S){return new xt(await super._call(S))}}class ml extends Os{async _call(S){return new yr(await super._call(S))}}class pi extends Os{async _call(S){return new Or(await super._call(S))}}class hi extends V{}class _l extends hi{}class gl extends hi{}class ua extends V{constructor(){super(...arguments);X(this,"requires_attention_mask",!1);X(this,"main_input_name","input_features");X(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class wl extends ua{}class fi extends ua{_prepare_generation_config(S,L){return super._prepare_generation_config(S,L,y.WhisperGenerationConfig)}_retrieve_init_tokens(S){const L=[S.decoder_start_token_id];let oe=S.language;const ge=S.task;if(S.is_multilingual){oe||(console.warn("No language specified - defaulting to English (en)."),oe="en");const ke=`<|${(0,k.whisper_language_to_code)(oe)}|>`;L.push(S.lang_to_id[ke]),L.push(S.task_to_id[ge??"transcribe"])}else if(oe||ge)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!S.return_timestamps&&S.no_timestamps_token_id&&L.at(-1)!==S.no_timestamps_token_id?L.push(S.no_timestamps_token_id):S.return_timestamps&&L.at(-1)===S.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),L.pop()),L.filter(me=>me!=null)}async generate({inputs:S=null,generation_config:L=null,logits_processor:oe=null,stopping_criteria:ge=null,...me}){L=this._prepare_generation_config(L,me);const ke=me.decoder_input_ids??this._retrieve_init_tokens(L);if(L.return_timestamps&&(oe??(oe=new p.LogitsProcessorList),oe.push(new p.WhisperTimeStampLogitsProcessor(L,ke))),L.begin_suppress_tokens&&(oe??(oe=new p.LogitsProcessorList),oe.push(new p.SuppressTokensAtBeginLogitsProcessor(L.begin_suppress_tokens,ke.length))),L.return_token_timestamps){if(!L.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");L.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),L.output_attentions=!0,L.return_dict_in_generate=!0}const Le=await super.generate({inputs:S,generation_config:L,logits_processor:oe,decoder_input_ids:ke,...me});return L.return_token_timestamps&&(Le.token_timestamps=this._extract_token_timestamps(Le,L.alignment_heads,L.num_frames)),Le}_extract_token_timestamps(S,L,oe=null,ge=.02){if(!S.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");oe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let me=this.config.median_filter_width;me===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),me=7);const ke=S.cross_attentions,Le=Array.from({length:this.config.decoder_layers},(Tt,dt)=>(0,h.cat)(ke.map(Pt=>Pt[dt]),2)),Ke=(0,h.stack)(L.map(([Tt,dt])=>{if(Tt>=Le.length)throw new Error(`Layer index ${Tt} is out of bounds for cross attentions (length ${Le.length}).`);return oe?Le[Tt].slice(null,dt,null,[0,oe]):Le[Tt].slice(null,dt)})).transpose(1,0,2,3),[Ye,ct]=(0,h.std_mean)(Ke,-2,0,!0),bt=Ke.clone();for(let Tt=0;Tt<bt.dims[0];++Tt){const dt=bt[Tt];for(let Pt=0;Pt<dt.dims[0];++Pt){const Bt=dt[Pt],er=Ye[Tt][Pt][0].data,Pr=ct[Tt][Pt][0].data;for(let St=0;St<Bt.dims[0];++St){let Wt=Bt[St].data;for(let lr=0;lr<Wt.length;++lr)Wt[lr]=(Wt[lr]-Pr[lr])/er[lr];Wt.set((0,_.medianFilter)(Wt,me))}}}const nt=[(0,h.mean)(bt,1)],Ct=S.sequences.dims,lt=new h.Tensor("float32",new Float32Array(Ct[0]*Ct[1]),Ct);for(let Tt=0;Tt<Ct[0];++Tt){const dt=nt[Tt].neg().squeeze_(0),[Pt,Bt]=(0,_.dynamic_time_warping)(dt.tolist()),er=Array.from({length:Pt.length-1},(Wt,lr)=>Pt[lr+1]-Pt[lr]),Pr=(0,o.mergeArrays)([1],er).map(Wt=>!!Wt),St=[];for(let Wt=0;Wt<Pr.length;++Wt)Pr[Wt]&&St.push(Bt[Wt]*ge);lt[Tt].data.set(St,1)}return lt}}class yl extends fi{}class mi extends V{constructor(){super(...arguments);X(this,"requires_attention_mask",!1);X(this,"main_input_name","input_values");X(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Sd extends mi{}class Ml extends mi{}class _i extends V{constructor(){super(...arguments);X(this,"main_input_name","pixel_values");X(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class bl extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class da extends bl{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){const me=this.config.image_token_index,Le=oe.tolist().map(nt=>nt.findIndex(Ct=>Ct==me)),Ke=Le.every(nt=>nt===-1),Ye=Le.every(nt=>nt!==-1);if(!Ke&&!Ye)throw new Error("Every input should contain either 0 or 1 image token.");if(Ke)return{inputs_embeds:S,attention_mask:ge};const ct=[],bt=[];for(let nt=0;nt<Le.length;++nt){const Ct=Le[nt],lt=S[nt],Tt=L[nt],dt=ge[nt];ct.push((0,h.cat)([lt.slice([0,Ct]),Tt,lt.slice([Ct+1,lt.dims[0]])],0)),bt.push((0,h.cat)([dt.slice([0,Ct]),(0,h.ones)([Tt.dims[0]]),dt.slice([Ct+1,dt.dims[0]])],0))}return{inputs_embeds:(0,h.stack)(ct,0),attention_mask:(0,h.stack)(bt,0)}}}class vl extends da{}class xl extends da{}class Tl extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);X(this,"main_input_name","inputs_embeds")}}class gi extends Tl{_merge_input_ids_with_image_features({inputs_embeds:S,image_features:L,input_ids:oe,attention_mask:ge}){return{inputs_embeds:(0,h.cat)([L,S],1),attention_mask:(0,h.cat)([(0,h.ones)(L.dims.slice(0,2)),ge],1)}}async _prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:oe,attention_mask:ge}){if(!S&&!L)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let me,ke;return S&&(me=await this.encode_text({input_ids:S})),L&&(ke=await this.encode_image({pixel_values:L})),me&&ke?{inputs_embeds:oe,attention_mask:ge}=this._merge_input_ids_with_image_features({inputs_embeds:me,image_features:ke,input_ids:S,attention_mask:ge}):oe=me||ke,{inputs_embeds:oe,attention_mask:ge}}async forward({input_ids:S,pixel_values:L,attention_mask:oe,decoder_input_ids:ge,decoder_attention_mask:me,encoder_outputs:ke,past_key_values:Le,inputs_embeds:Ke,decoder_inputs_embeds:Ye}){if(Ke||({inputs_embeds:Ke,attention_mask:oe}=await this._prepare_inputs_embeds({input_ids:S,pixel_values:L,inputs_embeds:Ke,attention_mask:oe})),!ke){let{last_hidden_state:nt}=await q(this,{inputs_embeds:Ke,attention_mask:oe});ke=nt}if(!Ye){if(!ge)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Ye=await this.encode_text({input_ids:ge})}return await le(this,{inputs_embeds:Ye,attention_mask:me,encoder_attention_mask:oe,encoder_hidden_states:ke,past_key_values:Le},!0)}}class wi extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class yi extends wi{_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return j({image_token_id:this.config.image_token_index,...S,image_features:oe})}}class El extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class pa extends El{async encode_image({pixel_values:S,pixel_attention_mask:L}){return(await J(this.sessions.vision_encoder,{pixel_values:S,pixel_attention_mask:L})).image_features}_merge_input_ids_with_image_features(S){const L=S.image_features.dims.at(-1),oe=S.image_features.view(-1,L);return j({image_token_id:this.config.image_token_id,...S,image_features:oe})}}class ha extends pa{}class Mi extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class sn extends Mi{async forward({input_ids:S=null,attention_mask:L=null,pixel_values:oe=null,image_sizes:ge=null,position_ids:me=null,inputs_embeds:ke=null,past_key_values:Le=null,generation_config:Ke=null,logits_processor:Ye=null,...ct}){if(!ke){let nt;if(oe&&S.dims[1]!==1){if(!ge)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:nt}=await J(this.sessions.vision_encoder,{pixel_values:oe,image_sizes:ge}))}else{const Ct=this.config.normalized_config.hidden_size;nt=new h.Tensor("float32",[],[0,Ct])}({inputs_embeds:ke}=await J(this.sessions.prepare_inputs_embeds,{input_ids:S,image_features:nt}))}return await le(this,{inputs_embeds:ke,past_key_values:Le,attention_mask:L,position_ids:me,generation_config:Ke,logits_processor:Ye},!1)}}class nn extends V{}class bi extends nn{}class kd extends nn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Pl extends nn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class $d extends nn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class fa extends nn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class ma extends V{}class Cl extends ma{}class Sl extends ma{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class kl extends nn{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class $l extends V{}class Al extends $l{}class _a extends V{}class Il extends _a{async forward(S){const L=!S.input_ids,oe=!S.pixel_values;if(L&&oe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(L&&(S.input_ids=(0,h.ones)([S.pixel_values.dims[0],1])),oe){const{image_size:Ye}=this.config.vision_config;S.pixel_values=(0,h.full)([0,3,Ye,Ye],0)}const{text_embeddings:ge,image_embeddings:me,l2norm_text_embeddings:ke,l2norm_image_embeddings:Le}=await super.forward(S),Ke={};return L||(Ke.text_embeddings=ge,Ke.l2norm_text_embeddings=ke),oe||(Ke.image_embeddings=me,Ke.l2norm_image_embeddings=Le),Ke}}class Ol extends _a{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Fl extends _a{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"vision_model"})}}class bn extends V{}class vn extends bn{}class vi extends bn{}class xi extends V{}class Dl extends xi{}class ga extends xi{}class qn extends V{}class Ti extends qn{}class Ei extends qn{}class wa extends V{}class Pi extends wa{}class Ci extends wa{}class ya extends V{}class Ll extends ya{}class Si extends ya{}class ki extends V{}class $i extends ki{}class Qn extends ki{}class De extends V{}class zl extends De{}class Ai extends De{}class Ma extends V{}class Xn extends Ma{}class Zr extends Ma{}class xn extends V{}class ba extends xn{}class Ii extends xn{}class va extends V{}class Oi extends va{}class xa extends va{}class Ta extends V{}class Fi extends Ta{}class wt extends Ta{}class an extends V{}class Di extends an{}class mt extends an{}class Jn extends V{}class _t extends Jn{}class Li extends Jn{}class Ea extends V{}class zi extends Ea{}class Bi extends Ea{}class Pa extends V{}class Ri extends Pa{}class Ca extends Pa{}class Sa extends V{}class Ni extends Sa{}class ji extends Sa{}class ka extends V{}class Vi extends ka{}class Ui extends ka{}class $a extends V{}class Wi extends $a{}class Gi extends $a{}class Aa extends V{}class Ki extends Aa{}class Hi extends Aa{}class Ia extends V{}class qi extends Ia{}class Qi extends Ia{}class Oa extends V{}class Xi extends Oa{}class Ji extends Oa{}class Fa extends V{}class Yi extends Fa{}class Zi extends Fa{}class eo extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class to extends eo{get_rope_index(S,L,oe,ge){const{vision_config:me,image_token_id:ke,video_token_id:Le,vision_start_token_id:Ke}=this.config,Ye=me.spatial_merge_size??2,ct=[];if(L||oe){let bt=S.tolist();ge||(ge=(0,h.ones_like)(S));const nt=ge.tolist(),Ct=Array.from({length:3},Bt=>Array.from({length:S.dims[0]},er=>Array.from({length:S.dims[1]},Pr=>1))),lt=L?L.tolist():[],Tt=oe?oe.tolist():[];let dt=0,Pt=0;for(let Bt=0;Bt<bt.length;++Bt){const er=bt[Bt].filter((Jt,hr)=>nt[Bt][hr]==1),St=er.reduce((Jt,hr,Pn)=>(hr==Ke&&Jt.push(Pn),Jt),[]).map(Jt=>er[Jt+1]),Wt=St.filter(Jt=>Jt==ke).length,lr=St.filter(Jt=>Jt==Le).length;let ur=[],es=0,En=Wt,Cc=lr;for(let Jt=0;Jt<St.length;++Jt){const hr=er.findIndex((ea,Fs)=>Fs>es&&ea==ke),Pn=er.findIndex((ea,Fs)=>Fs>es&&ea==Le),Zn=En>0&&hr!==-1?hr:er.length+1,Ka=Cc>0&&Pn!==-1?Pn:er.length+1;let Ac,ap,ip,op;Zn<Ka?([ap,ip,op]=lt[dt],++dt,--En,Ac=Zn):([ap,ip,op]=Tt[Pt],++Pt,--Cc,Ac=Ka);const[Y1,lp,Ic]=[Number(ap),Math.floor(Number(ip)/Ye),Math.floor(Number(op)/Ye)],cp=Ac-es,gv=ur.length>0?(0,_.max)(ur.at(-1))[0]+1:0;ur.push(Array.from({length:3*cp},(ea,Fs)=>gv+Fs%cp));const up=cp+gv,Oc=Y1*lp*Ic,Z1=Array.from({length:Oc},(ea,Fs)=>up+Math.floor(Fs/(lp*Ic))),eE=Array.from({length:Oc},(ea,Fs)=>up+Math.floor(Fs/Ic)%lp),tE=Array.from({length:Oc},(ea,Fs)=>up+Fs%Ic);ur.push([Z1,eE,tE].flat()),es=Ac+Oc}if(es<er.length){const Jt=ur.length>0?(0,_.max)(ur.at(-1))[0]+1:0,hr=er.length-es;ur.push(Array.from({length:3*hr},(Pn,Zn)=>Jt+Zn%hr))}const Fr=ur.reduce((Jt,hr)=>Jt+hr.length,0),Ws=new Array(Fr);let np=0;for(let Jt=0;Jt<3;++Jt)for(let hr=0;hr<ur.length;++hr){const Pn=ur[hr],Zn=Pn.length/3;for(let Ka=Jt*Zn;Ka<(Jt+1)*Zn;++Ka)Ws[np++]=Pn[Ka]}let Sc=0;const kc=nt[Bt];for(let Jt=0;Jt<kc.length;++Jt)if(kc[Jt]==1){for(let hr=0;hr<3;++hr)Ct[hr][Bt][Jt]=Ws[hr*Fr/3+Sc];++Sc}const $c=(0,_.max)(Ws)[0];ct.push($c+1-bt[Bt].length)}return[new h.Tensor("int64",Ct.flat(1/0),[3,S.dims[0],S.dims[1]]),new h.Tensor("int64",ct,[ct.length,1])]}else if(ge){const{data:bt,dims:nt}=we(ge),Ct=BigInt64Array.from({length:3*bt.length},(Tt,dt)=>bt[dt%bt.length]),lt=Array.from({length:nt[0]},(Tt,dt)=>(0,_.max)(bt.subarray(nt[1]*dt,nt[1]*(dt+1)))[0]+1n+BigInt(nt[1]));return[new h.Tensor("int64",Ct,[3,...nt]),new h.Tensor("int64",lt,[lt.length,1])]}else{const[bt,nt]=S.dims,Ct=BigInt64Array.from({length:3*bt*nt},(lt,Tt)=>BigInt(Math.floor(Tt%nt/bt)));return[new h.Tensor("int64",Ct,[3,...S.dims]),(0,h.zeros)([bt,1])]}}async encode_image({pixel_values:S,image_grid_thw:L}){return(await J(this.sessions.vision_encoder,{pixel_values:S,grid_thw:L})).image_features}_merge_input_ids_with_image_features(S){return j({image_token_id:this.config.image_token_id,...S})}prepare_inputs_for_generation(S,L,oe){if(L.attention_mask&&!L.position_ids)if(!L.past_key_values)[L.position_ids,L.rope_deltas]=this.get_rope_index(L.input_ids,L.image_grid_thw,L.video_grid_thw,L.attention_mask);else{L.pixel_values=null;const ge=BigInt(Object.values(L.past_key_values)[0].dims.at(-2)),me=L.rope_deltas.map(ke=>ge+ke);L.position_ids=(0,h.stack)([me,me,me],0)}return L}}class Da extends V{}class ro extends Da{}class so extends Da{}class La extends V{}class no extends La{}class ao extends La{}class za extends V{}class io extends za{}class oo extends za{}class Ba extends V{}class lo extends Ba{}class co extends Ba{}class Ra extends V{}class uo extends Ra{}class po extends Ra{}class Na extends V{}class ho extends Na{}class fo extends Na{async _call(S){return new xt(await super._call(S))}}class ja extends V{}class mo extends ja{}class _o extends ja{async _call(S){return new xt(await super._call(S))}}class go extends V{}class wo extends go{}class yo extends V{}class Bl extends yo{}class Rl extends yo{async _call(S){return new xt(await super._call(S))}}class Nl extends V{}class jl extends Nl{}class Mo extends V{}class Vl extends Mo{}class Ul extends Mo{async _call(S){return new xt(await super._call(S))}}class Wl extends V{}class Gl extends Wl{}class bo extends V{}class Kl extends bo{}class Hl extends bo{async _call(S){return new xt(await super._call(S))}}class ql extends V{}class Ql extends ql{async _call(S){return new mv(await super._call(S))}}class vo extends V{}class Xl extends vo{}class Jl extends vo{async _call(S){return new xt(await super._call(S))}}class xo extends V{}class Yl extends xo{}class Zl extends xo{async _call(S){return new xt(await super._call(S))}}class To extends V{}class ec extends To{}class tc extends To{}class Eo extends V{}class rc extends Eo{}class sc extends Eo{}class Po extends V{}class nc extends Po{}class ac extends Po{async _call(S){return new xt(await super._call(S))}}class Va extends V{}class ic extends Va{}class oc extends Va{async _call(S){return new So(await super._call(S))}}class Co extends Va{async _call(S){return new lc(await super._call(S))}}class So extends fe{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class lc extends fe{constructor({logits:S,pred_boxes:L,pred_masks:oe}){super(),this.logits=S,this.pred_boxes=L,this.pred_masks=oe}}class ko extends V{}class cc extends ko{}class uc extends ko{async _call(S){return new Ua(await super._call(S))}}class Ua extends fe{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class $o extends V{}class dc extends $o{}class pc extends $o{async _call(S){return new hc(await super._call(S))}}class hc extends Ua{}class Ao extends V{}class Io extends Ao{}class u extends Ao{async _call(S){return new f(await super._call(S))}}class f extends Ua{}class x extends V{}class C extends x{}class I extends x{async _call(S){return new G(await super._call(S))}}class G extends So{}class ie extends V{}class ye extends ie{}class Pe extends ie{async _call(S){return new xt(await super._call(S))}}class Be extends V{}class Ze extends Be{}class ot extends Be{async _call(S){return new xt(await super._call(S))}}class gt extends V{}class jt extends gt{}class Nr extends gt{async _call(S){return new xt(await super._call(S))}}class Us extends V{}class Uy extends Us{}class Wy extends Us{async _call(S){return new xt(await super._call(S))}}class Gy extends Us{}class Ad extends V{}class Ky extends Ad{}class Hy extends Ad{}class Id extends V{}class qy extends Id{}class Qy extends Id{}class Xy extends V{}class Jy extends Xy{}class fc extends V{}class Yy extends fc{}class Zy extends fc{}class eM extends fc{}class tM extends V{}class rM extends tM{}class sM extends V{}class nM extends sM{}class aM extends V{}class iM extends aM{}class Od extends V{}class oM extends Od{}class lM extends Od{}class Fd extends V{}class cM extends Fd{}class uM extends Fd{}class dM extends V{}class pM extends dM{}class Dd extends V{}class hM extends Dd{}class fM extends Dd{async _call(S){return new xt(await super._call(S))}}class Ld extends V{}class mM extends Ld{}class _M extends Ld{async _call(S){return new xt(await super._call(S))}}class zd extends V{}class gM extends zd{}class wM extends zd{async _call(S){return new xt(await super._call(S))}}class Bd extends V{}class yM extends Bd{}class MM extends Bd{async _call(S){return new xt(await super._call(S))}}class bM extends V{}class vM extends bM{}class Rd extends V{}class xM extends Rd{}class TM extends Rd{async _call(S){return new EM(await super._call(S))}}class EM extends fe{constructor({logits:S,pred_boxes:L}){super(),this.logits=S,this.pred_boxes=L}}class PM extends V{}class CM extends PM{async get_image_embeddings({pixel_values:S}){return await q(this,{pixel_values:S})}async forward(S){if((!S.image_embeddings||!S.image_positional_embeddings)&&(S={...S,...await this.get_image_embeddings(S)}),!S.input_labels&&S.input_points){const oe=S.input_points.dims.slice(0,-1),ge=oe.reduce((me,ke)=>me*ke,1);S.input_labels=new h.Tensor("int64",new BigInt64Array(ge).fill(1n),oe)}const L={image_embeddings:S.image_embeddings,image_positional_embeddings:S.image_positional_embeddings};return S.input_points&&(L.input_points=S.input_points),S.input_labels&&(L.input_labels=S.input_labels),S.input_boxes&&(L.input_boxes=S.input_boxes),await J(this.sessions.prompt_encoder_mask_decoder,L)}async _call(S){return new SM(await super._call(S))}}class SM extends fe{constructor({iou_scores:S,pred_masks:L}){super(),this.iou_scores=S,this.pred_masks=L}}class Nd extends V{}class kM extends Nd{}class $M extends Nd{}class jd extends V{}class AM extends jd{}class IM extends jd{}class Tn extends V{}class OM extends Tn{}class FM extends Tn{async _call(S){return new Yn(await super._call(S))}}class DM extends Tn{async _call(S){return new xt(await super._call(S))}}class LM extends Tn{async _call(S){return new yr(await super._call(S))}}class Vd extends V{}class zM extends Vd{}class BM extends Vd{async _call(S){return new yr(await super._call(S))}}class RM extends V{}class NM extends RM{}class mc extends V{}class jM extends mc{}class VM extends mc{async _call(S){return new Yn(await super._call(S))}}class UM extends mc{async _call(S){return new xt(await super._call(S))}}class Oo extends V{}class WM extends Oo{}class GM extends Oo{async _call(S){return new Yn(await super._call(S))}}class KM extends Oo{async _call(S){return new xt(await super._call(S))}}class HM extends Oo{async _call(S){return new yr(await super._call(S))}}class _c extends V{}class qM extends _c{}class QM extends _c{async _call(S){return new Yn(await super._call(S))}}class XM extends _c{async _call(S){return new xt(await super._call(S))}}class z1 extends V{}class JM extends Tn{}class YM extends Tn{async _call(S){return new Yn(await super._call(S))}}class ZM extends Tn{async _call(S){return new xt(await super._call(S))}}class Wa extends V{}class eb extends Wa{}class tb extends Wa{async _call(S){return new Yn(await super._call(S))}}class rb extends Wa{async _call(S){return new xt(await super._call(S))}}class sb extends Wa{async _call(S){return new fv(await super._call(S))}}class nb extends Wa{async _call(S){return new yr(await super._call(S))}}class ab extends V{}class ib extends ab{}class gc extends V{}class B1 extends gc{}class ob extends gc{}class lb extends gc{async generate_speech(S,L,{threshold:oe=.5,minlenratio:ge=0,maxlenratio:me=20,vocoder:ke=null}={}){const Le={input_ids:S},{encoder_outputs:Ke,encoder_attention_mask:Ye}=await q(this,Le),ct=Ke.dims[1]/this.config.reduction_factor,bt=Math.floor(ct*me),nt=Math.floor(ct*ge),Ct=this.config.num_mel_bins;let lt=[],Tt=null,dt=null,Pt=0;for(;;){++Pt;const Pr=H(!!dt);let St;dt?St=dt.output_sequence_out:St=new h.Tensor("float32",new Float32Array(Ct),[1,1,Ct]);let Wt={use_cache_branch:Pr,output_sequence:St,encoder_attention_mask:Ye,speaker_embeddings:L,encoder_hidden_states:Ke};this.addPastKeyValues(Wt,Tt),dt=await J(this.sessions.decoder_model_merged,Wt),Tt=this.getPastKeyValues(dt,Tt);const{prob:lr,spectrum:ur}=dt;if(lt.push(ur),Pt>=nt&&(Array.from(lr.data).filter(es=>es>=oe).length>0||Pt>=bt))break}const Bt=(0,h.cat)(lt),{waveform:er}=await J(ke.sessions.model,{spectrogram:Bt});return{spectrogram:Bt,waveform:er}}}class cb extends V{constructor(){super(...arguments);X(this,"main_input_name","spectrogram")}}class ub extends V{}class db extends ub{}class Ud extends V{}class pb extends Ud{}class hb extends Ud{}class Wd extends V{}class fb extends Wd{}class mb extends Wd{}class Gd extends V{}class _b extends Gd{}class gb extends Gd{}class wc extends V{}class wb extends wc{}class yb extends wc{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"text_model"})}}class Mb extends wc{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"audio_model"})}}class bb extends V{}class Kd extends bb{async _call(S){return new _v(await super._call(S))}}class yc extends V{}class R1 extends yc{}class vb extends yc{}class xb extends yc{}class Hd extends V{}class Tb extends Hd{}class Eb extends Hd{}class qd extends V{}class Pb extends qd{}class Cb extends qd{async _call(S){return new xt(await super._call(S))}}class Qd extends V{}class N1 extends Qd{}class j1 extends Qd{}class Xd extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(L){const[oe,ge]=L.dims,me=this.config.decoder.num_codebooks,ke=ge-me;let Le=0;for(let ct=0;ct<L.size;++ct){if(L.data[ct]===this.config.decoder.pad_token_id)continue;const bt=ct%ge,nt=Math.floor(ct/ge)%me,Ct=bt-nt;Ct>0&&Ct<=ke&&(L.data[Le++]=L.data[ct])}const Ke=Math.floor(oe/me),Ye=Le/(Ke*me);return new h.Tensor(L.type,L.data.slice(0,Le),[Ke,me,Ye])}prepare_inputs_for_generation(L,oe,ge){let me=structuredClone(L);for(let Le=0;Le<me.length;++Le)for(let Ke=0;Ke<me[Le].length;++Ke)Le%this.config.decoder.num_codebooks>=Ke&&(me[Le][Ke]=BigInt(this.config.decoder.pad_token_id));return ge.guidance_scale!==null&&ge.guidance_scale>1&&(me=me.concat(me)),super.prepare_inputs_for_generation(me,oe,ge)}async generate(L){const oe=await super.generate(L),ge=this._apply_and_filter_by_delay_pattern_mask(oe).unsqueeze_(0),{audio_values:me}=await J(this.sessions.encodec_decode,{audio_codes:ge});return me}}class Mc extends V{}class Sb extends Mc{}class kb extends Mc{async _call(S){return new xt(await super._call(S))}}class $b extends Mc{}class bc extends V{}class Ab extends bc{}class Ib extends bc{async _call(S){return new xt(await super._call(S))}}class Ob extends bc{}class vc extends V{}class Fb extends vc{}class Db extends vc{async _call(S){return new xt(await super._call(S))}}class Lb extends vc{}class xc extends V{}class zb extends xc{}class Bb extends xc{async _call(S){return new xt(await super._call(S))}}class Rb extends xc{}class Nb extends V{}class jb extends Nb{}class Vb extends V{}class Ub extends Vb{constructor(...L){super(...L);X(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(L){const oe=this._generation_mode??"text";let ge;if(oe==="text"||!L.past_key_values){const Ye=this.sessions.prepare_inputs_embeds,ct=(0,o.pick)(L,Ye.inputNames);ge=await J(Ye,ct)}else{const Ye=this.sessions.gen_img_embeds,ct=(0,o.pick)({image_ids:L.input_ids},Ye.inputNames);ge=await J(Ye,ct)}const me={...L,...ge},ke=await le(this,me),Le=this.sessions[oe==="text"?"lm_head":"gen_head"];if(!Le)throw new Error(`Unable to find "${Le}" generation head`);const Ke=await J(Le,(0,o.pick)(ke,Le.inputNames));return{...ge,...ke,...Ke}}async generate(L){return this._generation_mode="text",super.generate(L)}async generate_images(L){this._generation_mode="image";const oe=(L.inputs??L[this.main_input_name]).dims[1],me=(await super.generate(L)).slice(null,[oe,null]),ke=this.sessions.image_decode,{decoded_image:Le}=await J(ke,{generated_tokens:me}),Ke=Le.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Ye=[];for(const ct of Ke){const bt=g.RawImage.fromTensor(ct);Ye.push(bt)}return Ye}}class Wb extends fe{constructor({char_logits:S,bpe_logits:L,wp_logits:oe}){super(),this.char_logits=S,this.bpe_logits=L,this.wp_logits=oe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Gb extends V{}class Kb extends Gb{async _call(S){return new Wb(await super._call(S))}}class Jd extends V{}class Hb extends Jd{}class qb extends Jd{}class Yd extends V{}class Qb extends Yd{}class Xb extends Yd{}class Jb extends V{constructor(){super(...arguments);X(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class Yb extends Jb{_merge_input_ids_with_audio_features(S){const L=S.audio_features.dims.at(-1),oe=S.audio_features.view(-1,L);return F({audio_token_id:this.config.ignore_index,...S,audio_features:oe})}}class Tc extends V{constructor(){super(...arguments);X(this,"main_input_name","input_values");X(this,"forward_params",["input_values"])}}class Zb extends fe{constructor({audio_codes:S}){super(),this.audio_codes=S}}class e0 extends fe{constructor({audio_values:S}){super(),this.audio_values=S}}class t0 extends Tc{async encode(S){return new Zb(await J(this.sessions.encoder_model,S))}async decode(S){return new e0(await J(this.sessions.decoder_model,S))}}class r0 extends Tc{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class s0 extends Tc{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class Ec extends V{constructor(){super(...arguments);X(this,"main_input_name","input_values");X(this,"forward_params",["input_values"])}}class n0 extends fe{constructor({audio_codes:S}){super(),this.audio_codes=S}}class a0 extends fe{constructor({audio_values:S}){super(),this.audio_values=S}}class i0 extends Ec{async encode(S){return new n0(await J(this.sessions.encoder_model,S))}async decode(S){return new a0(await J(this.sessions.decoder_model,S))}}class o0 extends Ec{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class l0 extends Ec{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class Pc extends V{constructor(){super(...arguments);X(this,"main_input_name","input_values");X(this,"forward_params",["input_values"])}}class c0 extends Pc{async encode(S){return await J(this.sessions.encoder_model,S)}async decode(S){return await J(this.sessions.decoder_model,S)}}class u0 extends Pc{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"encoder_model"})}}class d0 extends Pc{static async from_pretrained(S,L={}){return super.from_pretrained(S,{...L,model_file_name:L.model_file_name??"decoder_model"})}}class Ot{static async from_pretrained(S,{progress_callback:L=null,config:oe=null,cache_dir:ge=null,local_files_only:me=!1,revision:ke="main",model_file_name:Le=null,subfolder:Ke="onnx",device:Ye=null,dtype:ct=null,use_external_data_format:bt=null,session_options:nt={}}={}){const Ct={progress_callback:L,config:oe,cache_dir:ge,local_files_only:me,revision:ke,model_file_name:Le,subfolder:Ke,device:Ye,dtype:ct,use_external_data_format:bt,session_options:nt};if(Ct.config=await s.AutoConfig.from_pretrained(S,Ct),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const lt=Ct.config.model_type;for(const Tt of this.MODEL_CLASS_MAPPINGS){let dt=Tt.get(lt);if(!dt){for(const Pt of Tt.values())if(Pt[0]===lt){dt=Pt;break}if(!dt)continue}return await dt[1].from_pretrained(S,Ct)}if(this.BASE_IF_FAIL)return z0.has(lt)||console.warn(`Unknown model class "${lt}", attempting to construct from base class.`),await V.from_pretrained(S,Ct);throw Error(`Unsupported model type: ${lt}`)}}X(Ot,"MODEL_CLASS_MAPPINGS",null),X(Ot,"BASE_IF_FAIL",!1);const V1=new Map([["bert",["BertModel",Oe]],["modernbert",["ModernBertModel",se]],["nomic_bert",["NomicBertModel",xe]],["roformer",["RoFormerModel",Fe]],["electra",["ElectraModel",Ts]],["esm",["EsmModel",_n]],["convbert",["ConvBertModel",dr]],["camembert",["CamembertModel",Es]],["deberta",["DebertaModel",Re]],["deberta-v2",["DebertaV2Model",Ps]],["mpnet",["MPNetModel",Un]],["albert",["AlbertModel",Kn]],["distilbert",["DistilBertModel",Ns]],["roberta",["RobertaModel",wr]],["xlm",["XLMModel",yn]],["xlm-roberta",["XLMRobertaModel",hl]],["clap",["ClapModel",wb]],["clip",["CLIPModel",bi]],["clipseg",["CLIPSegModel",vn]],["chinese_clip",["ChineseCLIPModel",Al]],["siglip",["SiglipModel",Cl]],["jina_clip",["JinaCLIPModel",Il]],["mobilebert",["MobileBertModel",Sr]],["squeezebert",["SqueezeBertModel",gr]],["wav2vec2",["Wav2Vec2Model",OM]],["wav2vec2-bert",["Wav2Vec2BertModel",qM]],["unispeech",["UniSpeechModel",jM]],["unispeech-sat",["UniSpeechSatModel",WM]],["hubert",["HubertModel",JM]],["wavlm",["WavLMModel",eb]],["audio-spectrogram-transformer",["ASTModel",_l]],["vits",["VitsModel",Kd]],["pyannote",["PyAnnoteModel",zM]],["wespeaker-resnet",["WeSpeakerResNetModel",NM]],["detr",["DetrModel",ic]],["rt_detr",["RTDetrModel",cc]],["rt_detr_v2",["RTDetrV2Model",dc]],["rf_detr",["RFDetrModel",Io]],["table-transformer",["TableTransformerModel",C]],["vit",["ViTModel",ho]],["ijepa",["IJepaModel",mo]],["pvt",["PvtModel",Bl]],["vit_msn",["ViTMSNModel",Vl]],["vit_mae",["ViTMAEModel",jl]],["groupvit",["GroupViTModel",Gl]],["fastvit",["FastViTModel",Kl]],["mobilevit",["MobileViTModel",Xl]],["mobilevitv2",["MobileViTV2Model",Yl]],["owlvit",["OwlViTModel",ec]],["owlv2",["Owlv2Model",rc]],["beit",["BeitModel",nc]],["deit",["DeiTModel",ye]],["hiera",["HieraModel",Ze]],["convnext",["ConvNextModel",hM]],["convnextv2",["ConvNextV2Model",mM]],["dinov2",["Dinov2Model",gM]],["dinov2_with_registers",["Dinov2WithRegistersModel",yM]],["resnet",["ResNetModel",jt]],["swin",["SwinModel",Uy]],["swin2sr",["Swin2SRModel",Ky]],["donut-swin",["DonutSwinModel",pM]],["yolos",["YolosModel",xM]],["dpt",["DPTModel",qy]],["glpn",["GLPNModel",cM]],["hifigan",["SpeechT5HifiGan",cb]],["efficientnet",["EfficientNetModel",Pb]],["decision_transformer",["DecisionTransformerModel",jb]],["patchtst",["PatchTSTForPrediction",Hb]],["patchtsmixer",["PatchTSMixerForPrediction",Qb]],["mobilenet_v1",["MobileNetV1Model",Sb]],["mobilenet_v2",["MobileNetV2Model",Ab]],["mobilenet_v3",["MobileNetV3Model",Fb]],["mobilenet_v4",["MobileNetV4Model",zb]],["maskformer",["MaskFormerModel",oM]],["mgp-str",["MgpstrForSceneTextRecognition",Kb]],["style_text_to_speech_2",["StyleTextToSpeech2Model",ib]]]),U1=new Map([["t5",["T5Model",ce]],["longt5",["LongT5Model",We]],["mt5",["MT5Model",et]],["bart",["BartModel",It]],["mbart",["MBartModel",kr]],["marian",["MarianModel",kM]],["whisper",["WhisperModel",wl]],["m2m_100",["M2M100Model",AM]],["blenderbot",["BlenderbotModel",Xt]],["blenderbot-small",["BlenderbotSmallModel",ds]]]),W1=new Map([["mimi",["MimiModel",t0]],["dac",["DacModel",i0]],["snac",["SnacModel",c0]]]),G1=new Map([["bloom",["BloomModel",io]],["jais",["JAISModel",Ti]],["gpt2",["GPT2Model",Dl]],["gptj",["GPTJModel",$i]],["gpt_bigcode",["GPTBigCodeModel",zl]],["gpt_neo",["GPTNeoModel",Pi]],["gpt_neox",["GPTNeoXModel",Ll]],["codegen",["CodeGenModel",Xn]],["llama",["LlamaModel",ba]],["exaone",["ExaoneModel",Di]],["olmo",["OlmoModel",zi]],["olmo2",["Olmo2Model",Ri]],["mobilellm",["MobileLLMModel",_t]],["granite",["GraniteModel",Ni]],["cohere",["CohereModel",Vi]],["gemma",["GemmaModel",Wi]],["gemma2",["Gemma2Model",Ki]],["gemma3_text",["Gemma3Model",qi]],["helium",["HeliumModel",Oi]],["glm",["GlmModel",Fi]],["openelm",["OpenELMModel",Xi]],["qwen2",["Qwen2Model",Yi]],["phi",["PhiModel",ro]],["phi3",["Phi3Model",no]],["mpt",["MptModel",lo]],["opt",["OPTModel",uo]],["mistral",["MistralModel",pb]],["starcoder2",["Starcoder2Model",fb]],["falcon",["FalconModel",_b]],["stablelm",["StableLmModel",Tb]]]),Zd=new Map([["speecht5",["SpeechT5ForSpeechToText",ob]],["whisper",["WhisperForConditionalGeneration",fi]],["lite-whisper",["LiteWhisperForConditionalGeneration",yl]],["moonshine",["MoonshineForConditionalGeneration",Ml]]]),p0=new Map([["speecht5",["SpeechT5ForTextToSpeech",lb]]]),h0=new Map([["vits",["VitsModel",Kd]],["musicgen",["MusicgenForConditionalGeneration",Xd]]]),f0=new Map([["bert",["BertForSequenceClassification",ze]],["modernbert",["ModernBertForSequenceClassification",ne]],["roformer",["RoFormerForSequenceClassification",Qe]],["electra",["ElectraForSequenceClassification",Jr]],["esm",["EsmForSequenceClassification",wn]],["convbert",["ConvBertForSequenceClassification",_r]],["camembert",["CamembertForSequenceClassification",Bs]],["deberta",["DebertaForSequenceClassification",it]],["deberta-v2",["DebertaV2ForSequenceClassification",Ir]],["mpnet",["MPNetForSequenceClassification",Wn]],["albert",["AlbertForSequenceClassification",he]],["distilbert",["DistilBertForSequenceClassification",pn]],["roberta",["RobertaForSequenceClassification",sr]],["xlm",["XLMForSequenceClassification",dl]],["xlm-roberta",["XLMRobertaForSequenceClassification",Hn]],["bart",["BartForSequenceClassification",Lt]],["mbart",["MBartForSequenceClassification",us]],["mobilebert",["MobileBertForSequenceClassification",en]],["squeezebert",["SqueezeBertForSequenceClassification",rn]]]),m0=new Map([["bert",["BertForTokenClassification",je]],["modernbert",["ModernBertForTokenClassification",ue]],["roformer",["RoFormerForTokenClassification",Je]],["electra",["ElectraForTokenClassification",ut]],["esm",["EsmForTokenClassification",Wr]],["convbert",["ConvBertForTokenClassification",xs]],["camembert",["CamembertForTokenClassification",Rs]],["deberta",["DebertaForTokenClassification",cr]],["deberta-v2",["DebertaV2ForTokenClassification",Ss]],["mpnet",["MPNetForTokenClassification",tn]],["distilbert",["DistilBertForTokenClassification",hn]],["roberta",["RobertaForTokenClassification",Zt]],["xlm",["XLMForTokenClassification",di]],["xlm-roberta",["XLMRobertaForTokenClassification",ml]]]),ep=new Map([["t5",["T5ForConditionalGeneration",pe]],["longt5",["LongT5ForConditionalGeneration",Xe]],["mt5",["MT5ForConditionalGeneration",ft]],["bart",["BartForConditionalGeneration",Qt]],["mbart",["MBartForConditionalGeneration",xr]],["marian",["MarianMTModel",$M]],["m2m_100",["M2M100ForConditionalGeneration",IM]],["blenderbot",["BlenderbotForConditionalGeneration",ir]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Is]]]),tp=new Map([["bloom",["BloomForCausalLM",oo]],["gpt2",["GPT2LMHeadModel",ga]],["jais",["JAISLMHeadModel",Ei]],["gptj",["GPTJForCausalLM",Qn]],["gpt_bigcode",["GPTBigCodeForCausalLM",Ai]],["gpt_neo",["GPTNeoForCausalLM",Ci]],["gpt_neox",["GPTNeoXForCausalLM",Si]],["codegen",["CodeGenForCausalLM",Zr]],["llama",["LlamaForCausalLM",Ii]],["exaone",["ExaoneForCausalLM",mt]],["olmo",["OlmoForCausalLM",Bi]],["olmo2",["Olmo2ForCausalLM",Ca]],["mobilellm",["MobileLLMForCausalLM",Li]],["granite",["GraniteForCausalLM",ji]],["cohere",["CohereForCausalLM",Ui]],["gemma",["GemmaForCausalLM",Gi]],["gemma2",["Gemma2ForCausalLM",Hi]],["gemma3_text",["Gemma3ForCausalLM",Qi]],["helium",["HeliumForCausalLM",xa]],["glm",["GlmForCausalLM",wt]],["openelm",["OpenELMForCausalLM",Ji]],["qwen2",["Qwen2ForCausalLM",Zi]],["phi",["PhiForCausalLM",so]],["phi3",["Phi3ForCausalLM",ao]],["mpt",["MptForCausalLM",co]],["opt",["OPTForCausalLM",po]],["mbart",["MBartForCausalLM",$r]],["mistral",["MistralForCausalLM",hb]],["starcoder2",["Starcoder2ForCausalLM",mb]],["falcon",["FalconForCausalLM",gb]],["trocr",["TrOCRForCausalLM",db]],["stablelm",["StableLmForCausalLM",Eb]],["phi3_v",["Phi3VForCausalLM",sn]]]),K1=new Map([["multi_modality",["MultiModalityCausalLM",Ub]]]),_0=new Map([["bert",["BertForMaskedLM",Ie]],["modernbert",["ModernBertForMaskedLM",B]],["roformer",["RoFormerForMaskedLM",Ve]],["electra",["ElectraForMaskedLM",Js]],["esm",["EsmForMaskedLM",gn]],["convbert",["ConvBertForMaskedLM",Gt]],["camembert",["CamembertForMaskedLM",zs]],["deberta",["DebertaForMaskedLM",tt]],["deberta-v2",["DebertaV2ForMaskedLM",Cs]],["mpnet",["MPNetForMaskedLM",Gr]],["albert",["AlbertForMaskedLM",U]],["distilbert",["DistilBertForMaskedLM",mn]],["roberta",["RobertaForMaskedLM",Ut]],["xlm",["XLMWithLMHeadModel",Mn]],["xlm-roberta",["XLMRobertaForMaskedLM",fl]],["mobilebert",["MobileBertForMaskedLM",Zs]],["squeezebert",["SqueezeBertForMaskedLM",vr]]]),g0=new Map([["bert",["BertForQuestionAnswering",Ge]],["roformer",["RoFormerForQuestionAnswering",pt]],["electra",["ElectraForQuestionAnswering",is]],["convbert",["ConvBertForQuestionAnswering",Xs]],["camembert",["CamembertForQuestionAnswering",Ys]],["deberta",["DebertaForQuestionAnswering",Nt]],["deberta-v2",["DebertaV2ForQuestionAnswering",ks]],["mpnet",["MPNetForQuestionAnswering",Rr]],["albert",["AlbertForQuestionAnswering",O]],["distilbert",["DistilBertForQuestionAnswering",fn]],["roberta",["RobertaForQuestionAnswering",or]],["xlm",["XLMForQuestionAnswering",pl]],["xlm-roberta",["XLMRobertaForQuestionAnswering",pi]],["mobilebert",["MobileBertForQuestionAnswering",Br]],["squeezebert",["SqueezeBertForQuestionAnswering",Gn]]]),rp=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",_i]],["idefics3",["Idefics3ForConditionalGeneration",pa]],["smolvlm",["SmolVLMForConditionalGeneration",ha]]]),w0=new Map([["llava",["LlavaForConditionalGeneration",da]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",vl]],["moondream1",["Moondream1ForConditionalGeneration",xl]],["florence2",["Florence2ForConditionalGeneration",gi]],["qwen2-vl",["Qwen2VLForConditionalGeneration",to]],["idefics3",["Idefics3ForConditionalGeneration",pa]],["smolvlm",["SmolVLMForConditionalGeneration",ha]],["paligemma",["PaliGemmaForConditionalGeneration",yi]]]),y0=new Map([["ultravox",["UltravoxModel",Yb]]]),H1=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",_i]]]),M0=new Map([["vit",["ViTForImageClassification",fo]],["ijepa",["IJepaForImageClassification",_o]],["pvt",["PvtForImageClassification",Rl]],["vit_msn",["ViTMSNForImageClassification",Ul]],["fastvit",["FastViTForImageClassification",Hl]],["mobilevit",["MobileViTForImageClassification",Jl]],["mobilevitv2",["MobileViTV2ForImageClassification",Zl]],["beit",["BeitForImageClassification",ac]],["deit",["DeiTForImageClassification",Pe]],["hiera",["HieraForImageClassification",ot]],["convnext",["ConvNextForImageClassification",fM]],["convnextv2",["ConvNextV2ForImageClassification",_M]],["dinov2",["Dinov2ForImageClassification",wM]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",MM]],["resnet",["ResNetForImageClassification",Nr]],["swin",["SwinForImageClassification",Wy]],["segformer",["SegformerForImageClassification",vb]],["efficientnet",["EfficientNetForImageClassification",Cb]],["mobilenet_v1",["MobileNetV1ForImageClassification",kb]],["mobilenet_v2",["MobileNetV2ForImageClassification",Ib]],["mobilenet_v3",["MobileNetV3ForImageClassification",Db]],["mobilenet_v4",["MobileNetV4ForImageClassification",Bb]]]),b0=new Map([["detr",["DetrForObjectDetection",oc]],["rt_detr",["RTDetrForObjectDetection",uc]],["rt_detr_v2",["RTDetrV2ForObjectDetection",pc]],["rf_detr",["RFDetrForObjectDetection",u]],["table-transformer",["TableTransformerForObjectDetection",I]],["yolos",["YolosForObjectDetection",TM]]]),v0=new Map([["owlvit",["OwlViTForObjectDetection",tc]],["owlv2",["Owlv2ForObjectDetection",sc]],["grounding-dino",["GroundingDinoForObjectDetection",vM]]]),Ga=new Map([["detr",["DetrForSegmentation",Co]],["clipseg",["CLIPSegForImageSegmentation",vi]]]),x0=new Map([["segformer",["SegformerForSemanticSegmentation",xb]],["sapiens",["SapiensForSemanticSegmentation",Yy]],["swin",["SwinForSemanticSegmentation",Gy]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",$b]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",Ob]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",Lb]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",Rb]]]),T0=new Map([["detr",["DetrForSegmentation",Co]],["maskformer",["MaskFormerForInstanceSegmentation",lM]]]),E0=new Map([["sam",["SamModel",CM]]]),P0=new Map([["wav2vec2",["Wav2Vec2ForCTC",FM]],["wav2vec2-bert",["Wav2Vec2BertForCTC",QM]],["unispeech",["UniSpeechForCTC",VM]],["unispeech-sat",["UniSpeechSatForCTC",GM]],["wavlm",["WavLMForCTC",tb]],["hubert",["HubertForCTC",YM]]]),C0=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",DM]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",XM]],["unispeech",["UniSpeechForSequenceClassification",UM]],["unispeech-sat",["UniSpeechSatForSequenceClassification",KM]],["wavlm",["WavLMForSequenceClassification",rb]],["hubert",["HubertForSequenceClassification",ZM]],["audio-spectrogram-transformer",["ASTForAudioClassification",gl]]]),S0=new Map([["wavlm",["WavLMForXVector",sb]]]),k0=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",HM]],["wavlm",["WavLMForAudioFrameClassification",nb]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",LM]],["pyannote",["PyAnnoteForAudioFrameClassification",BM]]]),$0=new Map([["vitmatte",["VitMatteForImageMatting",Ql]]]),q1=new Map([["patchtst",["PatchTSTForPrediction",qb]],["patchtsmixer",["PatchTSMixerForPrediction",Xb]]]),A0=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Hy]]]),I0=new Map([["dpt",["DPTForDepthEstimation",Qy]],["depth_anything",["DepthAnythingForDepthEstimation",Jy]],["glpn",["GLPNForDepthEstimation",uM]],["sapiens",["SapiensForDepthEstimation",Zy]],["depth_pro",["DepthProForDepthEstimation",rM]],["metric3d",["Metric3DForDepthEstimation",nM]],["metric3dv2",["Metric3Dv2ForDepthEstimation",iM]]]),O0=new Map([["sapiens",["SapiensForNormalEstimation",eM]]]),F0=new Map([["vitpose",["VitPoseForPoseEstimation",wo]]]),D0=new Map([["clip",["CLIPVisionModelWithProjection",fa]],["siglip",["SiglipVisionModel",kl]],["jina_clip",["JinaCLIPVisionModel",Fl]]]),L0=[[V1,P.EncoderOnly],[U1,P.EncoderDecoder],[G1,P.DecoderOnly],[W1,P.AutoEncoder],[f0,P.EncoderOnly],[m0,P.EncoderOnly],[ep,P.Seq2Seq],[Zd,P.Seq2Seq],[tp,P.DecoderOnly],[K1,P.MultiModality],[_0,P.EncoderOnly],[g0,P.EncoderOnly],[rp,P.Vision2Seq],[w0,P.ImageTextToText],[y0,P.AudioTextToText],[M0,P.EncoderOnly],[Ga,P.EncoderOnly],[T0,P.EncoderOnly],[x0,P.EncoderOnly],[$0,P.EncoderOnly],[q1,P.EncoderOnly],[A0,P.EncoderOnly],[I0,P.EncoderOnly],[O0,P.EncoderOnly],[F0,P.EncoderOnly],[b0,P.EncoderOnly],[v0,P.EncoderOnly],[E0,P.MaskGeneration],[P0,P.EncoderOnly],[C0,P.EncoderOnly],[p0,P.Seq2Seq],[h0,P.EncoderOnly],[S0,P.EncoderOnly],[k0,P.EncoderOnly],[D0,P.EncoderOnly]];for(const[v,S]of L0)for(const[L,oe]of v.values())b.set(L,S),T.set(oe,L),w.set(L,oe);const Q1=[["MusicgenForConditionalGeneration",Xd,P.Musicgen],["Phi3VForCausalLM",sn,P.Phi3V],["CLIPTextModelWithProjection",Pl,P.EncoderOnly],["SiglipTextModel",Sl,P.EncoderOnly],["JinaCLIPTextModel",Ol,P.EncoderOnly],["ClapTextModelWithProjection",yb,P.EncoderOnly],["ClapAudioModelWithProjection",Mb,P.EncoderOnly],["DacEncoderModel",o0,P.EncoderOnly],["DacDecoderModel",l0,P.EncoderOnly],["MimiEncoderModel",r0,P.EncoderOnly],["MimiDecoderModel",s0,P.EncoderOnly],["SnacEncoderModel",u0,P.EncoderOnly],["SnacDecoderModel",d0,P.EncoderOnly]];for(const[v,S,L]of Q1)b.set(v,L),T.set(S,v),w.set(v,S);const z0=new Map([["modnet",Ga],["birefnet",Ga],["isnet",Ga],["ben",Ga]]);for(const[v,S]of z0.entries())S.set(v,["PreTrainedModel",V]),b.set(v,P.EncoderOnly),T.set(V,v),w.set(v,V);class sp extends Ot{}X(sp,"MODEL_CLASS_MAPPINGS",L0.map(S=>S[0])),X(sp,"BASE_IF_FAIL",!0);class B0 extends Ot{}X(B0,"MODEL_CLASS_MAPPINGS",[f0]);class R0 extends Ot{}X(R0,"MODEL_CLASS_MAPPINGS",[m0]);class N0 extends Ot{}X(N0,"MODEL_CLASS_MAPPINGS",[ep]);class j0 extends Ot{}X(j0,"MODEL_CLASS_MAPPINGS",[Zd]);class V0 extends Ot{}X(V0,"MODEL_CLASS_MAPPINGS",[p0]);class U0 extends Ot{}X(U0,"MODEL_CLASS_MAPPINGS",[h0]);class W0 extends Ot{}X(W0,"MODEL_CLASS_MAPPINGS",[tp]);class G0 extends Ot{}X(G0,"MODEL_CLASS_MAPPINGS",[_0]);class K0 extends Ot{}X(K0,"MODEL_CLASS_MAPPINGS",[g0]);class H0 extends Ot{}X(H0,"MODEL_CLASS_MAPPINGS",[rp]);class q0 extends Ot{}X(q0,"MODEL_CLASS_MAPPINGS",[M0]);class Q0 extends Ot{}X(Q0,"MODEL_CLASS_MAPPINGS",[Ga]);class X0 extends Ot{}X(X0,"MODEL_CLASS_MAPPINGS",[x0]);class J0 extends Ot{}X(J0,"MODEL_CLASS_MAPPINGS",[T0]);class Y0 extends Ot{}X(Y0,"MODEL_CLASS_MAPPINGS",[b0]);class Z0 extends Ot{}X(Z0,"MODEL_CLASS_MAPPINGS",[v0]);class ev extends Ot{}X(ev,"MODEL_CLASS_MAPPINGS",[E0]);class tv extends Ot{}X(tv,"MODEL_CLASS_MAPPINGS",[P0]);class rv extends Ot{}X(rv,"MODEL_CLASS_MAPPINGS",[C0]);class sv extends Ot{}X(sv,"MODEL_CLASS_MAPPINGS",[S0]);class nv extends Ot{}X(nv,"MODEL_CLASS_MAPPINGS",[k0]);class av extends Ot{}X(av,"MODEL_CLASS_MAPPINGS",[H1]);class iv extends Ot{}X(iv,"MODEL_CLASS_MAPPINGS",[$0]);class ov extends Ot{}X(ov,"MODEL_CLASS_MAPPINGS",[A0]);class lv extends Ot{}X(lv,"MODEL_CLASS_MAPPINGS",[I0]);class cv extends Ot{}X(cv,"MODEL_CLASS_MAPPINGS",[O0]);class uv extends Ot{}X(uv,"MODEL_CLASS_MAPPINGS",[F0]);class dv extends Ot{}X(dv,"MODEL_CLASS_MAPPINGS",[D0]);class pv extends Ot{}X(pv,"MODEL_CLASS_MAPPINGS",[w0]);class hv extends Ot{}X(hv,"MODEL_CLASS_MAPPINGS",[y0]);class X1 extends fe{constructor({logits:S,past_key_values:L,encoder_outputs:oe,decoder_attentions:ge=null,cross_attentions:me=null}){super(),this.logits=S,this.past_key_values=L,this.encoder_outputs=oe,this.decoder_attentions=ge,this.cross_attentions=me}}class xt extends fe{constructor({logits:S,...L}){super(),this.logits=S;const oe=Object.values(L);oe.length>0&&(this.attentions=oe)}}class fv extends fe{constructor({logits:S,embeddings:L}){super(),this.logits=S,this.embeddings=L}}class yr extends fe{constructor({logits:S}){super(),this.logits=S}}class Er extends fe{constructor({logits:S}){super(),this.logits=S}}class Or extends fe{constructor({start_logits:S,end_logits:L}){super(),this.start_logits=S,this.end_logits=L}}class Yn extends fe{constructor({logits:S}){super(),this.logits=S}}class J1 extends fe{constructor({logits:S,past_key_values:L}){super(),this.logits=S,this.past_key_values=L}}class mv extends fe{constructor({alphas:S}){super(),this.alphas=S}}class _v extends fe{constructor({waveform:S,spectrogram:L}){super(),this.waveform=S,this.spectrogram=L}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var a=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(o){super(o);const l=this.config.sampling_rate,c=(0,a.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);for(let p=0;p<c.length;++p)c[p].push(0);this.mel_filters=c,this.window=(0,a.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(o,l){return(0,a.spectrogram)(o,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(o){(0,s.validate_audio_inputs)(o,"ASTFeatureExtractor");const l=await this._extract_fbank_features(o,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let d=0;d<p.length;++d)p[d]=(p[d]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>i});var s=t("./src/utils/constants.js"),a=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class i{static async from_pretrained(l,c={}){const p=await(0,a.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),d=p.feature_extractor_type,h=n[d];if(!h)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new h(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>o});var s=t("./src/utils/constants.js"),a=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),i=t("./src/models/image_processors.js");class o{static async from_pretrained(c,p={}){const d=await(0,a.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),h=d.image_processor_type??d.feature_extractor_type;let g=i[h];return g||(h!==void 0&&console.warn(`Image processor type '${h}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),g=n.ImageProcessor),new g(d)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),a=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),i=t("./src/models/processors.js"),o=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(d,h={}){const g=await(0,a.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,h),{image_processor_type:_,feature_extractor_type:E,processor_class:A}=g;if(A&&i[A])return i[A].from_pretrained(d,h);if(!_&&!E)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const M={};if(_){const k=o[_];if(!k)throw new Error(`Unknown image_processor_type: '${_}'.`);M.image_processor=new k(g)}if(E){const k=o[E];if(k)M.image_processor=new k(g);else{const P=l[E];if(!P)throw new Error(`Unknown feature_extractor_type: '${E}'.`);M.feature_extractor=new P(g)}}const y={};return new n.Processor(y,M)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var a=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(o){super(o),this.mel_filters=(0,a.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,a.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,a.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(o,l,c,p){let d;const h=o.length-l;if(h>0)if(c==="rand_trunc"){const g=Math.floor(Math.random()*(h+1));o=o.subarray(g,g+l),d=await this._extract_fbank_features(o,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(h<0){let g=new Float64Array(l);if(g.set(o),p==="repeat")for(let _=o.length;_<l;_+=o.length)g.set(o.subarray(0,Math.min(o.length,l-_)),_);else if(p==="repeatpad")for(let _=o.length;_<-h;_+=o.length)g.set(o,_);o=g}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);d=await this._extract_fbank_features(o,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(o,l,c=null){return(0,a.spectrogram)(o,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(o,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(o,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(o,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(o){super(o),this.crop_pct=this.config.crop_pct??224/256}async resize(o){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const p=Math.floor(l/this.crop_pct),[d,h]=this.get_resize_output_image_size(o,{shortest_edge:p});o=await o.resize(d,h,{resample:this.resample}),o=await o.center_crop(l,l)}else o=await o.resize(l,l,{resample:this.resample});return o}}class n extends a{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>a});var s=t("./src/models/encodec/feature_extraction_encodec.js");class a extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],d=(0,a.full)(p,1n);return{...c,pixel_mask:d}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class i extends n{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{pad_image(o,l,c,p={}){const[d,h,g]=l;let _=this.image_mean;Array.isArray(this.image_mean)||(_=new Array(g).fill(_));let E=this.image_std;Array.isArray(E)||(E=new Array(g).fill(_));const A=_.map((M,y)=>-M/E[y]);return super.pad_image(o,l,c,{center:!0,constant_values:A,...p})}}class n extends a{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(i){super(i),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(o=>o*o))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),a=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(o){(0,s.validate_audio_inputs)(o,"EncodecFeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));const l=this.config.feature_size;if(o.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,o.length/l];return{input_values:new a.Tensor("float32",o,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>i.DacFeatureExtractor,EncodecFeatureExtractor:()=>a.EncodecFeatureExtractor,ImageFeatureExtractor:()=>E.ImageProcessor,MoonshineFeatureExtractor:()=>o.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>l.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>h.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>g.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>_.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),a=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),i=t("./src/models/dac/feature_extraction_dac.js"),o=t("./src/models/moonshine/feature_extraction_moonshine.js"),l=t("./src/models/pyannote/feature_extraction_pyannote.js"),c=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=t("./src/models/snac/feature_extraction_snac.js"),d=t("./src/models/speecht5/feature_extraction_speecht5.js"),h=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),g=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),_=t("./src/models/whisper/feature_extraction_whisper.js"),E=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>i});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{constructor(l,c){super(l,c);const{tasks_answer_post_processing_type:p,task_prompts_without_inputs:d,task_prompts_with_input:h}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(p??{})),this.task_prompts_without_inputs=new Map(Object.entries(d??{})),this.task_prompts_with_input=new Map(Object.entries(h??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[d,h]of this.task_prompts_with_input)if(p.includes(d)){c.push(h.replaceAll("{input}",p).replaceAll(d,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const d=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let h;switch(d){case"pure_text":h=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const g=d==="ocr"?"quad_boxes":"bboxes",_=l.matchAll(this.regexes[g]),E=[],A=[];for(const[M,y,...k]of _)E.push(y?y.trim():E.at(-1)??""),A.push(k.map((P,b)=>(Number(P)+.5)/this.size_per_bin*p[b%2]));h={labels:E,[g]:A};break;default:throw new Error(`Task "${c}" (of type "${d}") not yet implemented.`)}return{[c]:h}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,p),h=c?this.tokenizer(c,p):{};return{...d,...h}}}X(i,"tokenizer_class",n.AutoTokenizer),X(i,"image_processor_class",a.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(o){const l=await super._call(o),c=l.pixel_values.dims,p=(0,a.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/image_processors_utils.js");function o(c,p){const h=c.dims.at(-1)-1,g=c.tolist();g.fill(!1,0,1),g.fill(!1,h);const _=p.tolist();return g.map((E,A)=>E?A:null).filter(E=>E!==null).map(E=>_[E])}class l extends s.Processor{async _call(p,d,h={}){const g=p?await this.image_processor(p,h):{};return{...d?this.tokenizer(d,h):{},...g}}post_process_grounded_object_detection(p,d,{box_threshold:h=.25,text_threshold:g=.25,target_sizes:_=null}={}){const{logits:E,pred_boxes:A}=p,M=E.dims[0];if(_!==null&&_.length!==M)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const y=E.dims.at(1),k=E.sigmoid(),P=k.max(-1).tolist(),b=A.tolist().map(T=>T.map($=>(0,i.center_to_corners_format)($))),w=[];for(let T=0;T<M;++T){const $=_!==null?_[T]:null;$!==null&&(b[T]=b[T].map(W=>W.map((te,H)=>te*$[(H+1)%2])));const z=P[T],N=[],Y=[],J=[];for(let W=0;W<y;++W){const te=z[W];if(te<=h)continue;const H=b[T][W],R=k[T][W];N.push(te),J.push(H);const q=o(R.gt(g),d[T]);Y.push(q)}w.push({scores:N,boxes:J,labels:this.batch_decode(Y)})}return w}}X(l,"tokenizer_class",n.AutoTokenizer),X(l,"image_processor_class",a.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(o){super(o),this.do_image_splitting=o.do_image_splitting??!0,this.max_image_size=o.max_image_size}get_resize_for_vision_encoder(o,l){let[c,p]=o.dims.slice(-2);const d=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/d),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*d),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(o,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(o))p=[[o]];else{if(o.length===0||!o[0])throw new Error("No images provided.");Array.isArray(o[0])?p=o:p=[o]}let d=[],h=[],g=[];const _=[],E=[];for(const T of p){let $=await Promise.all(T.map(Y=>this.preprocess(Y)));_.push(...$.map(Y=>Y.original_size)),E.push(...$.map(Y=>Y.reshaped_input_size)),$.forEach(Y=>Y.pixel_values.unsqueeze_(0));const{longest_edge:z}=this.max_image_size;let N;if(l??this.do_image_splitting){let Y=new Array($.length),J=new Array($.length);N=await Promise.all($.map(async(W,te)=>{const H=this.get_resize_for_vision_encoder(W.pixel_values,z),R=await(0,a.interpolate_4d)(W.pixel_values,{size:[H.height,H.width]}),{frames:q,num_splits_h:ee,num_splits_w:le}=await this.split_image(R,this.max_image_size);return Y[te]=ee,J[te]=le,(0,a.cat)(q,0)})),h.push(Y),g.push(J)}else{const Y=[z,z];N=await Promise.all($.map(J=>(0,a.interpolate_4d)(J.pixel_values,{size:Y}))),h.push(new Array($.length).fill(0)),g.push(new Array($.length).fill(0))}d.push((0,a.cat)(N,0))}const A=d.length,[M,y,k,P]=d[0].dims;let b,w;if(A===1)b=d[0].unsqueeze_(0),w=(0,a.full)([A,M,k,P],!0);else{const T=Math.max(...d.map(N=>N.dims.at(0)));w=(0,a.full)([A,T,k,P],!0);const $=w.data,z=T*k*P;for(let N=0;N<A;++N){const Y=d[N].dims[0];if(Y<T){d[N]=(0,a.cat)([d[N],(0,a.full)([T-Y,y,k,P],0)],0);const J=N*z+Y*k*P,W=(N+1)*z;$.fill(!1,J,W)}}b=(0,a.stack)(d,0)}return{pixel_values:b,pixel_attention_mask:w,original_sizes:_,reshaped_input_sizes:E,...c?{rows:h,cols:g}:{}}}async split_image(o,{longest_edge:l}){const c=l,p=l,d=[],[h,g]=o.dims.slice(-2);let _=0,E=0;if(h>c||g>p){_=Math.ceil(h/c),E=Math.ceil(g/p);const A=Math.ceil(h/_),M=Math.ceil(g/E);for(let P=0;P<_;++P)for(let b=0;b<E;++b){let w,T,$,z;P===_-1?(T=h-A,z=h):(T=P*A,z=(P+1)*A),b===E-1?(w=g-M,$=g):(w=b*M,$=(b+1)*M);const N=[T,w],Y=[z,$],J=await(0,a.slice)(o,N,Y,[2,3]);d.push(J)}const y=c,k=p;(h!==y||g!==k)&&(o=await(0,a.interpolate_4d)(o,{size:[y,k]}))}return d.push(o),{frames:d,num_splits_h:_,num_splits_w:E}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var i=t("./src/utils/core.js");function o(d,h,g,_,E,A){let M="";for(let y=0;y<h;++y){for(let k=0;k<g;++k)M+=_+`<row_${y+1}_col_${k+1}>`+E.repeat(d);M+=`
`}return M+=`
${_}${A}`+E.repeat(d)+`${_}`,M}function l(d,h,g,_){return`${h}${_}`+g.repeat(d)+`${h}`}function c(d,h,g,_,E,A){return d===0&&h===0?l(g,_,E,A):o(g,d,h,_,E,A)}class p extends s.Processor{constructor(){super(...arguments);X(this,"fake_image_token","<fake_token_around_image>");X(this,"image_token","<image>");X(this,"global_img_token","<global-img>")}async _call(g,_=null,E={}){E.return_row_col_info??(E.return_row_col_info=!0);let A;_&&(A=await this.image_processor(_,E)),Array.isArray(g)||(g=[g]);const M=A.rows??[new Array(g.length).fill(0)],y=A.cols??[new Array(g.length).fill(0)],k=this.config.image_seq_len,P=[],b=[];for(let T=0;T<g.length;++T){const $=g[T],z=M[T],N=y[T];P.push((0,i.count)($,this.image_token));const Y=z.map((te,H)=>c(te,N[H],k,this.fake_image_token,this.image_token,this.global_img_token)),J=$.split(this.image_token);if(J.length===0)throw new Error("The image token should be present in the text.");let W=J[0];for(let te=0;te<Y.length;++te)W+=Y[te]+J[te+1];b.push(W)}return{...this.tokenizer(b),...A}}}X(p,"image_processor_class",a.AutoImageProcessor),X(p,"tokenizer_class",n.AutoTokenizer),X(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>a.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,DPTFeatureExtractor:()=>d.DPTFeatureExtractor,DPTImageProcessor:()=>d.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>g.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>E.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>M.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>y.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>k.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>P.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>P.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>b.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>b.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>w.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>w.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>T.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>T.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>$.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>$.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>z.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>z.MobileViTImageProcessor,NougatImageProcessor:()=>N.NougatImageProcessor,OwlViTFeatureExtractor:()=>J.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>J.OwlViTImageProcessor,Owlv2ImageProcessor:()=>Y.Owlv2ImageProcessor,Phi3VImageProcessor:()=>W.Phi3VImageProcessor,PvtImageProcessor:()=>te.PvtImageProcessor,Qwen2VLImageProcessor:()=>H.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>R.RTDetrImageProcessor,SamImageProcessor:()=>q.SamImageProcessor,SegformerFeatureExtractor:()=>ee.SegformerFeatureExtractor,SegformerImageProcessor:()=>ee.SegformerImageProcessor,SiglipImageProcessor:()=>le.SiglipImageProcessor,SmolVLMImageProcessor:()=>de.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,VLMImageProcessor:()=>A.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTImageProcessor:()=>F.ViTImageProcessor,VitMatteImageProcessor:()=>K.VitMatteImageProcessor,VitPoseImageProcessor:()=>ae.VitPoseImageProcessor,YolosFeatureExtractor:()=>Z.YolosFeatureExtractor,YolosImageProcessor:()=>Z.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),a=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),i=t("./src/models/clip/image_processing_clip.js"),o=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),d=t("./src/models/dpt/image_processing_dpt.js"),h=t("./src/models/efficientnet/image_processing_efficientnet.js"),g=t("./src/models/glpn/image_processing_glpn.js"),_=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),E=t("./src/models/idefics3/image_processing_idefics3.js"),A=t("./src/models/janus/image_processing_janus.js"),M=t("./src/models/jina_clip/image_processing_jina_clip.js"),y=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),k=t("./src/models/mask2former/image_processing_mask2former.js"),P=t("./src/models/maskformer/image_processing_maskformer.js"),b=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),w=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),T=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),$=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),z=t("./src/models/mobilevit/image_processing_mobilevit.js"),N=t("./src/models/nougat/image_processing_nougat.js"),Y=t("./src/models/owlv2/image_processing_owlv2.js"),J=t("./src/models/owlvit/image_processing_owlvit.js"),W=t("./src/models/phi3_v/image_processing_phi3_v.js"),te=t("./src/models/pvt/image_processing_pvt.js"),H=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),R=t("./src/models/rt_detr/image_processing_rt_detr.js"),q=t("./src/models/sam/image_processing_sam.js"),ee=t("./src/models/segformer/image_processing_segformer.js"),le=t("./src/models/siglip/image_processing_siglip.js"),de=t("./src/models/smolvlm/image_processing_smolvlm.js"),j=t("./src/models/swin2sr/image_processing_swin2sr.js"),F=t("./src/models/vit/image_processing_vit.js"),K=t("./src/models/vitmatte/image_processing_vitmatte.js"),ae=t("./src/models/vitpose/image_processing_vitpose.js"),Z=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(i){super({do_pad:!0,pad_size:{width:i.image_size,height:i.image_size},...i}),this.constant_values=this.config.background_color.map(o=>o*this.rescale_factor)}pad_image(i,o,l,c){return super.pad_image(i,o,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/core.js"),o=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{constructor(d,h){super(d,h),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:h=null,chat_template:g="default"}={}){h?Array.isArray(h)||(h=[h]):h=await Promise.all(d.filter(N=>N.images).flatMap(N=>N.images).map(N=>l.RawImage.read(N)));const _=this.tokenizer,E=_.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:g}),A=N=>_.encode(N,{add_special_tokens:!1}),M=E.split(this.image_tag),y=M.length-1;if(h.length!==y)throw new Error(`Number of images provided (${h.length}) does not match number of "${this.image_tag}" image tags (${y})`);const[k,P,b]=_.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let w=A(M[0]),T=new Array(w.length).fill(!1);for(let N=1;N<M.length;++N){const Y=new Array(this.num_image_tokens).fill(k),J=A(M[N]);w=(0,i.mergeArrays)(w,[P],Y,[b],J);const W=new Array(this.num_image_tokens).fill(!0);T=(0,i.mergeArrays)(T,[!1],W,[!1],new Array(J.length).fill(!1))}const $=[1,w.length],z={input_ids:new o.Tensor("int64",w,$),attention_mask:new o.Tensor("int64",new Array(w.length).fill(1),$),images_seq_mask:new o.Tensor("bool",T,$),images_emb_mask:new o.Tensor("bool",new Array(y*this.num_image_tokens).fill(!0),[1,y,this.num_image_tokens])};if(h&&h.length>0){const N=await this.image_processor(h);return N.pixel_values.unsqueeze_(0),{...z,...N}}return z}}X(c,"image_processor_class",a.AutoImageProcessor),X(c,"tokenizer_class",n.AutoTokenizer),X(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{constructor(i){const{resize_mode:o,fill_color:l,interpolation:c,size:p,...d}=i,h=o==="squash"?{width:p,height:p}:o==="shortest"?{shortest_edge:p}:{longest_edge:p},g=c==="bicubic"?3:2;super({...d,size:h,resample:g,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>i});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,p):{},h=c?await this.image_processor(c,p):{};return{...d,...h}}}X(i,"tokenizer_class",n.AutoTokenizer),X(i,"image_processor_class",a.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>a});var s=t("./src/models/maskformer/image_processing_maskformer.js");class a extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_panoptic_segmentation(...o){return(0,s.post_process_panoptic_segmentation)(...o)}post_process_instance_segmentation(...o){return(0,s.post_process_instance_segmentation)(...o)}}class n extends a{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/maths.js");const o={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,d){if(!o.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[h,g]=o[d],_=this[h].bind(this),[E,A]=p.dims,M=[],y=[],k=p.tolist();for(let b=0;b<E;++b){const w=k[b],T=[],$=[];for(let N=1;N<A;++N){const[Y,J]=(0,i.max)((0,i.softmax)(w[N]));if($.push(Y),J==g)break;T.push(J)}const z=$.length>0?$.reduce((N,Y)=>N*Y,1):0;y.push(T),M.push(z)}return[_(y),M]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}batch_decode([p,d,h]){const[g,_]=this._decode_helper(p,"char"),[E,A]=this._decode_helper(d,"bpe"),[M,y]=this._decode_helper(h,"wp"),k=[],P=[];for(let b=0;b<g.length;++b){const[w,T]=(0,i.max)([_[b],A[b],y[b]]);k.push([g[b],E[b],M[b]][T]),P.push(w)}return{generated_text:k,scores:P,char_preds:g,bpe_preds:E,wp_preds:M}}static async from_pretrained(...p){const d=await super.from_pretrained(...p),h=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),g=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:h,wp_tokenizer:g},d}async _call(p,d=null){const h=await this.image_processor(p);return d&&(h.labels=this.tokenizer(d).input_ids),h}}X(l,"tokenizer_class",n.AutoTokenizer),X(l,"image_processor_class",a.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),a=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(o){(0,s.validate_audio_inputs)(o,"MoonshineFeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));const l=[1,o.length];return{input_values:new a.Tensor("float32",o,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),a=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}X(i,"tokenizer_class",a.AutoTokenizer),X(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>a});var s=t("./src/models/donut/image_processing_donut.js");class a extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>a});var s=t("./src/models/owlvit/image_processing_owlvit.js");class a extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}class n extends a{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>i});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{}X(i,"tokenizer_class",n.AutoTokenizer),X(i,"image_processor_class",a.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const i="<image>";function o(c,p,d,h,g){return`${h.repeat(d*g)}${p}${c}
`}class l extends s.Processor{async _call(p,d=null,h={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(p)||(p=[p]),Array.isArray(d)||(d=[d]);const g=this.tokenizer.bos_token,_=this.image_processor.config.image_seq_length;let E;d.some(y=>y.includes(i))?E=d.map(y=>{const k=y.replaceAll(i,i.repeat(_)),P=k.lastIndexOf(i),b=P===-1?0:P+i.length;return k.slice(0,b)+g+k.slice(b)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),E=d.map(y=>o(y,g,_,i,p.length)));const A=this.tokenizer(E,h);return{...await this.image_processor(p,h),...A}}}X(l,"tokenizer_class",n.AutoTokenizer),X(l,"image_processor_class",a.AutoImageProcessor),X(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/tensor.js");const n=336,i=[2,3],{ceil:o,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(h){super({...h,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=h.num_crops}calc_num_image_tokens_from_image_size(h,g){const{num_img_tokens:_}=this.config;return l((l(g/n)*l(h/n)+1)*_+1+(l(g/n)+1)*c(_))}get_resize_output_image_size(h,g){const _=this._num_crops,[E,A]=h.size;let M=E/A,y=1;for(;y*Math.ceil(y/M)<=_;)y+=1;y-=1;const k=Math.floor(y*336),P=Math.floor(k/M);return[k,P]}pad_image(h,g,_,E={}){const[A,M]=g,y=n*o(A/n),k=n*o(M/n),P=[1,1,1].map((b,w)=>(b-this.image_mean[w])/this.image_std[w]);return super.pad_image(h,g,{width:k,height:y},{center:!0,constant_values:P,...E})}async _call(h,{num_crops:g=null}={}){if(this._num_crops=g??(g=this.config.num_crops),g<4||c(g)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(h)||(h=[h]);const _=h.length,E=await Promise.all(h.map(T=>this.preprocess(T))),A=E.map(T=>T.original_size),M=E.map(T=>T.reshaped_input_size),y=[];for(const{pixel_values:T}of E){T.unsqueeze_(0);const[$,z]=T.dims.slice(-2),N=await(0,a.interpolate_4d)(T,{size:[n,n],mode:"bicubic"});if(g>0){const Y=[],J=c(g),W=l(z/J),te=l($/J);for(let R=0;R<J;++R)for(let q=0;q<J;++q){let ee,le,de,j;R===J-1?(le=$-te,j=$):(le=R*te,j=(R+1)*te),q===J-1?(ee=z-W,de=z):(ee=q*W,de=(q+1)*W);const F=[le,ee],K=[j,de],ae=await(0,a.slice)(T,F,K,i);Y.push(ae)}const H=await(0,a.interpolate_4d)((0,a.cat)(Y,0),{size:[n,n],mode:"bicubic"});y.push((0,a.cat)([N,H],0))}else y.push(N)}const k=(0,a.stack)(y,0),P=M.map(T=>T.map($=>n*o($/n))),b=new a.Tensor("int64",P.flat(),[_,2]),w=P.map(([T,$])=>this.calc_num_image_tokens_from_image_size($,T));return{pixel_values:k,original_sizes:A,reshaped_input_sizes:M,image_sizes:b,num_img_tokens:w}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const i="<|image|>",o=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(p,d=null,{padding:h=!0,truncation:g=!0,num_crops:_=null}={}){Array.isArray(p)||(p=[p]);let E,A;if(d){A=await this.image_processor(d,{num_crops:_});const{num_img_tokens:M}=A,y=p.map((P,b)=>P.split(o).join(i.repeat(M[b])));E=this.tokenizer(y,{padding:h,truncation:g});const k=this.tokenizer.model.convert_tokens_to_ids([i])[0];E.input_ids.map_(P=>P==k?-P:P)}else E=this.tokenizer(p);return{...E,...A}}}X(l,"image_processor_class",a.AutoImageProcessor),X(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,GroundingDinoProcessor:()=>a.GroundingDinoProcessor,Idefics3Processor:()=>n.Idefics3Processor,JinaCLIPProcessor:()=>o.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>h.PaliGemmaProcessor,Phi3VProcessor:()=>d.Phi3VProcessor,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>E.SamProcessor,SmolVLMProcessor:()=>A.SmolVLMProcessor,SpeechT5Processor:()=>M.SpeechT5Processor,UltravoxProcessor:()=>y.UltravoxProcessor,VLChatProcessor:()=>i.VLChatProcessor,Wav2Vec2Processor:()=>k.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>P.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>b.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),a=t("./src/models/grounding_dino/processing_grounding_dino.js"),n=t("./src/models/idefics3/processing_idefics3.js"),i=t("./src/models/janus/processing_janus.js"),o=t("./src/models/jina_clip/processing_jina_clip.js"),l=t("./src/models/mgp_str/processing_mgp_str.js"),c=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),d=t("./src/models/phi3_v/processing_phi3_v.js"),h=t("./src/models/paligemma/processing_paligemma.js"),g=t("./src/models/pyannote/processing_pyannote.js"),_=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),E=t("./src/models/sam/processing_sam.js"),A=t("./src/models/smolvlm/processing_smolvlm.js"),M=t("./src/models/speecht5/processing_speecht5.js"),y=t("./src/models/ultravox/processing_ultravox.js"),k=t("./src/models/wav2vec2/processing_wav2vec2.js"),P=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),b=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),a=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class i extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new a.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,d=[];for(const h of l.tolist()){const g=[];let _=-1;for(let E=0;E<h.length;++E){const A=(0,n.softmax)(h[E]),[M,y]=(0,n.max)(A),[k,P]=[E,E+1];y!==_?(_=y,g.push({id:y,start:k,end:P,score:M})):(g.at(-1).end=P,g.at(-1).score+=M)}d.push(g.map(({id:E,start:A,end:M,score:y})=>({id:E,start:A*p,end:M*p,confidence:y/(M-A)})))}return d}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>n});var s=t("./src/base/processing_utils.js"),a=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{async _call(o){return await this.feature_extractor(o)}post_process_speaker_diarization(...o){return this.feature_extractor.post_process_speaker_diarization(...o)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}X(n,"feature_extractor_class",a.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(o,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:d}=await super._call(o,...l);let h=c;const{temporal_patch_size:g,merge_size:_,patch_size:E}=this.config;h.dims[0]===1&&(h=(0,a.cat)(Array.from({length:g},()=>h),0));const A=h.dims[0]/g,M=h.dims[1],y=Math.floor(h.dims[2]/E),k=Math.floor(h.dims[3]/E),P=h.view(A,g,M,Math.floor(y/_),_,E,Math.floor(k/_),_,E).permute(0,3,6,4,7,2,1,5,8).view(A*y*k,M*g*E*E),b=new a.Tensor("int64",[A,y,k],[1,3]);return{pixel_values:P,image_grid_thw:b,original_sizes:p,reshaped_input_sizes:d}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>i});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class i extends s.Processor{async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let d,h;if(c&&(d=await this.image_processor(c),h=d.image_grid_thw),h){let _=this.image_processor.config.merge_size**2,E=0;const A=h.tolist();l=l.map(M=>{for(;M.includes("<|image_pad|>");){const y=Number(A[E++].reduce((k,P)=>k*P,1n));M=M.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(y/_)))}return M.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}X(i,"image_processor_class",a.AutoImageProcessor),X(i,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_object_detection(...i){return(0,s.post_process_object_detection)(...i)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{reshape_input_points(l,c,p,d=!1){l=structuredClone(l);let h=(0,a.calculateDimensions)(l);if(h.length===3)d||(h=[1,...h]),l=[l];else if(h.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let g=0;g<l.length;++g){let _=c[g],E=p[g],A=[E[0]/_[0],E[1]/_[1]];for(let M=0;M<l[g].length;++M)for(let y=0;y<l[g][M].length;++y)for(let k=0;k<l[g][M][y].length;++k)l[g][M][y][k]*=A[k%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),h)}add_input_labels(l,c){let p=(0,a.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((d,h)=>d!==c.dims[h]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:d=null}={}){const h=await super._call(l);if(c&&(h.input_points=this.reshape_input_points(c,h.original_sizes,h.reshaped_input_sizes)),p){if(!h.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");h.input_labels=this.add_input_labels(p,h.input_points)}return d&&(h.input_boxes=this.reshape_input_points(d,h.original_sizes,h.reshaped_input_sizes,!0)),h}async post_process_masks(l,c,p,{mask_threshold:d=0,binarize:h=!0,pad_size:g=null}={}){const _=[];g=g??this.pad_size;const E=[g.height,g.width];for(let A=0;A<c.length;++A){const M=c[A],y=p[A];let k=await(0,n.interpolate_4d)(l[A],{mode:"bilinear",size:E});if(k=k.slice(null,null,[0,y[0]],[0,y[1]]),k=await(0,n.interpolate_4d)(k,{mode:"bilinear",size:M}),h){const P=k.data,b=new Uint8Array(P.length);for(let w=0;w<P.length;++w)P[w]>d&&(b[w]=1);k=new n.Tensor("bool",b,k.dims)}_.push(k)}return _}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:d=512/1500,points_per_crop:h=32,crop_n_points_downscale_factor:g=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>n});var s=t("./src/base/processing_utils.js"),a=t("./src/models/auto/image_processing_auto.js");class n extends s.Processor{async _call(...o){return await this.image_processor(...o)}post_process_masks(...o){return this.image_processor.post_process_masks(...o)}reshape_input_points(...o){return this.image_processor.reshape_input_points(...o)}}X(n,"image_processor_class",a.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),a=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,n.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);for(let d=0;d<p.length;++d)p[d].push(0);this.mel_filters=p,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:h=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let g=await this._extract_fbank_features(l,this.config.max_length);if(d){const[b,w]=g.dims,T=g.data;for(let $=0;$<w;++$){let z=0;for(let W=0;W<b;++W)z+=T[W*w+$];const N=z/b;let Y=0;for(let W=0;W<b;++W)Y+=(T[W*w+$]-N)**2;Y/=b-1;const J=Math.sqrt(Y+1e-7);for(let W=0;W<b;++W){const te=W*w+$;T[te]=(T[te]-N)/J}}}let _;if(c){const[b,w]=g.dims,T=g.data,$=b%p;if($>0){const z=new Float32Array(w*(b+$));z.set(T),z.fill(this.config.padding_value,T.length);const N=b+$;g=new a.Tensor(g.type,z,[N,w]),h&&(_=new a.Tensor("int64",new BigInt64Array(N),[1,N]),_.data.fill(1n,0,b))}}const[E,A]=g.dims,M=this.config.stride;if(E%M!==0)throw new Error(`The number of frames (${E}) must be a multiple of the stride (${M}).`);const k=g.view(1,Math.floor(E/M),A*M),P={input_features:k};if(h){const b=k.dims[1],w=new BigInt64Array(b);if(_){const T=_.data;for(let $=1,z=0;$<E;$+=M,++z)w[z]=T[$]}else w.fill(1n);P.attention_mask=new a.Tensor("int64",w,[1,b])}return P}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_semantic_segmentation(...o){return(0,s.post_process_semantic_segmentation)(...o)}}class n extends a{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>a});var s=t("./src/models/dac/feature_extraction_dac.js");class a extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>a});var s=t("./src/base/feature_extraction_utils.js");class a extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>i});var s=t("./src/base/processing_utils.js"),a=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class i extends s.Processor{async _call(l){return await this.feature_extractor(l)}}X(i,"tokenizer_class",a.AutoTokenizer),X(i,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{pad_image(i,o,l,c={}){const[p,d,h]=o;return super.pad_image(i,o,{width:d+(l-d%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),a=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(c){const g=c.length,{input_features:_}=await this.feature_extractor(c,{...p,max_length:g}),E=Math.round(g/this.config.encoder_ds_factor+1e-4),A=1+Math.ceil(E/this.config.stack_factor);d.audio_token_len=[A],d.audio_values=_;const M=this.config.audio_placeholder;if(!l.includes(M))throw new Error(`The input text does not contain the image token ${M}.`);l=l.replaceAll(M,M.repeat(A))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...d}}}X(i,"tokenizer_class",a.AutoTokenizer),X(i,"feature_extractor_class",s.AutoFeatureExtractor),X(i,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{}class n extends a{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),a=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(o,l){Array.isArray(o)||(o=[o]),Array.isArray(l)||(l=[l]);const c=await Promise.all(o.map(h=>this.preprocess(h))),p=await Promise.all(l.map(h=>this.preprocess(h,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,a.stack)(c.map((h,g)=>(0,a.cat)([h.pixel_values,p[g].pixel_values],0)),0),original_sizes:c.map(h=>h.original_size),reshaped_input_sizes:c.map(h=>h.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_pose_estimation(i,o,{threshold:l=null}={}){const c=i.tolist(),[p,d,h,g]=i.dims,_=[];for(let E=0;E<p;++E){const A=c[E],M=o[E],y=[];for(let k=0;k<M.length;++k){const P=M[k],b=[],w=[],T=[],$=P.at(-2)/g,z=P.at(-1)/h;for(let N=0;N<A.length;++N){let[Y,J]=[0,0],W=0,te=-1/0;const H=A[N];for(let q=0;q<H.length;++q){const ee=H[q];for(let le=0;le<ee.length;++le){const de=ee[le];W+=de,te=Math.max(te,de),Y+=(le+.5)*de,J+=q*de}}if(l!=null&&te<l)continue;const R=[$*Y/W,z*J/W];b.push(R),T.push(N),w.push(te)}y.push({bbox:P,scores:w,labels:T,keypoints:b})}_.push(y)}return _}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),a=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(o){const c=o.reduce((d,h)=>d+h,0)/o.length,p=o.reduce((d,h)=>d+(h-c)**2,0)/o.length;return o.map(d=>(d-c)/Math.sqrt(p+1e-7))}async _call(o){(0,s.validate_audio_inputs)(o,"Wav2Vec2FeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));let l=o;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new a.Tensor("float32",l,c),attention_mask:new a.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>i});var s=t("./src/tokenizers.js"),a=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}X(i,"tokenizer_class",s.AutoTokenizer),X(i,"feature_extractor_class",a.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>i});var s=t("./src/tokenizers.js"),a=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}X(i,"tokenizer_class",s.AutoTokenizer),X(i,"feature_extractor_class",a.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var a=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(o){super(o);const l=this.config.sampling_rate,c=(0,a.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);for(let p=0;p<c.length;++p)c[p].push(0);this.mel_filters=c,this.window=(0,a.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(o){return o=o.map(l=>l*32768),(0,a.spectrogram)(o,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(o){(0,s.validate_audio_inputs)(o,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(o)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[d,h,g]=l.dims;for(let _=0;_<d;++_){const E=_*h*g,A=_*g;for(let M=0;M<h;++M){const y=E+M*g;for(let k=0;k<g;++k)p[y+k]-=c[A+k]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>a,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>i});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],a=new Map(s),n=new Map([...s.map(([o,l])=>[l,o]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(o){o=o.toLowerCase();let l=n.get(o);if(l===void 0){const c=o.match(/^<\|([a-z]{2})\|>$/);if(c&&(o=c[1]),a.has(o))l=o;else{const d=o.length===2?a.keys():a.values();throw new Error(`Language "${o}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var a=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class i extends s.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,a.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,a.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,a.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,d=(0,n.max)(p)[0];for(let h=0;h<p.length;++h)p[h]=(Math.max(p[h],d-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const d=c??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,d)):(p=new Float32Array(d),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>a});var s=t("./src/generation/configuration_utils.js");class a extends s.GenerationConfig{constructor(){super(...arguments);X(this,"return_timestamps",null);X(this,"return_token_timestamps",null);X(this,"num_frames",null);X(this,"alignment_heads",null);X(this,"task",null);X(this,"language",null);X(this,"no_timestamps_token_id",null);X(this,"prompt_ids",null);X(this,"is_multilingual",null);X(this,"lang_to_id",null);X(this,"task_to_id",null);X(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),a=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}X(i,"tokenizer_class",a.AutoTokenizer),X(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>a});var s=t("./src/base/image_processors_utils.js");class a extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}class n extends a{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),a=t("./src/utils/tensor.js"),n=t("./src/env.js");const i=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,o=async(c,p,d)=>{const h=await(0,s.createInferenceSession)(new Uint8Array(c),p);let g=Promise.resolve();return async _=>{const E=(0,s.isONNXProxy)(),A=Object.fromEntries(Object.entries(_).map(([y,k])=>[y,(E?k.clone():k).ort_tensor])),M=await(g=i?g.then(()=>h.run(A)):h.run(A));return Array.isArray(d)?d.map(y=>new a.Tensor(M[y])):new a.Tensor(M[d])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=o([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=o([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=o([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=o([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=o([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=o([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=o([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=o([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}X(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>J,AutomaticSpeechRecognitionPipeline:()=>te,BackgroundRemovalPipeline:()=>ee,DepthEstimationPipeline:()=>Z,DocumentQuestionAnsweringPipeline:()=>F,FeatureExtractionPipeline:()=>N,FillMaskPipeline:()=>k,ImageClassificationPipeline:()=>R,ImageFeatureExtractionPipeline:()=>Y,ImageSegmentationPipeline:()=>q,ImageToImagePipeline:()=>ae,ImageToTextPipeline:()=>H,ObjectDetectionPipeline:()=>de,Pipeline:()=>E,QuestionAnsweringPipeline:()=>y,SummarizationPipeline:()=>b,Text2TextGenerationPipeline:()=>P,TextClassificationPipeline:()=>A,TextGenerationPipeline:()=>$,TextToAudioPipeline:()=>K,TokenClassificationPipeline:()=>M,TranslationPipeline:()=>w,ZeroShotAudioClassificationPipeline:()=>W,ZeroShotClassificationPipeline:()=>z,ZeroShotImageClassificationPipeline:()=>le,ZeroShotObjectDetectionPipeline:()=>j,pipeline:()=>Ae});var s=t("./src/tokenizers.js"),a=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var i=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function h(Me){return Array.isArray(Me)||(Me=[Me]),await Promise.all(Me.map(Q=>d.RawImage.read(Q)))}async function g(Me,Q){return Array.isArray(Me)||(Me=[Me]),await Promise.all(Me.map(V=>typeof V=="string"||V instanceof URL?(0,c.read_audio)(V,Q):V instanceof Float64Array?new Float32Array(V):V))}function _(Me,Q){Q&&(Me=Me.map(Oe=>Oe|0));const[V,fe,Ce,Ee]=Me;return{xmin:V,ymin:fe,xmax:Ce,ymax:Ee}}class E extends i.Callable{constructor({task:Q,model:V,tokenizer:fe=null,processor:Ce=null}){super(),this.task=Q,this.model=V,this.tokenizer=fe,this.processor=Ce}async dispose(){await this.model.dispose()}}class A extends E{constructor(Q){super(Q)}async _call(Q,{top_k:V=1}={}){const fe=this.tokenizer(Q,{padding:!0,truncation:!0}),Ce=await this.model(fe),Ee=this.model.config.problem_type==="multi_label_classification"?ze=>ze.sigmoid():ze=>new p.Tensor("float32",(0,l.softmax)(ze.data),ze.dims),Oe=this.model.config.id2label,Ie=[];for(const ze of Ce.logits){const je=Ee(ze),Ge=await(0,p.topk)(je,V),D=Ge[0].tolist(),B=Ge[1].tolist().map((ne,ue)=>({label:Oe?Oe[ne]:`LABEL_${ne}`,score:D[ue]}));V===1?Ie.push(...B):Ie.push(B)}return Array.isArray(Q)||V===1?Ie:Ie[0]}}class M extends E{constructor(Q){super(Q)}async _call(Q,{ignore_labels:V=["O"]}={}){const fe=Array.isArray(Q),Ce=this.tokenizer(fe?Q:[Q],{padding:!0,truncation:!0}),Oe=(await this.model(Ce)).logits,Ie=this.model.config.id2label,ze=[];for(let je=0;je<Oe.dims[0];++je){const Ge=Ce.input_ids[je],D=Oe[je],se=[];for(let B=0;B<D.dims[0];++B){const ne=D[B],ue=(0,l.max)(ne.data)[1],ve=Ie?Ie[ue]:`LABEL_${ue}`;if(V.includes(ve))continue;const xe=this.tokenizer.decode([Ge[B].item()],{skip_special_tokens:!0});if(xe==="")continue;const Ne=(0,l.softmax)(ne.data);se.push({entity:ve,score:Ne[ue],index:B,word:xe})}ze.push(se)}return fe?ze:ze[0]}}class y extends E{constructor(Q){super(Q)}async _call(Q,V,{top_k:fe=1}={}){const Ce=this.tokenizer(Q,{text_pair:V,padding:!0,truncation:!0}),{start_logits:Ee,end_logits:Oe}=await this.model(Ce),Ie=Ce.input_ids.tolist(),ze=Ce.attention_mask.tolist(),je=this.tokenizer.all_special_ids,Ge=[];for(let D=0;D<Ee.dims[0];++D){const se=Ie[D],B=se.findIndex(Fe=>Fe==this.tokenizer.sep_token_id);ze[D].map((Fe,Ve)=>Fe==1&&(Ve===0||Ve>B&&je.findIndex(Qe=>Qe==se[Ve])===-1));const ne=Ee[D].tolist(),ue=Oe[D].tolist();for(let Fe=1;Fe<ne.length;++Fe)(ze[D]==0||Fe<=B||je.findIndex(Ve=>Ve==se[Fe])!==-1)&&(ne[Fe]=-1/0,ue[Fe]=-1/0);const ve=(0,l.softmax)(ne).map((Fe,Ve)=>[Fe,Ve]),xe=(0,l.softmax)(ue).map((Fe,Ve)=>[Fe,Ve]);ve[0][0]=0,xe[0][0]=0;const Ne=(0,o.product)(ve,xe).filter(Fe=>Fe[0][1]<=Fe[1][1]).map(Fe=>[Fe[0][1],Fe[1][1],Fe[0][0]*Fe[1][0]]).sort((Fe,Ve)=>Ve[2]-Fe[2]);for(let Fe=0;Fe<Math.min(Ne.length,fe);++Fe){const[Ve,Qe,Je]=Ne[Fe],pt=se.slice(Ve,Qe+1),Mt=this.tokenizer.decode(pt,{skip_special_tokens:!0});Ge.push({answer:Mt,score:Je})}}return fe===1?Ge[0]:Ge}}class k extends E{constructor(Q){super(Q)}async _call(Q,{top_k:V=5}={}){const fe=this.tokenizer(Q,{padding:!0,truncation:!0}),{logits:Ce}=await this.model(fe),Ee=[],Oe=fe.input_ids.tolist();for(let Ie=0;Ie<Oe.length;++Ie){const ze=Oe[Ie],je=ze.findIndex(ne=>ne==this.tokenizer.mask_token_id);if(je===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ge=Ce[Ie][je],D=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ge.data),Ge.dims),V),se=D[0].tolist(),B=D[1].tolist();Ee.push(B.map((ne,ue)=>{const ve=ze.slice();return ve[je]=ne,{score:se[ue],token:Number(ne),token_str:this.tokenizer.decode([ne]),sequence:this.tokenizer.decode(ve,{skip_special_tokens:!0})}}))}return Array.isArray(Q)?Ee:Ee[0]}}class P extends E{constructor(V){super(V);X(this,"_key","generated_text")}async _call(V,fe={}){Array.isArray(V)||(V=[V]),this.model.config.prefix&&(V=V.map(je=>this.model.config.prefix+je));const Ce=this.model.config.task_specific_params;Ce&&Ce[this.task]&&Ce[this.task].prefix&&(V=V.map(je=>Ce[this.task].prefix+je));const Ee=this.tokenizer,Oe={padding:!0,truncation:!0};let Ie;this instanceof w&&"_build_translation_inputs"in Ee?Ie=Ee._build_translation_inputs(V,Oe,fe):Ie=Ee(V,Oe);const ze=await this.model.generate({...Ie,...fe});return Ee.batch_decode(ze,{skip_special_tokens:!0}).map(je=>({[this._key]:je}))}}class b extends P{constructor(V){super(V);X(this,"_key","summary_text")}}class w extends P{constructor(V){super(V);X(this,"_key","translation_text")}}function T(Me){return Array.isArray(Me)&&Me.every(Q=>"role"in Q&&"content"in Q)}class $ extends E{constructor(Q){super(Q)}async _call(Q,V={}){let fe=!1,Ce=!1,Ee;if(typeof Q=="string")Ee=Q=[Q];else if(Array.isArray(Q)&&Q.every(B=>typeof B=="string"))fe=!0,Ee=Q;else{if(T(Q))Q=[Q];else if(Array.isArray(Q)&&Q.every(T))fe=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Ce=!0,Ee=Q.map(B=>this.tokenizer.apply_chat_template(B,{tokenize:!1,add_generation_prompt:!0}))}const Oe=V.add_special_tokens??!1,Ie=Ce?!1:V.return_full_text??!0;this.tokenizer.padding_side="left";const ze=this.tokenizer(Ee,{add_special_tokens:Oe,padding:!0,truncation:!0}),je=await this.model.generate({...ze,...V}),Ge=this.tokenizer.batch_decode(je,{skip_special_tokens:!0});let D;!Ie&&ze.input_ids.dims.at(-1)>0&&(D=this.tokenizer.batch_decode(ze.input_ids,{skip_special_tokens:!0}).map(B=>B.length));const se=Array.from({length:Q.length},B=>[]);for(let B=0;B<Ge.length;++B){const ne=Math.floor(B/je.dims[0]*Q.length);D&&(Ge[B]=Ge[B].slice(D[ne])),se[ne].push({generated_text:Ce?[...Q[ne],{role:"assistant",content:Ge[B]}]:Ge[B]})}return!fe&&se.length===1?se[0]:se}}class z extends E{constructor(Q){super(Q),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([V,fe])=>[V.toLowerCase(),fe])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(Q,V,{hypothesis_template:fe="This example is {}.",multi_label:Ce=!1}={}){const Ee=Array.isArray(Q);Ee||(Q=[Q]),Array.isArray(V)||(V=[V]);const Oe=V.map(je=>fe.replace("{}",je)),Ie=Ce||V.length===1,ze=[];for(const je of Q){const Ge=[];for(const B of Oe){const ne=this.tokenizer(je,{text_pair:B,padding:!0,truncation:!0}),ue=await this.model(ne);Ie?Ge.push([ue.logits.data[this.contradiction_id],ue.logits.data[this.entailment_id]]):Ge.push(ue.logits.data[this.entailment_id])}const se=(Ie?Ge.map(B=>(0,l.softmax)(B)[1]):(0,l.softmax)(Ge)).map((B,ne)=>[B,ne]).sort((B,ne)=>ne[0]-B[0]);ze.push({sequence:je,labels:se.map(B=>V[B[1]]),scores:se.map(B=>B[0])})}return Ee?ze:ze[0]}}class N extends E{constructor(Q){super(Q)}async _call(Q,{pooling:V="none",normalize:fe=!1,quantize:Ce=!1,precision:Ee="binary"}={}){const Oe=this.tokenizer(Q,{padding:!0,truncation:!0}),Ie=await this.model(Oe);let ze=Ie.last_hidden_state??Ie.logits??Ie.token_embeddings;if(V!=="none")if(V==="mean")ze=(0,p.mean_pooling)(ze,Oe.attention_mask);else if(V==="cls")ze=ze.slice(null,0);else throw Error(`Pooling method '${V}' not supported.`);return fe&&(ze=ze.normalize(2,-1)),Ce&&(ze=(0,p.quantize_embeddings)(ze,Ee)),ze}}class Y extends E{constructor(Q){super(Q)}async _call(Q,{pool:V=null}={}){const fe=await h(Q),{pixel_values:Ce}=await this.processor(fe),Ee=await this.model({pixel_values:Ce});let Oe;if(V){if(!("pooler_output"in Ee))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Oe=Ee.pooler_output}else Oe=Ee.last_hidden_state??Ee.logits??Ee.image_embeds;return Oe}}class J extends E{constructor(Q){super(Q)}async _call(Q,{top_k:V=5}={}){const fe=this.processor.feature_extractor.config.sampling_rate,Ce=await g(Q,fe),Ee=this.model.config.id2label,Oe=[];for(const Ie of Ce){const ze=await this.processor(Ie),Ge=(await this.model(ze)).logits[0],D=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ge.data),Ge.dims),V),se=D[0].tolist(),ne=D[1].tolist().map((ue,ve)=>({label:Ee?Ee[ue]:`LABEL_${ue}`,score:se[ve]}));Oe.push(ne)}return Array.isArray(Q)?Oe:Oe[0]}}class W extends E{constructor(Q){super(Q)}async _call(Q,V,{hypothesis_template:fe="This is a sound of {}."}={}){const Ce=!Array.isArray(Q);Ce&&(Q=[Q]);const Ee=V.map(Ge=>fe.replace("{}",Ge)),Oe=this.tokenizer(Ee,{padding:!0,truncation:!0}),Ie=this.processor.feature_extractor.config.sampling_rate,ze=await g(Q,Ie),je=[];for(const Ge of ze){const D=await this.processor(Ge),se=await this.model({...Oe,...D}),B=(0,l.softmax)(se.logits_per_audio.data);je.push([...B].map((ne,ue)=>({score:ne,label:V[ue]})))}return Ce?je[0]:je}}class te extends E{constructor(Q){super(Q)}async _call(Q,V={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(Q,V);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(Q,V);case"moonshine":return this._call_moonshine(Q,V);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(Q,V){V.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),V.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const fe=!Array.isArray(Q);fe&&(Q=[Q]);const Ce=this.processor.feature_extractor.config.sampling_rate,Ee=await g(Q,Ce),Oe=[];for(const Ie of Ee){const ze=await this.processor(Ie),Ge=(await this.model(ze)).logits[0],D=[];for(const B of Ge)D.push((0,l.max)(B.data)[1]);const se=this.tokenizer.decode(D);Oe.push({text:se})}return fe?Oe[0]:Oe}async _call_whisper(Q,V){const fe=V.return_timestamps??!1,Ce=V.chunk_length_s??0,Ee=V.force_full_sequences??!1;let Oe=V.stride_length_s??null;const Ie={...V};fe==="word"&&(Ie.return_token_timestamps=!0,Ie.return_timestamps=!1);const ze=!Array.isArray(Q);ze&&(Q=[Q]);const je=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ge=this.processor.feature_extractor.config.hop_length,D=this.processor.feature_extractor.config.sampling_rate,se=await g(Q,D),B=[];for(const ne of se){let ue=[];if(Ce>0){if(Oe===null)Oe=Ce/6;else if(Ce<=Oe)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Ne=D*Ce,Fe=D*Oe,Ve=Ne-2*Fe;let Qe=0;for(;;){const Je=Qe+Ne,pt=ne.subarray(Qe,Je),Mt=await this.processor(pt),dr=Qe===0,Gt=Je>=ne.length;if(ue.push({stride:[pt.length,dr?0:Fe,Gt?0:Fe],input_features:Mt.input_features,is_last:Gt}),Gt)break;Qe+=Ve}}else ue=[{stride:[ne.length,0,0],input_features:(await this.processor(ne)).input_features,is_last:!0}];for(const Ne of ue){Ie.num_frames=Math.floor(Ne.stride[0]/Ge);const Fe=await this.model.generate({inputs:Ne.input_features,...Ie});fe==="word"?(Ne.tokens=Fe.sequences.tolist()[0],Ne.token_timestamps=Fe.token_timestamps.tolist()[0].map(Ve=>(0,l.round)(Ve,2))):Ne.tokens=Fe[0].tolist(),Ne.stride=Ne.stride.map(Ve=>Ve/D)}const[ve,xe]=this.tokenizer._decode_asr(ue,{time_precision:je,return_timestamps:fe,force_full_sequences:Ee});B.push({text:ve,...xe})}return ze?B[0]:B}async _call_moonshine(Q,V){const fe=!Array.isArray(Q);fe&&(Q=[Q]);const Ce=this.processor.feature_extractor.config.sampling_rate,Ee=await g(Q,Ce),Oe=[];for(const Ie of Ee){const ze=await this.processor(Ie),je=Math.floor(Ie.length/Ce)*6,Ge=await this.model.generate({max_new_tokens:je,...V,...ze}),D=this.processor.batch_decode(Ge,{skip_special_tokens:!0})[0];Oe.push({text:D})}return fe?Oe[0]:Oe}}class H extends E{constructor(Q){super(Q)}async _call(Q,V={}){const fe=Array.isArray(Q),Ce=await h(Q),{pixel_values:Ee}=await this.processor(Ce),Oe=[];for(const Ie of Ee){Ie.dims=[1,...Ie.dims];const ze=await this.model.generate({inputs:Ie,...V}),je=this.tokenizer.batch_decode(ze,{skip_special_tokens:!0}).map(Ge=>({generated_text:Ge.trim()}));Oe.push(je)}return fe?Oe:Oe[0]}}class R extends E{constructor(Q){super(Q)}async _call(Q,{top_k:V=5}={}){const fe=await h(Q),{pixel_values:Ce}=await this.processor(fe),Ee=await this.model({pixel_values:Ce}),Oe=this.model.config.id2label,Ie=[];for(const ze of Ee.logits){const je=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(ze.data),ze.dims),V),Ge=je[0].tolist(),se=je[1].tolist().map((B,ne)=>({label:Oe?Oe[B]:`LABEL_${B}`,score:Ge[ne]}));Ie.push(se)}return Array.isArray(Q)?Ie:Ie[0]}}class q extends E{constructor(Q){super(Q),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(Q,{threshold:V=.5,mask_threshold:fe=.5,overlap_mask_area_threshold:Ce=.8,label_ids_to_fuse:Ee=null,target_sizes:Oe=null,subtask:Ie=null}={}){if(Array.isArray(Q)&&Q.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const je=await h(Q),Ge=je.map(Ne=>[Ne.height,Ne.width]),D=await this.processor(je),{inputNames:se,outputNames:B}=this.model.sessions.model;if(!se.includes("pixel_values")){if(se.length!==1)throw Error(`Expected a single input name, but got ${se.length} inputs: ${se}.`);const Ne=se[0];if(Ne in D)throw Error(`Input name ${Ne} already exists in the inputs.`);D[Ne]=D.pixel_values}const ne=await this.model(D);let ue=null;if(Ie!==null)ue=this.subtasks_mapping[Ie];else if(this.processor.image_processor){for(const[Ne,Fe]of Object.entries(this.subtasks_mapping))if(Fe in this.processor.image_processor){ue=this.processor.image_processor[Fe].bind(this.processor.image_processor),Ie=Ne;break}}const ve=this.model.config.id2label,xe=[];if(Ie)if(Ie==="panoptic"||Ie==="instance"){const Ne=ue(ne,V,fe,Ce,Ee,Oe??Ge)[0],Fe=Ne.segmentation;for(const Ve of Ne.segments_info){const Qe=new Uint8ClampedArray(Fe.data.length);for(let pt=0;pt<Fe.data.length;++pt)Fe.data[pt]===Ve.id&&(Qe[pt]=255);const Je=new d.RawImage(Qe,Fe.dims[1],Fe.dims[0],1);xe.push({score:Ve.score,label:ve[Ve.label_id],mask:Je})}}else if(Ie==="semantic"){const{segmentation:Ne,labels:Fe}=ue(ne,Oe??Ge)[0];for(const Ve of Fe){const Qe=new Uint8ClampedArray(Ne.data.length);for(let pt=0;pt<Ne.data.length;++pt)Ne.data[pt]===Ve&&(Qe[pt]=255);const Je=new d.RawImage(Qe,Ne.dims[1],Ne.dims[0],1);xe.push({score:null,label:ve[Ve],mask:Je})}}else throw Error(`Subtask ${Ie} not supported.`);else{const Fe=ne[B[0]];for(let Ve=0;Ve<Ge.length;++Ve){const Qe=Ge[Ve],Je=Fe[Ve];Je.data.some(Mt=>Mt<-1e-5||Mt>1+1e-5)&&Je.sigmoid_();const pt=await d.RawImage.fromTensor(Je.mul_(255).to("uint8")).resize(Qe[1],Qe[0]);xe.push({label:null,score:null,mask:pt})}}return xe}}class ee extends q{constructor(Q){super(Q)}async _call(Q,V={}){if(Array.isArray(Q)&&Q.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const Ce=await h(Q),Ee=await super._call(Q,V);return Ce.map((Ie,ze)=>{const je=Ie.clone();return je.putAlpha(Ee[ze].mask),je})}}class le extends E{constructor(Q){super(Q)}async _call(Q,V,{hypothesis_template:fe="This is a photo of {}"}={}){const Ce=Array.isArray(Q),Ee=await h(Q),Oe=V.map(se=>fe.replace("{}",se)),Ie=this.tokenizer(Oe,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:ze}=await this.processor(Ee),je=await this.model({...Ie,pixel_values:ze}),Ge=this.model.config.model_type==="siglip"?se=>se.sigmoid().data:se=>(0,l.softmax)(se.data),D=[];for(const se of je.logits_per_image){const ne=[...Ge(se)].map((ue,ve)=>({score:ue,label:V[ve]}));ne.sort((ue,ve)=>ve.score-ue.score),D.push(ne)}return Ce?D:D[0]}}class de extends E{constructor(Q){super(Q)}async _call(Q,{threshold:V=.9,percentage:fe=!1}={}){const Ce=Array.isArray(Q);if(Ce&&Q.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ee=await h(Q),Oe=fe?null:Ee.map(B=>[B.height,B.width]),{pixel_values:Ie,pixel_mask:ze}=await this.processor(Ee),je=await this.model({pixel_values:Ie,pixel_mask:ze}),Ge=this.processor.image_processor.post_process_object_detection(je,V,Oe),D=this.model.config.id2label,se=Ge.map(B=>B.boxes.map((ne,ue)=>({score:B.scores[ue],label:D[B.classes[ue]],box:_(ne,!fe)})));return Ce?se:se[0]}}class j extends E{constructor(Q){super(Q)}async _call(Q,V,{threshold:fe=.1,top_k:Ce=null,percentage:Ee=!1}={}){const Oe=Array.isArray(Q),Ie=await h(Q),ze=this.tokenizer(V,{padding:!0,truncation:!0}),je=await this.processor(Ie),Ge=[];for(let D=0;D<Ie.length;++D){const se=Ie[D],B=Ee?null:[[se.height,se.width]],ne=je.pixel_values[D].unsqueeze_(0),ue=await this.model({...ze,pixel_values:ne});let ve;if("post_process_grounded_object_detection"in this.processor){const xe=this.processor.post_process_grounded_object_detection(ue,ze.input_ids,{box_threshold:fe,text_threshold:fe,target_sizes:B})[0];ve=xe.boxes.map((Ne,Fe)=>({score:xe.scores[Fe],label:xe.labels[Fe],box:_(Ne,!Ee)}))}else{const xe=this.processor.image_processor.post_process_object_detection(ue,fe,B,!0)[0];ve=xe.boxes.map((Ne,Fe)=>({score:xe.scores[Fe],label:V[xe.classes[Fe]],box:_(Ne,!Ee)}))}ve.sort((xe,Ne)=>Ne.score-xe.score),Ce!==null&&(ve=ve.slice(0,Ce)),Ge.push(ve)}return Oe?Ge:Ge[0]}}class F extends E{constructor(Q){super(Q)}async _call(Q,V,fe={}){const Ce=(await h(Q))[0],{pixel_values:Ee}=await this.processor(Ce),Oe=`<s_docvqa><s_question>${V}</s_question><s_answer>`,Ie=this.tokenizer(Oe,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,ze=await this.model.generate({inputs:Ee,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Ie,...fe}),Ge=this.tokenizer.batch_decode(ze)[0].match(/<s_answer>(.*?)<\/s_answer>/);let D=null;return Ge&&Ge.length>=2&&(D=Ge[1].trim()),[{answer:D}]}}class K extends E{constructor(V){super(V);X(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=V.vocoder??null}async _call(V,{speaker_embeddings:fe=null}={}){return this.processor?this._call_text_to_spectrogram(V,{speaker_embeddings:fe}):this._call_text_to_waveform(V)}async _call_text_to_waveform(V){const fe=this.tokenizer(V,{padding:!0,truncation:!0}),{waveform:Ce}=await this.model(fe),Ee=this.model.config.sampling_rate;return new c.RawAudio(Ce.data,Ee)}async _call_text_to_spectrogram(V,{speaker_embeddings:fe}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await a.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof fe=="string"||fe instanceof URL)&&(fe=new Float32Array(await(await fetch(fe)).arrayBuffer())),fe instanceof Float32Array)fe=new p.Tensor("float32",fe,[1,fe.length]);else if(!(fe instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Ce}=this.tokenizer(V,{padding:!0,truncation:!0}),{waveform:Ee}=await this.model.generate_speech(Ce,fe,{vocoder:this.vocoder}),Oe=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(Ee.data,Oe)}}class ae extends E{constructor(Q){super(Q)}async _call(Q){const V=await h(Q),fe=await this.processor(V),Ce=await this.model(fe),Ee=[];for(const Oe of Ce.reconstruction){const Ie=Oe.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ee.push(d.RawImage.fromTensor(Ie))}return Ee.length>1?Ee:Ee[0]}}class Z extends E{constructor(Q){super(Q)}async _call(Q){const V=await h(Q),fe=await this.processor(V),{predicted_depth:Ce}=await this.model(fe),Ee=[];for(let Oe=0;Oe<V.length;++Oe){const Ie=Ce[Oe],[ze,je]=Ie.dims.slice(-2),[Ge,D]=V[Oe].size,se=(await(0,p.interpolate_4d)(Ie.view(1,1,ze,je),{size:[D,Ge],mode:"bilinear"})).view(D,Ge),B=se.min().item(),ne=se.max().item(),ue=se.sub(B).div_(ne-B).mul_(255).to("uint8").unsqueeze(0),ve=d.RawImage.fromTensor(ue);Ee.push({predicted_depth:se,depth:ve})}return Ee.length>1?Ee:Ee[0]}}const we=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:A,model:a.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:M,model:a.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:y,model:a.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:k,model:a.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:b,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:w,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:P,model:a.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:$,model:a.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:z,model:a.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:J,model:a.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:W,model:a.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:te,model:[a.AutoModelForSpeechSeq2Seq,a.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:K,model:[a.AutoModelForTextToWaveform,a.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:H,model:a.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:R,model:a.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:q,model:[a.AutoModelForImageSegmentation,a.AutoModelForSemanticSegmentation,a.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ee,model:[a.AutoModelForImageSegmentation,a.AutoModelForSemanticSegmentation,a.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:le,model:a.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:de,model:a.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:j,model:a.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:F,model:a.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ae,model:a.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Z,model:a.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:N,model:a.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:Y,model:[a.AutoModelForImageFeatureExtraction,a.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),_e=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Ae(Me,Q=null,{progress_callback:V=null,config:fe=null,cache_dir:Ce=null,local_files_only:Ee=!1,revision:Oe="main",device:Ie=null,dtype:ze=null,subfolder:je="onnx",use_external_data_format:Ge=null,model_file_name:D=null,session_options:se={}}={}){Me=_e[Me]??Me;const B=we[Me.split("_",1)[0]];if(!B)throw Error(`Unsupported pipeline: ${Me}. Must be one of [${Object.keys(we)}]`);Q||(Q=B.default.model,console.log(`No model specified. Using default model: "${Q}".`));const ne={progress_callback:V,config:fe,cache_dir:Ce,local_files_only:Ee,revision:Oe,device:Ie,dtype:ze,subfolder:je,use_external_data_format:Ge,model_file_name:D,session_options:se},ue=new Map([["tokenizer",B.tokenizer],["model",B.model],["processor",B.processor]]),ve=await qe(ue,Q,ne);ve.task=Me,(0,o.dispatchCallback)(V,{status:"ready",task:Me,model:Q});const xe=B.pipeline;return new xe(ve)}async function qe(Me,Q,V){const fe=Object.create(null),Ce=[];for(const[Ee,Oe]of Me.entries()){if(!Oe)continue;let Ie;Array.isArray(Oe)?Ie=new Promise(async(ze,je)=>{var D,se;let Ge;for(const B of Oe){if(B===null){ze(null);return}try{ze(await B.from_pretrained(Q,V));return}catch(ne){if((D=ne.message)!=null&&D.includes("Unsupported model type"))Ge=ne;else if((se=ne.message)!=null&&se.includes("Could not locate file"))Ge=ne;else{je(ne);return}}}je(Ge)}):Ie=Oe.from_pretrained(Q,V),fe[Ee]=Ie,Ce.push(Ie)}await Promise.all(Ce);for(const[Ee,Oe]of Object.entries(fe))fe[Ee]=await Oe;return fe}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>Yr,AutoTokenizer:()=>Kn,BartTokenizer:()=>Cs,BertTokenizer:()=>is,BlenderbotSmallTokenizer:()=>cs,BlenderbotTokenizer:()=>Rr,BloomTokenizer:()=>os,CLIPTokenizer:()=>Un,CamembertTokenizer:()=>it,CodeGenTokenizer:()=>ls,CodeLlamaTokenizer:()=>hn,CohereTokenizer:()=>Gn,ConvBertTokenizer:()=>br,DebertaTokenizer:()=>Bs,DebertaV2Tokenizer:()=>Rs,DistilBertTokenizer:()=>tt,ElectraTokenizer:()=>Nt,EsmTokenizer:()=>gn,FalconTokenizer:()=>$s,GPT2Tokenizer:()=>Ps,GPTNeoXTokenizer:()=>_n,GemmaTokenizer:()=>Wr,Grok1Tokenizer:()=>js,HerbertTokenizer:()=>Ys,LlamaTokenizer:()=>pn,M2M100Tokenizer:()=>en,MBart50Tokenizer:()=>Ss,MBartTokenizer:()=>Ir,MPNetTokenizer:()=>mn,MarianTokenizer:()=>Wn,MgpstrTokenizer:()=>Vs,MobileBertTokenizer:()=>Es,NllbTokenizer:()=>Zs,NougatTokenizer:()=>vr,PreTrainedTokenizer:()=>ut,Qwen2Tokenizer:()=>wn,RoFormerTokenizer:()=>Re,RobertaTokenizer:()=>ks,SiglipTokenizer:()=>Gr,SpeechT5Tokenizer:()=>gr,SqueezeBertTokenizer:()=>zs,T5Tokenizer:()=>zr,TokenizerModel:()=>Y,VitsTokenizer:()=>rn,Wav2Vec2CTCTokenizer:()=>tn,WhisperTokenizer:()=>Br,XLMRobertaTokenizer:()=>fn,XLMTokenizer:()=>cr,is_chinese_char:()=>k});var s=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),o=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function d(he,O){const U=await Promise.all([(0,n.getModelJSON)(he,"tokenizer.json",!0,O),(0,n.getModelJSON)(he,"tokenizer_config.json",!0,O)]);return O.legacy!==null&&(U[1].legacy=O.legacy),U}function h(he,O){const U=[];let re=0;for(const ce of he.matchAll(O)){const pe=ce[0];re<ce.index&&U.push(he.slice(re,ce.index)),pe.length>0&&U.push(pe),re=ce.index+pe.length}return re<he.length&&U.push(he.slice(re)),U}function g(he,O=!0){if(he.Regex!==void 0){let U=he.Regex.replace(/\\([#&~])/g,"$1");for(const[re,ce]of z)U=U.replaceAll(re,ce);return new RegExp(U,"gu")}else if(he.String!==void 0){const U=(0,a.escapeRegExp)(he.String);return new RegExp(O?U:`(${U})`,"gu")}else return console.warn("Unknown pattern type:",he),null}function _(he){return new Map(Object.entries(he))}function E(he){const O=he.dims;switch(O.length){case 1:return he.tolist();case 2:if(O[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return he.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${O.length}.`)}}function A(he){return he.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function M(he){return he.replace(new RegExp("\\p{M}","gu"),"")}function y(he){return M(he.toLowerCase())}function k(he){return he>=19968&&he<=40959||he>=13312&&he<=19903||he>=131072&&he<=173791||he>=173824&&he<=177983||he>=177984&&he<=178207||he>=178208&&he<=183983||he>=63744&&he<=64255||he>=194560&&he<=195103}function P(he,O,U){const re=[];let ce=0;for(;ce<he.length;){if(re.push(he[ce]),(O.get(he[ce])??U)!==U){++ce;continue}for(;++ce<he.length&&(O.get(he[ce])??U)===U;)O.get(re.at(-1))!==U&&(re[re.length-1]+=he[ce])}return re}function b(he){return he.match(/\S+/g)||[]}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",T=new RegExp(`^[${w}]+$`,"gu"),$=".,!?…。，、।۔،",z=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${$}])]+`,` ?[^\\s${$}]+`]]);class N{constructor(O){this.content=O.content,this.id=O.id,this.single_word=O.single_word??!1,this.lstrip=O.lstrip??!1,this.rstrip=O.rstrip??!1,this.special=O.special??!1,this.normalized=O.normalized??null}}class Y extends s.Callable{constructor(O){super(),this.config=O,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(O,...U){switch(O.type){case"WordPiece":return new J(O);case"Unigram":return new W(O,...U);case"BPE":return new R(O);default:if(O.vocab)return Array.isArray(O.vocab)?new W(O,...U):typeof O.vocab=="object"&&O.continuing_subword_prefix&&O.unk_token?new J(O):new q(O,...U);throw new Error(`Unknown TokenizerModel type: ${O.type}`)}}_call(O){return O=this.encode(O),this.fuse_unk&&(O=P(O,this.tokens_to_ids,this.unk_token_id)),O}encode(O){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(O){return O.map(U=>this.tokens_to_ids.get(U)??this.unk_token_id)}convert_ids_to_tokens(O){return O.map(U=>this.vocab[U]??this.unk_token)}}class J extends Y{constructor(O){super(O),this.tokens_to_ids=_(O.vocab),this.unk_token_id=this.tokens_to_ids.get(O.unk_token),this.unk_token=O.unk_token,this.max_input_chars_per_word=O.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[U,re]of this.tokens_to_ids)this.vocab[re]=U}encode(O){const U=[];for(const re of O){const ce=[...re];if(ce.length>this.max_input_chars_per_word){U.push(this.unk_token);continue}let pe=!1,Se=0;const We=[];for(;Se<ce.length;){let Xe=ce.length,He=null;for(;Se<Xe;){let et=ce.slice(Se,Xe).join("");if(Se>0&&(et=this.config.continuing_subword_prefix+et),this.tokens_to_ids.has(et)){He=et;break}--Xe}if(He===null){pe=!0;break}We.push(He),Se=Xe}pe?U.push(this.unk_token):U.push(...We)}return U}}class W extends Y{constructor(O,U){super(O);const re=O.vocab.length;this.vocab=new Array(re),this.scores=new Array(re);for(let ce=0;ce<re;++ce)[this.vocab[ce],this.scores[ce]]=O.vocab[ce];this.unk_token_id=O.unk_id,this.unk_token=this.vocab[O.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ce,pe)=>[ce,pe])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(O){const U=O.chars,re=1;let ce=0;for(;ce<U.length;){let pe=!1;const Se=U.slice(ce).join(""),We=this.trie.commonPrefixSearch(Se);for(const Xe of We){const He=this.tokens_to_ids.get(Xe),et=this.scores[He],ft=(0,a.len)(Xe);O.insert(ce,ft,et,He),!pe&&ft===re&&(pe=!0)}pe||O.insert(ce,re,this.unk_score,this.unk_token_id),ce+=re}}tokenize(O){const U=new l.TokenLattice(O,this.bos_token_id,this.eos_token_id);return this.populateNodes(U),U.tokens()}encode(O){const U=[];for(const re of O){const ce=this.tokenize(re);U.push(...ce)}return U}}const te=(()=>{const he=[...Array.from({length:94},(ce,pe)=>pe+33),...Array.from({length:12},(ce,pe)=>pe+161),...Array.from({length:82},(ce,pe)=>pe+174)],O=he.slice();let U=0;for(let ce=0;ce<256;++ce)he.includes(ce)||(he.push(ce),O.push(256+U),U+=1);const re=O.map(ce=>String.fromCharCode(ce));return Object.fromEntries(he.map((ce,pe)=>[ce,re[pe]]))})(),H=(0,a.reverseDictionary)(te);class R extends Y{constructor(O){super(O),this.tokens_to_ids=_(O.vocab),this.unk_token_id=this.tokens_to_ids.get(O.unk_token),this.unk_token=O.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[re,ce]of this.tokens_to_ids)this.vocab[ce]=re;const U=Array.isArray(O.merges[0]);this.merges=U?O.merges:O.merges.map(re=>re.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((re,ce)=>[JSON.stringify(re),ce])),this.end_of_word_suffix=O.end_of_word_suffix,this.continuing_subword_suffix=O.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(O){if(O.length===0)return[];const U=this.cache.get(O);if(U!==void 0)return U;const re=Array.from(O);this.end_of_word_suffix&&(re[re.length-1]+=this.end_of_word_suffix);let ce=[];if(re.length>1){const pe=new l.PriorityQueue((Xe,He)=>Xe.score<He.score);let Se={token:re[0],bias:0,prev:null,next:null},We=Se;for(let Xe=1;Xe<re.length;++Xe){const He={bias:Xe/re.length,token:re[Xe],prev:We,next:null};We.next=He,this._add_node(pe,We),We=He}for(;!pe.isEmpty();){const Xe=pe.pop();if(Xe.deleted||!Xe.next||Xe.next.deleted)continue;if(Xe.deleted=!0,Xe.next.deleted=!0,Xe.prev){const et={...Xe.prev};Xe.prev.deleted=!0,Xe.prev=et,et.prev?et.prev.next=et:Se=et}const He={token:Xe.token+Xe.next.token,bias:Xe.bias,prev:Xe.prev,next:Xe.next.next};He.prev?(He.prev.next=He,this._add_node(pe,He.prev)):Se=He,He.next&&(He.next.prev=He,this._add_node(pe,He))}for(let Xe=Se;Xe!==null;Xe=Xe.next)ce.push(Xe.token)}else ce=re;if(this.continuing_subword_suffix)for(let pe=0;pe<ce.length-1;++pe)ce[pe]+=this.continuing_subword_suffix;return this.cache.set(O,ce),ce}_add_node(O,U){const re=this.bpe_ranks.get(JSON.stringify([U.token,U.next.token]));re!==void 0&&(U.score=re+U.bias,O.push(U))}encode(O){const U=[];for(const re of O){if(this.ignore_merges&&this.tokens_to_ids.has(re)){U.push(re);continue}const ce=this.bpe(re);for(const pe of ce)if(this.tokens_to_ids.has(pe))U.push(pe);else if(this.byte_fallback){const Se=Array.from(this.text_encoder.encode(pe)).map(We=>`<0x${We.toString(16).toUpperCase().padStart(2,"0")}>`);Se.every(We=>this.tokens_to_ids.has(We))?U.push(...Se):U.push(this.unk_token)}else U.push(this.unk_token)}return U}}class q extends Y{constructor(O,U){super(O),this.tokens_to_ids=_(U.target_lang?O.vocab[U.target_lang]:O.vocab),this.bos_token=U.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=U.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=U.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[re,ce]of this.tokens_to_ids)this.vocab[ce]=re}encode(O){return O}}class ee extends s.Callable{constructor(O){super(),this.config=O}static fromConfig(O){if(O===null)return null;switch(O.type){case"BertNormalizer":return new Me(O);case"Precompiled":return new Gt(O);case"Sequence":return new qe(O);case"Replace":return new le(O);case"NFC":return new j(O);case"NFD":return new F(O);case"NFKC":return new K(O);case"NFKD":return new ae(O);case"Strip":return new Z(O);case"StripAccents":return new we(O);case"Lowercase":return new _e(O);case"Prepend":return new Ae(O);default:throw new Error(`Unknown Normalizer type: ${O.type}`)}}normalize(O){throw Error("normalize should be implemented in subclass.")}_call(O){return this.normalize(O)}}class le extends ee{normalize(O){const U=g(this.config.pattern);return U===null?O:O.replaceAll(U,this.config.content)}}class de extends ee{constructor(){super(...arguments);X(this,"form")}normalize(U){return U=U.normalize(this.form),U}}class j extends de{constructor(){super(...arguments);X(this,"form","NFC")}}class F extends de{constructor(){super(...arguments);X(this,"form","NFD")}}class K extends de{constructor(){super(...arguments);X(this,"form","NFKC")}}class ae extends de{constructor(){super(...arguments);X(this,"form","NFKD")}}class Z extends ee{normalize(O){return this.config.strip_left&&this.config.strip_right?O=O.trim():(this.config.strip_left&&(O=O.trimStart()),this.config.strip_right&&(O=O.trimEnd())),O}}class we extends ee{normalize(O){return O=M(O),O}}class _e extends ee{normalize(O){return O=O.toLowerCase(),O}}class Ae extends ee{normalize(O){return O=this.config.prepend+O,O}}class qe extends ee{constructor(O){super(O),this.normalizers=O.normalizers.map(U=>ee.fromConfig(U))}normalize(O){return this.normalizers.reduce((U,re)=>re.normalize(U),O)}}class Me extends ee{_tokenize_chinese_chars(O){const U=[];for(let re=0;re<O.length;++re){const ce=O[re],pe=ce.charCodeAt(0);k(pe)?(U.push(" "),U.push(ce),U.push(" ")):U.push(ce)}return U.join("")}stripAccents(O){return O.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(O){switch(O){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(O)}}_clean_text(O){const U=[];for(const re of O){const ce=re.charCodeAt(0);ce===0||ce===65533||this._is_control(re)||(/^\s$/.test(re)?U.push(" "):U.push(re))}return U.join("")}normalize(O){return this.config.clean_text&&(O=this._clean_text(O)),this.config.handle_chinese_chars&&(O=this._tokenize_chinese_chars(O)),this.config.lowercase?(O=O.toLowerCase(),this.config.strip_accents!==!1&&(O=this.stripAccents(O))):this.config.strip_accents&&(O=this.stripAccents(O)),O}}class Q extends s.Callable{static fromConfig(O){if(O===null)return null;switch(O.type){case"BertPreTokenizer":return new V(O);case"Sequence":return new _r(O);case"Whitespace":return new xs(O);case"WhitespaceSplit":return new Xs(O);case"Metaspace":return new Mt(O);case"ByteLevel":return new fe(O);case"Split":return new Ce(O);case"Punctuation":return new Ee(O);case"Digits":return new Oe(O);case"Replace":return new Ur(O);default:throw new Error(`Unknown PreTokenizer type: ${O.type}`)}}pre_tokenize_text(O,U){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(O,U){return(Array.isArray(O)?O.map(re=>this.pre_tokenize_text(re,U)):this.pre_tokenize_text(O,U)).flat()}_call(O,U){return this.pre_tokenize(O,U)}}class V extends Q{constructor(O){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(O,U){return O.trim().match(this.pattern)||[]}}class fe extends Q{constructor(O){super(),this.config=O,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=te,this.text_encoder=new TextEncoder}pre_tokenize_text(O,U){return this.add_prefix_space&&!O.startsWith(" ")&&(O=" "+O),(this.use_regex?O.match(this.pattern)||[]:[O]).map(ce=>Array.from(this.text_encoder.encode(ce),pe=>this.byte_encoder[pe]).join(""))}}class Ce extends Q{constructor(O){super(),this.config=O,this.pattern=g(this.config.pattern,this.config.invert)}pre_tokenize_text(O,U){var re;return this.pattern===null?[]:this.config.invert?O.match(this.pattern)||[]:((re=this.config.behavior)==null?void 0:re.toLowerCase())==="removed"?O.split(this.pattern).filter(ce=>ce):h(O,this.pattern)}}class Ee extends Q{constructor(O){super(),this.config=O,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(O,U){return O.match(this.pattern)||[]}}class Oe extends Q{constructor(O){super(),this.config=O;const U=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(U,"gu")}pre_tokenize_text(O,U){return O.match(this.pattern)||[]}}class Ie extends s.Callable{constructor(O){super(),this.config=O}static fromConfig(O){if(O===null)return null;switch(O.type){case"TemplateProcessing":return new Ge(O);case"ByteLevel":return new D(O);case"RobertaProcessing":return new je(O);case"BertProcessing":return new ze(O);case"Sequence":return new se(O);default:throw new Error(`Unknown PostProcessor type: ${O.type}`)}}post_process(O,...U){throw Error("post_process should be implemented in subclass.")}_call(O,...U){return this.post_process(O,...U)}}class ze extends Ie{constructor(O){super(O),this.cls=O.cls[0],this.sep=O.sep[0]}post_process(O,U=null,{add_special_tokens:re=!0}={}){re&&(O=(0,a.mergeArrays)([this.cls],O,[this.sep]));let ce=new Array(O.length).fill(0);if(U!==null){const pe=re&&this instanceof je?[this.sep]:[],Se=re?[this.sep]:[];O=(0,a.mergeArrays)(O,pe,U,Se),ce=(0,a.mergeArrays)(ce,new Array(U.length+pe.length+Se.length).fill(1))}return{tokens:O,token_type_ids:ce}}}class je extends ze{}class Ge extends Ie{constructor(O){super(O),this.single=O.single,this.pair=O.pair}post_process(O,U=null,{add_special_tokens:re=!0}={}){const ce=U===null?this.single:this.pair;let pe=[],Se=[];for(const We of ce)"SpecialToken"in We?re&&(pe.push(We.SpecialToken.id),Se.push(We.SpecialToken.type_id)):"Sequence"in We&&(We.Sequence.id==="A"?(pe=(0,a.mergeArrays)(pe,O),Se=(0,a.mergeArrays)(Se,new Array(O.length).fill(We.Sequence.type_id))):We.Sequence.id==="B"&&(pe=(0,a.mergeArrays)(pe,U),Se=(0,a.mergeArrays)(Se,new Array(U.length).fill(We.Sequence.type_id))));return{tokens:pe,token_type_ids:Se}}}class D extends Ie{post_process(O,U=null){return U&&(O=(0,a.mergeArrays)(O,U)),{tokens:O}}}class se extends Ie{constructor(O){super(O),this.processors=O.processors.map(U=>Ie.fromConfig(U))}post_process(O,U=null,re={}){let ce;for(const pe of this.processors)if(pe instanceof D)O=pe.post_process(O).tokens,U&&(U=pe.post_process(U).tokens);else{const Se=pe.post_process(O,U,re);O=Se.tokens,ce=Se.token_type_ids}return{tokens:O,token_type_ids:ce}}}class B extends s.Callable{constructor(O){super(),this.config=O,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=O.trim_offsets}static fromConfig(O){if(O===null)return null;switch(O.type){case"WordPiece":return new Ne(O);case"Metaspace":return new dr(O);case"ByteLevel":return new Fe(O);case"Replace":return new ne(O);case"ByteFallback":return new ue(O);case"Fuse":return new ve(O);case"Strip":return new xe(O);case"Sequence":return new Qe(O);case"CTC":return new Ve(O);case"BPEDecoder":return new Je(O);default:throw new Error(`Unknown Decoder type: ${O.type}`)}}_call(O){return this.decode(O)}decode(O){return this.decode_chain(O).join("")}decode_chain(O){throw Error("`decode_chain` should be implemented in subclass.")}}class ne extends B{decode_chain(O){const U=g(this.config.pattern);return U===null?O:O.map(re=>re.replaceAll(U,this.config.content))}}class ue extends B{constructor(O){super(O),this.text_decoder=new TextDecoder}decode_chain(O){const U=[];let re=[];for(const ce of O){let pe=null;if(ce.length===6&&ce.startsWith("<0x")&&ce.endsWith(">")){const Se=parseInt(ce.slice(3,5),16);isNaN(Se)||(pe=Se)}if(pe!==null)re.push(pe);else{if(re.length>0){const Se=this.text_decoder.decode(Uint8Array.from(re));U.push(Se),re=[]}U.push(ce)}}if(re.length>0){const ce=this.text_decoder.decode(Uint8Array.from(re));U.push(ce),re=[]}return U}}class ve extends B{decode_chain(O){return[O.join("")]}}class xe extends B{constructor(O){super(O),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(O){return O.map(U=>{let re=0;for(let pe=0;pe<this.start&&U[pe]===this.content;++pe){re=pe+1;continue}let ce=U.length;for(let pe=0;pe<this.stop;++pe){const Se=U.length-pe-1;if(U[Se]===this.content){ce=Se;continue}else break}return U.slice(re,ce)})}}class Ne extends B{constructor(O){super(O),this.cleanup=O.cleanup}decode_chain(O){return O.map((U,re)=>(re!==0&&(U.startsWith(this.config.prefix)?U=U.replace(this.config.prefix,""):U=" "+U),this.cleanup&&(U=A(U)),U))}}class Fe extends B{constructor(O){super(O),this.byte_decoder=H,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(O){const U=O.join(""),re=new Uint8Array([...U].map(pe=>this.byte_decoder[pe]));return this.text_decoder.decode(re)}decode_chain(O){const U=[];let re=[];for(const ce of O)this.added_tokens.find(pe=>pe.content===ce)!==void 0?(re.length>0&&(U.push(this.convert_tokens_to_string(re)),re=[]),U.push(ce)):re.push(ce);return re.length>0&&U.push(this.convert_tokens_to_string(re)),U}}class Ve extends B{constructor(O){super(O),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(O){if(O.length===0)return"";const U=[O[0]];for(let pe=1;pe<O.length;++pe)O[pe]!==U.at(-1)&&U.push(O[pe]);let ce=U.filter(pe=>pe!==this.pad_token).join("");return this.cleanup&&(ce=A(ce).replaceAll(this.word_delimiter_token," ").trim()),ce}decode_chain(O){return[this.convert_tokens_to_string(O)]}}class Qe extends B{constructor(O){super(O),this.decoders=O.decoders.map(U=>B.fromConfig(U))}decode_chain(O){return this.decoders.reduce((U,re)=>re.decode_chain(U),O)}}class Je extends B{constructor(O){super(O),this.suffix=this.config.suffix}decode_chain(O){return O.map((U,re)=>U.replaceAll(this.suffix,re===O.length-1?"":" "))}}class pt extends B{decode_chain(O){let U="";for(let re=1;re<O.length;re+=2)U+=O[re];return[U]}}class Mt extends Q{constructor(O){super(),this.addPrefixSpace=O.add_prefix_space,this.replacement=O.replacement,this.strRep=O.str_rep||this.replacement,this.prepend_scheme=O.prepend_scheme??"always"}pre_tokenize_text(O,{section_index:U=void 0}={}){let re=O.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!re.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&U===0)&&(re=this.strRep+re),[re]}}class dr extends B{constructor(O){super(O),this.addPrefixSpace=O.add_prefix_space,this.replacement=O.replacement}decode_chain(O){const U=[];for(let re=0;re<O.length;++re){let ce=O[re].replaceAll(this.replacement," ");this.addPrefixSpace&&re==0&&ce.startsWith(" ")&&(ce=ce.substring(1)),U.push(ce)}return U}}class Gt extends ee{constructor(O){super(O),this.charsmap=O.precompiled_charsmap}normalize(O){return O=O.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),O=O.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),O.includes("～")?O=O.split("～").map(re=>re.normalize("NFKC")).join("～"):O=O.normalize("NFKC"),O}}class _r extends Q{constructor(O){super(),this.tokenizers=O.pretokenizers.map(U=>Q.fromConfig(U))}pre_tokenize_text(O,U){return this.tokenizers.reduce((re,ce)=>ce.pre_tokenize(re,U),[O])}}class xs extends Q{constructor(O){super()}pre_tokenize_text(O,U){return O.match(/\w+|[^\w\s]+/g)||[]}}class Xs extends Q{constructor(O){super()}pre_tokenize_text(O,U){return b(O)}}class Ur extends Q{constructor(O){super(),this.config=O,this.pattern=g(this.config.pattern),this.content=this.config.content}pre_tokenize_text(O,U){return this.pattern===null?[O]:[O.replaceAll(this.pattern,this.config.content)]}}const Ts=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Js(he,O,U,re){for(const ce of Object.keys(he)){const pe=O-he[ce].length,Se=U(ce),We=new Array(pe).fill(Se);he[ce]=re==="right"?(0,a.mergeArrays)(he[ce],We):(0,a.mergeArrays)(We,he[ce])}}function Jr(he,O){for(const U of Object.keys(he))he[U].length=O}class ut extends s.Callable{constructor(U,re){super();X(this,"return_token_type_ids",!1);X(this,"padding_side","right");this._tokenizer_config=re,this.normalizer=ee.fromConfig(U.normalizer),this.pre_tokenizer=Q.fromConfig(U.pre_tokenizer),this.model=Y.fromConfig(U.model,re),this.post_processor=Ie.fromConfig(U.post_processor),this.decoder=B.fromConfig(U.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ce of U.added_tokens){const pe=new N(ce);this.added_tokens.push(pe),this.model.tokens_to_ids.set(pe.content,pe.id),this.model.vocab[pe.id]=pe.content,pe.special&&(this.special_tokens.push(pe.content),this.all_special_ids.push(pe.id))}if(this.additional_special_tokens=re.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(ce=>ce.content)),this.added_tokens_map=new Map(this.added_tokens.map(ce=>[ce.content,ce])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=re.model_max_length,this.remove_space=re.remove_space,this.clean_up_tokenization_spaces=re.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=re.do_lowercase_and_remove_accent??!1,re.padding_side&&(this.padding_side=re.padding_side),this.legacy=!1,this.chat_template=re.chat_template??null,Array.isArray(this.chat_template)){const ce=Object.create(null);for(const{name:pe,template:Se}of this.chat_template){if(typeof pe!="string"||typeof Se!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ce[pe]=Se}this.chat_template=ce}this._compiled_template_cache=new Map}getToken(...U){for(const re of U){const ce=this._tokenizer_config[re];if(ce)if(typeof ce=="object"){if(ce.__type==="AddedToken")return ce.content;throw Error(`Unknown token: ${ce}`)}else return ce}return null}static async from_pretrained(U,{progress_callback:re=null,config:ce=null,cache_dir:pe=null,local_files_only:Se=!1,revision:We="main",legacy:Xe=null}={}){const He=await d(U,{progress_callback:re,config:ce,cache_dir:pe,local_files_only:Se,revision:We,legacy:Xe});return new this(...He)}_call(U,{text_pair:re=null,add_special_tokens:ce=!0,padding:pe=!1,truncation:Se=null,max_length:We=null,return_tensor:Xe=!0,return_token_type_ids:He=null}={}){const et=Array.isArray(U);let ft;if(et){if(U.length===0)throw Error("text array must be non-empty");if(re!==null){if(Array.isArray(re)){if(U.length!==re.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");ft=U.map((It,Qt)=>this._encode_plus(It,{text_pair:re[Qt],add_special_tokens:ce,return_token_type_ids:He}))}else ft=U.map(It=>this._encode_plus(It,{add_special_tokens:ce,return_token_type_ids:He}))}else{if(U==null)throw Error("text may not be null or undefined");if(Array.isArray(re))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");ft=[this._encode_plus(U,{text_pair:re,add_special_tokens:ce,return_token_type_ids:He})]}if(We===null?pe==="max_length"?We=this.model_max_length:We=(0,i.max)(ft.map(It=>It.input_ids.length))[0]:Se||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),We=Math.min(We,this.model_max_length??1/0),pe||Se)for(let It=0;It<ft.length;++It)ft[It].input_ids.length!==We&&(ft[It].input_ids.length>We?Se&&Jr(ft[It],We):pe&&Js(ft[It],We,Qt=>Qt==="input_ids"?this.pad_token_id:0,this.padding_side));const kt={};if(Xe){if(!(pe&&Se)&&ft.some(Qt=>{var Lt;for(const Ht of Object.keys(Qt))if(Qt[Ht].length!==((Lt=ft[0][Ht])==null?void 0:Lt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const It=[ft.length,ft[0].input_ids.length];for(const Qt of Object.keys(ft[0]))kt[Qt]=new o.Tensor("int64",BigInt64Array.from(ft.flatMap(Lt=>Lt[Qt]).map(BigInt)),It)}else{for(const It of Object.keys(ft[0]))kt[It]=ft.map(Qt=>Qt[It]);if(!et)for(const It of Object.keys(kt))kt[It]=kt[It][0]}return kt}_encode_text(U){if(U===null)return null;const re=this.added_tokens_splitter.split(U);for(let pe=0;pe<re.length;++pe){const Se=this.added_tokens_map.get(re[pe]);Se&&(Se.lstrip&&pe>0&&(re[pe-1]=re[pe-1].trimEnd()),Se.rstrip&&pe<re.length-1&&(re[pe+1]=re[pe+1].trimStart()))}return re.flatMap((pe,Se)=>{if(pe.length===0)return[];if(this.added_tokens_map.has(pe))return[pe];if(this.remove_space===!0&&(pe=pe.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(pe=y(pe)),this.normalizer!==null&&(pe=this.normalizer(pe)),pe.length===0)return[];const We=this.pre_tokenizer!==null?this.pre_tokenizer(pe,{section_index:Se}):[pe];return this.model(We)})}_encode_plus(U,{text_pair:re=null,add_special_tokens:ce=!0,return_token_type_ids:pe=null}={}){const{tokens:Se,token_type_ids:We}=this._tokenize_helper(U,{pair:re,add_special_tokens:ce}),Xe=this.model.convert_tokens_to_ids(Se),He={input_ids:Xe,attention_mask:new Array(Xe.length).fill(1)};return(pe??this.return_token_type_ids)&&We&&(He.token_type_ids=We),He}_tokenize_helper(U,{pair:re=null,add_special_tokens:ce=!1}={}){const pe=this._encode_text(U),Se=this._encode_text(re);return this.post_processor?this.post_processor(pe,Se,{add_special_tokens:ce}):{tokens:(0,a.mergeArrays)(pe??[],Se??[])}}tokenize(U,{pair:re=null,add_special_tokens:ce=!1}={}){return this._tokenize_helper(U,{pair:re,add_special_tokens:ce}).tokens}encode(U,{text_pair:re=null,add_special_tokens:ce=!0,return_token_type_ids:pe=null}={}){return this._encode_plus(U,{text_pair:re,add_special_tokens:ce,return_token_type_ids:pe}).input_ids}batch_decode(U,re={}){return U instanceof o.Tensor&&(U=U.tolist()),U.map(ce=>this.decode(ce,re))}decode(U,re={}){if(U instanceof o.Tensor&&(U=E(U)),!Array.isArray(U)||U.length===0||!(0,a.isIntegralNumber)(U[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(U,re)}decode_single(U,{skip_special_tokens:re=!1,clean_up_tokenization_spaces:ce=null}){let pe=this.model.convert_ids_to_tokens(U);re&&(pe=pe.filter(We=>!this.special_tokens.includes(We)));let Se=this.decoder?this.decoder(pe):pe.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Se=Se.replaceAll(this.decoder.end_of_word_suffix," "),re&&(Se=Se.trim())),(ce??this.clean_up_tokenization_spaces)&&(Se=A(Se)),Se}get_chat_template({chat_template:U=null,tools:re=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ce=this.chat_template;if(U!==null&&Object.hasOwn(ce,U))U=ce[U];else if(U===null)if(re!==null&&"tool_use"in ce)U=ce.tool_use;else if("default"in ce)U=ce.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ce).sort()}.`)}else if(U===null)if(this.chat_template)U=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return U}apply_chat_template(U,{tools:re=null,documents:ce=null,chat_template:pe=null,add_generation_prompt:Se=!1,tokenize:We=!0,padding:Xe=!1,truncation:He=!1,max_length:et=null,return_tensor:ft=!0,return_dict:kt=!1,tokenizer_kwargs:It={},...Qt}={}){if(pe=this.get_chat_template({chat_template:pe,tools:re}),typeof pe!="string")throw Error(`chat_template must be a string, but got ${typeof pe}`);let Lt=this._compiled_template_cache.get(pe);Lt===void 0&&(Lt=new c.Template(pe),this._compiled_template_cache.set(pe,Lt));const Ht=Object.create(null);for(const xr of Ts){const us=this.getToken(xr);us&&(Ht[xr]=us)}const kr=Lt.render({messages:U,add_generation_prompt:Se,tools:re,documents:ce,...Ht,...Qt});if(We){const xr=this._call(kr,{add_special_tokens:!1,padding:Xe,truncation:He,max_length:et,return_tensor:ft,...It});return kt?xr:xr.input_ids}return kr}}class is extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class Yr extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class Es extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class zs extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class Bs extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class Rs extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class Ys extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class br extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class Re extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class tt extends ut{}class it extends ut{}class cr extends ut{constructor(U,re){super(U,re);X(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Nt extends ut{constructor(){super(...arguments);X(this,"return_token_type_ids",!0)}}class zr extends ut{}class Ps extends ut{}class Cs extends ut{}class Ir extends ut{constructor(O,U){super(O,U),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(re=>this.languageRegex.test(re)),this.lang_to_token=re=>re}_build_translation_inputs(O,U,re){return Sr(this,O,U,re)}}class Ss extends Ir{}class ks extends ut{}class os extends ut{}const Ns="▁";class pn extends ut{constructor(U,re){super(U,re);X(this,"padding_side","left");this.legacy=re.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Mt({replacement:Ns,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(U){if(U===null)return null;if(this.legacy||U.length===0)return super._encode_text(U);let re=super._encode_text(Ns+U.replaceAll(Ns," "));return re.length>1&&re[0]===Ns&&this.special_tokens.includes(re[1])&&(re=re.slice(1)),re}}class hn extends ut{}class fn extends ut{}class mn extends ut{}class $s extends ut{}class _n extends ut{}class gn extends ut{}class wn extends ut{}class Wr extends ut{}class js extends ut{}function Sr(he,O,U,re){if(!("language_codes"in he)||!Array.isArray(he.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in he)||!(he.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in he)||typeof he.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ce=re.src_lang,pe=re.tgt_lang;if(!he.language_codes.includes(pe))throw new Error(`Target language code "${pe}" is not valid. Must be one of: {${he.language_codes.join(", ")}}`);if(ce!==void 0){if(!he.language_codes.includes(ce))throw new Error(`Source language code "${ce}" is not valid. Must be one of: {${he.language_codes.join(", ")}}`);for(const Se of he.post_processor.config.single)if("SpecialToken"in Se&&he.languageRegex.test(Se.SpecialToken.id)){Se.SpecialToken.id=he.lang_to_token(ce);break}}return re.forced_bos_token_id=he.model.convert_tokens_to_ids([he.lang_to_token(pe)])[0],he._call(O,U)}class Zs extends ut{constructor(O,U){super(O,U),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(re=>this.languageRegex.test(re)),this.lang_to_token=re=>re}_build_translation_inputs(O,U,re){return Sr(this,O,U,re)}}class en extends ut{constructor(O,U){super(O,U),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(re=>this.languageRegex.test(re)).map(re=>re.slice(2,-2)),this.lang_to_token=re=>`__${re}__`}_build_translation_inputs(O,U,re){return Sr(this,O,U,re)}}class Br extends ut{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(O,{return_timestamps:U=!1,return_language:re=!1,time_precision:ce=null,force_full_sequences:pe=!0}={}){if(ce===null)throw Error("Must specify time_precision");let Se=null;const We=U==="word";function Xe(){return{language:Se,timestamp:[null,null],text:""}}const He=[];let et=Xe(),ft=0;const kt=this.timestamp_begin,Qt=kt+1500;let Lt=[],Ht=[],kr=!1,xr=null;const us=new Set(this.all_special_ids);for(const Xt of O){const ir=Xt.tokens,Tr=We?Xt.token_timestamps:null;let ds=null,Is=kt;if("stride"in Xt){const[Ut,sr,Zt]=Xt.stride;if(ft-=sr,xr=Ut-Zt,sr&&(Is=sr/ce+kt),Zt)for(let or=ir.length-1;or>=0;--or){const pr=Number(ir[or]);if(pr>=kt){if(ds!==null&&(pr-kt)*ce<xr)break;ds=pr}}}let Yt=[],wr=[];for(let Ut=0;Ut<ir.length;++Ut){const sr=Number(ir[Ut]);if(us.has(sr)){const Zt=this.decode([sr]),or=p.WHISPER_LANGUAGE_MAPPING.get(Zt.slice(2,-2));if(or!==void 0){if(Se!==null&&or!==Se&&!U){Lt.push(Yt);const pr=this.findLongestCommonSequence(Lt)[0],yn=this.decode(pr);et.text=yn,He.push(et),Lt=[],Yt=[],et=Xe()}Se=et.language=or}}else if(sr>=kt&&sr<=Qt){const Zt=(sr-kt)*ce+ft,or=(0,i.round)(Zt,2);if(ds!==null&&sr>=ds)kr=!0;else if(kr||Lt.length>0&&sr<Is)kr=!1;else if(et.timestamp[0]===null)et.timestamp[0]=or;else if(or!==et.timestamp[0]){et.timestamp[1]=or,Lt.push(Yt),We&&Ht.push(wr);const[pr,yn]=this.findLongestCommonSequence(Lt,Ht),Mn=this.decode(pr);et.text=Mn,We&&(et.words=this.collateWordTimestamps(pr,yn,Se)),He.push(et),Lt=[],Yt=[],Ht=[],wr=[],et=Xe()}}else if(Yt.push(sr),We){let Zt=(0,i.round)(Tr[Ut]+ft,2),or;if(Ut+1<Tr.length){or=(0,i.round)(Tr[Ut+1]+ft,2);const pr=this.decode([sr]);T.test(pr)&&(or=(0,i.round)(Math.min(Zt+ce,or),2))}else or=null;wr.push([Zt,or])}}if("stride"in Xt){const[Ut,sr,Zt]=Xt.stride;ft+=Ut-Zt}Yt.length>0?(Lt.push(Yt),We&&Ht.push(wr)):Lt.every(Ut=>Ut.length===0)&&(et=Xe(),Lt=[],Yt=[],Ht=[],wr=[])}if(Lt.length>0){if(pe&&U)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Xt,ir]=this.findLongestCommonSequence(Lt,Ht),Tr=this.decode(Xt);et.text=Tr,We&&(et.words=this.collateWordTimestamps(Xt,ir,Se)),He.push(et)}let $r=Object.create(null);const As=He.map(Xt=>Xt.text).join("");if(U||re){for(let Xt=0;Xt<He.length;++Xt){const ir=He[Xt];U||delete ir.timestamp,re||delete ir.language}if(We){const Xt=[];for(const ir of He)for(const Tr of ir.words)Xt.push(Tr);$r={chunks:Xt}}else $r={chunks:He}}return[As,$r]}findLongestCommonSequence(O,U=null){let re=O[0],ce=re.length,pe=[];const Se=Array.isArray(U)&&U.length>0;let We=Se?[]:null,Xe=Se?U[0]:null;for(let He=1;He<O.length;++He){const et=O[He];let ft=0,kt=[ce,ce,0,0];const It=et.length;for(let $r=1;$r<ce+It;++$r){const As=Math.max(0,ce-$r),Xt=Math.min(ce,ce+It-$r),ir=re.slice(As,Xt),Tr=Math.max(0,$r-ce),ds=Math.min(It,$r),Is=et.slice(Tr,ds);if(ir.length!==Is.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Yt;Se?Yt=ir.filter((sr,Zt)=>sr===Is[Zt]&&Xe[As+Zt]<=U[He][Tr+Zt]).length:Yt=ir.filter((sr,Zt)=>sr===Is[Zt]).length;const wr=$r/1e4,Ut=Yt/$r+wr;Yt>1&&Ut>ft&&(ft=Ut,kt=[As,Xt,Tr,ds])}const[Qt,Lt,Ht,kr]=kt,xr=Math.floor((Lt+Qt)/2),us=Math.floor((kr+Ht)/2);pe.push(...re.slice(0,xr)),re=et.slice(us),ce=re.length,Se&&(We.push(...Xe.slice(0,xr)),Xe=U[He].slice(us))}return pe.push(...re),Se?(We.push(...Xe),[pe,We]):[pe,[]]}collateWordTimestamps(O,U,re){const[ce,pe,Se]=this.combineTokensIntoWords(O,re),We=[];for(let Xe=0;Xe<ce.length;++Xe){const He=Se[Xe];We.push({text:ce[Xe],timestamp:[U[He.at(0)][0],U[He.at(-1)][1]]})}return We}combineTokensIntoWords(O,U,re=`"'“¡¿([{-`,ce=`"'.。,，!！?？:：”)]}、`){U=U??"english";let pe,Se,We;return["chinese","japanese","thai","lao","myanmar"].includes(U)?[pe,Se,We]=this.splitTokensOnUnicode(O):[pe,Se,We]=this.splitTokensOnSpaces(O),this.mergePunctuations(pe,Se,We,re,ce)}decode(O,U){let re;return U!=null&&U.decode_with_timestamps?(O instanceof o.Tensor&&(O=E(O)),re=this.decodeWithTimestamps(O,U)):re=super.decode(O,U),re}decodeWithTimestamps(O,U){const re=(U==null?void 0:U.time_precision)??.02,ce=Array.from(this.all_special_ids).at(-1)+1;let pe=[[]];for(let Se of O)if(Se=Number(Se),Se>=ce){const We=((Se-ce)*re).toFixed(2);pe.push(`<|${We}|>`),pe.push([])}else pe[pe.length-1].push(Se);return pe=pe.map(Se=>typeof Se=="string"?Se:super.decode(Se,U)),pe.join("")}splitTokensOnUnicode(O){const U=this.decode(O,{decode_with_timestamps:!0}),re="�",ce=[],pe=[],Se=[];let We=[],Xe=[],He=0;for(let et=0;et<O.length;++et){const ft=O[et];We.push(ft),Xe.push(et);const kt=this.decode(We,{decode_with_timestamps:!0});(!kt.includes(re)||U[He+kt.indexOf(re)]===re)&&(ce.push(kt),pe.push(We),Se.push(Xe),We=[],Xe=[],He+=kt.length)}return[ce,pe,Se]}splitTokensOnSpaces(O){const[U,re,ce]=this.splitTokensOnUnicode(O),pe=[],Se=[],We=[],Xe=new RegExp(`^[${w}]$`,"gu");for(let He=0;He<U.length;++He){const et=U[He],ft=re[He],kt=ce[He],It=ft[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Qt=et.startsWith(" "),Lt=et.trim(),Ht=Xe.test(Lt);if(It||Qt||Ht||pe.length===0)pe.push(et),Se.push(ft),We.push(kt);else{const kr=pe.length-1;pe[kr]+=et,Se[kr].push(...ft),We[kr].push(...kt)}}return[pe,Se,We]}mergePunctuations(O,U,re,ce,pe){const Se=structuredClone(O),We=structuredClone(U),Xe=structuredClone(re);let He=Se.length-2,et=Se.length-1;for(;He>=0;)Se[He].startsWith(" ")&&ce.includes(Se[He].trim())?(Se[et]=Se[He]+Se[et],We[et]=(0,a.mergeArrays)(We[He],We[et]),Xe[et]=(0,a.mergeArrays)(Xe[He],Xe[et]),Se[He]="",We[He]=[],Xe[He]=[]):et=He,--He;for(He=0,et=1;et<Se.length;)!Se[He].endsWith(" ")&&pe.includes(Se[et])?(Se[He]+=Se[et],We[He]=(0,a.mergeArrays)(We[He],We[et]),Xe[He]=(0,a.mergeArrays)(Xe[He],Xe[et]),Se[et]="",We[et]=[],Xe[et]=[]):He=et,++et;return[Se.filter(ft=>ft),We.filter(ft=>ft.length>0),Xe.filter(ft=>ft.length>0)]}}class ls extends ut{}class Un extends ut{}class Gr extends ut{}class Wn extends ut{constructor(O,U){super(O,U),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(re=>this.languageRegex.test(re)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(O){if(O===null)return null;const[U,...re]=O.trim().split(this.languageRegex);if(re.length===0)return super._encode_text(U);if(re.length===2){const[ce,pe]=re;return this.supported_language_codes.includes(ce)||console.warn(`Unsupported language code "${ce}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,a.mergeArrays)([ce],super._encode_text(pe))}}}class tn extends ut{}class Rr extends ut{}class cs extends ut{}class gr extends ut{}class vr extends ut{}class rn extends ut{constructor(O,U){super(O,U),this.decoder=new pt({})}}class Gn extends ut{}class Vs extends ut{}class Kn{static async from_pretrained(O,{progress_callback:U=null,config:re=null,cache_dir:ce=null,local_files_only:pe=!1,revision:Se="main",legacy:We=null}={}){var kt;const[Xe,He]=await d(O,{progress_callback:U,config:re,cache_dir:ce,local_files_only:pe,revision:Se,legacy:We}),et=((kt=He.tokenizer_class)==null?void 0:kt.replace(/Fast$/,""))??"PreTrainedTokenizer";let ft=this.TOKENIZER_CLASS_MAPPING[et];return ft||(console.warn(`Unknown tokenizer class "${et}", attempting to construct from base class.`),ft=ut),new ft(Xe,He)}}X(Kn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:zr,DistilBertTokenizer:tt,CamembertTokenizer:it,DebertaTokenizer:Bs,DebertaV2Tokenizer:Rs,BertTokenizer:is,HerbertTokenizer:Ys,ConvBertTokenizer:br,RoFormerTokenizer:Re,XLMTokenizer:cr,ElectraTokenizer:Nt,MobileBertTokenizer:Es,SqueezeBertTokenizer:zs,AlbertTokenizer:Yr,GPT2Tokenizer:Ps,BartTokenizer:Cs,MBartTokenizer:Ir,MBart50Tokenizer:Ss,RobertaTokenizer:ks,WhisperTokenizer:Br,CodeGenTokenizer:ls,CLIPTokenizer:Un,SiglipTokenizer:Gr,MarianTokenizer:Wn,BloomTokenizer:os,NllbTokenizer:Zs,M2M100Tokenizer:en,LlamaTokenizer:pn,CodeLlamaTokenizer:hn,XLMRobertaTokenizer:fn,MPNetTokenizer:mn,FalconTokenizer:$s,GPTNeoXTokenizer:_n,EsmTokenizer:gn,Wav2Vec2CTCTokenizer:tn,BlenderbotTokenizer:Rr,BlenderbotSmallTokenizer:cs,SpeechT5Tokenizer:gr,NougatTokenizer:vr,VitsTokenizer:rn,Qwen2Tokenizer:wn,GemmaTokenizer:Wr,Grok1Tokenizer:js,CohereTokenizer:Gn,MgpstrTokenizer:Vs,PreTrainedTokenizer:ut})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>J,hamming:()=>h,hanning:()=>d,mel_filter_bank:()=>k,read_audio:()=>c,spectrogram:()=>$,window_function:()=>z});var s=t("./src/utils/hub.js"),a=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),i=t("./src/env.js"),o=t("?7a2c"),l=t("./src/utils/tensor.js");async function c(W,te){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const H=await(await(0,s.getFile)(W)).arrayBuffer(),R=new AudioContext({sampleRate:te});typeof te>"u"&&console.warn(`No sampling rate provided, using default of ${R.sampleRate}Hz.`);const q=await R.decodeAudioData(H);let ee;if(q.numberOfChannels===2){const le=Math.sqrt(2),de=q.getChannelData(0),j=q.getChannelData(1);ee=new Float32Array(de.length);for(let F=0;F<q.length;++F)ee[F]=le*(de[F]+j[F])/2}else ee=q.getChannelData(0);return ee}function p(W,te){if(W<1)return new Float64Array;if(W===1)return new Float64Array([1]);const H=1-te,R=2*Math.PI/(W-1),q=new Float64Array(W);for(let ee=0;ee<W;++ee)q[ee]=te-H*Math.cos(ee*R);return q}function d(W){return p(W,.5)}function h(W){return p(W,.54)}const g={htk:W=>2595*Math.log10(1+W/700),kaldi:W=>1127*Math.log(1+W/700),slaney:(W,te=1e3,H=15,R=27/Math.log(6.4))=>W>=te?H+Math.log(W/te)*R:3*W/200};function _(W,te="htk"){const H=g[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof W=="number"?H(W):W.map(R=>H(R))}const E={htk:W=>700*(10**(W/2595)-1),kaldi:W=>700*(Math.exp(W/1127)-1),slaney:(W,te=1e3,H=15,R=Math.log(6.4)/27)=>W>=H?te*Math.exp(R*(W-H)):200*W/3};function A(W,te="htk"){const H=E[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof W=="number"?H(W):W.map(R=>H(R))}function M(W,te){const H=Float64Array.from({length:te.length-1},(le,de)=>te[de+1]-te[de]),R=Array.from({length:W.length},()=>new Array(te.length));for(let le=0;le<W.length;++le){const de=R[le];for(let j=0;j<te.length;++j)de[j]=te[j]-W[le]}const q=te.length-2,ee=Array.from({length:q},()=>new Array(W.length));for(let le=0;le<W.length;++le){const de=R[le];for(let j=0;j<q;++j){const F=-de[j]/H[j],K=de[j+2]/H[j+1];ee[j][le]=Math.max(0,Math.min(F,K))}}return ee}function y(W,te,H){const R=(te-W)/(H-1);return Float64Array.from({length:H},(q,ee)=>W+R*ee)}function k(W,te,H,R,q,ee=null,le="htk",de=!1){if(ee!==null&&ee!=="slaney")throw new Error('norm must be one of null or "slaney"');const j=_(H,le),F=_(R,le),K=y(j,F,te+2);let ae=A(K,le),Z;if(de){const _e=q/(W*2);Z=_(Float64Array.from({length:W},(Ae,qe)=>qe*_e),le),ae=K}else Z=y(0,Math.floor(q/2),W);const we=M(Z,ae);if(ee!==null&&ee==="slaney")for(let _e=0;_e<te;++_e){const Ae=we[_e],qe=2/(ae[_e+2]-ae[_e]);for(let Me=0;Me<W;++Me)Ae[Me]*=qe}return we}function P(W,te,H){const R=new W.constructor(W.length+te+H),q=W.length-1;for(let ee=0;ee<W.length;++ee)R[te+ee]=W[ee];for(let ee=1;ee<=te;++ee)R[te-ee]=W[(0,n.calculateReflectOffset)(ee,q)];for(let ee=1;ee<=H;++ee)R[q+te+ee]=W[(0,n.calculateReflectOffset)(q-ee,q)];return R}function b(W,te,H,R,q){if(H<=0)throw new Error("reference must be greater than zero");if(R<=0)throw new Error("min_value must be greater than zero");H=Math.max(R,H);const ee=Math.log10(H);for(let le=0;le<W.length;++le)W[le]=te*Math.log10(Math.max(R,W[le])-ee);if(q!==null){if(q<=0)throw new Error("db_range must be greater than zero");const le=(0,a.max)(W)[0]-q;for(let de=0;de<W.length;++de)W[de]=Math.max(W[de],le)}return W}function w(W,te=1,H=1e-5,R=null){return b(W,20,te,H,R)}function T(W,te=1,H=1e-10,R=null){return b(W,10,te,H,R)}async function $(W,te,H,R,{fft_length:q=null,power:ee=1,center:le=!0,pad_mode:de="reflect",onesided:j=!0,preemphasis:F=null,mel_filters:K=null,mel_floor:ae=1e-10,log_mel:Z=null,reference:we=1,min_value:_e=1e-10,db_range:Ae=null,remove_dc_offset:qe=null,min_num_frames:Me=null,max_num_frames:Q=null,do_pad:V=!0,transpose:fe=!1}={}){const Ce=te.length;if(q===null&&(q=H),H>q)throw Error(`frame_length (${H}) may not be larger than fft_length (${q})`);if(Ce!==H)throw new Error(`Length of the window (${Ce}) must equal frame_length (${H})`);if(R<=0)throw new Error("hop_length must be greater than zero");if(ee===null&&K!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(le){if(de!=="reflect")throw new Error(`pad_mode="${de}" not implemented yet.`);const ve=Math.floor((q-1)/2)+1;W=P(W,ve,ve)}let Ee=Math.floor(1+Math.floor((W.length-H)/R));Me!==null&&Ee<Me&&(Ee=Me);const Oe=j?Math.floor(q/2)+1:q;let Ie=Ee,ze=Ee;Q!==null&&(Q>Ee?V&&(ze=Q):ze=Ie=Q);const je=new a.FFT(q),Ge=new Float64Array(q),D=new Float64Array(je.outputBufferSize),se=new Float32Array(Oe*ze);for(let ve=0;ve<Ie;++ve){const xe=ve*R,Ne=Math.min(W.length-xe,H);Ne!==H&&Ge.fill(0,0,H);for(let Fe=0;Fe<Ne;++Fe)Ge[Fe]=W[xe+Fe];if(qe){let Fe=0;for(let Qe=0;Qe<Ne;++Qe)Fe+=Ge[Qe];const Ve=Fe/Ne;for(let Qe=0;Qe<Ne;++Qe)Ge[Qe]-=Ve}if(F!==null){for(let Fe=Ne-1;Fe>=1;--Fe)Ge[Fe]-=F*Ge[Fe-1];Ge[0]*=1-F}for(let Fe=0;Fe<te.length;++Fe)Ge[Fe]*=te[Fe];je.realTransform(D,Ge);for(let Fe=0;Fe<Oe;++Fe){const Ve=Fe<<1;se[Fe*ze+ve]=D[Ve]**2+D[Ve+1]**2}}if(ee!==null&&ee!==2){const ve=2/ee;for(let xe=0;xe<se.length;++xe)se[xe]**=ve}const B=K.length;let ne=await(0,l.matmul)(new l.Tensor("float32",K.flat(),[B,Oe]),new l.Tensor("float32",se,[Oe,ze]));fe&&(ne=ne.transpose(1,0));const ue=ne.data;for(let ve=0;ve<ue.length;++ve)ue[ve]=Math.max(ae,ue[ve]);if(ee!==null&&Z!==null){const ve=Math.min(ue.length,Ie*B);switch(Z){case"log":for(let xe=0;xe<ve;++xe)ue[xe]=Math.log(ue[xe]);break;case"log10":for(let xe=0;xe<ve;++xe)ue[xe]=Math.log10(ue[xe]);break;case"dB":if(ee===1)w(ue,we,_e,Ae);else if(ee===2)T(ue,we,_e,Ae);else throw new Error(`Cannot use log_mel option '${Z}' with power ${ee}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Z}'`)}}return ne}function z(W,te,{periodic:H=!0,frame_length:R=null,center:q=!0}={}){const ee=H?W+1:W;let le;switch(te){case"boxcar":le=new Float64Array(ee).fill(1);break;case"hann":case"hann_window":le=d(ee);break;case"hamming":le=h(ee);break;case"povey":le=d(ee).map(de=>Math.pow(de,.85));break;default:throw new Error(`Unknown window type ${te}.`)}if(H&&(le=le.subarray(0,W)),R===null)return le;if(W>R)throw new Error(`Length of the window (${W}) may not be larger than frame_length (${R})`);return le}function N(W,te){let H=44;const R=new ArrayBuffer(H+W.length*4),q=new DataView(R);Y(q,0,"RIFF"),q.setUint32(4,36+W.length*4,!0),Y(q,8,"WAVE"),Y(q,12,"fmt "),q.setUint32(16,16,!0),q.setUint16(20,3,!0),q.setUint16(22,1,!0),q.setUint32(24,te,!0),q.setUint32(28,te*4,!0),q.setUint16(32,4,!0),q.setUint16(34,32,!0),Y(q,36,"data"),q.setUint32(40,W.length*4,!0);for(let ee=0;ee<W.length;++ee,H+=4)q.setFloat32(H,W[ee],!0);return R}function Y(W,te,H){for(let R=0;R<H.length;++R)W.setUint8(te+R,H.charCodeAt(R))}class J{constructor(te,H){this.audio=te,this.sampling_rate=H}toWav(){return N(this.audio,this.sampling_rate)}toBlob(){const te=this.toWav();return new Blob([te],{type:"audio/wav"})}async save(te){let H;if(i.apis.IS_BROWSER_ENV){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");H=n.saveBlob}else if(i.apis.IS_FS_AVAILABLE)H=async(R,q)=>{let ee=await q.arrayBuffer();o.writeFileSync(R,Buffer.from(ee))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await H(te,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>a,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>o});const s="https://github.com/huggingface/transformers.js/issues/new/choose",a="config.json",n="preprocessor_config.json",i=n,o="processor_config.json",l="chat_template.json",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>g,count:()=>M,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>o,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>A,mergeArrays:()=>d,pick:()=>E,pop:()=>p,product:()=>h,reverseDictionary:()=>a,saveBlob:()=>_});function s(y,k){y&&y(k)}function a(y){return Object.fromEntries(Object.entries(y).map(([k,P])=>[P,k]))}function n(y){return y.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(y){var k,P,b;return((b=(P=(k=y==null?void 0:y.prototype)==null?void 0:k.__proto__)==null?void 0:P.constructor)==null?void 0:b.name)==="TypedArray"}function o(y){return Number.isInteger(y)||typeof y=="bigint"}function l(y){return y==null||y===-1}function c(y){const k=[];let P=y;for(;Array.isArray(P);)k.push(P.length),P=P[0];return k}function p(y,k,P=void 0){const b=y[k];if(b!==void 0)return delete y[k],b;if(P===void 0)throw Error(`Key ${k} does not exist in object.`);return P}function d(...y){return Array.prototype.concat.apply([],y)}function h(...y){return y.reduce((k,P)=>k.flatMap(b=>P.map(w=>[b,w])))}function g(y,k){return Math.abs((y+k)%(2*k)-k)}function _(y,k){const P=URL.createObjectURL(k),b=document.createElement("a");b.href=P,b.download=y,b.click(),b.remove(),URL.revokeObjectURL(P)}function E(y,k){return Object.assign({},...k.map(P=>{if(y[P]!==void 0)return{[P]:y[P]}}))}function A(y){let k=0;for(const P of y)++k;return k}function M(y,k){let P=0;for(const b of y)b===k&&++P;return P}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>a,DictionarySplitter:()=>l,PriorityQueue:()=>s,TokenLattice:()=>i});class s{constructor(p=(h,g)=>h>g,d=1/0){this._heap=[],this._comparator=p,this._maxSize=d}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...p){return this.extend(p)}extend(p){for(const d of p)if(this.size<this._maxSize)this._heap.push(d),this._siftUp();else{const h=this._smallest();this._comparator(d,this._heap[h])&&(this._heap[h]=d,this._siftUpFrom(h))}return this.size}pop(){const p=this.peek(),d=this.size-1;return d>0&&this._swap(0,d),this._heap.pop(),this._siftDown(),p}replace(p){const d=this.peek();return this._heap[0]=p,this._siftDown(),d}_parent(p){return(p+1>>>1)-1}_left(p){return(p<<1)+1}_right(p){return p+1<<1}_greater(p,d){return this._comparator(this._heap[p],this._heap[d])}_swap(p,d){const h=this._heap[p];this._heap[p]=this._heap[d],this._heap[d]=h}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(p){for(;p>0&&this._greater(p,this._parent(p));)this._swap(p,this._parent(p)),p=this._parent(p)}_siftDown(){let p=0;for(;this._left(p)<this.size&&this._greater(this._left(p),p)||this._right(p)<this.size&&this._greater(this._right(p),p);){const d=this._right(p)<this.size&&this._greater(this._right(p),this._left(p))?this._right(p):this._left(p);this._swap(p,d),p=d}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class a{constructor(){this.root=n.default()}extend(p){for(const d of p)this.push(d)}push(p){let d=this.root;for(const h of p){let g=d.children.get(h);g===void 0&&(g=n.default(),d.children.set(h,g)),d=g}d.isLeaf=!0}*commonPrefixSearch(p){let d=this.root;if(d===void 0)return;let h="";for(const g of p){if(h+=g,d=d.children.get(g),d===void 0)return;d.isLeaf&&(yield h)}}}class n{constructor(p,d){this.isLeaf=p,this.children=d}static default(){return new n(!1,new Map)}}class i{constructor(p,d,h){this.chars=Array.from(p),this.len=this.chars.length,this.bosTokenId=d,this.eosTokenId=h,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const g=new o(this.bosTokenId,0,0,0,0),_=new o(this.eosTokenId,1,this.len,0,0);this.nodes.push(g.clone()),this.nodes.push(_.clone()),this.beginNodes[this.len].push(_),this.endNodes[0].push(g)}insert(p,d,h,g){const _=this.nodes.length,E=new o(g,_,p,d,h);this.beginNodes[p].push(E),this.endNodes[p+d].push(E),this.nodes.push(E)}viterbi(){const p=this.len;let d=0;for(;d<=p;){if(this.beginNodes[d].length==0)return[];for(let A of this.beginNodes[d]){A.prev=null;let M=0,y=null;for(let k of this.endNodes[d]){const P=k.backtraceScore+A.score;(y===null||P>M)&&(y=k.clone(),M=P)}if(y!==null)A.prev=y,A.backtraceScore=M;else return[]}++d}const h=[],_=this.beginNodes[p][0].prev;if(_===null)return[];let E=_.clone();for(;E.prev!==null;)h.push(E.clone()),E=E.clone().prev.clone();return h.reverse(),h}piece(p){return this.chars.slice(p.pos,p.pos+p.length).join("")}tokens(){return this.viterbi().map(d=>this.piece(d))}tokenIds(){return this.viterbi().map(d=>d.tokenId)}}class o{constructor(p,d,h,g,_){this.tokenId=p,this.nodeId=d,this.pos=h,this.length=g,this.score=_,this.prev=null,this.backtraceScore=0}clone(){const p=new o(this.tokenId,this.nodeId,this.pos,this.length,this.score);return p.prev=this.prev,p.backtraceScore=this.backtraceScore,p}}class l{constructor(p){this.trie=this._buildTrie(p)}_buildTrie(p){var h;const d=Object.create(null);for(const g of p){let _=d;for(let E=0;E<g.length;++E)_=_[h=g[E]]??(_[h]=Object.create(null));_.end=g}return d}split(p){const d=[],h=p.length;let g=0,_=0;for(;_<h;){let E=this.trie,A=null,M=_;for(;M<h&&(E=E[p[M]]);)E.end&&(A=E.end),++M;A?(_>g&&d.push(p.slice(g,_)),d.push(A),_+=A.length,g=_):++_}return g<h&&d.push(p.slice(g)),d}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>o,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var s=t("./src/env.js"),a=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),o=Object.freeze({[a.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let a=function(...n){return a._call(...n)};return Object.setPrototypeOf(a,new.target.prototype)}_call(...a){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>o,getFile:()=>g,getModelFile:()=>y,getModelJSON:()=>k});var s=t("?7a2c"),a=t("?a42a"),n=t("./src/env.js"),i=t("./src/utils/core.js");const o=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(T){if(this.filePath=T,this.headers=new Headers,this.exists=s.existsSync(T),this.exists){this.status=200,this.statusText="OK";let $=s.statSync(T);this.headers.set("content-length",$.size.toString()),this.updateContentType();const z=s.createReadStream(T);this.body=new ReadableStream({start(N){z.on("data",Y=>N.enqueue(Y)),z.on("end",()=>N.close()),z.on("error",Y=>N.error(Y))},cancel(){z.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const T=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[T]??"application/octet-stream")}clone(){let T=new c(this.filePath);return T.exists=this.exists,T.status=this.status,T.statusText=this.statusText,T.headers=new Headers(this.headers),T}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const T=await s.promises.readFile(this.filePath);return new Blob([T],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(w,T=null,$=null){let z;try{z=new URL(w)}catch{return!1}return!(T&&!T.includes(z.protocol)||$&&!$.includes(z.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function h(w){return!(!d.test(w)||w.includes("..")||w.includes("--")||w.endsWith(".git")||w.endsWith(".ipynb"))}async function g(w){var T;if(n.env.useFS&&!p(w,["http:","https:","blob:"]))return new c(w.toString());if(typeof process<"u"&&((T=process==null?void 0:process.release)==null?void 0:T.name)==="node"){const $=!!(Hs!=null&&Hs.TESTING_REMOTELY),z=n.env.version,N=new Headers;if(N.set("User-Agent",`transformers.js/${z}; is_ci/${$};`),p(w,["http:","https:"],["huggingface.co","hf.co"])){const J=(Hs==null?void 0:Hs.HF_TOKEN)??(Hs==null?void 0:Hs.HF_ACCESS_TOKEN);J&&N.set("Authorization",`Bearer ${J}`)}return fetch(w,{headers:N})}else return fetch(w)}const _={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function E(w,T,$){if(!$)return null;const z=_[w]??`Error (${w}) occurred while trying to load file`;throw Error(`${z}: "${T}".`)}class A{constructor(T){this.path=T}async match(T){let $=a.join(this.path,T),z=new c($);if(z.exists)return z}async put(T,$,z=void 0){let N=a.join(this.path,T);try{const Y=$.headers.get("Content-Length"),J=parseInt(Y??"0");let W=0;await s.promises.mkdir(a.dirname(N),{recursive:!0});const te=s.createWriteStream(N),H=$.body.getReader();for(;;){const{done:R,value:q}=await H.read();if(R)break;await new Promise((le,de)=>{te.write(q,j=>{if(j){de(j);return}le()})}),W+=q.length;const ee=J?W/J*100:0;z==null||z({progress:ee,loaded:W,total:J})}te.close()}catch(Y){try{await s.promises.unlink(N)}catch{}throw Y}}}async function M(w,...T){for(let $ of T)try{let z=await w.match($);if(z)return z}catch{continue}}async function y(w,T,$=!0,z={},N=!1){if(!n.env.allowLocalModels){if(z.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,i.dispatchCallback)(z.progress_callback,{status:"initiate",name:w,file:T});let Y;if(!Y&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{Y=await caches.open("transformers-cache")}catch(ae){console.warn("An error occurred while opening the browser cache:",ae)}}if(!Y&&n.env.useFSCache&&(Y=new A(z.cache_dir??n.env.cacheDir)),!Y&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");Y=n.env.customCache}const J=z.revision??"main",W=b(w,T),te=h(w),H=te?b(n.env.localModelPath,W):W,R=b(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",w).replaceAll("{revision}",encodeURIComponent(J)),T);let q;const ee=Y instanceof A?J==="main"?W:b(w,J,T):R;let le=!1,de;Y&&(de=await M(Y,H,ee));const j=de!==void 0;if(de===void 0){if(n.env.allowLocalModels)if(p(W,["http:","https:"])){if(z.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${W}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${W}.`)}else try{de=await g(H),q=H}catch(Z){console.warn(`Unable to load from local path "${H}": "${Z}"`)}if(de===void 0||de.status===404){if(z.local_files_only||!n.env.allowRemoteModels){if($)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${H}".`);return null}if(!te)throw Error(`Local file missing at "${H}" and download aborted due to invalid model ID "${w}".`);if(de=await g(R),de.status!==200)return E(de.status,R,$);q=ee}le=Y&&typeof Response<"u"&&de instanceof Response&&de.status===200}(0,i.dispatchCallback)(z.progress_callback,{status:"download",name:w,file:T});let F;if(!(n.apis.IS_NODE_ENV&&N)){let ae;z.progress_callback?j&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ae=new Uint8Array(await de.arrayBuffer()),(0,i.dispatchCallback)(z.progress_callback,{status:"progress",name:w,file:T,progress:100,loaded:ae.length,total:ae.length})):ae=await P(de,Z=>{(0,i.dispatchCallback)(z.progress_callback,{status:"progress",name:w,file:T,...Z})}):ae=new Uint8Array(await de.arrayBuffer()),F=ae}if(le&&q&&await Y.match(q)===void 0&&(F?await Y.put(q,new Response(F,{headers:de.headers})).catch(ae=>{console.warn(`Unable to add response to browser cache: ${ae}.`)}):await Y.put(q,de,z.progress_callback)),(0,i.dispatchCallback)(z.progress_callback,{status:"done",name:w,file:T}),F){if(N)throw new Error("Cannot return path in a browser environment.");return F}if(de instanceof c)return de.filePath;const K=await Y.match(q);if(K instanceof c)return K.filePath;throw new Error("Unable to return path for response.")}async function k(w,T,$=!0,z={}){const N=await y(w,T,$,z,!1);if(N===null)return{};const J=new TextDecoder("utf-8").decode(N);return JSON.parse(J)}async function P(w,T){const $=w.headers.get("Content-Length");$===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let z=parseInt($??"0"),N=new Uint8Array(z),Y=0;const J=w.body.getReader();async function W(){const{done:te,value:H}=await J.read();if(te)return;const R=Y+H.length;if(R>z){z=R;const ee=new Uint8Array(z);ee.set(N),N=ee}N.set(H,Y),Y=R;const q=Y/z*100;return T({progress:q,loaded:Y,total:z}),W()}return await W(),N}function b(...w){return w=w.map((T,$)=>($&&(T=T.replace(new RegExp("^/"),"")),$!==w.length-1&&(T=T.replace(new RegExp("/$"),"")),T)),w.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>_,load_image:()=>E});var s=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),n=t("./src/env.js"),i=t("./src/utils/tensor.js"),o=t("?2b25");let l,c,p;const d=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(d)l=(A,M)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(A,M)},p=self.createImageBitmap,c=self.ImageData;else if(o)p=async A=>{const y=(await A.metadata()).channels,{data:k,info:P}=await A.rotate().raw().toBuffer({resolveWithObject:!0}),b=new _(new Uint8ClampedArray(k),P.width,P.height,P.channels);return y!==void 0&&y!==P.channels&&b.convert(y),b};else throw new Error("Unable to load image processing library.");const h={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},g=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class _{constructor(M,y,k,P){this.data=M,this.width=y,this.height=k,this.channels=P}get size(){return[this.width,this.height]}static async read(M){if(M instanceof _)return M;if(typeof M=="string"||M instanceof URL)return await this.fromURL(M);if(M instanceof Blob)return await this.fromBlob(M);if(typeof HTMLCanvasElement<"u"&&M instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&M instanceof OffscreenCanvas)return this.fromCanvas(M);throw new Error(`Unsupported input type: ${typeof M}`)}static fromCanvas(M){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const k=M.getContext("2d").getImageData(0,0,M.width,M.height).data;return new _(k,M.width,M.height,4)}static async fromURL(M){const y=await(0,a.getFile)(M);if(y.status!==200)throw new Error(`Unable to read image from "${M}" (${y.status} ${y.statusText})`);const k=await y.blob();return this.fromBlob(k)}static async fromBlob(M){if(d){const y=await p(M),k=l(y.width,y.height).getContext("2d");return k.drawImage(y,0,0),new this(k.getImageData(0,0,y.width,y.height).data,y.width,y.height,4)}else{const y=o(await M.arrayBuffer());return await p(y)}}static fromTensor(M,y="CHW"){if(M.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${M.dims.length} dimensions.`);if(y==="CHW")M=M.transpose(1,2,0);else if(y!=="HWC")throw new Error(`Unsupported channel format: ${y}`);if(!(M.data instanceof Uint8ClampedArray||M.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${M.type}`);switch(M.dims[2]){case 1:case 2:case 3:case 4:return new _(M.data,M.dims[1],M.dims[0],M.dims[2]);default:throw new Error(`Unsupported number of channels: ${M.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const M=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let y=0,k=0;y<this.data.length;y+=this.channels){const P=this.data[y],b=this.data[y+1],w=this.data[y+2];M[k++]=Math.round(.2989*P+.587*b+.114*w)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(M,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const M=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let y=0,k=0;y<this.data.length;++y)M[k++]=this.data[y],M[k++]=this.data[y],M[k++]=this.data[y];break;case 4:for(let y=0,k=0;y<this.data.length;y+=4)M[k++]=this.data[y],M[k++]=this.data[y+1],M[k++]=this.data[y+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(M,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const M=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let y=0,k=0;y<this.data.length;++y)M[k++]=this.data[y],M[k++]=this.data[y],M[k++]=this.data[y],M[k++]=255;break;case 3:for(let y=0,k=0;y<this.data.length;y+=3)M[k++]=this.data[y],M[k++]=this.data[y+1],M[k++]=this.data[y+2],M[k++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(M,this.width,this.height,4)}putAlpha(M){if(M.width!==this.width||M.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${M.width}x${M.height}`);if(M.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${M.channels}`);const y=this.data,k=M.data,P=this.width*this.height;if(this.channels===3){const b=new Uint8ClampedArray(P*4);for(let w=0,T=0,$=0;w<P;++w)b[$++]=y[T++],b[$++]=y[T++],b[$++]=y[T++],b[$++]=k[w];return this._update(b,this.width,this.height,4)}else if(this.channels===4){for(let b=0;b<P;++b)y[4*b+3]=k[b];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(M,y,{resample:k=2}={}){if(this.width===M&&this.height===y)return this;let P=h[k]??k;const b=(0,s.isNullishDimension)(M),w=(0,s.isNullishDimension)(y);if(b&&w)return this;if(b?M=y/this.height*this.width:w&&(y=M/this.width*this.height),d){const T=this.channels,$=this.toCanvas(),z=l(M,y).getContext("2d");return z.drawImage($,0,0,M,y),new _(z.getImageData(0,0,M,y).data,M,y,4).convert(T)}else{let T=this.toSharp();switch(P){case"box":case"hamming":(P==="box"||P==="hamming")&&(console.warn(`Resampling method ${P} is not yet supported. Using bilinear instead.`),P="bilinear");case"nearest":case"bilinear":case"bicubic":T=T.affine([M/this.width,0,0,y/this.height],{interpolator:P});break;case"lanczos":T=T.resize({width:M,height:y,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${P} is not supported.`)}return await p(T)}}async pad([M,y,k,P]){if(M=Math.max(M,0),y=Math.max(y,0),k=Math.max(k,0),P=Math.max(P,0),M===0&&y===0&&k===0&&P===0)return this;if(d){const b=this.channels,w=this.toCanvas(),T=this.width+M+y,$=this.height+k+P,z=l(T,$).getContext("2d");return z.drawImage(w,0,0,this.width,this.height,M,k,this.width,this.height),new _(z.getImageData(0,0,T,$).data,T,$,4).convert(b)}else{const b=this.toSharp().extend({left:M,right:y,top:k,bottom:P});return await p(b)}}async crop([M,y,k,P]){if(M=Math.max(M,0),y=Math.max(y,0),k=Math.min(k,this.width-1),P=Math.min(P,this.height-1),M===0&&y===0&&k===this.width-1&&P===this.height-1)return this;const b=k-M+1,w=P-y+1;if(d){const T=this.channels,$=this.toCanvas(),z=l(b,w).getContext("2d");return z.drawImage($,M,y,b,w,0,0,b,w),new _(z.getImageData(0,0,b,w).data,b,w,4).convert(T)}else{const T=this.toSharp().extract({left:M,top:y,width:b,height:w});return await p(T)}}async center_crop(M,y){if(this.width===M&&this.height===y)return this;const k=(this.width-M)/2,P=(this.height-y)/2;if(d){const b=this.channels,w=this.toCanvas(),T=l(M,y).getContext("2d");let $=0,z=0,N=0,Y=0;return k>=0?$=k:N=-k,P>=0?z=P:Y=-P,T.drawImage(w,$,z,M,y,N,Y,M,y),new _(T.getImageData(0,0,M,y).data,M,y,4).convert(b)}else{let b=this.toSharp();if(k>=0&&P>=0)b=b.extract({left:Math.floor(k),top:Math.floor(P),width:M,height:y});else if(k<=0&&P<=0){const w=Math.floor(-P),T=Math.floor(-k);b=b.extend({top:w,left:T,right:M-this.width-T,bottom:y-this.height-w})}else{let w=[0,0],T=0;P<0?(w[0]=Math.floor(-P),w[1]=y-this.height-w[0]):T=Math.floor(P);let $=[0,0],z=0;k<0?($[0]=Math.floor(-k),$[1]=M-this.width-$[0]):z=Math.floor(k),b=b.extend({top:w[0],bottom:w[1],left:$[0],right:$[1]}).extract({left:z,top:T,width:M,height:y})}return await p(b)}}async toBlob(M="image/png",y=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:M,quality:y})}toTensor(M="CHW"){let y=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(M!=="HWC")if(M==="CHW")y=y.permute(2,0,1);else throw new Error(`Unsupported channel format: ${M}`);return y}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const M=this.clone().rgba(),y=l(M.width,M.height),k=new c(M.data,M.width,M.height);return y.getContext("2d").putImageData(k,0,0),y}split(){const{data:M,width:y,height:k,channels:P}=this,b=M.constructor,w=M.length/P,T=Array.from({length:P},()=>new b(w));for(let $=0;$<w;++$){const z=P*$;for(let N=0;N<P;++N)T[N][$]=M[z+N]}return T.map($=>new _($,y,k,1))}_update(M,y,k,P=null){return this.data=M,this.width=y,this.height=k,P!==null&&(this.channels=P),this}clone(){return new _(this.data.slice(),this.width,this.height,this.channels)}convert(M){if(this.channels===M)return this;switch(M){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(M){if(d){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const y=M.split(".").pop().toLowerCase(),k=g.get(y)??"image/png",P=await this.toBlob(k);(0,s.saveBlob)(M,P)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(M);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return o(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const E=_.read.bind(_)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>E,bankers_round:()=>y,cos_sim:()=>l,dot:()=>o,dynamic_time_warping:()=>k,interpolate_data:()=>s,log_softmax:()=>i,magnitude:()=>c,max:()=>d,medianFilter:()=>A,min:()=>p,permute_data:()=>a,round:()=>M,softmax:()=>n});function s(P,[b,w,T],[$,z],N="bilinear",Y=!1){const J=z/T,W=$/w,te=new P.constructor($*z*b),H=w*T,R=$*z;for(let q=0;q<$;++q)for(let ee=0;ee<z;++ee){const le=q*z+ee,de=(ee+.5)/J-.5,j=(q+.5)/W-.5;let F=Math.floor(de),K=Math.floor(j);const ae=Math.min(F+1,T-1),Z=Math.min(K+1,w-1);F=Math.max(F,0),K=Math.max(K,0);const we=de-F,_e=j-K,Ae=(1-we)*(1-_e),qe=we*(1-_e),Me=(1-we)*_e,Q=we*_e,V=K*T,fe=Z*T,Ce=V+F,Ee=V+ae,Oe=fe+F,Ie=fe+ae;for(let ze=0;ze<b;++ze){const je=ze*H;te[ze*R+le]=Ae*P[je+Ce]+qe*P[je+Ee]+Me*P[je+Oe]+Q*P[je+Ie]}}return te}function a(P,b,w){const T=new Array(w.length),$=new Array(w.length);for(let Y=w.length-1,J=1;Y>=0;--Y)$[Y]=J,T[Y]=b[w[Y]],J*=T[Y];const z=w.map((Y,J)=>$[w.indexOf(J)]),N=new P.constructor(P.length);for(let Y=0;Y<P.length;++Y){let J=0;for(let W=b.length-1,te=Y;W>=0;--W)J+=te%b[W]*z[W],te=Math.floor(te/b[W]);N[J]=P[Y]}return[N,T]}function n(P){const b=d(P)[0],w=P.map(z=>Math.exp(z-b)),T=w.reduce((z,N)=>z+N,0);return w.map(z=>z/T)}function i(P){const b=d(P)[0];let w=0;for(let z=0;z<P.length;++z)w+=Math.exp(P[z]-b);const T=Math.log(w);return P.map(z=>z-b-T)}function o(P,b){let w=0;for(let T=0;T<P.length;++T)w+=P[T]*b[T];return w}function l(P,b){const w=o(P,b),T=c(P),$=c(b);return w/(T*$)}function c(P){return Math.sqrt(P.reduce((b,w)=>b+w*w,0))}function p(P){if(P.length===0)throw Error("Array must not be empty");let b=P[0],w=0;for(let T=1;T<P.length;++T)P[T]<b&&(b=P[T],w=T);return[b,w]}function d(P){if(P.length===0)throw Error("Array must not be empty");let b=P[0],w=0;for(let T=1;T<P.length;++T)P[T]>b&&(b=P[T],w=T);return[b,w]}function h(P){return P>0&&(P&P-1)===0}class g{constructor(b){if(this.size=b|0,this.size<=1||!h(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=b<<1,this.table=new Float64Array(this.size*2);for(let T=0;T<this.table.length;T+=2){const $=Math.PI*T/this.size;this.table[T]=Math.cos($),this.table[T+1]=-Math.sin($)}let w=0;for(let T=1;this.size>T;T<<=1)++w;this._width=w%2===0?w-1:w,this._bitrev=new Int32Array(1<<this._width);for(let T=0;T<this._bitrev.length;++T){this._bitrev[T]=0;for(let $=0;$<this._width;$+=2){const z=this._width-$-2;this._bitrev[T]|=(T>>>$&3)<<z}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(b,w){const T=w||new Array(b.length>>>1);for(let $=0;$<b.length;$+=2)T[$>>>1]=b[$];return T}toComplexArray(b,w){const T=w||this.createComplexArray();for(let $=0;$<T.length;$+=2)T[$]=b[$>>>1],T[$+1]=0;return T}transform(b,w){if(b===w)throw new Error("Input and output buffers must be different");this._transform4(b,w,1)}realTransform(b,w){if(b===w)throw new Error("Input and output buffers must be different");this._realTransform4(b,w,1)}inverseTransform(b,w){if(b===w)throw new Error("Input and output buffers must be different");this._transform4(b,w,-1);for(let T=0;T<b.length;++T)b[T]/=this.size}_transform4(b,w,T){const $=this._csize;let N=1<<this._width,Y=$/N<<1,J,W;const te=this._bitrev;if(Y===4)for(J=0,W=0;J<$;J+=Y,++W){const R=te[W];this._singleTransform2(w,b,J,R,N)}else for(J=0,W=0;J<$;J+=Y,++W){const R=te[W];this._singleTransform4(w,b,J,R,N,T)}const H=this.table;for(N>>=2;N>=2;N>>=2){Y=$/N<<1;const R=Y>>>2;for(J=0;J<$;J+=Y){const q=J+R-1;for(let ee=J,le=0;ee<q;ee+=2,le+=N){const de=ee,j=de+R,F=j+R,K=F+R,ae=b[de],Z=b[de+1],we=b[j],_e=b[j+1],Ae=b[F],qe=b[F+1],Me=b[K],Q=b[K+1],V=H[le],fe=T*H[le+1],Ce=we*V-_e*fe,Ee=we*fe+_e*V,Oe=H[2*le],Ie=T*H[2*le+1],ze=Ae*Oe-qe*Ie,je=Ae*Ie+qe*Oe,Ge=H[3*le],D=T*H[3*le+1],se=Me*Ge-Q*D,B=Me*D+Q*Ge,ne=ae+ze,ue=Z+je,ve=ae-ze,xe=Z-je,Ne=Ce+se,Fe=Ee+B,Ve=T*(Ce-se),Qe=T*(Ee-B);b[de]=ne+Ne,b[de+1]=ue+Fe,b[j]=ve+Qe,b[j+1]=xe-Ve,b[F]=ne-Ne,b[F+1]=ue-Fe,b[K]=ve-Qe,b[K+1]=xe+Ve}}}}_singleTransform2(b,w,T,$,z){const N=b[$],Y=b[$+1],J=b[$+z],W=b[$+z+1];w[T]=N+J,w[T+1]=Y+W,w[T+2]=N-J,w[T+3]=Y-W}_singleTransform4(b,w,T,$,z,N){const Y=z*2,J=z*3,W=b[$],te=b[$+1],H=b[$+z],R=b[$+z+1],q=b[$+Y],ee=b[$+Y+1],le=b[$+J],de=b[$+J+1],j=W+q,F=te+ee,K=W-q,ae=te-ee,Z=H+le,we=R+de,_e=N*(H-le),Ae=N*(R-de);w[T]=j+Z,w[T+1]=F+we,w[T+2]=K+Ae,w[T+3]=ae-_e,w[T+4]=j-Z,w[T+5]=F-we,w[T+6]=K-Ae,w[T+7]=ae+_e}_realTransform4(b,w,T){const $=this._csize;let N=1<<this._width,Y=$/N<<1,J,W;const te=this._bitrev;if(Y===4)for(J=0,W=0;J<$;J+=Y,++W){const q=te[W];this._singleRealTransform2(w,b,J,q>>>1,N>>>1)}else for(J=0,W=0;J<$;J+=Y,++W){const q=te[W];this._singleRealTransform4(w,b,J,q>>>1,N>>>1,T)}const H=this.table;for(N>>=2;N>=2;N>>=2){Y=$/N<<1;const q=Y>>>1,ee=q>>>1,le=ee>>>1;for(J=0;J<$;J+=Y)for(let de=0,j=0;de<=le;de+=2,j+=N){const F=J+de,K=F+ee,ae=K+ee,Z=ae+ee,we=b[F],_e=b[F+1],Ae=b[K],qe=b[K+1],Me=b[ae],Q=b[ae+1],V=b[Z],fe=b[Z+1],Ce=we,Ee=_e,Oe=H[j],Ie=T*H[j+1],ze=Ae*Oe-qe*Ie,je=Ae*Ie+qe*Oe,Ge=H[2*j],D=T*H[2*j+1],se=Me*Ge-Q*D,B=Me*D+Q*Ge,ne=H[3*j],ue=T*H[3*j+1],ve=V*ne-fe*ue,xe=V*ue+fe*ne,Ne=Ce+se,Fe=Ee+B,Ve=Ce-se,Qe=Ee-B,Je=ze+ve,pt=je+xe,Mt=T*(ze-ve),dr=T*(je-xe);if(b[F]=Ne+Je,b[F+1]=Fe+pt,b[K]=Ve+dr,b[K+1]=Qe-Mt,de===0){b[ae]=Ne-Je,b[ae+1]=Fe-pt;continue}if(de===le)continue;const Gt=J+ee-de,_r=J+q-de;b[Gt]=Ve-T*dr,b[Gt+1]=-Qe-T*Mt,b[_r]=Ne-T*Je,b[_r+1]=-Fe+T*pt}}const R=$>>>1;for(let q=2;q<R;q+=2)b[$-q]=b[q],b[$-q+1]=-b[q+1]}_singleRealTransform2(b,w,T,$,z){const N=b[$],Y=b[$+z];w[T]=N+Y,w[T+1]=0,w[T+2]=N-Y,w[T+3]=0}_singleRealTransform4(b,w,T,$,z,N){const Y=z*2,J=z*3,W=b[$],te=b[$+z],H=b[$+Y],R=b[$+J],q=W+H,ee=W-H,le=te+R,de=N*(te-R);w[T]=q+le,w[T+1]=0,w[T+2]=ee,w[T+3]=-de,w[T+4]=q-le,w[T+5]=0,w[T+6]=ee,w[T+7]=de}}class _{constructor(b){const w=2*(b-1),T=2*(2*b-1),$=2**Math.ceil(Math.log2(T));this.bufferSize=$,this._a=w;const z=new Float64Array(T),N=new Float64Array($);this._chirpBuffer=new Float64Array($),this._buffer1=new Float64Array($),this._buffer2=new Float64Array($),this._outBuffer1=new Float64Array($),this._outBuffer2=new Float64Array($);const Y=-2*Math.PI/b,J=Math.cos(Y),W=Math.sin(Y);for(let te=0;te<T>>1;++te){const H=(te+1-b)**2/2,R=Math.sqrt(J**2+W**2)**H,q=H*Math.atan2(W,J),ee=2*te;z[ee]=R*Math.cos(q),z[ee+1]=R*Math.sin(q),N[ee]=z[ee],N[ee+1]=-z[ee+1]}this._slicedChirpBuffer=z.subarray(w,T),this._f=new g($>>1),this._f.transform(this._chirpBuffer,N)}_transform(b,w,T){const $=this._buffer1,z=this._buffer2,N=this._outBuffer1,Y=this._outBuffer2,J=this._chirpBuffer,W=this._slicedChirpBuffer,te=this._a;if(T)for(let H=0;H<W.length;H+=2){const R=H+1,q=H>>1,ee=w[q];$[H]=ee*W[H],$[R]=ee*W[R]}else for(let H=0;H<W.length;H+=2){const R=H+1;$[H]=w[H]*W[H]-w[R]*W[R],$[R]=w[H]*W[R]+w[R]*W[H]}this._f.transform(N,$);for(let H=0;H<J.length;H+=2){const R=H+1;z[H]=N[H]*J[H]-N[R]*J[R],z[R]=N[H]*J[R]+N[R]*J[H]}this._f.inverseTransform(Y,z);for(let H=0;H<Y.length;H+=2){const R=Y[H+te],q=Y[H+te+1],ee=W[H],le=W[H+1];b[H]=R*ee-q*le,b[H+1]=R*le+q*ee}}transform(b,w){this._transform(b,w,!1)}realTransform(b,w){this._transform(b,w,!0)}}class E{constructor(b){this.fft_length=b,this.isPowerOfTwo=h(b),this.isPowerOfTwo?(this.fft=new g(b),this.outputBufferSize=2*b):(this.fft=new _(b),this.outputBufferSize=this.fft.bufferSize)}realTransform(b,w){this.fft.realTransform(b,w)}transform(b,w){this.fft.transform(b,w)}}function A(P,b){if(b%2===0||b<=0)throw new Error("Window size must be a positive odd number");const w=new P.constructor(P.length),T=new P.constructor(b),$=Math.floor(b/2);for(let z=0;z<P.length;++z){let N=0;for(let Y=-$;Y<=$;++Y){let J=z+Y;J<0?J=Math.abs(J):J>=P.length&&(J=2*(P.length-1)-J),T[N++]=P[J]}T.sort(),w[z]=T[$]}return w}function M(P,b){const w=Math.pow(10,b);return Math.round(P*w)/w}function y(P){const b=Math.round(P);return Math.abs(P)%1===.5?b%2===0?b:b-1:b}function k(P){const b=P.length,w=P[0].length,T=[b+1,w+1],$=Array.from({length:T[0]},()=>Array(T[1]).fill(1/0));$[0][0]=0;const z=Array.from({length:T[0]},()=>Array(T[1]).fill(-1));for(let te=1;te<T[1];++te)for(let H=1;H<T[0];++H){const R=$[H-1][te-1],q=$[H-1][te],ee=$[H][te-1];let le,de;R<q&&R<ee?(le=R,de=0):q<R&&q<ee?(le=q,de=1):(le=ee,de=2),$[H][te]=P[H-1][te-1]+le,z[H][te]=de}for(let te=0;te<T[1];++te)z[0][te]=2;for(let te=0;te<T[0];++te)z[te][0]=1;let N=b,Y=w,J=[],W=[];for(;N>0||Y>0;)switch(J.push(N-1),W.push(Y-1),z[N][Y]){case 0:--N,--Y;break;case 1:--N;break;case 2:--Y;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${N}, ${Y}]. Please file a bug report.`)}return J.reverse(),W.reverse(),[J,W]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>i,Tensor:()=>o,cat:()=>w,full:()=>W,full_like:()=>te,interpolate:()=>p,interpolate_4d:()=>d,layer_norm:()=>y,matmul:()=>h,mean:()=>N,mean_pooling:()=>M,ones:()=>H,ones_like:()=>R,permute:()=>c,quantize_embeddings:()=>de,rand:()=>le,rfft:()=>g,slice:()=>A,stack:()=>T,std_mean:()=>z,topk:()=>_,zeros:()=>q,zeros_like:()=>ee});var s=t("./src/utils/maths.js"),a=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class o{constructor(...F){X(this,"ort_tensor");return(0,a.isONNXTensor)(F[0])?this.ort_tensor=F[0]:this.ort_tensor=new a.Tensor(F[0],F[1],F[2]),new Proxy(this,{get:(K,ae)=>{if(typeof ae=="string"){let Z=Number(ae);if(Number.isInteger(Z))return K._getitem(Z)}return K[ae]},set:(K,ae,Z)=>K[ae]=Z})}get dims(){return this.ort_tensor.dims}set dims(F){this.ort_tensor.dims=F}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[F,...K]=this.dims;if(K.length>0){const ae=K.reduce((Z,we)=>Z*we);for(let Z=0;Z<F;++Z)yield this._subarray(Z,ae,K)}else yield*this.data}_getitem(F){const[K,...ae]=this.dims;if(F=b(F,K),ae.length>0){const Z=ae.reduce((we,_e)=>we*_e);return this._subarray(F,Z,ae)}else return new o(this.type,[this.data[F]],ae)}indexOf(F){const K=this.data;for(let ae=0;ae<K.length;++ae)if(K[ae]==F)return ae;return-1}_subarray(F,K,ae){const Z=F*K,we=(F+1)*K,_e="subarray"in this.data?this.data.subarray(Z,we):this.data.slice(Z,we);return new o(this.type,_e,ae)}item(){const F=this.data;if(F.length!==1)throw new Error(`a Tensor with ${F.length} elements cannot be converted to Scalar`);return F[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const F=this.data;for(let K=0;K<F.length;++K)F[K]=1/(1+Math.exp(-F[K]));return this}map(F){return this.clone().map_(F)}map_(F){const K=this.data;for(let ae=0;ae<K.length;++ae)K[ae]=F(K[ae],ae,K);return this}mul(F){return this.clone().mul_(F)}mul_(F){const K=this.data;for(let ae=0;ae<K.length;++ae)K[ae]*=F;return this}div(F){return this.clone().div_(F)}div_(F){const K=this.data;for(let ae=0;ae<K.length;++ae)K[ae]/=F;return this}add(F){return this.clone().add_(F)}add_(F){const K=this.data;for(let ae=0;ae<K.length;++ae)K[ae]+=F;return this}sub(F){return this.clone().sub_(F)}sub_(F){const K=this.data;for(let ae=0;ae<K.length;++ae)K[ae]-=F;return this}clone(){return new o(this.type,this.data.slice(),this.dims.slice())}slice(...F){const K=[],ae=[];for(let Me=0;Me<this.dims.length;++Me){let Q=F[Me];if(Q==null)ae.push([0,this.dims[Me]]),K.push(this.dims[Me]);else if(typeof Q=="number")Q=b(Q,this.dims[Me],Me),ae.push([Q,Q+1]);else if(Array.isArray(Q)&&Q.length===2){let[V,fe]=Q;if(V=V===null?0:b(V,this.dims[Me],Me,!1),fe=fe===null?this.dims[Me]:b(fe,this.dims[Me],Me,!1),V>fe)throw new Error(`Invalid slice: ${Q}`);const Ce=[Math.max(V,0),Math.min(fe,this.dims[Me])];ae.push(Ce),K.push(Ce[1]-Ce[0])}else throw new Error(`Invalid slice: ${Q}`)}const Z=ae.map(([Me,Q])=>Q-Me),we=Z.reduce((Me,Q)=>Me*Q),_e=this.data,Ae=new _e.constructor(we),qe=this.stride();for(let Me=0;Me<we;++Me){let Q=0;for(let V=Z.length-1,fe=Me;V>=0;--V){const Ce=Z[V];Q+=(fe%Ce+ae[V][0])*qe[V],fe=Math.floor(fe/Ce)}Ae[Me]=_e[Q]}return new o(this.type,Ae,K)}permute(...F){return c(this,F)}transpose(...F){return this.permute(...F)}sum(F=null,K=!1){return this.norm(1,F,K)}norm(F="fro",K=null,ae=!1){if(F==="fro")F=2;else if(typeof F=="string")throw Error(`Unsupported norm: ${F}`);const Z=this.data,we=(Me,Q)=>Me+Q**F;if(K===null){const Me=Z.reduce(we,0)**(1/F);return new o(this.type,[Me],[])}const[_e,Ae,qe]=$(we,this,K,ae);if(F!==1)for(let Me=0;Me<Ae.length;++Me)Ae[Me]=Ae[Me]**(1/F);return new o(_e,Ae,qe)}normalize_(F=2,K=1){K=b(K,this.dims.length);const ae=this.norm(F,K,!0),Z=this.data,we=ae.data;for(let _e=0;_e<Z.length;++_e){let Ae=0;for(let qe=this.dims.length-1,Me=_e,Q=1;qe>=0;--qe){const V=this.dims[qe];if(qe!==K){const fe=Me%V;Ae+=fe*Q,Q*=this.dims[qe]}Me=Math.floor(Me/V)}Z[_e]/=we[Ae]}return this}normalize(F=2,K=1){return this.clone().normalize_(F,K)}stride(){return Y(this.dims)}squeeze(F=null){return new o(this.type,this.data,k(this.dims,F))}squeeze_(F=null){return this.dims=k(this.dims,F),this}unsqueeze(F=null){return new o(this.type,this.data,P(this.dims,F))}unsqueeze_(F=null){return this.dims=P(this.dims,F),this}flatten_(F=0,K=-1){K=(K+this.dims.length)%this.dims.length;let ae=this.dims.slice(0,F),Z=this.dims.slice(F,K+1),we=this.dims.slice(K+1);return this.dims=[...ae,Z.reduce((_e,Ae)=>_e*Ae,1),...we],this}flatten(F=0,K=-1){return this.clone().flatten_(F,K)}view(...F){let K=-1;for(let Z=0;Z<F.length;++Z)if(F[Z]===-1){if(K!==-1)throw new Error("Only one dimension can be inferred");K=Z}const ae=this.data;if(K!==-1){const Z=F.reduce((we,_e,Ae)=>Ae!==K?we*_e:we,1);F[K]=ae.length/Z}return new o(this.type,ae,F)}neg_(){const F=this.data;for(let K=0;K<F.length;++K)F[K]=-F[K];return this}neg(){return this.clone().neg_()}gt(F){const K=new Uint8Array(this.data.length),ae=this.data;for(let Z=0;Z<ae.length;++Z)K[Z]=ae[Z]>F?1:0;return new o("bool",K,this.dims)}lt(F){const K=new Uint8Array(this.data.length),ae=this.data;for(let Z=0;Z<ae.length;++Z)K[Z]=ae[Z]<F?1:0;return new o("bool",K,this.dims)}clamp_(F,K){const ae=this.data;for(let Z=0;Z<ae.length;++Z)ae[Z]=Math.min(Math.max(ae[Z],F),K);return this}clamp(F,K){return this.clone().clamp_(F,K)}round_(){const F=this.data;for(let K=0;K<F.length;++K)F[K]=Math.round(F[K]);return this}round(){return this.clone().round_()}mean(F=null,K=!1){return N(this,F,K)}min(F=null,K=!1){if(F===null){const _e=(0,s.min)(this.data)[0];return new o(this.type,[_e],[])}const[ae,Z,we]=$((_e,Ae)=>Math.min(_e,Ae),this,F,K,1/0);return new o(ae,Z,we)}max(F=null,K=!1){if(F===null){const _e=(0,s.max)(this.data)[0];return new o(this.type,[_e],[])}const[ae,Z,we]=$((_e,Ae)=>Math.max(_e,Ae),this,F,K,-1/0);return new o(ae,Z,we)}argmin(F=null,K=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const ae=(0,s.min)(this.data)[1];return new o("int64",[BigInt(ae)],[])}argmax(F=null,K=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const ae=(0,s.max)(this.data)[1];return new o("int64",[BigInt(ae)],[])}to(F){if(this.type===F)return this;if(!i.hasOwnProperty(F))throw new Error(`Unsupported type: ${F}`);let K;const ae=["int64","uint64"].includes(this.type),Z=["int64","uint64"].includes(F);return ae&&!Z?K=Number:!ae&&Z&&(K=BigInt),new o(F,i[F].from(this.data,K),this.dims)}}function l(j,F){const K=j.length,ae=F.reduce((we,_e)=>we*_e);if(K!==ae)throw Error(`cannot reshape array of size ${K} into shape (${F})`);let Z=j;for(let we=F.length-1;we>=0;we--)Z=Z.reduce((_e,Ae)=>{let qe=_e[_e.length-1];return qe.length<F[we]?qe.push(Ae):_e.push([Ae]),_e},[[]]);return Z[0]}function c(j,F){const[K,ae]=(0,s.permute_data)(j.data,j.dims,F);return new o(j.type,K,ae)}function p(j,[F,K],ae="bilinear",Z=!1){const we=j.dims.at(-3)??1,_e=j.dims.at(-2),Ae=j.dims.at(-1);let qe=(0,s.interpolate_data)(j.data,[we,_e,Ae],[F,K],ae,Z);return new o(j.type,qe,[we,F,K])}async function d(j,{size:F=null,mode:K="bilinear"}={}){if(j.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!F)throw new Error("`interpolate_4d` requires a `size` argument.");let ae;if(F.length===2)ae=[...j.dims.slice(0,2),...F];else if(F.length===3)ae=[j.dims[0],...F];else if(F.length===4)ae=F;else throw new Error("`size` must be of length 2, 3, or 4.");let Z;if(K==="nearest")Z=await n.TensorOpRegistry.nearest_interpolate_4d;else if(K==="bilinear")Z=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(K==="bicubic")Z=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${K}`);const we=new o("int64",new BigInt64Array(ae.map(BigInt)),[ae.length]);return await Z({x:j,s:we})}async function h(j,F){return await(await n.TensorOpRegistry.matmul)({a:j,b:F})}async function g(j,F){return await(await n.TensorOpRegistry.rfft)({x:j,a:F})}async function _(j,F){const K=await n.TensorOpRegistry.top_k;return F==null?F=j.dims.at(-1):F=Math.min(F,j.dims.at(-1)),await K({x:j,k:new o("int64",[BigInt(F)],[1])})}const E=j=>new o("int64",j,[j.length]);async function A(j,F,K,ae,Z){return await(await n.TensorOpRegistry.slice)({x:j,s:E(F),e:E(K),a:E(ae),t:E(Z??new Array(ae.length).fill(1))})}function M(j,F){const K=j.data,ae=F.data,Z=[j.dims[0],j.dims[2]],we=new K.constructor(Z[0]*Z[1]),[_e,Ae,qe]=j.dims;let Me=0;for(let Q=0;Q<_e;++Q){const V=Q*qe*Ae;for(let fe=0;fe<qe;++fe){let Ce=0,Ee=0;const Oe=Q*Ae,Ie=V+fe;for(let je=0;je<Ae;++je){const Ge=Number(ae[Oe+je]);Ee+=Ge,Ce+=K[Ie+je*qe]*Ge}const ze=Ce/Ee;we[Me++]=ze}}return new o(j.type,we,Z)}function y(j,F,{eps:K=1e-5}={}){if(j.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ae,Z]=j.dims;if(F.length!==1&&F[0]!==Z)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[we,_e]=z(j,1,0,!0),Ae=we.data,qe=_e.data,Me=j.data,Q=new Me.constructor(Me.length);for(let V=0;V<ae;++V){const fe=V*Z;for(let Ce=0;Ce<Z;++Ce){const Ee=fe+Ce;Q[Ee]=(Me[Ee]-qe[V])/(Ae[V]+K)}}return new o(j.type,Q,j.dims)}function k(j,F){return j=j.slice(),F===null?j=j.filter(K=>K!==1):typeof F=="number"?j[F]===1&&j.splice(F,1):Array.isArray(F)&&(j=j.filter((K,ae)=>K!==1||!F.includes(ae))),j}function P(j,F){return F=b(F,j.length+1),j=j.slice(),j.splice(F,0,1),j}function b(j,F,K=null,ae=!0){if(j<-F||j>=F){if(ae)throw new Error(`IndexError: index ${j} is out of bounds for dimension${K===null?"":" "+K} with size ${F}`);return j<-F?0:F}return j<0&&(j=(j%F+F)%F),j}function w(j,F=0){F=b(F,j[0].dims.length);const K=j[0].dims.slice();K[F]=j.reduce((_e,Ae)=>_e+Ae.dims[F],0);const ae=K.reduce((_e,Ae)=>_e*Ae,1),Z=new j[0].data.constructor(ae),we=j[0].type;if(F===0){let _e=0;for(const Ae of j){const qe=Ae.data;Z.set(qe,_e),_e+=qe.length}}else{let _e=0;for(let Ae=0;Ae<j.length;++Ae){const{data:qe,dims:Me}=j[Ae];for(let Q=0;Q<qe.length;++Q){let V=0;for(let fe=Me.length-1,Ce=Q,Ee=1;fe>=0;--fe){const Oe=Me[fe];let Ie=Ce%Oe;fe===F&&(Ie+=_e),V+=Ie*Ee,Ee*=K[fe],Ce=Math.floor(Ce/Oe)}Z[V]=qe[Q]}_e+=Me[F]}}return new o(we,Z,K)}function T(j,F=0){return w(j.map(K=>K.unsqueeze(F)),F)}function $(j,F,K=null,ae=!1,Z=null){const we=F.data,_e=F.dims;K=b(K,_e.length);const Ae=_e.slice();Ae[K]=1;const qe=new we.constructor(we.length/_e[K]);Z!==null&&qe.fill(Z);for(let Me=0;Me<we.length;++Me){let Q=0;for(let V=_e.length-1,fe=Me,Ce=1;V>=0;--V){const Ee=_e[V];if(V!==K){const Oe=fe%Ee;Q+=Oe*Ce,Ce*=Ae[V]}fe=Math.floor(fe/Ee)}qe[Q]=j(qe[Q],we[Me],Me,Q)}return ae||Ae.splice(K,1),[F.type,qe,Ae]}function z(j,F=null,K=1,ae=!1){const Z=j.data,we=j.dims;if(F===null){const Ce=Z.reduce((ze,je)=>ze+je,0)/Z.length,Ee=Math.sqrt(Z.reduce((ze,je)=>ze+(je-Ce)**2,0)/(Z.length-K)),Oe=new o(j.type,[Ce],[]);return[new o(j.type,[Ee],[]),Oe]}F=b(F,we.length);const _e=N(j,F,ae),Ae=_e.data,[qe,Me,Q]=$((fe,Ce,Ee,Oe)=>fe+(Ce-Ae[Oe])**2,j,F,ae);for(let fe=0;fe<Me.length;++fe)Me[fe]=Math.sqrt(Me[fe]/(we[F]-K));return[new o(qe,Me,Q),_e]}function N(j,F=null,K=!1){const ae=j.dims,Z=j.data;if(F===null){const qe=Z.reduce((Me,Q)=>Me+Q,0);return new o(j.type,[qe/Z.length],[])}F=b(F,ae.length);const[we,_e,Ae]=$((qe,Me)=>qe+Me,j,F,K);if(ae[F]!==1)for(let qe=0;qe<_e.length;++qe)_e[qe]/=ae[F];return new o(we,_e,Ae)}function Y(j){const F=new Array(j.length);for(let K=j.length-1,ae=1;K>=0;--K)F[K]=ae,ae*=j[K];return F}function J(j,F,K,ae){const Z=j.reduce((we,_e)=>we*_e,1);return new o(K,new ae(Z).fill(F),j)}function W(j,F){let K,ae;if(typeof F=="number")K="float32",ae=Float32Array;else if(typeof F=="bigint")K="int64",ae=BigInt64Array;else if(typeof F=="boolean")K="bool",ae=Uint8Array;else throw new Error(`Unsupported data type: ${typeof F}`);return J(j,F,K,ae)}function te(j,F){return W(j.dims,F)}function H(j){return J(j,1n,"int64",BigInt64Array)}function R(j){return H(j.dims)}function q(j){return J(j,0n,"int64",BigInt64Array)}function ee(j){return q(j.dims)}function le(j){const F=j.reduce((K,ae)=>K*ae,1);return new o("float32",Float32Array.from({length:F},()=>Math.random()),j)}function de(j,F){if(j.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(j.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(F))throw new Error("The precision must be either 'binary' or 'ubinary'");const K=F==="binary",ae=K?"int8":"uint8",Z=K?Int8Array:Uint8Array,we=j.data,_e=new Z(we.length/8);for(let Ae=0;Ae<we.length;++Ae){const qe=we[Ae]>0?1:0,Me=Math.floor(Ae/8),Q=Ae%8;_e[Me]|=qe<<7-Q,K&&Q===0&&(_e[Me]-=128)}return new o(ae,_e,[j.dims[0],j.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>i,RawVideoFrame:()=>n,load_video:()=>o});var s=t("./src/utils/image.js"),a=t("./src/env.js");class n{constructor(c,p){this.image=c,this.timestamp=p}}class i{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((d,h)=>new n(d,(h+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function o(l,{num_frames:c=null,fps:p=null}={}){if(!a.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const d=[],h=document.createElement("video");if(h.crossOrigin="anonymous",h.muted=!0,typeof l=="string")h.src=l;else if(l instanceof Blob)h.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)h.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(k=>h.onloadedmetadata=k),h.seekable.start(0)===h.seekable.end(0)){const P=await(await fetch(h.src)).blob();h.src=URL.createObjectURL(P),await new Promise(b=>h.onloadedmetadata=b)}const g=h.duration;let _,E;c!=null?(_=c,E=c===1?0:g/(c-1)):(E=1/p,_=Math.floor(g/E));let A=[];for(let k=0;k<_;++k)A.push(c===1?g/2:k*E);const M=document.createElement("canvas");M.width=h.videoWidth,M.height=h.videoHeight;const y=M.getContext("2d",{willReadFrequently:!0});for(const k of A){h.currentTime=k,await new Promise(T=>{h.onseeked=T}),y.drawImage(h,0,0,M.width,M.height);const P=y.getImageData(0,0,M.width,M.height),b=new s.RawImage(P.data,M.width,M.height,4),w=new n(b,k);d.push(w)}return h.remove(),new i(d,g)}}},Cy={};function Dt(e){var r=Cy[e];if(r!==void 0)return r.exports;var t=Cy[e]={exports:{}};return iT[e](t,t.exports,Dt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Dt.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var a=Object.create(null);Dt.r(a);var n={};r=r||[null,e({}),e([]),e(e)];for(var i=s&2&&t;typeof i=="object"&&!~r.indexOf(i);i=e(i))Object.getOwnPropertyNames(i).forEach(o=>n[o]=()=>t[o]);return n.default=()=>t,Dt.d(a,n),a}})(),Dt.d=(e,r)=>{for(var t in r)Dt.o(r,t)&&!Dt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},Dt.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),Dt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Dt.r(m),Dt.d(m,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>a.AutoConfig,AutoFeatureExtractor:()=>h.AutoFeatureExtractor,AutoImageProcessor:()=>E.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>y.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>k.BaseStreamer,BeitFeatureExtractor:()=>_.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>_.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>_.CLIPFeatureExtractor,CLIPImageProcessor:()=>_.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>_.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>b.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>_.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>_.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>_.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>_.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>_.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>_.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>_.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>_.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>_.DonutFeatureExtractor,DonutImageProcessor:()=>_.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>_.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>P.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>M.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>b.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>b.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>M.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>M.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>g.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>P.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>_.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>M.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>_.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LogitsProcessor:()=>b.LogitsProcessor,LogitsProcessorList:()=>b.LogitsProcessorList,LogitsWarper:()=>b.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>_.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>_.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>_.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>P.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>M.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>b.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>b.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>_.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>_.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>_.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>_.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>_.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>_.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>_.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>_.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>_.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>_.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>M.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>b.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>b.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>_.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>_.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>_.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>M.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>_.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>M.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>_.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>M.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>a.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>A.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>_.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>M.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>_.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>M.Qwen2VLProcessor,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>_.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>i.RawImage,RawVideo:()=>o.RawVideo,RawVideoFrame:()=>o.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>b.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>_.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>M.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>_.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>_.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>_.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>_.SmolVLMImageProcessor,SmolVLMProcessor:()=>M.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>M.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>P.StoppingCriteria,StoppingCriteriaList:()=>P.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>b.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>_.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>b.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>k.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>b.TopKLogitsWarper,TopPLogitsWarper:()=>b.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>M.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>M.VLChatProcessor,VLMImageProcessor:()=>_.VLMImageProcessor,ViTFeatureExtractor:()=>_.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>_.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>_.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>_.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>M.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>M.WhisperProcessor,WhisperTextStreamer:()=>k.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>b.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>_.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>_.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>a.getKeyValueShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>i.load_image,load_video:()=>o.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Dt("./src/env.js"),r=Dt("./src/pipelines.js"),t=Dt("./src/models.js"),s=Dt("./src/tokenizers.js"),a=Dt("./src/configs.js"),n=Dt("./src/utils/audio.js"),i=Dt("./src/utils/image.js"),o=Dt("./src/utils/video.js"),l=Dt("./src/utils/tensor.js"),c=Dt("./src/utils/maths.js"),p=Dt("./src/base/feature_extraction_utils.js"),d=Dt("./src/models/feature_extractors.js"),h=Dt("./src/models/auto/feature_extraction_auto.js"),g=Dt("./src/base/image_processors_utils.js"),_=Dt("./src/models/image_processors.js"),E=Dt("./src/models/auto/image_processing_auto.js"),A=Dt("./src/base/processing_utils.js"),M=Dt("./src/models/processors.js"),y=Dt("./src/models/auto/processing_auto.js"),k=Dt("./src/generation/streamers.js"),P=Dt("./src/generation/stopping_criteria.js"),b=Dt("./src/generation/logits_process.js")})(),m.ASTFeatureExtractor,m.ASTForAudioClassification,m.ASTModel,m.ASTPreTrainedModel,m.AlbertForMaskedLM,m.AlbertForQuestionAnswering,m.AlbertForSequenceClassification,m.AlbertModel,m.AlbertPreTrainedModel,m.AlbertTokenizer,m.AudioClassificationPipeline,m.AutoConfig,m.AutoFeatureExtractor,m.AutoImageProcessor,m.AutoModel,m.AutoModelForAudioClassification,m.AutoModelForAudioFrameClassification,m.AutoModelForAudioTextToText,m.AutoModelForCTC,m.AutoModelForCausalLM,m.AutoModelForDepthEstimation,m.AutoModelForDocumentQuestionAnswering,m.AutoModelForImageClassification,m.AutoModelForImageFeatureExtraction,m.AutoModelForImageMatting,m.AutoModelForImageSegmentation,m.AutoModelForImageTextToText,m.AutoModelForImageToImage,m.AutoModelForMaskGeneration,m.AutoModelForMaskedLM,m.AutoModelForNormalEstimation,m.AutoModelForObjectDetection,m.AutoModelForPoseEstimation,m.AutoModelForQuestionAnswering,m.AutoModelForSemanticSegmentation,m.AutoModelForSeq2SeqLM,m.AutoModelForSequenceClassification,m.AutoModelForSpeechSeq2Seq,m.AutoModelForTextToSpectrogram,m.AutoModelForTextToWaveform,m.AutoModelForTokenClassification,m.AutoModelForUniversalSegmentation,m.AutoModelForVision2Seq,m.AutoModelForXVector,m.AutoModelForZeroShotObjectDetection,m.AutoProcessor,m.AutoTokenizer,m.AutomaticSpeechRecognitionPipeline,m.BackgroundRemovalPipeline,m.BartForConditionalGeneration,m.BartForSequenceClassification,m.BartModel,m.BartPretrainedModel,m.BartTokenizer,m.BaseModelOutput,m.BaseStreamer,m.BeitFeatureExtractor,m.BeitForImageClassification,m.BeitModel,m.BeitPreTrainedModel,m.BertForMaskedLM,m.BertForQuestionAnswering,m.BertForSequenceClassification,m.BertForTokenClassification,m.BertModel,m.BertPreTrainedModel,m.BertTokenizer,m.BitImageProcessor,m.BlenderbotForConditionalGeneration,m.BlenderbotModel,m.BlenderbotPreTrainedModel,m.BlenderbotSmallForConditionalGeneration,m.BlenderbotSmallModel,m.BlenderbotSmallPreTrainedModel,m.BlenderbotSmallTokenizer,m.BlenderbotTokenizer,m.BloomForCausalLM,m.BloomModel,m.BloomPreTrainedModel,m.BloomTokenizer,m.CLIPFeatureExtractor,m.CLIPImageProcessor,m.CLIPModel,m.CLIPPreTrainedModel,m.CLIPSegForImageSegmentation,m.CLIPSegModel,m.CLIPSegPreTrainedModel,m.CLIPTextModel,m.CLIPTextModelWithProjection,m.CLIPTokenizer,m.CLIPVisionModel,m.CLIPVisionModelWithProjection,m.CamembertForMaskedLM,m.CamembertForQuestionAnswering,m.CamembertForSequenceClassification,m.CamembertForTokenClassification,m.CamembertModel,m.CamembertPreTrainedModel,m.CamembertTokenizer,m.CausalLMOutput,m.CausalLMOutputWithPast,m.ChineseCLIPFeatureExtractor,m.ChineseCLIPModel,m.ChineseCLIPPreTrainedModel,m.ClapAudioModelWithProjection,m.ClapFeatureExtractor,m.ClapModel,m.ClapPreTrainedModel,m.ClapTextModelWithProjection,m.ClassifierFreeGuidanceLogitsProcessor,m.CodeGenForCausalLM,m.CodeGenModel,m.CodeGenPreTrainedModel,m.CodeGenTokenizer,m.CodeLlamaTokenizer,m.CohereForCausalLM,m.CohereModel,m.CoherePreTrainedModel,m.CohereTokenizer,m.ConvBertForMaskedLM,m.ConvBertForQuestionAnswering,m.ConvBertForSequenceClassification,m.ConvBertForTokenClassification,m.ConvBertModel,m.ConvBertPreTrainedModel,m.ConvBertTokenizer,m.ConvNextFeatureExtractor,m.ConvNextForImageClassification,m.ConvNextImageProcessor,m.ConvNextModel,m.ConvNextPreTrainedModel,m.ConvNextV2ForImageClassification,m.ConvNextV2Model,m.ConvNextV2PreTrainedModel,m.DPTFeatureExtractor,m.DPTForDepthEstimation,m.DPTImageProcessor,m.DPTModel,m.DPTPreTrainedModel,m.DacDecoderModel,m.DacDecoderOutput,m.DacEncoderModel,m.DacEncoderOutput,m.DacFeatureExtractor,m.DacModel,m.DacPreTrainedModel,m.DataTypeMap,m.DebertaForMaskedLM,m.DebertaForQuestionAnswering,m.DebertaForSequenceClassification,m.DebertaForTokenClassification,m.DebertaModel,m.DebertaPreTrainedModel,m.DebertaTokenizer,m.DebertaV2ForMaskedLM,m.DebertaV2ForQuestionAnswering,m.DebertaV2ForSequenceClassification,m.DebertaV2ForTokenClassification,m.DebertaV2Model,m.DebertaV2PreTrainedModel,m.DebertaV2Tokenizer,m.DecisionTransformerModel,m.DecisionTransformerPreTrainedModel,m.DeiTFeatureExtractor,m.DeiTForImageClassification,m.DeiTImageProcessor,m.DeiTModel,m.DeiTPreTrainedModel,m.DepthAnythingForDepthEstimation,m.DepthAnythingPreTrainedModel,m.DepthEstimationPipeline,m.DepthProForDepthEstimation,m.DepthProPreTrainedModel,m.DetrFeatureExtractor,m.DetrForObjectDetection,m.DetrForSegmentation,m.DetrImageProcessor,m.DetrModel,m.DetrObjectDetectionOutput,m.DetrPreTrainedModel,m.DetrSegmentationOutput,m.Dinov2ForImageClassification,m.Dinov2Model,m.Dinov2PreTrainedModel,m.Dinov2WithRegistersForImageClassification,m.Dinov2WithRegistersModel,m.Dinov2WithRegistersPreTrainedModel,m.DistilBertForMaskedLM,m.DistilBertForQuestionAnswering,m.DistilBertForSequenceClassification,m.DistilBertForTokenClassification,m.DistilBertModel,m.DistilBertPreTrainedModel,m.DistilBertTokenizer,m.DocumentQuestionAnsweringPipeline,m.DonutFeatureExtractor,m.DonutImageProcessor,m.DonutSwinModel,m.DonutSwinPreTrainedModel,m.EfficientNetForImageClassification,m.EfficientNetImageProcessor,m.EfficientNetModel,m.EfficientNetPreTrainedModel,m.ElectraForMaskedLM,m.ElectraForQuestionAnswering,m.ElectraForSequenceClassification,m.ElectraForTokenClassification,m.ElectraModel,m.ElectraPreTrainedModel,m.ElectraTokenizer,m.EncodecFeatureExtractor,m.EosTokenCriteria,m.EsmForMaskedLM,m.EsmForSequenceClassification,m.EsmForTokenClassification,m.EsmModel,m.EsmPreTrainedModel,m.EsmTokenizer,m.ExaoneForCausalLM,m.ExaoneModel,m.ExaonePreTrainedModel,m.FFT,m.FalconForCausalLM,m.FalconModel,m.FalconPreTrainedModel,m.FalconTokenizer,m.FastViTForImageClassification,m.FastViTModel,m.FastViTPreTrainedModel,m.FeatureExtractionPipeline,m.FeatureExtractor,m.FillMaskPipeline,m.Florence2ForConditionalGeneration,m.Florence2PreTrainedModel,m.Florence2Processor,m.ForcedBOSTokenLogitsProcessor,m.ForcedEOSTokenLogitsProcessor,m.GLPNFeatureExtractor,m.GLPNForDepthEstimation,m.GLPNModel,m.GLPNPreTrainedModel,m.GPT2LMHeadModel,m.GPT2Model,m.GPT2PreTrainedModel,m.GPT2Tokenizer,m.GPTBigCodeForCausalLM,m.GPTBigCodeModel,m.GPTBigCodePreTrainedModel,m.GPTJForCausalLM,m.GPTJModel,m.GPTJPreTrainedModel,m.GPTNeoForCausalLM,m.GPTNeoModel,m.GPTNeoPreTrainedModel,m.GPTNeoXForCausalLM,m.GPTNeoXModel,m.GPTNeoXPreTrainedModel,m.GPTNeoXTokenizer,m.Gemma2ForCausalLM,m.Gemma2Model,m.Gemma2PreTrainedModel,m.Gemma3ForCausalLM,m.Gemma3Model,m.Gemma3PreTrainedModel,m.GemmaForCausalLM,m.GemmaModel,m.GemmaPreTrainedModel,m.GemmaTokenizer,m.GlmForCausalLM,m.GlmModel,m.GlmPreTrainedModel,m.GraniteForCausalLM,m.GraniteModel,m.GranitePreTrainedModel,m.Grok1Tokenizer,m.GroundingDinoForObjectDetection,m.GroundingDinoImageProcessor,m.GroundingDinoPreTrainedModel,m.GroundingDinoProcessor,m.GroupViTModel,m.GroupViTPreTrainedModel,m.HeliumForCausalLM,m.HeliumModel,m.HeliumPreTrainedModel,m.HerbertTokenizer,m.HieraForImageClassification,m.HieraModel,m.HieraPreTrainedModel,m.HubertForCTC,m.HubertForSequenceClassification,m.HubertModel,m.HubertPreTrainedModel,m.IJepaForImageClassification,m.IJepaModel,m.IJepaPreTrainedModel,m.Idefics3ForConditionalGeneration,m.Idefics3ImageProcessor,m.Idefics3PreTrainedModel,m.Idefics3Processor,m.ImageClassificationPipeline,m.ImageFeatureExtractionPipeline,m.ImageFeatureExtractor,m.ImageMattingOutput,m.ImageProcessor,m.ImageSegmentationPipeline,m.ImageToImagePipeline,m.ImageToTextPipeline,m.InterruptableStoppingCriteria,m.JAISLMHeadModel,m.JAISModel,m.JAISPreTrainedModel,m.JinaCLIPImageProcessor,m.JinaCLIPModel,m.JinaCLIPPreTrainedModel,m.JinaCLIPProcessor,m.JinaCLIPTextModel,m.JinaCLIPVisionModel,m.LiteWhisperForConditionalGeneration,m.LlamaForCausalLM,m.LlamaModel,m.LlamaPreTrainedModel,m.LlamaTokenizer,m.LlavaForConditionalGeneration,m.LlavaOnevisionForConditionalGeneration,m.LlavaOnevisionImageProcessor,m.LlavaPreTrainedModel,m.LogitsProcessor,m.LogitsProcessorList,m.LogitsWarper,m.LongT5ForConditionalGeneration,m.LongT5Model,m.LongT5PreTrainedModel,m.M2M100ForConditionalGeneration,m.M2M100Model,m.M2M100PreTrainedModel,m.M2M100Tokenizer,m.MBart50Tokenizer,m.MBartForCausalLM,m.MBartForConditionalGeneration,m.MBartForSequenceClassification,m.MBartModel,m.MBartPreTrainedModel,m.MBartTokenizer,m.MPNetForMaskedLM,m.MPNetForQuestionAnswering,m.MPNetForSequenceClassification,m.MPNetForTokenClassification,m.MPNetModel,m.MPNetPreTrainedModel,m.MPNetTokenizer,m.MT5ForConditionalGeneration,m.MT5Model,m.MT5PreTrainedModel,m.MarianMTModel,m.MarianModel,m.MarianPreTrainedModel,m.MarianTokenizer,m.Mask2FormerImageProcessor,m.MaskFormerFeatureExtractor,m.MaskFormerForInstanceSegmentation,m.MaskFormerImageProcessor,m.MaskFormerModel,m.MaskFormerPreTrainedModel,m.MaskedLMOutput,m.MaxLengthCriteria,m.Metric3DForDepthEstimation,m.Metric3DPreTrainedModel,m.Metric3Dv2ForDepthEstimation,m.Metric3Dv2PreTrainedModel,m.MgpstrForSceneTextRecognition,m.MgpstrModelOutput,m.MgpstrPreTrainedModel,m.MgpstrProcessor,m.MgpstrTokenizer,m.MimiDecoderModel,m.MimiDecoderOutput,m.MimiEncoderModel,m.MimiEncoderOutput,m.MimiModel,m.MimiPreTrainedModel,m.MinLengthLogitsProcessor,m.MinNewTokensLengthLogitsProcessor,m.MistralForCausalLM,m.MistralModel,m.MistralPreTrainedModel,m.MobileBertForMaskedLM,m.MobileBertForQuestionAnswering,m.MobileBertForSequenceClassification,m.MobileBertModel,m.MobileBertPreTrainedModel,m.MobileBertTokenizer,m.MobileLLMForCausalLM,m.MobileLLMModel,m.MobileLLMPreTrainedModel,m.MobileNetV1FeatureExtractor,m.MobileNetV1ForImageClassification,m.MobileNetV1ForSemanticSegmentation,m.MobileNetV1ImageProcessor,m.MobileNetV1Model,m.MobileNetV1PreTrainedModel,m.MobileNetV2FeatureExtractor,m.MobileNetV2ForImageClassification,m.MobileNetV2ForSemanticSegmentation,m.MobileNetV2ImageProcessor,m.MobileNetV2Model,m.MobileNetV2PreTrainedModel,m.MobileNetV3FeatureExtractor,m.MobileNetV3ForImageClassification,m.MobileNetV3ForSemanticSegmentation,m.MobileNetV3ImageProcessor,m.MobileNetV3Model,m.MobileNetV3PreTrainedModel,m.MobileNetV4FeatureExtractor,m.MobileNetV4ForImageClassification,m.MobileNetV4ForSemanticSegmentation,m.MobileNetV4ImageProcessor,m.MobileNetV4Model,m.MobileNetV4PreTrainedModel,m.MobileViTFeatureExtractor,m.MobileViTForImageClassification,m.MobileViTImageProcessor,m.MobileViTModel,m.MobileViTPreTrainedModel,m.MobileViTV2ForImageClassification,m.MobileViTV2Model,m.MobileViTV2PreTrainedModel,m.ModelOutput,m.ModernBertForMaskedLM,m.ModernBertForSequenceClassification,m.ModernBertForTokenClassification,m.ModernBertModel,m.ModernBertPreTrainedModel,m.Moondream1ForConditionalGeneration,m.MoonshineFeatureExtractor,m.MoonshineForConditionalGeneration,m.MoonshineModel,m.MoonshinePreTrainedModel,m.MoonshineProcessor,m.MptForCausalLM,m.MptModel,m.MptPreTrainedModel,m.MultiModalityCausalLM,m.MultiModalityPreTrainedModel,m.MusicgenForCausalLM,m.MusicgenForConditionalGeneration,m.MusicgenModel,m.MusicgenPreTrainedModel,m.NllbTokenizer,m.NoBadWordsLogitsProcessor,m.NoRepeatNGramLogitsProcessor,m.NomicBertModel,m.NomicBertPreTrainedModel,m.NougatImageProcessor,m.NougatTokenizer,m.OPTForCausalLM,m.OPTModel,m.OPTPreTrainedModel,m.ObjectDetectionPipeline,m.Olmo2ForCausalLM,m.Olmo2Model,m.Olmo2PreTrainedModel,m.OlmoForCausalLM,m.OlmoModel,m.OlmoPreTrainedModel,m.OpenELMForCausalLM,m.OpenELMModel,m.OpenELMPreTrainedModel,m.OwlViTFeatureExtractor,m.OwlViTForObjectDetection,m.OwlViTImageProcessor,m.OwlViTModel,m.OwlViTPreTrainedModel,m.OwlViTProcessor,m.Owlv2ForObjectDetection,m.Owlv2ImageProcessor,m.Owlv2Model,m.Owlv2PreTrainedModel,m.PaliGemmaForConditionalGeneration,m.PaliGemmaPreTrainedModel,m.PaliGemmaProcessor,m.PatchTSMixerForPrediction,m.PatchTSMixerModel,m.PatchTSMixerPreTrainedModel,m.PatchTSTForPrediction,m.PatchTSTModel,m.PatchTSTPreTrainedModel,m.Phi3ForCausalLM,m.Phi3Model,m.Phi3PreTrainedModel,m.Phi3VForCausalLM,m.Phi3VImageProcessor,m.Phi3VPreTrainedModel,m.Phi3VProcessor,m.PhiForCausalLM,m.PhiModel,m.PhiPreTrainedModel,m.Pipeline,m.PreTrainedModel,m.PreTrainedTokenizer,m.PretrainedConfig,m.PretrainedMixin,m.Processor,m.PvtForImageClassification,m.PvtImageProcessor,m.PvtModel,m.PvtPreTrainedModel,m.PyAnnoteFeatureExtractor,m.PyAnnoteForAudioFrameClassification,m.PyAnnoteModel,m.PyAnnotePreTrainedModel,m.PyAnnoteProcessor,m.QuestionAnsweringModelOutput,m.QuestionAnsweringPipeline,m.Qwen2ForCausalLM,m.Qwen2Model,m.Qwen2PreTrainedModel,m.Qwen2Tokenizer,m.Qwen2VLForConditionalGeneration,m.Qwen2VLImageProcessor,m.Qwen2VLPreTrainedModel,m.Qwen2VLProcessor,m.RFDetrForObjectDetection,m.RFDetrModel,m.RFDetrObjectDetectionOutput,m.RFDetrPreTrainedModel,m.RTDetrForObjectDetection,m.RTDetrImageProcessor,m.RTDetrModel,m.RTDetrObjectDetectionOutput,m.RTDetrPreTrainedModel,m.RTDetrV2ForObjectDetection,m.RTDetrV2Model,m.RTDetrV2ObjectDetectionOutput,m.RTDetrV2PreTrainedModel,m.RawAudio,m.RawImage,m.RawVideo,m.RawVideoFrame,m.RepetitionPenaltyLogitsProcessor,m.ResNetForImageClassification,m.ResNetModel,m.ResNetPreTrainedModel,m.RoFormerForMaskedLM,m.RoFormerForQuestionAnswering,m.RoFormerForSequenceClassification,m.RoFormerForTokenClassification,m.RoFormerModel,m.RoFormerPreTrainedModel,m.RoFormerTokenizer,m.RobertaForMaskedLM,m.RobertaForQuestionAnswering,m.RobertaForSequenceClassification,m.RobertaForTokenClassification,m.RobertaModel,m.RobertaPreTrainedModel,m.RobertaTokenizer,m.SamImageProcessor,m.SamImageSegmentationOutput,m.SamModel,m.SamPreTrainedModel,m.SamProcessor,m.SapiensForDepthEstimation,m.SapiensForNormalEstimation,m.SapiensForSemanticSegmentation,m.SapiensPreTrainedModel,m.SeamlessM4TFeatureExtractor,m.SegformerFeatureExtractor,m.SegformerForImageClassification,m.SegformerForSemanticSegmentation,m.SegformerImageProcessor,m.SegformerModel,m.SegformerPreTrainedModel,m.Seq2SeqLMOutput,m.SequenceClassifierOutput,m.SiglipImageProcessor,m.SiglipModel,m.SiglipPreTrainedModel,m.SiglipTextModel,m.SiglipTokenizer,m.SiglipVisionModel,m.SmolVLMForConditionalGeneration,m.SmolVLMImageProcessor,m.SmolVLMProcessor,m.SnacDecoderModel,m.SnacEncoderModel,m.SnacFeatureExtractor,m.SnacModel,m.SnacPreTrainedModel,m.SpeechT5FeatureExtractor,m.SpeechT5ForSpeechToText,m.SpeechT5ForTextToSpeech,m.SpeechT5HifiGan,m.SpeechT5Model,m.SpeechT5PreTrainedModel,m.SpeechT5Processor,m.SpeechT5Tokenizer,m.SqueezeBertForMaskedLM,m.SqueezeBertForQuestionAnswering,m.SqueezeBertForSequenceClassification,m.SqueezeBertModel,m.SqueezeBertPreTrainedModel,m.SqueezeBertTokenizer,m.StableLmForCausalLM,m.StableLmModel,m.StableLmPreTrainedModel,m.Starcoder2ForCausalLM,m.Starcoder2Model,m.Starcoder2PreTrainedModel,m.StoppingCriteria,m.StoppingCriteriaList,m.StyleTextToSpeech2Model,m.StyleTextToSpeech2PreTrainedModel,m.SummarizationPipeline,m.SuppressTokensAtBeginLogitsProcessor,m.Swin2SRForImageSuperResolution,m.Swin2SRImageProcessor,m.Swin2SRModel,m.Swin2SRPreTrainedModel,m.SwinForImageClassification,m.SwinForSemanticSegmentation,m.SwinModel,m.SwinPreTrainedModel,m.T5ForConditionalGeneration,m.T5Model,m.T5PreTrainedModel,m.T5Tokenizer,m.TableTransformerForObjectDetection,m.TableTransformerModel,m.TableTransformerObjectDetectionOutput,m.TableTransformerPreTrainedModel,m.TemperatureLogitsWarper,m.Tensor,m.Text2TextGenerationPipeline,m.TextClassificationPipeline,m.TextGenerationPipeline;var oT=m.TextStreamer;m.TextToAudioPipeline,m.TokenClassificationPipeline,m.TokenClassifierOutput,m.TokenizerModel,m.TopKLogitsWarper,m.TopPLogitsWarper,m.TrOCRForCausalLM,m.TrOCRPreTrainedModel,m.TranslationPipeline,m.UltravoxModel,m.UltravoxPreTrainedModel,m.UltravoxProcessor,m.UniSpeechForCTC,m.UniSpeechForSequenceClassification,m.UniSpeechModel,m.UniSpeechPreTrainedModel,m.UniSpeechSatForAudioFrameClassification,m.UniSpeechSatForCTC,m.UniSpeechSatForSequenceClassification,m.UniSpeechSatModel,m.UniSpeechSatPreTrainedModel,m.VLChatProcessor,m.VLMImageProcessor,m.ViTFeatureExtractor,m.ViTForImageClassification,m.ViTImageProcessor,m.ViTMAEModel,m.ViTMAEPreTrainedModel,m.ViTMSNForImageClassification,m.ViTMSNModel,m.ViTMSNPreTrainedModel,m.ViTModel,m.ViTPreTrainedModel,m.VisionEncoderDecoderModel,m.VitMatteForImageMatting,m.VitMatteImageProcessor,m.VitMattePreTrainedModel,m.VitPoseForPoseEstimation,m.VitPoseImageProcessor,m.VitPosePreTrainedModel,m.VitsModel,m.VitsModelOutput,m.VitsPreTrainedModel,m.VitsTokenizer,m.Wav2Vec2BertForCTC,m.Wav2Vec2BertForSequenceClassification,m.Wav2Vec2BertModel,m.Wav2Vec2BertPreTrainedModel,m.Wav2Vec2CTCTokenizer,m.Wav2Vec2FeatureExtractor,m.Wav2Vec2ForAudioFrameClassification,m.Wav2Vec2ForCTC,m.Wav2Vec2ForSequenceClassification,m.Wav2Vec2Model,m.Wav2Vec2PreTrainedModel,m.Wav2Vec2Processor,m.Wav2Vec2ProcessorWithLM,m.WavLMForAudioFrameClassification,m.WavLMForCTC,m.WavLMForSequenceClassification,m.WavLMForXVector,m.WavLMModel,m.WavLMPreTrainedModel,m.WeSpeakerFeatureExtractor,m.WeSpeakerResNetModel,m.WeSpeakerResNetPreTrainedModel,m.WhisperFeatureExtractor,m.WhisperForConditionalGeneration,m.WhisperModel,m.WhisperPreTrainedModel,m.WhisperProcessor,m.WhisperTextStreamer,m.WhisperTimeStampLogitsProcessor,m.WhisperTokenizer,m.XLMForQuestionAnswering,m.XLMForSequenceClassification,m.XLMForTokenClassification,m.XLMModel,m.XLMPreTrainedModel,m.XLMRobertaForMaskedLM,m.XLMRobertaForQuestionAnswering,m.XLMRobertaForSequenceClassification,m.XLMRobertaForTokenClassification,m.XLMRobertaModel,m.XLMRobertaPreTrainedModel,m.XLMRobertaTokenizer,m.XLMTokenizer,m.XLMWithLMHeadModel,m.XVectorOutput,m.YolosFeatureExtractor,m.YolosForObjectDetection,m.YolosImageProcessor,m.YolosModel,m.YolosObjectDetectionOutput,m.YolosPreTrainedModel,m.ZeroShotAudioClassificationPipeline,m.ZeroShotClassificationPipeline,m.ZeroShotImageClassificationPipeline,m.ZeroShotObjectDetectionPipeline,m.bankers_round,m.cat,m.cos_sim,m.dot,m.dynamic_time_warping;var qs=m.env;m.full,m.full_like,m.getKeyValueShapes,m.hamming,m.hanning,m.interpolate,m.interpolate_4d,m.interpolate_data,m.is_chinese_char,m.layer_norm,m.load_image,m.load_video,m.log_softmax,m.magnitude,m.matmul,m.max,m.mean;var lT=m.mean_pooling;m.medianFilter,m.mel_filter_bank,m.min,m.ones,m.ones_like,m.permute,m.permute_data;var cT=m.pipeline;m.quantize_embeddings,m.rand,m.read_audio,m.rfft,m.round,m.slice,m.softmax,m.spectrogram,m.stack,m.std_mean,m.topk,m.window_function,m.zeros,m.zeros_like;class uT{constructor(r="transformers-cache"){this.cacheName=r}async match(r){return(await caches.open(this.cacheName)).match(r)}async put(r,t){return(await caches.open(this.cacheName)).put(r,t)}}var dT=Object.defineProperty,pT=(e,r)=>{for(var t in r)dT(e,t,{get:r[t],enumerable:!0})},Td={};pT(Td,{audioClassification:()=>bT,audioToAudio:()=>TT,automaticSpeechRecognition:()=>vT,chatCompletion:()=>WT,chatCompletionStream:()=>GT,documentQuestionAnswering:()=>KT,featureExtraction:()=>IT,fillMask:()=>OT,imageClassification:()=>ET,imageSegmentation:()=>PT,imageToImage:()=>$T,imageToText:()=>CT,objectDetection:()=>ST,questionAnswering:()=>FT,request:()=>Vt,sentenceSimilarity:()=>DT,streamingRequest:()=>il,summarization:()=>LT,tableQuestionAnswering:()=>zT,tabularClassification:()=>QT,tabularRegression:()=>qT,textClassification:()=>BT,textGeneration:()=>RT,textGenerationStream:()=>NT,textToImage:()=>kT,textToSpeech:()=>xT,tokenClassification:()=>jT,translation:()=>VT,visualQuestionAnswering:()=>HT,zeroShotClassification:()=>UT,zeroShotImageClassification:()=>AT});function hT(e,r){return Object.assign({},...r.map(t=>{if(e[t]!==void 0)return{[t]:e[t]}}))}function fT(e,r){return e.includes(r)}function mT(e,r){const t=Array.isArray(r)?r:[r],s=Object.keys(e).filter(a=>!fT(t,a));return hT(e,s)}function nl(e){return/^http(s?):/.test(e)||e.startsWith("/")}var la=new Map,_T=10*60*1e3,gT=1e3,Sy="https://huggingface.co";async function ky(e,r,t){if(nl(e))return null;const s=`${e}:${r}`;let a=la.get(s);if(a&&a.date<new Date(Date.now()-_T)&&(la.delete(s),a=void 0),a===void 0){const n=await((t==null?void 0:t.fetch)??fetch)(`${Sy}/api/models/${e}?expand[]=pipeline_tag`,{headers:r?{Authorization:`Bearer ${r}`}:{}}).then(i=>i.json()).then(i=>i.pipeline_tag).catch(()=>null);if(!n)return null;a={task:n,date:new Date},la.set(s,{task:n,date:new Date}),la.size>gT&&la.delete(la.keys().next().value)}return a.task}var $y="https://api-inference.huggingface.co",al=null;async function Ay(e,r){const{accessToken:t,endpointUrl:s,...a}=e;let{model:n}=e;const{forceTask:i,includeCredentials:o,taskHint:l,wait_for_model:c,use_cache:p,dont_load_model:d,chatCompletion:h}=r??{},g={};if(t&&(g.Authorization=`Bearer ${t}`),!n&&!al&&l){const y=await fetch(`${Sy}/api/tasks`);y.ok&&(al=await y.json())}if(!n&&al&&l){const y=al[l];y&&(n=y.models[0].id)}if(!n)throw new Error("No model provided, and no default model found for this task");const _="data"in e&&!!e.data;_||(g["Content-Type"]="application/json"),c&&(g["X-Wait-For-Model"]="true"),p===!1&&(g["X-Use-Cache"]="false"),d&&(g["X-Load-Model"]="0");let E=(()=>{if(s&&nl(n))throw new TypeError("Both model and endpointUrl cannot be URLs");return nl(n)?(console.warn("Using a model URL is deprecated, please use the `endpointUrl` parameter instead"),n):s||(i?`${$y}/pipeline/${i}/${n}`:`${$y}/models/${n}`)})();h&&!E.endsWith("/chat/completions")&&(E+="/v1/chat/completions");let A;typeof o=="string"?A=o:o===!0&&(A="include");const M={headers:g,method:"POST",body:_?e.data:JSON.stringify({...a.model&&nl(a.model)?mT(a,"model"):a}),...A&&{credentials:A},signal:r==null?void 0:r.signal};return{url:E,info:M}}async function Vt(e,r){var n,i;const{url:t,info:s}=await Ay(e,r),a=await((r==null?void 0:r.fetch)??fetch)(t,s);if((r==null?void 0:r.retry_on_error)!==!1&&a.status===503&&!(r!=null&&r.wait_for_model))return Vt(e,{...r,wait_for_model:!0});if(!a.ok){if((n=a.headers.get("Content-Type"))!=null&&n.startsWith("application/json")){const o=await a.json();if([400,422,404,500].includes(a.status)&&(r!=null&&r.chatCompletion))throw new Error(`Server ${e.model} does not seem to support chat completion. Error: ${o.error}`);if(o.error)throw new Error(JSON.stringify(o.error))}throw new Error("An error occurred while fetching the blob")}return(i=a.headers.get("Content-Type"))!=null&&i.startsWith("application/json")?await a.json():await a.blob()}function wT(e){let r,t,s,a=!1;return function(i){r===void 0?(r=i,t=0,s=-1):r=MT(r,i);const o=r.length;let l=0;for(;t<o;){a&&(r[t]===10&&(l=++t),a=!1);let c=-1;for(;t<o&&c===-1;++t)switch(r[t]){case 58:s===-1&&(s=t-l);break;case 13:a=!0;case 10:c=t;break}if(c===-1)break;e(r.subarray(l,c),s),l=t,s=-1}l===o?r=void 0:l!==0&&(r=r.subarray(l),t-=l)}}function yT(e,r,t){let s=Iy();const a=new TextDecoder;return function(i,o){if(i.length===0)t==null||t(s),s=Iy();else if(o>0){const l=a.decode(i.subarray(0,o)),c=o+(i[o+1]===32?2:1),p=a.decode(i.subarray(c));switch(l){case"data":s.data=s.data?s.data+`
`+p:p;break;case"event":s.event=p;break;case"id":e(s.id=p);break;case"retry":const d=parseInt(p,10);isNaN(d)||r(s.retry=d);break}}}}function MT(e,r){const t=new Uint8Array(e.length+r.length);return t.set(e),t.set(r,e.length),t}function Iy(){return{data:"",event:"",id:"",retry:void 0}}async function*il(e,r){var c,p;const{url:t,info:s}=await Ay({...e,stream:!0},r),a=await((r==null?void 0:r.fetch)??fetch)(t,s);if((r==null?void 0:r.retry_on_error)!==!1&&a.status===503&&!(r!=null&&r.wait_for_model))return yield*il(e,{...r,wait_for_model:!0});if(!a.ok){if((c=a.headers.get("Content-Type"))!=null&&c.startsWith("application/json")){const d=await a.json();if([400,422,404,500].includes(a.status)&&(r!=null&&r.chatCompletion))throw new Error(`Server ${e.model} does not seem to support chat completion. Error: ${d.error}`);if(d.error)throw new Error(d.error)}throw new Error(`Server response contains error: ${a.status}`)}if(!((p=a.headers.get("content-type"))!=null&&p.startsWith("text/event-stream")))throw new Error("Server does not support event stream content type, it returned "+a.headers.get("content-type"));if(!a.body)return;const n=a.body.getReader();let i=[];const l=wT(yT(()=>{},()=>{},d=>{i.push(d)}));try{for(;;){const{done:d,value:h}=await n.read();if(d)return;l(h);for(const g of i)if(g.data.length>0){if(g.data==="[DONE]")return;const _=JSON.parse(g.data);if(typeof _=="object"&&_!==null&&"error"in _)throw new Error(_.error);yield _}i=[]}}finally{n.releaseLock()}}var Kt=class extends TypeError{constructor(e){super(`Invalid inference output: ${e}. Use the 'request' method with the same parameters to do a custom call with no type checking.`),this.name="InferenceOutputError"}};async function bT(e,r){const t=await Vt(e,{...r,taskHint:"audio-classification"});if(!(Array.isArray(t)&&t.every(a=>typeof a.label=="string"&&typeof a.score=="number")))throw new Kt("Expected Array<{label: string, score: number}>");return t}async function vT(e,r){const t=await Vt(e,{...r,taskHint:"automatic-speech-recognition"});if(!(typeof(t==null?void 0:t.text)=="string"))throw new Kt("Expected {text: string}");return t}async function xT(e,r){const t=await Vt(e,{...r,taskHint:"text-to-speech"});if(!(t&&t instanceof Blob))throw new Kt("Expected Blob");return t}async function TT(e,r){const t=await Vt(e,{...r,taskHint:"audio-to-audio"});if(!(Array.isArray(t)&&t.every(a=>typeof a.label=="string"&&typeof a.blob=="string"&&typeof a["content-type"]=="string")))throw new Kt("Expected Array<{label: string, blob: string, content-type: string}>");return t}async function ET(e,r){const t=await Vt(e,{...r,taskHint:"image-classification"});if(!(Array.isArray(t)&&t.every(a=>typeof a.label=="string"&&typeof a.score=="number")))throw new Kt("Expected Array<{label: string, score: number}>");return t}async function PT(e,r){const t=await Vt(e,{...r,taskHint:"image-segmentation"});if(!(Array.isArray(t)&&t.every(a=>typeof a.label=="string"&&typeof a.mask=="string"&&typeof a.score=="number")))throw new Kt("Expected Array<{label: string, mask: string, score: number}>");return t}async function CT(e,r){var s;const t=(s=await Vt(e,{...r,taskHint:"image-to-text"}))==null?void 0:s[0];if(typeof(t==null?void 0:t.generated_text)!="string")throw new Kt("Expected {generated_text: string}");return t}async function ST(e,r){const t=await Vt(e,{...r,taskHint:"object-detection"});if(!(Array.isArray(t)&&t.every(a=>typeof a.label=="string"&&typeof a.score=="number"&&typeof a.box.xmin=="number"&&typeof a.box.ymin=="number"&&typeof a.box.xmax=="number"&&typeof a.box.ymax=="number")))throw new Kt("Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>");return t}async function kT(e,r){const t=await Vt(e,{...r,taskHint:"text-to-image"});if(!(t&&t instanceof Blob))throw new Kt("Expected Blob");return t}function ol(e){if(globalThis.Buffer)return globalThis.Buffer.from(e).toString("base64");{const r=[];return e.forEach(t=>{r.push(String.fromCharCode(t))}),globalThis.btoa(r.join(""))}}async function $T(e,r){let t;e.parameters?t={...e,inputs:ol(new Uint8Array(e.inputs instanceof ArrayBuffer?e.inputs:await e.inputs.arrayBuffer()))}:t={accessToken:e.accessToken,model:e.model,data:e.inputs};const s=await Vt(t,{...r,taskHint:"image-to-image"});if(!(s&&s instanceof Blob))throw new Kt("Expected Blob");return s}async function AT(e,r){const t={...e,inputs:{image:ol(new Uint8Array(e.inputs.image instanceof ArrayBuffer?e.inputs.image:await e.inputs.image.arrayBuffer()))}},s=await Vt(t,{...r,taskHint:"zero-shot-image-classification"});if(!(Array.isArray(s)&&s.every(n=>typeof n.label=="string"&&typeof n.score=="number")))throw new Kt("Expected Array<{label: string, score: number}>");return s}async function IT(e,r){const t=e.model?await ky(e.model,e.accessToken,r):void 0,s=await Vt(e,{...r,taskHint:"feature-extraction",...t==="sentence-similarity"&&{forceTask:"feature-extraction"}});let a=!0;const n=(i,o,l=0)=>l>o?!1:i.every(c=>Array.isArray(c))?i.every(c=>n(c,o,l+1)):i.every(c=>typeof c=="number");if(a=Array.isArray(s)&&n(s,3,0),!a)throw new Kt("Expected Array<number[][][] | number[][] | number[] | number>");return s}async function OT(e,r){const t=await Vt(e,{...r,taskHint:"fill-mask"});if(!(Array.isArray(t)&&t.every(a=>typeof a.score=="number"&&typeof a.sequence=="string"&&typeof a.token=="number"&&typeof a.token_str=="string")))throw new Kt("Expected Array<{score: number, sequence: string, token: number, token_str: string}>");return t}async function FT(e,r){const t=await Vt(e,{...r,taskHint:"question-answering"});if(!(typeof t=="object"&&!!t&&typeof t.answer=="string"&&typeof t.end=="number"&&typeof t.score=="number"&&typeof t.start=="number"))throw new Kt("Expected {answer: string, end: number, score: number, start: number}");return t}async function DT(e,r){const t=e.model?await ky(e.model,e.accessToken,r):void 0,s=await Vt(e,{...r,taskHint:"sentence-similarity",...t==="feature-extraction"&&{forceTask:"sentence-similarity"}});if(!(Array.isArray(s)&&s.every(n=>typeof n=="number")))throw new Kt("Expected number[]");return s}async function LT(e,r){const t=await Vt(e,{...r,taskHint:"summarization"});if(!(Array.isArray(t)&&t.every(a=>typeof(a==null?void 0:a.summary_text)=="string")))throw new Kt("Expected Array<{summary_text: string}>");return t==null?void 0:t[0]}async function zT(e,r){const t=await Vt(e,{...r,taskHint:"table-question-answering"});if(!(typeof(t==null?void 0:t.aggregator)=="string"&&typeof t.answer=="string"&&Array.isArray(t.cells)&&t.cells.every(a=>typeof a=="string")&&Array.isArray(t.coordinates)&&t.coordinates.every(a=>Array.isArray(a)&&a.every(n=>typeof n=="number"))))throw new Kt("Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}");return t}async function BT(e,r){var a;const t=(a=await Vt(e,{...r,taskHint:"text-classification"}))==null?void 0:a[0];if(!(Array.isArray(t)&&t.every(n=>typeof(n==null?void 0:n.label)=="string"&&typeof n.score=="number")))throw new Kt("Expected Array<{label: string, score: number}>");return t}function ll(e){return Array.isArray(e)?e:[e]}async function RT(e,r){const t=ll(await Vt(e,{...r,taskHint:"text-generation"}));if(!(Array.isArray(t)&&t.every(a=>typeof(a==null?void 0:a.generated_text)=="string")))throw new Kt("Expected Array<{generated_text: string}>");return t==null?void 0:t[0]}async function*NT(e,r){yield*il(e,{...r,taskHint:"text-generation"})}async function jT(e,r){const t=ll(await Vt(e,{...r,taskHint:"token-classification"}));if(!(Array.isArray(t)&&t.every(a=>typeof a.end=="number"&&typeof a.entity_group=="string"&&typeof a.score=="number"&&typeof a.start=="number"&&typeof a.word=="string")))throw new Kt("Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>");return t}async function VT(e,r){const t=await Vt(e,{...r,taskHint:"translation"});if(!(Array.isArray(t)&&t.every(a=>typeof(a==null?void 0:a.translation_text)=="string")))throw new Kt("Expected type Array<{translation_text: string}>");return(t==null?void 0:t.length)===1?t==null?void 0:t[0]:t}async function UT(e,r){const t=ll(await Vt(e,{...r,taskHint:"zero-shot-classification"}));if(!(Array.isArray(t)&&t.every(a=>Array.isArray(a.labels)&&a.labels.every(n=>typeof n=="string")&&Array.isArray(a.scores)&&a.scores.every(n=>typeof n=="number")&&typeof a.sequence=="string")))throw new Kt("Expected Array<{labels: string[], scores: number[], sequence: string}>");return t}async function WT(e,r){const t=await Vt(e,{...r,taskHint:"text-generation",chatCompletion:!0});if(!(typeof t=="object"&&Array.isArray(t==null?void 0:t.choices)&&typeof(t==null?void 0:t.created)=="number"&&typeof(t==null?void 0:t.id)=="string"&&typeof(t==null?void 0:t.model)=="string"&&typeof(t==null?void 0:t.system_fingerprint)=="string"&&typeof(t==null?void 0:t.usage)=="object"))throw new Kt("Expected ChatCompletionOutput");return t}async function*GT(e,r){yield*il(e,{...r,taskHint:"text-generation",chatCompletion:!0})}async function KT(e,r){var n;const t={...e,inputs:{question:e.inputs.question,image:ol(new Uint8Array(e.inputs.image instanceof ArrayBuffer?e.inputs.image:await e.inputs.image.arrayBuffer()))}},s=(n=ll(await Vt(t,{...r,taskHint:"document-question-answering"})))==null?void 0:n[0];if(!(typeof(s==null?void 0:s.answer)=="string"&&(typeof s.end=="number"||typeof s.end>"u")&&(typeof s.score=="number"||typeof s.score>"u")&&(typeof s.start=="number"||typeof s.start>"u")))throw new Kt("Expected Array<{answer: string, end?: number, score?: number, start?: number}>");return s}async function HT(e,r){var n;const t={...e,inputs:{question:e.inputs.question,image:ol(new Uint8Array(e.inputs.image instanceof ArrayBuffer?e.inputs.image:await e.inputs.image.arrayBuffer()))}},s=(n=await Vt(t,{...r,taskHint:"visual-question-answering"}))==null?void 0:n[0];if(!(typeof(s==null?void 0:s.answer)=="string"&&typeof s.score=="number"))throw new Kt("Expected Array<{answer: string, score: number}>");return s}async function qT(e,r){const t=await Vt(e,{...r,taskHint:"tabular-regression"});if(!(Array.isArray(t)&&t.every(a=>typeof a=="number")))throw new Kt("Expected number[]");return t}async function QT(e,r){const t=await Vt(e,{...r,taskHint:"tabular-classification"});if(!(Array.isArray(t)&&t.every(a=>typeof a=="number")))throw new Kt("Expected number[]");return t}var Ed=class{constructor(e="",r={}){X(this,"accessToken");X(this,"defaultOptions");this.accessToken=e,this.defaultOptions=r;for(const[t,s]of Object.entries(Td))Object.defineProperty(this,t,{enumerable:!1,value:(a,n)=>s({...a,accessToken:e},{...r,...n})})}endpoint(e){return new XT(e,this.accessToken,this.defaultOptions)}},XT=class{constructor(e,r="",t={}){for(const[s,a]of Object.entries(Td))Object.defineProperty(this,s,{enumerable:!1,value:(n,i)=>a({...n,accessToken:r,endpointUrl:e},{...t,...i})})}},be=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),Oy=Object.freeze({set:be.Set,for:be.For,in:be.In,is:be.Is,if:be.If,else:be.Else,endif:be.EndIf,elif:be.ElseIf,endfor:be.EndFor,and:be.And,or:be.Or,not:be.Not,"not in":be.NotIn,macro:be.Macro,endmacro:be.EndMacro,true:be.BooleanLiteral,false:be.BooleanLiteral,none:be.NullLiteral,True:be.BooleanLiteral,False:be.BooleanLiteral,None:be.NullLiteral}),Nn=class{constructor(e,r){this.value=e,this.type=r}};function Fy(e){return/\w/.test(e)}function Pd(e){return/[0-9]/.test(e)}var JT=[["{%",be.OpenStatement],["%}",be.CloseStatement],["{{",be.OpenExpression],["}}",be.CloseExpression],["(",be.OpenParen],[")",be.CloseParen],["{",be.OpenCurlyBracket],["}",be.CloseCurlyBracket],["[",be.OpenSquareBracket],["]",be.CloseSquareBracket],[",",be.Comma],[".",be.Dot],[":",be.Colon],["|",be.Pipe],["<=",be.ComparisonBinaryOperator],[">=",be.ComparisonBinaryOperator],["==",be.ComparisonBinaryOperator],["!=",be.ComparisonBinaryOperator],["<",be.ComparisonBinaryOperator],[">",be.ComparisonBinaryOperator],["+",be.AdditiveBinaryOperator],["-",be.AdditiveBinaryOperator],["*",be.MultiplicativeBinaryOperator],["/",be.MultiplicativeBinaryOperator],["%",be.MultiplicativeBinaryOperator],["=",be.Equals]],YT=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function ZT(e,r={}){return e.endsWith(`
`)&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),r.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),r.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function e1(e,r={}){var i,o,l;const t=[],s=ZT(e,r);let a=0;const n=c=>{let p="";for(;c(s[a]);){if(s[a]==="\\"){if(++a,a>=s.length)throw new SyntaxError("Unexpected end of input");const d=s[a++],h=YT.get(d);if(h===void 0)throw new SyntaxError(`Unexpected escaped character: ${d}`);p+=h;continue}if(p+=s[a++],a>=s.length)throw new SyntaxError("Unexpected end of input")}return p};e:for(;a<s.length;){const c=(i=t.at(-1))==null?void 0:i.type;if(c===void 0||c===be.CloseStatement||c===be.CloseExpression){let d="";for(;a<s.length&&!(s[a]==="{"&&(s[a+1]==="%"||s[a+1]==="{"));)d+=s[a++];if(d.length>0){t.push(new Nn(d,be.Text));continue}}n(d=>/\s/.test(d));const p=s[a];if(p==="-"||p==="+"){const d=(o=t.at(-1))==null?void 0:o.type;if(d===be.Text||d===void 0)throw new SyntaxError(`Unexpected character: ${p}`);switch(d){case be.Identifier:case be.NumericLiteral:case be.BooleanLiteral:case be.NullLiteral:case be.StringLiteral:case be.CloseParen:case be.CloseSquareBracket:break;default:{++a;const h=n(Pd);t.push(new Nn(`${p}${h}`,h.length>0?be.NumericLiteral:be.UnaryOperator));continue}}}for(const[d,h]of JT)if(s.slice(a,a+d.length)===d){t.push(new Nn(d,h)),a+=d.length;continue e}if(p==="'"||p==='"'){++a;const d=n(h=>h!==p);t.push(new Nn(d,be.StringLiteral)),++a;continue}if(Pd(p)){const d=n(Pd);t.push(new Nn(d,be.NumericLiteral));continue}if(Fy(p)){const d=n(Fy),h=Object.hasOwn(Oy,d)?Oy[d]:be.Identifier;h===be.In&&((l=t.at(-1))==null?void 0:l.type)===be.Not?(t.pop(),t.push(new Nn("not in",be.NotIn))):t.push(new Nn(d,h));continue}throw new SyntaxError(`Unexpected character: ${p}`)}return t}var ca=class{constructor(){X(this,"type","Statement")}},t1=class extends ca{constructor(r){super();X(this,"type","Program");this.body=r}},Dy=class extends ca{constructor(r,t,s){super();X(this,"type","If");this.test=r,this.body=t,this.alternate=s}},r1=class extends ca{constructor(r,t,s,a){super();X(this,"type","For");this.loopvar=r,this.iterable=t,this.body=s,this.defaultBlock=a}},s1=class extends ca{constructor(r,t){super();X(this,"type","Set");this.assignee=r,this.value=t}},n1=class extends ca{constructor(r,t,s){super();X(this,"type","Macro");this.name=r,this.args=t,this.body=s}},vs=class extends ca{constructor(){super(...arguments);X(this,"type","Expression")}},a1=class extends vs{constructor(r,t,s){super();X(this,"type","MemberExpression");this.object=r,this.property=t,this.computed=s}},i1=class extends vs{constructor(r,t){super();X(this,"type","CallExpression");this.callee=r,this.args=t}},jn=class extends vs{constructor(r){super();X(this,"type","Identifier");this.value=r}},Vn=class extends vs{constructor(r){super();X(this,"type","Literal");this.value=r}},o1=class extends Vn{constructor(){super(...arguments);X(this,"type","NumericLiteral")}},Ly=class extends Vn{constructor(){super(...arguments);X(this,"type","StringLiteral")}},zy=class extends Vn{constructor(){super(...arguments);X(this,"type","BooleanLiteral")}},By=class extends Vn{constructor(){super(...arguments);X(this,"type","NullLiteral")}},l1=class extends Vn{constructor(){super(...arguments);X(this,"type","ArrayLiteral")}},Ry=class extends Vn{constructor(){super(...arguments);X(this,"type","TupleLiteral")}},c1=class extends Vn{constructor(){super(...arguments);X(this,"type","ObjectLiteral")}},ci=class extends vs{constructor(r,t,s){super();X(this,"type","BinaryExpression");this.operator=r,this.left=t,this.right=s}},u1=class extends vs{constructor(r,t){super();X(this,"type","FilterExpression");this.operand=r,this.filter=t}},d1=class extends vs{constructor(r,t){super();X(this,"type","SelectExpression");this.iterable=r,this.test=t}},p1=class extends vs{constructor(r,t,s){super();X(this,"type","TestExpression");this.operand=r,this.negate=t,this.test=s}},h1=class extends vs{constructor(r,t){super();X(this,"type","UnaryExpression");this.operator=r,this.argument=t}},f1=class extends vs{constructor(r=void 0,t=void 0,s=void 0){super();X(this,"type","SliceExpression");this.start=r,this.stop=t,this.step=s}},m1=class extends vs{constructor(r,t){super();X(this,"type","KeywordArgumentExpression");this.key=r,this.value=t}};function _1(e){const r=new t1([]);let t=0;function s(R,q){const ee=e[t++];if(!ee||ee.type!==R)throw new Error(`Parser Error: ${q}. ${ee.type} !== ${R}.`);return ee}function a(){switch(e[t].type){case be.Text:return o();case be.OpenStatement:return l();case be.OpenExpression:return c();default:throw new SyntaxError(`Unexpected token type: ${e[t].type}`)}}function n(...R){return t+R.length<=e.length&&R.some((q,ee)=>q!==e[t+ee].type)}function i(...R){return t+R.length<=e.length&&R.every((q,ee)=>q===e[t+ee].type)}function o(){return new Ly(s(be.Text,"Expected text token").value)}function l(){s(be.OpenStatement,"Expected opening statement token");let R;switch(e[t].type){case be.Set:++t,R=p(),s(be.CloseStatement,"Expected closing statement token");break;case be.If:++t,R=d(),s(be.OpenStatement,"Expected {% token"),s(be.EndIf,"Expected endif token"),s(be.CloseStatement,"Expected %} token");break;case be.Macro:++t,R=h(),s(be.OpenStatement,"Expected {% token"),s(be.EndMacro,"Expected endmacro token"),s(be.CloseStatement,"Expected %} token");break;case be.For:++t,R=_(),s(be.OpenStatement,"Expected {% token"),s(be.EndFor,"Expected endfor token"),s(be.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[t].type}`)}return R}function c(){s(be.OpenExpression,"Expected opening expression token");const R=E();return s(be.CloseExpression,"Expected closing expression token"),R}function p(){const R=E();if(i(be.Equals)){++t;const q=p();return new s1(R,q)}return R}function d(){var le,de,j,F,K,ae,Z,we;const R=E();s(be.CloseStatement,"Expected closing statement token");const q=[],ee=[];for(;!(((le=e[t])==null?void 0:le.type)===be.OpenStatement&&(((de=e[t+1])==null?void 0:de.type)===be.ElseIf||((j=e[t+1])==null?void 0:j.type)===be.Else||((F=e[t+1])==null?void 0:F.type)===be.EndIf));)q.push(a());if(((K=e[t])==null?void 0:K.type)===be.OpenStatement&&((ae=e[t+1])==null?void 0:ae.type)!==be.EndIf)if(++t,i(be.ElseIf))s(be.ElseIf,"Expected elseif token"),ee.push(d());else for(s(be.Else,"Expected else token"),s(be.CloseStatement,"Expected closing statement token");!(((Z=e[t])==null?void 0:Z.type)===be.OpenStatement&&((we=e[t+1])==null?void 0:we.type)===be.EndIf);)ee.push(a());return new Dy(R,q,ee)}function h(){const R=H();if(R.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const q=$();s(be.CloseStatement,"Expected closing statement token");const ee=[];for(;n(be.OpenStatement,be.EndMacro);)ee.push(a());return new n1(R,q,ee)}function g(R=!1){const q=R?H:E,ee=[q()],le=i(be.Comma);for(;le&&(++t,ee.push(q()),!!i(be.Comma)););return le?new Ry(ee):ee[0]}function _(){const R=g(!0);if(!(R instanceof jn||R instanceof Ry))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${R.type} instead`);s(be.In,"Expected `in` keyword following loop variable");const q=E();s(be.CloseStatement,"Expected closing statement token");const ee=[];for(;n(be.OpenStatement,be.EndFor)&&n(be.OpenStatement,be.Else);)ee.push(a());const le=[];if(i(be.OpenStatement,be.Else))for(++t,++t,s(be.CloseStatement,"Expected closing statement token");n(be.OpenStatement,be.EndFor);)le.push(a());return new r1(R,q,ee,le)}function E(){return A()}function A(){const R=M();if(i(be.If)){++t;const q=M();if(i(be.Else)){++t;const ee=M();return new Dy(q,[R],[ee])}else return new d1(R,q)}return R}function M(){let R=y();for(;i(be.Or);){const q=e[t];++t;const ee=y();R=new ci(q,R,ee)}return R}function y(){let R=k();for(;i(be.And);){const q=e[t];++t;const ee=k();R=new ci(q,R,ee)}return R}function k(){let R;for(;i(be.Not);){const q=e[t];++t;const ee=k();R=new h1(q,ee)}return R??P()}function P(){let R=b();for(;i(be.ComparisonBinaryOperator)||i(be.In)||i(be.NotIn);){const q=e[t];++t;const ee=b();R=new ci(q,R,ee)}return R}function b(){let R=J();for(;i(be.AdditiveBinaryOperator);){const q=e[t];++t;const ee=J();R=new ci(q,R,ee)}return R}function w(){const R=Y(H());return i(be.OpenParen)?T(R):R}function T(R){let q=new i1(R,$());return q=Y(q),i(be.OpenParen)&&(q=T(q)),q}function $(){s(be.OpenParen,"Expected opening parenthesis for arguments list");const R=z();return s(be.CloseParen,"Expected closing parenthesis for arguments list"),R}function z(){const R=[];for(;!i(be.CloseParen);){let q=E();if(i(be.Equals)){if(++t,!(q instanceof jn))throw new SyntaxError("Expected identifier for keyword argument");const ee=E();q=new m1(q,ee)}R.push(q),i(be.Comma)&&++t}return R}function N(){const R=[];let q=!1;for(;!i(be.CloseSquareBracket);)i(be.Colon)?(R.push(void 0),++t,q=!0):(R.push(E()),i(be.Colon)&&(++t,q=!0));if(R.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(q){if(R.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new f1(...R)}return R[0]}function Y(R){for(;i(be.Dot)||i(be.OpenSquareBracket);){const q=e[t];++t;let ee;const le=q.type!==be.Dot;if(le)ee=N(),s(be.CloseSquareBracket,"Expected closing square bracket");else if(ee=H(),ee.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");R=new a1(R,ee,le)}return R}function J(){let R=W();for(;i(be.MultiplicativeBinaryOperator);){const q=e[t];++t;const ee=W();R=new ci(q,R,ee)}return R}function W(){let R=te();for(;i(be.Is);){++t;const q=i(be.Not);q&&++t;let ee=H();if(ee instanceof zy?ee=new jn(ee.value.toString()):ee instanceof By&&(ee=new jn("none")),!(ee instanceof jn))throw new SyntaxError("Expected identifier for the test");R=new p1(R,q,ee)}return R}function te(){let R=w();for(;i(be.Pipe);){++t;let q=H();if(!(q instanceof jn))throw new SyntaxError("Expected identifier for the filter");i(be.OpenParen)&&(q=T(q)),R=new u1(R,q)}return R}function H(){const R=e[t];switch(R.type){case be.NumericLiteral:return++t,new o1(Number(R.value));case be.StringLiteral:return++t,new Ly(R.value);case be.BooleanLiteral:return++t,new zy(R.value.toLowerCase()==="true");case be.NullLiteral:return++t,new By(null);case be.Identifier:return++t,new jn(R.value);case be.OpenParen:{++t;const q=g();if(e[t].type!==be.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[t].type} instead`);return++t,q}case be.OpenSquareBracket:{++t;const q=[];for(;!i(be.CloseSquareBracket);)q.push(E()),i(be.Comma)&&++t;return++t,new l1(q)}case be.OpenCurlyBracket:{++t;const q=new Map;for(;!i(be.CloseCurlyBracket);){const ee=E();s(be.Colon,"Expected colon between key and value in object literal");const le=E();q.set(ee,le),i(be.Comma)&&++t}return++t,new c1(q)}default:throw new SyntaxError(`Unexpected token: ${R.type}`)}}for(;t<e.length;)r.body.push(a());return r}function g1(e,r,t=1){r===void 0&&(r=e,e=0);const s=[];for(let a=e;a<r;a+=t)s.push(a);return s}function Ny(e,r,t,s=1){const a=Math.sign(s);a>=0?(r=(r??(r=0))<0?Math.max(e.length+r,0):Math.min(r,e.length),t=(t??(t=e.length))<0?Math.max(e.length+t,0):Math.min(t,e.length)):(r=(r??(r=e.length-1))<0?Math.max(e.length+r,-1):Math.min(r,e.length-1),t=(t??(t=-1))<-1?Math.max(e.length+t,-1):Math.min(t,e.length-1));const n=[];for(let i=r;a*i<a*t;i+=s)n.push(e[i]);return n}function jy(e){return e.replace(/\b\w/g,r=>r.toUpperCase())}var Qs=class{constructor(e=void 0){X(this,"type","RuntimeValue");X(this,"value");X(this,"builtins",new Map);this.value=e}__bool__(){return new ar(!!this.value)}},Rt=class extends Qs{constructor(){super(...arguments);X(this,"type","NumericValue")}},yt=class extends Qs{constructor(){super(...arguments);X(this,"type","StringValue");X(this,"builtins",new Map([["upper",new Qr(()=>new yt(this.value.toUpperCase()))],["lower",new Qr(()=>new yt(this.value.toLowerCase()))],["strip",new Qr(()=>new yt(this.value.trim()))],["title",new Qr(()=>new yt(jy(this.value)))],["length",new Rt(this.value.length)],["rstrip",new Qr(()=>new yt(this.value.trimEnd()))],["lstrip",new Qr(()=>new yt(this.value.trimStart()))],["split",new Qr(r=>{const t=r[0]??new as;if(!(t instanceof yt||t instanceof as))throw new Error("sep argument must be a string or null");const s=r[1]??new Rt(-1);if(!(s instanceof Rt))throw new Error("maxsplit argument must be a number");let a=[];if(t instanceof as){const n=this.value.trimStart();for(const{0:i,index:o}of n.matchAll(/\S+/g)){if(s.value!==-1&&a.length>=s.value&&o!==void 0){a.push(i+n.slice(o+i.length));break}a.push(i)}}else{if(t.value==="")throw new Error("empty separator");a=this.value.split(t.value),s.value!==-1&&a.length>s.value&&a.push(a.splice(s.value).join(t.value))}return new rr(a.map(n=>new yt(n)))})]]))}},ar=class extends Qs{constructor(){super(...arguments);X(this,"type","BooleanValue")}},ns=class extends Qs{constructor(){super(...arguments);X(this,"type","ObjectValue");X(this,"builtins",new Map([["get",new Qr(([r,t])=>{if(!(r instanceof yt))throw new Error(`Object key must be a string: got ${r.type}`);return this.value.get(r.value)??t??new as})],["items",new Qr(()=>new rr(Array.from(this.value.entries()).map(([r,t])=>new rr([new yt(r),t]))))]]))}__bool__(){return new ar(this.value.size>0)}},w1=class extends ns{constructor(){super(...arguments);X(this,"type","KeywordArgumentsValue")}},rr=class extends Qs{constructor(){super(...arguments);X(this,"type","ArrayValue");X(this,"builtins",new Map([["length",new Rt(this.value.length)]]))}__bool__(){return new ar(this.value.length>0)}},y1=class extends rr{constructor(){super(...arguments);X(this,"type","TupleValue")}},Qr=class extends Qs{constructor(){super(...arguments);X(this,"type","FunctionValue")}},as=class extends Qs{constructor(){super(...arguments);X(this,"type","NullValue")}},Xr=class extends Qs{constructor(){super(...arguments);X(this,"type","UndefinedValue")}},ui=class{constructor(e){X(this,"variables",new Map([["namespace",new Qr(e=>{if(e.length===0)return new ns(new Map);if(e.length!==1||!(e[0]instanceof ns))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]})]]));X(this,"tests",new Map([["boolean",e=>e.type==="BooleanValue"],["callable",e=>e instanceof Qr],["odd",e=>{if(e.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!==0}],["even",e=>{if(e.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2===0}],["false",e=>e.type==="BooleanValue"&&!e.value],["true",e=>e.type==="BooleanValue"&&e.value],["none",e=>e.type==="NullValue"],["string",e=>e.type==="StringValue"],["number",e=>e.type==="NumericValue"],["integer",e=>e.type==="NumericValue"&&Number.isInteger(e.value)],["iterable",e=>e.type==="ArrayValue"||e.type==="StringValue"],["mapping",e=>e.type==="ObjectValue"],["lower",e=>{const r=e.value;return e.type==="StringValue"&&r===r.toLowerCase()}],["upper",e=>{const r=e.value;return e.type==="StringValue"&&r===r.toUpperCase()}],["none",e=>e.type==="NullValue"],["defined",e=>e.type!=="UndefinedValue"],["undefined",e=>e.type==="UndefinedValue"],["equalto",(e,r)=>e.value===r.value],["eq",(e,r)=>e.value===r.value]]));this.parent=e}set(e,r){return this.declareVariable(e,cl(r))}declareVariable(e,r){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,r),r}setVariable(e,r){return this.variables.set(e,r),r}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new Xr}catch{return new Xr}}},M1=class{constructor(e){X(this,"global");this.global=e??new ui}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,r){const t=this.evaluate(e.left,r);switch(e.operator.value){case"and":return t.__bool__().value?this.evaluate(e.right,r):t;case"or":return t.__bool__().value?t:this.evaluate(e.right,r)}const s=this.evaluate(e.right,r);switch(e.operator.value){case"==":return new ar(t.value==s.value);case"!=":return new ar(t.value!=s.value)}if(t instanceof Xr||s instanceof Xr)throw new Error("Cannot perform operation on undefined values");if(t instanceof as||s instanceof as)throw new Error("Cannot perform operation on null values");if(t instanceof Rt&&s instanceof Rt)switch(e.operator.value){case"+":return new Rt(t.value+s.value);case"-":return new Rt(t.value-s.value);case"*":return new Rt(t.value*s.value);case"/":return new Rt(t.value/s.value);case"%":return new Rt(t.value%s.value);case"<":return new ar(t.value<s.value);case">":return new ar(t.value>s.value);case">=":return new ar(t.value>=s.value);case"<=":return new ar(t.value<=s.value)}else if(t instanceof rr&&s instanceof rr)switch(e.operator.value){case"+":return new rr(t.value.concat(s.value))}else if(s instanceof rr){const a=s.value.find(n=>n.value===t.value)!==void 0;switch(e.operator.value){case"in":return new ar(a);case"not in":return new ar(!a)}}if(t instanceof yt||s instanceof yt)switch(e.operator.value){case"+":return new yt(t.value.toString()+s.value.toString())}if(t instanceof yt&&s instanceof yt)switch(e.operator.value){case"in":return new ar(s.value.includes(t.value));case"not in":return new ar(!s.value.includes(t.value))}if(t instanceof yt&&s instanceof ns)switch(e.operator.value){case"in":return new ar(s.value.has(t.value));case"not in":return new ar(!s.value.has(t.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${t.type} and ${s.type}`)}evaluateArguments(e,r){const t=[],s=new Map;for(const a of e)if(a.type==="KeywordArgumentExpression"){const n=a;s.set(n.key.value,this.evaluate(n.value,r))}else{if(s.size>0)throw new Error("Positional arguments must come before keyword arguments");t.push(this.evaluate(a,r))}return[t,s]}evaluateFilterExpression(e,r){const t=this.evaluate(e.operand,r);if(e.filter.type==="Identifier"){const s=e.filter;if(s.value==="tojson")return new yt(ul(t));if(t instanceof rr)switch(s.value){case"list":return t;case"first":return t.value[0];case"last":return t.value[t.value.length-1];case"length":return new Rt(t.value.length);case"reverse":return new rr(t.value.reverse());case"sort":return new rr(t.value.sort((a,n)=>{if(a.type!==n.type)throw new Error(`Cannot compare different types: ${a.type} and ${n.type}`);switch(a.type){case"NumericValue":return a.value-n.value;case"StringValue":return a.value.localeCompare(n.value);default:throw new Error(`Cannot compare type: ${a.type}`)}}));case"join":return new yt(t.value.map(a=>a.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${s.value}`)}else if(t instanceof yt)switch(s.value){case"length":return new Rt(t.value.length);case"upper":return new yt(t.value.toUpperCase());case"lower":return new yt(t.value.toLowerCase());case"title":return new yt(jy(t.value));case"capitalize":return new yt(t.value.charAt(0).toUpperCase()+t.value.slice(1));case"trim":return new yt(t.value.trim());case"indent":return new yt(t.value.split(`
`).map((a,n)=>n===0||a.length===0?a:"    "+a).join(`
`));case"join":case"string":return t;default:throw new Error(`Unknown StringValue filter: ${s.value}`)}else if(t instanceof Rt)switch(s.value){case"abs":return new Rt(Math.abs(t.value));default:throw new Error(`Unknown NumericValue filter: ${s.value}`)}else if(t instanceof ns)switch(s.value){case"items":return new rr(Array.from(t.value.entries()).map(([a,n])=>new rr([new yt(a),n])));case"length":return new Rt(t.value.size);default:throw new Error(`Unknown ObjectValue filter: ${s.value}`)}throw new Error(`Cannot apply filter "${s.value}" to type: ${t.type}`)}else if(e.filter.type==="CallExpression"){const s=e.filter;if(s.callee.type!=="Identifier")throw new Error(`Unknown filter: ${s.callee.type}`);const a=s.callee.value;if(a==="tojson"){const[,n]=this.evaluateArguments(s.args,r),i=n.get("indent")??new as;if(!(i instanceof Rt||i instanceof as))throw new Error("If set, indent must be a number");return new yt(ul(t,i.value))}else if(a==="join"){let n;if(t instanceof yt)n=Array.from(t.value);else if(t instanceof rr)n=t.value.map(c=>c.value);else throw new Error(`Cannot apply filter "${a}" to type: ${t.type}`);const[i,o]=this.evaluateArguments(s.args,r),l=i.at(0)??o.get("separator")??new yt("");if(!(l instanceof yt))throw new Error("separator must be a string");return new yt(n.join(l.value))}if(t instanceof rr){switch(a){case"selectattr":case"rejectattr":{const n=a==="selectattr";if(t.value.some(d=>!(d instanceof ns)))throw new Error(`\`${a}\` can only be applied to array of objects`);if(s.args.some(d=>d.type!=="StringLiteral"))throw new Error(`arguments of \`${a}\` must be strings`);const[i,o,l]=s.args.map(d=>this.evaluate(d,r));let c;if(o){const d=r.tests.get(o.value);if(!d)throw new Error(`Unknown test: ${o.value}`);c=d}else c=(...d)=>d[0].__bool__().value;const p=t.value.filter(d=>{const h=d.value.get(i.value),g=h?c(h,l):!1;return n?g:!g});return new rr(p)}case"map":{const[,n]=this.evaluateArguments(s.args,r);if(n.has("attribute")){const i=n.get("attribute");if(!(i instanceof yt))throw new Error("attribute must be a string");const o=n.get("default"),l=t.value.map(c=>{if(!(c instanceof ns))throw new Error("items in map must be an object");return c.value.get(i.value)??o??new Xr});return new rr(l)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${a}`)}else if(t instanceof yt){switch(a){case"indent":{const[n,i]=this.evaluateArguments(s.args,r),o=n.at(0)??i.get("width")??new Rt(4);if(!(o instanceof Rt))throw new Error("width must be a number");const l=n.at(1)??i.get("first")??new ar(!1),c=n.at(2)??i.get("blank")??new ar(!1),p=t.value.split(`
`),d=" ".repeat(o.value),h=p.map((g,_)=>!l.value&&_===0||!c.value&&g.length===0?g:d+g);return new yt(h.join(`
`))}}throw new Error(`Unknown StringValue filter: ${a}`)}else throw new Error(`Cannot apply filter "${a}" to type: ${t.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,r){const t=this.evaluate(e.operand,r),s=r.tests.get(e.test.value);if(!s)throw new Error(`Unknown test: ${e.test.value}`);const a=s(t);return new ar(e.negate?!a:a)}evaluateUnaryExpression(e,r){const t=this.evaluate(e.argument,r);switch(e.operator.value){case"not":return new ar(!t.value);default:throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}}evalProgram(e,r){return this.evaluateBlock(e.body,r)}evaluateBlock(e,r){let t="";for(const s of e){const a=this.evaluate(s,r);a.type!=="NullValue"&&a.type!=="UndefinedValue"&&(t+=a.value)}return new yt(t)}evaluateIdentifier(e,r){return r.lookupVariable(e.value)}evaluateCallExpression(e,r){const[t,s]=this.evaluateArguments(e.args,r);s.size>0&&t.push(new w1(s));const a=this.evaluate(e.callee,r);if(a.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(t,r)}evaluateSliceExpression(e,r,t){if(!(e instanceof rr||e instanceof yt))throw new Error("Slice object must be an array or string");const s=this.evaluate(r.start,t),a=this.evaluate(r.stop,t),n=this.evaluate(r.step,t);if(!(s instanceof Rt||s instanceof Xr))throw new Error("Slice start must be numeric or undefined");if(!(a instanceof Rt||a instanceof Xr))throw new Error("Slice stop must be numeric or undefined");if(!(n instanceof Rt||n instanceof Xr))throw new Error("Slice step must be numeric or undefined");return e instanceof rr?new rr(Ny(e.value,s.value,a.value,n.value)):new yt(Ny(Array.from(e.value),s.value,a.value,n.value).join(""))}evaluateMemberExpression(e,r){const t=this.evaluate(e.object,r);let s;if(e.computed){if(e.property.type==="SliceExpression")return this.evaluateSliceExpression(t,e.property,r);s=this.evaluate(e.property,r)}else s=new yt(e.property.value);let a;if(t instanceof ns){if(!(s instanceof yt))throw new Error(`Cannot access property with non-string: got ${s.type}`);a=t.value.get(s.value)??t.builtins.get(s.value)}else if(t instanceof rr||t instanceof yt)if(s instanceof Rt)a=t.value.at(s.value),t instanceof yt&&(a=new yt(t.value.at(s.value)));else if(s instanceof yt)a=t.builtins.get(s.value);else throw new Error(`Cannot access property with non-string/non-number: got ${s.type}`);else{if(!(s instanceof yt))throw new Error(`Cannot access property with non-string: got ${s.type}`);a=t.builtins.get(s.value)}return a instanceof Qs?a:new Xr}evaluateSet(e,r){const t=this.evaluate(e.value,r);if(e.assignee.type==="Identifier"){const s=e.assignee.value;r.setVariable(s,t)}else if(e.assignee.type==="MemberExpression"){const s=e.assignee,a=this.evaluate(s.object,r);if(!(a instanceof ns))throw new Error("Cannot assign to member of non-object");if(s.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");a.value.set(s.property.value,t)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);return new as}evaluateIf(e,r){const t=this.evaluate(e.test,r);return this.evaluateBlock(t.__bool__().value?e.body:e.alternate,r)}evaluateFor(e,r){const t=new ui(r);let s,a;if(e.iterable.type==="SelectExpression"){const c=e.iterable;a=this.evaluate(c.iterable,t),s=c.test}else a=this.evaluate(e.iterable,t);if(!(a instanceof rr))throw new Error(`Expected iterable type in for loop: got ${a.type}`);const n=[],i=[];for(let c=0;c<a.value.length;++c){const p=new ui(t),d=a.value[c];let h;if(e.loopvar.type==="Identifier")h=g=>g.setVariable(e.loopvar.value,d);else if(e.loopvar.type==="TupleLiteral"){const g=e.loopvar;if(d.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${d.type}`);const _=d;if(g.value.length!==_.value.length)throw new Error(`Too ${g.value.length>_.value.length?"few":"many"} items to unpack`);h=E=>{for(let A=0;A<g.value.length;++A){if(g.value[A].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${g.value[A].type}`);E.setVariable(g.value[A].value,_.value[A])}}}else throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);s&&(h(p),!this.evaluate(s,p).__bool__().value)||(n.push(d),i.push(h))}let o="",l=!0;for(let c=0;c<n.length;++c){const p=new Map([["index",new Rt(c+1)],["index0",new Rt(c)],["revindex",new Rt(n.length-c)],["revindex0",new Rt(n.length-c-1)],["first",new ar(c===0)],["last",new ar(c===n.length-1)],["length",new Rt(n.length)],["previtem",c>0?n[c-1]:new Xr],["nextitem",c<n.length-1?n[c+1]:new Xr]]);t.setVariable("loop",new ns(p)),i[c](t);const d=this.evaluateBlock(e.body,t);o+=d.value,l=!1}if(l){const c=this.evaluateBlock(e.defaultBlock,t);o+=c.value}return new yt(o)}evaluateMacro(e,r){return r.setVariable(e.name.value,new Qr((t,s)=>{var i;const a=new ui(s);t=t.slice();let n;((i=t.at(-1))==null?void 0:i.type)==="KeywordArgumentsValue"&&(n=t.pop());for(let o=0;o<e.args.length;++o){const l=e.args[o],c=t[o];if(l.type==="Identifier"){const p=l;if(!c)throw new Error(`Missing positional argument: ${p.value}`);a.setVariable(p.value,c)}else if(l.type==="KeywordArgumentExpression"){const p=l,d=c??(n==null?void 0:n.value.get(p.key.value))??this.evaluate(p.value,a);a.setVariable(p.key.value,d)}else throw new Error(`Unknown argument type: ${l.type}`)}return this.evaluateBlock(e.body,a)})),new as}evaluate(e,r){if(e===void 0)return new Xr;switch(e.type){case"Program":return this.evalProgram(e,r);case"Set":return this.evaluateSet(e,r);case"If":return this.evaluateIf(e,r);case"For":return this.evaluateFor(e,r);case"Macro":return this.evaluateMacro(e,r);case"NumericLiteral":return new Rt(Number(e.value));case"StringLiteral":return new yt(e.value);case"BooleanLiteral":return new ar(e.value);case"NullLiteral":return new as(e.value);case"ArrayLiteral":return new rr(e.value.map(t=>this.evaluate(t,r)));case"TupleLiteral":return new y1(e.value.map(t=>this.evaluate(t,r)));case"ObjectLiteral":{const t=new Map;for(const[s,a]of e.value){const n=this.evaluate(s,r);if(!(n instanceof yt))throw new Error(`Object keys must be strings: got ${n.type}`);t.set(n.value,this.evaluate(a,r))}return new ns(t)}case"Identifier":return this.evaluateIdentifier(e,r);case"CallExpression":return this.evaluateCallExpression(e,r);case"MemberExpression":return this.evaluateMemberExpression(e,r);case"UnaryExpression":return this.evaluateUnaryExpression(e,r);case"BinaryExpression":return this.evaluateBinaryExpression(e,r);case"FilterExpression":return this.evaluateFilterExpression(e,r);case"TestExpression":return this.evaluateTestExpression(e,r);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function cl(e){switch(typeof e){case"number":return new Rt(e);case"string":return new yt(e);case"boolean":return new ar(e);case"undefined":return new Xr;case"object":return e===null?new as:Array.isArray(e)?new rr(e.map(cl)):new ns(new Map(Object.entries(e).map(([r,t])=>[r,cl(t)])));case"function":return new Qr((r,t)=>{const s=e(...r.map(a=>a.value))??null;return cl(s)});default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function ul(e,r,t){const s=t??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const a=r?" ".repeat(r):"",n=`
`+a.repeat(s),i=n+a;if(e.type==="ArrayValue"){const o=e.value.map(l=>ul(l,r,s+1));return r?`[${i}${o.join(`,${i}`)}${n}]`:`[${o.join(", ")}]`}else{const o=Array.from(e.value.entries()).map(([l,c])=>{const p=`"${l}": ${ul(c,r,s+1)}`;return r?`${i}${p}`:p});return r?`{${o.join(",")}${n}}`:`{${o.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var b1=class{constructor(e){X(this,"parsed");const r=e1(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=_1(r)}render(e){const r=new ui;if(r.set("false",!1),r.set("true",!0),r.set("raise_exception",a=>{throw new Error(a)}),r.set("range",g1),e)for(const[a,n]of Object.entries(e))r.set(a,n);return new M1(r).run(this.parsed).value}};const v1="fe-chatbot-cache";class Vr{static setModelOptions(r){this.modelOptions=r}static async getInstance(r=null){return this.instance===null&&(qs.useBrowserCache=!1,qs.useCustomCache=!0,qs.customCache=new uT(v1),this.modelOptions.host==="localhost"?(qs.localModelPath="http://localhost/",qs.allowLocalModels=!0,qs.allowRemoteModels=!1):(qs.localModelPath="/models/",qs.allowLocalModels=!1,qs.allowRemoteModels=!0),this.instance=cT(this.task,this.modelOptions.model,{dtype:this.modelOptions.dtype,device:this.modelOptions.device==="CPU"?"wasm":"webgpu",progress_callback:r})),this.instance}static hasModelLoaded(){return this.instance!==null}static async reset(){this.hasModelLoaded()&&((await this.getInstance()).dispose(),this.instance=null)}}X(Vr,"task","text-generation"),X(Vr,"modelOptions",{host:"huggingface",model:"HuggingFaceTB/SmolLM2-135M-Instruct",device:"CPU",dtype:"q4"}),X(Vr,"instance",null);const Cd=e=>{const r=e.split(`
`),t=[];let s=null,a="";const n=e.includes("<|im_start|>"),i=l=>n?l.replace("<|im_start|>","").trim():l.trim(),o=l=>n?l.startsWith("<|im_start|>"):l.startsWith("system")||l.startsWith("user")||l.startsWith("assistant");return r.forEach(l=>{o(l)?(a&&t.push({role:s.trim(),content:a.replace("<|im_end|>","").trim()}),s=i(l),a=""):a+=" "+l.trim()}),a&&t.push({role:s.trim()||"user",content:a.replace("<|im_end|>","").trim()}),t},Vy=(e,r,t,s)=>{let a=e;if(t&&s&&r){const n=new b1(r);a=Cd(n.render({messages:e,tools:t,documents:s,add_generation_prompt:!0}))}return a},x1=async(e,r,{url:t="http://localhost:8080",api_key:s="sk-no-key-required",max_tokens:a=256,temperature:n=.4,min_p:i=.05,top_p:o=.95,top_k:l=1,model:c="HuggingFaceTB/SmolLM2-135M-Instruct"},{tools:p=null,documents:d=null,chat_template:h=null})=>{const g=new Ed(s).endpoint(t);let _="",E=Vy(e,h,p,d);for await(const A of g.chatCompletionStream({model:c,messages:E,max_tokens:a,temperature:n,min_p:i,top_p:o,top_k:l}))A.choices&&A.choices.length>0&&A.choices[0].delta.content&&(_+=A.choices[0].delta.content,r(A.choices[0].delta.content));return _},T1=async(e,r,{tools:t=null,documents:s=null,chat_template:a=null})=>{let n=await Vr.getInstance();const i=new oT(n.tokenizer,{skip_prompt:!0,callback_function:r});let o=e;if(t&&s&&a){o=await n.tokenizer.apply_chat_template(e,{chat_template:a,tokenize:!1,tools:t,documents:s,add_generation_prompt:!0});const c=await n(o,{max_new_tokens:256,do_sample:!1,streamer:i});let p=new Array;return p.push({generated_text:Cd(c[0].generated_text)}),p}return await n(o,{max_new_tokens:256,do_sample:!1,streamer:i})},E1=async(e,{url:r="http://localhost:8080",api_key:t="sk-no-key-required",max_tokens:s=256,temperature:a=.4,min_p:n=.05,top_p:i=.95,top_k:o=1,model:l="HuggingFaceTB/SmolLM2-135M-Instruct"},{tools:c=null,documents:p=null,chat_template:d=null})=>{const h=new Ed(t).endpoint(r);let g=Vy(e,d,c,p);return(await h.chatCompletion({model:l,messages:g,max_tokens:s,temperature:a,min_p:n,top_p:i,top_k:o})).choices[0].message.content},P1=async(e,{tools:r=null,documents:t=null,chat_template:s=null})=>{let a=await Vr.getInstance();if(r&&t&&s){const i=await a.tokenizer.apply_chat_template(e,{chat_template:s,tokenize:!1,add_generation_prompt:!0,tools:r,documents:t}),o=await a(i,{max_new_tokens:256,do_sample:!1});let l=new Array;return l.push({generated_text:Cd(o[0].generated_text)}),l}return await a(e,{max_new_tokens:256,do_sample:!1})},C1=async e=>{let r=await Vr.getInstance();const t=await r.tokenizer(e,{padding:!0,truncation:!0}),s=await r.model(t,{output_hidden_states:!0});let a=s.last_hidden_states??s.logits??s.token_embeddings,n=lT(a.normalize(2,-1),t.attention_mask);return Array.from(n.data)},S1=async(e,r={url:"http://localhost:8080",api_key:"sk-key-not-needed",model:"HuggingFaceTB/SmolLM2-135M-Instruct"})=>{const t=r.url+"/v1/embeddings";let a=await new Ed(r.api_key).endpoint(t).request({model:r.model,content:e}),n=a[0].index;return a[0].embedding[n]},k1=e=>Vr.modelOptions.host!==e.host||Vr.modelOptions.model!==e.model||Vr.modelOptions.device!==e.device||Vr.modelOptions.dtpe!==e.dtype,$1=async e=>{k1(e)&&await Vr.reset(),Vr.setModelOptions(e),Vr.getInstance(r=>{switch(r.status){case"initiate":{let t={status:"init",name:r.file,progress:0,total:100};self.postMessage({jobType:"updateProgressBar",eventName:"ChatBotWidget#requestMultiProgressBar",event:t})}break;case"progress":{let t={status:"update",name:r.file,progress:r.progress};self.postMessage({jobType:"updateProgressBar",eventName:"ChatBotWidget#requestMultiProgressBar",event:t})}break;case"ready":self.postMessage({jobType:"updateBtnTitle",eventName:"ChatBotModelOptions#updateBtnTitle",event:""});break}})},A1=async e=>{const r=e.data.messages,t=e.data.tools,s=e.data.documents,a=e.data.chat_template,n=e.data.remoteOptions;let i=await x1(r,o=>{self.postMessage({jobType:"streaming",response:o})},n,{tools:t,documents:s,chat_template:a});self.postMessage({jobType:"response",response:i}),self.postMessage({jobType:"done"})},I1=async e=>{const r=e.data.messages,t=e.data.tools,s=e.data.documents,a=e.data.chat_template;let n=await T1(r,i=>{self.postMessage({jobType:"streaming",response:i})},{tools:t,documents:s,chat_template:a});self.postMessage({jobType:"response",response:n}),self.postMessage({jobType:"done"})},O1=async e=>{const r=e.data.messages,t=e.data.tools,s=e.data.documents,a=e.data.remoteOptions,n=e.data.chat_template;let i=await E1(r,a,{tools:t,documents:s,chat_template:n});self.postMessage({jobType:"response",response:i}),self.postMessage({jobType:"done"})},F1=async e=>{const r=e.data.messages,t=e.data.tools,s=e.data.documents,a=e.data.chat_template;let n=await P1(r,{tools:t,documents:s,chat_template:a});self.postMessage({jobType:"response",response:n}),self.postMessage({jobType:"done"})},D1=async e=>{const r=e.data.type,t=e.data.texts;for(const s of t){let a=await C1(s);self.postMessage({jobType:"embeddings",type:r,text:s,embeddings:a})}},L1=async e=>{const r=e.data.type,t=e.data.texts,s=e.data.remoteOptions;for(const a of t){let n=await S1(a,s);self.postMessage({jobType:"embeddings",type:r,text:a,embeddings:n})}};self.onmessage=async e=>{switch(e.data.jobType){case"loadModel":try{$1(e.data.modelOptions)}catch(t){self.postMessage({jobType:"error",error:t})}break;case"reset":try{await Vr.reset()}catch(t){self.postMessage({jobType:"error",error:t})}break;case"rStreaming":try{await A1(e)}catch(t){self.postMessage({jobType:"error",error:t})}break;case"streaming":try{await I1(e)}catch(t){self.postMessage({jobType:"error",error:t})}break;case"rChat":try{await O1(e)}catch(t){self.postMessage({jobType:"error",error:t})}break;case"chat":try{await F1(e)}catch(t){self.postMessage({jobType:"error",error:t})}break;case"embeddings":try{await D1(e)}catch(t){self.postMessage({jobType:"error",error:t})}break;case"rEmbeddings":try{await L1(e)}catch(t){self.postMessage({jobType:"error",error:t})}break}}})();
