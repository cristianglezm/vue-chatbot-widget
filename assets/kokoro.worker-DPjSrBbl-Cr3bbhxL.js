var w5=Object.defineProperty;var I5=(aA,zl,Ol)=>zl in aA?w5(aA,zl,{enumerable:!0,configurable:!0,writable:!0,value:Ol}):aA[zl]=Ol;var Te=(aA,zl,Ol)=>I5(aA,typeof zl!="symbol"?zl+"":zl,Ol);(function(){"use strict";var aA={},zl,Ol,D1={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(i,o,a)=>{i.exports=a.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(i,o,a)=>{i.exports=a.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(i,o,a)=>{a.r(o),a.d(o,{Environment:()=>wt,Interpreter:()=>Bt,Template:()=>zt,parse:()=>ye,tokenize:()=>v});var u=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),p=Object.freeze({set:u.Set,for:u.For,in:u.In,is:u.Is,if:u.If,else:u.Else,endif:u.EndIf,elif:u.ElseIf,endfor:u.EndFor,and:u.And,or:u.Or,not:u.Not,"not in":u.NotIn,macro:u.Macro,endmacro:u.EndMacro,true:u.BooleanLiteral,false:u.BooleanLiteral,none:u.NullLiteral,True:u.BooleanLiteral,False:u.BooleanLiteral,None:u.NullLiteral}),h=class{constructor(ve,H){this.value=ve,this.type=H}};function C(ve){return/\w/.test(ve)}function y(ve){return/[0-9]/.test(ve)}var k=[["{%",u.OpenStatement],["%}",u.CloseStatement],["{{",u.OpenExpression],["}}",u.CloseExpression],["(",u.OpenParen],[")",u.CloseParen],["{",u.OpenCurlyBracket],["}",u.CloseCurlyBracket],["[",u.OpenSquareBracket],["]",u.CloseSquareBracket],[",",u.Comma],[".",u.Dot],[":",u.Colon],["|",u.Pipe],["<=",u.ComparisonBinaryOperator],[">=",u.ComparisonBinaryOperator],["==",u.ComparisonBinaryOperator],["!=",u.ComparisonBinaryOperator],["<",u.ComparisonBinaryOperator],[">",u.ComparisonBinaryOperator],["+",u.AdditiveBinaryOperator],["-",u.AdditiveBinaryOperator],["*",u.MultiplicativeBinaryOperator],["/",u.MultiplicativeBinaryOperator],["%",u.MultiplicativeBinaryOperator],["=",u.Equals]],_=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function v(ve,H={}){var gt,It,Nt;const ce=[],ne=function(_t,Vt={}){return _t.endsWith(`
`)&&(_t=_t.slice(0,-1)),_t=_t.replace(/{#.*?#}/gs,"{##}"),Vt.lstrip_blocks&&(_t=_t.replace(/^[ \t]*({[#%])/gm,"$1")),Vt.trim_blocks&&(_t=_t.replace(/([#%]})\n/g,"$1")),_t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(ve,H);let ze=0;const $e=_t=>{let Vt="";for(;_t(ne[ze]);)if(ne[ze]!=="\\"){if(Vt+=ne[ze++],ze>=ne.length)throw new SyntaxError("Unexpected end of input")}else{if(++ze,ze>=ne.length)throw new SyntaxError("Unexpected end of input");const Xt=ne[ze++],Jt=_.get(Xt);if(Jt===void 0)throw new SyntaxError(`Unexpected escaped character: ${Xt}`);Vt+=Jt}return Vt};e:for(;ze<ne.length;){const _t=(gt=ce.at(-1))==null?void 0:gt.type;if(_t===void 0||_t===u.CloseStatement||_t===u.CloseExpression){let Xt="";for(;ze<ne.length&&(ne[ze]!=="{"||ne[ze+1]!=="%"&&ne[ze+1]!=="{");)Xt+=ne[ze++];if(Xt.length>0){ce.push(new h(Xt,u.Text));continue}}$e(Xt=>/\s/.test(Xt));const Vt=ne[ze];if(Vt==="-"||Vt==="+"){const Xt=(It=ce.at(-1))==null?void 0:It.type;if(Xt===u.Text||Xt===void 0)throw new SyntaxError(`Unexpected character: ${Vt}`);switch(Xt){case u.Identifier:case u.NumericLiteral:case u.BooleanLiteral:case u.NullLiteral:case u.StringLiteral:case u.CloseParen:case u.CloseSquareBracket:break;default:{++ze;const Jt=$e(y);ce.push(new h(`${Vt}${Jt}`,Jt.length>0?u.NumericLiteral:u.UnaryOperator));continue}}}for(const[Xt,Jt]of k)if(ne.slice(ze,ze+Xt.length)===Xt){ce.push(new h(Xt,Jt)),ze+=Xt.length;continue e}if(Vt!=="'"&&Vt!=='"')if(y(Vt)){const Xt=$e(y);ce.push(new h(Xt,u.NumericLiteral))}else{if(!C(Vt))throw new SyntaxError(`Unexpected character: ${Vt}`);{const Xt=$e(C),Jt=Object.hasOwn(p,Xt)?p[Xt]:u.Identifier;Jt===u.In&&((Nt=ce.at(-1))==null?void 0:Nt.type)===u.Not?(ce.pop(),ce.push(new h("not in",u.NotIn))):ce.push(new h(Xt,Jt))}}else{++ze;const Xt=$e(Jt=>Jt!==Vt);ce.push(new h(Xt,u.StringLiteral)),++ze}}return ce}var M=class{constructor(){Te(this,"type","Statement")}},B=class extends M{constructor(H){super();Te(this,"type","Program");this.body=H}},S=class extends M{constructor(H,ce,ne){super();Te(this,"type","If");this.test=H,this.body=ce,this.alternate=ne}},N=class extends M{constructor(H,ce,ne,ze){super();Te(this,"type","For");this.loopvar=H,this.iterable=ce,this.body=ne,this.defaultBlock=ze}},V=class extends M{constructor(H,ce){super();Te(this,"type","Set");this.assignee=H,this.value=ce}},Z=class extends M{constructor(H,ce,ne){super();Te(this,"type","Macro");this.name=H,this.args=ce,this.body=ne}},O=class extends M{constructor(){super(...arguments);Te(this,"type","Expression")}},Q=class extends O{constructor(H,ce,ne){super();Te(this,"type","MemberExpression");this.object=H,this.property=ce,this.computed=ne}},q=class extends O{constructor(H,ce){super();Te(this,"type","CallExpression");this.callee=H,this.args=ce}},f=class extends O{constructor(H){super();Te(this,"type","Identifier");this.value=H}},I=class extends O{constructor(H){super();Te(this,"type","Literal");this.value=H}},e=class extends I{constructor(){super(...arguments);Te(this,"type","NumericLiteral")}},c=class extends I{constructor(){super(...arguments);Te(this,"type","StringLiteral")}},P=class extends I{constructor(){super(...arguments);Te(this,"type","BooleanLiteral")}},J=class extends I{constructor(){super(...arguments);Te(this,"type","NullLiteral")}},D=class extends I{constructor(){super(...arguments);Te(this,"type","ArrayLiteral")}},j=class extends I{constructor(){super(...arguments);Te(this,"type","TupleLiteral")}},Ie=class extends I{constructor(){super(...arguments);Te(this,"type","ObjectLiteral")}},ge=class extends O{constructor(H,ce,ne){super();Te(this,"type","BinaryExpression");this.operator=H,this.left=ce,this.right=ne}},ke=class extends O{constructor(H,ce){super();Te(this,"type","FilterExpression");this.operand=H,this.filter=ce}},Ee=class extends O{constructor(H,ce){super();Te(this,"type","SelectExpression");this.iterable=H,this.test=ce}},Ne=class extends O{constructor(H,ce,ne){super();Te(this,"type","TestExpression");this.operand=H,this.negate=ce,this.test=ne}},Xe=class extends O{constructor(H,ce){super();Te(this,"type","UnaryExpression");this.operator=H,this.argument=ce}},At=class extends O{constructor(H=void 0,ce=void 0,ne=void 0){super();Te(this,"type","SliceExpression");this.start=H,this.stop=ce,this.step=ne}},xe=class extends O{constructor(H,ce){super();Te(this,"type","KeywordArgumentExpression");this.key=H,this.value=ce}};function ye(ve){const H=new B([]);let ce=0;function ne(Pr,Sr){const Kt=ve[ce++];if(!Kt||Kt.type!==Pr)throw new Error(`Parser Error: ${Sr}. ${Kt.type} !== ${Pr}.`);return Kt}function ze(){switch(ve[ce].type){case u.Text:return new c(ne(u.Text,"Expected text token").value);case u.OpenStatement:return function(){let Pr;switch(ne(u.OpenStatement,"Expected opening statement token"),ve[ce].type){case u.Set:++ce,Pr=It(),ne(u.CloseStatement,"Expected closing statement token");break;case u.If:++ce,Pr=Nt(),ne(u.OpenStatement,"Expected {% token"),ne(u.EndIf,"Expected endif token"),ne(u.CloseStatement,"Expected %} token");break;case u.Macro:++ce,Pr=function(){const Sr=Wa();if(Sr.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Kt=os();ne(u.CloseStatement,"Expected closing statement token");const Bs=[];for(;$e(u.OpenStatement,u.EndMacro);)Bs.push(ze());return new Z(Sr,Kt,Bs)}(),ne(u.OpenStatement,"Expected {% token"),ne(u.EndMacro,"Expected endmacro token"),ne(u.CloseStatement,"Expected %} token");break;case u.For:++ce,Pr=function(){const Sr=_t(!0);if(!(Sr instanceof f||Sr instanceof j))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Sr.type} instead`);ne(u.In,"Expected `in` keyword following loop variable");const Kt=Vt();ne(u.CloseStatement,"Expected closing statement token");const Bs=[];for(;$e(u.OpenStatement,u.EndFor)&&$e(u.OpenStatement,u.Else);)Bs.push(ze());const $a=[];if(gt(u.OpenStatement,u.Else))for(++ce,++ce,ne(u.CloseStatement,"Expected closing statement token");$e(u.OpenStatement,u.EndFor);)$a.push(ze());return new N(Sr,Kt,Bs,$a)}(),ne(u.OpenStatement,"Expected {% token"),ne(u.EndFor,"Expected endfor token"),ne(u.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${ve[ce].type}`)}return Pr}();case u.OpenExpression:return function(){ne(u.OpenExpression,"Expected opening expression token");const Pr=Vt();return ne(u.CloseExpression,"Expected closing expression token"),Pr}();default:throw new SyntaxError(`Unexpected token type: ${ve[ce].type}`)}}function $e(...Pr){return ce+Pr.length<=ve.length&&Pr.some((Sr,Kt)=>Sr!==ve[ce+Kt].type)}function gt(...Pr){return ce+Pr.length<=ve.length&&Pr.every((Sr,Kt)=>Sr===ve[ce+Kt].type)}function It(){const Pr=Vt();if(gt(u.Equals)){++ce;const Sr=It();return new V(Pr,Sr)}return Pr}function Nt(){var Bs,$a,en,On,Pn,Dn,qn,sa;const Pr=Vt();ne(u.CloseStatement,"Expected closing statement token");const Sr=[],Kt=[];for(;((Bs=ve[ce])==null?void 0:Bs.type)!==u.OpenStatement||(($a=ve[ce+1])==null?void 0:$a.type)!==u.ElseIf&&((en=ve[ce+1])==null?void 0:en.type)!==u.Else&&((On=ve[ce+1])==null?void 0:On.type)!==u.EndIf;)Sr.push(ze());if(((Pn=ve[ce])==null?void 0:Pn.type)===u.OpenStatement&&((Dn=ve[ce+1])==null?void 0:Dn.type)!==u.EndIf)if(++ce,gt(u.ElseIf))ne(u.ElseIf,"Expected elseif token"),Kt.push(Nt());else for(ne(u.Else,"Expected else token"),ne(u.CloseStatement,"Expected closing statement token");((qn=ve[ce])==null?void 0:qn.type)!==u.OpenStatement||((sa=ve[ce+1])==null?void 0:sa.type)!==u.EndIf;)Kt.push(ze());return new S(Pr,Sr,Kt)}function _t(Pr=!1){const Sr=Pr?Wa:Vt,Kt=[Sr()],Bs=gt(u.Comma);for(;Bs&&(++ce,Kt.push(Sr()),gt(u.Comma)););return Bs?new j(Kt):Kt[0]}function Vt(){return function(){const Pr=Xt();if(gt(u.If)){++ce;const Sr=Xt();if(gt(u.Else)){++ce;const Kt=Xt();return new S(Sr,[Pr],[Kt])}return new Ee(Pr,Sr)}return Pr}()}function Xt(){let Pr=Jt();for(;gt(u.Or);){const Sr=ve[ce];++ce;const Kt=Jt();Pr=new ge(Sr,Pr,Kt)}return Pr}function Jt(){let Pr=wr();for(;gt(u.And);){const Sr=ve[ce];++ce;const Kt=wr();Pr=new ge(Sr,Pr,Kt)}return Pr}function wr(){let Pr;for(;gt(u.Not);){const Sr=ve[ce];++ce;const Kt=wr();Pr=new Xe(Sr,Kt)}return Pr??function(){let Sr=Rr();for(;gt(u.ComparisonBinaryOperator)||gt(u.In)||gt(u.NotIn);){const Kt=ve[ce];++ce;const Bs=Rr();Sr=new ge(Kt,Sr,Bs)}return Sr}()}function Rr(){let Pr=zn();for(;gt(u.AdditiveBinaryOperator);){const Sr=ve[ce];++ce;const Kt=zn();Pr=new ge(Sr,Pr,Kt)}return Pr}function $s(Pr){let Sr=new q(Pr,os());return Sr=ts(Sr),gt(u.OpenParen)&&(Sr=$s(Sr)),Sr}function os(){ne(u.OpenParen,"Expected opening parenthesis for arguments list");const Pr=function(){const Sr=[];for(;!gt(u.CloseParen);){let Kt=Vt();if(gt(u.Equals)){if(++ce,!(Kt instanceof f))throw new SyntaxError("Expected identifier for keyword argument");const Bs=Vt();Kt=new xe(Kt,Bs)}Sr.push(Kt),gt(u.Comma)&&++ce}return Sr}();return ne(u.CloseParen,"Expected closing parenthesis for arguments list"),Pr}function Ks(){const Pr=[];let Sr=!1;for(;!gt(u.CloseSquareBracket);)gt(u.Colon)?(Pr.push(void 0),++ce,Sr=!0):(Pr.push(Vt()),gt(u.Colon)&&(++ce,Sr=!0));if(Pr.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Sr){if(Pr.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new At(...Pr)}return Pr[0]}function ts(Pr){for(;gt(u.Dot)||gt(u.OpenSquareBracket);){const Sr=ve[ce];let Kt;++ce;const Bs=Sr.type!==u.Dot;if(Bs)Kt=Ks(),ne(u.CloseSquareBracket,"Expected closing square bracket");else if(Kt=Wa(),Kt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Pr=new Q(Pr,Kt,Bs)}return Pr}function zn(){let Pr=Va();for(;gt(u.MultiplicativeBinaryOperator);){const Sr=ve[ce];++ce;const Kt=Va();Pr=new ge(Sr,Pr,Kt)}return Pr}function Va(){let Pr=function(){let Sr=function(){const Kt=ts(Wa());return gt(u.OpenParen)?$s(Kt):Kt}();for(;gt(u.Pipe);){++ce;let Kt=Wa();if(!(Kt instanceof f))throw new SyntaxError("Expected identifier for the filter");gt(u.OpenParen)&&(Kt=$s(Kt)),Sr=new ke(Sr,Kt)}return Sr}();for(;gt(u.Is);){++ce;const Sr=gt(u.Not);Sr&&++ce;let Kt=Wa();if(Kt instanceof P?Kt=new f(Kt.value.toString()):Kt instanceof J&&(Kt=new f("none")),!(Kt instanceof f))throw new SyntaxError("Expected identifier for the test");Pr=new Ne(Pr,Sr,Kt)}return Pr}function Wa(){const Pr=ve[ce];switch(Pr.type){case u.NumericLiteral:return++ce,new e(Number(Pr.value));case u.StringLiteral:return++ce,new c(Pr.value);case u.BooleanLiteral:return++ce,new P(Pr.value.toLowerCase()==="true");case u.NullLiteral:return++ce,new J(null);case u.Identifier:return++ce,new f(Pr.value);case u.OpenParen:{++ce;const Sr=_t();if(ve[ce].type!==u.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${ve[ce].type} instead`);return++ce,Sr}case u.OpenSquareBracket:{++ce;const Sr=[];for(;!gt(u.CloseSquareBracket);)Sr.push(Vt()),gt(u.Comma)&&++ce;return++ce,new D(Sr)}case u.OpenCurlyBracket:{++ce;const Sr=new Map;for(;!gt(u.CloseCurlyBracket);){const Kt=Vt();ne(u.Colon,"Expected colon between key and value in object literal");const Bs=Vt();Sr.set(Kt,Bs),gt(u.Comma)&&++ce}return++ce,new Ie(Sr)}default:throw new SyntaxError(`Unexpected token: ${Pr.type}`)}}for(;ce<ve.length;)H.body.push(ze());return H}function ue(ve,H,ce=1){H===void 0&&(H=ve,ve=0);const ne=[];for(let ze=ve;ze<H;ze+=ce)ne.push(ze);return ne}function ie(ve,H,ce,ne=1){const ze=Math.sign(ne);ze>=0?(H=(H??(H=0))<0?Math.max(ve.length+H,0):Math.min(H,ve.length),ce=(ce??(ce=ve.length))<0?Math.max(ve.length+ce,0):Math.min(ce,ve.length)):(H=(H??(H=ve.length-1))<0?Math.max(ve.length+H,-1):Math.min(H,ve.length-1),ce=(ce??(ce=-1))<-1?Math.max(ve.length+ce,-1):Math.min(ce,ve.length-1));const $e=[];for(let gt=H;ze*gt<ze*ce;gt+=ne)$e.push(ve[gt]);return $e}function be(ve){return ve.replace(/\b\w/g,H=>H.toUpperCase())}var Ye=class{constructor(ve=void 0){Te(this,"type","RuntimeValue");Te(this,"value");Te(this,"builtins",new Map);this.value=ve}__bool__(){return new ft(!!this.value)}},Le=class extends Ye{constructor(){super(...arguments);Te(this,"type","NumericValue")}},lt=class extends Ye{constructor(){super(...arguments);Te(this,"type","StringValue");Te(this,"builtins",new Map([["upper",new Se(()=>new lt(this.value.toUpperCase()))],["lower",new Se(()=>new lt(this.value.toLowerCase()))],["strip",new Se(()=>new lt(this.value.trim()))],["title",new Se(()=>new lt(be(this.value)))],["length",new Le(this.value.length)],["rstrip",new Se(()=>new lt(this.value.trimEnd()))],["lstrip",new Se(()=>new lt(this.value.trimStart()))],["split",new Se(H=>{const ce=H[0]??new Qe;if(!(ce instanceof lt||ce instanceof Qe))throw new Error("sep argument must be a string or null");const ne=H[1]??new Le(-1);if(!(ne instanceof Le))throw new Error("maxsplit argument must be a number");let ze=[];if(ce instanceof Qe){const $e=this.value.trimStart();for(const{0:gt,index:It}of $e.matchAll(/\S+/g)){if(ne.value!==-1&&ze.length>=ne.value&&It!==void 0){ze.push(gt+$e.slice(It+gt.length));break}ze.push(gt)}}else{if(ce.value==="")throw new Error("empty separator");ze=this.value.split(ce.value),ne.value!==-1&&ze.length>ne.value&&ze.push(ze.splice(ne.value).join(ce.value))}return new He(ze.map($e=>new lt($e)))})]]))}},ft=class extends Ye{constructor(){super(...arguments);Te(this,"type","BooleanValue")}},pt=class extends Ye{constructor(){super(...arguments);Te(this,"type","ObjectValue");Te(this,"builtins",new Map([["get",new Se(([H,ce])=>{if(!(H instanceof lt))throw new Error(`Object key must be a string: got ${H.type}`);return this.value.get(H.value)??ce??new Qe})],["items",new Se(()=>new He(Array.from(this.value.entries()).map(([H,ce])=>new He([new lt(H),ce]))))]]))}__bool__(){return new ft(this.value.size>0)}},ct=class extends pt{constructor(){super(...arguments);Te(this,"type","KeywordArgumentsValue")}},He=class extends Ye{constructor(){super(...arguments);Te(this,"type","ArrayValue");Te(this,"builtins",new Map([["length",new Le(this.value.length)]]))}__bool__(){return new ft(this.value.length>0)}},Re=class extends He{constructor(){super(...arguments);Te(this,"type","TupleValue")}},Se=class extends Ye{constructor(){super(...arguments);Te(this,"type","FunctionValue")}},Qe=class extends Ye{constructor(){super(...arguments);Te(this,"type","NullValue")}},ht=class extends Ye{constructor(){super(...arguments);Te(this,"type","UndefinedValue")}},wt=class{constructor(ve){Te(this,"variables",new Map([["namespace",new Se(ve=>{if(ve.length===0)return new pt(new Map);if(ve.length!==1||!(ve[0]instanceof pt))throw new Error("`namespace` expects either zero arguments or a single object argument");return ve[0]})]]));Te(this,"tests",new Map([["boolean",ve=>ve.type==="BooleanValue"],["callable",ve=>ve instanceof Se],["odd",ve=>{if(ve.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${ve.type}`);return ve.value%2!=0}],["even",ve=>{if(ve.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${ve.type}`);return ve.value%2==0}],["false",ve=>ve.type==="BooleanValue"&&!ve.value],["true",ve=>ve.type==="BooleanValue"&&ve.value],["none",ve=>ve.type==="NullValue"],["string",ve=>ve.type==="StringValue"],["number",ve=>ve.type==="NumericValue"],["integer",ve=>ve.type==="NumericValue"&&Number.isInteger(ve.value)],["iterable",ve=>ve.type==="ArrayValue"||ve.type==="StringValue"],["mapping",ve=>ve.type==="ObjectValue"],["lower",ve=>{const H=ve.value;return ve.type==="StringValue"&&H===H.toLowerCase()}],["upper",ve=>{const H=ve.value;return ve.type==="StringValue"&&H===H.toUpperCase()}],["none",ve=>ve.type==="NullValue"],["defined",ve=>ve.type!=="UndefinedValue"],["undefined",ve=>ve.type==="UndefinedValue"],["equalto",(ve,H)=>ve.value===H.value],["eq",(ve,H)=>ve.value===H.value]]));this.parent=ve}set(ve,H){return this.declareVariable(ve,Mt(H))}declareVariable(ve,H){if(this.variables.has(ve))throw new SyntaxError(`Variable already declared: ${ve}`);return this.variables.set(ve,H),H}setVariable(ve,H){return this.variables.set(ve,H),H}resolve(ve){if(this.variables.has(ve))return this;if(this.parent)return this.parent.resolve(ve);throw new Error(`Unknown variable: ${ve}`)}lookupVariable(ve){try{return this.resolve(ve).variables.get(ve)??new ht}catch{return new ht}}},Bt=class{constructor(ve){Te(this,"global");this.global=ve??new wt}run(ve){return this.evaluate(ve,this.global)}evaluateBinaryExpression(ve,H){const ce=this.evaluate(ve.left,H);switch(ve.operator.value){case"and":return ce.__bool__().value?this.evaluate(ve.right,H):ce;case"or":return ce.__bool__().value?ce:this.evaluate(ve.right,H)}const ne=this.evaluate(ve.right,H);switch(ve.operator.value){case"==":return new ft(ce.value==ne.value);case"!=":return new ft(ce.value!=ne.value)}if(ce instanceof ht||ne instanceof ht)throw new Error("Cannot perform operation on undefined values");if(ce instanceof Qe||ne instanceof Qe)throw new Error("Cannot perform operation on null values");if(ce instanceof Le&&ne instanceof Le)switch(ve.operator.value){case"+":return new Le(ce.value+ne.value);case"-":return new Le(ce.value-ne.value);case"*":return new Le(ce.value*ne.value);case"/":return new Le(ce.value/ne.value);case"%":return new Le(ce.value%ne.value);case"<":return new ft(ce.value<ne.value);case">":return new ft(ce.value>ne.value);case">=":return new ft(ce.value>=ne.value);case"<=":return new ft(ce.value<=ne.value)}else if(ce instanceof He&&ne instanceof He){if(ve.operator.value==="+")return new He(ce.value.concat(ne.value))}else if(ne instanceof He){const ze=ne.value.find($e=>$e.value===ce.value)!==void 0;switch(ve.operator.value){case"in":return new ft(ze);case"not in":return new ft(!ze)}}if((ce instanceof lt||ne instanceof lt)&&ve.operator.value==="+")return new lt(ce.value.toString()+ne.value.toString());if(ce instanceof lt&&ne instanceof lt)switch(ve.operator.value){case"in":return new ft(ne.value.includes(ce.value));case"not in":return new ft(!ne.value.includes(ce.value))}if(ce instanceof lt&&ne instanceof pt)switch(ve.operator.value){case"in":return new ft(ne.value.has(ce.value));case"not in":return new ft(!ne.value.has(ce.value))}throw new SyntaxError(`Unknown operator "${ve.operator.value}" between ${ce.type} and ${ne.type}`)}evaluateArguments(ve,H){const ce=[],ne=new Map;for(const ze of ve)if(ze.type==="KeywordArgumentExpression"){const $e=ze;ne.set($e.key.value,this.evaluate($e.value,H))}else{if(ne.size>0)throw new Error("Positional arguments must come before keyword arguments");ce.push(this.evaluate(ze,H))}return[ce,ne]}evaluateFilterExpression(ve,H){const ce=this.evaluate(ve.operand,H);if(ve.filter.type==="Identifier"){const ne=ve.filter;if(ne.value==="tojson")return new lt(oe(ce));if(ce instanceof He)switch(ne.value){case"list":return ce;case"first":return ce.value[0];case"last":return ce.value[ce.value.length-1];case"length":return new Le(ce.value.length);case"reverse":return new He(ce.value.reverse());case"sort":return new He(ce.value.sort((ze,$e)=>{if(ze.type!==$e.type)throw new Error(`Cannot compare different types: ${ze.type} and ${$e.type}`);switch(ze.type){case"NumericValue":return ze.value-$e.value;case"StringValue":return ze.value.localeCompare($e.value);default:throw new Error(`Cannot compare type: ${ze.type}`)}}));case"join":return new lt(ce.value.map(ze=>ze.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${ne.value}`)}else if(ce instanceof lt)switch(ne.value){case"length":return new Le(ce.value.length);case"upper":return new lt(ce.value.toUpperCase());case"lower":return new lt(ce.value.toLowerCase());case"title":return new lt(be(ce.value));case"capitalize":return new lt(ce.value.charAt(0).toUpperCase()+ce.value.slice(1));case"trim":return new lt(ce.value.trim());case"indent":return new lt(ce.value.split(`
`).map((ze,$e)=>$e===0||ze.length===0?ze:"    "+ze).join(`
`));case"join":case"string":return ce;default:throw new Error(`Unknown StringValue filter: ${ne.value}`)}else{if(ce instanceof Le){if(ne.value==="abs")return new Le(Math.abs(ce.value));throw new Error(`Unknown NumericValue filter: ${ne.value}`)}if(ce instanceof pt)switch(ne.value){case"items":return new He(Array.from(ce.value.entries()).map(([ze,$e])=>new He([new lt(ze),$e])));case"length":return new Le(ce.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ne.value}`)}}throw new Error(`Cannot apply filter "${ne.value}" to type: ${ce.type}`)}if(ve.filter.type==="CallExpression"){const ne=ve.filter;if(ne.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ne.callee.type}`);const ze=ne.callee.value;if(ze==="tojson"){const[,$e]=this.evaluateArguments(ne.args,H),gt=$e.get("indent")??new Qe;if(!(gt instanceof Le||gt instanceof Qe))throw new Error("If set, indent must be a number");return new lt(oe(ce,gt.value))}if(ze==="join"){let $e;if(ce instanceof lt)$e=Array.from(ce.value);else{if(!(ce instanceof He))throw new Error(`Cannot apply filter "${ze}" to type: ${ce.type}`);$e=ce.value.map(_t=>_t.value)}const[gt,It]=this.evaluateArguments(ne.args,H),Nt=gt.at(0)??It.get("separator")??new lt("");if(!(Nt instanceof lt))throw new Error("separator must be a string");return new lt($e.join(Nt.value))}if(ce instanceof He){switch(ze){case"selectattr":case"rejectattr":{const $e=ze==="selectattr";if(ce.value.some(Xt=>!(Xt instanceof pt)))throw new Error(`\`${ze}\` can only be applied to array of objects`);if(ne.args.some(Xt=>Xt.type!=="StringLiteral"))throw new Error(`arguments of \`${ze}\` must be strings`);const[gt,It,Nt]=ne.args.map(Xt=>this.evaluate(Xt,H));let _t;if(It){const Xt=H.tests.get(It.value);if(!Xt)throw new Error(`Unknown test: ${It.value}`);_t=Xt}else _t=(...Xt)=>Xt[0].__bool__().value;const Vt=ce.value.filter(Xt=>{const Jt=Xt.value.get(gt.value),wr=!!Jt&&_t(Jt,Nt);return $e?wr:!wr});return new He(Vt)}case"map":{const[,$e]=this.evaluateArguments(ne.args,H);if($e.has("attribute")){const gt=$e.get("attribute");if(!(gt instanceof lt))throw new Error("attribute must be a string");const It=$e.get("default"),Nt=ce.value.map(_t=>{if(!(_t instanceof pt))throw new Error("items in map must be an object");return _t.value.get(gt.value)??It??new ht});return new He(Nt)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ze}`)}if(ce instanceof lt){if(ze==="indent"){const[$e,gt]=this.evaluateArguments(ne.args,H),It=$e.at(0)??gt.get("width")??new Le(4);if(!(It instanceof Le))throw new Error("width must be a number");const Nt=$e.at(1)??gt.get("first")??new ft(!1),_t=$e.at(2)??gt.get("blank")??new ft(!1),Vt=ce.value.split(`
`),Xt=" ".repeat(It.value),Jt=Vt.map((wr,Rr)=>!Nt.value&&Rr===0||!_t.value&&wr.length===0?wr:Xt+wr);return new lt(Jt.join(`
`))}throw new Error(`Unknown StringValue filter: ${ze}`)}throw new Error(`Cannot apply filter "${ze}" to type: ${ce.type}`)}throw new Error(`Unknown filter: ${ve.filter.type}`)}evaluateTestExpression(ve,H){const ce=this.evaluate(ve.operand,H),ne=H.tests.get(ve.test.value);if(!ne)throw new Error(`Unknown test: ${ve.test.value}`);const ze=ne(ce);return new ft(ve.negate?!ze:ze)}evaluateUnaryExpression(ve,H){const ce=this.evaluate(ve.argument,H);if(ve.operator.value==="not")return new ft(!ce.value);throw new SyntaxError(`Unknown operator: ${ve.operator.value}`)}evalProgram(ve,H){return this.evaluateBlock(ve.body,H)}evaluateBlock(ve,H){let ce="";for(const ne of ve){const ze=this.evaluate(ne,H);ze.type!=="NullValue"&&ze.type!=="UndefinedValue"&&(ce+=ze.value)}return new lt(ce)}evaluateIdentifier(ve,H){return H.lookupVariable(ve.value)}evaluateCallExpression(ve,H){const[ce,ne]=this.evaluateArguments(ve.args,H);ne.size>0&&ce.push(new ct(ne));const ze=this.evaluate(ve.callee,H);if(ze.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ze.type}`);return ze.value(ce,H)}evaluateSliceExpression(ve,H,ce){if(!(ve instanceof He||ve instanceof lt))throw new Error("Slice object must be an array or string");const ne=this.evaluate(H.start,ce),ze=this.evaluate(H.stop,ce),$e=this.evaluate(H.step,ce);if(!(ne instanceof Le||ne instanceof ht))throw new Error("Slice start must be numeric or undefined");if(!(ze instanceof Le||ze instanceof ht))throw new Error("Slice stop must be numeric or undefined");if(!($e instanceof Le||$e instanceof ht))throw new Error("Slice step must be numeric or undefined");return ve instanceof He?new He(ie(ve.value,ne.value,ze.value,$e.value)):new lt(ie(Array.from(ve.value),ne.value,ze.value,$e.value).join(""))}evaluateMemberExpression(ve,H){const ce=this.evaluate(ve.object,H);let ne,ze;if(ve.computed){if(ve.property.type==="SliceExpression")return this.evaluateSliceExpression(ce,ve.property,H);ne=this.evaluate(ve.property,H)}else ne=new lt(ve.property.value);if(ce instanceof pt){if(!(ne instanceof lt))throw new Error(`Cannot access property with non-string: got ${ne.type}`);ze=ce.value.get(ne.value)??ce.builtins.get(ne.value)}else if(ce instanceof He||ce instanceof lt)if(ne instanceof Le)ze=ce.value.at(ne.value),ce instanceof lt&&(ze=new lt(ce.value.at(ne.value)));else{if(!(ne instanceof lt))throw new Error(`Cannot access property with non-string/non-number: got ${ne.type}`);ze=ce.builtins.get(ne.value)}else{if(!(ne instanceof lt))throw new Error(`Cannot access property with non-string: got ${ne.type}`);ze=ce.builtins.get(ne.value)}return ze instanceof Ye?ze:new ht}evaluateSet(ve,H){const ce=this.evaluate(ve.value,H);if(ve.assignee.type==="Identifier"){const ne=ve.assignee.value;H.setVariable(ne,ce)}else{if(ve.assignee.type!=="MemberExpression")throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(ve.assignee)}`);{const ne=ve.assignee,ze=this.evaluate(ne.object,H);if(!(ze instanceof pt))throw new Error("Cannot assign to member of non-object");if(ne.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ze.value.set(ne.property.value,ce)}}return new Qe}evaluateIf(ve,H){const ce=this.evaluate(ve.test,H);return this.evaluateBlock(ce.__bool__().value?ve.body:ve.alternate,H)}evaluateFor(ve,H){const ce=new wt(H);let ne,ze;if(ve.iterable.type==="SelectExpression"){const _t=ve.iterable;ze=this.evaluate(_t.iterable,ce),ne=_t.test}else ze=this.evaluate(ve.iterable,ce);if(!(ze instanceof He))throw new Error(`Expected iterable type in for loop: got ${ze.type}`);const $e=[],gt=[];for(let _t=0;_t<ze.value.length;++_t){const Vt=new wt(ce),Xt=ze.value[_t];let Jt;if(ve.loopvar.type==="Identifier")Jt=wr=>wr.setVariable(ve.loopvar.value,Xt);else{if(ve.loopvar.type!=="TupleLiteral")throw new Error(`Invalid loop variable(s): ${ve.loopvar.type}`);{const wr=ve.loopvar;if(Xt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Xt.type}`);const Rr=Xt;if(wr.value.length!==Rr.value.length)throw new Error(`Too ${wr.value.length>Rr.value.length?"few":"many"} items to unpack`);Jt=$s=>{for(let os=0;os<wr.value.length;++os){if(wr.value[os].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${wr.value[os].type}`);$s.setVariable(wr.value[os].value,Rr.value[os])}}}}ne&&(Jt(Vt),!this.evaluate(ne,Vt).__bool__().value)||($e.push(Xt),gt.push(Jt))}let It="",Nt=!0;for(let _t=0;_t<$e.length;++_t){const Vt=new Map([["index",new Le(_t+1)],["index0",new Le(_t)],["revindex",new Le($e.length-_t)],["revindex0",new Le($e.length-_t-1)],["first",new ft(_t===0)],["last",new ft(_t===$e.length-1)],["length",new Le($e.length)],["previtem",_t>0?$e[_t-1]:new ht],["nextitem",_t<$e.length-1?$e[_t+1]:new ht]]);ce.setVariable("loop",new pt(Vt)),gt[_t](ce),It+=this.evaluateBlock(ve.body,ce).value,Nt=!1}return Nt&&(It+=this.evaluateBlock(ve.defaultBlock,ce).value),new lt(It)}evaluateMacro(ve,H){return H.setVariable(ve.name.value,new Se((ce,ne)=>{var gt;const ze=new wt(ne);let $e;ce=ce.slice(),((gt=ce.at(-1))==null?void 0:gt.type)==="KeywordArgumentsValue"&&($e=ce.pop());for(let It=0;It<ve.args.length;++It){const Nt=ve.args[It],_t=ce[It];if(Nt.type==="Identifier"){const Vt=Nt;if(!_t)throw new Error(`Missing positional argument: ${Vt.value}`);ze.setVariable(Vt.value,_t)}else{if(Nt.type!=="KeywordArgumentExpression")throw new Error(`Unknown argument type: ${Nt.type}`);{const Vt=Nt,Xt=_t??($e==null?void 0:$e.value.get(Vt.key.value))??this.evaluate(Vt.value,ze);ze.setVariable(Vt.key.value,Xt)}}}return this.evaluateBlock(ve.body,ze)})),new Qe}evaluate(ve,H){if(ve===void 0)return new ht;switch(ve.type){case"Program":return this.evalProgram(ve,H);case"Set":return this.evaluateSet(ve,H);case"If":return this.evaluateIf(ve,H);case"For":return this.evaluateFor(ve,H);case"Macro":return this.evaluateMacro(ve,H);case"NumericLiteral":return new Le(Number(ve.value));case"StringLiteral":return new lt(ve.value);case"BooleanLiteral":return new ft(ve.value);case"NullLiteral":return new Qe(ve.value);case"ArrayLiteral":return new He(ve.value.map(ce=>this.evaluate(ce,H)));case"TupleLiteral":return new Re(ve.value.map(ce=>this.evaluate(ce,H)));case"ObjectLiteral":{const ce=new Map;for(const[ne,ze]of ve.value){const $e=this.evaluate(ne,H);if(!($e instanceof lt))throw new Error(`Object keys must be strings: got ${$e.type}`);ce.set($e.value,this.evaluate(ze,H))}return new pt(ce)}case"Identifier":return this.evaluateIdentifier(ve,H);case"CallExpression":return this.evaluateCallExpression(ve,H);case"MemberExpression":return this.evaluateMemberExpression(ve,H);case"UnaryExpression":return this.evaluateUnaryExpression(ve,H);case"BinaryExpression":return this.evaluateBinaryExpression(ve,H);case"FilterExpression":return this.evaluateFilterExpression(ve,H);case"TestExpression":return this.evaluateTestExpression(ve,H);default:throw new SyntaxError(`Unknown node type: ${ve.type}`)}}};function Mt(ve){switch(typeof ve){case"number":return new Le(ve);case"string":return new lt(ve);case"boolean":return new ft(ve);case"undefined":return new ht;case"object":return ve===null?new Qe:Array.isArray(ve)?new He(ve.map(Mt)):new pt(new Map(Object.entries(ve).map(([H,ce])=>[H,Mt(ce)])));case"function":return new Se((H,ce)=>{const ne=ve(...H.map(ze=>ze.value))??null;return Mt(ne)});default:throw new Error(`Cannot convert to runtime value: ${ve}`)}}function oe(ve,H,ce){const ne=ce??0;switch(ve.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(ve.value);case"ArrayValue":case"ObjectValue":{const ze=H?" ".repeat(H):"",$e=`
`+ze.repeat(ne),gt=$e+ze;if(ve.type==="ArrayValue"){const It=ve.value.map(Nt=>oe(Nt,H,ne+1));return H?`[${gt}${It.join(`,${gt}`)}${$e}]`:`[${It.join(", ")}]`}{const It=Array.from(ve.value.entries()).map(([Nt,_t])=>{const Vt=`"${Nt}": ${oe(_t,H,ne+1)}`;return H?`${gt}${Vt}`:Vt});return H?`{${It.join(",")}${$e}}`:`{${It.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${ve.type}`)}}var zt=class{constructor(ve){Te(this,"parsed");const H=v(ve,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ye(H)}render(ve){const H=new wt;if(H.set("false",!1),H.set("true",!0),H.set("raise_exception",ce=>{throw new Error(ce)}),H.set("range",ue),ve)for(const[ce,ne]of Object.entries(ve))H.set(ce,ne);return new Bt(H).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(i,o,a)=>{a.r(o),a.d(o,{registerBackend:()=>h,resolveBackendAndExecutionProviders:()=>y});const u=new Map,p=[],h=(k,_,v)=>{if(!_||typeof _.init!="function"||typeof _.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{const M=u.get(k);if(M===void 0)u.set(k,{backend:_,priority:v});else{if(M.priority>v)return;if(M.priority===v&&M.backend!==_)throw new Error(`cannot register backend "${k}" using priority ${v}`)}if(v>=0){const B=p.indexOf(k);B!==-1&&p.splice(B,1);for(let S=0;S<p.length;S++)if(u.get(p[S]).priority<=v)return void p.splice(S,0,k);p.push(k)}}},C=async k=>{const _=u.get(k);if(!_)return"backend not found.";if(_.initialized)return _.backend;if(_.aborted)return _.error;{const v=!!_.initPromise;try{return v||(_.initPromise=_.backend.init(k)),await _.initPromise,_.initialized=!0,_.backend}catch(M){return v||(_.error=`${M}`,_.aborted=!0),_.error}finally{delete _.initPromise}}},y=async k=>{const _=k.executionProviders||[],v=_.map(Z=>typeof Z=="string"?Z:Z.name),M=v.length===0?p:v;let B;const S=[],N=new Set;for(const Z of M){const O=await C(Z);typeof O=="string"?S.push({name:Z,err:O}):(B||(B=O),B===O&&N.add(Z))}if(!B)throw new Error(`no available backend found. ERR: ${S.map(Z=>`[${Z.name}] ${Z.err}`).join(", ")}`);for(const{name:Z,err:O}of S)v.includes(Z)&&console.warn(`removing requested execution provider "${Z}" from session options because it is not available: ${O}`);const V=_.filter(Z=>N.has(typeof Z=="string"?Z:Z.name));return[B,new Proxy(k,{get:(Z,O)=>O==="executionProviders"?V:Reflect.get(Z,O)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(i,o,a)=>{a.r(o),a.d(o,{registerBackend:()=>u.registerBackend});var u=a("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(i,o,a)=>{a.r(o),a.d(o,{env:()=>h});var u=a("./node_modules/onnxruntime-common/dist/esm/version.js");let p="warning";const h={wasm:{},webgl:{},webgpu:{},versions:{common:u.version},set logLevel(C){if(C!==void 0){if(typeof C!="string"||["verbose","info","warning","error","fatal"].indexOf(C)===-1)throw new Error(`Unsupported logging level: ${C}`);p=C}},get logLevel(){return p}};Object.defineProperty(h,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(i,o,a)=>{a.r(o),a.d(o,{env:()=>u});const u=a("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(i,o,a)=>{a.r(o),a.d(o,{InferenceSession:()=>h.InferenceSession,TRACE:()=>y.TRACE,TRACE_FUNC_BEGIN:()=>y.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>y.TRACE_FUNC_END,Tensor:()=>C.Tensor,TrainingSession:()=>k.TrainingSession,env:()=>p.env,registerBackend:()=>u.registerBackend});var u=a("./node_modules/onnxruntime-common/dist/esm/backend.js"),p=a("./node_modules/onnxruntime-common/dist/esm/env.js"),h=a("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),C=a("./node_modules/onnxruntime-common/dist/esm/tensor.js");a("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),a("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var y=a("./node_modules/onnxruntime-common/dist/esm/trace.js");a("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),a("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var k=a("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(i,o,a)=>{a.r(o),a.d(o,{InferenceSession:()=>C});var u=a("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),p=a("./node_modules/onnxruntime-common/dist/esm/tensor.js"),h=a("./node_modules/onnxruntime-common/dist/esm/trace.js");class C{constructor(k){this.handler=k}async run(k,_,v){(0,h.TRACE_FUNC_BEGIN)();const M={};let B={};if(typeof k!="object"||k===null||k instanceof p.Tensor||Array.isArray(k))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let S=!0;if(typeof _=="object"){if(_===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(_ instanceof p.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(_)){if(_.length===0)throw new TypeError("'fetches' cannot be an empty array.");S=!1;for(const Z of _){if(typeof Z!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(Z)===-1)throw new RangeError(`'fetches' contains invalid output name: ${Z}.`);M[Z]=null}if(typeof v=="object"&&v!==null)B=v;else if(v!==void 0)throw new TypeError("'options' must be an object.")}else{let Z=!1;const O=Object.getOwnPropertyNames(_);for(const Q of this.outputNames)if(O.indexOf(Q)!==-1){const q=_[Q];(q===null||q instanceof p.Tensor)&&(Z=!0,S=!1,M[Q]=q)}if(Z){if(typeof v=="object"&&v!==null)B=v;else if(v!==void 0)throw new TypeError("'options' must be an object.")}else B=_}}else if(_!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const Z of this.inputNames)if(k[Z]===void 0)throw new Error(`input '${Z}' is missing in 'feeds'.`);if(S)for(const Z of this.outputNames)M[Z]=null;const N=await this.handler.run(k,M,B),V={};for(const Z in N)if(Object.hasOwnProperty.call(N,Z)){const O=N[Z];O instanceof p.Tensor?V[Z]=O:V[Z]=new p.Tensor(O.type,O.data,O.dims)}return(0,h.TRACE_FUNC_END)(),V}async release(){return this.handler.dispose()}static async create(k,_,v,M){let B;(0,h.TRACE_FUNC_BEGIN)();let S={};if(typeof k=="string"){if(B=k,typeof _=="object"&&_!==null)S=_;else if(_!==void 0)throw new TypeError("'options' must be an object.")}else if(k instanceof Uint8Array){if(B=k,typeof _=="object"&&_!==null)S=_;else if(_!==void 0)throw new TypeError("'options' must be an object.")}else{if(!(k instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&k instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const O=k;let Q=0,q=k.byteLength;if(typeof _=="object"&&_!==null)S=_;else if(typeof _=="number"){if(Q=_,!Number.isSafeInteger(Q))throw new RangeError("'byteOffset' must be an integer.");if(Q<0||Q>=O.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${O.byteLength}).`);if(q=k.byteLength-Q,typeof v=="number"){if(q=v,!Number.isSafeInteger(q))throw new RangeError("'byteLength' must be an integer.");if(q<=0||Q+q>O.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${O.byteLength-Q}].`);if(typeof M=="object"&&M!==null)S=M;else if(M!==void 0)throw new TypeError("'options' must be an object.")}else if(v!==void 0)throw new TypeError("'byteLength' must be a number.")}else if(_!==void 0)throw new TypeError("'options' must be an object.");B=new Uint8Array(O,Q,q)}}const[N,V]=await(0,u.resolveBackendAndExecutionProviders)(S),Z=await N.createInferenceSessionHandler(B,V);return(0,h.TRACE_FUNC_END)(),new C(Z)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(i,o,a)=>{a.r(o),a.d(o,{InferenceSession:()=>u});const u=a("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(i,o,a)=>{a.r(o)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(i,o,a)=>{a.r(o)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(i,o,a)=>{a.r(o),a.d(o,{tensorToDataURL:()=>u,tensorToImageData:()=>p});const u=(h,C)=>{const y=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);y.width=h.dims[3],y.height=h.dims[2];const k=y.getContext("2d");if(k!=null){let _,v;(C==null?void 0:C.tensorLayout)!==void 0&&C.tensorLayout==="NHWC"?(_=h.dims[2],v=h.dims[3]):(_=h.dims[3],v=h.dims[2]);const M=(C==null?void 0:C.format)!==void 0?C.format:"RGB",B=C==null?void 0:C.norm;let S,N;B===void 0||B.mean===void 0?S=[255,255,255,255]:typeof B.mean=="number"?S=[B.mean,B.mean,B.mean,B.mean]:(S=[B.mean[0],B.mean[1],B.mean[2],0],B.mean[3]!==void 0&&(S[3]=B.mean[3])),B===void 0||B.bias===void 0?N=[0,0,0,0]:typeof B.bias=="number"?N=[B.bias,B.bias,B.bias,B.bias]:(N=[B.bias[0],B.bias[1],B.bias[2],0],B.bias[3]!==void 0&&(N[3]=B.bias[3]));const V=v*_;let Z=0,O=V,Q=2*V,q=-1;M==="RGBA"?(Z=0,O=V,Q=2*V,q=3*V):M==="RGB"?(Z=0,O=V,Q=2*V):M==="RBG"&&(Z=0,Q=V,O=2*V);for(let f=0;f<v;f++)for(let I=0;I<_;I++){const e=(h.data[Z++]-N[0])*S[0],c=(h.data[O++]-N[1])*S[1],P=(h.data[Q++]-N[2])*S[2],J=q===-1?255:(h.data[q++]-N[3])*S[3];k.fillStyle="rgba("+e+","+c+","+P+","+J+")",k.fillRect(I,f,1,1)}if("toDataURL"in y)return y.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},p=(h,C)=>{const y=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let k;if(y==null)throw new Error("Can not access image data");{let _,v,M;(C==null?void 0:C.tensorLayout)!==void 0&&C.tensorLayout==="NHWC"?(_=h.dims[2],v=h.dims[1],M=h.dims[3]):(_=h.dims[3],v=h.dims[2],M=h.dims[1]);const B=C!==void 0&&C.format!==void 0?C.format:"RGB",S=C==null?void 0:C.norm;let N,V;S===void 0||S.mean===void 0?N=[255,255,255,255]:typeof S.mean=="number"?N=[S.mean,S.mean,S.mean,S.mean]:(N=[S.mean[0],S.mean[1],S.mean[2],255],S.mean[3]!==void 0&&(N[3]=S.mean[3])),S===void 0||S.bias===void 0?V=[0,0,0,0]:typeof S.bias=="number"?V=[S.bias,S.bias,S.bias,S.bias]:(V=[S.bias[0],S.bias[1],S.bias[2],0],S.bias[3]!==void 0&&(V[3]=S.bias[3]));const Z=v*_;if(C!==void 0&&(C.format!==void 0&&M===4&&C.format!=="RGBA"||M===3&&C.format!=="RGB"&&C.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const O=4;let Q=0,q=1,f=2,I=3,e=0,c=Z,P=2*Z,J=-1;B==="RGBA"?(e=0,c=Z,P=2*Z,J=3*Z):B==="RGB"?(e=0,c=Z,P=2*Z):B==="RBG"&&(e=0,P=Z,c=2*Z),k=y.createImageData(_,v);for(let D=0;D<v*_;Q+=O,q+=O,f+=O,I+=O,D++)k.data[Q]=(h.data[e++]-V[0])*N[0],k.data[q]=(h.data[c++]-V[1])*N[1],k.data[f]=(h.data[P++]-V[2])*N[2],k.data[I]=J===-1?255:(h.data[J++]-V[3])*N[3]}return k}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(i,o,a)=>{a.r(o)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(i,o,a)=>{a.r(o),a.d(o,{bufferToTensor:()=>p,tensorFromGpuBuffer:()=>y,tensorFromImage:()=>h,tensorFromMLTensor:()=>k,tensorFromPinnedBuffer:()=>_,tensorFromTexture:()=>C});var u=a("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const p=(v,M)=>{if(v===void 0)throw new Error("Image buffer must be defined");if(M.height===void 0||M.width===void 0)throw new Error("Image height and width must be defined");if(M.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:B,width:S}=M,N=M.norm??{mean:255,bias:0};let V,Z;V=typeof N.mean=="number"?[N.mean,N.mean,N.mean,N.mean]:[N.mean[0],N.mean[1],N.mean[2],N.mean[3]??255],Z=typeof N.bias=="number"?[N.bias,N.bias,N.bias,N.bias]:[N.bias[0],N.bias[1],N.bias[2],N.bias[3]??0];const O=M.format!==void 0?M.format:"RGBA",Q=M.tensorFormat!==void 0&&M.tensorFormat!==void 0?M.tensorFormat:"RGB",q=B*S,f=Q==="RGBA"?new Float32Array(4*q):new Float32Array(3*q);let I=4,e=0,c=1,P=2,J=3,D=0,j=q,Ie=2*q,ge=-1;O==="RGB"&&(I=3,e=0,c=1,P=2,J=-1),Q==="RGBA"?ge=3*q:Q==="RBG"?(D=0,Ie=q,j=2*q):Q==="BGR"&&(Ie=0,j=q,D=2*q);for(let ke=0;ke<q;ke++,e+=I,P+=I,c+=I,J+=I)f[D++]=(v[e]+Z[0])/V[0],f[j++]=(v[c]+Z[1])/V[1],f[Ie++]=(v[P]+Z[2])/V[2],ge!==-1&&J!==-1&&(f[ge++]=(v[J]+Z[3])/V[3]);return Q==="RGBA"?new u.Tensor("float32",f,[1,4,B,S]):new u.Tensor("float32",f,[1,3,B,S])},h=async(v,M)=>{const B=typeof HTMLImageElement<"u"&&v instanceof HTMLImageElement,S=typeof ImageData<"u"&&v instanceof ImageData,N=typeof ImageBitmap<"u"&&v instanceof ImageBitmap,V=typeof v=="string";let Z,O=M??{};const Q=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},q=f=>typeof HTMLCanvasElement<"u"&&f instanceof HTMLCanvasElement||f instanceof OffscreenCanvas?f.getContext("2d"):null;if(B){const f=Q();f.width=v.width,f.height=v.height;const I=q(f);if(I==null)throw new Error("Can not access image data");{let e=v.height,c=v.width;if(M!==void 0&&M.resizedHeight!==void 0&&M.resizedWidth!==void 0&&(e=M.resizedHeight,c=M.resizedWidth),M!==void 0){if(O=M,M.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");O.tensorFormat="RGBA",O.height=e,O.width=c}else O.tensorFormat="RGBA",O.height=e,O.width=c;I.drawImage(v,0,0),Z=I.getImageData(0,0,c,e).data}}else{if(!S){if(N){if(M===void 0)throw new Error("Please provide image config with format for Imagebitmap");const f=Q();f.width=v.width,f.height=v.height;const I=q(f);if(I!=null){const e=v.height,c=v.width;return I.drawImage(v,0,0,c,e),Z=I.getImageData(0,0,c,e).data,O.height=e,O.width=c,p(Z,O)}throw new Error("Can not access image data")}if(V)return new Promise((f,I)=>{const e=Q(),c=q(e);if(!v||!c)return I();const P=new Image;P.crossOrigin="Anonymous",P.src=v,P.onload=()=>{e.width=P.width,e.height=P.height,c.drawImage(P,0,0,e.width,e.height);const J=c.getImageData(0,0,e.width,e.height);O.height=e.height,O.width=e.width,f(p(J.data,O))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let f,I;if(M!==void 0&&M.resizedWidth!==void 0&&M.resizedHeight!==void 0?(f=M.resizedHeight,I=M.resizedWidth):(f=v.height,I=v.width),M!==void 0&&(O=M),O.format="RGBA",O.height=f,O.width=I,M!==void 0){const e=Q();e.width=I,e.height=f;const c=q(e);if(c==null)throw new Error("Can not access image data");c.putImageData(v,0,0),Z=c.getImageData(0,0,I,f).data}else Z=v.data}}if(Z!==void 0)return p(Z,O);throw new Error("Input data provided is not supported - aborted tensor creation")},C=(v,M)=>{const{width:B,height:S,download:N,dispose:V}=M,Z=[1,S,B,4];return new u.Tensor({location:"texture",type:"float32",texture:v,dims:Z,download:N,dispose:V})},y=(v,M)=>{const{dataType:B,dims:S,download:N,dispose:V}=M;return new u.Tensor({location:"gpu-buffer",type:B??"float32",gpuBuffer:v,dims:S,download:N,dispose:V})},k=(v,M)=>{const{dataType:B,dims:S,download:N,dispose:V}=M;return new u.Tensor({location:"ml-tensor",type:B??"float32",mlTensor:v,dims:S,download:N,dispose:V})},_=(v,M,B)=>new u.Tensor({location:"cpu-pinned",type:v,data:M,dims:B??[M.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(i,o,a)=>{a.r(o)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(i,o,a)=>{a.r(o),a.d(o,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>p,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>u,checkTypedArray:()=>C});const u=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),p=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let h=!1;const C=()=>{if(!h){h=!0;const y=typeof BigInt64Array<"u"&&BigInt64Array.from,k=typeof BigUint64Array<"u"&&BigUint64Array.from,_=typeof Float16Array<"u"&&Float16Array.from;y&&(u.set("int64",BigInt64Array),p.set(BigInt64Array,"int64")),k&&(u.set("uint64",BigUint64Array),p.set(BigUint64Array,"uint64")),_?(u.set("float16",Float16Array),p.set(Float16Array,"float16")):u.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(i,o,a)=>{a.r(o),a.d(o,{Tensor:()=>y});var u=a("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),p=a("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),h=a("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),C=a("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class y{constructor(_,v,M){let B,S;if((0,h.checkTypedArray)(),typeof _=="object"&&"location"in _)switch(this.dataLocation=_.location,B=_.type,S=_.dims,_.location){case"cpu-pinned":{const V=h.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(B);if(!V)throw new TypeError(`unsupported type "${B}" to create tensor from pinned buffer`);if(!(_.data instanceof V))throw new TypeError(`buffer should be of type ${V.name}`);this.cpuData=_.data;break}case"texture":if(B!=="float32")throw new TypeError(`unsupported type "${B}" to create tensor from texture`);this.gpuTextureData=_.texture,this.downloader=_.download,this.disposer=_.dispose;break;case"gpu-buffer":if(B!=="float32"&&B!=="float16"&&B!=="int32"&&B!=="int64"&&B!=="uint32"&&B!=="uint8"&&B!=="bool"&&B!=="uint4"&&B!=="int4")throw new TypeError(`unsupported type "${B}" to create tensor from gpu buffer`);this.gpuBufferData=_.gpuBuffer,this.downloader=_.download,this.disposer=_.dispose;break;case"ml-tensor":if(B!=="float32"&&B!=="float16"&&B!=="int32"&&B!=="int64"&&B!=="uint32"&&B!=="uint64"&&B!=="int8"&&B!=="uint8"&&B!=="bool")throw new TypeError(`unsupported type "${B}" to create tensor from MLTensor`);this.mlTensorData=_.mlTensor,this.downloader=_.download,this.disposer=_.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let V,Z;if(typeof _=="string")if(B=_,Z=M,_==="string"){if(!Array.isArray(v))throw new TypeError("A string tensor's data must be a string array.");V=v}else{const O=h.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(_);if(O===void 0)throw new TypeError(`Unsupported tensor type: ${_}.`);if(Array.isArray(v)){if(_==="float16"&&O===Uint16Array||_==="uint4"||_==="int4")throw new TypeError(`Creating a ${_} tensor from number array is not supported. Please use ${O.name} as data.`);V=_==="uint64"||_==="int64"?O.from(v,BigInt):O.from(v)}else if(v instanceof O)V=v;else{if(!(v instanceof Uint8ClampedArray))throw new TypeError(`A ${B} tensor's data must be type of ${O}`);if(_!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");V=Uint8Array.from(v)}}else if(Z=v,Array.isArray(_)){if(_.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const O=typeof _[0];if(O==="string")B="string",V=_;else{if(O!=="boolean")throw new TypeError(`Invalid element type of data array: ${O}.`);B="bool",V=Uint8Array.from(_)}}else if(_ instanceof Uint8ClampedArray)B="uint8",V=Uint8Array.from(_);else{const O=h.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(_.constructor);if(O===void 0)throw new TypeError(`Unsupported type for tensor data: ${_.constructor}.`);B=O,V=_}if(Z===void 0)Z=[V.length];else if(!Array.isArray(Z))throw new TypeError("A tensor's dims must be a number array");S=Z,this.cpuData=V,this.dataLocation="cpu"}const N=(0,C.calculateSize)(S);if(this.cpuData&&N!==this.cpuData.length&&(B!=="uint4"&&B!=="int4"||Math.ceil(N/2)!==this.cpuData.length))throw new Error(`Tensor's size(${N}) does not match data length(${this.cpuData.length}).`);this.type=B,this.dims=S,this.size=N}static async fromImage(_,v){return(0,p.tensorFromImage)(_,v)}static fromTexture(_,v){return(0,p.tensorFromTexture)(_,v)}static fromGpuBuffer(_,v){return(0,p.tensorFromGpuBuffer)(_,v)}static fromMLTensor(_,v){return(0,p.tensorFromMLTensor)(_,v)}static fromPinnedBuffer(_,v,M){return(0,p.tensorFromPinnedBuffer)(_,v,M)}toDataURL(_){return(0,u.tensorToDataURL)(this,_)}toImageData(_){return(0,u.tensorToImageData)(this,_)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(_){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const v=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=v,_&&this.disposer&&(this.disposer(),this.disposer=void 0),v}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(_){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,C.tensorReshape)(this,_)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(i,o,a)=>{a.r(o),a.d(o,{calculateSize:()=>p,tensorReshape:()=>h});var u=a("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const p=C=>{let y=1;for(let k=0;k<C.length;k++){const _=C[k];if(typeof _!="number"||!Number.isSafeInteger(_))throw new TypeError(`dims[${k}] must be an integer, got: ${_}`);if(_<0)throw new RangeError(`dims[${k}] must be a non-negative integer, got: ${_}`);y*=_}return y},h=(C,y)=>{switch(C.location){case"cpu":return new u.Tensor(C.type,C.data,y);case"cpu-pinned":return new u.Tensor({location:"cpu-pinned",data:C.data,type:C.type,dims:y});case"texture":return new u.Tensor({location:"texture",texture:C.texture,type:C.type,dims:y});case"gpu-buffer":return new u.Tensor({location:"gpu-buffer",gpuBuffer:C.gpuBuffer,type:C.type,dims:y});case"ml-tensor":return new u.Tensor({location:"ml-tensor",mlTensor:C.mlTensor,type:C.type,dims:y});default:throw new Error(`tensorReshape: tensor location ${C.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(i,o,a)=>{a.r(o),a.d(o,{Tensor:()=>u});const u=a("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(i,o,a)=>{a.r(o),a.d(o,{TRACE:()=>p,TRACE_FUNC_BEGIN:()=>C,TRACE_FUNC_END:()=>y});var u=a("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const p=(k,_)=>{(u.env.trace===void 0?u.env.wasm.trace:u.env.trace)&&console.timeStamp(`${k}::ORT::${_}`)},h=(k,_)=>{var B;const v=((B=new Error().stack)==null?void 0:B.split(/\r\n|\r|\n/g))||[];let M=!1;for(let S=0;S<v.length;S++){if(M&&!v[S].includes("TRACE_FUNC")){let N=`FUNC_${k}::${v[S].trim().split(" ")[1]}`;return _&&(N+=`::${_}`),void p("CPU",N)}v[S].includes("TRACE_FUNC")&&(M=!0)}},C=k=>{(u.env.trace===void 0?u.env.wasm.trace:u.env.trace)&&h("BEGIN",k)},y=k=>{(u.env.trace===void 0?u.env.wasm.trace:u.env.trace)&&h("END",k)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(i,o,a)=>{a.r(o),a.d(o,{TrainingSession:()=>h});var u=a("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),p=a("./node_modules/onnxruntime-common/dist/esm/tensor.js");class h{constructor(y,k,_){this.handler=y,this.hasOptimizerModel=k,this.hasEvalModel=_}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(y,k){const _=y.evalModel||"",v=y.optimizerModel||"",M=k||{},[B,S]=await(0,u.resolveBackendAndExecutionProviders)(M);if(B.createTrainingSessionHandler){const N=await B.createTrainingSessionHandler(y.checkpointState,y.trainModel,_,v,S);return new h(N,!!y.optimizerModel,!!y.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(y,k,_,v,M){const B={};let S={};if(typeof _!="object"||_===null||_ instanceof p.Tensor||Array.isArray(_))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let N=!0;if(typeof v=="object"){if(v===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(v instanceof p.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(v)){if(v.length===0)throw new TypeError("'fetches' cannot be an empty array.");N=!1;for(const V of v){if(typeof V!="string")throw new TypeError("'fetches' must be a string array or an object.");if(k.indexOf(V)===-1)throw new RangeError(`'fetches' contains invalid output name: ${V}.`);B[V]=null}if(typeof M=="object"&&M!==null)S=M;else if(M!==void 0)throw new TypeError("'options' must be an object.")}else{let V=!1;const Z=Object.getOwnPropertyNames(v);for(const O of k)if(Z.indexOf(O)!==-1){const Q=v[O];(Q===null||Q instanceof p.Tensor)&&(V=!0,N=!1,B[O]=Q)}if(V){if(typeof M=="object"&&M!==null)S=M;else if(M!==void 0)throw new TypeError("'options' must be an object.")}else S=v}}else if(v!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const V of y)if(_[V]===void 0)throw new Error(`input '${V}' is missing in 'feeds'.`);if(N)for(const V of k)B[V]=null;return[B,S]}convertHandlerReturnTypeToMapOfTensors(y){const k={};for(const _ in y)if(Object.hasOwnProperty.call(y,_)){const v=y[_];v instanceof p.Tensor?k[_]=v:k[_]=new p.Tensor(v.type,v.data,v.dims)}return k}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(y,k,_){const[v,M]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,y,k,_),B=await this.handler.runTrainStep(y,v,M);return this.convertHandlerReturnTypeToMapOfTensors(B)}async runOptimizerStep(y){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(y||{})}async runEvalStep(y,k,_){if(this.hasEvalModel){const[v,M]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,y,k,_),B=await this.handler.runEvalStep(y,v,M);return this.convertHandlerReturnTypeToMapOfTensors(B)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(y=!0){return this.handler.getParametersSize(y)}async loadParametersBuffer(y,k=!0){const _=await this.getParametersSize(k);if(y.length!==4*_)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(y,k)}async getContiguousParameters(y=!0){return this.handler.getContiguousParameters(y)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(i,o,a)=>{a.r(o),a.d(o,{TrainingSession:()=>u});const u=a("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(i,o,a)=>{a.r(o),a.d(o,{version:()=>u});const u="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(i,o,a)=>{a.r(o),a.d(o,{InferenceSession:()=>Xe,TRACE:()=>Ie,TRACE_FUNC_BEGIN:()=>ke,TRACE_FUNC_END:()=>Ee,Tensor:()=>j,default:()=>Qf,env:()=>M,registerBackend:()=>h});var u,p,h,C,y,k,_,v,M,B,S,N,V,Z,O,Q,q,f,I,e,c,P,J,D,j,Ie,ge,ke,Ee,Ne,Xe,At=Object.defineProperty,xe=Object.getOwnPropertyDescriptor,ye=Object.getOwnPropertyNames,ue=Object.prototype.hasOwnProperty,ie=(d=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(d,{get:(b,E)=>(typeof require<"u"?require:b)[E]}):d)(function(d){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+d+'" is not supported')}),be=(d,b)=>()=>(d&&(b=d(d=0)),b),Ye=(d,b)=>{for(var E in b)At(d,E,{get:b[E],enumerable:!0})},Le=d=>((b,E,G,L)=>{if(E&&typeof E=="object"||typeof E=="function")for(let W of ye(E))!ue.call(b,W)&&W!==G&&At(b,W,{get:()=>E[W],enumerable:!(L=xe(E,W))||L.enumerable});return b})(At({},"__esModule",{value:!0}),d),lt=be(()=>{u=new Map,p=[],h=(d,b,E)=>{if(!b||typeof b.init!="function"||typeof b.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{let G=u.get(d);if(G===void 0)u.set(d,{backend:b,priority:E});else{if(G.priority>E)return;if(G.priority===E&&G.backend!==b)throw new Error(`cannot register backend "${d}" using priority ${E}`)}if(E>=0){let L=p.indexOf(d);L!==-1&&p.splice(L,1);for(let W=0;W<p.length;W++)if(u.get(p[W]).priority<=E)return void p.splice(W,0,d);p.push(d)}}},C=async d=>{let b=u.get(d);if(!b)return"backend not found.";if(b.initialized)return b.backend;if(b.aborted)return b.error;{let E=!!b.initPromise;try{return E||(b.initPromise=b.backend.init(d)),await b.initPromise,b.initialized=!0,b.backend}catch(G){return E||(b.error=`${G}`,b.aborted=!0),b.error}finally{delete b.initPromise}}},y=async d=>{let b,E=d.executionProviders||[],G=E.map(ae=>typeof ae=="string"?ae:ae.name),L=G.length===0?p:G,W=[],R=new Set;for(let ae of L){let le=await C(ae);typeof le=="string"?W.push({name:ae,err:le}):(b||(b=le),b===le&&R.add(ae))}if(!b)throw new Error(`no available backend found. ERR: ${W.map(ae=>`[${ae.name}] ${ae.err}`).join(", ")}`);for(let{name:ae,err:le}of W)G.includes(ae)&&console.warn(`removing requested execution provider "${ae}" from session options because it is not available: ${le}`);let te=E.filter(ae=>R.has(typeof ae=="string"?ae:ae.name));return[b,new Proxy(d,{get:(ae,le)=>le==="executionProviders"?te:Reflect.get(ae,le)})]}}),ft=be(()=>{lt()}),pt=be(()=>{k="1.21.0-dev.20250206-d981b153d3"}),ct=be(()=>{pt(),_="warning",v={wasm:{},webgl:{},webgpu:{},versions:{common:k},set logLevel(d){if(d!==void 0){if(typeof d!="string"||["verbose","info","warning","error","fatal"].indexOf(d)===-1)throw new Error(`Unsupported logging level: ${d}`);_=d}},get logLevel(){return _}},Object.defineProperty(v,"logLevel",{enumerable:!0})}),He=be(()=>{ct(),M=v}),Re=be(()=>{B=(d,b)=>{let E=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);E.width=d.dims[3],E.height=d.dims[2];let G=E.getContext("2d");if(G!=null){let L,W;(b==null?void 0:b.tensorLayout)!==void 0&&b.tensorLayout==="NHWC"?(L=d.dims[2],W=d.dims[3]):(L=d.dims[3],W=d.dims[2]);let R,te,ae=(b==null?void 0:b.format)!==void 0?b.format:"RGB",le=b==null?void 0:b.norm;le===void 0||le.mean===void 0?R=[255,255,255,255]:typeof le.mean=="number"?R=[le.mean,le.mean,le.mean,le.mean]:(R=[le.mean[0],le.mean[1],le.mean[2],0],le.mean[3]!==void 0&&(R[3]=le.mean[3])),le===void 0||le.bias===void 0?te=[0,0,0,0]:typeof le.bias=="number"?te=[le.bias,le.bias,le.bias,le.bias]:(te=[le.bias[0],le.bias[1],le.bias[2],0],le.bias[3]!==void 0&&(te[3]=le.bias[3]));let Pe=W*L,Ge=0,$=Pe,je=2*Pe,Ke=-1;ae==="RGBA"?(Ge=0,$=Pe,je=2*Pe,Ke=3*Pe):ae==="RGB"?(Ge=0,$=Pe,je=2*Pe):ae==="RBG"&&(Ge=0,je=Pe,$=2*Pe);for(let nt=0;nt<W;nt++)for(let tt=0;tt<L;tt++){let dt=(d.data[Ge++]-te[0])*R[0],Ct=(d.data[$++]-te[1])*R[1],Et=(d.data[je++]-te[2])*R[2],Ot=Ke===-1?255:(d.data[Ke++]-te[3])*R[3];G.fillStyle="rgba("+dt+","+Ct+","+Et+","+Ot+")",G.fillRect(tt,nt,1,1)}if("toDataURL"in E)return E.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},S=(d,b)=>{let E,G=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(G==null)throw new Error("Can not access image data");{let L,W,R;(b==null?void 0:b.tensorLayout)!==void 0&&b.tensorLayout==="NHWC"?(L=d.dims[2],W=d.dims[1],R=d.dims[3]):(L=d.dims[3],W=d.dims[2],R=d.dims[1]);let te,ae,le=b!==void 0&&b.format!==void 0?b.format:"RGB",Pe=b==null?void 0:b.norm;Pe===void 0||Pe.mean===void 0?te=[255,255,255,255]:typeof Pe.mean=="number"?te=[Pe.mean,Pe.mean,Pe.mean,Pe.mean]:(te=[Pe.mean[0],Pe.mean[1],Pe.mean[2],255],Pe.mean[3]!==void 0&&(te[3]=Pe.mean[3])),Pe===void 0||Pe.bias===void 0?ae=[0,0,0,0]:typeof Pe.bias=="number"?ae=[Pe.bias,Pe.bias,Pe.bias,Pe.bias]:(ae=[Pe.bias[0],Pe.bias[1],Pe.bias[2],0],Pe.bias[3]!==void 0&&(ae[3]=Pe.bias[3]));let Ge=W*L;if(b!==void 0&&(b.format!==void 0&&R===4&&b.format!=="RGBA"||R===3&&b.format!=="RGB"&&b.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let $=4,je=0,Ke=1,nt=2,tt=3,dt=0,Ct=Ge,Et=2*Ge,Ot=-1;le==="RGBA"?(dt=0,Ct=Ge,Et=2*Ge,Ot=3*Ge):le==="RGB"?(dt=0,Ct=Ge,Et=2*Ge):le==="RBG"&&(dt=0,Et=Ge,Ct=2*Ge),E=G.createImageData(L,W);for(let Ft=0;Ft<W*L;je+=$,Ke+=$,nt+=$,tt+=$,Ft++)E.data[je]=(d.data[dt++]-ae[0])*te[0],E.data[Ke]=(d.data[Ct++]-ae[1])*te[1],E.data[nt]=(d.data[Et++]-ae[2])*te[2],E.data[tt]=Ot===-1?255:(d.data[Ot++]-ae[3])*te[3]}return E}}),Se=be(()=>{wt(),N=(d,b)=>{if(d===void 0)throw new Error("Image buffer must be defined");if(b.height===void 0||b.width===void 0)throw new Error("Image height and width must be defined");if(b.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let E,G,{height:L,width:W}=b,R=b.norm??{mean:255,bias:0};E=typeof R.mean=="number"?[R.mean,R.mean,R.mean,R.mean]:[R.mean[0],R.mean[1],R.mean[2],R.mean[3]??255],G=typeof R.bias=="number"?[R.bias,R.bias,R.bias,R.bias]:[R.bias[0],R.bias[1],R.bias[2],R.bias[3]??0];let te=b.format!==void 0?b.format:"RGBA",ae=b.tensorFormat!==void 0&&b.tensorFormat!==void 0?b.tensorFormat:"RGB",le=L*W,Pe=ae==="RGBA"?new Float32Array(4*le):new Float32Array(3*le),Ge=4,$=0,je=1,Ke=2,nt=3,tt=0,dt=le,Ct=2*le,Et=-1;te==="RGB"&&(Ge=3,$=0,je=1,Ke=2,nt=-1),ae==="RGBA"?Et=3*le:ae==="RBG"?(tt=0,Ct=le,dt=2*le):ae==="BGR"&&(Ct=0,dt=le,tt=2*le);for(let Ot=0;Ot<le;Ot++,$+=Ge,Ke+=Ge,je+=Ge,nt+=Ge)Pe[tt++]=(d[$]+G[0])/E[0],Pe[dt++]=(d[je]+G[1])/E[1],Pe[Ct++]=(d[Ke]+G[2])/E[2],Et!==-1&&nt!==-1&&(Pe[Et++]=(d[nt]+G[3])/E[3]);return new D("float32",Pe,ae==="RGBA"?[1,4,L,W]:[1,3,L,W])},V=async(d,b)=>{let E,G=typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement,L=typeof ImageData<"u"&&d instanceof ImageData,W=typeof ImageBitmap<"u"&&d instanceof ImageBitmap,R=typeof d=="string",te=b??{},ae=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},le=Pe=>typeof HTMLCanvasElement<"u"&&Pe instanceof HTMLCanvasElement||Pe instanceof OffscreenCanvas?Pe.getContext("2d"):null;if(G){let Pe=ae();Pe.width=d.width,Pe.height=d.height;let Ge=le(Pe);if(Ge==null)throw new Error("Can not access image data");{let $=d.height,je=d.width;if(b!==void 0&&b.resizedHeight!==void 0&&b.resizedWidth!==void 0&&($=b.resizedHeight,je=b.resizedWidth),b!==void 0){if(te=b,b.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");te.tensorFormat="RGBA",te.height=$,te.width=je}else te.tensorFormat="RGBA",te.height=$,te.width=je;Ge.drawImage(d,0,0),E=Ge.getImageData(0,0,je,$).data}}else{if(!L){if(W){if(b===void 0)throw new Error("Please provide image config with format for Imagebitmap");let Pe=ae();Pe.width=d.width,Pe.height=d.height;let Ge=le(Pe);if(Ge!=null){let $=d.height,je=d.width;return Ge.drawImage(d,0,0,je,$),E=Ge.getImageData(0,0,je,$).data,te.height=$,te.width=je,N(E,te)}throw new Error("Can not access image data")}if(R)return new Promise((Pe,Ge)=>{let $=ae(),je=le($);if(!d||!je)return Ge();let Ke=new Image;Ke.crossOrigin="Anonymous",Ke.src=d,Ke.onload=()=>{$.width=Ke.width,$.height=Ke.height,je.drawImage(Ke,0,0,$.width,$.height);let nt=je.getImageData(0,0,$.width,$.height);te.height=$.height,te.width=$.width,Pe(N(nt.data,te))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let Pe,Ge;if(b!==void 0&&b.resizedWidth!==void 0&&b.resizedHeight!==void 0?(Pe=b.resizedHeight,Ge=b.resizedWidth):(Pe=d.height,Ge=d.width),b!==void 0&&(te=b),te.format="RGBA",te.height=Pe,te.width=Ge,b!==void 0){let $=ae();$.width=Ge,$.height=Pe;let je=le($);if(je==null)throw new Error("Can not access image data");je.putImageData(d,0,0),E=je.getImageData(0,0,Ge,Pe).data}else E=d.data}}if(E!==void 0)return N(E,te);throw new Error("Input data provided is not supported - aborted tensor creation")},Z=(d,b)=>{let{width:E,height:G,download:L,dispose:W}=b;return new D({location:"texture",type:"float32",texture:d,dims:[1,G,E,4],download:L,dispose:W})},O=(d,b)=>{let{dataType:E,dims:G,download:L,dispose:W}=b;return new D({location:"gpu-buffer",type:E??"float32",gpuBuffer:d,dims:G,download:L,dispose:W})},Q=(d,b)=>{let{dataType:E,dims:G,download:L,dispose:W}=b;return new D({location:"ml-tensor",type:E??"float32",mlTensor:d,dims:G,download:L,dispose:W})},q=(d,b,E)=>new D({location:"cpu-pinned",type:d,data:b,dims:E??[b.length]})}),Qe=be(()=>{f=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),I=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),e=!1,c=()=>{if(!e){e=!0;let d=typeof BigInt64Array<"u"&&BigInt64Array.from,b=typeof BigUint64Array<"u"&&BigUint64Array.from,E=typeof Float16Array<"u"&&Float16Array.from;d&&(f.set("int64",BigInt64Array),I.set(BigInt64Array,"int64")),b&&(f.set("uint64",BigUint64Array),I.set(BigUint64Array,"uint64")),E?(f.set("float16",Float16Array),I.set(Float16Array,"float16")):f.set("float16",Uint16Array)}}}),ht=be(()=>{wt(),P=d=>{let b=1;for(let E=0;E<d.length;E++){let G=d[E];if(typeof G!="number"||!Number.isSafeInteger(G))throw new TypeError(`dims[${E}] must be an integer, got: ${G}`);if(G<0)throw new RangeError(`dims[${E}] must be a non-negative integer, got: ${G}`);b*=G}return b},J=(d,b)=>{switch(d.location){case"cpu":return new D(d.type,d.data,b);case"cpu-pinned":return new D({location:"cpu-pinned",data:d.data,type:d.type,dims:b});case"texture":return new D({location:"texture",texture:d.texture,type:d.type,dims:b});case"gpu-buffer":return new D({location:"gpu-buffer",gpuBuffer:d.gpuBuffer,type:d.type,dims:b});case"ml-tensor":return new D({location:"ml-tensor",mlTensor:d.mlTensor,type:d.type,dims:b});default:throw new Error(`tensorReshape: tensor location ${d.location} is not supported`)}}}),wt=be(()=>{Re(),Se(),Qe(),ht(),D=class{constructor(d,b,E){let G,L;if(c(),typeof d=="object"&&"location"in d)switch(this.dataLocation=d.location,G=d.type,L=d.dims,d.location){case"cpu-pinned":{let R=f.get(G);if(!R)throw new TypeError(`unsupported type "${G}" to create tensor from pinned buffer`);if(!(d.data instanceof R))throw new TypeError(`buffer should be of type ${R.name}`);this.cpuData=d.data;break}case"texture":if(G!=="float32")throw new TypeError(`unsupported type "${G}" to create tensor from texture`);this.gpuTextureData=d.texture,this.downloader=d.download,this.disposer=d.dispose;break;case"gpu-buffer":if(G!=="float32"&&G!=="float16"&&G!=="int32"&&G!=="int64"&&G!=="uint32"&&G!=="uint8"&&G!=="bool"&&G!=="uint4"&&G!=="int4")throw new TypeError(`unsupported type "${G}" to create tensor from gpu buffer`);this.gpuBufferData=d.gpuBuffer,this.downloader=d.download,this.disposer=d.dispose;break;case"ml-tensor":if(G!=="float32"&&G!=="float16"&&G!=="int32"&&G!=="int64"&&G!=="uint32"&&G!=="uint64"&&G!=="int8"&&G!=="uint8"&&G!=="bool"&&G!=="uint4"&&G!=="int4")throw new TypeError(`unsupported type "${G}" to create tensor from MLTensor`);this.mlTensorData=d.mlTensor,this.downloader=d.download,this.disposer=d.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let R,te;if(typeof d=="string")if(G=d,te=E,d==="string"){if(!Array.isArray(b))throw new TypeError("A string tensor's data must be a string array.");R=b}else{let ae=f.get(d);if(ae===void 0)throw new TypeError(`Unsupported tensor type: ${d}.`);if(Array.isArray(b)){if(d==="float16"&&ae===Uint16Array||d==="uint4"||d==="int4")throw new TypeError(`Creating a ${d} tensor from number array is not supported. Please use ${ae.name} as data.`);R=d==="uint64"||d==="int64"?ae.from(b,BigInt):ae.from(b)}else if(b instanceof ae)R=b;else{if(!(b instanceof Uint8ClampedArray))throw new TypeError(`A ${G} tensor's data must be type of ${ae}`);if(d!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");R=Uint8Array.from(b)}}else if(te=b,Array.isArray(d)){if(d.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let ae=typeof d[0];if(ae==="string")G="string",R=d;else{if(ae!=="boolean")throw new TypeError(`Invalid element type of data array: ${ae}.`);G="bool",R=Uint8Array.from(d)}}else if(d instanceof Uint8ClampedArray)G="uint8",R=Uint8Array.from(d);else{let ae=I.get(d.constructor);if(ae===void 0)throw new TypeError(`Unsupported type for tensor data: ${d.constructor}.`);G=ae,R=d}if(te===void 0)te=[R.length];else if(!Array.isArray(te))throw new TypeError("A tensor's dims must be a number array");L=te,this.cpuData=R,this.dataLocation="cpu"}let W=P(L);if(this.cpuData&&W!==this.cpuData.length&&(G!=="uint4"&&G!=="int4"||Math.ceil(W/2)!==this.cpuData.length))throw new Error(`Tensor's size(${W}) does not match data length(${this.cpuData.length}).`);this.type=G,this.dims=L,this.size=W}static async fromImage(d,b){return V(d,b)}static fromTexture(d,b){return Z(d,b)}static fromGpuBuffer(d,b){return O(d,b)}static fromMLTensor(d,b){return Q(d,b)}static fromPinnedBuffer(d,b,E){return q(d,b,E)}toDataURL(d){return B(this,d)}toImageData(d){return S(this,d)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(d){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let b=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=b,d&&this.disposer&&(this.disposer(),this.disposer=void 0),b}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(d){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return J(this,d)}}}),Bt=be(()=>{wt(),j=D}),Mt=be(()=>{ct(),Ie=(d,b)=>{(typeof v.trace>"u"?!v.wasm.trace:!v.trace)||console.timeStamp(`${d}::ORT::${b}`)},ge=(d,b)=>{var L;let E=((L=new Error().stack)==null?void 0:L.split(/\r\n|\r|\n/g))||[],G=!1;for(let W=0;W<E.length;W++){if(G&&!E[W].includes("TRACE_FUNC")){let R=`FUNC_${d}::${E[W].trim().split(" ")[1]}`;return b&&(R+=`::${b}`),void Ie("CPU",R)}E[W].includes("TRACE_FUNC")&&(G=!0)}},ke=d=>{(typeof v.trace>"u"?!v.wasm.trace:!v.trace)||ge("BEGIN",d)},Ee=d=>{(typeof v.trace>"u"?!v.wasm.trace:!v.trace)||ge("END",d)}}),oe=be(()=>{lt(),Bt(),Mt(),Ne=class Wk{constructor(b){this.handler=b}async run(b,E,G){ke();let L={},W={};if(typeof b!="object"||b===null||b instanceof j||Array.isArray(b))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let R=!0;if(typeof E=="object"){if(E===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(E instanceof j)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(E)){if(E.length===0)throw new TypeError("'fetches' cannot be an empty array.");R=!1;for(let le of E){if(typeof le!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(le)===-1)throw new RangeError(`'fetches' contains invalid output name: ${le}.`);L[le]=null}if(typeof G=="object"&&G!==null)W=G;else if(typeof G<"u")throw new TypeError("'options' must be an object.")}else{let le=!1,Pe=Object.getOwnPropertyNames(E);for(let Ge of this.outputNames)if(Pe.indexOf(Ge)!==-1){let $=E[Ge];($===null||$ instanceof j)&&(le=!0,R=!1,L[Ge]=$)}if(le){if(typeof G=="object"&&G!==null)W=G;else if(typeof G<"u")throw new TypeError("'options' must be an object.")}else W=E}}else if(typeof E<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let le of this.inputNames)if(typeof b[le]>"u")throw new Error(`input '${le}' is missing in 'feeds'.`);if(R)for(let le of this.outputNames)L[le]=null;let te=await this.handler.run(b,L,W),ae={};for(let le in te)if(Object.hasOwnProperty.call(te,le)){let Pe=te[le];ae[le]=Pe instanceof j?Pe:new j(Pe.type,Pe.data,Pe.dims)}return Ee(),ae}async release(){return this.handler.dispose()}static async create(b,E,G,L){ke();let W,R={};if(typeof b=="string"){if(W=b,typeof E=="object"&&E!==null)R=E;else if(typeof E<"u")throw new TypeError("'options' must be an object.")}else if(b instanceof Uint8Array){if(W=b,typeof E=="object"&&E!==null)R=E;else if(typeof E<"u")throw new TypeError("'options' must be an object.")}else{if(!(b instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&b instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let Pe=b,Ge=0,$=b.byteLength;if(typeof E=="object"&&E!==null)R=E;else if(typeof E=="number"){if(Ge=E,!Number.isSafeInteger(Ge))throw new RangeError("'byteOffset' must be an integer.");if(Ge<0||Ge>=Pe.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${Pe.byteLength}).`);if($=b.byteLength-Ge,typeof G=="number"){if($=G,!Number.isSafeInteger($))throw new RangeError("'byteLength' must be an integer.");if($<=0||Ge+$>Pe.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${Pe.byteLength-Ge}].`);if(typeof L=="object"&&L!==null)R=L;else if(typeof L<"u")throw new TypeError("'options' must be an object.")}else if(typeof G<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof E<"u")throw new TypeError("'options' must be an object.");W=new Uint8Array(Pe,Ge,$)}}let[te,ae]=await y(R),le=await te.createInferenceSessionHandler(W,ae);return Ee(),new Wk(le)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),zt=be(()=>{oe(),Xe=Ne}),ve=be(()=>{}),H=be(()=>{}),ce=be(()=>{}),ne=be(()=>{}),ze={};Ye(ze,{InferenceSession:()=>Xe,TRACE:()=>Ie,TRACE_FUNC_BEGIN:()=>ke,TRACE_FUNC_END:()=>Ee,Tensor:()=>j,env:()=>M,registerBackend:()=>h});var $e=be(()=>{ft(),He(),zt(),Bt(),ve(),H(),Mt(),ce(),ne()}),gt=be(()=>{}),It={};Ye(It,{default:()=>Vt});var Nt,_t,Vt,Xt=be(()=>{var d;si(),FA(),Tc(),Nt="ort-wasm-proxy-worker",(_t=((d=globalThis.self)==null?void 0:d.name)===Nt)&&(self.onmessage=b=>{let{type:E,in:G}=b.data;try{switch(E){case"init-wasm":Br(G.wasm).then(()=>{on(G).then(()=>{postMessage({type:E})},L=>{postMessage({type:E,err:L})})},L=>{postMessage({type:E,err:L})});break;case"init-ep":{let{epName:L,env:W}=G;ss(W,L).then(()=>{postMessage({type:E})},R=>{postMessage({type:E,err:R})});break}case"copy-from":{let{buffer:L}=G,W=kn(L);postMessage({type:E,out:W});break}case"create":{let{model:L,options:W}=G;oi(L,W).then(R=>{postMessage({type:E,out:R})},R=>{postMessage({type:E,err:R})});break}case"release":zA(G),postMessage({type:E});break;case"run":{let{sessionId:L,inputIndices:W,inputs:R,outputIndices:te,options:ae}=G;m0(L,W,R,te,new Array(te.length).fill(null),ae).then(le=>{le.some(Pe=>Pe[3]!=="cpu")?postMessage({type:E,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:E,out:le},se([...R,...le]))},le=>{postMessage({type:E,err:le})});break}case"end-profiling":bd(G),postMessage({type:E})}}catch(L){postMessage({type:E,err:L})}}),Vt=_t?null:b=>new Worker(b??Ks,{type:"module",name:Nt})}),Jt={};Ye(Jt,{default:()=>$s});var wr,Rr,$s,os,Ks,ts,zn,Va,Wa,Pr,Sr,Kt,Bs,$a,en,On,Pn,Dn,qn,sa,Zt,Br,zr,qs,aa,ks,vn,Qn,Sn,ci,ui,di,Fa,ai,fi,Ri,Xn,Zn,ba,Gi,Fi,Jn,gi,tn,Ei,pi,Jr,Cs,bn,Nn,zi,Bi,rn,Ln,Qt,Be,ot,bt,Tt,Pt,st,pe,he,qe,it,kt,Ht,ir,fr,nr,Yt,Ar,Wr,xs,Ys,as,kr,Ns,qt,Tr,ha,xa,Gs,Fs,Ls,Ms,fa,Ba,Ma,Ca,na,za,Hr,la,Rn,Mo,ol,RA,Al,hi,uo,ll,fo,ni,dn,Qr,$n,jA,Eo,VA,WA,cl,oA,Kl,ii,ca,Ro,go,jn,po,ji,AA,lA,ao,UA,jo,Vo,mr,Ti,vr,cA,HA,Vn,mi,no,ho,YA,Xa,ul,dl,io,oo,fl,uA,Bo,_r,ei,dA,To,Yi,Wo,Uo,KA,Ho,fA,qA,Za,gA,gl,ds,zs,pA,bi,gr,xn,Vi,fn,Pi,Ci,mo,hA,Yo,Pa,Po,Ko,gn,bo,fs,Ao,mA,Is,Co,ls,qo,bA,CA,wA,Oi,Xo,Ua,Zo,Jo,Do,Wn,So,IA,wi,yA,$o,eA,wo,kA,_A,XA,Cn,Io,Mn,vA,Go,Ii,wa,xA,Ki,lo,ZA,MA,tA,JA,qi,yi,EA,Fo,sn,ua,yo,BA,Xi,Zi,Ji,TA,En,PA,DA,ko,zo,wn,SA,GA,_o,pl,Oo,rs,t,r,s,n,A,l,g,m,w,T,x,F,U,ee,Ae,Ce,Me,We,Ze,ut,mt,xt,St,Rt,sr,br,Ir,jr,Ur,As,Ds,ea,da,ma,Ia,Na,La,Ja,an,In,z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea,ti,rA,Yc,Kc,qc,D0,S0,Xc,G0,F0,Zc,Jc,$c,a0,z0,eu,tu,O0,ru,su,Q0,au,sA,Qo,hl,ml,N0,nu,L0,iu,ou,R0,Au,lu,j0,Qi,cu,V0,n0,uu,El,$A,du,fu,gu,W0,i0,pu,hu,mu,bu,ql,U0,H0,Cu,Bl,wu,Iu,el,yu,o0,ku,_u,Y0,jd,vu,xu,Mu,tl,Eu,Bu,Tu,Xl,Pu,Du,Su,bl,A0,K0,q0,X0,Vd,Gu,l0,Z0,Tl,J0,$0,Fu,ec,tc,zu,c0,u0,Wd,Ou,Qu,rc,d0,Ud,sc,Nu,ac,nc,Lu,ic,oc,Ru,Ac,f0,Hd,lc,cc,ju,uc,Zl,Yd,Vu,g0,dc,Wu,fc,gc,Uu,Hu,pc,Kd,qd,hc,p0,Yu,mc,Ku,Cl,bc,Cc,qu,ya,Xd,Zd,Jd,Jl,Xu,Zu,wc,Ju,Ic,yc,$d,$u,ed,kc,td,ef,rd,_c,sd,ad,nd,id,$l,od,vc,xc,Mc,Ad,Ec,Bc,ld,cd,tf=be(()=>{var d;wr=self.location.href,Rr=async function(b={}){function E(){return tr.buffer!=qr.buffer&&An(),qr}function G(){return tr.buffer!=qr.buffer&&An(),Ta}function L(){return tr.buffer!=qr.buffer&&An(),vi}function W(){return tr.buffer!=qr.buffer&&An(),vo}function R(){return tr.buffer!=qr.buffer&&An(),b0}function te(){return tr.buffer!=qr.buffer&&An(),Oc}function ae(){return tr.buffer!=qr.buffer&&An(),pf}function le(){return tr.buffer!=qr.buffer&&An(),w0}var Pe,Ge,$=Object.assign({},b),je=new Promise((Y,de)=>{Pe=Y,Ge=de}),Ke=typeof window=="object",nt=typeof importScripts=="function",tt=nt&&self.name=="em-pthread";$.mountExternalData=(Y,de)=>{Y.startsWith("./")&&(Y=Y.substring(2)),($.Fb||($.Fb=new Map)).set(Y,de)},$.unmountExternalData=()=>{delete $.Fb};var dt=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Ct=()=>{let Y=(De,Ve,rt)=>(...Dt)=>{let dr=k0,Cr=Ve==null?void 0:Ve();Dt=De(...Dt);let Xr=Ve==null?void 0:Ve();return Cr!==Xr&&(De=Xr,rt(Cr),Ve=rt=null),k0!=dr?new Promise((es,Ps)=>{_1={resolve:es,reject:Ps}}):Dt},de=De=>async(...Ve)=>{var rt;try{if($.Gb)throw Error("Session already started");let Dt=$.Gb={hc:Ve[0],errors:[]},dr=await De(...Ve);if($.Gb!==Dt)throw Error("Session mismatch");(rt=$.Hb)==null||rt.flush();let Cr=Dt.errors;if(0<Cr.length){let Xr=await Promise.all(Cr);if(Xr=Xr.filter(es=>es),0<Xr.length)throw Error(Xr.join(`
`))}return dr}finally{$.Gb=null}};$._OrtCreateSession=Y($._OrtCreateSession,()=>$._OrtCreateSession,De=>$._OrtCreateSession=De),$._OrtRun=de(Y($._OrtRun,()=>$._OrtRun,De=>$._OrtRun=De)),$._OrtRunWithBinding=de(Y($._OrtRunWithBinding,()=>$._OrtRunWithBinding,De=>$._OrtRunWithBinding=De)),$._OrtBindInput=Y($._OrtBindInput,()=>$._OrtBindInput,De=>$._OrtBindInput=De),Ct=void 0};$.jsepInit=(Y,de)=>{if(Ct==null||Ct(),Y==="webgpu"){[$.Hb,$.Vb,$.Zb,$.Ob,$.Yb,$.kb,$.$b,$.cc,$.Wb,$.Xb,$.ac]=de;let De=$.Hb;$.jsepRegisterBuffer=(Ve,rt,Dt,dr)=>De.registerBuffer(Ve,rt,Dt,dr),$.jsepGetBuffer=Ve=>De.getBuffer(Ve),$.jsepCreateDownloader=(Ve,rt,Dt)=>De.createDownloader(Ve,rt,Dt),$.jsepOnCreateSession=Ve=>{De.onCreateSession(Ve)},$.jsepOnReleaseSession=Ve=>{De.onReleaseSession(Ve)},$.jsepOnRunStart=Ve=>De.onRunStart(Ve),$.dc=(Ve,rt)=>{De.upload(Ve,rt)}}else if(Y==="webnn"){[$.Hb,$.bc,$.Pb,$.jsepEnsureTensor,$.ec,$.jsepDownloadTensor]=de,$.jsepReleaseTensorId=$.Pb;let De=$.Hb;$.jsepOnRunStart=Ve=>De.onRunStart(Ve),$.jsepRegisterMLContext=(Ve,rt)=>{De.registerMLContext(Ve,rt)},$.jsepOnReleaseSession=Ve=>{De.onReleaseSession(Ve)},$.jsepCreateMLTensorDownloader=(Ve,rt)=>De.createMLTensorDownloader(Ve,rt),$.jsepRegisterMLTensor=(Ve,rt,Dt)=>De.registerMLTensor(Ve,rt,Dt),$.jsepCreateMLContext=Ve=>De.createMLContext(Ve),$.jsepRegisterMLConstant=(Ve,rt,Dt,dr,Cr)=>De.registerMLConstant(Ve,rt,Dt,dr,Cr,$.Fb)}};var Et,Ot,Ft=Object.assign({},$),Lt=(Y,de)=>{throw de},yr="";(Ke||nt)&&(nt?yr=self.location.href:typeof document<"u"&&document.currentScript&&(yr=document.currentScript.src),wr&&(yr=wr),yr=yr.startsWith("blob:")?"":yr.substr(0,yr.replace(/[?#].*/,"").lastIndexOf("/")+1),nt&&(Ot=Y=>{var de=new XMLHttpRequest;return de.open("GET",Y,!1),de.responseType="arraybuffer",de.send(null),new Uint8Array(de.response)}),Et=(Y,de,De)=>{var Ve=new XMLHttpRequest;Ve.open("GET",Y,!0),Ve.responseType="arraybuffer",Ve.onload=()=>{Ve.status==200||Ve.status==0&&Ve.response?de(Ve.response):De()},Ve.onerror=De,Ve.send(null)});var Or,gs=console.log.bind(console),ps=console.error.bind(console),pa=gs,hs=ps;if(Object.assign($,Ft),Ft=null,tt){let Y=function(de){try{var De=de.data,Ve=De.cmd;if(Ve==="load"){let rt=[];self.onmessage=Dt=>rt.push(Dt),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let Dt of rt)Y(Dt);self.onmessage=Y};for(let Dt of De.handlers)$[Dt]&&!$[Dt].proxy||($[Dt]=(...dr)=>{postMessage({Nb:"callHandler",pc:Dt,args:dr})},Dt=="print"&&(pa=$[Dt]),Dt=="printErr"&&(hs=$[Dt]));tr=De.wasmMemory,An(),Vs(De.wasmModule)}else if(Ve==="run"){E1(De.pthread_ptr,0,0,1,0,0),y1(De.pthread_ptr),aM(),Fy(),Ss||(Dk(),Ss=!0);try{nM(De.start_routine,De.arg)}catch(rt){if(rt!="unwind")throw rt}}else Ve==="cancel"?Rf()&&ag(-1):De.target!=="setimmediate"&&(Ve==="checkMailbox"?Ss&&K2():Ve&&(hs(`worker: received unknown command ${Ve}`),hs(De)))}catch(rt){throw Sk(),rt}};var Vs,Ss=!1;hs=function(...de){de=de.join(" "),console.error(de)},self.alert=function(...de){postMessage({Nb:"alert",text:de.join(" "),rc:Rf()})},$.instantiateWasm=(de,De)=>new Promise(Ve=>{Vs=rt=>{rt=new WebAssembly.Instance(rt,Ty()),De(rt),Ve()}}),self.onunhandledrejection=de=>{throw de.reason||de},self.onmessage=Y}$.wasmBinary&&(Or=$.wasmBinary);var tr,$r,Yr,qr,Ta,vi,vo,b0,Oc,pf,Sl,C0,w0,Gl=!1;function An(){var Y=tr.buffer;$.HEAP8=qr=new Int8Array(Y),$.HEAP16=vi=new Int16Array(Y),$.HEAPU8=Ta=new Uint8Array(Y),$.HEAPU16=vo=new Uint16Array(Y),$.HEAP32=b0=new Int32Array(Y),$.HEAPU32=Oc=new Uint32Array(Y),$.HEAPF32=pf=new Float32Array(Y),$.HEAPF64=w0=new Float64Array(Y),$.HEAP64=Sl=new BigInt64Array(Y),$.HEAPU64=C0=new BigUint64Array(Y)}if(!tt){if(!((tr=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof dt))throw hs("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");An()}var QA=[],Qc=[],l1=[],hf=0,l2=null;function vy(){if(--hf==0&&l2){var Y=l2;l2=null,Y()}}function wd(Y){throw hs(Y="Aborted("+Y+")"),Gl=!0,Yr=1,Y=new WebAssembly.RuntimeError(Y+". Build with -sASSERTIONS for more info."),Ge(Y),Y}var c1,xy=Y=>Y.startsWith("data:application/octet-stream;base64,"),My=Y=>Y.startsWith("file://");function Ey(Y){if(Y==c1&&Or)return new Uint8Array(Or);if(Ot)return Ot(Y);throw"both async and sync fetching of the wasm failed"}function By(Y,de,De){return function(Ve){if(!Or&&(Ke||nt)){if(typeof fetch=="function"&&!My(Ve))return fetch(Ve,{credentials:"same-origin"}).then(rt=>{if(!rt.ok)throw`failed to load wasm binary file at '${Ve}'`;return rt.arrayBuffer()}).catch(()=>Ey(Ve));if(Et)return new Promise((rt,Dt)=>{Et(Ve,dr=>rt(new Uint8Array(dr)),Dt)})}return Promise.resolve().then(()=>Ey(Ve))}(Y).then(Ve=>WebAssembly.instantiate(Ve,de)).then(De,Ve=>{hs(`failed to asynchronously prepare wasm: ${Ve}`),wd(Ve)})}function Ty(){return{a:{O:sM,Aa:rM,b:oM,aa:Ny,B:jy,qa:Vy,Y:Uy,_:Hy,ra:Yy,oa:Ky,ha:qy,na:Xy,L:Zy,Z:Jy,W:$y,pa:ek,X:tk,va:AM,F:lM,Q:cM,P:dM,E:gM,u:pM,q:hM,G:mM,A:_M,R:vM,ua:xM,ka:MM,U:EM,ba:BM,H:TM,ja:y1,ta:PM,t:DM,Ba:SM,x:zM,o:OM,m:NM,c:w1,n:LM,k:VM,w:WM,p:UM,f:HM,s:YM,l:KM,e:qM,j:XM,i:ZM,g:JM,d:$M,ea:e5,fa:t5,ga:r5,ca:pk,da:hk,T:s5,h:a5,D:n5,I:i5,M:o5,y:A5,sa:l5,V:c5,v:bk,z:u5,N:d5,S:f5,za:g5,ya:p5,la:Ik,ma:yk,$:p1,C:kk,K:_k,ia:vk,J:xk,a:tr,xa:g1,wa:Bk,r:b5}}}var u1={916868:(Y,de,De,Ve,rt)=>{if($===void 0||!$.Fb)return 1;if((Y=Li(Number(Y>>>0))).startsWith("./")&&(Y=Y.substring(2)),!(Y=$.Fb.get(Y)))return 2;if(de=Number(de>>>0),De=Number(De>>>0),Ve=Number(Ve>>>0),de+De>Y.byteLength)return 3;try{let Dt=Y.subarray(de,de+De);switch(rt){case 0:G().set(Dt,Ve>>>0);break;case 1:$.dc(Ve,Dt);break;default:return 4}return 0}catch{return 4}},917583:(Y,de,De)=>{$.ec(Y,G().subarray(de>>>0,de+De>>>0))},917646:()=>$.bc(),917687:Y=>{$.Pb(Y)},917723:()=>{$.Wb()},917754:()=>{$.Xb()},917783:()=>{$.ac()},917808:Y=>$.Vb(Y),917841:Y=>$.Zb(Y),917873:(Y,de,De)=>{$.Ob(Number(Y),Number(de),Number(De),!0)},917936:(Y,de,De)=>{$.Ob(Number(Y),Number(de),Number(De))},917993:()=>typeof wasmOffsetConverter<"u",918050:Y=>{$.kb("Abs",Y,void 0)},918101:Y=>{$.kb("Neg",Y,void 0)},918152:Y=>{$.kb("Floor",Y,void 0)},918205:Y=>{$.kb("Ceil",Y,void 0)},918257:Y=>{$.kb("Reciprocal",Y,void 0)},918315:Y=>{$.kb("Sqrt",Y,void 0)},918367:Y=>{$.kb("Exp",Y,void 0)},918418:Y=>{$.kb("Erf",Y,void 0)},918469:Y=>{$.kb("Sigmoid",Y,void 0)},918524:(Y,de,De)=>{$.kb("HardSigmoid",Y,{alpha:de,beta:De})},918603:Y=>{$.kb("Log",Y,void 0)},918654:Y=>{$.kb("Sin",Y,void 0)},918705:Y=>{$.kb("Cos",Y,void 0)},918756:Y=>{$.kb("Tan",Y,void 0)},918807:Y=>{$.kb("Asin",Y,void 0)},918859:Y=>{$.kb("Acos",Y,void 0)},918911:Y=>{$.kb("Atan",Y,void 0)},918963:Y=>{$.kb("Sinh",Y,void 0)},919015:Y=>{$.kb("Cosh",Y,void 0)},919067:Y=>{$.kb("Asinh",Y,void 0)},919120:Y=>{$.kb("Acosh",Y,void 0)},919173:Y=>{$.kb("Atanh",Y,void 0)},919226:Y=>{$.kb("Tanh",Y,void 0)},919278:Y=>{$.kb("Not",Y,void 0)},919329:(Y,de,De)=>{$.kb("Clip",Y,{min:de,max:De})},919398:Y=>{$.kb("Clip",Y,void 0)},919450:(Y,de)=>{$.kb("Elu",Y,{alpha:de})},919508:Y=>{$.kb("Gelu",Y,void 0)},919560:Y=>{$.kb("Relu",Y,void 0)},919612:(Y,de)=>{$.kb("LeakyRelu",Y,{alpha:de})},919676:(Y,de)=>{$.kb("ThresholdedRelu",Y,{alpha:de})},919746:(Y,de)=>{$.kb("Cast",Y,{to:de})},919804:Y=>{$.kb("Add",Y,void 0)},919855:Y=>{$.kb("Sub",Y,void 0)},919906:Y=>{$.kb("Mul",Y,void 0)},919957:Y=>{$.kb("Div",Y,void 0)},920008:Y=>{$.kb("Pow",Y,void 0)},920059:Y=>{$.kb("Equal",Y,void 0)},920112:Y=>{$.kb("Greater",Y,void 0)},920167:Y=>{$.kb("GreaterOrEqual",Y,void 0)},920229:Y=>{$.kb("Less",Y,void 0)},920281:Y=>{$.kb("LessOrEqual",Y,void 0)},920340:(Y,de,De,Ve,rt)=>{$.kb("ReduceMean",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},920515:(Y,de,De,Ve,rt)=>{$.kb("ReduceMax",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},920689:(Y,de,De,Ve,rt)=>{$.kb("ReduceMin",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},920863:(Y,de,De,Ve,rt)=>{$.kb("ReduceProd",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},921038:(Y,de,De,Ve,rt)=>{$.kb("ReduceSum",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},921212:(Y,de,De,Ve,rt)=>{$.kb("ReduceL1",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},921385:(Y,de,De,Ve,rt)=>{$.kb("ReduceL2",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},921558:(Y,de,De,Ve,rt)=>{$.kb("ReduceLogSum",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},921735:(Y,de,De,Ve,rt)=>{$.kb("ReduceSumSquare",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},921915:(Y,de,De,Ve,rt)=>{$.kb("ReduceLogSumExp",Y,{keepDims:!!de,noopWithEmptyAxes:!!De,axes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},922095:Y=>{$.kb("Where",Y,void 0)},922148:(Y,de,De)=>{$.kb("Transpose",Y,{perm:de?Array.from(R().subarray(Number(de)>>>0,Number(De)>>>0)):[]})},922272:(Y,de,De,Ve)=>{$.kb("DepthToSpace",Y,{blocksize:de,mode:Li(De),format:Ve?"NHWC":"NCHW"})},922405:(Y,de,De,Ve)=>{$.kb("DepthToSpace",Y,{blocksize:de,mode:Li(De),format:Ve?"NHWC":"NCHW"})},922538:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or,Oa)=>{$.kb("ConvTranspose",Y,{format:Xr?"NHWC":"NCHW",autoPad:de,dilations:[De],group:Ve,kernelShape:[rt],pads:[Dt,dr],strides:[Cr],wIsConst:()=>!!E()[es>>>0],outputPadding:Ps?Array.from(R().subarray(Number(Ps)>>>0,Number(Sa)>>>0)):[],outputShape:ln?Array.from(R().subarray(Number(ln)>>>0,Number(or)>>>0)):[],activation:Li(Oa)})},922971:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or)=>{$.kb("ConvTranspose",Y,{format:Cr?"NHWC":"NCHW",autoPad:de,dilations:Array.from(R().subarray(Number(De)>>>0,2+(Number(De)>>>0)>>>0)),group:Ve,kernelShape:Array.from(R().subarray(Number(rt)>>>0,2+(Number(rt)>>>0)>>>0)),pads:Array.from(R().subarray(Number(Dt)>>>0,4+(Number(Dt)>>>0)>>>0)),strides:Array.from(R().subarray(Number(dr)>>>0,2+(Number(dr)>>>0)>>>0)),wIsConst:()=>!!E()[Xr>>>0],outputPadding:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],outputShape:Sa?Array.from(R().subarray(Number(Sa)>>>0,Number(ln)>>>0)):[],activation:Li(or)})},923632:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or,Oa)=>{$.kb("ConvTranspose",Y,{format:Xr?"NHWC":"NCHW",autoPad:de,dilations:[De],group:Ve,kernelShape:[rt],pads:[Dt,dr],strides:[Cr],wIsConst:()=>!!E()[es>>>0],outputPadding:Ps?Array.from(R().subarray(Number(Ps)>>>0,Number(Sa)>>>0)):[],outputShape:ln?Array.from(R().subarray(Number(ln)>>>0,Number(or)>>>0)):[],activation:Li(Oa)})},924065:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or)=>{$.kb("ConvTranspose",Y,{format:Cr?"NHWC":"NCHW",autoPad:de,dilations:Array.from(R().subarray(Number(De)>>>0,2+(Number(De)>>>0)>>>0)),group:Ve,kernelShape:Array.from(R().subarray(Number(rt)>>>0,2+(Number(rt)>>>0)>>>0)),pads:Array.from(R().subarray(Number(Dt)>>>0,4+(Number(Dt)>>>0)>>>0)),strides:Array.from(R().subarray(Number(dr)>>>0,2+(Number(dr)>>>0)>>>0)),wIsConst:()=>!!E()[Xr>>>0],outputPadding:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],outputShape:Sa?Array.from(R().subarray(Number(Sa)>>>0,Number(ln)>>>0)):[],activation:Li(or)})},924726:(Y,de)=>{$.kb("GlobalAveragePool",Y,{format:de?"NHWC":"NCHW"})},924817:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or)=>{$.kb("AveragePool",Y,{format:or?"NHWC":"NCHW",auto_pad:de,ceil_mode:De,count_include_pad:Ve,storage_order:rt,dilations:Dt?Array.from(R().subarray(Number(Dt)>>>0,Number(dr)>>>0)):[],kernel_shape:Cr?Array.from(R().subarray(Number(Cr)>>>0,Number(Xr)>>>0)):[],pads:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],strides:Sa?Array.from(R().subarray(Number(Sa)>>>0,Number(ln)>>>0)):[]})},925296:(Y,de)=>{$.kb("GlobalAveragePool",Y,{format:de?"NHWC":"NCHW"})},925387:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or)=>{$.kb("AveragePool",Y,{format:or?"NHWC":"NCHW",auto_pad:de,ceil_mode:De,count_include_pad:Ve,storage_order:rt,dilations:Dt?Array.from(R().subarray(Number(Dt)>>>0,Number(dr)>>>0)):[],kernel_shape:Cr?Array.from(R().subarray(Number(Cr)>>>0,Number(Xr)>>>0)):[],pads:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],strides:Sa?Array.from(R().subarray(Number(Sa)>>>0,Number(ln)>>>0)):[]})},925866:(Y,de)=>{$.kb("GlobalMaxPool",Y,{format:de?"NHWC":"NCHW"})},925953:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or)=>{$.kb("MaxPool",Y,{format:or?"NHWC":"NCHW",auto_pad:de,ceil_mode:De,count_include_pad:Ve,storage_order:rt,dilations:Dt?Array.from(R().subarray(Number(Dt)>>>0,Number(dr)>>>0)):[],kernel_shape:Cr?Array.from(R().subarray(Number(Cr)>>>0,Number(Xr)>>>0)):[],pads:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],strides:Sa?Array.from(R().subarray(Number(Sa)>>>0,Number(ln)>>>0)):[]})},926428:(Y,de)=>{$.kb("GlobalMaxPool",Y,{format:de?"NHWC":"NCHW"})},926515:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or)=>{$.kb("MaxPool",Y,{format:or?"NHWC":"NCHW",auto_pad:de,ceil_mode:De,count_include_pad:Ve,storage_order:rt,dilations:Dt?Array.from(R().subarray(Number(Dt)>>>0,Number(dr)>>>0)):[],kernel_shape:Cr?Array.from(R().subarray(Number(Cr)>>>0,Number(Xr)>>>0)):[],pads:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],strides:Sa?Array.from(R().subarray(Number(Sa)>>>0,Number(ln)>>>0)):[]})},926990:(Y,de,De,Ve,rt)=>{$.kb("Gemm",Y,{alpha:de,beta:De,transA:Ve,transB:rt})},927094:Y=>{$.kb("MatMul",Y,void 0)},927148:(Y,de,De,Ve)=>{$.kb("ArgMax",Y,{keepDims:!!de,selectLastIndex:!!De,axis:Ve})},927256:(Y,de,De,Ve)=>{$.kb("ArgMin",Y,{keepDims:!!de,selectLastIndex:!!De,axis:Ve})},927364:(Y,de)=>{$.kb("Softmax",Y,{axis:de})},927427:(Y,de)=>{$.kb("Concat",Y,{axis:de})},927487:(Y,de,De,Ve,rt)=>{$.kb("Split",Y,{axis:de,numOutputs:De,splitSizes:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},927643:Y=>{$.kb("Expand",Y,void 0)},927697:(Y,de)=>{$.kb("Gather",Y,{axis:Number(de)})},927768:(Y,de)=>{$.kb("GatherElements",Y,{axis:Number(de)})},927847:(Y,de)=>{$.kb("GatherND",Y,{batch_dims:Number(de)})},927926:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps)=>{$.kb("Resize",Y,{antialias:de,axes:De?Array.from(R().subarray(Number(De)>>>0,Number(Ve)>>>0)):[],coordinateTransformMode:Li(rt),cubicCoeffA:Dt,excludeOutside:dr,extrapolationValue:Cr,keepAspectRatioPolicy:Li(Xr),mode:Li(es),nearestMode:Li(Ps)})},928288:(Y,de,De,Ve,rt,Dt,dr)=>{$.kb("Slice",Y,{starts:de?Array.from(R().subarray(Number(de)>>>0,Number(De)>>>0)):[],ends:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[],axes:Dt?Array.from(R().subarray(Number(Dt)>>>0,Number(dr)>>>0)):[]})},928552:Y=>{$.kb("Tile",Y,void 0)},928604:(Y,de,De)=>{$.kb("InstanceNormalization",Y,{epsilon:de,format:De?"NHWC":"NCHW"})},928718:(Y,de,De)=>{$.kb("InstanceNormalization",Y,{epsilon:de,format:De?"NHWC":"NCHW"})},928832:Y=>{$.kb("Range",Y,void 0)},928885:(Y,de)=>{$.kb("Einsum",Y,{equation:Li(de)})},928966:(Y,de,De,Ve,rt)=>{$.kb("Pad",Y,{mode:de,value:De,pads:Ve?Array.from(R().subarray(Number(Ve)>>>0,Number(rt)>>>0)):[]})},929109:(Y,de,De,Ve,rt,Dt)=>{$.kb("BatchNormalization",Y,{epsilon:de,momentum:De,spatial:!!rt,trainingMode:!!Ve,format:Dt?"NHWC":"NCHW"})},929278:(Y,de,De,Ve,rt,Dt)=>{$.kb("BatchNormalization",Y,{epsilon:de,momentum:De,spatial:!!rt,trainingMode:!!Ve,format:Dt?"NHWC":"NCHW"})},929447:(Y,de,De)=>{$.kb("CumSum",Y,{exclusive:Number(de),reverse:Number(De)})},929544:(Y,de,De)=>{$.kb("DequantizeLinear",Y,{axis:de,blockSize:De})},929634:(Y,de,De,Ve,rt)=>{$.kb("GridSample",Y,{align_corners:de,mode:Li(De),padding_mode:Li(Ve),format:rt?"NHWC":"NCHW"})},929804:(Y,de,De,Ve,rt)=>{$.kb("GridSample",Y,{align_corners:de,mode:Li(De),padding_mode:Li(Ve),format:rt?"NHWC":"NCHW"})},929974:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr)=>{$.kb("Attention",Y,{numHeads:de,isUnidirectional:De,maskFilterValue:Ve,scale:rt,doRotary:Dt,qkvHiddenSizes:dr?Array.from(R().subarray(Number(Cr)>>>0,Number(Cr)+dr>>>0)):[],pastPresentShareBuffer:!!Xr})},930246:Y=>{$.kb("BiasAdd",Y,void 0)},930301:Y=>{$.kb("BiasSplitGelu",Y,void 0)},930362:Y=>{$.kb("FastGelu",Y,void 0)},930418:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es,Ps,Sa,ln,or,Oa,Di)=>{$.kb("Conv",Y,{format:Sa?"NHWC":"NCHW",auto_pad:de,dilations:De?Array.from(R().subarray(Number(De)>>>0,Number(Ve)>>>0)):[],group:rt,kernel_shape:Dt?Array.from(R().subarray(Number(Dt)>>>0,Number(dr)>>>0)):[],pads:Cr?Array.from(R().subarray(Number(Cr)>>>0,Number(Xr)>>>0)):[],strides:es?Array.from(R().subarray(Number(es)>>>0,Number(Ps)>>>0)):[],w_is_const:()=>!!E()[Number(ln)>>>0],activation:Li(or),activation_params:Oa?Array.from(ae().subarray(Number(Oa)>>>0,Number(Di)>>>0)):[]})},931002:Y=>{$.kb("Gelu",Y,void 0)},931054:(Y,de,De,Ve,rt,Dt,dr,Cr,Xr)=>{$.kb("GroupQueryAttention",Y,{numHeads:de,kvNumHeads:De,scale:Ve,softcap:rt,doRotary:Dt,rotaryInterleaved:dr,smoothSoftmax:Cr,localWindowSize:Xr})},931271:(Y,de,De,Ve)=>{$.kb("LayerNormalization",Y,{axis:de,epsilon:De,simplified:!!Ve})},931382:(Y,de,De,Ve)=>{$.kb("LayerNormalization",Y,{axis:de,epsilon:De,simplified:!!Ve})},931493:(Y,de,De,Ve,rt,Dt)=>{$.kb("MatMulNBits",Y,{k:de,n:De,accuracyLevel:Ve,bits:rt,blockSize:Dt})},931620:(Y,de,De,Ve,rt,Dt)=>{$.kb("MultiHeadAttention",Y,{numHeads:de,isUnidirectional:De,maskFilterValue:Ve,scale:rt,doRotary:Dt})},931779:(Y,de)=>{$.kb("QuickGelu",Y,{alpha:de})},931843:(Y,de,De,Ve,rt)=>{$.kb("RotaryEmbedding",Y,{interleaved:!!de,numHeads:De,rotaryEmbeddingDim:Ve,scale:rt})},931982:(Y,de,De)=>{$.kb("SkipLayerNormalization",Y,{epsilon:de,simplified:!!De})},932084:(Y,de,De)=>{$.kb("SkipLayerNormalization",Y,{epsilon:de,simplified:!!De})},932186:(Y,de,De,Ve)=>{$.kb("GatherBlockQuantized",Y,{gatherAxis:de,quantizeAxis:De,blockSize:Ve})},932307:Y=>{$.$b(Y)},932341:(Y,de)=>$.cc(Number(Y),Number(de),$.Gb.hc,$.Gb.errors)};function rM(Y,de,De){return ck(async()=>{await $.Yb(Number(Y),Number(de),Number(De))})}function sM(){return typeof wasmOffsetConverter<"u"}function d1(Y){this.name="ExitStatus",this.message=`Program terminated with exit(${Y})`,this.status=Y}var f1=Y=>{Y.terminate(),Y.onmessage=()=>{}},Py=Y=>{Id.length==0&&(Oy(),zy(Id[0]));var de=Id.pop();if(!de)return 6;bf.push(de),I0[Y.Bb]=de,de.Bb=Y.Bb;var De={cmd:"run",start_routine:Y.ic,arg:Y.Rb,pthread_ptr:Y.Bb};return de.postMessage(De,Y.nc),0},mf=0,xi=(Y,de,...De)=>{for(var Ve=2*De.length,rt=P1(),Dt=T1(8*Ve),dr=Dt>>>3,Cr=0;Cr<De.length;Cr++){var Xr=De[Cr];typeof Xr=="bigint"?(Sl[dr+2*Cr]=1n,Sl[dr+2*Cr+1]=Xr):(Sl[dr+2*Cr]=0n,le()[dr+2*Cr+1>>>0]=Xr)}return Y=Gk(Y,0,Ve,Dt,de),ng(rt),Y};function g1(Y){if(tt)return xi(0,1,Y);if(Yr=Y,!(0<mf)){for(var de of bf)f1(de);for(de of Id)f1(de);Id=[],bf=[],I0=[],Gl=!0}Lt(0,new d1(Y))}function Dy(Y){if(tt)return xi(1,0,Y);p1(Y)}var p1=Y=>{if(Yr=Y,tt)throw Dy(Y),"unwind";g1(Y)},Id=[],bf=[],Sy=[],I0={},Gy=Y=>{var de=Y.Bb;delete I0[de],Id.push(Y),bf.splice(bf.indexOf(Y),1),Y.Bb=0,B1(de)};function Fy(){Sy.forEach(Y=>Y())}var zy=Y=>new Promise(de=>{Y.onmessage=rt=>{var Dt=(rt=rt.data).cmd;if(rt.targetThread&&rt.targetThread!=Rf()){var dr=I0[rt.targetThread];dr?dr.postMessage(rt,rt.transferList):hs(`Internal error! Worker sent a message "${Dt}" to target pthread ${rt.targetThread}, but that thread no longer exists!`)}else Dt==="checkMailbox"?K2():Dt==="spawnThread"?Py(rt):Dt==="cleanupThread"?Gy(I0[rt.thread]):Dt==="killThread"?(rt=rt.thread,Dt=I0[rt],delete I0[rt],f1(Dt),B1(rt),bf.splice(bf.indexOf(Dt),1),Dt.Bb=0):Dt==="cancelThread"?I0[rt.thread].postMessage({cmd:"cancel"}):Dt==="loaded"?(Y.loaded=!0,de(Y)):Dt==="alert"?alert(`Thread ${rt.threadId}: ${rt.text}`):rt.target==="setimmediate"?Y.postMessage(rt):Dt==="callHandler"?$[rt.handler](...rt.args):Dt&&hs(`worker sent an unknown command ${Dt}`)},Y.onerror=rt=>{throw hs(`worker sent an error! ${rt.filename}:${rt.lineno}: ${rt.message}`),rt};var De,Ve=[];for(De of[])$.hasOwnProperty(De)&&Ve.push(De);Y.postMessage({cmd:"load",handlers:Ve,wasmMemory:tr,wasmModule:$r})});function Oy(){var Y=new Worker(self.location.href.startsWith("file:")?new URL(a("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),a.b):new URL(self.location.href),{type:"module",workerData:"em-pthread",name:"em-pthread"});Id.push(Y)}var Y2=Y=>{for(;0<Y.length;)Y.shift()($)},aM=()=>{var Y=Rf(),de=te()[Y+52>>>2>>>0];Y=te()[Y+56>>>2>>>0],zk(de,de-Y),ng(de)},nM=(Y,de)=>{mf=0,Y=Ok(Y,de),0<mf?Yr=Y:ag(Y)};class iM{constructor(de){this.Kb=de-24}}function oM(Y,de,De){var Ve=new iM(Y>>>=0);throw de>>>=0,De>>>=0,te()[Ve.Kb+16>>>2>>>0]=0,te()[Ve.Kb+4>>>2>>>0]=de,te()[Ve.Kb+8>>>2>>>0]=De,Y}function Qy(Y,de,De,Ve){return tt?xi(2,1,Y,de,De,Ve):Ny(Y,de,De,Ve)}function Ny(Y,de,De,Ve){if(Y>>>=0,de>>>=0,De>>>=0,Ve>>>=0,dt===void 0)return hs("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var rt=[];return tt&&rt.length===0?Qy(Y,de,De,Ve):(Y={ic:De,Bb:Y,Rb:Ve,nc:rt},tt?(Y.Nb="spawnThread",postMessage(Y,rt),0):Py(Y))}var Ly=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Ry=(Y,de,De)=>{var Ve=(de>>>=0)+De;for(De=de;Y[De]&&!(De>=Ve);)++De;if(16<De-de&&Y.buffer&&Ly)return Ly.decode(Y.buffer instanceof dt?Y.slice(de,De):Y.subarray(de,De));for(Ve="";de<De;){var rt=Y[de++];if(128&rt){var Dt=63&Y[de++];if((224&rt)==192)Ve+=String.fromCharCode((31&rt)<<6|Dt);else{var dr=63&Y[de++];65536>(rt=(240&rt)==224?(15&rt)<<12|Dt<<6|dr:(7&rt)<<18|Dt<<12|dr<<6|63&Y[de++])?Ve+=String.fromCharCode(rt):(rt-=65536,Ve+=String.fromCharCode(55296|rt>>10,56320|1023&rt))}}else Ve+=String.fromCharCode(rt)}return Ve},Li=(Y,de)=>(Y>>>=0)?Ry(G(),Y,de):"";function jy(Y,de,De){return tt?xi(3,1,Y,de,De):0}function Vy(Y,de){if(tt)return xi(4,1,Y,de)}var h1=Y=>{for(var de=0,De=0;De<Y.length;++De){var Ve=Y.charCodeAt(De);127>=Ve?de++:2047>=Ve?de+=2:55296<=Ve&&57343>=Ve?(de+=4,++De):de+=3}return de},Wy=(Y,de,De,Ve)=>{if(!(0<Ve))return 0;var rt=De>>>=0;Ve=De+Ve-1;for(var Dt=0;Dt<Y.length;++Dt){var dr=Y.charCodeAt(Dt);if(55296<=dr&&57343>=dr&&(dr=65536+((1023&dr)<<10)|1023&Y.charCodeAt(++Dt)),127>=dr){if(De>=Ve)break;de[De++>>>0]=dr}else{if(2047>=dr){if(De+1>=Ve)break;de[De++>>>0]=192|dr>>6}else{if(65535>=dr){if(De+2>=Ve)break;de[De++>>>0]=224|dr>>12}else{if(De+3>=Ve)break;de[De++>>>0]=240|dr>>18,de[De++>>>0]=128|dr>>12&63}de[De++>>>0]=128|dr>>6&63}de[De++>>>0]=128|63&dr}}return de[De>>>0]=0,De-rt},Nf=(Y,de,De)=>Wy(Y,G(),de,De);function Uy(Y,de){if(tt)return xi(5,1,Y,de)}function Hy(Y,de,De){if(tt)return xi(6,1,Y,de,De)}function Yy(Y,de,De){return tt?xi(7,1,Y,de,De):0}function Ky(Y,de){if(tt)return xi(8,1,Y,de)}function qy(Y,de,De){if(tt)return xi(9,1,Y,de,De)}function Xy(Y,de,De,Ve){if(tt)return xi(10,1,Y,de,De,Ve)}function Zy(Y,de,De,Ve){if(tt)return xi(11,1,Y,de,De,Ve)}function Jy(Y,de,De,Ve){if(tt)return xi(12,1,Y,de,De,Ve)}function $y(Y){if(tt)return xi(13,1,Y)}function ek(Y,de){if(tt)return xi(14,1,Y,de)}function tk(Y,de,De){if(tt)return xi(15,1,Y,de,De)}var rk,yd,AM=()=>{wd("")},y0=Y=>{for(var de="";G()[Y>>>0];)de+=rk[G()[Y++>>>0]];return de},m1={},b1={};function Nc(Y,de,De={}){if(!("argPackAdvance"in de))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(Ve,rt,Dt={}){var dr=rt.name;if(!Ve)throw new yd(`type "${dr}" must have a positive integer typeid pointer`);if(b1.hasOwnProperty(Ve)){if(Dt.Tb)return;throw new yd(`Cannot register type '${dr}' twice`)}b1[Ve]=rt,m1.hasOwnProperty(Ve)&&(rt=m1[Ve],delete m1[Ve],rt.forEach(Cr=>Cr()))}(Y,de,De)}var sk=(Y,de,De)=>{switch(de){case 1:return De?Ve=>E()[Ve>>>0]:Ve=>G()[Ve>>>0];case 2:return De?Ve=>L()[Ve>>>1>>>0]:Ve=>W()[Ve>>>1>>>0];case 4:return De?Ve=>R()[Ve>>>2>>>0]:Ve=>te()[Ve>>>2>>>0];case 8:return De?Ve=>Sl[Ve>>>3]:Ve=>C0[Ve>>>3];default:throw new TypeError(`invalid integer width (${de}): ${Y}`)}};function lM(Y,de,De){De>>>=0,Nc(Y>>>=0,{name:de=y0(de>>>0),fromWireType:Ve=>Ve,toWireType:function(Ve,rt){if(typeof rt!="bigint"&&typeof rt!="number")throw rt=rt===null?"null":(Ve=typeof rt)=="object"||Ve==="array"||Ve==="function"?rt.toString():""+rt,new TypeError(`Cannot convert "${rt}" to ${this.name}`);return typeof rt=="number"&&(rt=BigInt(rt)),rt},argPackAdvance:kd,readValueFromPointer:sk(de,De,de.indexOf("u")==-1),Eb:null})}var kd=8;function cM(Y,de,De,Ve){Nc(Y>>>=0,{name:de=y0(de>>>0),fromWireType:function(rt){return!!rt},toWireType:function(rt,Dt){return Dt?De:Ve},argPackAdvance:kd,readValueFromPointer:function(rt){return this.fromWireType(G()[rt>>>0])},Eb:null})}var C1=[],Lc=[];function w1(Y){9<(Y>>>=0)&&--Lc[Y+1]==0&&(Lc[Y]=void 0,C1.push(Y))}var _l=Y=>{if(!Y)throw new yd("Cannot use deleted val. handle = "+Y);return Lc[Y]},Fl=Y=>{switch(Y){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let de=C1.pop()||Lc.length;return Lc[de]=Y,Lc[de+1]=1,de}};function I1(Y){return this.fromWireType(te()[Y>>>2>>>0])}var uM={name:"emscripten::val",fromWireType:Y=>{var de=_l(Y);return w1(Y),de},toWireType:(Y,de)=>Fl(de),argPackAdvance:kd,readValueFromPointer:I1,Eb:null};function dM(Y){return Nc(Y>>>0,uM)}var fM=(Y,de)=>{switch(de){case 4:return function(De){return this.fromWireType(ae()[De>>>2>>>0])};case 8:return function(De){return this.fromWireType(le()[De>>>3>>>0])};default:throw new TypeError(`invalid float width (${de}): ${Y}`)}};function gM(Y,de,De){De>>>=0,Nc(Y>>>=0,{name:de=y0(de>>>0),fromWireType:Ve=>Ve,toWireType:(Ve,rt)=>rt,argPackAdvance:kd,readValueFromPointer:fM(de,De),Eb:null})}function pM(Y,de,De,Ve,rt){if(Y>>>=0,De>>>=0,de=y0(de>>>0),rt===-1&&(rt=4294967295),rt=Cr=>Cr,Ve===0){var Dt=32-8*De;rt=Cr=>Cr<<Dt>>>Dt}var dr=de.includes("unsigned")?function(Cr,Xr){return Xr>>>0}:function(Cr,Xr){return Xr};Nc(Y,{name:de,fromWireType:rt,toWireType:dr,argPackAdvance:kd,readValueFromPointer:sk(de,De,Ve!==0),Eb:null})}function hM(Y,de,De){function Ve(Dt){var dr=te()[Dt>>>2>>>0];return Dt=te()[Dt+4>>>2>>>0],new rt(E().buffer,Dt,dr)}var rt=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][de];Nc(Y>>>=0,{name:De=y0(De>>>0),fromWireType:Ve,argPackAdvance:kd,readValueFromPointer:Ve},{Tb:!0})}function mM(Y,de){Y>>>=0;var De=(de=y0(de>>>0))==="std::string";Nc(Y,{name:de,fromWireType:function(Ve){var rt=te()[Ve>>>2>>>0],Dt=Ve+4;if(De)for(var dr=Dt,Cr=0;Cr<=rt;++Cr){var Xr=Dt+Cr;if(Cr==rt||G()[Xr>>>0]==0){if(dr=Li(dr,Xr-dr),es===void 0)var es=dr;else es+="\0",es+=dr;dr=Xr+1}}else{for(es=Array(rt),Cr=0;Cr<rt;++Cr)es[Cr]=String.fromCharCode(G()[Dt+Cr>>>0]);es=es.join("")}return _0(Ve),es},toWireType:function(Ve,rt){rt instanceof ArrayBuffer&&(rt=new Uint8Array(rt));var Dt=typeof rt=="string";if(!(Dt||rt instanceof Uint8Array||rt instanceof Uint8ClampedArray||rt instanceof Int8Array))throw new yd("Cannot pass non-string to std::string");var dr=De&&Dt?h1(rt):rt.length,Cr=sg(4+dr+1),Xr=Cr+4;if(te()[Cr>>>2>>>0]=dr,De&&Dt)Nf(rt,Xr,dr+1);else if(Dt)for(Dt=0;Dt<dr;++Dt){var es=rt.charCodeAt(Dt);if(255<es)throw _0(Xr),new yd("String has UTF-16 code units that do not fit in 8 bits");G()[Xr+Dt>>>0]=es}else for(Dt=0;Dt<dr;++Dt)G()[Xr+Dt>>>0]=rt[Dt];return Ve!==null&&Ve.push(_0,Cr),Cr},argPackAdvance:kd,readValueFromPointer:I1,Eb(Ve){_0(Ve)}})}var ak=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,bM=(Y,de)=>{for(var De=Y>>1,Ve=De+de/2;!(De>=Ve)&&W()[De>>>0];)++De;if(32<(De<<=1)-Y&&ak)return ak.decode(G().slice(Y,De));for(De="",Ve=0;!(Ve>=de/2);++Ve){var rt=L()[Y+2*Ve>>>1>>>0];if(rt==0)break;De+=String.fromCharCode(rt)}return De},CM=(Y,de,De)=>{if(De??(De=2147483647),2>De)return 0;var Ve=de;De=(De-=2)<2*Y.length?De/2:Y.length;for(var rt=0;rt<De;++rt){var Dt=Y.charCodeAt(rt);L()[de>>>1>>>0]=Dt,de+=2}return L()[de>>>1>>>0]=0,de-Ve},wM=Y=>2*Y.length,IM=(Y,de)=>{for(var De=0,Ve="";!(De>=de/4);){var rt=R()[Y+4*De>>>2>>>0];if(rt==0)break;++De,65536<=rt?(rt-=65536,Ve+=String.fromCharCode(55296|rt>>10,56320|1023&rt)):Ve+=String.fromCharCode(rt)}return Ve},yM=(Y,de,De)=>{if(de>>>=0,De??(De=2147483647),4>De)return 0;var Ve=de;De=Ve+De-4;for(var rt=0;rt<Y.length;++rt){var Dt=Y.charCodeAt(rt);if(55296<=Dt&&57343>=Dt&&(Dt=65536+((1023&Dt)<<10)|1023&Y.charCodeAt(++rt)),R()[de>>>2>>>0]=Dt,(de+=4)+4>De)break}return R()[de>>>2>>>0]=0,de-Ve},kM=Y=>{for(var de=0,De=0;De<Y.length;++De){var Ve=Y.charCodeAt(De);55296<=Ve&&57343>=Ve&&++De,de+=4}return de};function _M(Y,de,De){if(Y>>>=0,de>>>=0,De=y0(De>>>=0),de===2)var Ve=bM,rt=CM,Dt=wM,dr=Cr=>W()[Cr>>>1>>>0];else de===4&&(Ve=IM,rt=yM,Dt=kM,dr=Cr=>te()[Cr>>>2>>>0]);Nc(Y,{name:De,fromWireType:Cr=>{for(var Xr,es=te()[Cr>>>2>>>0],Ps=Cr+4,Sa=0;Sa<=es;++Sa){var ln=Cr+4+Sa*de;Sa!=es&&dr(ln)!=0||(Ps=Ve(Ps,ln-Ps),Xr===void 0?Xr=Ps:(Xr+="\0",Xr+=Ps),Ps=ln+de)}return _0(Cr),Xr},toWireType:(Cr,Xr)=>{if(typeof Xr!="string")throw new yd(`Cannot pass non-string to C++ string type ${De}`);var es=Dt(Xr),Ps=sg(4+es+de);return te()[Ps>>>2>>>0]=es/de,rt(Xr,Ps+4,es+de),Cr!==null&&Cr.push(_0,Ps),Ps},argPackAdvance:kd,readValueFromPointer:I1,Eb(Cr){_0(Cr)}})}function vM(Y,de){Nc(Y>>>=0,{Ub:!0,name:de=y0(de>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var xM=()=>1;function MM(Y){E1(Y>>>0,!nt,1,!Ke,131072,!1),Fy()}var nk=Y=>{if(!Gl)try{if(Y(),!(0<mf))try{tt?ag(Yr):p1(Yr)}catch(de){de instanceof d1||de=="unwind"||Lt(0,de)}}catch(de){de instanceof d1||de=="unwind"||Lt(0,de)}};function y1(Y){Y>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(R(),Y>>>2,Y).value.then(K2),Y+=128,Atomics.store(R(),Y>>>2,1))}var K2=()=>{var Y=Rf();Y&&(y1(Y),nk(Fk))};function EM(Y,de){(Y>>>=0)==de>>>0?setTimeout(K2):tt?postMessage({targetThread:Y,cmd:"checkMailbox"}):(Y=I0[Y])&&Y.postMessage({cmd:"checkMailbox"})}var k1=[];function BM(Y,de,De,Ve,rt){for(de>>>=0,Ve/=2,k1.length=Ve,De=rt>>>0>>>3,rt=0;rt<Ve;rt++)k1[rt]=Sl[De+2*rt]?Sl[De+2*rt+1]:le()[De+2*rt+1>>>0];return(de?u1[de]:C5[Y])(...k1)}function TM(Y){Y>>>=0,tt?postMessage({cmd:"cleanupThread",thread:Y}):Gy(I0[Y])}function PM(Y){}var q2=(Y,de)=>{var De=b1[Y];if(De===void 0)throw Y=Pk(Y),De=y0(Y),_0(Y),new yd(`${de} has unknown type ${De}`);return De},ik=(Y,de,De)=>{var Ve=[];return Y=Y.toWireType(Ve,De),Ve.length&&(te()[de>>>2>>>0]=Fl(Ve)),Y};function DM(Y,de,De){return de>>>=0,De>>>=0,Y=_l(Y>>>0),de=q2(de,"emval::as"),ik(de,De,Y)}function SM(Y,de){return de>>>=0,Y=_l(Y>>>0),(de=q2(de,"emval::as")).toWireType(null,Y)}var X2=Y=>{try{Y()}catch(de){wd(de)}},_d=0,k0=null,ok=0,Z2=[],Ak={},lk={},GM=0,_1=null,FM=[];function ck(Y){return function(){if(!Gl){if(_d===0){var de=!1,De=!1;(Ve=>{Y().then(Ve)})((Ve=0)=>{if(!Gl&&(ok=Ve,de=!0,De)){_d=2,X2(()=>Lk(k0)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),Ve=!1;try{var rt=function(){var Cr=R()[k0+8>>>2>>>0];return Cr=vs[lk[Cr]],--mf,Cr()}()}catch(Cr){rt=Cr,Ve=!0}var Dt=!1;if(!k0){var dr=_1;dr&&(_1=null,(Ve?dr.reject:dr.resolve)(rt),Dt=!0)}if(Ve&&!Dt)throw rt}}),De=!0,de||(_d=1,k0=function(){var Ve=sg(65548),rt=Ve+12;te()[Ve>>>2>>>0]=rt,te()[Ve+4>>>2>>>0]=rt+65536,rt=Z2[0];var Dt=Ak[rt];return Dt===void 0&&(Dt=GM++,Ak[rt]=Dt,lk[Dt]=rt),rt=Dt,R()[Ve+8>>>2>>>0]=rt,Ve}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),X2(()=>Qk(k0)))}else _d===2?(_d=0,X2(Rk),_0(k0),k0=null,FM.forEach(nk)):wd(`invalid state: ${_d}`);return ok}}()}function zM(Y){return Y>>>=0,ck(()=>(Y=_l(Y)).then(Fl))}var J2=[];function OM(Y,de,De,Ve){return De>>>=0,Ve>>>=0,(Y=J2[Y>>>0])(null,de=_l(de>>>0),De,Ve)}var QM={},$2=Y=>{var de=QM[Y];return de===void 0?y0(Y):de};function NM(Y,de,De,Ve,rt){return De>>>=0,Ve>>>=0,rt>>>=0,(Y=J2[Y>>>0])(de=_l(de>>>0),de[De=$2(De)],Ve,rt)}var uk=()=>typeof globalThis=="object"?globalThis:Function("return this")();function LM(Y){return(Y>>>=0)==0?Fl(uk()):(Y=$2(Y),Fl(uk()[Y]))}var RM=Y=>{var de=J2.length;return J2.push(Y),de},jM=(Y,de)=>{for(var De=Array(Y),Ve=0;Ve<Y;++Ve)De[Ve]=q2(te()[de+4*Ve>>>2>>>0],"parameter "+Ve);return De},dk=(Y,de)=>Object.defineProperty(de,"name",{value:Y});function VM(Y,de,De){var Ve=(de=jM(Y,de>>>0)).shift();Y--;var rt=`return function (obj, func, destructorsRef, args) {
`,Dt=0,dr=[];De===0&&dr.push("obj");for(var Cr=["retType"],Xr=[Ve],es=0;es<Y;++es)dr.push("arg"+es),Cr.push("argType"+es),Xr.push(de[es]),rt+=`  var arg${es} = argType${es}.readValueFromPointer(args${Dt?"+"+Dt:""});
`,Dt+=de[es].argPackAdvance;return rt+=`  var rv = ${De===1?"new func":"func.call"}(${dr.join(", ")});
`,Ve.Ub||(Cr.push("emval_returnValue"),Xr.push(ik),rt+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Cr.push(rt+`};
`),Y=function(Ps){var Sa=Function;if(!(Sa instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Sa} which is not a function`);var ln=dk(Sa.name||"unknownFunctionName",function(){});return ln.prototype=Sa.prototype,ln=new ln,(Ps=Sa.apply(ln,Ps))instanceof Object?Ps:ln}(Cr)(...Xr),De=`methodCaller<(${de.map(Ps=>Ps.name).join(", ")}) => ${Ve.name}>`,RM(dk(De,Y))}function WM(Y){return Y=$2(Y>>>0),Fl($[Y])}function UM(Y,de){return de>>>=0,Y=_l(Y>>>0),de=_l(de),Fl(Y[de])}function HM(Y){9<(Y>>>=0)&&(Lc[Y+1]+=1)}function YM(){return Fl([])}function KM(Y){Y=_l(Y>>>0);for(var de=Array(Y.length),De=0;De<Y.length;De++)de[De]=Y[De];return Fl(de)}function qM(Y){return Fl($2(Y>>>0))}function XM(){return Fl({})}function ZM(Y){for(var de=_l(Y>>>=0);de.length;){var De=de.pop();de.pop()(De)}w1(Y)}function JM(Y,de,De){de>>>=0,De>>>=0,Y=_l(Y>>>0),de=_l(de),De=_l(De),Y[de]=De}function $M(Y,de){return de>>>=0,Y=(Y=q2(Y>>>0,"_emval_take_value")).readValueFromPointer(de),Fl(Y)}function e5(Y,de){Y=-9007199254740992>Y||9007199254740992<Y?NaN:Number(Y),de>>>=0,Y=new Date(1e3*Y),R()[de>>>2>>>0]=Y.getUTCSeconds(),R()[de+4>>>2>>>0]=Y.getUTCMinutes(),R()[de+8>>>2>>>0]=Y.getUTCHours(),R()[de+12>>>2>>>0]=Y.getUTCDate(),R()[de+16>>>2>>>0]=Y.getUTCMonth(),R()[de+20>>>2>>>0]=Y.getUTCFullYear()-1900,R()[de+24>>>2>>>0]=Y.getUTCDay(),Y=(Y.getTime()-Date.UTC(Y.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,R()[de+28>>>2>>>0]=Y}var Lf=Y=>Y%4==0&&(Y%100!=0||Y%400==0),fk=[0,31,60,91,121,152,182,213,244,274,305,335],gk=[0,31,59,90,120,151,181,212,243,273,304,334];function t5(Y,de){Y=-9007199254740992>Y||9007199254740992<Y?NaN:Number(Y),de>>>=0,Y=new Date(1e3*Y),R()[de>>>2>>>0]=Y.getSeconds(),R()[de+4>>>2>>>0]=Y.getMinutes(),R()[de+8>>>2>>>0]=Y.getHours(),R()[de+12>>>2>>>0]=Y.getDate(),R()[de+16>>>2>>>0]=Y.getMonth(),R()[de+20>>>2>>>0]=Y.getFullYear()-1900,R()[de+24>>>2>>>0]=Y.getDay();var De=(Lf(Y.getFullYear())?fk:gk)[Y.getMonth()]+Y.getDate()-1|0;R()[de+28>>>2>>>0]=De,R()[de+36>>>2>>>0]=-60*Y.getTimezoneOffset(),De=new Date(Y.getFullYear(),6,1).getTimezoneOffset();var Ve=new Date(Y.getFullYear(),0,1).getTimezoneOffset();Y=0|(De!=Ve&&Y.getTimezoneOffset()==Math.min(Ve,De)),R()[de+32>>>2>>>0]=Y}function r5(Y){Y>>>=0;var de=new Date(R()[Y+20>>>2>>>0]+1900,R()[Y+16>>>2>>>0],R()[Y+12>>>2>>>0],R()[Y+8>>>2>>>0],R()[Y+4>>>2>>>0],R()[Y>>>2>>>0],0),De=R()[Y+32>>>2>>>0],Ve=de.getTimezoneOffset(),rt=new Date(de.getFullYear(),6,1).getTimezoneOffset(),Dt=new Date(de.getFullYear(),0,1).getTimezoneOffset(),dr=Math.min(Dt,rt);return 0>De?R()[Y+32>>>2>>>0]=+(rt!=Dt&&dr==Ve):0<De!=(dr==Ve)&&(rt=Math.max(Dt,rt),de.setTime(de.getTime()+6e4*((0<De?dr:rt)-Ve))),R()[Y+24>>>2>>>0]=de.getDay(),De=(Lf(de.getFullYear())?fk:gk)[de.getMonth()]+de.getDate()-1|0,R()[Y+28>>>2>>>0]=De,R()[Y>>>2>>>0]=de.getSeconds(),R()[Y+4>>>2>>>0]=de.getMinutes(),R()[Y+8>>>2>>>0]=de.getHours(),R()[Y+12>>>2>>>0]=de.getDate(),R()[Y+16>>>2>>>0]=de.getMonth(),R()[Y+20>>>2>>>0]=de.getYear(),Y=de.getTime(),BigInt(isNaN(Y)?-1:Y/1e3)}function pk(Y,de,De,Ve,rt,Dt,dr){return tt?xi(16,1,Y,de,De,Ve,rt,Dt,dr):-52}function hk(Y,de,De,Ve,rt,Dt){if(tt)return xi(17,1,Y,de,De,Ve,rt,Dt)}function s5(Y,de,De,Ve){Y>>>=0,de>>>=0,De>>>=0,Ve>>>=0;var rt=new Date().getFullYear(),Dt=new Date(rt,0,1),dr=new Date(rt,6,1);rt=Dt.getTimezoneOffset();var Cr=dr.getTimezoneOffset(),Xr=Math.max(rt,Cr);te()[Y>>>2>>>0]=60*Xr,R()[de>>>2>>>0]=+(rt!=Cr),Dt=(Y=es=>es.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(Dt),dr=Y(dr),Cr<rt?(Nf(Dt,De,17),Nf(dr,Ve,17)):(Nf(Dt,Ve,17),Nf(dr,De,17))}var v1=[],mk=(Y,de)=>{v1.length=0;for(var De;De=G()[Y++>>>0];){var Ve=De!=105;de+=(Ve&=De!=112)&&de%8?4:0,v1.push(De==112?te()[de>>>2>>>0]:De==106?Sl[de>>>3]:De==105?R()[de>>>2>>>0]:le()[de>>>3>>>0]),de+=Ve?8:4}return v1};function a5(Y,de,De){return Y>>>=0,de=mk(de>>>0,De>>>0),u1[Y](...de)}function n5(Y,de,De){return Y>>>=0,de=mk(de>>>0,De>>>0),u1[Y](...de)}var i5=()=>{},o5=()=>Date.now();function A5(Y,de){return hs(Li(Y>>>0,de>>>0))}var bk,l5=()=>{throw mf+=1,"unwind"};function c5(){return 4294901760}bk=()=>performance.timeOrigin+performance.now();var u5=()=>navigator.hardwareConcurrency;function d5(){return wd("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function f5(Y){Y>>>=0;var de=G().length;if(Y<=de||4294901760<Y)return!1;for(var De=1;4>=De;De*=2){var Ve=de*(1+.2/De);Ve=Math.min(Ve,Y+100663296);var rt=Math;Ve=Math.max(Y,Ve);e:{rt=(rt.min.call(rt,4294901760,Ve+(65536-Ve%65536)%65536)-tr.buffer.byteLength+65535)/65536;try{tr.grow(rt),An();var Dt=1;break e}catch{}Dt=void 0}if(Dt)return!0}return!1}var eg=()=>(wd("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),c2={},Ck=Y=>{Y.forEach(de=>{eg()})};function g5(){var Y=Error().stack.toString().split(`
`);return Y[0]=="Error"&&Y.shift(),Ck(Y),c2.Qb=eg(),c2.fc=Y,c2.Qb}function p5(Y,de,De){if(Y>>>=0,de>>>=0,c2.Qb==Y)var Ve=c2.fc;else(Ve=Error().stack.toString().split(`
`))[0]=="Error"&&Ve.shift(),Ck(Ve);for(var rt=3;Ve[rt]&&eg()!=Y;)++rt;for(Y=0;Y<De&&Ve[Y+rt];++Y)R()[de+4*Y>>>2>>>0]=eg();return Y}var x1,M1={},wk=()=>{if(!x1){var Y,de={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(Y in M1)M1[Y]===void 0?delete de[Y]:de[Y]=M1[Y];var De=[];for(Y in de)De.push(`${Y}=${de[Y]}`);x1=De}return x1};function Ik(Y,de){if(tt)return xi(18,1,Y,de);Y>>>=0,de>>>=0;var De=0;return wk().forEach((Ve,rt)=>{var Dt=de+De;for(rt=te()[Y+4*rt>>>2>>>0]=Dt,Dt=0;Dt<Ve.length;++Dt)E()[rt++>>>0]=Ve.charCodeAt(Dt);E()[rt>>>0]=0,De+=Ve.length+1}),0}function yk(Y,de){if(tt)return xi(19,1,Y,de);Y>>>=0,de>>>=0;var De=wk();te()[Y>>>2>>>0]=De.length;var Ve=0;return De.forEach(rt=>Ve+=rt.length+1),te()[de>>>2>>>0]=Ve,0}function kk(Y){return tt?xi(20,1,Y):52}function _k(Y,de,De,Ve){return tt?xi(21,1,Y,de,De,Ve):52}function vk(Y,de,De,Ve){return tt?xi(22,1,Y,de,De,Ve):70}var h5=[null,[],[]];function xk(Y,de,De,Ve){if(tt)return xi(23,1,Y,de,De,Ve);de>>>=0,De>>>=0,Ve>>>=0;for(var rt=0,Dt=0;Dt<De;Dt++){var dr=te()[de>>>2>>>0],Cr=te()[de+4>>>2>>>0];de+=8;for(var Xr=0;Xr<Cr;Xr++){var es=G()[dr+Xr>>>0],Ps=h5[Y];es===0||es===10?((Y===1?pa:hs)(Ry(Ps,0)),Ps.length=0):Ps.push(es)}rt+=Cr}return te()[Ve>>>2>>>0]=rt,0}var Mk=[31,29,31,30,31,30,31,31,30,31,30,31],Ek=[31,28,31,30,31,30,31,31,30,31,30,31],m5=(Y,de)=>{E().set(Y,de>>>0)};function Bk(Y,de,De,Ve){function rt(or,Oa,Di){for(or=typeof or=="number"?or.toString():or||"";or.length<Oa;)or=Di[0]+or;return or}function Dt(or,Oa){return rt(or,Oa,"0")}function dr(or,Oa){function Di(Vk){return 0>Vk?-1:0<Vk?1:0}var Cf;return(Cf=Di(or.getFullYear()-Oa.getFullYear()))===0&&(Cf=Di(or.getMonth()-Oa.getMonth()))===0&&(Cf=Di(or.getDate()-Oa.getDate())),Cf}function Cr(or){switch(or.getDay()){case 0:return new Date(or.getFullYear()-1,11,29);case 1:return or;case 2:return new Date(or.getFullYear(),0,3);case 3:return new Date(or.getFullYear(),0,2);case 4:return new Date(or.getFullYear(),0,1);case 5:return new Date(or.getFullYear()-1,11,31);case 6:return new Date(or.getFullYear()-1,11,30)}}function Xr(or){var Oa=or.Cb;for(or=new Date(new Date(or.Db+1900,0,1).getTime());0<Oa;){var Di=or.getMonth(),Cf=(Lf(or.getFullYear())?Mk:Ek)[Di];if(!(Oa>Cf-or.getDate())){or.setDate(or.getDate()+Oa);break}Oa-=Cf-or.getDate()+1,or.setDate(1),11>Di?or.setMonth(Di+1):(or.setMonth(0),or.setFullYear(or.getFullYear()+1))}return Di=new Date(or.getFullYear()+1,0,4),Oa=Cr(new Date(or.getFullYear(),0,4)),Di=Cr(Di),0>=dr(Oa,or)?0>=dr(Di,or)?or.getFullYear()+1:or.getFullYear():or.getFullYear()-1}Y>>>=0,de>>>=0,De>>>=0,Ve>>>=0;var es=te()[Ve+40>>>2>>>0];for(var Ps in Ve={lc:R()[Ve>>>2>>>0],kc:R()[Ve+4>>>2>>>0],Ib:R()[Ve+8>>>2>>>0],Mb:R()[Ve+12>>>2>>>0],Jb:R()[Ve+16>>>2>>>0],Db:R()[Ve+20>>>2>>>0],vb:R()[Ve+24>>>2>>>0],Cb:R()[Ve+28>>>2>>>0],sc:R()[Ve+32>>>2>>>0],jc:R()[Ve+36>>>2>>>0],mc:es?Li(es):""},De=Li(De),es={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})De=De.replace(new RegExp(Ps,"g"),es[Ps]);var Sa="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ln="January February March April May June July August September October November December".split(" ");for(Ps in es={"%a":or=>Sa[or.vb].substring(0,3),"%A":or=>Sa[or.vb],"%b":or=>ln[or.Jb].substring(0,3),"%B":or=>ln[or.Jb],"%C":or=>Dt((or.Db+1900)/100|0,2),"%d":or=>Dt(or.Mb,2),"%e":or=>rt(or.Mb,2," "),"%g":or=>Xr(or).toString().substring(2),"%G":Xr,"%H":or=>Dt(or.Ib,2),"%I":or=>((or=or.Ib)==0?or=12:12<or&&(or-=12),Dt(or,2)),"%j":or=>{for(var Oa=0,Di=0;Di<=or.Jb-1;Oa+=(Lf(or.Db+1900)?Mk:Ek)[Di++]);return Dt(or.Mb+Oa,3)},"%m":or=>Dt(or.Jb+1,2),"%M":or=>Dt(or.kc,2),"%n":()=>`
`,"%p":or=>0<=or.Ib&&12>or.Ib?"AM":"PM","%S":or=>Dt(or.lc,2),"%t":()=>"	","%u":or=>or.vb||7,"%U":or=>Dt(Math.floor((or.Cb+7-or.vb)/7),2),"%V":or=>{var Oa=Math.floor((or.Cb+7-(or.vb+6)%7)/7);if(2>=(or.vb+371-or.Cb-2)%7&&Oa++,Oa)Oa==53&&((Di=(or.vb+371-or.Cb)%7)==4||Di==3&&Lf(or.Db)||(Oa=1));else{Oa=52;var Di=(or.vb+7-or.Cb-1)%7;(Di==4||Di==5&&Lf(or.Db%400-1))&&Oa++}return Dt(Oa,2)},"%w":or=>or.vb,"%W":or=>Dt(Math.floor((or.Cb+7-(or.vb+6)%7)/7),2),"%y":or=>(or.Db+1900).toString().substring(2),"%Y":or=>or.Db+1900,"%z":or=>(0<=(or=or.jc)?"+":"-")+("0000"+((or=Math.abs(or)/60)/60*100+or%60)).slice(-4),"%Z":or=>or.mc,"%%":()=>"%"},De=De.replace(/%%/g,"\0\0"),es)De.includes(Ps)&&(De=De.replace(new RegExp(Ps,"g"),es[Ps](Ve)));return Ps=function(or){var Oa=Array(h1(or)+1);return Wy(or,Oa,0,Oa.length),Oa}(De=De.replace(/\0\0/g,"%")),Ps.length>de?0:(m5(Ps,Y),Ps.length-1)}function b5(Y,de,De,Ve){return Bk(Y>>>0,de>>>0,De>>>0,Ve>>>0)}tt||function(){for(var Y=$.numThreads-1;Y--;)Oy();QA.unshift(()=>{hf++,function(de){tt?de():Promise.all(Id.map(zy)).then(de)}(()=>vy())})}();for(var Tk=Array(256),tg=0;256>tg;++tg)Tk[tg]=String.fromCharCode(tg);rk=Tk,yd=$.BindingError=class extends Error{constructor(Y){super(Y),this.name="BindingError"}},$.InternalError=class extends Error{constructor(Y){super(Y),this.name="InternalError"}},Lc.push(0,1,void 0,1,null,1,!0,1,!1,1),$.count_emval_handles=()=>Lc.length/2-5-C1.length;var C5=[g1,Dy,Qy,jy,Vy,Uy,Hy,Yy,Ky,qy,Xy,Zy,Jy,$y,ek,tk,pk,hk,Ik,yk,kk,_k,vk,xk],vs=function(){function Y(De,Ve){return vs=De.exports,vs=function(){var rt=vs,Dt={};for(let[dr,Cr]of Object.entries(rt))Dt[dr]=typeof Cr=="function"?(...Xr)=>{Z2.push(dr);try{return Cr(...Xr)}finally{Gl||(Z2.pop(),k0&&_d===1&&Z2.length===0&&(_d=0,mf+=1,X2(Nk),typeof Fibers<"u"&&Fibers.tc()))}}:Cr;return Dt}(),vs=function(){var rt=vs,Dt=Cr=>Xr=>Cr(Xr)>>>0,dr=Cr=>()=>Cr()>>>0;return(rt=Object.assign({},rt)).Da=Dt(rt.Da),rt.gb=dr(rt.gb),rt.ib=Dt(rt.ib),rt.emscripten_main_runtime_thread_id=dr(rt.emscripten_main_runtime_thread_id),rt.tb=Dt(rt.tb),rt.ub=dr(rt.ub),rt}(),Sy.push(vs.jb),Qc.unshift(vs.Ca),$r=Ve,vy(),vs}var de=Ty();if(hf++,$.instantiateWasm)try{return $.instantiateWasm(de,Y)}catch(De){hs(`Module.instantiateWasm callback failed with error: ${De}`),Ge(De)}return c1||(c1=$.locateFile?xy("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":$.locateFile?$.locateFile("ort-wasm-simd-threaded.jsep.wasm",yr):yr+"ort-wasm-simd-threaded.jsep.wasm":new URL(a("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),a.b).href),function(De,Ve){var rt=c1;return Or||typeof WebAssembly.instantiateStreaming!="function"||xy(rt)||My(rt)||typeof fetch!="function"?By(rt,De,Ve):fetch(rt,{credentials:"same-origin"}).then(Dt=>WebAssembly.instantiateStreaming(Dt,De).then(Ve,function(dr){return hs(`wasm streaming compile failed: ${dr}`),hs("falling back to ArrayBuffer instantiation"),By(rt,De,Ve)}))}(de,function(De){Y(De.instance,De.module)}).catch(Ge),{}}(),Pk=Y=>(Pk=vs.Da)(Y),Dk=()=>(Dk=vs.Ea)();$._OrtInit=(Y,de)=>($._OrtInit=vs.Fa)(Y,de),$._OrtGetLastError=(Y,de)=>($._OrtGetLastError=vs.Ga)(Y,de),$._OrtCreateSessionOptions=(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es)=>($._OrtCreateSessionOptions=vs.Ha)(Y,de,De,Ve,rt,Dt,dr,Cr,Xr,es),$._OrtAppendExecutionProvider=(Y,de)=>($._OrtAppendExecutionProvider=vs.Ia)(Y,de),$._OrtAddFreeDimensionOverride=(Y,de,De)=>($._OrtAddFreeDimensionOverride=vs.Ja)(Y,de,De),$._OrtAddSessionConfigEntry=(Y,de,De)=>($._OrtAddSessionConfigEntry=vs.Ka)(Y,de,De),$._OrtReleaseSessionOptions=Y=>($._OrtReleaseSessionOptions=vs.La)(Y),$._OrtCreateSession=(Y,de,De)=>($._OrtCreateSession=vs.Ma)(Y,de,De),$._OrtReleaseSession=Y=>($._OrtReleaseSession=vs.Na)(Y),$._OrtGetInputOutputCount=(Y,de,De)=>($._OrtGetInputOutputCount=vs.Oa)(Y,de,De),$._OrtGetInputName=(Y,de)=>($._OrtGetInputName=vs.Pa)(Y,de),$._OrtGetOutputName=(Y,de)=>($._OrtGetOutputName=vs.Qa)(Y,de),$._OrtFree=Y=>($._OrtFree=vs.Ra)(Y),$._OrtCreateTensor=(Y,de,De,Ve,rt,Dt)=>($._OrtCreateTensor=vs.Sa)(Y,de,De,Ve,rt,Dt),$._OrtGetTensorData=(Y,de,De,Ve,rt)=>($._OrtGetTensorData=vs.Ta)(Y,de,De,Ve,rt),$._OrtReleaseTensor=Y=>($._OrtReleaseTensor=vs.Ua)(Y),$._OrtCreateRunOptions=(Y,de,De,Ve)=>($._OrtCreateRunOptions=vs.Va)(Y,de,De,Ve),$._OrtAddRunConfigEntry=(Y,de,De)=>($._OrtAddRunConfigEntry=vs.Wa)(Y,de,De),$._OrtReleaseRunOptions=Y=>($._OrtReleaseRunOptions=vs.Xa)(Y),$._OrtCreateBinding=Y=>($._OrtCreateBinding=vs.Ya)(Y),$._OrtBindInput=(Y,de,De)=>($._OrtBindInput=vs.Za)(Y,de,De),$._OrtBindOutput=(Y,de,De,Ve)=>($._OrtBindOutput=vs._a)(Y,de,De,Ve),$._OrtClearBoundOutputs=Y=>($._OrtClearBoundOutputs=vs.$a)(Y),$._OrtReleaseBinding=Y=>($._OrtReleaseBinding=vs.ab)(Y),$._OrtRunWithBinding=(Y,de,De,Ve,rt)=>($._OrtRunWithBinding=vs.bb)(Y,de,De,Ve,rt),$._OrtRun=(Y,de,De,Ve,rt,Dt,dr,Cr)=>($._OrtRun=vs.cb)(Y,de,De,Ve,rt,Dt,dr,Cr),$._OrtEndProfiling=Y=>($._OrtEndProfiling=vs.db)(Y),$._JsepOutput=(Y,de,De)=>($._JsepOutput=vs.eb)(Y,de,De),$._JsepGetNodeName=Y=>($._JsepGetNodeName=vs.fb)(Y);var rg,Rf=()=>(Rf=vs.gb)(),_0=$._free=Y=>(_0=$._free=vs.hb)(Y),sg=$._malloc=Y=>(sg=$._malloc=vs.ib)(Y),E1=(Y,de,De,Ve,rt,Dt)=>(E1=vs.lb)(Y,de,De,Ve,rt,Dt),Sk=()=>(Sk=vs.mb)(),Gk=(Y,de,De,Ve,rt)=>(Gk=vs.nb)(Y,de,De,Ve,rt),B1=Y=>(B1=vs.ob)(Y),ag=Y=>(ag=vs.pb)(Y),Fk=()=>(Fk=vs.qb)(),zk=(Y,de)=>(zk=vs.rb)(Y,de),ng=Y=>(ng=vs.sb)(Y),T1=Y=>(T1=vs.tb)(Y),P1=()=>(P1=vs.ub)(),Ok=$.dynCall_ii=(Y,de)=>(Ok=$.dynCall_ii=vs.wb)(Y,de),Qk=Y=>(Qk=vs.xb)(Y),Nk=()=>(Nk=vs.yb)(),Lk=Y=>(Lk=vs.zb)(Y),Rk=()=>(Rk=vs.Ab)();function jk(){0<hf||(tt?(Pe($),tt||Y2(Qc),startWorker($)):(Y2(QA),0<hf||rg||(rg=!0,$.calledRun=!0,Gl||(tt||Y2(Qc),Pe($),tt||Y2(l1)))))}return $.___start_em_js=932469,$.___stop_em_js=932715,$.stackSave=()=>P1(),$.stackRestore=Y=>ng(Y),$.stackAlloc=Y=>T1(Y),$.setValue=function(Y,de,De="i8"){switch(De.endsWith("*")&&(De="*"),De){case"i1":case"i8":E()[Y>>>0]=de;break;case"i16":L()[Y>>>1>>>0]=de;break;case"i32":R()[Y>>>2>>>0]=de;break;case"i64":Sl[Y>>>3]=BigInt(de);break;case"float":ae()[Y>>>2>>>0]=de;break;case"double":le()[Y>>>3>>>0]=de;break;case"*":te()[Y>>>2>>>0]=de;break;default:wd(`invalid type for setValue: ${De}`)}},$.getValue=function(Y,de="i8"){switch(de.endsWith("*")&&(de="*"),de){case"i1":case"i8":return E()[Y>>>0];case"i16":return L()[Y>>>1>>>0];case"i32":return R()[Y>>>2>>>0];case"i64":return Sl[Y>>>3];case"float":return ae()[Y>>>2>>>0];case"double":return le()[Y>>>3>>>0];case"*":return te()[Y>>>2>>>0];default:wd(`invalid type for getValue: ${de}`)}},$.UTF8ToString=Li,$.stringToUTF8=Nf,$.lengthBytesUTF8=h1,l2=function Y(){rg||jk(),rg||(l2=Y)},jk(),$.PTR_SIZE=4,je},$s=Rr,((d=globalThis.self)==null?void 0:d.name)==="em-pthread"&&Rr()}),Tc=be(()=>{gt(),os=typeof location>"u"?void 0:location.origin,Ks=(()=>{var d;return(d=self.location.href)!=null&&d.startsWith("file:")?new URL(new URL(a("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),a.b).href,os).href:self.location.href})(),ts=()=>{if(Ks&&!Ks.startsWith("blob:"))return Ks.substring(0,Ks.lastIndexOf("/")+1)},zn=(d,b)=>{try{let E=b??Ks;return(E?new URL(d,E):new URL(d)).origin===os}catch{return!1}},Va=(d,b)=>{let E=b??Ks;try{return(E?new URL(d,E):new URL(d)).href}catch{return}},Wa=(d,b)=>`${b??"./"}${d}`,Pr=async d=>{let b=await(await fetch(d,{credentials:"same-origin"})).blob();return URL.createObjectURL(b)},Sr=async d=>(await import(d)).default,Kt=(Xt(),Le(It)).default,Bs=async()=>{if(!Ks)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(zn(Ks))return[void 0,Kt()];let d=await Pr(Ks);return[d,Kt(d)]},$a=(tf(),Le(Jt)).default,en=async(d,b,E)=>{if(!d&&!b&&$a&&Ks&&zn(Ks))return[void 0,$a];{let G="ort-wasm-simd-threaded.jsep.mjs",L=d??Va(G,b),W=E&&L&&!zn(L,b),R=W?await Pr(L):L??Wa(G,b);return[W?R:void 0,await Sr(R)]}}}),FA=be(()=>{Tc(),Pn=!1,Dn=!1,qn=!1,sa=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Zt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Br=async d=>{if(Pn)return Promise.resolve();if(Dn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(qn)throw new Error("previous call to 'initializeWebAssembly()' failed.");Dn=!0;let b=d.initTimeout,E=d.numThreads;if(!Zt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let G=sa();E>1&&!G&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+E+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),d.numThreads=E=1);let L=d.wasmPaths,W=typeof L=="string"?L:void 0,R=L==null?void 0:L.mjs,te=(R==null?void 0:R.href)??R,ae=L==null?void 0:L.wasm,le=(ae==null?void 0:ae.href)??ae,Pe=d.wasmBinary,[Ge,$]=await en(te,W,E>1),je=!1,Ke=[];if(b>0&&Ke.push(new Promise(nt=>{setTimeout(()=>{je=!0,nt()},b)})),Ke.push(new Promise((nt,tt)=>{let dt={numThreads:E};if(Pe)dt.wasmBinary=Pe;else if(le||W)dt.locateFile=Ct=>le??W+Ct;else if(te&&te.indexOf("blob:")!==0)dt.locateFile=Ct=>new URL(Ct,te).href;else if(Ge){let Ct=ts();Ct&&(dt.locateFile=Et=>Ct+Et)}$(dt).then(Ct=>{Dn=!1,Pn=!0,On=Ct,nt(),Ge&&URL.revokeObjectURL(Ge)},Ct=>{Dn=!1,qn=!0,tt(Ct)})})),await Promise.race(Ke),je)throw new Error(`WebAssembly backend initializing failed due to timeout: ${b}ms`)},zr=()=>{if(Pn&&On)return On;throw new Error("WebAssembly is not initialized yet.")}}),ud=be(()=>{FA(),qs=(d,b)=>{let E=zr(),G=E.lengthBytesUTF8(d)+1,L=E._malloc(G);return E.stringToUTF8(d,L,G),b.push(L),L},aa=(d,b,E,G)=>{if(typeof d=="object"&&d!==null){if(E.has(d))throw new Error("Circular reference in options");E.add(d)}Object.entries(d).forEach(([L,W])=>{let R=b?b+L:L;if(typeof W=="object")aa(W,R+".",E,G);else if(typeof W=="string"||typeof W=="number")G(R,W.toString());else{if(typeof W!="boolean")throw new Error("Can't handle extra config type: "+typeof W);G(R,W?"1":"0")}})},ks=d=>{let b=zr(),E=b.stackSave();try{let G=b.PTR_SIZE,L=b.stackAlloc(2*G);b._OrtGetLastError(L,L+G);let W=Number(b.getValue(L,G===4?"i32":"i64")),R=b.getValue(L+G,"*"),te=R?b.UTF8ToString(R):"";throw new Error(`${d} ERROR_CODE: ${W}, ERROR_MESSAGE: ${te}`)}finally{b.stackRestore(E)}}}),dd=be(()=>{FA(),ud(),vn=d=>{let b=zr(),E=0,G=[],L=d||{};try{if((d==null?void 0:d.logSeverityLevel)===void 0)L.logSeverityLevel=2;else if(typeof d.logSeverityLevel!="number"||!Number.isInteger(d.logSeverityLevel)||d.logSeverityLevel<0||d.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${d.logSeverityLevel}`);if((d==null?void 0:d.logVerbosityLevel)===void 0)L.logVerbosityLevel=0;else if(typeof d.logVerbosityLevel!="number"||!Number.isInteger(d.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${d.logVerbosityLevel}`);(d==null?void 0:d.terminate)===void 0&&(L.terminate=!1);let W=0;return(d==null?void 0:d.tag)!==void 0&&(W=qs(d.tag,G)),E=b._OrtCreateRunOptions(L.logSeverityLevel,L.logVerbosityLevel,!!L.terminate,W),E===0&&ks("Can't create run options."),(d==null?void 0:d.extra)!==void 0&&aa(d.extra,"",new WeakSet,(R,te)=>{let ae=qs(R,G),le=qs(te,G);b._OrtAddRunConfigEntry(E,ae,le)!==0&&ks(`Can't set a run config entry: ${R} - ${te}.`)}),[E,G]}catch(W){throw E!==0&&b._OrtReleaseRunOptions(E),G.forEach(R=>b._free(R)),W}}}),rf=be(()=>{FA(),ud(),Qn=d=>{switch(d){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${d}`)}},Sn=d=>{switch(d){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${d}`)}},ci=d=>{d.extra||(d.extra={}),d.extra.session||(d.extra.session={});let b=d.extra.session;b.use_ort_model_bytes_directly||(b.use_ort_model_bytes_directly="1"),d.executionProviders&&d.executionProviders.some(E=>(typeof E=="string"?E:E.name)==="webgpu")&&(d.enableMemPattern=!1)},ui=(d,b,E)=>{for(let G of b){let L=typeof G=="string"?G:G.name;switch(L){case"webnn":if(L="WEBNN",typeof G!="string"){let R=G==null?void 0:G.deviceType;if(R){let te=qs("deviceType",E),ae=qs(R,E);zr()._OrtAddSessionConfigEntry(d,te,ae)!==0&&ks(`Can't set a session config entry: 'deviceType' - ${R}.`)}}break;case"webgpu":if(L="JS",typeof G!="string"){let R=G;if(R!=null&&R.preferredLayout){if(R.preferredLayout!=="NCHW"&&R.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${R.preferredLayout}`);let te=qs("preferredLayout",E),ae=qs(R.preferredLayout,E);zr()._OrtAddSessionConfigEntry(d,te,ae)!==0&&ks(`Can't set a session config entry: 'preferredLayout' - ${R.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${L}`)}let W=qs(L,E);zr()._OrtAppendExecutionProvider(d,W)!==0&&ks(`Can't append execution provider: ${L}.`)}},di=d=>{let b=zr(),E=0,G=[],L=d||{};ci(L);try{let W=Qn(L.graphOptimizationLevel??"all"),R=Sn(L.executionMode??"sequential"),te=typeof L.logId=="string"?qs(L.logId,G):0,ae=L.logSeverityLevel??2;if(!Number.isInteger(ae)||ae<0||ae>4)throw new Error(`log serverity level is not valid: ${ae}`);let le=L.logVerbosityLevel??0;if(!Number.isInteger(le)||le<0||le>4)throw new Error(`log verbosity level is not valid: ${le}`);let Pe=typeof L.optimizedModelFilePath=="string"?qs(L.optimizedModelFilePath,G):0;if(E=b._OrtCreateSessionOptions(W,!!L.enableCpuMemArena,!!L.enableMemPattern,R,!!L.enableProfiling,0,te,ae,le,Pe),E===0&&ks("Can't create session options."),L.executionProviders&&ui(E,L.executionProviders,G),L.enableGraphCapture!==void 0){if(typeof L.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${L.enableGraphCapture}`);let Ge=qs("enableGraphCapture",G),$=qs(L.enableGraphCapture.toString(),G);b._OrtAddSessionConfigEntry(E,Ge,$)!==0&&ks(`Can't set a session config entry: 'enableGraphCapture' - ${L.enableGraphCapture}.`)}if(L.freeDimensionOverrides)for(let[Ge,$]of Object.entries(L.freeDimensionOverrides)){if(typeof Ge!="string")throw new Error(`free dimension override name must be a string: ${Ge}`);if(typeof $!="number"||!Number.isInteger($)||$<0)throw new Error(`free dimension override value must be a non-negative integer: ${$}`);let je=qs(Ge,G);b._OrtAddFreeDimensionOverride(E,je,$)!==0&&ks(`Can't set a free dimension override: ${Ge} - ${$}.`)}return L.extra!==void 0&&aa(L.extra,"",new WeakSet,(Ge,$)=>{let je=qs(Ge,G),Ke=qs($,G);b._OrtAddSessionConfigEntry(E,je,Ke)!==0&&ks(`Can't set a session config entry: ${Ge} - ${$}.`)}),[E,G]}catch(W){throw E!==0&&b._OrtReleaseSessionOptions(E)!==0&&ks("Can't release session options."),G.forEach(R=>b._free(R)),W}}}),Lr=be(()=>{Fa=d=>{switch(d){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${d}`)}},ai=d=>{switch(d){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${d}`)}},fi=(d,b)=>{let E=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][d],G=typeof b=="number"?b:b.reduce((L,W)=>L*W,1);return E>0?Math.ceil(G*E):void 0},Ri=d=>{switch(d){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${d}`)}},Xn=d=>{switch(d){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${d}`)}},Zn=d=>d==="float32"||d==="float16"||d==="int32"||d==="int64"||d==="uint32"||d==="uint8"||d==="bool"||d==="uint4"||d==="int4",ba=d=>d==="float32"||d==="float16"||d==="int32"||d==="int64"||d==="uint32"||d==="uint64"||d==="int8"||d==="uint8"||d==="bool"||d==="uint4"||d==="int4",Gi=d=>{switch(d){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${d}`)}}}),sf=be(()=>{gt(),Fi=async d=>{if(typeof d=="string"){let b=await fetch(d);if(!b.ok)throw new Error(`failed to load external data file: ${d}`);let E=b.headers.get("Content-Length"),G=E?parseInt(E,10):0;if(G<1073741824)return new Uint8Array(await b.arrayBuffer());{if(!b.body)throw new Error(`failed to load external data file: ${d}, no response body.`);let L,W=b.body.getReader();try{L=new ArrayBuffer(G)}catch(te){if(!(te instanceof RangeError))throw te;{let ae=Math.ceil(G/65536);L=new WebAssembly.Memory({initial:ae,maximum:ae}).buffer}}let R=0;for(;;){let{done:te,value:ae}=await W.read();if(te)break;let le=ae.byteLength;new Uint8Array(L,R,le).set(ae),R+=le}return new Uint8Array(L,0,G)}}return d instanceof Blob?new Uint8Array(await d.arrayBuffer()):d instanceof Uint8Array?d:new Uint8Array(d)}}),rl=be(()=>{Lr(),Jn=["V","I","W","E","F"],gi=(d,b)=>{console.log(`[${Jn[d]},${new Date().toISOString()}]${b}`)},pi=(d,b)=>{tn=d,Ei=b},Jr=(d,b)=>{let E=Xn(d);E>=Xn(tn)&&gi(E,typeof b=="function"?b():b)},Cs=(...d)=>{Ei&&Jr(...d)}}),af=be(()=>{Lr(),bn=(d,b)=>new(Ri(b))(d)}),fd=be(()=>{}),gd=be(()=>{rl(),fd(),Nn=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),zi=[],Bi=d=>16*Math.ceil(Number(d)/16),rn=d=>{for(let b=0;b<zi.length;b++){let E=zi[b];if(d<=E)return E}return 16*Math.ceil(d/16)},Ln=1,Qt=()=>Ln++,Be=async(d,b,E,G)=>{let L=Bi(E),W=d.device.createBuffer({size:L,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let R=d.getCommandEncoder();d.endComputePass(),R.copyBufferToBuffer(b,0,W,0,L),d.flush(),await W.mapAsync(GPUMapMode.READ);let te=W.getMappedRange();if(G){let ae=G();return ae.set(new Uint8Array(te,0,E)),ae}return new Uint8Array(te.slice(0,E))}finally{W.destroy()}},ot=class{constructor(d){this.backend=d,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[b]of Nn)zi.push(b),this.freeBuffers.set(b,[]),this.freeUniformBuffers.set(b,[]);this.sessionCount=0}upload(d,b){let E=b.buffer,G=b.byteOffset,L=b.byteLength,W=Bi(L),R=this.storageCache.get(d);if(!R)throw new Error("gpu data for uploading does not exist");if(Number(R.originalSize)!==L)throw new Error(`inconsistent data size. gpu data size=${R.originalSize}, data size=${L}`);let te=this.backend.device.createBuffer({mappedAtCreation:!0,size:W,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),ae=te.getMappedRange();new Uint8Array(ae).set(new Uint8Array(E,G,L)),te.unmap();let le=this.backend.device.createCommandEncoder();le.copyBufferToBuffer(te,0,R.gpuData.buffer,0,W),this.backend.device.queue.submit([le.finish()]),te.destroy(),Cs("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${d})`)}memcpy(d,b){let E=this.storageCache.get(d);if(!E)throw new Error("source gpu data for memcpy does not exist");let G=this.storageCache.get(b);if(!G)throw new Error("destination gpu data for memcpy does not exist");if(E.originalSize!==G.originalSize)throw new Error("inconsistent source and destination gpu data size");let L=Bi(E.originalSize),W=this.backend.getCommandEncoder();this.backend.endComputePass(),W.copyBufferToBuffer(E.gpuData.buffer,0,G.gpuData.buffer,0,L)}registerExternalBuffer(d,b,E){let G;if(E){if(G=E[0],d===E[1])return Cs("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${b}) => id=${G}, buffer is the same, skip.`),G;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else G=Qt();return this.storageCache.set(G,{gpuData:{id:G,type:0,buffer:d},originalSize:b}),Cs("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${b}) => id=${G}, registered.`),G}unregisterExternalBuffer(d){d!==void 0&&(this.storageCache.delete(d),Cs("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${d}`))}create(d,b=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let E,G=rn(d),L=(b&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,W=(b&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(L||W){let te=(L?this.freeBuffers:this.freeUniformBuffers).get(G);E=te&&te.length>0?te.pop():this.backend.device.createBuffer({size:G,usage:b})}else E=this.backend.device.createBuffer({size:G,usage:b});let R={id:Qt(),type:0,buffer:E};return this.storageCache.set(R.id,{gpuData:R,originalSize:Number(d)}),Cs("verbose",()=>`[WebGPU] GpuDataManager.create(size=${d}) => id=${R.id}`),R}get(d){var b;return(b=this.storageCache.get(d))==null?void 0:b.gpuData}release(d){let b=typeof d=="bigint"?Number(d):d,E=this.storageCache.get(b);if(!E){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Cs("verbose",()=>`[WebGPU] GpuDataManager.release(id=${b}), gpuDataId=${E.gpuData.id}`),this.storageCache.delete(b),this.buffersPending.push(E.gpuData.buffer),E.originalSize}async download(d,b){let E=this.storageCache.get(Number(d));if(!E)throw new Error("data does not exist");await Be(this.backend,E.gpuData.buffer,E.originalSize,b)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let d of this.buffersPending){let b=Nn.get(d.size);if((d.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let E=this.freeBuffers.get(d.size)||[];b===void 0||E.length>=b?d.destroy():E.push(d)}else if((d.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let E=this.freeUniformBuffers.get(d.size)||[];b===void 0||E.length>=b?d.destroy():E.push(d)}else d.destroy()}this.buffersPending=[]}else{let d=this.capturedPendingBuffers.get(this.backend.currentSessionId);d||(d=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,d));for(let b of this.buffersPending)d.push(b);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(d=>{d.forEach(b=>{b.destroy()})}),this.freeUniformBuffers.forEach(d=>{d.forEach(b=>{b.destroy()})}),this.storageCache.forEach(d=>{d.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(d=>{d.forEach(b=>{b.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(d){let b=this.capturedPendingBuffers.get(d);b&&(b.forEach(E=>{E.destroy()}),this.capturedPendingBuffers.delete(d)),this.sessionCount-=1,this.sessionCount===0&&(Cs("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(E=>{E.gpuData.buffer.destroy()}),this.storageCache=new Map)}},bt=(...d)=>new ot(...d)}),Bn=be(()=>{Tt=class{constructor(d){Object.assign(this,d)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(d=>`${this[d]}`).join(";")),this.key}},Pt=d=>new Tt(d)}),Os=be(()=>{st=class{static calcMatMulShape(d,b){return d[1]!==b[0]?void 0:[d[0],b[1]]}},pe=class{static calcShape(d,b,E=!1){let G=d.length,L=b.length;if(G===0)return b;if(L===0)return d;let W=Math.max(d.length,b.length),R=new Array(W);if(E){if(G<2||L<2)return;let te=st.calcMatMulShape([d[G-2],d[G-1]],[b[L-2],b[L-1]]);if(te===void 0)return;[R[W-2],R[W-1]]=te}for(let te=E?3:1;te<=W;te++){let ae=G-te<0?1:d[G-te],le=L-te<0?1:b[L-te];if(ae!==le&&ae>1&&le>1)return;let Pe=Math.max(ae,le);if(ae&&le)R[W-te]=Math.max(ae,le);else{if(Pe>1)return;R[W-te]=0}}return R}static isValidBroadcast(d,b){let E=d.length,G=b.length;if(E>G)return!1;for(let L=1;L<=E;L++)if(d[E-L]!==1&&d[E-L]!==b[G-L])return!1;return!0}},he=class ig{static size(b){return ig.getSizeFromDimensionRange(b,0,b.length)}static convertShape(b,E=4){let G=b.length;if(G===0)return[];let L=new Array(G),W=G-1;for(;W>=0;){if(b[W]%E==0){L[W]=b[W]/E;break}if(E%b[W]!=0)throw new Error("cannot convert shape");L[W]=1,E/=b[W],W--}for(W--;W>=0;W--)L[W]=b[W];return L}static sizeFromDimension(b,E){if(E<0||E>b.length)throw new Error(`invalid dimension of ${E} for sizeFromDimension as Tensor has ${b.length} dimensions.`);return ig.getSizeFromDimensionRange(b,E,b.length)}static sizeToDimension(b,E){if(E<0||E>b.length)throw new Error(`invalid dimension of ${E} for sizeToDimension as Tensor has ${b.length} dimensions.`);return ig.getSizeFromDimensionRange(b,0,E)}static getSizeFromDimensionRange(b,E,G){let L=1;for(let W=E;W<G;W++){if(b[W]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");L*=Number(b[W])}return L}static computeStrides(b){let E=b.length;if(E===0)return[];if(E===1)return[1];let G=new Array(E);G[E-1]=1,G[E-2]=b[E-1];for(let L=E-3;L>=0;--L)G[L]=G[L+1]*b[L+1];return G}static normalizeAxis(b,E){if(b<-E&&b>=E)throw new Error("unsupported axis for this operation.");return b<0?b+E:b}static normalizeAxes(b,E){return b.map(G=>this.normalizeAxis(G,E??b.length))}static sortBasedOnPerm(b,E){return E?E.map(G=>b[G]):b.slice().reverse()}static padShape(b,E){let G=b.length;return b.map((L,W)=>L+E[W]+E[W+G])}static areEqual(b,E){return b.length===E.length&&b.every((G,L)=>G===E[L])}},qe=class u2{static adjustPoolAttributes(b,E,G,L,W,R){if(!b&&G.length!==E.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(b)for(let te=0;te<E.length-2;te++)te>=G.length?G.push(E[te+2]):G[te]=E[te+2];for(let te=0;te<G.length;te++)if(te<L.length){if(L[te]<0)throw new Error("strides should be greater than or equal to 1")}else L.push(1);for(let te=0;te<G.length;te++)if(te<W.length){if(W[te]<0)throw new Error("dilations should be greater than or equal to 1")}else W.push(1);for(let te=0;te<2*G.length;te++)if(te<R.length){if(R[te]<0)throw new Error("pad should be greater than or equal to 1")}else R.push(0);for(let te=0;te<G.length;te++){if(G[te]<=0)throw new Error("kernel shapes need to be greater than 0");if(R[te]>=G[te]||R[te+G.length]>=G[te])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(b,E,G,L,W,R,te){if(te){if(W.length!==2*(b.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(E.length!==b.length-2)throw new Error("length of strides should be the length of data dimensions");if(L.length!==b.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let ae=0;ae<b.length-2;ae++)u2.adjustPadAndReturnShape(b[ae+(R?1:2)],E[ae],G[ae],L[ae],W,ae,ae+b.length-2,te)}}static computePoolOutputShape(b,E,G,L,W,R,te){if(E.length<=0)throw new Error("input shape must be of size greater than 0");let ae=[E[0],E[1]];return u2.computeShapeHelper(b,E,ae,G,L,W,R,te),ae}static computeConvOutputShape(b,E,G,L,W,R,te){if(b.length<=0||E.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let ae=[b[0],E[0]];return u2.computeShapeHelper(!1,b,ae,G,L,W,R,te),ae}static computeShapeHelper(b,E,G,L,W,R,te,ae){if(b)for(let le=0;le<E.length-2;le++)G.push(1);else for(let le=0;le<E.length-2;le++)G.push(u2.adjustPadAndReturnShape(E[le+2],L[le],W[le],R[le],te,le,le+E.length-2,ae))}static adjustPadAndReturnShape(b,E,G,L,W,R,te,ae){let le=G*(L-1)+1;if(!ae||ae==="NOTSET")return Math.floor((b+W[R]+W[te]-le)/E+1);switch(ae){case"VALID":return W[R]=0,W[te]=0,Math.floor((b-le)/E+1);case"SAME_LOWER":case"SAME_UPPER":if(G!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let Pe=((b+E-1)/E-1)*E+L-b;return W[R]=Math.floor(ae==="SAME_LOWER"?(Pe+1)/2:Pe/2),W[te]=Pe-W[R],Math.floor((b+Pe-L)/E+1)}default:throw new Error("Unsupported AutoPad type")}}},it=class{static getShapeOfGemmResult(d,b,E,G,L){if(d.length!==2||E.length!==2)throw new Error("shape need to be of size 2");let W,R,te;b?(W=d[1],R=d[0]):(W=d[0],R=d[1]);let ae=-1;if(G?(te=E[0],ae=1):(te=E[1],ae=0),E[ae]!==R)throw new Error("dimension mismatch");if(W<=0||te<=0||R<=0)throw new Error("invalid shape specified");if(L&&!pe.isValidBroadcast(L,[W,te]))throw new Error("gemm: invalid bias shape for broadcast");return[W,te,R]}},kt=-34028234663852886e22,Ht=34028234663852886e22}),Ws=be(()=>{Lr(),Os(),ir=64,fr=(d,b)=>{if(b===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(d)){case 10:return b>1?`vec${b}<f16>`:"f16";case 1:return b>1?`vec${b}<f32>`:"f32";case 6:return b>1?`vec${b}<i32>`:"i32";case 12:return b>1?`vec${b}<u32>`:"u32";case 7:if(b>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(b>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(b!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${d}`)}},nr=(d,b=1)=>{let E=fr(d,b);return typeof E=="string"?E:E[0]},Yt=(d,b=1)=>{let E=fr(d,b);return typeof E=="string"?E:E[1]},Ar=(...d)=>{let b=[];return d.forEach(E=>{E.length!==0&&b.push({type:12,data:E},{type:12,data:he.computeStrides(E)})}),b},Wr=d=>d%4==0?4:d%2==0?2:1,xs=(d="f32",b,E="0")=>b&&b!==1?`vec${b}<${d}>(${E})`:`${d}(${E})`,Ys=(d,b,E)=>d==="f32"?E:b===1?`f32(${E})`:`vec${b}<f32>(${E})`,as=(d,b)=>b===4?`(${d}.x + ${d}.y + ${d}.z + ${d}.w)`:b===2?`(${d}.x + ${d}.y)`:b===3?`(${d}.x + ${d}.y + ${d}.z)`:d,kr=(d,b,E,G)=>d.startsWith("uniforms.")&&E>4?typeof b=="string"?G==="f16"?`${d}[(${b}) / 8][(${b}) % 8 / 4][(${b}) % 8 % 4]`:`${d}[(${b}) / 4][(${b}) % 4]`:G==="f16"?`${d}[${Math.floor(b/8)}][${Math.floor(b%8/4)}][${b%8%4}]`:`${d}[${Math.floor(b/4)}][${b%4}]`:E>1?`${d}[${b}]`:d,Ns=(d,b,E,G,L)=>{let W=typeof E=="number",R=W?E:E.length,te=[...new Array(R).keys()],ae=R<2?"u32":R<=4?`vec${R}<u32>`:`array<u32, ${R}>`,le=fr(b,L),Pe=typeof le=="string"?le:le[1],Ge=typeof le=="string"?le:le[0],$={indices:ae,value:Pe,storage:Ge,tensor:b},je=tr=>typeof tr=="string"?tr:`${tr}u`,Ke={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},nt=W?"uniforms.":"",tt=`${nt}${d}_shape`,dt=`${nt}${d}_strides`,Ct="";for(let tr=0;tr<R-1;tr++)Ct+=`
    let dim${tr} = current / ${kr(dt,tr,R)};
    let rest${tr} = current % ${kr(dt,tr,R)};
    indices[${tr}] = dim${tr};
    current = rest${tr};
    `;Ct+=`indices[${R-1}] = current;`;let Et=R<2?"":`
  fn o2i_${d}(offset: u32) -> ${$.indices} {
    var indices: ${$.indices};
    var current = offset;
    ${Ct}
    return indices;
  }`,Ot=[];if(R>=2)for(let tr=R-1;tr>=0;tr--)Ot.push(`${kr(dt,tr,R)} * (indices[${tr}])`);let Ft=R<2?"":`
  fn i2o_${d}(indices: ${$.indices}) -> u32 {
    return ${Ot.join("+")};
  }`,Lt=(...tr)=>R===0?"0u":`${$.indices}(${tr.map(je).join(",")})`,yr=(tr,$r)=>R<2?`${tr}`:`${kr(tr,$r,R)}`,Or={},gs=(tr,$r)=>(()=>{if($.storage===$.value)return`${d}[${tr}]=${$r};`;if($.storage==="vec2<u32>"&&$.value==="i32")return`${d}[${tr}]=vec2<u32>(u32(${$r}), select(0u, 0xFFFFFFFFu, ${$r} < 0));`;if($.storage==="vec2<u32>"&&$.value==="u32")return`${d}[${tr}]=vec2<u32>(u32(${$r}), 0u);`;if($.storage==="u32"&&$.value==="vec4<bool>")return`${d}[${tr}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${$r}));`;throw new Error(`not supported combination of storage type ${$.storage} and value type ${$.value} yet`)})(),ps=tr=>(()=>{if($.storage===$.value)return`${d}[${tr}]`;if($.storage==="vec2<u32>"&&$.value==="i32")return`i32(${d}[${tr}].x)`;if($.storage==="vec2<u32>"&&$.value==="u32")return`u32(${d}[${tr}].x)`;if($.storage==="u32"&&$.value==="vec4<bool>")return`vec4<bool>(bool(${d}[${tr}] & 0xFFu), bool(${d}[${tr}] & 0xFF00u), bool(${d}[${tr}] & 0xFF0000u), bool(${d}[${tr}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${$.storage} and value type ${$.value} yet`)})(),pa=R<2?"":`
  fn get_${d}ByIndices(indices: ${$.indices}) -> ${Pe} {
    return ${ps(`i2o_${d}(indices)`)};
  }`,hs=R<2?"":(()=>{let tr=te.map(Yr=>`d${Yr}: u32`).join(", "),$r=te.map(Yr=>`d${Yr}`).join(", ");return`
  fn get_${d}(${tr}) -> ${Pe} {
    return get_${d}ByIndices(${Lt($r)});
  }`})(),Vs=R<2?"":`
  fn set_${d}ByIndices(indices: ${$.indices}, value: ${Pe}) {
    ${gs(`i2o_${d}(indices)`,"value")}
  }`,Ss=R<2?"":(()=>{let tr=te.map(Yr=>`d${Yr}: u32`).join(", "),$r=te.map(Yr=>`d${Yr}`).join(", ");return`
  fn set_${d}(${tr}, value: ${Pe}) {
    set_${d}ByIndices(${Lt($r)}, value);
  }`})();return{impl:()=>{let tr=[],$r=!1;return Ke.offsetToIndices&&(tr.push(Et),$r=!0),Ke.indicesToOffset&&(tr.push(Ft),$r=!0),Ke.broadcastedIndicesToOffset&&(Object.values(Or).forEach(Yr=>tr.push(Yr)),$r=!0),Ke.set&&(tr.push(Ss),$r=!0),Ke.setByIndices&&(tr.push(Vs),$r=!0),Ke.get&&(tr.push(hs),$r=!0),Ke.getByIndices&&(tr.push(pa),$r=!0),!W&&$r&&tr.unshift(`const ${tt} = ${$.indices}(${E.join(",")});`,`const ${dt} = ${$.indices}(${he.computeStrides(E).join(",")});`),tr.join(`
`)},type:$,offsetToIndices:tr=>(Ke.offsetToIndices=!0,R<2?tr:`o2i_${d}(${tr})`),indicesToOffset:tr=>(Ke.indicesToOffset=!0,R<2?tr:`i2o_${d}(${tr})`),broadcastedIndicesToOffset:(tr,$r)=>{Ke.broadcastedIndicesToOffset=!0;let Yr=`${$r.name}broadcastedIndicesTo${d}Offset`;if(Yr in Or)return`${Yr}(${tr})`;let qr=[];for(let Ta=R-1;Ta>=0;Ta--){let vi=$r.indicesGet("outputIndices",Ta+$r.rank-R);qr.push(`${yr(dt,Ta)} * (${vi} % ${yr(tt,Ta)})`)}return Or[Yr]=`fn ${Yr}(outputIndices: ${$r.type.indices}) -> u32 {
             return ${qr.length>0?qr.join("+"):"0u"};
           }`,`${Yr}(${tr})`},indices:Lt,indicesGet:yr,indicesSet:(tr,$r,Yr)=>R<2?`${tr}=${Yr};`:`${kr(tr,$r,R)}=${Yr};`,set:(...tr)=>{if(tr.length!==R+1)throw new Error(`indices length must be ${R}`);let $r=tr[R];if(typeof $r!="string")throw new Error("value must be string");let Yr=tr.slice(0,R).map(je).join(",");return R===0?gs("0u",$r):R===1?gs(Yr[0],$r):(Ke.set=!0,Ke.setByIndices=!0,Ke.indicesToOffset=!0,`set_${d}(${Yr}, ${$r})`)},setByOffset:gs,setByIndices:(tr,$r)=>R<2?gs(tr,$r):(Ke.setByIndices=!0,Ke.indicesToOffset=!0,`set_${d}ByIndices(${tr}, ${$r});`),get:(...tr)=>{if(tr.length!==R)throw new Error(`indices length must be ${R}`);let $r=tr.map(je).join(",");return R===0?ps("0u"):R===1?ps($r[0]):(Ke.get=!0,Ke.getByIndices=!0,Ke.indicesToOffset=!0,`get_${d}(${$r})`)},getByOffset:ps,getByIndices:tr=>R<2?ps(tr):(Ke.getByIndices=!0,Ke.indicesToOffset=!0,`get_${d}ByIndices(${tr})`),usage:G,name:d,strides:dt,shape:tt,rank:R}},qt=(d,b,E,G=1)=>Ns(d,b,E,"input",G),Tr=(d,b,E,G=1)=>Ns(d,b,E,"output",G),ha=(d,b,E)=>Ns(d,b,E,"atomicOutput",1),xa=(d,b,E,G=1)=>Ns(d,b,E,"internal",G),Gs=class{constructor(d,b){this.normalizedDispatchGroup=d,this.limits=b,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(d){return`if (global_idx >= ${typeof d=="number"?`${d}u`:d}) { return; }`}mainStart(d=ir){let b=typeof d=="number"?d:d[0],E=typeof d=="number"?1:d[1],G=typeof d=="number"?1:d[2];if(b>this.limits.maxComputeWorkgroupSizeX||E>this.limits.maxComputeWorkgroupSizeY||G>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${b}, ${E}, ${G}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(b*E*G>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${b}, ${E}, ${G}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let L=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1;return`@compute @workgroup_size(${b}, ${E}, ${G})
  fn main(${L?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`}) {
    ${L?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${b*E*G}u + local_idx;`}
  `}appendVariableUniforms(d){d.rank!==0&&(d.shape.startsWith("uniforms.")&&this.uniforms.push({name:d.shape.replace("uniforms.",""),type:"u32",length:d.rank}),d.strides.startsWith("uniforms.")&&this.uniforms.push({name:d.strides.replace("uniforms.",""),type:"u32",length:d.rank}))}declareVariable(d,b){if(d.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(d),this.appendVariableUniforms(d);let E=d.usage==="input"?"read":"read_write",G=d.usage==="atomicOutput"?"atomic<i32>":d.type.storage;return`@group(0) @binding(${b}) var<storage, ${E}> ${d.name}: array<${G}>;`}declareVariables(...d){return d.map(b=>this.declareVariable(b,this.variableIndex++)).join(`
`)}registerInternalVariable(d){if(d.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(d),this.appendVariableUniforms(d)}registerInternalVariables(...d){return d.forEach(b=>this.registerInternalVariable(b)),this}registerUniform(d,b,E=1){return this.uniforms.push({name:d,type:b,length:E}),this}registerUniforms(d){return this.uniforms=this.uniforms.concat(d),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let d=[];for(let{name:b,type:E,length:G}of this.uniforms)if(G&&G>4)E==="f16"?d.push(`@align(16) ${b}:array<mat2x4<${E}>, ${Math.ceil(G/8)}>`):d.push(`${b}:array<vec4<${E}>, ${Math.ceil(G/4)}>`);else{let L=G==null||G===1?E:`vec${G}<${E}>`;d.push(`${b}:${L}`)}return`
      struct Uniforms { ${d.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(d=>d.impl()).join(`
`)+this.internalVariables.map(d=>d.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let d=b=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(b)];return this.uniforms.map(b=>[d(b.type),b.length??1])}},Fs=(d,b)=>new Gs(d,b)}),sl=be(()=>{Lr(),Os(),Bn(),Ws(),Ls=(d,b)=>{if(!d||d.length!==1)throw new Error("Transpose requires 1 input.");if(b.length!==0&&b.length!==d[0].dims.length)throw new Error(`perm size ${b.length} does not match input rank ${d[0].dims.length}`)},Ms=(d,b)=>b.length!==0?b:[...new Array(d).keys()].reverse(),fa=(d,b)=>he.sortBasedOnPerm(d,Ms(d.length,b)),Ba=(d,b,E,G)=>{let L=`fn perm(i: ${G.type.indices}) -> ${E.type.indices} {
    var a: ${E.type.indices};`;for(let W=0;W<b;++W)L+=`a[${d[W]}]=i[${W}];`;return L+"return a;}"},Ma=(d,b)=>{let E=[],G=[];for(let L=0;L<d.length;++L)d[L]!==1&&E.push(d[L]),d[b[L]]!==1&&G.push(b[L]);return{newShape:E,newPerm:G}},Ca=(d,b)=>{let E=0;for(let G=0;G<d.length;++G)if(b[d[G]]!==1){if(d[G]<E)return!1;E=d[G]}return!0},na=(d,b)=>{let E,G=d.dataType,L=d.dims.length,W=Ms(L,b),R=fa(d.dims,W),te=d.dims,ae=R;if(L<2||Ca(W,d.dims))return E=je=>{let Ke=qt("input",G,te,4),nt=Tr("output",G,ae,4);return`
  ${je.registerUniform("output_size","u32").declareVariables(Ke,nt)}
  ${je.mainStart()}
    ${je.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let je=he.size(R);return{outputs:[{dims:R,dataType:d.dataType}],dispatchGroup:{x:Math.ceil(je/64/4)},programUniforms:[{type:12,data:Math.ceil(je/4)}]}},getShaderSource:E};let{newShape:le,newPerm:Pe}=Ma(d.dims,W),Ge=he.areEqual(Pe,[2,3,1]),$=he.areEqual(Pe,[3,1,2]);if(le.length===2||Ge||$){te=Ge?[le[0],le[1]*le[2]]:$?[le[0]*le[1],le[2]]:le,ae=[te[1],te[0]];let je=16;return E=Ke=>{let nt=qt("a",G,te.length),tt=Tr("output",G,ae.length);return`
  ${Ke.registerUniform("output_size","u32").declareVariables(nt,tt)}
  var<workgroup> tile : array<array<${tt.type.value}, ${je+1}>, ${je}>;
  ${Ke.mainStart([je,je,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${je} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${je}u + local_id.x;
    let input_row = workgroup_id_x * ${je}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${nt.getByIndices(`${nt.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${je}u + local_id.x;
    let output_row = workgroup_id_y * ${je}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${tt.setByIndices(`${tt.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let Ke=he.size(R);return{outputs:[{dims:R,dataType:d.dataType}],dispatchGroup:{x:Math.ceil(ae[1]/je),y:Math.ceil(ae[0]/je)},programUniforms:[{type:12,data:Ke},...Ar(te,ae)]}},getShaderSource:E}}return E=je=>{let Ke=qt("a",G,te.length),nt=Tr("output",G,ae.length);return`
  ${je.registerUniform("output_size","u32").declareVariables(Ke,nt)}

  ${Ba(W,L,Ke,nt)}

  ${je.mainStart()}
    ${je.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${nt.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${nt.setByOffset("global_idx",Ke.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${b}`,inputDependencies:["rank"]},getRunData:()=>{let je=he.size(R);return{outputs:[{dims:R,dataType:d.dataType}],dispatchGroup:{x:Math.ceil(je/64)},programUniforms:[{type:12,data:je},...Ar(te,ae)]}},getShaderSource:E}},za=(d,b)=>{Ls(d.inputs,b.perm),d.compute(na(d.inputs[0],b.perm))},Hr=d=>Pt({perm:d.perm})}),pd=be(()=>{Lr(),Os(),Ws(),h0(),sl(),la={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Rn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Mo={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ol={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},RA=(d,b)=>{let E=[];for(let G=b-d;G<b;++G)E.push(G);return E},Al=(d,b)=>{let E=[],G=d.length;for(let W=0;W<G;W++)b.indexOf(W)===-1&&E.push(d[W]);let L=b.map(W=>d[W]);return[E,L]},hi=(d,b)=>{let E=d.length+b.length,G=[],L=0;for(let W=0;W<E;W++)b.indexOf(W)===-1?G.push(d[L++]):G.push(1);return G},uo=(d,b)=>{for(let E=0;E<d.length;++E)if(d[d.length-E-1]!==b-1-E)return!1;return!0},ll=(d,b)=>{let E=[];if(!uo(d,b)){for(let G=0;G<b;++G)d.indexOf(G)===-1&&E.push(G);d.forEach(G=>E.push(G))}return E},fo=(d,b,E,G,L,W,R)=>{let te=E[0].dims,ae=he.size(W),le=he.size(R),Pe=qt("_A",E[0].dataType,te),Ge=Tr("output",L,W),$=64;ae===1&&($=256);let je=`
          var<workgroup> aBestValues : array<f32, ${$}>;
       `;return{name:d,shaderCache:{hint:`${b};${$}`,inputDependencies:["type"]},getShaderSource:Ke=>`
        ${Ke.registerUniform("reduceSize","u32").declareVariables(Pe,Ge)}
        ${je}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${Ke.mainStart($)}

          let outputIndex = global_idx / ${$};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Mo[G]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${$}) {
           let candidate = f32(${Pe.getByOffset("offset + k")});
           bestValue = ${la[G]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${$}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Rn[G]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${Ge.setByOffset("outputIndex",G==="mean"?`${Ge.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${Ge.type.storage}(${ol[G]})`)};
         }
        }`,getRunData:()=>({outputs:[{dims:W,dataType:L}],dispatchGroup:{x:ae},programUniforms:[{type:12,data:le}]})}},ni=(d,b,E,G)=>{let L=d.inputs.length===1?E:go(d.inputs,E),W=L.axes;W.length===0&&!L.noopWithEmptyAxes&&(W=d.inputs[0].dims.map((je,Ke)=>Ke));let R=he.normalizeAxes(W,d.inputs[0].dims.length),te=R,ae=d.inputs[0],le=ll(te,d.inputs[0].dims.length);le.length>0&&(ae=d.compute(na(d.inputs[0],le),{inputs:[0],outputs:[-1]})[0],te=RA(te.length,ae.dims.length));let[Pe,Ge]=Al(ae.dims,te),$=Pe;L.keepDims&&($=hi(Pe,R)),d.compute(fo(b,L.cacheKey,[ae],G,d.inputs[0].dataType,$,Ge),{inputs:[ae]})},dn=(d,b)=>{ni(d,"ReduceMeanShared",b,"mean")},Qr=(d,b)=>{ni(d,"ReduceL1Shared",b,"l1")},$n=(d,b)=>{ni(d,"ReduceL2Shared",b,"l2")},jA=(d,b)=>{ni(d,"ReduceLogSumExpShared",b,"logSumExp")},Eo=(d,b)=>{ni(d,"ReduceMaxShared",b,"max")},VA=(d,b)=>{ni(d,"ReduceMinShared",b,"min")},WA=(d,b)=>{ni(d,"ReduceProdShared",b,"prod")},cl=(d,b)=>{ni(d,"ReduceSumShared",b,"sum")},oA=(d,b)=>{ni(d,"ReduceSumSquareShared",b,"sumSquare")},Kl=(d,b)=>{ni(d,"ReduceLogSumShared",b,"logSum")}}),h0=be(()=>{Lr(),Os(),Bn(),Ws(),pd(),ii=d=>{if(!d||d.length===0||d.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(d.length===2&&d[1].dims.length!==1)throw new Error("Invalid axes input dims.")},ca=d=>["","",`var value = ${d.getByIndices("input_indices")};`,""],Ro=(d,b,E,G,L,W,R=!1,te=!1)=>{let ae=[],le=E[0].dims,Pe=le.length,Ge=he.normalizeAxes(L,Pe),$=!te&&Ge.length===0;le.forEach((nt,tt)=>{$||Ge.indexOf(tt)>=0?R&&ae.push(1):ae.push(nt)});let je=ae.length,Ke=he.size(ae);return{name:d,shaderCache:b,getShaderSource:nt=>{let tt=[],dt=qt("_A",E[0].dataType,Pe),Ct=Tr("output",W,je),Et=G(dt,Ct,Ge),Ot=Et[2];for(let Ft=0,Lt=0;Ft<Pe;Ft++)$||Ge.indexOf(Ft)>=0?(R&&Lt++,Ot=`for(var j${Ft}: u32 = 0; j${Ft} < ${le[Ft]}; j${Ft}++) {
                  ${Et[2].includes("last_index")?`let last_index = j${Ft};`:""}
                  ${dt.indicesSet("input_indices",Ft,`j${Ft}`)}
                  ${Ot}
                }`):(tt.push(`${dt.indicesSet("input_indices",Ft,Ct.indicesGet("output_indices",Lt))};`),Lt++);return`

        ${nt.registerUniform("output_size","u32").declareVariables(dt,Ct)}

        ${nt.mainStart()}
          ${nt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${dt.type.indices};
          let output_indices = ${Ct.offsetToIndices("global_idx")};

          ${tt.join(`
`)}
          ${Et[0]}       // init ops for reduce max/min
          ${Et[1]}
          ${Ot}
          ${Et[3]}
          ${Et.length===4?Ct.setByOffset("global_idx","value"):Et.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:ae,dataType:W}],dispatchGroup:{x:Math.ceil(Ke/64)},programUniforms:[{type:12,data:Ke},...Ar(le,ae)]})}},go=(d,b)=>{let E=[];return d[1].dims[0]>0&&d[1].getBigInt64Array().forEach(G=>E.push(Number(G))),Pt({axes:E,keepDims:b.keepDims,noopWithEmptyAxes:b.noopWithEmptyAxes})},jn=(d,b,E,G)=>{let L=d.inputs,W=L.length===1?E:go(L,E);d.compute(Ro(b,{hint:W.cacheKey,inputDependencies:["rank"]},[L[0]],W.noopWithEmptyAxes&&W.axes.length===0?ca:G,W.axes,L[0].dataType,W.keepDims,W.noopWithEmptyAxes),{inputs:[0]})},po=(d,b)=>{ii(d.inputs),jn(d,"ReduceLogSum",b,(E,G)=>[`var value = ${G.type.storage}(0);`,"",`value += ${E.getByIndices("input_indices")};`,"value = log(value);"])},ji=(d,b)=>{ii(d.inputs),jn(d,"ReduceL1",b,(E,G)=>[`var value = ${G.type.storage}(0);`,"",`value += abs(${E.getByIndices("input_indices")});`,""])},AA=(d,b)=>{ii(d.inputs),jn(d,"ReduceL2",b,(E,G)=>[`var t = ${G.type.value}(0); var value = ${G.type.value}(0);`,"",`t = ${E.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},lA=(d,b)=>{ii(d.inputs),jn(d,"ReduceLogSumExp",b,(E,G)=>[`var value = ${G.type.storage}(0);`,"",`value += exp(${E.getByIndices("input_indices")});`,"value = log(value);"])},ao=(d,b)=>{ii(d.inputs),jn(d,"ReduceMax",b,(E,G,L)=>{let W=[];for(let R=0;R<E.rank;R++)(L.indexOf(R)>=0||L.length===0)&&W.push(E.indicesSet("input_indices",R,0));return[`${W.join(`
`)}`,`var value = ${E.getByIndices("input_indices")};`,`value = max(value, ${E.getByIndices("input_indices")});`,""]})},UA=(d,b)=>{ii(d.inputs),jn(d,"ReduceMean",b,(E,G,L)=>{let W=1;for(let R=0;R<E.rank;R++)(L.indexOf(R)>=0||L.length===0)&&(W*=d.inputs[0].dims[R]);return["var sum = f32(0);","",`sum += f32(${E.getByIndices("input_indices")});`,`let value = ${G.type.value}(sum / ${W});`]})},jo=(d,b)=>{ii(d.inputs),jn(d,"ReduceMin",b,(E,G,L)=>{let W=[];for(let R=0;R<E.rank;R++)(L.indexOf(R)>=0||L.length===0)&&W.push(`input_indices[${R}] = 0;`);return[`${W.join(`
`)}`,`var value = ${E.getByIndices("input_indices")};`,`value = min(value, ${E.getByIndices("input_indices")});`,""]})},Vo=(d,b)=>{ii(d.inputs),jn(d,"ReduceProd",b,(E,G)=>[`var value = ${G.type.storage}(1);`,"",`value *= ${E.getByIndices("input_indices")};`,""])},mr=(d,b)=>{ii(d.inputs),jn(d,"ReduceSum",b,(E,G)=>[`var value = ${G.type.storage}(0);`,"",`value += ${E.getByIndices("input_indices")};`,""])},Ti=(d,b)=>{ii(d.inputs),jn(d,"ReduceSumSquare",b,(E,G)=>[`var t = ${G.type.value}(0); var value = ${G.type.value}(0);`,"",`t = ${E.getByIndices("input_indices")}; value += t * t;`,""])},vr=(d,b,E)=>{if(b.length===0)return E;let G=1,L=1;for(let W=0;W<b.length;W++)b.indexOf(W)===-1?G*=d[W]:L*=d[W];return L<32&&G>1024},cA=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?UA(d,b):dn(d,b)},HA=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?ji(d,b):Qr(d,b)},Vn=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?AA(d,b):$n(d,b)},mi=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?lA(d,b):jA(d,b)},no=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?ao(d,b):Eo(d,b)},ho=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?jo(d,b):VA(d,b)},YA=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?Vo(d,b):WA(d,b)},Xa=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?mr(d,b):cl(d,b)},ul=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?Ti(d,b):oA(d,b)},dl=(d,b)=>{vr(d.inputs[0].dims,b.axes,b.noopWithEmptyAxes)?po(d,b):Kl(d,b)}}),Gf=be(()=>{Lr(),Bn(),h0(),io=d=>{if(!d||d.length===0||d.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(d[0].dataType!==1)throw new Error("Invalid input type.")},oo=(d,b)=>{io(d.inputs),d.compute(Ro("ArgMin",{hint:b.cacheKey,inputDependencies:["rank"]},[d.inputs[0]],(E,G,L)=>{let W=[];for(let R=0;R<E.rank;R++)(L.indexOf(R)>=0||L.length===0)&&W.push(`input_indices[${R}] = 0;`);return[`${W.join(`
`)}`,`var value = ${E.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${E.getByIndices("input_indices")} ${b.selectLastIndex>0?"<=":"<"} value) {
         value = ${E.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",G.setByOffset("global_idx","best_index")]},[b.axis],7,b.keepDims),{inputs:[0]})},fl=(d,b)=>{io(d.inputs),d.compute(Ro("argMax",{hint:b.cacheKey,inputDependencies:["rank"]},[d.inputs[0]],(E,G,L)=>{let W=[];for(let R=0;R<E.rank;R++)(L.indexOf(R)>=0||L.length===0)&&W.push(`input_indices[${R}] = 0;`);return[`${W.join(`
`)}`,`var value = ${E.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${E.getByIndices("input_indices")} ${b.selectLastIndex>0?">=":">"} value) {
         value = ${E.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",G.setByOffset("global_idx","best_index")]},[b.axis],7,b.keepDims),{inputs:[0]})},uA=d=>Pt(d)}),Pc=be(()=>{Lr(),Os(),fd(),Ws(),Bo=(d,b)=>{let E=d[0],G=d[1],L=d[2],W=d[3],R=d[4],te=d[5];if(R&&te)throw new Error("Attention cannot have both past and attention_bias");if(E.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let ae=E.dims[0],le=E.dims[1],Pe=E.dims[2];if(L.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(G.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(G.dims[0]!==Pe)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(L.dims[0]!==G.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let Ge=L.dims[0]/3,$=Ge,je=$;if(b.qkvHiddenSizes.length>0){if(b.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let dt of b.qkvHiddenSizes)if(dt%b.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");Ge=b.qkvHiddenSizes[0],$=b.qkvHiddenSizes[1],je=b.qkvHiddenSizes[2]}let Ke=le;if(Ge!==$)throw new Error("qkv_hidden_sizes first element should be same as the second");if(L.dims[0]!==Ge+$+je)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let nt=0;if(R){if($!==je)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(R.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(R.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(R.dims[1]!==ae)throw new Error('Input "past" second dimension must be batch_size');if(R.dims[2]!==b.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(R.dims[4]!==$/b.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');b.pastPresentShareBuffer||(nt=R.dims[3])}let tt=Ke+nt;if(W)throw new Error("Mask not supported");if(R)throw new Error("past is not supported");if(te){if(te.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(te.dims[0]!==ae||te.dims[1]!==b.numHeads||te.dims[2]!==le||te.dims[3]!==tt)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:ae,sequenceLength:le,pastSequenceLength:nt,kvSequenceLength:Ke,totalSequenceLength:tt,maxSequenceLength:-1,inputHiddenSize:Pe,hiddenSize:Ge,vHiddenSize:je,headSize:Math.floor(Ge/b.numHeads),vHeadSize:Math.floor(je/b.numHeads),numHeads:b.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:b.maskFilterValue,maskType:0,scale:b.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},_r=(d,b,E)=>b&&d?`
      let total_sequence_length_input = u32(${b.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${d==null?void 0:d.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${E?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,ei=(d,b,E,G,L,W,R,te)=>{let ae=Wr(R?1:W),le=64,Pe=W/ae;Pe<le&&(le=32);let Ge=Math.ceil(W/ae/le),$=[{type:12,data:b},{type:12,data:E},{type:12,data:G},{type:12,data:L},{type:12,data:Pe},{type:12,data:Ge}],je=nr(d.dataType,ae),Ke=Yt(1,ae),nt=["type"];return R&&nt.push("type"),te&&nt.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${le};${je};${ae}`,inputDependencies:nt},getShaderSource:tt=>{let dt=Tr("x",d.dataType,d.dims,ae),Ct=[dt],Et=R?qt("seq_lens",R.dataType,R.dims):void 0;Et&&Ct.push(Et);let Ot=te?qt("total_sequence_length_input",te.dataType,te.dims):void 0;Ot&&Ct.push(Ot);let Ft=Yt(d.dataType);return`
  var<workgroup> thread_max: array<f32, ${le}>;
  var<workgroup> thread_sum: array<f32, ${le}>;
  ${tt.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...Ct)}
  ${tt.mainStart([le,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${_r(Et,Ot,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${le}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${R?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${Ke}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${Ke}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(ae){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${ae}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${le}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${Ke}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${Ke}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(ae){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${ae}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${le}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${dt.type.value}(${Ft}(1.0) / ${Ft}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${Ke}(x[offset + i]);
        x[offset + i] = ${dt.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${R?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${dt.type.value}(${Ft}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(W/le),y:L,z:b*E},programUniforms:$})}},dA=(d,b,E,G,L,W,R,te,ae)=>{let le=R+W.kvSequenceLength,Pe=[W.batchSize,W.numHeads,W.sequenceLength,le],Ge=d>1&&G,$=W.kvNumHeads?W.kvNumHeads:W.numHeads,je=Ge?[W.batchSize,$,le,W.headSize]:void 0,Ke=W.nReps?W.nReps:1,nt=W.scale===0?1/Math.sqrt(W.headSize):W.scale,tt=Wr(W.headSize),dt=W.headSize/tt,Ct=12,Et={x:Math.ceil(le/Ct),y:Math.ceil(W.sequenceLength/Ct),z:W.batchSize*W.numHeads},Ot=[{type:12,data:W.sequenceLength},{type:12,data:dt},{type:12,data:le},{type:12,data:W.numHeads},{type:12,data:W.headSize},{type:1,data:nt},{type:12,data:R},{type:12,data:W.kvSequenceLength},{type:12,data:Ke}],Ft=Ge&&G&&he.size(G.dims)>0,Lt=["type","type"];Ft&&Lt.push("type"),L&&Lt.push("type"),te&&Lt.push("type"),ae&&Lt.push("type");let yr=[{dims:Pe,dataType:b.dataType,gpuDataType:0}];return Ge&&yr.push({dims:je,dataType:b.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${tt};${L!==void 0};${G!==void 0};${d}`,inputDependencies:Lt},getRunData:()=>({outputs:yr,dispatchGroup:Et,programUniforms:Ot}),getShaderSource:Or=>{let gs=qt("q",b.dataType,b.dims,tt),ps=[gs,qt("key",E.dataType,E.dims,tt)];if(Ft){let $r=qt("past_key",G.dataType,G.dims,tt);ps.push($r)}L&&ps.push(qt("attention_bias",L.dataType,L.dims));let pa=te?qt("seq_lens",te.dataType,te.dims):void 0;pa&&ps.push(pa);let hs=ae?qt("total_sequence_length_input",ae.dataType,ae.dims):void 0;hs&&ps.push(hs);let Vs=Tr("output",b.dataType,Pe),Ss=[Vs];Ge&&Ss.push(Tr("present_key",b.dataType,je,tt));let tr=Yt(1,tt);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${gs.type.storage}, 144>;
  var<workgroup> tileK: array<${gs.type.storage}, 144>;
  ${Or.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...ps,...Ss)}
  ${Or.mainStart([Ct,Ct,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${Ke===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${Ke===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${_r(pa,hs,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${Ft&&Ge?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${Ge?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${tr}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Ft&&Ge?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${Ge?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${tr}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(tt){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${tt}`)}})()};
        output[outputIdx] = ${Vs.type.value} (sum * uniforms.alpha) + ${L?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},To=(d,b,E,G,L,W,R=void 0,te=void 0)=>{let ae=W+L.kvSequenceLength,le=L.nReps?L.nReps:1,Pe=L.vHiddenSize*le,Ge=d>1&&G,$=L.kvNumHeads?L.kvNumHeads:L.numHeads,je=Ge?[L.batchSize,$,ae,L.headSize]:void 0,Ke=[L.batchSize,L.sequenceLength,Pe],nt=12,tt={x:Math.ceil(L.vHeadSize/nt),y:Math.ceil(L.sequenceLength/nt),z:L.batchSize*L.numHeads},dt=[{type:12,data:L.sequenceLength},{type:12,data:ae},{type:12,data:L.vHeadSize},{type:12,data:L.numHeads},{type:12,data:L.headSize},{type:12,data:Pe},{type:12,data:W},{type:12,data:L.kvSequenceLength},{type:12,data:le}],Ct=Ge&&G&&he.size(G.dims)>0,Et=["type","type"];Ct&&Et.push("type"),R&&Et.push("type"),te&&Et.push("type");let Ot=[{dims:Ke,dataType:b.dataType,gpuDataType:0}];return Ge&&Ot.push({dims:je,dataType:b.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${G!==void 0};${d}`,inputDependencies:Et},getRunData:()=>({outputs:Ot,dispatchGroup:tt,programUniforms:dt}),getShaderSource:Ft=>{let Lt=qt("probs",b.dataType,b.dims),yr=[Lt,qt("v",E.dataType,E.dims)];Ct&&yr.push(qt("past_value",G.dataType,G.dims));let Or=R?qt("seq_lens",R.dataType,R.dims):void 0;R&&yr.push(Or);let gs=te?qt("total_sequence_length_input",te.dataType,te.dims):void 0;te&&yr.push(gs);let ps=[Tr("output",b.dataType,Ke)];return Ge&&ps.push(Tr("present_value",b.dataType,je)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${Lt.type.value}, 144>;
  var<workgroup> tileV: array<${Lt.type.value}, 144>;
  ${Ft.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...yr,...ps)}
  ${Ft.mainStart([nt,nt,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${le===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${le===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${_r(Or,gs,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${Ct&&Ge?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${Ge?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Lt.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${Ct&&Ge?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${Ge?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},Yi=(d,b,E,G,L,W,R,te,ae,le,Pe=void 0,Ge=void 0)=>{let $=Math.min(d.outputCount,1+(R?1:0)+(te?1:0)),je=$>1?le.pastSequenceLength:0,Ke=je+le.kvSequenceLength,nt=ae&&he.size(ae.dims)>0?ae:void 0,tt=[b,E];$>1&&R&&he.size(R.dims)>0&&tt.push(R),nt&&tt.push(nt),Pe&&tt.push(Pe),Ge&&tt.push(Ge);let dt=d.compute(dA($,b,E,R,nt,le,je,Pe,Ge),{inputs:tt,outputs:$>1?[-1,1]:[-1]})[0];d.compute(ei(dt,le.batchSize,le.numHeads,je,le.sequenceLength,Ke,Pe,Ge),{inputs:Pe&&Ge?[dt,Pe,Ge]:[dt],outputs:[]});let Ct=[dt,G];$>1&&te&&he.size(te.dims)>0&&Ct.push(te),Pe&&Ct.push(Pe),Ge&&Ct.push(Ge),d.compute(To($,dt,G,te,le,je,Pe,Ge),{inputs:Ct,outputs:$>1?[0,2]:[0]})},Wo=(d,b)=>{let E=[b.batchSize,b.numHeads,b.sequenceLength,b.headSize],G=b.sequenceLength,L=b.inputHiddenSize,W=b.headSize,R=12,te={x:Math.ceil(b.headSize/R),y:Math.ceil(b.sequenceLength/R),z:b.batchSize*b.numHeads},ae=[d.inputs[0],d.inputs[1],d.inputs[2]],le=[{type:12,data:G},{type:12,data:L},{type:12,data:W},{type:12,data:b.numHeads},{type:12,data:b.headSize},{type:12,data:b.hiddenSize},{type:12,data:b.hiddenSize+b.hiddenSize+b.vHiddenSize}];return d.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:E,dataType:d.inputs[0].dataType,gpuDataType:0},{dims:E,dataType:d.inputs[0].dataType,gpuDataType:0},{dims:E,dataType:d.inputs[0].dataType,gpuDataType:0}],dispatchGroup:te,programUniforms:le}),getShaderSource:Pe=>{let Ge=Tr("output_q",ae[0].dataType,E),$=Tr("output_k",ae[0].dataType,E),je=Tr("output_v",ae[0].dataType,E),Ke=qt("input",ae[0].dataType,ae[0].dims),nt=qt("weight",ae[1].dataType,ae[1].dims),tt=qt("bias",ae[2].dataType,ae[2].dims),dt=Ke.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${dt}, 144>;
  var<workgroup> tileWeightQ: array<${dt}, 144>;
  var<workgroup> tileWeightK: array<${dt}, 144>;
  var<workgroup> tileWeightV: array<${dt}, 144>;
  ${Pe.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(Ke,nt,tt,Ge,$,je)}
  ${Pe.mainStart([R,R,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${dt}(0);
    var valueK = ${dt}(0);
    var valueV = ${dt}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:ae,outputs:[-1,-1,-1]})},Uo=(d,b)=>{let E=Bo(d.inputs,b),[G,L,W]=Wo(d,E);return Yi(d,G,L,W,d.inputs[4],void 0,void 0,void 0,d.inputs[5],E)}}),nf=be(()=>{$e(),Lr(),Os(),Bn(),Ws(),KA=(d,b)=>{if(!d||d.length!==5)throw new Error("BatchNormalization requires 5 inputs");let E=(G,L,W)=>{let R=L.length;if(R!==G.length)throw new Error(`${W}: num dimensions != ${R}`);L.forEach((te,ae)=>{if(te!==G[ae])throw new Error(`${W}: dim[${ae}] do not match`)})};if(d[0].dims.length>1){let G=b.format==="NHWC"?b.spatial?d[0].dims.slice(-1):d[0].dims.slice(-1).concat(d[0].dims.slice(1,d[0].dims.length-1)):d[0].dims.slice(1,b.spatial?2:void 0);E(d[1].dims,G,"Invalid input scale"),E(d[2].dims,G,"Invalid input B"),E(d[3].dims,G,"Invalid input mean"),E(d[4].dims,G,"Invalid input var")}else E(d[1].dims,[1],"Invalid input scale"),E(d[2].dims,[1],"Invalid input B"),E(d[3].dims,[1],"Invalid input mean"),E(d[4].dims,[1],"Invalid input var")},Ho=(d,b)=>{let{epsilon:E,spatial:G,format:L}=b,W=d[0].dims,R=G?Wr(W[W.length-1]):1,te=L==="NHWC"&&W.length>1?R:1,ae=he.size(W)/R,le=G,Pe=le?W.length:W,Ge=qt("x",d[0].dataType,d[0].dims,R),$=qt("scale",d[1].dataType,d[1].dims,te),je=qt("bias",d[2].dataType,d[2].dims,te),Ke=qt("inputMean",d[3].dataType,d[3].dims,te),nt=qt("inputVar",d[4].dataType,d[4].dims,te),tt=Tr("y",d[0].dataType,Pe,R);return{name:"BatchNormalization",shaderCache:{hint:`${b.epsilon}_${b.format}_${G}_${R}`,inputDependencies:le?["rank","type","type","type","type"]:void 0},getShaderSource:dt=>`
  const epsilon = ${E};
  ${dt.registerUniform("outputSize","u32").declareVariables(Ge,$,je,Ke,nt,tt)}
  ${dt.mainStart()}
  ${dt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${tt.offsetToIndices(`global_idx * ${R}`)};
    ${(()=>{let Ct="";if(G)Ct=`let cOffset = ${W.length===1?"0u":L==="NHWC"?`outputIndices[${W.length-1}] / ${R}`:"outputIndices[1]"};`;else if(L==="NCHW")Ct=`
            ${tt.indicesSet("outputIndices","0","0")}
            let cOffset = ${tt.indicesToOffset("outputIndices")};`;else{Ct=`var cIndices = ${$.type.indices}(0);
                       cIndices[0] = outputIndices[${W.length-1}];`;for(let Et=1;Et<$.rank;Et++)Ct+=`cIndices[${Et}] = outputIndices[${Et}];`;Ct+=`let cOffset = ${$.indicesToOffset("cIndices")};`}return Ct})()}
    let scale = ${$.getByOffset("cOffset")};
    let bias = ${je.getByOffset("cOffset")};
    let inputMean = ${Ke.getByOffset("cOffset")};
    let inputVar = ${nt.getByOffset("cOffset")};
    let x = ${Ge.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${tt.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(ae/64)},programUniforms:le?[{type:12,data:ae},...Ar(W)]:[{type:12,data:ae}]})}},fA=d=>Pt(d),qA=(d,b)=>{let{inputs:E,outputCount:G}=d,L=fA({...b,outputCount:G});if(M.webgpu.validateInputContent&&KA(E,L),b.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");d.compute(Ho(E,L))}}),hd=be(()=>{Os(),Ws(),Za=d=>{if(d[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(d[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(d[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(d[0].dims[2]!==d[1].dims[0])throw new Error("last dimension of input and bias are not the same")},gA=d=>{let b=d[0].dims,E=d[0].dims[2],G=he.size(b)/4,L=d[0].dataType,W=qt("input",L,b,4),R=qt("bias",L,[E],4),te=qt("residual",L,b,4),ae=Tr("output",L,b,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:b,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(G/64)}}),getShaderSource:le=>`
  const channels = ${E}u / 4;
  ${le.declareVariables(W,R,te,ae)}

  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes(G)}
    let value = ${W.getByOffset("global_idx")}
      + ${R.getByOffset("global_idx % channels")} + ${te.getByOffset("global_idx")};
    ${ae.setByOffset("global_idx","value")}
  }`}},gl=d=>{Za(d.inputs),d.compute(gA(d.inputs))}}),Dc=be(()=>{Lr(),Os(),Bn(),Ws(),ds=(d,b,E,G,L,W,R)=>{let te=Math.ceil(b/4),ae="";ae=typeof L=="string"?`${L}(a)`:L("a");let le=qt("inputData",E,[te],4),Pe=Tr("outputData",G,[te],4),Ge=[{name:"vec_size",type:"u32"}];return R&&Ge.push(...R),`
      ${d.registerUniforms(Ge).declareVariables(le,Pe)}

  ${W??""}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${le.getByOffset("global_idx")};
    ${Pe.setByOffset("global_idx",ae)}
  }`},zs=(d,b,E,G,L,W=d.dataType,R,te)=>{let ae=[{type:12,data:Math.ceil(he.size(d.dims)/4)}];return R&&ae.push(...R),{name:b,shaderCache:{hint:L,inputDependencies:["type"]},getShaderSource:le=>ds(le,he.size(d.dims),d.dataType,W,E,G,te),getRunData:le=>({outputs:[{dims:d.dims,dataType:W}],dispatchGroup:{x:Math.ceil(he.size(le[0].dims)/64/4)},programUniforms:ae})}},pA=d=>{d.compute(zs(d.inputs[0],"Abs","abs"))},bi=d=>{d.compute(zs(d.inputs[0],"Acos","acos"))},gr=d=>{d.compute(zs(d.inputs[0],"Acosh","acosh"))},xn=d=>{d.compute(zs(d.inputs[0],"Asin","asin"))},Vi=d=>{d.compute(zs(d.inputs[0],"Asinh","asinh"))},fn=d=>{d.compute(zs(d.inputs[0],"Atan","atan"))},Pi=d=>{d.compute(zs(d.inputs[0],"Atanh","atanh"))},Ci=d=>Pt(d),mo=(d,b)=>{let E;switch(b.to){case 10:E="vec4<f16>";break;case 1:E="vec4<f32>";break;case 12:E="vec4<u32>";break;case 6:E="vec4<i32>";break;case 9:E="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${b.to}`)}d.compute(zs(d.inputs[0],"Cast",E,void 0,b.cacheKey,b.to))},hA=d=>{let b,E,G=d.length>=2&&d[1].data!==0,L=d.length>=3&&d[2].data!==0;switch(d[0].dataType){case 1:b=G?d[1].getFloat32Array()[0]:-34028234663852886e22,E=L?d[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:b=G?d[1].getUint16Array()[0]:64511,E=L?d[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Pt({min:b,max:E})},Yo=(d,b)=>{let E=b||hA(d.inputs),G=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"Clip",L=>`clamp(${L}, vec4<${G}>(uniforms.min), vec4<${G}>(uniforms.max))`,void 0,E.cacheKey,void 0,[{type:d.inputs[0].dataType,data:E.min},{type:d.inputs[0].dataType,data:E.max}],[{name:"min",type:G},{name:"max",type:G}]),{inputs:[0]})},Pa=d=>{d.compute(zs(d.inputs[0],"Ceil","ceil"))},Po=d=>{d.compute(zs(d.inputs[0],"Cos","cos"))},Ko=d=>{d.compute(zs(d.inputs[0],"Cosh","cosh"))},gn=d=>Pt(d),bo=(d,b)=>{let E=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"Elu",G=>`elu_vf32(${G})`,`
  const elu_alpha_ = ${E}(${b.alpha});

  fn elu_f32(a: ${E}) -> ${E} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${E}>) -> vec4<${E}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,b.cacheKey))},fs=(d="f32")=>`
const r0: ${d} = 0.3275911;
const r1: ${d} = 0.254829592;
const r2: ${d} = -0.284496736;
const r3: ${d} = 1.421413741;
const r4: ${d} = -1.453152027;
const r5: ${d} = 1.061405429;

fn erf_vf32(v: vec4<${d}>) -> vec4<${d}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Ao=d=>{let b=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"Erf",E=>`erf_vf32(${E})`,fs(b)))},mA=d=>{d.compute(zs(d.inputs[0],"Exp","exp"))},Is=d=>{d.compute(zs(d.inputs[0],"Floor","floor"))},Co=d=>{let b=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"Gelu",E=>`0.5 * ${E} * (1.0 + erf_vf32(${E} * 0.7071067811865475))`,fs(b)))},ls=(d,b)=>{let E=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"LeakyRelu",G=>`select(leaky_relu_alpha_ * ${G}, ${G}, ${G} >= vec4<${E}>(0.0))`,`const leaky_relu_alpha_ = ${E}(${b.alpha});`,b.cacheKey))},qo=d=>{d.compute(zs(d.inputs[0],"Not",b=>`!${b}`))},bA=d=>{d.compute(zs(d.inputs[0],"Neg",b=>`-${b}`))},CA=d=>{d.compute(zs(d.inputs[0],"Reciprocal",b=>`1.0/${b}`))},wA=d=>{let b=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"Relu",E=>`select(vec4<${b}>(0.0), ${E}, ${E} > vec4<${b}>(0.0))`))},Oi=d=>{d.compute(zs(d.inputs[0],"Sigmoid",b=>`(1.0 / (1.0 + exp(-${b})))`))},Xo=d=>Pt(d),Ua=(d,b)=>{let E=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"HardSigmoid",G=>`max(vec4<${E}>(0.0), min(vec4<${E}>(1.0), ${b.alpha} * ${G} + vec4<${E}>(${b.beta})))`,void 0,b.cacheKey))},Zo=d=>{d.compute(zs(d.inputs[0],"Sin","sin"))},Jo=d=>{d.compute(zs(d.inputs[0],"Sinh","sinh"))},Do=d=>{d.compute(zs(d.inputs[0],"Sqrt","sqrt"))},Wn=d=>{d.compute(zs(d.inputs[0],"Tan","tan"))},So=d=>`sign(${d}) * (1 - exp(-2 * abs(${d}))) / (1 + exp(-2 * abs(${d})))`,IA=d=>{d.compute(zs(d.inputs[0],"Tanh",So))},wi=(d="f32")=>`
const fast_gelu_a: ${d} = 0.5;
const fast_gelu_b: ${d} = 0.7978845608028654;
const fast_gelu_c: ${d} = 0.035677408136300125;

fn tanh_v(v: vec4<${d}>) -> vec4<${d}> {
  return ${So("v")};
}
`,yA=d=>`(fast_gelu_a + fast_gelu_a * tanh_v(${d} * (fast_gelu_c * ${d} * ${d} + fast_gelu_b))) * ${d}`,$o=d=>{let b=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"FastGelu",yA,wi(b),void 0,d.inputs[0].dataType))},eA=(d,b)=>{let E=Yt(d.inputs[0].dataType);return d.compute(zs(d.inputs[0],"ThresholdedRelu",G=>`select(vec4<${E}>(0.0), ${G}, ${G} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${E}>(${b.alpha});`,b.cacheKey)),0},wo=d=>{d.compute(zs(d.inputs[0],"Log","log"))},kA=(d,b)=>`
const alpha = vec4<${d}>(${b});
const one = ${d}(1.0);
const zero = ${d}(0.0);

fn quick_gelu_impl(x: vec4<${d}>) -> vec4<${d}> {
  let v = x *alpha;
  var x1 : vec4<${d}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,_A=d=>`quick_gelu_impl(${d})`,XA=(d,b)=>{let E=Yt(d.inputs[0].dataType);d.compute(zs(d.inputs[0],"QuickGelu",_A,kA(E,b.alpha),b.cacheKey,d.inputs[0].dataType))}}),of=be(()=>{Os(),Ws(),Dc(),Cn=d=>{if(d[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(d[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(d[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(d[0].dims[2]!==d[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Io=d=>{let b=d[0].dims.slice();b[2]=b[2]/2;let E=qt("input",d[0].dataType,d[0].dims,4),G=qt("bias",d[0].dataType,[d[0].dims[2]],4),L=Tr("output",d[0].dataType,b,4),W=he.size(b)/4,R=nr(d[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:b,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)}}),getShaderSource:te=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${d[0].dims[2]/4/2}u;

  ${te.declareVariables(E,G,L)}

  ${fs(R)}

  ${te.mainStart()}
    ${te.guardAgainstOutOfBoundsWorkgroupSizes(W)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${L.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Mn=d=>{Cn(d.inputs),d.compute(Io(d.inputs))}}),Ff=be(()=>{Lr(),Os(),Ws(),vA=(d,b,E,G,L,W,R,te,ae,le,Pe,Ge)=>{let $,je;typeof te=="string"?$=je=(Ct,Et)=>`${te}((${Ct}),(${Et}))`:typeof te=="function"?$=je=te:($=te.scalar,je=te.vector);let Ke,nt=Tr("outputData",Pe,G.length,4),tt=qt("aData",ae,b.length,4),dt=qt("bData",le,E.length,4);if(L)if(W){let Ct=he.size(b)===1,Et=he.size(E)===1,Ot=b.length>0&&b[b.length-1]%4==0,Ft=E.length>0&&E[E.length-1]%4==0;Ke=Ct||Et?nt.setByOffset("global_idx",je(Ct?`${tt.type.value}(${tt.getByOffset("0")}.x)`:tt.getByOffset("global_idx"),Et?`${dt.type.value}(${dt.getByOffset("0")}.x)`:dt.getByOffset("global_idx"))):`
            let outputIndices = ${nt.offsetToIndices("global_idx * 4u")};
            let offsetA = ${tt.broadcastedIndicesToOffset("outputIndices",nt)};
            let offsetB = ${dt.broadcastedIndicesToOffset("outputIndices",nt)};
            ${nt.setByOffset("global_idx",je(R||Ot?tt.getByOffset("offsetA / 4u"):`${tt.type.value}(${tt.getByOffset("offsetA / 4u")}[offsetA % 4u])`,R||Ft?dt.getByOffset("offsetB / 4u"):`${dt.type.value}(${dt.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else Ke=nt.setByOffset("global_idx",je(tt.getByOffset("global_idx"),dt.getByOffset("global_idx")));else{if(!W)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Ct=(Et,Ot,Ft="")=>{let Lt=`aData[indexA${Ot}][componentA${Ot}]`,yr=`bData[indexB${Ot}][componentB${Ot}]`;return`
            let outputIndices${Ot} = ${nt.offsetToIndices(`global_idx * 4u + ${Ot}u`)};
            let offsetA${Ot} = ${tt.broadcastedIndicesToOffset(`outputIndices${Ot}`,nt)};
            let offsetB${Ot} = ${dt.broadcastedIndicesToOffset(`outputIndices${Ot}`,nt)};
            let indexA${Ot} = offsetA${Ot} / 4u;
            let indexB${Ot} = offsetB${Ot} / 4u;
            let componentA${Ot} = offsetA${Ot} % 4u;
            let componentB${Ot} = offsetB${Ot} % 4u;
            ${Et}[${Ot}] = ${Ft}(${$(Lt,yr)});
          `};Ke=Pe===9?`
            var data = vec4<u32>(0);
            ${Ct("data",0,"u32")}
            ${Ct("data",1,"u32")}
            ${Ct("data",2,"u32")}
            ${Ct("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${Ct("outputData[global_idx]",0)}
            ${Ct("outputData[global_idx]",1)}
            ${Ct("outputData[global_idx]",2)}
            ${Ct("outputData[global_idx]",3)}
          `}return`
        ${d.registerUniform("vec_size","u32").declareVariables(tt,dt,nt)}

        ${Ge??""}

        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${Ke}
      }`},Go=(d,b,E,G,L,W,R=E.dataType)=>{let te=E.dims.map(nt=>Number(nt)??1),ae=G.dims.map(nt=>Number(nt)??1),le=!he.areEqual(te,ae),Pe=te,Ge=he.size(te),$=!1,je=!1,Ke=[le];if(le){let nt=pe.calcShape(te,ae,!1);if(!nt)throw new Error("Can't perform binary op on the given tensors");Pe=nt.slice(),Ge=he.size(Pe);let tt=he.size(te)===1,dt=he.size(ae)===1,Ct=te.length>0&&te[te.length-1]%4==0,Et=ae.length>0&&ae[ae.length-1]%4==0;Ke.push(tt),Ke.push(dt),Ke.push(Ct),Ke.push(Et);let Ot=1;for(let Ft=1;Ft<Pe.length;Ft++){let Lt=te[te.length-Ft];if(Lt!==ae[ae.length-Ft])break;Ot*=Lt}Ot%4==0?(je=!0,$=!0):(tt||dt||Ct||Et)&&($=!0)}else $=!0;return Ke.push($),{name:d,shaderCache:{hint:b+Ke.map(nt=>nt.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:nt=>vA(nt,te,ae,Pe,$,le,je,L,E.dataType,G.dataType,R,W),getRunData:()=>({outputs:[{dims:Pe,dataType:R}],dispatchGroup:{x:Math.ceil(Ge/64/4)},programUniforms:[{type:12,data:Math.ceil(he.size(Pe)/4)},...Ar(te,ae,Pe)]})}},Ii=(d,b,E,G,L,W)=>{d.compute(Go(b,L??"",d.inputs[0],d.inputs[1],E,G,W))},wa=d=>{Ii(d,"Add",(b,E)=>`${b}+${E}`)},xA=d=>{Ii(d,"Div",(b,E)=>`${b}/${E}`)},Ki=d=>{Ii(d,"Equal",{scalar:(b,E)=>`u32(${b}==${E})`,vector:(b,E)=>`vec4<u32>(${b}==${E})`},void 0,void 0,9)},lo=d=>{Ii(d,"Mul",(b,E)=>`${b}*${E}`)},ZA=d=>{let b=qt("input",d.inputs[0].dataType,d.inputs[0].dims).type.value;Ii(d,"Pow",{scalar:(E,G)=>`pow_custom(${E},${G})`,vector:(E,G)=>`pow_vector_custom(${E},${G})`},`
    fn pow_custom(a : ${b}, b : ${b}) -> ${b} {
      if (b == ${b}(0.0)) {
        return ${b}(1.0);
      } else if (a < ${b}(0.0) && f32(b) != floor(f32(b))) {
        return ${b}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${b}(1.0), round(f32(abs(b) % ${b}(2.0))) != 1.0) * ${b}(${b==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${b}>, b : vec4<${b}>) -> vec4<${b}> {
      // TODO: implement vectorized pow
      return vec4<${b}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},MA=d=>{Ii(d,"Sub",(b,E)=>`${b}-${E}`)},tA=d=>{Ii(d,"Greater",{scalar:(b,E)=>`u32(${b}>${E})`,vector:(b,E)=>`vec4<u32>(${b}>${E})`},void 0,void 0,9)},JA=d=>{Ii(d,"Less",{scalar:(b,E)=>`u32(${b}<${E})`,vector:(b,E)=>`vec4<u32>(${b}<${E})`},void 0,void 0,9)},qi=d=>{Ii(d,"GreaterOrEqual",{scalar:(b,E)=>`u32(${b}>=${E})`,vector:(b,E)=>`vec4<u32>(${b}>=${E})`},void 0,void 0,9)},yi=d=>{Ii(d,"LessOrEqual",{scalar:(b,E)=>`u32(${b}<=${E})`,vector:(b,E)=>`vec4<u32>(${b}<=${E})`},void 0,void 0,9)}}),Af=be(()=>{Lr(),Os(),Bn(),Ws(),EA=(d,b)=>{if(!d||d.length<1)throw new Error("too few inputs");let E=d[0],G=E.dataType,L=E.dims.length;d.forEach((W,R)=>{if(R!==0){if(W.dataType!==G)throw new Error("input tensors should be one type");if(W.dims.length!==L)throw new Error("input tensors should have the same shape");W.dims.forEach((te,ae)=>{if(ae!==b&&te!==E.dims[ae])throw new Error("non concat dimensions must match")})}})},Fo=(d,b)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${d}u>(${b});
    for (var i: u32 = 0u; i < ${d}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${d}u;
  }`,sn=(d,b)=>{let E=d.length,G=[];for(let L=0;L<E;++L){let W=b.setByOffset("global_idx",d[L].getByIndices("indices"));E===1?G.push(W):L===0?G.push(`if (inputIndex == ${L}u) { ${W} }`):L===E-1?G.push(`else { ${W} }`):G.push(`else if (inputIndex == ${L}) { ${W} }`)}return G.join(`
`)},ua=(d,b,E,G)=>{let L=he.size(E),W=new Array(d.length),R=new Array(d.length),te=0,ae=[],le=[],Pe=[{type:12,data:L}];for(let Ke=0;Ke<d.length;++Ke)te+=d[Ke].dims[b],W[Ke]=te,le.push(d[Ke].dims.length),R[Ke]=qt(`input${Ke}`,G,le[Ke]),ae.push("rank"),Pe.push({type:12,data:W[Ke]});for(let Ke=0;Ke<d.length;++Ke)Pe.push(...Ar(d[Ke].dims));Pe.push(...Ar(E));let Ge=Tr("output",G,E.length),$=Ge.indicesGet("indices",b),je=Array.from(Array(W.length).keys()).map(Ke=>`uniforms.sizeInConcatAxis${Ke}`).join(",");return{name:"Concat",shaderCache:{hint:`${b}`,inputDependencies:ae},getRunData:()=>({outputs:[{dims:E,dataType:G}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:Pe}),getShaderSource:Ke=>`

  ${(()=>{Ke.registerUniform("outputSize","u32");for(let nt=0;nt<d.length;nt++)Ke.registerUniform(`sizeInConcatAxis${nt}`,"u32");return Ke.declareVariables(...R,Ge)})()}

  ${Fo(W.length,je)}

  ${Ke.mainStart()}
    ${Ke.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${Ge.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${$});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${W.length}u>(${je});
      ${$} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${sn(R,Ge)}
  }`}},yo=(d,b)=>{let E=d.inputs,G=E[0].dims,L=he.normalizeAxis(b.axis,G.length);EA(E,L);let W=G.slice();W[L]=E.reduce((te,ae)=>te+(ae.dims.length>L?ae.dims[L]:0),0);let R=E.filter(te=>he.size(te.dims)>0);d.compute(ua(R,L,W,E[0].dataType),{inputs:R})},BA=d=>Pt({axis:d.axis})}),wl=be(()=>{Lr(),Os(),Xi=(d,b,E="f32")=>{switch(d.activation){case"Relu":return`value = max(value, ${b}(0.0));`;case"Sigmoid":return`value = (${b}(1.0) / (${b}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${b}(${E}(uniforms.clip_min)), ${b}(${E}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${b}(0.0), min(${b}(1.0), ${E}(uniforms.alpha) * value + ${E}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${E}(uniforms.alpha) * value, value, value >= ${b}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${d.activation}`)}},Zi=(d,b)=>{d.activation==="Clip"?b.push({type:1,data:d.clipMax},{type:1,data:d.clipMin}):d.activation==="HardSigmoid"?b.push({type:1,data:d.alpha},{type:1,data:d.beta}):d.activation==="LeakyRelu"&&b.push({type:1,data:d.alpha})},Ji=(d,b)=>{d.activation==="Clip"?b.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):d.activation==="HardSigmoid"?b.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):d.activation==="LeakyRelu"&&b.push({name:"alpha",type:"f32"})},TA=d=>{let b=(d==null?void 0:d.activation)||"";if(b==="HardSigmoid"){let[E,G]=(d==null?void 0:d.activation_params)||[.2,.5];return{activation:b,alpha:E,beta:G}}if(b==="Clip"){let[E,G]=(d==null?void 0:d.activation_params)||[kt,Ht];return{activation:b,clipMax:G,clipMin:E}}if(b==="LeakyRelu"){let[E]=(d==null?void 0:d.activation_params)||[.01];return{activation:b,alpha:E}}return{activation:b}}}),Sc=be(()=>{En=(d,b)=>{switch(d){case 1:return b;case 2:return`vec2<${b}>`;case 3:return`vec3<${b}>`;case 4:return`vec4<${b}>`;default:throw new Error(`${d}-component is not supported.`)}},PA=d=>`
      ${d?"value = value + getBiasByOutputCoords(coords);":""}
      `}),e0=be(()=>{DA=d=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${d}.x), i32(${d}.y), i32(${d}.z), 1));
}
`}),Gc=be(()=>{Lr(),Os(),Ws(),wl(),ko=(d,b,E,G,L)=>{let W=G-E;return`
      ${Array.from({length:E}).map((R,te)=>`
      if (${kr(b.shape,te,b.rank)} != 1) {
        ${b.indicesSet(d,te,kr(L,te+W,G))}
      } else {
        ${b.indicesSet(d,te,0)}
      }`).join("")}
`},zo=(d,b,E,G,L=!1,W)=>{let R=d[0].dims,te=d[1].dims,ae=R[R.length-2],le=te[te.length-1],Pe=R[R.length-1],Ge=Wr(le),$=Wr(Pe),je=Wr(ae),Ke=he.size(E)/Ge/je,nt=d.length>2,tt=G?G.slice(0,-2):E.slice(0,-2),dt=[he.size(tt),ae,le],Ct=[{type:12,data:Ke},{type:12,data:ae},{type:12,data:le},{type:12,data:Pe}];return Zi(b,Ct),Ct.push(...Ar(tt,R,te)),nt&&Ct.push(...Ar(d[2].dims)),Ct.push(...Ar(dt)),{name:"MatMulNaive",shaderCache:{hint:`${b.activation};${Ge};${$};${je};${L}`,inputDependencies:nt?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:W?W(E):E,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(Ke/64)},programUniforms:Ct}),getShaderSource:Et=>{let Ot=xa("batch_dims",d[0].dataType,tt.length),Ft=qt("a",d[0].dataType,R.length,$),Lt=qt("b",d[1].dataType,te.length,Ge),yr=Tr("output",d[0].dataType,dt.length,Ge),Or=nr(yr.type.tensor),gs=Xi(b,yr.type.value,Or),ps=[Ft,Lt],pa="";if(nt){let Vs=L?Ge:1;ps.push(qt("bias",d[2].dataType,d[2].dims.length,Vs)),pa=L?`value += bias[col / ${Vs}];`:`value += ${yr.type.value}(bias[row + i]);`}let hs=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return Ji(b,hs),`
  ${Et.registerUniforms(hs).registerInternalVariables(Ot).declareVariables(...ps,yr)}
  ${Et.mainStart()}
    ${Et.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${Ge})) * ${Ge};
    var index1 = global_idx / (uniforms.N / ${Ge});
    let stride1 = uniforms.M / ${je};
    let row = (index1 % stride1) * ${je};
    let batch = index1 / stride1;

    ${E.length===2?"":`let batch_indices = ${Ot.offsetToIndices("batch")};`}

    var a_indices: ${Ft.type.indices};
    ${ko("a_indices",Ft,Ft.rank-2,Ot.rank,"batch_indices")}
    ${Ft.indicesSet("a_indices",Ft.rank-2,0)}
    ${Ft.indicesSet("a_indices",Ft.rank-1,0)}
    let a_offset = ${Ft.indicesToOffset("a_indices")};

    var b_indices: ${Lt.type.indices};
    ${ko("b_indices",Lt,Lt.rank-2,Ot.rank,"batch_indices")}
    ${Lt.indicesSet("b_indices",Lt.rank-2,0)}
    ${Lt.indicesSet("b_indices",Lt.rank-1,0)}
    let b_offset = ${Lt.indicesToOffset("b_indices")};
    var values: array<${yr.type.value}, ${je}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${$}) {
      ${(()=>{let Vs=`var a_data: ${Ft.type.value};`;for(let Ss=0;Ss<$;Ss++)Vs+=`
              let b_data${Ss} = b[(b_offset + (k + ${Ss}) * uniforms.N + col) / ${Ge}];`;for(let Ss=0;Ss<je;Ss++){Vs+=`a_data = a[(a_offset + (row + ${Ss}) * uniforms.K + k) / ${$}];`;for(let tr=0;tr<$;tr++)Vs+=`
            values[${Ss}] = fma(${Lt.type.value}(a_data${$===1?"":`[${tr}]`}), b_data${tr}, values[${Ss}]);
`}return Vs})()}
    }
    for (var i = 0u; i < ${je}u; i++) {
      var value = values[i];
      ${pa}
      ${gs}
      let cur_indices = ${yr.type.indices}(batch, row + i, col);
      let offset = ${yr.indicesToOffset("cur_indices")};
      ${yr.setByOffset(`offset / ${Ge}`,"value")};
    }
  }
  `}}}}),Fc=be(()=>{Lr(),Os(),Ws(),wl(),Gc(),Sc(),wn=(d,b)=>d?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${b?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${b?", batchIndices":""});
        `,SA=(d,b)=>d?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${b===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${b===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${b===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,GA=(d,b,E="f32",G,L=!1,W=32,R=!1,te=32)=>{let ae=b[1]*d[1],le=b[0]*d[0],Pe=L?ae:W,Ge=L?W:ae,$=Pe/b[0],je=W/b[1];if((!L||$!==4||d[1]!==4)&&(L||$!==3&&$!==4)||Pe%b[0]!=0||W%b[1]!=0||d[0]!==4)throw new Error(`If transposeA ${L} is true, innerElementSize ${$} and workPerThread[1] ${d[1]} must be 4.
      Otherwise, innerElementSize ${$} must be 3 or 4.
  tileAWidth ${Pe} must be divisible by workgroupSize[0]${b[0]}. tileInner ${W} must be divisible by workgroupSize[1] ${b[1]}. colPerThread ${d[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${$}<${E}>, ${Pe/$}>, ${Ge}>;
var<workgroup> mm_Bsub: array<array<vec4<${E}>, ${le/d[0]}>, ${W}>;

const rowPerThread = ${d[1]};
const colPerThread = ${d[0]};
const innerElementSize = ${$};
const tileInner = ${W};

@compute @workgroup_size(${b[0]}, ${b[1]}, ${b[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${R?"0":"i32(globalId.z)"};
  ${G?`let batchIndices = ${G.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${ae};

  let num_tiles = ${R?`${Math.ceil(te/W)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${R?`i32(globalId.z) * ${te}`:"0"};

  var acc: array<vec4<${E}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${je};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${wn(L,G)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${je}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${G?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${$===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${SA(L,$)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},_o=(d,b)=>d?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${b?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${b?", batchIndices":""});
            `,pl=d=>d?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Oo=(d,b,E="f32",G,L=!1,W=32,R=!1,te=32,ae=!1)=>{let le=d[1]*b[1],Pe=d[0]*b[0],Ge=L?le:W,$=L?W:le;if($%b[1]!=0||Ge%b[0]!=0||W%b[1]!=0)throw new Error(`tileAHight ${$} must be divisible by workgroupSize[1]${b[1]}, tileAWidth ${Ge} must be divisible by workgroupSize[0]${b[0]}, tileInner ${W} must be divisible by workgroupSize[1]${b[1]}`);let je=$/b[1],Ke=Ge/b[0],nt=W/b[1],tt=ae?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${le};
    let globalColStart = i32(workgroupId.x) * ${Pe};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${$}; inputRow = inputRow + ${b[1]}) {
        for (var inputCol = localCol; inputCol < ${Ge}; inputCol = inputCol + ${b[0]}) {
          ${_o(L,G)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${W}; inputRow = inputRow + ${b[1]}) {
            for (var inputCol = localCol; inputCol < ${Pe}; inputCol = inputCol + ${b[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${G?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${E}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${b[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${L?`mm_Asub[k][localRow + innerRow * ${b[1]}];`:`mm_Asub[localRow + innerRow * ${b[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${b[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${b[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${le};

let tileRowA = i32(localId.y) * ${je};
let tileColA = i32(localId.x) * ${Ke};
let tileRowB = i32(localId.y) * ${nt};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${je}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${Ke}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${_o(L,G)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${nt}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${G?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${E}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${pl(L)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${E}, ${Ge}>, ${$}>;
  var<workgroup> mm_Bsub : array<array<${E}, ${Pe}>, ${W}>;
  const rowPerThread = ${d[1]};
  const colPerThread = ${d[0]};
  const tileInner = ${W};

@compute @workgroup_size(${b[0]}, ${b[1]}, ${b[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${R?"0":"i32(globalId.z)"};
    ${G?`let batchIndices = ${G.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${R?`${Math.ceil(te/W)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${R?`i32(globalId.z) * ${te}`:"0"};

    var acc : array<array<${E}, colPerThread>, rowPerThread>;
    ${tt}
  }
`},rs=(d,b,E,G,L=!1)=>{let[W,R,te,ae]=G,le=nr(G[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${W.type.indices}) -> ${En(d,le)} {
      var value = ${En(d,le)}(0.0);
      let col = colIn * ${d};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${R.type.indices};
        ${ko("aIndices",R,R.rank-2,W.rank,"batchIndices")}
        ${R.indicesSet("aIndices",R.rank-2,"u32(row)")}
        ${R.indicesSet("aIndices",R.rank-1,"u32(colIn)")}
        value = ${R.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${W.type.indices}) -> ${En(d,le)} {
      var value = ${En(d,le)}(0.0);
      let col = colIn * ${d};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${te.type.indices};
        ${ko("bIndices",te,te.rank-2,W.rank,"batchIndices")}
        ${te.indicesSet("bIndices",te.rank-2,"u32(row)")}
        ${te.indicesSet("bIndices",te.rank-1,"u32(colIn)")}
        value = ${te.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${En(d,le)}) {
      let col = colIn * ${d};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${b?`value = value + ${L?"bias[colIn]":`${En(d,le)}(bias[row])`};`:""}
        ${E}
        ${ae.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},t=(d,b,E,G,L=!1,W)=>{let R=d[0].dims,te=d[1].dims,ae=R.slice(0,-2),le=te.slice(0,-2),Pe=G?G.slice(0,-2):E.slice(0,-2),Ge=he.size(Pe),$=R[R.length-2],je=R[R.length-1],Ke=te[te.length-1],nt=je%4==0&&Ke%4==0,tt=$<=8?[4,1,1]:[4,4,1],dt=[8,8,1],Ct=[Math.ceil(Ke/dt[0]/tt[0]),Math.ceil($/dt[1]/tt[1]),Math.ceil(Ge/dt[2]/tt[2])],Et=nt?4:1,Ot=[...ae,$,je/Et],Ft=Ot.length,Lt=[...le,je,Ke/Et],yr=Lt.length,Or=[Ge,$,Ke/Et],gs=[{type:6,data:$},{type:6,data:Ke},{type:6,data:je}];Zi(b,gs),gs.push(...Ar(Pe,Ot,Lt));let ps=["rank","rank"],pa=d.length>2;return pa&&(gs.push(...Ar(d[2].dims)),ps.push("rank")),gs.push(...Ar(Or)),{name:"MatMul",shaderCache:{hint:`${tt};${b.activation};${nt};${L}`,inputDependencies:ps},getRunData:()=>({outputs:[{dims:W?W(E):E,dataType:d[0].dataType}],dispatchGroup:{x:Ct[0],y:Ct[1],z:Ct[2]},programUniforms:gs}),getShaderSource:hs=>{let Vs=Pe.length,Ss=xa("batchDims",d[0].dataType,Vs,1),tr=nr(d[0].dataType),$r=qt("a",d[0].dataType,Ft,Et),Yr=qt("b",d[1].dataType,yr,Et),qr=Tr("result",d[0].dataType,Or.length,Et),Ta=[$r,Yr];if(pa){let pf=L?Et:1;Ta.push(qt("bias",d[2].dataType,d[2].dims.length,pf))}let vi=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ji(b,vi);let vo=nr(qr.type.tensor),b0=Xi(b,qr.type.value,vo),Oc=rs(Et,pa,b0,[Ss,$r,Yr,qr],L);return`
  ${hs.registerUniforms(vi).registerInternalVariables(Ss).declareVariables(...Ta,qr)}
  ${Oc}
  ${nt?GA(tt,dt,tr,Ss):Oo(tt,dt,tr,Ss)}
                   `}}}}),lf=be(()=>{Lr(),rl(),Ws(),wl(),Sc(),e0(),Fc(),r=(d,b,E,G,L=!1,W,R=4,te=4,ae=4,le="f32")=>{let Pe=Or=>{switch(Or){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Or} is not supported.`)}},Ge=d?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,$=d?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,je=d?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",Ke=d?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",nt=d?"row":"col",tt=d?"col":"row",dt=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${d?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${nt} / outWidth;
    let outCol = ${nt} % outWidth;

    let WRow = ${tt} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${tt} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${tt} % inChannels;
    var resData = ${En(R,le)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${je} && xCol >= 0 && xCol < ${Ke}) {
      ${Ge}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(Or=>{switch(Or){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${le}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Or} is not supported.`)}})(R)}
    }
    return resData;`,Ct=d?b&&G?`
    let col = colIn * ${R};
    ${dt}`:`
    let col = colIn * ${R};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${dt}
    }
    return ${En(R,le)}(0.0);`:G&&E?`
    let col = colIn * ${R};
    ${dt}`:`
    let col = colIn * ${R};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${dt}
    }
    return ${En(R,le)}(0.0);`,Et=d?G&&E?Pe(te):`
    let col = colIn * ${te};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Pe(te)}
    }
    return ${En(te,le)}(0.0);`:`
    let col = colIn * ${te};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${Pe(te)}
    }
    return ${En(te,le)}(0.0);`,Ot=En(ae,le),Ft=En(d?R:te,le),Lt=En(d?te:R,le),yr=Xi(W,Ot,le);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ft} {
      ${d?Ct:Et}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Lt} {
      ${d?Et:Ct}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${Ot}) {
      let col = colIn * ${ae};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${d?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${$}
      ${PA(L)}
      ${yr}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},s=(d,b,E,G,L,W,R,te,ae)=>{let le=b.format==="NHWC",Pe=le?d[0].dims[3]:d[0].dims[1],Ge=E[0],$=le?E[2]:E[3],je=le?E[1]:E[2],Ke=le?E[3]:E[1],nt=le&&(Pe%4==0||Pe%3==0)&&Ke%4==0,tt=le?Ke:$*je,dt=le?$*je:Ke,Ct=[8,8,1],Et=G<=8?[4,1,1]:[4,4,1],Ot=[Math.ceil(tt/Ct[0]/Et[0]),Math.ceil(dt/Ct[1]/Et[1]),Math.ceil(Ge/Ct[2]/Et[2])];Cs("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${Ot}`);let Ft=nt?le&&Pe%4!=0?3:4:1,Lt=Ct[1]*Et[1],yr=Ct[0]*Et[0],Or=Math.max(Ct[0]*Ft,Ct[1]),gs=G%Lt==0,ps=L%yr==0,pa=W%Or==0,hs=nt?[Ft,4,4]:[1,1,1],Vs=[{type:6,data:G},{type:6,data:L},{type:6,data:W},{type:6,data:[b.pads[0],b.pads[1]]},{type:6,data:b.strides},{type:6,data:b.dilations}];Zi(b,Vs),Vs.push(...Ar(d[0].dims,d[1].dims));let Ss=["rank","rank"];return R&&(Vs.push(...Ar(d[2].dims)),Ss.push("rank")),Vs.push(...Ar(E)),{name:"Conv2DMatMul",shaderCache:{hint:`${b.cacheKey};${Ft};${nt};${gs};${ps};${pa};${Lt};${yr};${Or}`,inputDependencies:Ss},getRunData:()=>({outputs:[{dims:ae?ae(E):E,dataType:d[0].dataType}],dispatchGroup:{x:Ot[0],y:Ot[1],z:Ot[2]},programUniforms:Vs}),getShaderSource:tr=>{let $r=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ji(b,$r);let Yr=nt?4:1,qr=nr(d[0].dataType),Ta=`
      fn setOutputAtIndex(flatIndex : i32, value : ${nt?`vec4<${qr}>`:qr}) {
        result[flatIndex] = ${nt?`vec4<${qr}>`:qr}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${nt?`vec4<${qr}>`:qr}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${nt?"/ 4":""}, value);
      }`,vi=[qt("x",d[0].dataType,d[0].dims.length,Ft===3?1:Ft),qt("w",d[1].dataType,d[1].dims.length,Yr)],vo=Tr("result",d[0].dataType,E.length,Yr);if(R){let b0=qt("bias",d[2].dataType,d[2].dims.length,Yr);vi.push(b0),Ta+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${nt?`vec4<${qr}>`:qr} {
          return bias[coords.${le?"w":"y"}${nt?"/ 4":""}];
        }`}return`
        ${DA("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${tr.registerUniforms($r).declareVariables(...vi,vo)}
        ${Ta}
        ${r(le,gs,ps,pa,R,b,hs[0],hs[1],hs[2],qr)}
        ${nt?GA(Et,Ct,qr,void 0,!le,Or):Oo(Et,Ct,qr,void 0,!le,Or,!1,void 0,te)}`}}}}),cf=be(()=>{Lr(),rl(),Os(),Ws(),wl(),Sc(),n=d=>{let b=1;for(let E=0;E<d.length;E++)b*=d[E];return b},A=d=>typeof d=="number"?[d,d,d]:d,l=(d,b)=>b<=1?d:d+(d-1)*(b-1),g=(d,b,E,G=1)=>{let L=l(b,G);return Math.floor((d[0]*(E-1)-E+L)/2)},m=(d,b,E,G,L)=>{L==null&&(L=g(d,b[0],G[0]));let W=[0,0,0,E];for(let R=0;R<3;R++)d[R]+2*L>=b[R]&&(W[R]=Math.trunc((d[R]-b[R]+2*L)/G[R]+1));return W},w=(d,b,E,G,L,W,R,te,ae,le)=>{let Pe,Ge,$,je;if(d==="VALID"&&(d=0),typeof d=="number"){Pe={top:d,bottom:d,left:d,right:d,front:d,back:d};let Ke=m([b,E,G,1],[te,ae,le],1,[L,W,R],d);Ge=Ke[0],$=Ke[1],je=Ke[2]}else if(Array.isArray(d)){if(!d.every((nt,tt,dt)=>nt===dt[0]))throw Error(`Unsupported padding parameter: ${d}`);Pe={top:d[0],bottom:d[1],left:d[2],right:d[3],front:d[4],back:d[5]};let Ke=m([b,E,G,1],[te,ae,le],1,[L,W,R],d[0]);Ge=Ke[0],$=Ke[1],je=Ke[2]}else{if(d!=="SAME_UPPER")throw Error(`Unknown padding parameter: ${d}`);{Ge=Math.ceil(b/L),$=Math.ceil(E/W),je=Math.ceil(G/R);let Ke=(Ge-1)*L+te-b,nt=($-1)*W+ae-E,tt=(je-1)*R+le-G,dt=Math.floor(Ke/2),Ct=Ke-dt,Et=Math.floor(nt/2),Ot=nt-Et,Ft=Math.floor(tt/2);Pe={top:Et,bottom:Ot,left:Ft,right:tt-Ft,front:dt,back:Ct}}}return{padInfo:Pe,outDepth:Ge,outHeight:$,outWidth:je}},T=(d,b,E,G,L,W=!1,R="channelsLast")=>{let te,ae,le,Pe,Ge;if(R==="channelsLast")[te,ae,le,Pe,Ge]=d;else{if(R!=="channelsFirst")throw new Error(`Unknown dataFormat ${R}`);[te,Ge,ae,le,Pe]=d}let[$,,je,Ke,nt]=b,[tt,dt,Ct]=A(E),[Et,Ot,Ft]=A(G),Lt=l(je,Et),yr=l(Ke,Ot),Or=l(nt,Ft),{padInfo:gs,outDepth:ps,outHeight:pa,outWidth:hs}=w(L,ae,le,Pe,tt,dt,Ct,Lt,yr,Or),Vs=W?$*Ge:$,Ss=[0,0,0,0,0];return R==="channelsFirst"?Ss=[te,Vs,ps,pa,hs]:R==="channelsLast"&&(Ss=[te,ps,pa,hs,Vs]),{batchSize:te,dataFormat:R,inDepth:ae,inHeight:le,inWidth:Pe,inChannels:Ge,outDepth:ps,outHeight:pa,outWidth:hs,outChannels:Vs,padInfo:gs,strideDepth:tt,strideHeight:dt,strideWidth:Ct,filterDepth:je,filterHeight:Ke,filterWidth:nt,effectiveFilterDepth:Lt,effectiveFilterHeight:yr,effectiveFilterWidth:Or,dilationDepth:Et,dilationHeight:Ot,dilationWidth:Ft,inShape:d,outShape:Ss,filterShape:b}},x=(d,b,E,G,L,W)=>{let R=W==="channelsLast";R?d[0].dims[3]:d[0].dims[1];let te={x:E.map(($,je)=>je)},ae=[Math.ceil(n(te.x.map($=>E[$]))/64),1,1];Cs("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${ae}`);let le=[{type:12,data:he.size(E)},{type:12,data:G},{type:12,data:L},{type:12,data:b.strides},{type:12,data:b.dilations}];Zi(b,le),le.push(...Ar(d[0].dims,d[1].dims));let Pe=["rank","rank"],Ge=d.length===3;return Ge&&(le.push(...Ar(d[2].dims)),Pe.push("rank")),le.push(...Ar(E)),{name:"Conv3DNaive",shaderCache:{hint:`${b.cacheKey};${R};1;${Ge}`,inputDependencies:Pe},getRunData:()=>({outputs:[{dims:E,dataType:d[0].dataType}],dispatchGroup:{x:ae[0],y:ae[1],z:ae[2]},programUniforms:le}),getShaderSource:$=>{let je=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:G.length},{name:"pads",type:"u32",length:L.length},{name:"strides",type:"u32",length:b.strides.length},{name:"dilations",type:"u32",length:b.dilations.length}];Ji(b,je);let Ke=nr(d[0].dataType),nt=qt("x",d[0].dataType,d[0].dims.length,1),tt=qt("W",d[1].dataType,d[1].dims.length,1),dt=[nt,tt],Ct=Tr("result",d[0].dataType,E.length,1),Et="";if(Ge){let Lt=qt("bias",d[2].dataType,d[2].dims.length,1);dt.push(Lt),Et+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${Ke} {
          return bias[${kr("coords",R?4:1,5)}];
        }`}let Ot=En(1,Ke),Ft=Xi(b,Ot,Ke);return`
            ${Et}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${nt.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${tt.getByIndices("aIndices")};
            }
          ${$.registerUniforms(je).declareVariables(...dt,Ct)}
          ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Ct.offsetToIndices("global_idx")};
              let batch = ${kr("coords",0,nt.rank)};
              let d2 = ${kr("coords",R?nt.rank-1:1,nt.rank)};
              let xFRCCorner = vec3<u32>(${kr("coords",R?1:2,nt.rank)},
              ${kr("coords",R?2:3,nt.rank)},
              ${kr("coords",R?3:4,nt.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${kr("uniforms.x_shape",R?1:2,nt.rank)};
              let xShapeZ = ${kr("uniforms.x_shape",R?2:3,nt.rank)};
              let xShapeW = ${kr("uniforms.x_shape",R?3:4,nt.rank)};
              let xShapeU = ${kr("uniforms.x_shape",R?4:1,nt.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${R?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${R?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${R?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${R?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${Ge?"value = value + getBiasByOutputCoords(coords)":""};
              ${Ft}
              result[global_idx] = f32(value);
          }`}}}}),zf=be(()=>{Lr(),Os(),Ws(),wl(),F=(d,b,E,G)=>{let L=d.length>2,W=L?"value += b[output_channel];":"",R=d[0].dims,te=d[1].dims,ae=b.format==="NHWC",le=ae?E[3]:E[1],Pe=le/b.group,Ge=ae&&Pe>=4?Wr(le):1,$=he.size(E)/Ge,je=[{type:12,data:$},{type:12,data:b.dilations},{type:12,data:[b.strides[0],b.strides[1]]},{type:12,data:[b.pads[0],b.pads[1]]},{type:12,data:Pe}];Zi(b,je),je.push(...Ar(R,[te[0],te[1],te[2],te[3]/Ge]));let Ke=L?["rank","rank","rank"]:["rank","rank"];return je.push(...Ar([E[0],E[1],E[2],E[3]/Ge])),{name:"GroupedConv",shaderCache:{hint:`${b.cacheKey}_${Ge}`,inputDependencies:Ke},getRunData:()=>({outputs:[{dims:G?G(E):E,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:je}),getShaderSource:nt=>{let tt=Tr("output",d[0].dataType,E.length,Ge),dt=nr(tt.type.tensor),Ct=Xi(b,tt.type.value,dt),Et=qt("x",d[0].dataType,R.length),Ot=qt("w",d[1].dataType,te.length,Ge),Ft=[Et,Ot];L&&Ft.push(qt("b",d[2].dataType,d[2].dims,Ge));let Lt=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:b.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Ji(b,Lt);let yr=ae?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${Et.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${Ot.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${Et.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${Ot.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${nt.registerUniforms(Lt).declareVariables(...Ft,tt)}

  ${nt.mainStart()}
    ${nt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${tt.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${ae?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${ae?1:2}], outputIndices[${ae?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${Ge} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${ae?2:1}];

    var value: ${tt.type.value} = ${tt.type.value}(0);
    ${yr}
    ${W}
    ${Ct}
    ${tt.setByOffset("global_idx","value")}
  }`}}},U=(d,b,E,G)=>{let L=d.length>2,W=Wr(E[3]),R=Wr(E[2]),te=he.size(E)/W/R,ae=[d[0].dims[0],d[0].dims[1],d[0].dims[2],d[0].dims[3]/W],le=[d[1].dims[0],d[1].dims[1],d[1].dims[2],d[1].dims[3]/W],Pe=[E[0],E[1],E[2],E[3]/W],Ge=[{type:12,data:te},{type:6,data:[b.strides[0],b.strides[1]]},{type:6,data:[b.pads[0],b.pads[1]]}];Zi(b,Ge),Ge.push(...Ar(ae,le,Pe));let $=(R-1)*b.strides[1]+le[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${b.cacheKey};${W};${R};${$};${le[0]};${le[1]}`,inputDependencies:L?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:G?G(E):E,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(te/64)},programUniforms:Ge}),getShaderSource:je=>{let Ke=Tr("output",d[0].dataType,Pe.length,W),nt=nr(Ke.type.tensor),tt=Xi(b,Ke.type.value,nt),dt=qt("x",d[0].dataType,ae.length,W),Ct=qt("w",d[1].dataType,le.length,W),Et=[dt,Ct];L&&Et.push(qt("b",d[2].dataType,d[2].dims,W));let Ot=L?"value += b[output_channel];":"",Ft=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ji(b,Ft),`
  ${je.registerUniforms(Ft).declareVariables(...Et,Ke)}
  ${je.mainStart()}
    ${je.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${R}u;
    let col = (index1 % width1) * ${R}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${dt.type.value}, ${$}>;
    var values: array<${Ke.type.value}, ${R}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${le[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${$}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${dt.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${dt.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${le[1]}; w_width++) {
          let w_val = ${Ct.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${R}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${R}u; i++) {
      var value = values[i];
      ${Ot}
      ${tt}
      ${Ke.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),Rs=be(()=>{Os(),lf(),cf(),Fc(),zf(),wl(),Gc(),sl(),ee=(d,b,E,G,L,W)=>{let R=d[0],te=d.slice(W?1:2,W?3:4),ae=te.length,le=b[0],Pe=b.slice(2).map(($,je)=>$+($-1)*(E[je]-1)),Ge=te.map(($,je)=>$+G[je]+G[je+ae]).map(($,je)=>Math.floor(($-Pe[je]+L[je])/L[je]));return Ge.splice(0,0,R),Ge.splice(W?3:1,0,le),Ge},Ae=[2,3,1,0],Ce=(d,b)=>{if(!d||d.length!==2&&d.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(d[0].dims.length>5)throw new Error("greater than 5D is not supported");if(d[0].dims.length!==d[1].dims.length)throw new Error("filter does not have same dimension as input");if(d[0].dims[b.format==="NHWC"?d[0].dims.length-1:1]!==d[1].dims[1]*b.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(d.length===3&&(d[2].dims.length!==1||d[1].dims[0]!==d[2].dims[0]))throw new Error("invalid bias");let E=d[0].dims.length-2;if(b.dilations.length!==E)throw new Error(`dilations should be ${E}D`);if(b.strides.length!==E)throw new Error(`strides should be ${E}D`);if(b.pads.length!==2*E)throw new Error(`pads should be ${2*E}D`);if(b.kernelShape.length!==0&&b.kernelShape.length!==d[1].dims.length-2)throw new Error("invalid kernel shape")},Me=(d,b)=>{let E=d.kernelShape.slice();E.length<b[1].dims.length-2&&E.push(...Array(b[1].dims.length-2-E.length).fill(0));for(let W=2;W<b[1].dims.length;++W)E[W-2]===0&&(E[W-2]=b[1].dims[W]);let G=d.pads.slice();qe.adjustPadsBasedOnAutoPad(b[0].dims,d.strides,d.dilations,E,G,d.format==="NHWC",d.autoPad);let L=Object.assign({},d);return Object.assign(L,{kernelShape:E,pads:G}),L},We=d=>{let b=TA(d),E=d.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][d.auto_pad],format:E,dilations:d.dilations,group:d.group,kernelShape:d.kernel_shape,pads:d.pads,strides:d.strides,wIsConst:d.w_is_const(),...b,cacheKey:`${d.format};${b.activation};`}},Ze=(d,b,E,G)=>{let L=E.format==="NHWC",W=ee(b[0].dims,b[1].dims,E.dilations,E.pads,E.strides,L);if(E.group!==1){let Ft=[b[0]];if(L){let Lt=d.kernelCustomData.wT??d.compute(na(b[1],Ae),{inputs:[1],outputs:[E.wIsConst?-2:-1]})[0];E.wIsConst&&!d.kernelCustomData.wT&&(d.kernelCustomData.wT=Lt),Ft.push(Lt)}else Ft.push(b[1]);return b.length===3&&Ft.push(b[2]),void(!d.adapterInfo.isArchitecture("ampere")&&L&&b[1].dims[0]===E.group&&b[1].dims[1]===1&&E.dilations[0]===1&&E.dilations[1]===1?d.compute(U(Ft,E,W,G),{inputs:Ft}):d.compute(F(Ft,E,W,G),{inputs:Ft}))}let R=b.length===3,te=b[0].dims[L?1:2],ae=b[0].dims[L?2:3],le=b[0].dims[L?3:1],Pe=b[1].dims[2],Ge=b[1].dims[3],$=W[L?1:2],je=W[L?2:3],Ke=W[L?3:1],nt=L&&Pe===te&&Ge===ae&&E.pads[0]===0&&E.pads[1]===0;if(nt||Pe===1&&Ge===1&&E.dilations[0]===1&&E.dilations[1]===1&&E.strides[0]===1&&E.strides[1]===1&&E.pads[0]===0&&E.pads[1]===0){let Ft,Lt,yr,Or=W[0],gs=[];if(L){let hs=d.kernelCustomData.wT??d.compute(na(b[1],Ae),{inputs:[1],outputs:[E.wIsConst?-2:-1]})[0];if(E.wIsConst&&!d.kernelCustomData.wT&&(d.kernelCustomData.wT=hs),nt){let Vs=te*ae*le;Ft=b[0].reshape([1,Or,Vs]),Lt=hs.reshape([1,Vs,Ke]),yr=[1,Or,Ke]}else Ft=b[0].reshape([Or,te*ae,le]),Lt=hs.reshape([1,le,Ke]),yr=[Or,$*je,Ke];gs.push(Ft),gs.push(Lt)}else Ft=b[0].reshape([Or,le,te*ae]),Lt=b[1].reshape([1,Ke,le]),yr=[Or,Ke,$*je],gs.push(Lt),gs.push(Ft);R&&gs.push(b[2]);let ps=yr[2],pa=gs[0].dims[gs[0].dims.length-1];return void(ps<8&&pa<8?d.compute(zo(gs,E,W,yr,L,G),{inputs:gs}):d.compute(t(gs,E,W,yr,L,G),{inputs:gs}))}let tt=d.kernelCustomData.wT??d.compute(na(b[1],Ae),{inputs:[1],outputs:[E.wIsConst?-2:-1]})[0];E.wIsConst&&!d.kernelCustomData.wT&&(d.kernelCustomData.wT=tt);let dt=[b[0],tt];R&&dt.push(b[2]);let Ct=L?$*je:Ke,Et=L?Ke:$*je,Ot=Pe*Ge*le;d.compute(s(dt,E,W,Ct,Et,Ot,R,!0,G),{inputs:dt})},ut=(d,b)=>{let E=b.format==="NHWC",G=[d.inputs[0].reshape(E?[d.inputs[0].dims[0],1,d.inputs[0].dims[1],d.inputs[0].dims[2]]:[d.inputs[0].dims[0],d.inputs[0].dims[1],1,d.inputs[0].dims[2]]),d.inputs[1].reshape([d.inputs[1].dims[0],d.inputs[1].dims[1],1,d.inputs[1].dims[2]])];d.inputs.length===3&&G.push(d.inputs[2]);let L=[0,b.pads[0],0,b.pads[1]],W=[1].concat(b.strides),R=[1].concat(b.dilations),te=[1].concat(b.kernelShape),ae=Me({...b,pads:L,strides:W,dilations:R,kernelShape:te},G);Ze(d,G,ae,le=>E?[le[0],le[2],le[3]]:[le[0],le[1],le[3]])},mt=(d,b,E)=>{let G=E.format==="NHWC"?"channelsLast":"channelsFirst",L=Me(E,b),W=E.autoPad==="NOTSET"?E.pads:E.autoPad,R=T(b[0].dims,b[1].dims,E.strides,E.dilations,W,!1,G);d.compute(x(b,L,R.outShape,[R.filterDepth,R.filterHeight,R.filterWidth],[R.padInfo.front,R.padInfo.top,R.padInfo.left],G))},xt=(d,b)=>{if(Ce(d.inputs,b),d.inputs[0].dims.length===3)ut(d,b);else if(d.inputs[0].dims.length===5)mt(d,d.inputs,b);else{let E=Me(b,d.inputs);Ze(d,d.inputs,E)}}}),uf=be(()=>{Lr(),rl(),Os(),Ws(),St=(d,b,E)=>{let G=d.length>2,L=b.outputShape,W=b.format==="NHWC",R=b.group,te=d[1].dims,ae=te[2]/R,le=te[3],Pe=W?Wr(ae):1,Ge=W?Wr(le):1,$=W?le===1?Pe:Ge:1,je=he.size(L)/Ge,Ke=[Math.ceil(je/64),1,1];Cs("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${Ke}`);let nt=["rank","rank"],tt=[b.strides[0],b.strides[1]],dt=[b.kernelShape[W?1:2],b.kernelShape[W?2:3]],Ct=[b.dilations[0],b.dilations[1]],Et=[dt[0]+(b.dilations[0]<=1?0:(b.kernelShape[W?1:2]-1)*(b.dilations[0]-1)),dt[1]+(b.dilations[1]<=1?0:(b.kernelShape[W?2:3]-1)*(b.dilations[1]-1))],Ot=[Et[0]-1-Math.floor((b.pads[0]+b.pads[2])/2),Et[1]-1-Math.floor((b.pads[1]+b.pads[3])/2)],Ft=[{type:12,data:je},{type:12,data:tt},{type:12,data:dt},{type:12,data:Ct},{type:12,data:Et},{type:6,data:Ot},{type:12,data:ae},{type:12,data:le},...Ar(d[0].dims,d[1].dims)];return G&&(Ft.push(...Ar(d[2].dims)),nt.push("rank")),Ft.push(...Ar(L)),{name:"ConvTranspose2D",shaderCache:{hint:`${b.cacheKey};${Pe}${$}${Ge}${le===1}`,inputDependencies:nt},getRunData:()=>({dispatchGroup:{x:Ke[0],y:Ke[1],z:Ke[2]},outputs:[{dims:E?E(L):L,dataType:d[0].dataType}],programUniforms:Ft}),getShaderSource:Lt=>{let yr=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:tt.length},{name:"filter_dims",type:"u32",length:dt.length},{name:"dilations",type:"u32",length:dt.length},{name:"effective_filter_dims",type:"u32",length:Et.length},{name:"pads",type:"i32",length:Ot.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Or=nr(d[0].dataType),gs=W?1:2,ps=W?2:3,pa=W?3:1,hs=qt("W",d[1].dataType,d[1].dims.length,$),Vs=qt("Dy",d[0].dataType,d[0].dims.length,Pe),Ss=[Vs,hs];G&&Ss.push(qt("bias",d[2].dataType,[L[pa]].length,Ge));let tr=Tr("result",d[0].dataType,L.length,Ge),$r=`
            let outputIndices = ${tr.offsetToIndices(`global_idx * ${Ge}`)};
            let batch = ${tr.indicesGet("outputIndices",0)};
            let d1 = ${tr.indicesGet("outputIndices",pa)};
            let r = ${tr.indicesGet("outputIndices",gs)};
            let c = ${tr.indicesGet("outputIndices",ps)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${tr.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${Or}(dyRCorner) + ${Or}(wR)) / ${Or}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${Or}(uniforms.Dy_shape[${gs}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${Or}(dyCCorner) + ${Or}(wC)) / ${Or}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${Or}(uniforms.Dy_shape[${ps}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${Pe}) {
                  let xValue = ${W?Vs.getByOffset(`${Vs.indicesToOffset(`${Vs.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${Pe}`):Vs.get("batch","inputChannel","idyR","idyC")};
                  ${(()=>{let Yr="";if(Pe===1)Yr+=`
        let w_offset = ${hs.indicesToOffset(`${hs.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${hs.getByOffset(`w_offset / ${$}`)};
        dotProd = dotProd + xValue * wValue;`;else if(le===1)Yr+=`
          let wValue = ${hs.getByOffset(`${hs.indicesToOffset(`${hs.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${$}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let qr=0;qr<Pe;qr++)Yr+=`
            let wValue${qr} = ${hs.getByOffset(`${hs.indicesToOffset(`${hs.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${qr}, wOutChannel)`)} / ${$}`)};
            dotProd = dotProd + xValue[${qr}] * wValue${qr};`;return Yr})()}
                  inputChannel = inputChannel + ${Pe};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${G?` + bias[d1 / ${Ge}]`:""};
            ${tr.setByOffset("global_idx","value")};
          `;return`
    ${Lt.registerUniforms(yr).declareVariables(...Ss,tr)}
      ${Lt.mainStart()}
      ${Lt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${$r}}`}}}}),ki=be(()=>{uf(),wl(),sl(),Rt=(d,b,E,G,L,W)=>(d-1)*b+E+(G-1)*L+1-W,sr=(d,b,E,G,L)=>{let W=Math.floor(d/2);b==="SAME_UPPER"?(E[G]=W,E[L]=d-W):b==="SAME_LOWER"&&(E[G]=d-W,E[L]=W)},br=(d,b,E,G,L,W,R,te,ae,le)=>{let Pe=d.length-2,Ge=le.length===0;ae.length<Pe&&ae.push(...Array(Pe-ae.length).fill(0));let $=d[0],je=b[te?3:1]*L;for(let Ke=0,nt=d.length-Pe-(te?1:0);Ke<Pe;++Ke,++nt){let tt=d[nt],dt=Ge?tt*R[Ke]:le[Ke],Ct=Rt(tt,R[Ke],W[Ke],b[nt],E[Ke],dt);sr(Ct,G,W,Ke,Ke+Pe),Ge&&le.push(R[Ke]*(tt-1)+ae[Ke]+(b[nt]-1)*E[Ke]+1-W[Ke]-W[Ke+Pe])}le.splice(0,0,$),le.splice(te?3:1,0,je)},Ir=(d,b)=>{let E=d.kernelShape.slice();if(d.kernelShape.length===0||d.kernelShape.reduce((Ge,$)=>Ge*$,1)===0){E.length=0;for(let Ge=2;Ge<b[1].dims.length;++Ge)E.push(b[1].dims[Ge])}let G=d.format==="NHWC";E.splice(0,0,b[1].dims[0]),E.splice(G?3:1,0,b[1].dims[1]);let L=d.pads.slice(),W=d.outputShape.slice(),R=d.outputPadding.slice(),te=b[0].dims,ae=d.dilations.slice();if(ae.reduce((Ge,$)=>Ge+$,0)===0){let Ge=b[0].dims.length-2;ae=new Array(Ge).fill(1)}let le=d.strides.slice();if(le.reduce((Ge,$)=>Ge+$,0)===0){let Ge=b[0].dims.length-2;le=new Array(Ge).fill(1)}br(te,E,ae,d.autoPad,d.group,L,le,G,R,W);let Pe=Object.assign({},d);return Object.assign(Pe,{kernelShape:E,pads:L,outputPadding:R,outputShape:W,dilations:ae,strides:le}),Pe},jr=d=>{let b=TA(d),E=d.format,G=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof d.autoPad>"u"?0:d.autoPad],L=d.dilations,W=d.group,R=d.kernelShape,te=d.pads,ae=d.strides,le=d.wIsConst();return{autoPad:G,format:E,dilations:L,group:W,kernelShape:R,outputPadding:d.outputPadding,outputShape:d.outputShape,pads:te,strides:ae,wIsConst:le,...b,cacheKey:`${d.format};${b.activation};`}},Ur=(d,b)=>{if(!d||d.length!==2&&d.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(d[0].dims.length!==4&&d[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(d[0].dims.length!==d[1].dims.length)throw new Error("filter does not have same dimension as input");if(d[0].dims[b.format==="NHWC"?d[0].dims.length-1:1]!==d[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let E=d[1].dims[1]*b.group;if(d.length===3&&(d[2].dims.length!==1||d[2].dims[0]!==E))throw new Error("invalid bias");let G=d[0].dims.length-2;if(b.dilations.reduce((L,W)=>L+W,0)>0&&b.dilations.length!==G)throw new Error(`dilations should be ${G}D`);if(b.strides.reduce((L,W)=>L+W,0)>0&&b.strides.length!==G)throw new Error(`strides should be ${G}D`);if(b.pads.reduce((L,W)=>L+W,0)>0&&b.pads.length!==2*G)throw new Error(`pads should be ${2*G}D`);if(b.outputPadding.length!==G&&b.outputPadding.length!==0)throw new Error(`output_padding should be ${G}D`);if(b.kernelShape.reduce((L,W)=>L+W,0)>0&&b.kernelShape.length!==0&&b.kernelShape.length!==d[1].dims.length-2)throw new Error("invalid kernel shape");if(b.outputShape.length!==0&&b.outputShape.length!==d[0].dims.length-2)throw new Error("invalid output shape")},As=(d,b,E,G)=>{let L=d.kernelCustomData.wT??d.compute(na(b[1],[2,3,0,1]),{inputs:[1],outputs:[E.wIsConst?-2:-1]})[0];E.wIsConst&&!d.kernelCustomData.wT&&(d.kernelCustomData.wT=L);let W=[b[0],L];b.length===3&&W.push(b[2]),d.compute(St(W,E,G),{inputs:W})},Ds=(d,b)=>{let E=b.format==="NHWC",G=[d.inputs[0].reshape(E?[d.inputs[0].dims[0],1,d.inputs[0].dims[1],d.inputs[0].dims[2]]:[d.inputs[0].dims[0],d.inputs[0].dims[1],1,d.inputs[0].dims[2]]),d.inputs[1].reshape([d.inputs[1].dims[0],d.inputs[1].dims[1],1,d.inputs[1].dims[2]])];d.inputs.length===3&&G.push(d.inputs[2]);let L=b.kernelShape;(L.length===0||L[0]===0)&&(L=[d.inputs[1].dims[2]]);let W=b.dilations;(W.length===0||W[0]===0)&&(W=[1]);let R=b.strides;(R.length===0||R[0]===0)&&(R=[1]);let te=b.pads;te.length===0&&(te=[0,0]),te=[0,te[0],0,te[1]],R=[1].concat(R),W=[1].concat(W),L=[1].concat(L);let ae=b.outputPadding;ae=[0].concat(ae);let le=Ir({...b,pads:te,strides:R,dilations:W,kernelShape:L,outputPadding:ae},G);As(d,G,le,Pe=>E?[Pe[0],Pe[2],Pe[3]]:[Pe[0],Pe[1],Pe[3]])},ea=(d,b)=>{if(Ur(d.inputs,b),d.inputs[0].dims.length===3)Ds(d,b);else{let E=Ir(b,d.inputs);As(d,d.inputs,E)}}}),Ni=be(()=>{Lr(),Os(),Bn(),Ws(),da=(d,b,E,G)=>{let L=he.size(b),W=b.length,R=qt("input",d,W),te=Tr("output",d,W),ae=E.dataType===6?E.getInt32Array()[0]:Number(E.getBigInt64Array()[0]),le=he.normalizeAxis(ae,W);return{name:"CumSum",shaderCache:{hint:G.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:b,dataType:d}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:[{type:12,data:L},{type:12,data:le},...Ar(b,b)]}),getShaderSource:Pe=>{let Ge=` i32(${R.indicesGet("inputIndices","uniforms.axis")}) `,$=kr("uniforms.input_shape","uniforms.axis",W),je=G.reverse?Ge+(G.exclusive?" + 1":""):"0",Ke=G.reverse?$:Ge+(G.exclusive?"":" + 1");return`
                ${Pe.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(R,te)}
                ${Pe.mainStart()}
                  ${Pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${te.offsetToIndices("global_idx")};
                  var sum = ${te.type.value}(0);
                  let first : i32 = ${je};
                  let last : i32 = ${Ke};
                  for (var i : i32 = first; i < last; i++) {
                    ${R.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${R.getByIndices("inputIndices")};
                  }
                  ${te.setByOffset("global_idx","sum")};
                }`}}},ma=(d,b)=>{let E=d.inputs[0].dims,G=d.inputs[0].dataType,L=d.inputs[1];d.compute(da(G,E,L,b),{inputs:[0]})},Ia=d=>{let b=d.exclusive===1,E=d.reverse===1;return Pt({exclusive:b,reverse:E})}}),Wi=be(()=>{Lr(),Os(),Bn(),Ws(),Na=d=>{if(!d||d.length!==1)throw new Error("DepthToSpace requires 1 input.");if(d[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},La=(d,b,E,G)=>{let L=[];L.push(`fn perm(i: ${G.type.indices}) -> ${E.type.indices} {
    var a: ${E.type.indices};`);for(let W=0;W<b;++W)L.push(E.indicesSet("a",d[W],`i[${W}]`));return L.push("return a;}"),L.join(`
`)},Ja=(d,b)=>{let E,G,L,W,R,te,ae=b.format==="NHWC",le=b.blocksize,Pe=b.mode==="DCR";ae?([E,G,L,W]=d.dims,R=Pe?[E,G,L,le,le,W/le**2]:[E,G,L,W/le**2,le,le],te=Pe?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([E,G,L,W]=[d.dims[0],d.dims[2],d.dims[3],d.dims[1]],R=Pe?[E,le,le,W/le**2,G,L]:[E,W/le**2,le,le,G,L],te=Pe?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let Ge=d.reshape(R),$=Ge.dims.length,je=d.dataType,Ke=qt("a",je,$),nt=Tr("output",je,$);return{name:"DepthToSpace",shaderCache:{hint:`${d.dims};${b.blocksize};${b.mode}`,inputDependencies:["rank"]},getRunData:tt=>{let dt=ae?[E,G*le,L*le,W/le**2]:[E,W/le**2,G*le,L*le],Ct=he.size(dt),Et=Ge.dims,Ot=he.sortBasedOnPerm(Et,te);return{outputs:[{dims:dt,dataType:tt[0].dataType}],dispatchGroup:{x:Math.ceil(Ct/64)},programUniforms:[{type:12,data:Ct},...Ar(Et,Ot)]}},getShaderSource:tt=>`
  ${tt.registerUniform("output_size","u32").declareVariables(Ke,nt)}

  ${La(te,$,Ke,nt)}

  ${tt.mainStart()}
    ${tt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${nt.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${nt.setByOffset("global_idx",Ke.getByIndices("aIndices"))}
  }`}},an=(d,b)=>{Na(d.inputs),d.compute(Ja(d.inputs[0],b))},In=d=>Pt({blocksize:d.blocksize,mode:d.mode,format:d.format})}),Pl=be(()=>{Lr(),Os(),Bn(),Ws(),re="^"+(K="("+(z="[a-zA-Z]|\\.\\.\\.")+")+")+"$",me="^"+("("+K+",)*"+K)+"$",_e=class{constructor(d=-1){this.symbolToIndices=new Map,this.inputIndex=d}addSymbol(d,b){let E=this.symbolToIndices.get(d);E===void 0?E=[b]:E.push(b),this.symbolToIndices.set(d,E)}},at=class{constructor(d,b){var L;this.equation=b,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[E,G]=b.includes("->")?b.split("->",2):[b,""];if(!E.match(RegExp(me)))throw new Error("Invalid LHS term");if(E.split(",").forEach((W,R)=>{let te=d[R].dims.slice();if(!W.match(RegExp(re)))throw new Error("Invalid LHS term");let ae=this.processTerm(W,!0,te,R);this.lhs.push(ae)}),G==="")G+=[...this.symbolToInfo.entries()].filter(([W,R])=>R.count===1||W==="...").map(([W])=>W).join("");else if(!G.match(RegExp(K)))throw new Error("Invalid RHS");(L=G.match(RegExp(z,"g")))==null||L.forEach(W=>{if(W==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let R=this.symbolToInfo.get(W);if(R===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(R.dimValue)}}),this.rhs=this.processTerm(G,!1,this.outputDims)}addSymbol(d,b,E){let G=this.symbolToInfo.get(d);if(G!==void 0){if(G.dimValue!==b&&G.count!==1)throw new Error("Dimension mismatch");G.count++,G.inputIndices.push(E)}else G={count:1,dimValue:b,inputIndices:[E]};this.symbolToInfo.set(d,G)}processTerm(d,b,E,G=-1){let L=E.length,W=!1,R=[],te=0;if(!d.match(RegExp(re))&&!b&&d!=="")throw new Error("Invalid LHS term");let ae=d.match(RegExp(z,"g")),le=new _e(G);return ae==null||ae.forEach((Pe,Ge)=>{if(Pe==="..."){if(W)throw new Error("Only one ellipsis is allowed per input term");W=!0;let $=L-ae.length+1;if($<0)throw new Error("Ellipsis out of bounds");if(R=E.slice(te,te+$),this.hasEllipsis){if(this.ellipsisDims.length!==R.length||this.ellipsisDims.toString()!==R.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!b)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=R}for(let je=0;je<R.length;je++){let Ke=String.fromCharCode(48+je);le.addSymbol(Ke,Ge+je),this.addSymbol(Ke,E[te++],G)}}else le.addSymbol(Pe,Ge+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(Pe,E[te++],G)}),le}},yt=d=>d+"_max",Ut=(d,b,E,G)=>{let L=d.map(ae=>ae.length).map((ae,le)=>qt(`input${le}`,b,ae)),W=he.size(G),R=Tr("output",b,G.length),te=[...E.symbolToInfo.keys()].filter(ae=>!E.rhs.symbolToIndices.has(ae));return{name:"Einsum",shaderCache:{hint:E.equation,inputDependencies:d.map(()=>"rank")},getRunData:()=>{let ae=te.filter(Pe=>E.symbolToInfo.has(Pe)).map(Pe=>{var Ge;return{type:12,data:((Ge=E.symbolToInfo.get(Pe))==null?void 0:Ge.dimValue)||0}});ae.push({type:12,data:W});let le=d.map((Pe,Ge)=>[...Ar(Pe)]).reduce((Pe,Ge)=>Pe.concat(Ge),ae);return le.push(...Ar(G)),{outputs:[{dims:G,dataType:b}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:le}},getShaderSource:ae=>{let le=[],Pe=[],Ge=[],$=[],je=[],Ke=E.symbolToInfo.size===E.rhs.symbolToIndices.size;E.symbolToInfo.forEach((tt,dt)=>{var Ct;if(E.rhs.symbolToIndices.has(dt)){let Et=(Ct=E.rhs.symbolToIndices.get(dt))==null?void 0:Ct[0];Et!==void 0&&E.lhs.forEach((Ot,Ft)=>{if(tt.inputIndices.includes(Ft)){let Lt=Ot.symbolToIndices.get(dt);if(Lt===void 0)throw new Error("Invalid symbol error");Lt.forEach(yr=>{le.push(`${L[Ft].indicesSet(`input${Ft}Indices`,yr,R.indicesGet("outputIndices",Et))}`)})}})}else E.lhs.forEach((Et,Ot)=>{if(tt.inputIndices.includes(Ot)){let Ft=Et.symbolToIndices.get(dt);if(Ft===void 0)throw new Error("Invalid symbol error");Ft.forEach(Lt=>{Pe.push(`${L[Ot].indicesSet(`input${Ot}Indices`,Lt,`${dt}`)}`)}),je.push(`prod *= ${L[Ot].getByIndices(`input${Ot}Indices`)};`)}}),Ge.push(`for(var ${dt}: u32 = 0; ${dt} < uniforms.${yt(dt)}; ${dt}++) {`),$.push("}")});let nt=Ke?[...le,`let sum = ${L.map((tt,dt)=>tt.getByIndices(`input${dt}Indices`)).join(" * ")};`]:[...le,"var sum = 0.0;",...Ge,...Pe,"var prod = 1.0;",...je,"sum += prod;",...$];return`
            ${ae.registerUniforms(te.map(tt=>({name:`${yt(tt)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...L,R)}

            ${ae.mainStart()}
            ${ae.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${R.offsetToIndices("global_idx")};
            ${L.map((tt,dt)=>`var input${dt}Indices: ${L[dt].type.indices};`).join(`
`)}
            ${nt.join(`
`)};
            ${R.setByOffset("global_idx","sum")};
          }`}}},rr=(d,b)=>{let E=new at(d.inputs,b.equation),G=E.outputDims,L=d.inputs.map((W,R)=>W.dims);d.compute(Ut(L,d.inputs[0].dataType,E,G))},pr=d=>{let b=d.equation.replace(/\s+/g,"");return Pt({equation:b})}}),Of=be(()=>{Lr(),Os(),Ws(),Nr=d=>{if(!d||d.length!==2)throw new Error("Expand requires 2 input.");let b=d[0].dims,E=Array.from(d[1].getBigInt64Array(),Number),G=E.length<b.length?0:E.length-b.length,L=b.length<E.length?0:b.length-E.length;for(;G<E.length&&L<b.length;++G,++L)if(E[G]!==b[L]&&E[G]!==1&&b[L]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ns=(d,b)=>{let E=d.length-b.length,G=[];for(let L=0;L<E;++L)G.push(d[L]);for(let L=0;L<b.length;++L)G.push(b[L]===1?d[L+E]:b[L]);return G},ys=(d,b)=>d.length>b.length?ns(d,b):ns(b,d),Ea=d=>{let b=d[0].dims,E=Array.from(d[1].getBigInt64Array(),Number),G=ys(b,E),L=d[0].dataType,W=L===9||he.size(b)===1,R=L===9||b.length>0&&b[b.length-1]%4==0?4:1,te=W||G.length>0&&G[G.length-1]%4==0?4:1,ae=Math.ceil(he.size(G)/te),le=[{type:12,data:ae},...Ar(b,G)];return{name:"Expand",shaderCache:{hint:`${G.length};${R}${te}`,inputDependencies:["rank"]},getShaderSource:Pe=>{let Ge,$=qt("input",L,b.length,R),je=Tr("output",L,G.length,te);if(L===9){let Ke=(nt,tt,dt="")=>`
          let outputIndices${tt} = ${je.offsetToIndices(`outputOffset + ${tt}u`)};
          let offset${tt} = ${$.broadcastedIndicesToOffset(`outputIndices${tt}`,je)};
          let index${tt} = offset${tt} / 4u;
          let component${tt} = offset${tt} % 4u;
          ${nt}[${tt}] = ${dt}(${$.getByOffset(`index${tt}`)}[component${tt}]);
        `;Ge=`
        let outputOffset = global_idx * ${te};
        var data = vec4<u32>(0);
        ${Ke("data",0,"u32")}
        ${Ke("data",1,"u32")}
        ${Ke("data",2,"u32")}
        ${Ke("data",3,"u32")}
        ${je.setByOffset("global_idx","data")}
      }`}else Ge=`
        let outputIndices = ${je.offsetToIndices(`global_idx * ${te}`)};
        let inputOffset = ${$.broadcastedIndicesToOffset("outputIndices",je)};
        let data = ${je.type.value}(${$.getByOffset(`inputOffset / ${R}`)});
        ${je.setByOffset("global_idx","data")}
      }`;return`
    ${Pe.registerUniform("vec_size","u32").declareVariables($,je)}
    ${Pe.mainStart()}
    ${Pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${Ge}`},getRunData:()=>({outputs:[{dims:G,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(ae/64)},programUniforms:le})}},ti=d=>{Nr(d.inputs),d.compute(Ea(d.inputs),{inputs:[0]})}}),df=be(()=>{Lr(),Os(),Ws(),Dc(),rA=d=>{let b=d[0].dataType,E=he.size(d[0].dims),G=he.size(d[1].dims),L=G%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${L}`,inputDependencies:["type","type"]},getShaderSource:W=>{let R=qt("x",b,[1],4),te=qt("bias",b,[1],4),ae=Tr("y",b,[1],4),le=Ge=>`
      let bias${Ge}_offset: u32 = (global_idx * 4 + ${Ge}) % uniforms.bias_size;
      let bias${Ge} = ${te.getByOffset(`bias${Ge}_offset / 4`)}[bias${Ge}_offset % 4];`,Pe=L?`
      let bias = ${te.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${le(0)}${le(1)}${le(2)}${le(3)}
      let bias = ${R.type.value}(bias0, bias1, bias2, bias3);`;return`${W.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(R,te,ae)}

    ${wi(Yt(b))}

    ${W.mainStart(ir)}
      ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${R.getByOffset("global_idx")};
      ${Pe}
      let x_in = x + bias;
      ${ae.setByOffset("global_idx",yA("x_in"))}
    }`},getRunData:W=>({outputs:[{dims:W[0].dims,dataType:W[0].dataType}],programUniforms:[{type:12,data:Math.ceil(E/4)},{type:12,data:G}],dispatchGroup:{x:Math.ceil(E/ir/4)}})}},Yc=d=>{d.inputs.length<2||he.size(d.inputs[1].dims)===0?$o(d):d.compute(rA(d.inputs))}}),ff=be(()=>{Lr(),Os(),Bn(),Ws(),Kc=d=>{if(!d||d.length!==2)throw new Error("Gather requires 2 inputs.")},qc=(d,b)=>{let E=d[0].dims,G=d[1].dims,L=E.length,W=he.normalizeAxis(b.axis,L),R=E.slice(0);R.splice(W,1,...G);let te=E[W],ae=d[0].dataType===9?4:1,le=Math.ceil(he.size(R)/ae),Pe=[{type:12,data:le},{type:6,data:te},{type:12,data:W},...Ar(d[0].dims,d[1].dims,R)];return{name:"Gather",shaderCache:{hint:b.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:R,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(le/64)},programUniforms:Pe}),getShaderSource:Ge=>{let $,je=qt("data",d[0].dataType,d[0].dims.length,ae),Ke=qt("inputIndices",d[1].dataType,d[1].dims.length),nt=Tr("output",d[0].dataType,R.length,ae),tt=dt=>{let Ct=G.length,Et=`var indicesIndices${dt}  = ${Ke.type.indices}(0);`;for(let Ot=0;Ot<Ct;Ot++)Et+=`${Ct>1?`indicesIndices${dt}[${Ot}]`:`indicesIndices${dt}`} = ${R.length>1?`outputIndices${dt}[uniforms.axis + ${Ot}]`:`outputIndices${dt}`};`;Et+=`
          var idx${dt} = ${Ke.getByIndices(`indicesIndices${dt}`)};
          if (idx${dt} < 0) {
            idx${dt} = idx${dt} + uniforms.axisDimLimit;
          }
          var dataIndices${dt} : ${je.type.indices};
        `;for(let Ot=0,Ft=0;Ot<L;Ot++)Ot===W?(Et+=`${L>1?`dataIndices${dt}[${Ot}]`:`dataIndices${dt}`} = u32(idx${dt});`,Ft+=Ct):(Et+=`${L>1?`dataIndices${dt}[${Ot}]`:`dataIndices${dt}`} = ${R.length>1?`outputIndices${dt}[${Ft}]`:`outputIndices${dt}`};`,Ft++);return Et};if(d[0].dataType===9){let dt=(Ct,Et,Ot="")=>`
          let outputIndices${Et} = ${nt.offsetToIndices(`outputOffset + ${Et}u`)};
          ${tt(Et)};
          let offset${Et} = ${je.indicesToOffset(`dataIndices${Et}`)};
          let index${Et} = offset${Et} / 4u;
          let component${Et} = offset${Et} % 4u;
          ${Ct}[${Et}] = ${Ot}(${je.getByOffset(`index${Et}`)}[component${Et}]);
        `;$=`
        let outputOffset = global_idx * ${ae};
        var value = vec4<u32>(0);
        ${dt("value",0,"u32")}
        ${dt("value",1,"u32")}
        ${dt("value",2,"u32")}
        ${dt("value",3,"u32")}
        ${nt.setByOffset("global_idx","value")}
      `}else $=`
      let outputIndices = ${nt.offsetToIndices("global_idx")};
      ${tt("")};
      let value = ${je.getByIndices("dataIndices")};
      ${nt.setByOffset("global_idx","value")};
      `;return`
      ${Ge.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(je,Ke,nt)}
      ${Ge.mainStart()}
        ${Ge.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${$}
      }`}}},D0=d=>Pt({axis:d.axis}),S0=(d,b)=>{let E=d.inputs;Kc(E),d.compute(qc(d.inputs,b))}}),fe=be(()=>{Lr(),Os(),Ws(),Xc=(d,b,E,G,L,W,R,te,ae)=>{let le=[{type:12,data:W},{type:12,data:G},{type:12,data:L},{type:12,data:E},{type:12,data:R},{type:12,data:te},{type:12,data:ae}],Pe=[W];return le.push(...Ar(b.dims,Pe)),d.compute({name:"computeSliceOffsets",shaderCache:{hint:`${L.length}_${E.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:Pe,dataType:d.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:le}),getShaderSource:Ge=>{let $=[qt("indices_data",b.dataType,b.dims.length),Tr("input_slice_offsets_data",12,1,1)],je=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:L.length},{name:"sizes_from_slice_dims_data",type:"u32",length:E.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${Ge.registerUniforms(je).declareVariables(...$)}
  ${Ge.mainStart()}
    ${Ge.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${L.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${E.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[b],outputs:[-1]})[0]},G0=(d,b)=>{let E=d.inputs,G=E[0].dims,L=E[0].dataType,W=E[1].dims,R=W[W.length-1],te=he.sizeToDimension(W,W.length-1),ae=he.sizeFromDimension(G,b.batchDims+R),le=he.sizeToDimension(G,b.batchDims),Pe=he.sizeFromDimension(G,b.batchDims),Ge=te/le,$=new Array(R),je=ae;for(let Et=0;Et<R;++Et)$[R-1-Et]=je,je*=G[b.batchDims+R-1-Et];let Ke=Xc(d,E[1],$,b.batchDims,G,te,Ge,Pe,R),nt=b.batchDims+R;if(nt>G.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let tt=W.slice(0,-1).concat(G.slice(nt)),dt=he.size(tt),Ct=[{type:12,data:dt},{type:12,data:ae},...Ar(E[0].dims,Ke.dims,tt)];d.compute({name:"GatherND",shaderCache:{hint:b.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:tt,dataType:L}],dispatchGroup:{x:Math.ceil(dt/64)},programUniforms:Ct}),getShaderSource:Et=>{let Ot=qt("data",E[0].dataType,E[0].dims.length),Ft=qt("slice_offsets",12,Ke.dims.length),Lt=Tr("output",E[0].dataType,tt.length);return`
          ${Et.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(Ot,Ft,Lt)}
            ${Et.mainStart()}
            ${Et.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[E[0],Ke]})},F0=d=>({batchDims:d.batch_dims,cacheKey:""})}),Fe=be(()=>{Lr(),Os(),Bn(),Ws(),Zc=(d,b)=>{if(d.length<3||d.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let E=he.normalizeAxis(b.quantizeAxis,d[0].dims.length),G=b.blockSize,L=d[0],W=d[2],R=d.length===4?d[3]:void 0;if(W.dims.length!==L.dims.length||!L.dims.map((te,ae)=>ae===E?Math.ceil(te/G)===W.dims[ae]:te===W.dims[ae]).reduce((te,ae)=>te&&ae,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(R){if(R.dataType!==L.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(R.dims.length!==W.dims.length||!R.dims.map((te,ae)=>te===W.dims[ae]).reduce((te,ae)=>te&&ae,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Jc=(d,b)=>{let E=d[0].dims,G=d[1].dims,L=E.length,W=he.normalizeAxis(b.gatherAxis,L),R=he.normalizeAxis(b.quantizeAxis,L),te=E.slice(0);te.splice(W,1,...G);let ae=he.size(te),le=d[2].dataType,Pe=d[0].dataType===22,Ge=[{type:12,data:ae},{type:12,data:R},{type:12,data:W},{type:12,data:b.blockSize},...Ar(...d.map(($,je)=>$.dims),te)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${b.cacheKey};${d.filter(($,je)=>je!==1).map($=>$.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:d.length},($,je)=>"rank")},getRunData:()=>({outputs:[{dims:te,dataType:le}],dispatchGroup:{x:Math.ceil(ae/64)},programUniforms:Ge}),getShaderSource:$=>{let je=qt("data",d[0].dataType,d[0].dims.length),Ke=qt("inputIndices",d[1].dataType,d[1].dims.length),nt=qt("scales",d[2].dataType,d[2].dims.length),tt=d.length>3?qt("zeroPoint",d[3].dataType,d[3].dims.length):void 0,dt=Tr("output",le,te.length),Ct=[je,Ke,nt];return tt&&Ct.push(tt),`
        ${$.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...Ct,dt)}
        ${$.mainStart()}
        let output_indices = ${dt.offsetToIndices("global_idx")};
        var indices_indices = ${Ke.type.indices}(0);
        ${G.length>1?`
          for (var i: u32 = 0; i < ${G.length}; i++) {
            let index = ${dt.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${Ke.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${dt.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${je.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${dt.indicesGet("output_indices","i")};
          ${je.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${Ke.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${E[W]};
        }
        ${je.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${te.length}; i++) {
          let index = ${dt.indicesGet("output_indices",`i + ${G.length} - 1`)};
          ${je.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${je.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${je.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${Pe?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${nt.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${nt.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${nt.getByIndices("scale_indices")};
        ${tt?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${tt.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${tt.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${Pe?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Yt(le)}(quantized_data - zero_point) * scale;
        ${dt.setByOffset("global_idx","dequantized_data")};
    }`}}},$c=(d,b)=>{let E=d.inputs;Zc(E,b),d.compute(Jc(d.inputs,b))},a0=d=>Pt({blockSize:d.blockSize,gatherAxis:d.gatherAxis,quantizeAxis:d.quantizeAxis})}),et=be(()=>{Lr(),Os(),Bn(),Ws(),z0=d=>{if(!d||d.length!==2)throw new Error("GatherElements requires 2 inputs.");if(d[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(d[0].dims.length!==d[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},eu=(d,b)=>{let E=d[0].dims,G=d[0].dataType,L=E.length,W=d[1].dims,R=d[1].dataType,te=he.normalizeAxis(b.axis,L),ae=E[te],le=W.slice(0),Pe=he.size(le),Ge=qt("input",G,L),$=qt("indicesInput",R,W.length),je=Tr("output",G,le.length),Ke=[{type:12,data:Pe},{type:6,data:ae},{type:12,data:te}];return Ke.push(...Ar(E,W,le)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:le,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(Pe/64)},programUniforms:Ke}),getShaderSource:nt=>`
      ${nt.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(Ge,$,je)}
      ${nt.mainStart()}
      ${nt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${je.offsetToIndices("global_idx")};

      var idx = ${$.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${Ge.type.indices}(outputIndices);
      ${Ge.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${Ge.getByIndices("inputIndices")};

      ${je.setByOffset("global_idx","value")};
  }`}},tu=d=>Pt({axis:d.axis}),O0=(d,b)=>{let E=d.inputs;z0(E),d.compute(eu(d.inputs,b))}}),Gt=be(()=>{Lr(),Os(),Ws(),ru=d=>{if(!d)throw new Error("Input is missing");if(d.length<2||d.length>3)throw new Error("Invaid input number.");if(d.length===3&&d[2].dims.length>2)throw new Error("Invalid input shape of C");if(d[0].dataType!==d[1].dataType||d.length===3&&d[0].dataType!==d[2].dataType)throw new Error("Input types are mismatched")},su=(d,b)=>{let E=d[0].dims.slice(),G=d[1].dims.slice(),[L,W,R]=it.getShapeOfGemmResult(E,b.transA,G,b.transB,d.length===3?d[2].dims:void 0),te=[L,W];if(!te)throw new Error("Can't use gemm on the given tensors");let ae=16,le=Math.ceil(W/ae),Pe=Math.ceil(L/ae),Ge=(he.size(te),[{type:12,data:le},{type:12,data:L},{type:12,data:W},{type:12,data:R},{type:1,data:b.alpha},{type:1,data:b.beta}]),$=["type","type"];return d.length===3&&(Ge.push(...Ar(d[2].dims)),$.push("rank")),Ge.push(...Ar(te)),{name:"GemmShared",shaderCache:{hint:`${b.cacheKey}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:te,dataType:d[0].dataType}],dispatchGroup:{x:le*Pe},programUniforms:Ge}),getShaderSource:je=>{let Ke=qt("a",d[0].dataType,d[0].dims),nt=qt("b",d[1].dataType,d[1].dims),tt=null,dt=[Ke,nt];d.length===3&&(tt=qt("c",d[2].dataType,d[2].dims.length),dt.push(tt));let Ct=Tr("output",d[0].dataType,te.length);dt.push(Ct);let Et="",Ot="";b.transA&&b.transB?(Ot=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ke.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${nt.type.value}(0);
      }
      `,Et="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):b.transA&&!b.transB?(Ot=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ke.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${nt.type.value}(0);
      }
      `,Et="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!b.transA&&b.transB?(Ot=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ke.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${nt.type.value}(0);
      }
      `,Et="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!b.transA&&!b.transB&&(Ot=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ke.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${nt.type.value}(0);
      }
      `,Et="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let Ft=b.alpha===1?"":"value *= uniforms.alpha;";return`
  ${je.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...dt)}
  var<workgroup> tile_a: array<array<${Ke.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${nt.type.storage}, 16>, 16>;
  ${je.mainStart([ae,ae,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${Ct.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${Ot}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${Et}
      }
      workgroupBarrier();
    }

    ${Ft}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${tt!=null?`let cOffset = ${tt.broadcastedIndicesToOffset("vec2(m, n)",Ct)}; value += ${Ct.type.value}(uniforms.beta) * ${tt.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},Q0=d=>({transA:d.transA,transB:d.transB,alpha:d.alpha,beta:d.beta,cacheKey:`${d.transA};${d.transB};${d.alpha===1}`}),au=(d,b)=>{ru(d.inputs),d.compute(su(d.inputs,b))}}),er=be(()=>{Lr(),Os(),Bn(),Ws(),[sA,Qo,hl,ml]=[0,1,2,3],N0=d=>{if(d[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(d[0].dims.length!==d[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(d[0].dims.length-2!==d[1].dims[d[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(d[0].dims.length-2));if(d[0].dims[0]!==d[1].dims[0])throw new Error("grid batch size must match input batch size")},nu=d=>`
  fn gs_bicubic_interpolate(p: mat4x4<${d}>, x: f32, y: f32) -> ${d} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${d}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,L0=d=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${d.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,iu=d=>`
  ${d.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,ou=(d,b,E)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${b} {
     var pixel = ${b}(0);
     var indices = vec4<u32>(0);
     indices[${sA}] = batch;
     indices[${Qo}] = channel;`+(()=>{switch(E.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${hl}] = u32(r);
            indices[${ml}] = u32(c);
          }
        `;case"border":return`
          indices[${hl}] = u32(clamp(r, 0, H - 1));
          indices[${ml}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${hl}] = gs_reflect(r, border[1], border[3]);
          indices[${ml}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${E.paddingMode} is not supported`)}})()+`
    return ${d.getByIndices("indices")};
  }
`,R0=(d,b,E)=>(()=>{switch(E.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${sA}], indices[${Qo}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${sA}], indices[${Qo}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${sA}], indices[${Qo}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${sA}], indices[${Qo}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${sA}], indices[${Qo}], border);

          let dx2 = ${b}(f32(x2) - x);
          let dx1 = ${b}(x - f32(x1));
          let dy2 = ${b}(f32(y2) - y);
          let dy1 = ${b}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${b}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${sA}], indices[${Qo}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${E.mode} is not supported`)}})()+`${d.setByOffset("global_idx","result")}`,Au=(d,b)=>{let E=qt("x",d[0].dataType,d[0].dims.length),G=[d[1].dims[0],d[1].dims[1],d[1].dims[2]],L=qt("grid",d[1].dataType,G.length,2),W=[d[0].dims[0],d[0].dims[1],d[1].dims[1],d[1].dims[2]];b.format==="NHWC"&&(W=[d[0].dims[0],d[1].dims[1],d[1].dims[2],d[0].dims[3]],[sA,Qo,hl,ml]=[0,3,1,2]);let R=Tr("output",d[0].dataType,W.length),te=E.type.value,ae=[{type:12,data:he.size(W)},...Ar(d[0].dims,G,W)];return{name:"GridSample",shaderCache:{hint:`${b.cacheKey}`,inputDependencies:["type","type"]},getRunData:le=>{let Pe=he.size(W);return{outputs:[{dims:W,dataType:le[0].dataType}],dispatchGroup:{x:Math.ceil(Pe/64)},programUniforms:ae}},getShaderSource:le=>`
  ${le.registerUniform("output_size","u32").declareVariables(E,L,R)}
  
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }

  ${nu(te)}
  ${L0(b)}
  ${iu(b)}
  ${ou(E,te,b)}

  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${hl}]);
      let W_in = i32(uniforms.x_shape[${ml}]);

      ${b.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${R.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${sA}], indices[${hl}], indices[${ml}]);
      let nxy = ${L.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${R0(R,te,b)}
  }`}},lu=(d,b)=>{N0(d.inputs),d.compute(Au(d.inputs,b))},j0=d=>Pt({alignCorners:d.align_corners,mode:d.mode,paddingMode:d.padding_mode,format:d.format})}),$t=be(()=>{Lr(),Os(),Bn(),fd(),Pc(),Ws(),sl(),Qi=(d,b)=>d.length>b&&d[b].dims.length>0?d[b]:void 0,cu=(d,b)=>{let E=d[0],G=Qi(d,1),L=Qi(d,2),W=Qi(d,3),R=Qi(d,4),te=Qi(d,5),ae=Qi(d,6),le=Qi(d,7);if(E.dims.length!==3&&E.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let Pe,Ge=E.dims[0],$=E.dims[1],je=E.dims.length===3?E.dims[2]:b.numHeads*E.dims[4],Ke=$,nt=0,tt=0,dt=Math.floor(je/b.numHeads);if(ae&&le&&he.size(ae.dims)&&he.size(le.dims)){if(ae.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(ae.dims[0]!==Ge||ae.dims[1]!==b.numHeads||ae.dims[3]!==dt)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(le.dims[0]!==Ge||le.dims[1]!==b.numHeads||le.dims[3]!==dt)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(ae.dims[2]!==le.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(le.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');nt=ae.dims[2],tt=ae.dims[2]}else if(ae&&he.size(ae.dims)||le&&he.size(le.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(G&&he.size(G.dims)>0){if(E.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(G.dims.length<3||G.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(E.dims[0]!==G.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(G.dims.length===3){if(G.dims[2]!==E.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');Pe=2,Ke=G.dims[1]}else if(G.dims.length===5){if(G.dims[2]!==b.numHeads||G.dims[3]!==2||G.dims[4]!==dt)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(L)throw new Error('Expect "value" be none when "key" has packed kv format.');Pe=5,Ke=G.dims[1]}else{if(G.dims[1]!==b.numHeads||G.dims[3]!==dt)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');Pe=0,Ke=G.dims[2]}}else{if(E.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(E.dims[2]!==b.numHeads||E.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');Pe=3}if(W&&he.size(W.dims)>0){if(W.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(G&&G.dims.length===5&&G.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Ct=nt+Ke,Et=0;if(R&&he.size(R.dims)>0){Et=8;let Lt=R.dims;throw Lt.length===1?Lt[0]===Ge?Et=1:Lt[0]===3*Ge+2&&(Et=3):Lt.length===2&&Lt[0]===Ge&&Lt[1]===Ct&&(Et=5),Et===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let Ot=!1,Ft=je;if(L&&he.size(L.dims)>0){if(L.dims.length!==3&&L.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(E.dims[0]!==L.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(L.dims.length===3){if(Ke!==L.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Ft=L.dims[2]}else{if(Ke!==L.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');Ft=L.dims[1]*L.dims[3],Ot=!0}}if(R&&he.size(R.dims)>0)throw new Error("Key padding mask is not supported");if(te&&he.size(te.dims)>0){if(te.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(te.dims[0]!==Ge||te.dims[1]!==b.numHeads||te.dims[2]!==$||te.dims[3]!==Ct)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:Ge,sequenceLength:$,pastSequenceLength:nt,kvSequenceLength:Ke,totalSequenceLength:Ct,maxSequenceLength:tt,inputHiddenSize:0,hiddenSize:je,vHiddenSize:Ft,headSize:dt,vHeadSize:Math.floor(Ft/b.numHeads),numHeads:b.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:b.maskFilterValue,maskType:Et,scale:b.scale,broadcastResPosBias:!1,passPastInKv:Ot,qkvFormat:Pe}},V0=d=>Pt({...d}),n0=Pt({perm:[0,2,1,3]}),uu=(d,b,E,G,L,W,R)=>{let te=[G,L,W],ae=he.size(te),le=[{type:12,data:ae},{type:12,data:R},{type:12,data:W}];return d.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:te,dataType:b.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(ae/64)},programUniforms:le}),getShaderSource:Pe=>{let Ge=Tr("qkv_with_bias",b.dataType,te),$=qt("qkv",b.dataType,te),je=qt("bias",E.dataType,te);return`
  ${Pe.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables($,je,Ge)}
  ${Pe.mainStart()}
    ${Pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[b,E],outputs:[-1]})[0]},El=(d,b,E,G,L,W,R,te)=>{let ae=W;if(R&&he.size(R.dims)>0){if(G===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return ae=uu(d,W,R,b,G,E*L,te),ae=ae.reshape([b,G,E,L]),E===1||G===1?ae:d.compute(na(ae,n0.perm),{inputs:[ae],outputs:[-1]})[0]}return W.dims.length===3&&(ae=W.reshape([b,G,E,L])),E===1||G===1?ae:d.compute(na(ae,n0.perm),{inputs:[ae],outputs:[-1]})[0]},$A=(d,b)=>{let E=cu(d.inputs,b),G=d.inputs[0],L=Qi(d.inputs,1),W=Qi(d.inputs,2),R=Qi(d.inputs,3),te=Qi(d.inputs,4),ae=Qi(d.inputs,5),le=Qi(d.inputs,6),Pe=Qi(d.inputs,7);if(G.dims.length===5)throw new Error("Packed QKV is not implemented");if((L==null?void 0:L.dims.length)===5)throw new Error("Packed KV is not implemented");let Ge=L&&W&&L.dims.length===4&&W.dims.length===4,$=El(d,E.batchSize,E.numHeads,E.sequenceLength,E.headSize,G,R,0);if(Ge)return Yi(d,$,L,W,te,void 0,le,Pe,ae,E);if(!L||!W)throw new Error("key and value must be provided");let je=El(d,E.batchSize,E.numHeads,E.kvSequenceLength,E.headSize,L,R,E.hiddenSize),Ke=El(d,E.batchSize,E.numHeads,E.kvSequenceLength,E.vHeadSize,W,R,2*E.hiddenSize);Yi(d,$,je,Ke,te,void 0,le,Pe,ae,E)}}),cr=be(()=>{Lr(),Os(),Bn(),Ws(),du=d=>{if(!d||d.length<1)throw new Error("too few inputs")},fu=(d,b)=>{let E=[],G=b.numOutputs;return d[1].dims[0]>0&&(d[1].getBigInt64Array().forEach(L=>E.push(Number(L))),G=E.length),Pt({numOutputs:G,axis:b.axis,splitSizes:E})},gu=d=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${d}u; i += 1u ) {
    if (index < ${kr("uniforms.size_in_split_axis","i",d)}) {
        return i;
    }
    }
    return ${d}u;
}`,W0=d=>{let b=d.length,E=[];for(let G=0;G<b;++G){let L=d[G].setByIndices("indices","input[global_idx]");b===1?E.push(L):G===0?E.push(`if (output_number == ${G}u) { ${L} }`):G===b-1?E.push(`else { ${L} }`):E.push(`else if (output_number == ${G}) { ${L} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${d[0].type.indices}, global_idx: u32) {
        ${E.join(`
`)}
      }`},i0=(d,b)=>{let E=d[0].dims,G=he.size(E),L=d[0].dataType,W=he.normalizeAxis(b.axis,E.length),R=new Array(b.numOutputs),te=qt("input",L,E.length),ae=new Array(b.numOutputs),le=[],Pe=[],Ge=0,$=[{type:12,data:G}];for(let je=0;je<b.numOutputs;je++){Ge+=b.splitSizes[je],ae[je]=Ge;let Ke=E.slice();Ke[W]=b.splitSizes[je],Pe.push(Ke),R[je]=Tr(`output${je}`,L,Ke.length),le.push({dims:Pe[je],dataType:d[0].dataType})}return $.push({type:12,data:ae},...Ar(E,...Pe)),{name:"Split",shaderCache:{hint:b.cacheKey,inputDependencies:["rank"]},getShaderSource:je=>`
  ${je.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",ae.length).declareVariables(te,...R)}
  ${gu(ae.length)}
  ${W0(R)}

  ${je.mainStart()}
    ${je.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${te.offsetToIndices("global_idx")};
    var index = ${te.indicesGet("indices",W)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${kr("uniforms.size_in_split_axis","output_number - 1u",ae.length)};
      ${te.indicesSet("indices",W,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:le,dispatchGroup:{x:Math.ceil(G/64)},programUniforms:$})}},pu=(d,b)=>{du(d.inputs);let E=d.inputs.length===1?b:fu(d.inputs,b);d.compute(i0(d.inputs,E),{inputs:[0]})},hu=d=>{let b=d.axis,E=d.splitSizes,G=d.numOutputs<0?E.length:d.numOutputs;if(G!==E.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Pt({axis:b,numOutputs:G,splitSizes:E})}}),Gr=be(()=>{Bn(),Pc(),$t(),cr(),sl(),mu=(d,b)=>{if(b.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(b.doRotary&&d.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let E=d[0],G=d[1],L=d[2],W=d[3],R=d[4];if(b.localWindowSize!==-1)throw new Error("Local attention is not supported");if(b.softcap!==0)throw new Error("Softcap is not supported");if(b.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(b.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(E.dims.length!==3&&E.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let te=E.dims[0],ae=E.dims[1],le=E.dims.length===3?E.dims[2]:b.numHeads*E.dims[4],Pe=ae,Ge=0,$=!G||G.dims.length===0,je=Math.floor($?le/(b.numHeads+2*b.kvNumHeads):le/b.numHeads);$&&(le=je*b.numHeads);let Ke=W&&W.dims.length!==0,nt=R&&R.dims.length!==0;if(Ke&&W.dims.length===4&&W.dims[0]===te&&W.dims[1]!==b.kvNumHeads&&W.dims[2]===b.kvNumHeads&&W.dims[3]===je)throw new Error("BSNH pastKey/pastValue is not supported");if(Ke&&nt){if(W.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(R.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');Ge=W.dims[2]}else if(Ke||nt)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let tt=1;if(G&&G.dims.length>0){if(E.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(G.dims.length<3||G.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(E.dims[0]!==G.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(G.dims.length===3){if(E.dims[2]%G.dims[2]!=0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');Pe=G.dims[1]}else if(G.dims.length===5){if(G.dims[2]!==b.numHeads||G.dims[3]!==2||G.dims[4]!==je)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(L)throw new Error('Expect "value" be none when "key" has packed kv format.');Pe=G.dims[1]}else{if(G.dims[1]!==b.numHeads||G.dims[3]!==je)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');Pe=G.dims[2]}}else{if(E.dims.length!==3&&E.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(E.dims.length===5&&(E.dims[2]!==b.numHeads||E.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');tt=3}let dt=!1,Ct=b.kvNumHeads?je*b.kvNumHeads:le;if(L&&L.dims.length>0){if(L.dims.length!==3&&L.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(E.dims[0]!==L.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(L.dims.length===3){if(Pe!==L.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Ct=L.dims[2]}else{if(Pe!==L.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');Ct=L.dims[1]*L.dims[3],dt=!0}}let Et=d.length>4?d[5]:void 0;if(Et&&Et.dims.length!==1&&Et.dims[0]!==te)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:te,sequenceLength:ae,pastSequenceLength:Ge,kvSequenceLength:Pe,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:le,vHiddenSize:Ct,headSize:je,vHeadSize:Math.floor(Ct/b.kvNumHeads),numHeads:b.numHeads,kvNumHeads:b.kvNumHeads,nReps:b.numHeads/b.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:b.scale,broadcastResPosBias:!1,passPastInKv:dt,qkvFormat:tt}},bu=Pt({perm:[0,2,1,3]}),ql=(d,b,E)=>{let G=b,L=E.kvNumHeads;return b.dims.length===3&&E.kvSequenceLength!==0&&(G=b.reshape([E.batchSize,E.kvSequenceLength,L,E.headSize]),G=d.compute(na(G,bu.perm),{inputs:[G],outputs:[-1]})[0]),G},U0=(d,b)=>{var tt;let E=mu(d.inputs,b);if(d.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((tt=d.inputs[1])==null?void 0:tt.dims.length)===5)throw new Error("Packed KV is not implemented");let G=d.inputs[0],L=d.inputs[1]&&d.inputs[1].dims.length>0?d.inputs[1]:void 0,W=d.inputs[2]&&d.inputs[2].dims.length>0?d.inputs[2]:void 0,R=d.inputs[3]&&d.inputs[3].dims.length!==0?d.inputs[3]:void 0,te=d.inputs[4]&&d.inputs[4].dims.length!==0?d.inputs[4]:void 0,ae=d.inputs.length>4?d.inputs[5]:void 0,le=d.inputs.length>5?d.inputs[6]:void 0,Pe=E.kvNumHeads?E.kvNumHeads:E.numHeads,Ge=Pt({axis:2,numOutputs:3,splitSizes:[E.numHeads*E.headSize,Pe*E.headSize,Pe*E.headSize]}),[$,je,Ke]=L||W?[G,L,W]:d.compute(i0([G],Ge),{inputs:[G],outputs:[-1,-1,-1]}),nt=El(d,E.batchSize,E.numHeads,E.sequenceLength,E.headSize,$,void 0,0);Yi(d,nt,ql(d,je,E),ql(d,Ke,E),void 0,void 0,R,te,void 0,E,ae,le)}}),Fr=be(()=>{Lr(),Os(),sl(),Ws(),H0=(d,b,E,G,L,W,R,te)=>{let ae=Wr(W),le=ae===1?"f32":`vec${ae}f`,Pe=ae===1?"vec2f":`mat2x${ae}f`,Ge=L*R,$=64;Ge===1&&($=256);let je=[L,R,W/ae],Ke=[L,R,2],nt=[];return nt.push(...Ar(je,Ke)),d.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${ae};${te};${$}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:Ke,dataType:1}],dispatchGroup:{x:Ge},programUniforms:nt}),getShaderSource:tt=>{let dt=qt("x",b.dataType,3,ae),Ct=[dt,qt("scale",E.dataType,E.dims),qt("bias",G.dataType,G.dims),Tr("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${Pe}, ${$}>;
  const workgroup_size = ${$}u;
  ${tt.declareVariables(...Ct)}
  ${tt.mainStart($)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${le}(0);
    var squared_sum = ${le}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${le}(${dt.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${Pe}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${as("workgroup_shared[0][0]",ae)} / f32(hight * ${ae});
      let squared_sum_final = ${as("workgroup_shared[0][1]",ae)} / f32(hight * ${ae});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${te}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[b,E,G],outputs:[-1]})[0]},Cu=(d,b,E)=>{let G=b[0].dims,L=G,W=G[0],R=G[1],te=he.sizeFromDimension(G,2),ae=Wr(te),le=he.size(L)/ae,Pe=H0(d,b[0],b[1],b[2],W,te,R,E.epsilon),Ge=[W,R,te/ae],$=[W,R];d.compute({name:"InstanceNormalization",shaderCache:{hint:`${ae}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:L,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(le/64)},programUniforms:[{type:12,data:le},...Ar(Ge,$,Ge)]}),getShaderSource:je=>{let Ke=qt("x",b[0].dataType,Ge.length,ae),nt=qt("scale_shift",1,$.length,2),tt=Tr("output",b[0].dataType,Ge.length,ae),dt=[Ke,nt,tt];return`
  ${je.registerUniform("output_size","u32").declareVariables(...dt)}
  ${je.mainStart()}
  ${je.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${tt.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${nt.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${Ke.getByOffset("global_idx")} * ${tt.type.value}(scale_shift.x) + ${tt.type.value}(scale_shift.y);
      ${tt.setByOffset("global_idx","value")};
  }`}},{inputs:[b[0],Pe]})},Bl=(d,b,E)=>{let G=b[0].dims,L=G,W=G[0],R=G[G.length-1],te=he.sizeFromDimension(G,1)/R,ae=Wr(R),le=he.size(L)/ae,Pe=[{type:12,data:te},{type:12,data:Math.floor(R/ae)}],Ge=!1,$=[0,G.length-1];for(let nt=0;nt<G.length-2;nt++)Ge=Ge||G[nt+1]!==1,$.push(nt+1);Ge=Ge&&G[G.length-1]!==1;let je=Ge?d.compute(na(d.inputs[0],$),{inputs:[d.inputs[0]],outputs:[-1]})[0]:d.inputs[0].reshape(Array.from({length:G.length},(nt,tt)=>G[$[tt]])),Ke=H0(d,je,b[1],b[2],W,te,R,E.epsilon);d.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${ae}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:L,dataType:b[0].dataType}],dispatchGroup:{x:Math.ceil(le/64)},programUniforms:Pe}),getShaderSource:nt=>{let tt=nr(b[0].dataType),dt=ae===1?"vec2f":`mat${ae}x2f`,Ct=Ft=>{let Lt=Ft===0?"x":"y",yr=ae===1?"f32":`vec${ae}f`;switch(ae){case 1:return`${tt}(${yr}(scale.${Lt}))`;case 2:return`vec2<${tt}>(${yr}(scale[0].${Lt}, scale[1].${Lt}))`;case 4:return`vec4<${tt}>(${yr}(scale[0].${Lt}, scale[1].${Lt}, scale[2].${Lt}, scale[3].${Lt}))`;default:throw new Error(`Not supported compoents ${ae}`)}},Et=qt("input",b[0].dataType,b[0].dims,ae),Ot=Tr("output",b[0].dataType,L,ae);return`
  @group(0) @binding(0) var<storage, read> input : array<${Et.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${dt}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${Ot.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${nt.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${Ct(0)}, ${Ct(1)});
  }`}},{inputs:[b[0],Ke]})},wu=(d,b)=>{b.format==="NHWC"?Bl(d,d.inputs,b):Cu(d,d.inputs,b)}}),Er=be(()=>{Lr(),Os(),Ws(),Iu=d=>{if(!d||d.length<2)throw new Error("layerNorm requires at least 2 inputs.")},el=(d,b,E)=>{let G=b.simplified,L=d[0].dims,W=d[1],R=!G&&d[2],te=L,ae=he.normalizeAxis(b.axis,L.length),le=he.sizeToDimension(L,ae),Pe=he.sizeFromDimension(L,ae),Ge=he.size(W.dims),$=R?he.size(R.dims):0;if(Ge!==Pe||R&&$!==Pe)throw new Error(`Size of X.shape()[axis:] == ${Pe}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${Ge} and bias size of ${$}`);let je=[];for(let Ot=0;Ot<L.length;++Ot)Ot<ae?je.push(L[Ot]):je.push(1);let Ke=Wr(Pe),nt=["type","type"],tt=[{type:12,data:le},{type:1,data:Pe},{type:12,data:Math.floor(Pe/Ke)},{type:1,data:b.epsilon}];R&&nt.push("type");let dt=E>1,Ct=E>2,Et=[{dims:te,dataType:d[0].dataType}];return dt&&Et.push({dims:je,dataType:1}),Ct&&Et.push({dims:je,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${Ke};${E};${G}`,inputDependencies:nt},getRunData:()=>({outputs:Et,dispatchGroup:{x:Math.ceil(le/64)},programUniforms:tt}),getShaderSource:Ot=>{let Ft=nr(d[0].dataType),Lt=[qt("x",d[0].dataType,d[0].dims,Ke),qt("scale",W.dataType,W.dims,Ke)];return R&&Lt.push(qt("bias",R.dataType,R.dims,Ke)),Lt.push(Tr("output",d[0].dataType,te,Ke)),dt&&Lt.push(Tr("mean_data_output",1,je)),Ct&&Lt.push(Tr("inv_std_output",1,je)),`
  ${Ot.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...Lt)}
  ${Ot.mainStart()}
    ${Ot.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${xs("f32",Ke)};
    var mean_square_vector = ${xs("f32",Ke)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Ys(Ft,Ke,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${as("mean_vector",Ke)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${as("mean_square_vector",Ke)} / uniforms.norm_size ${G?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Ys(Ft,Ke,"x[j + offset]")};
      let f32scale = ${Ys(Ft,Ke,"scale[j]")};
      output[j + offset] = ${Lt[0].type.value}((f32input ${G?"":"- mean"}) * inv_std_dev * f32scale
        ${R?`+ ${Ys(Ft,Ke,"bias[j]")}`:""}
      );
    }

    ${dt?"mean_data_output[global_idx] = mean":""};
    ${Ct?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},yu=(d,b)=>{Iu(d.inputs),d.compute(el(d.inputs,b,d.outputCount))}}),Vr=be(()=>{Os(),Gc(),Fc(),o0=d=>{if(!d||d.length!==2)throw new Error("MatMul requires 2 inputs.");if(d[0].dims[d[0].dims.length-1]!==d[1].dims[d[1].dims.length-2])throw new Error("shared dimension does not match.")},ku=d=>{o0(d.inputs);let b=pe.calcShape(d.inputs[0].dims,d.inputs[1].dims,!0);if(!b)throw new Error("Can't use matmul on the given tensors");let E=b[b.length-1],G=d.inputs[0].dims[d.inputs[0].dims.length-1];if(E<8&&G<8)d.compute(zo(d.inputs,{activation:""},b));else{let L=b[b.length-2],W=he.size(d.inputs[0].dims.slice(0,-2)),R=he.size(d.inputs[1].dims.slice(0,-2));if(W!==1&&L===1&&R===1){let te=[1,W,E],ae=[d.inputs[0].reshape([1,W,G]),d.inputs[1].reshape([1,G,E])];d.compute(t(ae,{activation:""},b,te),{inputs:ae})}else d.compute(t(d.inputs,{activation:""},b))}}}),Zr=be(()=>{Lr(),Os(),Bn(),Ws(),_u=(d,b)=>{if(d.length<3||d.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let E=d[0],G=E.dims.length;if(E.dims[G-1]!==b.k)throw new Error("The last dim of input shape does not match the k value");let L=Math.floor((b.k+b.blockSize-1)/b.blockSize),W=b.blockSize/8*b.bits,R=d[1];if(!he.areEqual(R.dims,[b.n,L,W]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let te=d[2].dims;if(he.size(te)!==b.n*L)throw new Error("scales input size error.");if(d.length===4){let ae=d[3].dims,le=b.bits>4?b.n*L:b.n*Math.floor((L+1)/2);if(he.size(ae)!==le)throw new Error("zeroPoints input size error.")}},Y0=(d,b)=>{let E=d[0].dims,G=E.length,L=E[G-2],W=b.k,R=b.n,te=E.slice(0,G-2),ae=he.size(te),le=d[1].dims[2]/4,Pe=d[0].dataType,Ge=Wr(b.k),$=Wr(le),je=Wr(R),Ke=te.concat([L,R]),nt=L>1&&R/je%2==0?2:1,tt=he.size(Ke)/je/nt,dt=64,Ct=[],Et=[ae,L,W/Ge],Ot=he.convertShape(d[1].dims).slice();Ot.splice(-1,1,le/$),Ct.push(...Ar(Et)),Ct.push(...Ar(Ot)),Ct.push(...Ar(d[2].dims)),d.length===4&&Ct.push(...Ar(he.convertShape(d[3].dims)));let Ft=[ae,L,R/je];return Ct.push(...Ar(Ft)),{name:"MatMulNBits",shaderCache:{hint:`${b.blockSize};${b.bits};${Ge};${$};${je};${nt};64`,inputDependencies:Array(d.length).fill("rank")},getRunData:()=>({outputs:[{dims:Ke,dataType:Pe}],dispatchGroup:{x:tt},programUniforms:Ct}),getShaderSource:Lt=>{let yr=Et.length,Or=qt("a",d[0].dataType,yr,Ge),gs=qt("b",12,Ot.length,$),ps=qt("scales",d[2].dataType,d[2].dims.length),pa=[Or,gs,ps],hs=d.length===4?qt("zero_points",12,d[3].dims.length):void 0;hs&&pa.push(hs);let Vs=Ft.length,Ss=Tr("output",d[0].dataType,Vs,je),tr=nr(d[0].dataType),$r=(()=>{switch(Ge){case 1:return`array<${tr}, 8>`;case 2:return`mat4x2<${tr}>`;case 4:return`mat2x4<${tr}>`;default:throw new Error(`${Ge}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${Ss.type.value}, ${nt*dt}>;
        ${Lt.declareVariables(...pa,Ss)}
        ${Lt.mainStart([dt,1,1])}
          let output_indices = ${Ss.offsetToIndices(`(global_idx / 64) * ${nt}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${b.blockSize/Ge};
            ${(()=>{let Yr=`
            var col_index = col * ${je};
            ${hs?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${tr}(8);`}
            `;for(let qr=0;qr<je*nt;qr++)Yr+=`
            let scale${qr} = ${ps.getByOffset("col_index * nBlocksPerCol + block")};
            ${hs?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${hs.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${qr} = ${tr}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Yr})()}
            for (var word: u32 = 0; word < ${le}; word += ${$}) {
              ${(()=>{let Yr=`col_index = col * ${je};`;for(let qr=0;qr<je*nt;qr++)Yr+=`
            let b${qr}_data = ${gs.getByIndices(`${gs.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Yr+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${$r};
            var b_dequantized_values: ${$r};`,Yr})()}
              for (var i: u32 = 0; i < ${$}; i++) {
                ${(()=>{let Yr=`
          // reuse a data
            var input_offset = ${Or.indicesToOffset(`${Or.type.indices}(batch, row, word_offset)`)};
            var a_data: ${$r};
            for (var j: u32 = 0; j < ${8/Ge}; j++) {
              a_data[j] = ${Or.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let qr=0;qr<je*nt;qr++)Yr+=`
            b_value = ${$===1?`b${qr}_data`:`b${qr}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${$r}(${Array.from({length:4},(Ta,vi)=>`${tr}(b_value_lower[${vi}]), ${tr}(b_value_upper[${vi}])`).join(", ")});
            b_dequantized_values = ${Ge===1?`${$r}(${Array.from({length:8},(Ta,vi)=>`(b_quantized_values[${vi}] - ${hs?`zero_point${qr}`:"zero_point"}) * scale${qr}`).join(", ")});`:`(b_quantized_values - ${$r}(${Array(8).fill(hs?`zero_point${qr}`:"zero_point").join(",")})) * scale${qr};`};
            workgroup_shared[local_id.x * ${nt} + ${Math.floor(qr/je)}]${je>1?`[${qr%je}]`:""} += ${Array.from({length:8/Ge},(Ta,vi)=>Ge===1?`a_data[${vi}] * b_dequantized_values[${vi}]`:`dot(a_data[${vi}], b_dequantized_values[${vi}])`).join(" + ")};
          `;return Yr})()}
                word_offset += ${8/Ge};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${nt}) {
            var output_value: ${Ss.type.value} = ${Ss.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${nt};
            }
            ${Ss.setByIndices(`${Ss.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},jd=(d,b)=>{let E=d[0].dims,G=E.length,L=E[G-2],W=b.k,R=b.n,te=E.slice(0,G-2),ae=he.size(te),le=d[1].dims[2]/4,Pe=d[0].dataType,Ge=Wr(b.k),$=Wr(le),je=te.concat([L,R]),Ke=R%8==0?8:R%4==0?4:1,nt=128/Ke,tt=nt*$*8,dt=tt/Ge,Ct=tt/b.blockSize,Et=he.size(je)/Ke,Ot=[],Ft=[ae,L,W/Ge],Lt=he.convertShape(d[1].dims).slice();Lt.splice(-1,1,le/$),Ot.push(...Ar(Ft)),Ot.push(...Ar(Lt)),Ot.push(...Ar(d[2].dims)),d.length===4&&Ot.push(...Ar(he.convertShape(d[3].dims)));let yr=[ae,L,R];return Ot.push(...Ar(yr)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${b.blockSize};${Ge};${$};${nt};${Ke}`,inputDependencies:Array(d.length).fill("rank")},getRunData:()=>({outputs:[{dims:je,dataType:Pe}],dispatchGroup:{x:Et},programUniforms:Ot}),getShaderSource:Or=>{let gs=Ft.length,ps=qt("a",d[0].dataType,gs,Ge),pa=qt("b",12,Lt.length,$),hs=qt("scales",d[2].dataType,d[2].dims.length),Vs=[ps,pa,hs],Ss=d.length===4?qt("zero_points",12,d[3].dims.length):void 0;Ss&&Vs.push(Ss);let tr=yr.length,$r=Tr("output",d[0].dataType,tr),Yr=nr(d[0].dataType);return`
        var<workgroup> sub_a: array<${ps.type.value}, ${dt}>;
        var<workgroup> inter_results: array<array<${$r.type.value}, ${nt}>, ${Ke}>;
        ${Or.declareVariables(...Vs,$r)}
        ${Or.mainStart([nt,Ke,1])}
          let output_indices = ${$r.offsetToIndices(`workgroup_index * ${Ke}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${Ct} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${dt};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${dt}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${ps.getByIndices(`${ps.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${ps.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${Ct} + local_id.x;
            ${Ss?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Ss.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${Yr}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Yr}(8);`}
            let scale = ${hs.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${pa.getByIndices(`${pa.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${b.blockSize/Ge};
            for (var i: u32 = 0; i < ${$}; i++) {
              ${(()=>{switch(Ge){case 1:return`
          let a_data0 = vec4<${Yr}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${Yr}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${Yr}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${Yr}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${Ge}-component is not supported.`)}})()}
              let b_value = ${$===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${Yr}>(${Array.from({length:4},(qr,Ta)=>`${Yr}(b_value_lower[${Ta}]), ${Yr}(b_value_upper[${Ta}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${Yr}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(qr,Ta)=>`dot(a_data${Ta}, b_dequantized_values[${Ta}])`).join(" + ")};
              word_offset += ${8/Ge};
            }
            workgroupBarrier();
          }

          if (local_idx < ${Ke}) {
            var output_value: ${$r.type.value} = ${$r.type.value}(0);
            for (var b = 0u; b < ${nt}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${$r.setByIndices(`${$r.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},vu=(d,b)=>{_u(d.inputs,b),b.blockSize===32&&d.adapterInfo.isVendor("intel")&&d.adapterInfo.isArchitecture("gen-12lp")?d.compute(jd(d.inputs,b)):d.compute(Y0(d.inputs,b))},xu=d=>Pt(d)}),_s=be(()=>{Lr(),Os(),Ws(),Mu=d=>{if(!d||d.length<1)throw new Error("Too few inputs");if(d[0].dataType!==1&&d[0].dataType!==10)throw new Error("Input type must be float or float16.");if(d.length>=2){let b=2*d[0].dims.length===d[1].dims[0];if(d.length===4&&(b=2*d[3].dims[0]===d[1].dims[0]),!b)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},tl=(d,b,E)=>{let G="";for(let L=b-1;L>=0;--L)G+=`
            k = i32(${d.indicesGet("indices",L)}) - ${kr("uniforms.pads",L,E)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${kr("uniforms.x_shape",L,b)})) {
              break;
            }
            offset += k * i32(${kr("uniforms.x_strides",L,b)});
        `;return`
          value = ${d.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${G}
            value = x[offset];
          }
      `},Eu=(d,b,E)=>{let G="";for(let L=b-1;L>=0;--L)G+=`
                k = i32(${d.indicesGet("indices",L)}) - ${kr("uniforms.pads",L,E)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${kr("uniforms.x_shape",L,b)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${kr("uniforms.x_shape",L,b)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${kr("uniforms.x_strides",L,b)});
            `;return`
              var offset = 0;
              var k = 0;
              ${G}
              value = x[offset];
          `},Bu=(d,b,E)=>{let G="";for(let L=b-1;L>=0;--L)G+=`
                k = i32(${d.indicesGet("indices",L)}) - ${kr("uniforms.pads",L,E)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${kr("uniforms.x_shape",L,b)})) {
                  k = i32(${kr("uniforms.x_shape",L,b)}) - 1;
                }
                offset += k * i32(${kr("uniforms.x_strides",L,b)});
            `;return`
              var offset = 0;
              var k = 0;
              ${G}
              value = x[offset];
          `},Tu=(d,b,E)=>{let G="";for(let L=b-1;L>=0;--L)G+=`
                k = i32(${d.indicesGet("indices",L)}) - ${kr("uniforms.pads",L,E)};
                if (k < 0)  {
                  k += i32(${kr("uniforms.x_shape",L,b)}]);
                }
                if (k >= i32(${kr("uniforms.x_shape",L,b)})) {
                  k -= i32(${kr("uniforms.x_shape",L,b)});
                }
                offset += k * i32(${kr("uniforms.x_strides",L,b)});
            `;return`
              var offset = 0;
              var k = 0;
              ${G}
              value = x[offset];
          `},Xl=(d,b,E)=>{switch(E.mode){case 0:return tl(d,b,E.pads.length);case 1:return Eu(d,b,E.pads.length);case 2:return Bu(d,b,E.pads.length);case 3:return Tu(d,b,E.pads.length);default:throw new Error("Invalid mode")}},Pu=(d,b)=>{let E=he.padShape(d[0].dims.slice(),b.pads),G=d[0].dims,L=[{type:12,data:he.size(E)},{type:6,data:b.pads}],W=d.length>=3&&d[2].data;return b.mode===0&&L.push({type:W?d[2].dataType:1,data:b.value}),L.push(...Ar(d[0].dims,E)),{name:"Pad",shaderCache:{hint:`${b.mode}${W}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:E,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(he.size(E)/64)},programUniforms:L}),getShaderSource:R=>{let te=Tr("output",d[0].dataType,E.length),ae=qt("x",d[0].dataType,G.length),le=ae.type.value,Pe=Xl(te,G.length,b),Ge=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:b.pads.length}];return b.mode===0&&Ge.push({name:"constant_value",type:W?le:"f32"}),`
            ${R.registerUniforms(Ge).declareVariables(ae,te)}
            ${R.mainStart()}
            ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${te.offsetToIndices("global_idx")};

            var value = ${le}(0);
            ${Pe}
            output[global_idx] = value;
        }`}}},Du=(d,b)=>{if(d.length>1){let E=d[1].getBigInt64Array(),G=d.length>=3&&d[2].data?d[2].dataType===10?d[2].getUint16Array()[0]:d[2].getFloat32Array()[0]:0,L=d[0].dims.length,W=new Int32Array(2*L).fill(0);if(d.length>=4){let te=d[3].getBigInt64Array();for(let ae=0;ae<te.length;ae++)W[Number(te[ae])]=Number(E[ae]),W[Number(te[ae])+L]=Number(E[ae+te.length])}else E.forEach((te,ae)=>W[Number(ae)]=Number(te));let R=[];return W.forEach(te=>R.push(te)),{mode:b.mode,value:G,pads:R}}return b},Su=(d,b)=>{Mu(d.inputs);let E=Du(d.inputs,b);d.compute(Pu(d.inputs,E),{inputs:[0]})}}),ka=be(()=>{$e(),Lr(),Os(),Ws(),bl=d=>{if(M.webgpu.validateInputContent&&(!d||d.length!==1))throw new Error("Pool ops requires 1 input.")},A0=(d,b,E)=>{let G=b.format==="NHWC",L=d.dims.slice();G&&L.splice(1,0,L.pop());let W=Object.hasOwnProperty.call(b,"dilations"),R=b.kernelShape.slice(),te=b.strides.slice(),ae=W?b.dilations.slice():[],le=b.pads.slice();qe.adjustPoolAttributes(E,L,R,te,ae,le);let Pe=qe.computePoolOutputShape(E,L,te,ae,R,le,b.autoPad),Ge=Object.assign({},b);W?Object.assign(Ge,{kernelShape:R,strides:te,pads:le,dilations:ae,cacheKey:b.cacheKey}):Object.assign(Ge,{kernelShape:R,strides:te,pads:le,cacheKey:b.cacheKey});let $=Pe.slice();return $.push($.splice(1,1)[0]),[Ge,G?$:Pe]},K0=(d,b)=>{let E=b.format==="NHWC",G=[{type:12,data:he.size(d)},{type:12,data:he.size(b.kernelShape)}],L=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(b.kernelShape.length<=2){let W=b.kernelShape[b.kernelShape.length-1],R=b.strides[b.strides.length-1],te=b.pads[b.pads.length/2-1],ae=b.pads[b.pads.length-1],le=!!(te+ae);G.push({type:12,data:W},{type:12,data:R},{type:12,data:te},{type:12,data:ae}),L.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let Pe=!1;if(b.kernelShape.length===2){let Ge=b.kernelShape[b.kernelShape.length-2],$=b.strides[b.strides.length-2],je=b.pads[b.pads.length/2-2],Ke=b.pads[b.pads.length-2];Pe=!!(je+Ke),G.push({type:12,data:Ge},{type:12,data:$},{type:12,data:je},{type:12,data:Ke}),L.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[G,L,!0,le,Pe]}{if(E)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let W=he.computeStrides(b.kernelShape);G.push({type:12,data:W},{type:12,data:b.pads},{type:12,data:b.strides}),L.push({name:"kernelStrides",type:"u32",length:W.length},{name:"pads",type:"u32",length:b.pads.length},{name:"strides",type:"u32",length:b.strides.length});let R=b.pads.reduce((te,ae)=>te+ae);return[G,L,!!R,!1,!1]}},q0=(d,b,E,G,L,W,R,te,ae,le,Pe,Ge)=>{let $=L.format==="NHWC",je=b.type.value,Ke=Tr("output",b.type.tensor,G);if(L.kernelShape.length<=2){let nt="",tt="",dt="",Ct=E-($?2:1);if(nt=Pe?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Ct}] = indices[${Ct}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Ct}] < 0 || xIndices[${Ct}]
                      >= uniforms.x_shape[${Ct}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${b.indicesToOffset("xIndices")}];
                  ${W}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Ct}] = indices[${Ct}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${b.indicesToOffset("xIndices")}];
                  ${W}
                }`,L.kernelShape.length===2){let Et=E-($?3:2);tt=Ge?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${Et}] = indices[${Et}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${Et}] < 0 || xIndices[${Et}] >= uniforms.x_shape[${Et}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${Et}] = indices[${Et}] * uniforms.sh - uniforms.phStart + j;
                `,dt=`
              }
            `}return`
            ${d.registerUniforms(ae).declareVariables(b,Ke)}

            ${d.mainStart()}
              ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${Ke.offsetToIndices("global_idx")};
              var xIndices = ${Ke.offsetToIndices("global_idx")};

              var value = ${je}(${te});
              var pad = 0;
              ${tt}
              ${nt}
              ${dt}
              ${R}

              output[global_idx] = value;
            }`}{if($)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let nt=L.kernelShape.length,tt=L.pads.length,dt="";return dt=le?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${b.indicesToOffset("xIndices")}];
                ${W}
              }`:`
              }
              let x_val = x[${b.indicesToOffset("xIndices")}];
              ${W}
            `,`
            ${d.registerUniforms(ae).declareVariables(b,Ke)}

            ${d.mainStart()}
              ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${Ke.offsetToIndices("global_idx")};
              var xIndices = ${Ke.offsetToIndices("global_idx")};

              var offsets: array<u32, ${nt}>;

              var value = ${je}(${te});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${nt-1}u; j++) {
                  offsets[j] = offset / ${kr("uniforms.kernelStrides","j",nt)};
                  offset -= offsets[j] * ${kr("uniforms.kernelStrides","j",nt)};
                }
                offsets[${nt-1}] = offset;

                isPad = false;
                for (var j = ${E-nt}u; j < ${E}u; j++) {
                  xIndices[j] = indices[j] * ${kr("uniforms.strides",`j - ${E-nt}u`,nt)}
                    + offsets[j - ${E-nt}u] - ${kr("uniforms.pads","j - 2u",tt)};
                  ${dt}
              }
              ${R}

              output[global_idx] = value;
            }`}},X0=d=>`${d.format};${d.ceilMode};${d.autoPad};${d.kernelShape.length}`,Vd=d=>`${X0(d)};${d.countIncludePad}`,Gu=d=>`${X0(d)};${d.storageOrder};${d.dilations}`,l0=d=>({format:d.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][d.auto_pad],ceilMode:d.ceil_mode,kernelShape:d.kernel_shape,strides:d.strides,pads:d.pads}),Z0=(d,b,E,G)=>{let[L,W]=A0(b,G,E),R=qt("x",b.dataType,b.dims.length),te=R.type.value,ae="";L.countIncludePad?ae+=`value /= ${te}(uniforms.kernelSize);`:ae+=`value /= ${te}(i32(uniforms.kernelSize) - pad);`;let[le,Pe,Ge,$,je]=K0(W,L);return le.push(...Ar(b.dims,W)),{name:d,shaderCache:{hint:`${G.cacheKey};${Ge};${$};${je}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:W,dataType:b.dataType}],dispatchGroup:{x:Math.ceil(he.size(W)/64)},programUniforms:le}),getShaderSource:Ke=>q0(Ke,R,b.dims.length,W.length,L,"value += x_val;",ae,0,Pe,Ge,$,je)}},Tl=d=>{let b=d.count_include_pad!==0,E=l0(d);if(E.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let G={countIncludePad:b,...E,cacheKey:""};return{...G,cacheKey:Vd(G)}},J0=(d,b)=>{bl(d.inputs),d.compute(Z0("AveragePool",d.inputs[0],!1,b))},$0={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Fu=d=>{let b=d.format;return{format:b,...$0,cacheKey:b}},ec=(d,b)=>{bl(d.inputs),d.compute(Z0("GlobalAveragePool",d.inputs[0],!0,b))},tc=(d,b,E,G)=>{let[L,W]=A0(b,G,E),R=qt("x",b.dataType,b.dims.length),[te,ae,le,Pe,Ge]=K0(W,L);return te.push(...Ar(b.dims,W)),{name:d,shaderCache:{hint:`${G.cacheKey};${le};${Pe};${Ge}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:W,dataType:b.dataType}],dispatchGroup:{x:Math.ceil(he.size(W)/64)},programUniforms:te}),getShaderSource:$=>q0($,R,b.dims.length,W.length,L,`
      value = max(x_val, value);
    `,"",b.dataType===10?-65504:-1e5,ae,le,Pe,Ge)}},zu=(d,b)=>{bl(d.inputs),d.compute(tc("MaxPool",d.inputs[0],!1,b))},c0=d=>{let b=d.storage_order,E=d.dilations,G=l0(d);if(b!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(G.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let L={storageOrder:b,dilations:E,...G,cacheKey:""};return{...L,cacheKey:Gu(L)}},u0=d=>{let b=d.format;return{format:b,...$0,cacheKey:b}},Wd=(d,b)=>{bl(d.inputs),d.compute(tc("GlobalMaxPool",d.inputs[0],!0,b))}}),Ts=be(()=>{Lr(),Os(),Bn(),Ws(),Ou=(d,b)=>{if(d.length<2||d.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(d.length===3&&d[1].dims===d[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(d.length===3&&d[0].dataType!==d[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(d[0].dataType===6&&d.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(d[1].dims.length!==0&&d[1].dims.length!==1&&d[1].dims.length!==d[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(d.length>2){if(d[0].dataType!==d[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(d[1].dims.length!==d[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!d[1].dims.map((E,G)=>E===d[2].dims[G]).reduce((E,G)=>E&&G,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(b.blockSize>0){if(d[1].dims.length===0||d[1].dims.length===1&&d[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!d[1].dims.map((L,W)=>W===b.axis||L===d[0].dims[W]).reduce((L,W)=>L&&W,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(d[1].dims.length!==d[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let E=d[0].dims[b.axis],G=d[1].dims[b.axis];if(b.blockSize<Math.ceil(E/G)||b.blockSize>Math.ceil(E/(G-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Qu=(d,b)=>{let E=he.normalizeAxis(b.axis,d[0].dims.length),G=d[0].dataType,L=G===3,W=d[0].dims,R=d[1].dataType,te=he.size(W),ae=G===3||G===2,le=ae?[Math.ceil(he.size(d[0].dims)/4)]:d[0].dims,Pe=d[1].dims,Ge=d.length>2?d[2]:void 0,$=Ge?ae?[Math.ceil(he.size(Ge.dims)/4)]:Ge.dims:void 0,je=Pe.length===0||Pe.length===1&&Pe[0]===1,Ke=je===!1&&Pe.length===1,nt=Wr(te),tt=je&&(!ae||nt===4),dt=tt?nt:1,Ct=tt&&!ae?nt:1,Et=qt("input",ae?12:G,le.length,Ct),Ot=qt("scale",R,Pe.length),Ft=Ge?qt("zero_point",ae?12:G,$.length):void 0,Lt=Tr("output",R,W.length,dt),yr=[Et,Ot];Ft&&yr.push(Ft);let Or=[le,Pe];Ge&&Or.push($);let gs=[{type:12,data:te/dt},{type:12,data:E},{type:12,data:b.blockSize},...Ar(...Or,W)];return{name:"DequantizeLinear",shaderCache:{hint:b.cacheKey,inputDependencies:Ft?["rank","rank","rank"]:["rank","rank"]},getShaderSource:ps=>`
      ${ps.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...yr,Lt)}
      ${ps.mainStart()}
          ${ps.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Lt.offsetToIndices("global_idx")};

          // Set input x
          ${ae?`
            let input = ${Et.getByOffset("global_idx / 4")};
            let x_vec = ${L?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${dt===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${Et.getByOffset("global_idx")};`};

          // Set scale input
          ${je?`let scale_value= ${Ot.getByOffset("0")}`:Ke?`
            let scale_index = ${Lt.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${Ot.getByOffset("scale_index")};`:`
            var scale_indices: ${Ot.type.indices} = output_indices;
            let index = ${Ot.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${Ot.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${Ot.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${Ft?je?ae?`
                let zero_point_input = ${Ft.getByOffset("0")};
                let zero_point_vec =  ${L?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${Ft.getByOffset("0")}`:Ke?ae?`
                let zero_point_index = ${Lt.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${Ft.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${L?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Lt.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${Ft.getByOffset("zero_point_index")};`:ae?`
                let zero_point_offset = ${Ot.indicesToOffset("scale_indices")};
                let zero_point_input = ${Ft.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${L?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${Ft.getByIndices("scale_indices")};`:`let zero_point_value = ${ae?L?"i32":"u32":Et.type.value}(0);`};
      // Compute and write output
      ${Lt.setByOffset("global_idx",`${Lt.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:W,dataType:R}],dispatchGroup:{x:Math.ceil(te/dt/64),y:1,z:1},programUniforms:gs})}},rc=(d,b)=>{Ou(d.inputs,b),d.compute(Qu(d.inputs,b))},d0=d=>Pt({axis:d.axis,blockSize:d.blockSize})}),js=be(()=>{$e(),Lr(),Ws(),Ud=(d,b,E)=>{if(d===b||d<b&&E<0||d>b&&E>0)throw new Error("Range these inputs' contents are invalid.")},sc=(d,b,E,G)=>{let L=Math.abs(Math.ceil((b-d)/E)),W=[L],R=L,te=[{type:12,data:R},{type:G,data:d},{type:G,data:E},...Ar(W)];return{name:"Range",shaderCache:{hint:`${G}`},getShaderSource:ae=>{let le=Tr("output",G,W.length),Pe=le.type.value,Ge=[{name:"outputSize",type:"u32"},{name:"start",type:Pe},{name:"delta",type:Pe}];return`
        ${ae.registerUniforms(Ge).declareVariables(le)}
        ${ae.mainStart()}
        ${ae.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${Pe}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:W,dataType:G}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:te})}},Nu=d=>{let b=0,E=0,G=0;d.inputs[0].dataType===6?(b=d.inputs[0].getInt32Array()[0],E=d.inputs[1].getInt32Array()[0],G=d.inputs[2].getInt32Array()[0]):d.inputs[0].dataType===1&&(b=d.inputs[0].getFloat32Array()[0],E=d.inputs[1].getFloat32Array()[0],G=d.inputs[2].getFloat32Array()[0]),M.webgpu.validateInputContent&&Ud(b,E,G),d.compute(sc(b,E,G,d.inputs[0].dataType),{inputs:[]})}}),Us=be(()=>{Lr(),Os(),Bn(),Ws(),ac=(d,b,E,G)=>{if(d!=="none"&&G!=="i32"&&G!=="u32"&&G!=="f32")throw new Error(`Input ${G} is not supported with reduction ${d}.`);let L=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,W=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${b}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(d){case"none":return`${b}=${E};`;case"add":return G==="i32"||G==="u32"?`atomicAdd(&${b}, bitcast<${G}>(${E}));`:`
              ${L}bitcast<${G}>(oldValue) + (${E})${W}`;case"max":return G==="i32"||G==="u32"?`atomicMax(&${b}, bitcast<${G}>(${E}));`:`
                ${L}max(bitcast<f32>(oldValue), (${E}))${W}`;case"min":return G==="i32"||G==="u32"?`atomicMin(&${b}, bitcast<${G}>(${E}));`:`${L}min(bitcast<${G}>(oldValue), (${E}))${W}`;case"mul":return`${L}(bitcast<${G}>(oldValue) * (${E}))${W}`;default:throw new Error(`Reduction ${d} is not supported.`)}},nc=(d,b)=>{let E=d[0].dims,G=d[1].dims,L=E,W=Math.ceil(he.size(G)/1),R=G[G.length-1],te=he.sizeFromDimension(E,R),ae=[{type:12,data:W},{type:12,data:R},{type:12,data:te},...Ar(d[1].dims,d[2].dims,L)];return{name:"ScatterND",shaderCache:{hint:`${b.cacheKey}_${b.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:L,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:ae}),getShaderSource:le=>{let Pe=qt("indices",d[1].dataType,d[1].dims.length),Ge=qt("updates",d[2].dataType,d[2].dims.length,1),$=b.reduction!=="none"&&b.reduction!==""?ha("output",d[0].dataType,L.length):Tr("output",d[0].dataType,L.length,1);return`
      ${le.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(Pe,Ge,$)}
      ${le.mainStart()}
        ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${d[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${ac(b.reduction,"output[data_offset + i]","value",$.type.value)}
  }

      }`}}},Lu=d=>Pt({reduction:d.reduction}),ic=(d,b)=>{d.compute(nc(d.inputs,b),{inputs:[d.inputs[1],d.inputs[2]],outputs:[]})}}),_a=be(()=>{Lr(),Os(),Bn(),Ws(),oc=(d,b)=>{if(d.every(E=>E>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),d.length>0){if(b.mode==="linear"){if(!(d.length===2||d.length===3||d.length===4&&d[0]===1&&d[1]===1||d.length===4&&d[0]===1&&d[3]===1||d.length===5&&d[0]===1&&d[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(b.mode==="cubic"&&!(d.length===2||d.length===4&&d[0]===1&&d[1]===1||d.length===4&&d[0]===1&&d[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Ru=(d,b,E)=>{b.every(L=>L>=0&&L<E||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let G=new Array(E).fill(1);return b.forEach((L,W)=>G[L]=d[W]),G},Ac=(d,b,E,G,L,W)=>{let[R,te,ae]=E>10?[1,2,3]:[-1,d.length>1?1:-1,-1],le=d[0].dims.length;if(R>0&&d.length>R&&d[R].dims.length>0)d[R].getFloat32Array().forEach(Pe=>W.push(Pe));else if(b.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(te>0&&d.length>te&&d[te].dims.length===1&&d[te].dims[0]>0){if(d[te].getFloat32Array().forEach(Pe=>G.push(Pe)),G.length!==0&&G.length!==le&&E>=18&&G.length!==b.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");oc(G,b),b.axes.length>0&&Ru(G,b.axes,le).forEach((Pe,Ge)=>G[Ge]=Pe)}if(ae>0&&d.length>ae&&d[ae].dims.length===1&&d[ae].dims[0]>0&&(d[ae].getBigInt64Array().forEach(Pe=>L.push(Number(Pe))),L.length!==0&&L.length!==le&&E>=18&&L.length!==b.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(b.axes.length>0){if(G.length!==0&&G.length!==b.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(L.length!==0&&L.length!==b.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof G<"u"&&typeof L<"u"&&G.length>0&&L.length>le)throw new Error("Resize requires only of scales or sizes to be specified")},f0=(d,b,E,G)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${d}) * (${b});
  let whole = ${G}(big / (${E}));
  let fract = ${G}(big % (${E})) / ${G}(${E});
  return whole + fract;
`,Hd=(d,b)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${b} { `+(()=>{switch(d){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${b}(xResized) / ${b}(xScale);
          } else {
            ${f0("xResized","lengthOriginal","lengthResized",b)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${b}(xResized) + 0.5) / ${b}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${b}(xResized) + 0.5) / ${b}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${f0("xResized","lengthOriginal - 1","lengthResized - 1",b)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${b}(roiStart) * ${b}(lengthOriginal - 1) +
                        (${b}(xResized) * ${b}(roiEnd - roiStart) * ${b}(lengthOriginal - 1)) /
                        ${b}(lengthResized - 1);
                  } else {
                    return 0.5 * ${b}(roiStart + roiEnd) * ${b}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${b}xScale * ${b}(lengthResized);
                  const adjustment = ${b}(lengthResized) / outputWidth;
                  const center = ${b}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${b}(xResized) + 0.5) / ${b}(xScale)) - 0.5;`;case"half_pixel":return`return ((${b}(xResized) + 0.5) / ${b}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${d} is not supported`)}})()+"}",lc=(d,b,E)=>`fn getNearestPixelFromOriginal(xOriginal: ${E}, isDownSample: bool) -> ${E} {`+(()=>{switch(d){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(b<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${d} is not supported`)}})()+"}",cc=(d,b,E)=>{let G=new Array(E).fill(0).concat(new Array(E).fill(1)),L=d.length===0?G:d.slice();return b.length>0?(b.forEach((W,R)=>{G[W]=L[R],G[R+E]=L[b.length+R]}),G):L},ju=(d,b,E,G)=>{let L=[];if(E.length>0)if(G.length>0){if(d.forEach(W=>L.push(W)),Math.max(...G)>d.length)throw new Error("axes is out of bound");G.forEach((W,R)=>L[W]=E[R])}else E.forEach(W=>L.push(W));else{if(b.length===0)throw new Error("Resize requires either scales or sizes.");L=d.map((W,R)=>Math.round(W*b[R]))}return L},uc=(d,b,E)=>{let G=(()=>{switch(E.keepAspectRatioPolicy){case"not_larger":return E.axes.length>0?Math.min(...E.axes.map(W=>b[W]),Number.MAX_VALUE):Math.min(...b,Number.MAX_VALUE);case"not_smaller":return E.axes.length>0?Math.max(...E.axes.map(W=>b[W]),Number.MIN_VALUE):Math.max(...b,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${E.keepAspectRatioPolicy} is not supported`)}})();b.fill(1,0,b.length);let L=d.slice();return E.axes.length>0?(E.axes.forEach(W=>b[W]=G),E.axes.forEach(W=>L[W]=Math.round(d[W]*b[W]))):(b.fill(G,0,b.length),L.forEach((W,R)=>L[R]=Math.round(W*b[R]))),L},Zl=(d,b,E,G,L)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${d.type.indices}) -> array<${d.type.value}, ${E.length}> {
      var original_indices: array<${d.type.value}, ${E.length}>;
      for (var i:u32 = 0; i < ${E.length}; i++) {
        var output_index = ${d.indicesGet("output_indices","i")};
        var scale = ${kr("uniforms.scales","i",G)};
        var roi_low = ${kr("uniforms.roi","i",L)};
        var roi_hi = ${kr("uniforms.roi",`i + ${b.length}`,L)};
        if (scale == 1.0) {
          original_indices[i] = ${d.type.value}(output_index);
        } else {
          var input_shape_i = ${kr("uniforms.input_shape","i",b.length)};
          var output_shape_i = ${kr("uniforms.output_shape","i",E.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Yd=(d,b,E,G,L,W,R)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${b.type.indices}) -> ${d.type.indices} {
      var input_indices: ${d.type.indices};
      for (var i:u32 = 0; i < ${G.length}; i++) {
        var output_index = ${b.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${kr("uniforms.scales","i",L)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${kr("uniforms.roi","i",W)};
          var roi_hi = ${kr("uniforms.roi",`i + ${E.length}`,W)};
          var input_shape_i = ${kr("uniforms.input_shape","i",E.length)};
          var output_shape_i = ${kr("uniforms.output_shape","i",G.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${R} || (original_idx >= 0 && original_idx < ${b.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${b.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${d.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Vu=(d,b)=>`
    fn checkInputIndices(input_indices: ${d.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${b.length}; i++) {
        var input_index = ${d.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${kr("uniforms.input_shape","i",b.length)}) {
          return false;
        }
      }
      return true;
    }`,g0=(d,b,E,G)=>d.rank>G?`
    ${d.indicesSet("input_indices",b,"channel")};
    ${d.indicesSet("input_indices",E,"batch")};
`:"",dc=(d,b,E,G,L)=>{let[W,R,te,ae]=E.length===2?[-1,0,1,-1]:[0,2,3,1],le=d.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${le} {
      var input_indices: ${d.type.indices};
      ${d.indicesSet("input_indices",R,`max(0, min(row, ${E[R]} - 1))`)};
      ${d.indicesSet("input_indices",te,`max(0, min(col, ${E[te]} - 1))`)};
      ${g0(d,ae,W,2)}
      return ${d.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${b.type.indices}) -> ${le} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${le} = originalIndices[${R}];
      var col:${le} = originalIndices[${te}];
      ${G?`if (row < 0 || row > (${E[R]} - 1) || col < 0 || col > (${E[te]} - 1)) {
        return ${L};
      }`:""};
      row = max(0, min(row, ${E[R]} - 1));
      col = max(0, min(col, ${E[te]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${E.length>2?`u32(originalIndices[${ae}])`:"0"};
      var batch: u32 =  ${E.length>2?`u32(originalIndices[${W}])`:"0"};
      var x11: ${le} = getInputValue(batch, channel, row1, col1);
      var x12: ${le} = getInputValue(batch, channel, row1, col2);
      var x21: ${le} = getInputValue(batch, channel, row2, col1);
      var x22: ${le} = getInputValue(batch, channel, row2, col2);
      var dx1: ${le} = abs(row - ${le}(row1));
      var dx2: ${le} = abs(${le}(row2) - row);
      var dy1: ${le} = abs(col - ${le}(col1));
      var dy2: ${le} = abs(${le}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Wu=(d,b,E,G,L,W,R,te,ae,le)=>{let Pe=E.length===2,[Ge,$]=Pe?[0,1]:[2,3],je=d.type.value,Ke=nt=>{let tt=nt===Ge?"row":"col";return`
      fn ${tt}CubicInterpolation(input_indices: ${d.type.indices}, output_indices: ${b.type.indices}) -> ${je} {
        var output_index = ${b.indicesGet("output_indices",nt)};
        var originalIdx: ${je} = getOriginalCoordinateFromResizedCoordinate(output_index, ${L[nt]},
        ${G[nt]}, ${E[nt]}, ${W[nt]}, ${W[nt]} + ${E.length});
        var fractOriginalIdx: ${je} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${te} && (originalIdx < 0 || originalIdx > (${E[nt]} - 1))) {
          return ${ae};
        }
        var data: array<${je}, 4> = array<${je}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${tt}: ${je} = originalIdx + ${je}(i);
          if (${tt} < 0 || ${tt} >= ${E[nt]}) {
            ${le?`coefs[i + 1] = 0.0;
                        continue;`:te?`return ${ae};`:`${tt} = max(0, min(${tt}, ${E[nt]} - 1));`};
          }
        var input_indices_copy: ${d.type.indices} = input_indices;
          ${d.indicesSet("input_indices_copy",nt,`u32(${tt})`)};
          data[i + 1] = ${nt===Ge?d.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${Ke(Ge)};
    ${Ke($)};
  fn getCubicInterpolationCoefs(s: ${je}) -> array<${je}, 4> {
    var absS = abs(s);
    var coeffs: array<${je}, 4> = array<${je}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${je} = 1.0 - absS;
    var twoMinusAbsS: ${je} = 2.0 - absS;
    var onePlusAbsS: ${je} = 1.0 + absS;
    coeffs[0] = ((${R} * onePlusAbsS - 5 * ${R}) * onePlusAbsS + 8 * ${R}) * onePlusAbsS - 4 * ${R};
    coeffs[1] = ((${R} + 2) * absS - (${R} + 3)) * absS * absS + 1;
    coeffs[2] = ((${R} + 2) * oneMinusAbsS - (${R} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${R} * twoMinusAbsS - 5 * ${R}) * twoMinusAbsS + 8 * ${R}) * twoMinusAbsS - 4 * ${R};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${je}, 4>, coefs: array<${je}, 4>) -> ${je} {
    var coefsSum: ${je} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${b.type.indices}) -> ${je} {
    var input_indices: ${d.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},fc=(d,b,E,G,L)=>{let[W,R,te,ae,le]=E.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],Pe=d.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${Pe} {
      var input_indices: ${d.type.indices};
      ${d.indicesSet("input_indices",R,`max(0, min(depth, ${E[R]} - 1))`)};
      ${d.indicesSet("input_indices",te,`max(0, min(height, ${E[te]} - 1))`)};
      ${d.indicesSet("input_indices",ae,`max(0, min(width, ${E[ae]} - 1))`)};
      ${g0(d,le,W,3)}
      return ${d.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${b.type.indices}) -> ${Pe} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${Pe} = originalIndices[${R}];
      var height:${Pe} = originalIndices[${te}];
      var width:${Pe} = originalIndices[${ae}];
      ${G?`if (depth < 0 || depth > (${E[R]} - 1) || height < 0 || height > (${E[te]} - 1) || width < 0 || (width > ${E[ae]} - 1)) {
      return ${L};
        }`:""};

    depth = max(0, min(depth, ${E[R]} - 1));
      height = max(0, min(height, ${E[te]} - 1));
      width = max(0, min(width, ${E[ae]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${E.length>3?`u32(originalIndices[${le}])`:"0"};
      var batch: u32 =  ${E.length>3?`u32(originalIndices[${W}])`:"0"};

      var x111: ${Pe} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${Pe} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${Pe} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${Pe} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${Pe} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${Pe} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${Pe} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${Pe} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${Pe} = abs(depth - ${Pe}(depth1));
      var dx2: ${Pe} = abs(${Pe}(depth2) - depth);
      var dy1: ${Pe} = abs(height - ${Pe}(height1));
      var dy2: ${Pe} = abs(${Pe}(height2) - height);
      var dz1: ${Pe} = abs(width - ${Pe}(width1));
      var dz2: ${Pe} = abs(${Pe}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},gc=(d,b,E,G,L,W)=>{let R=d.dims,te=cc(W,b.axes,R.length),ae=ju(R,G,L,b.axes),le=G.slice();G.length===0&&(le=R.map((dt,Ct)=>dt===0?1:ae[Ct]/dt),b.keepAspectRatioPolicy!=="stretch"&&(ae=uc(R,le,b)));let Pe=Tr("output",d.dataType,ae.length),Ge=qt("input",d.dataType,R.length),$=he.size(ae),je=R.length===ae.length&&R.every((dt,Ct)=>dt===ae[Ct]),Ke=b.coordinateTransformMode==="tf_crop_and_resize",nt=b.extrapolationValue,tt=Ge.type.value;return{name:"Resize",shaderCache:{hint:`${b.cacheKey}|${E}|${le.length>0?b.mode==="cubic"?le:le.length:""}|${L.length>0?L:""}|${te.length>0?te:""}|${je}|${b.mode==="nearest"?R.length:R}`,inputDependencies:["rank"]},getShaderSource:dt=>`
      ${je?"":`
      ${Hd(b.coordinateTransformMode,tt)};
      ${(()=>{switch(b.mode){case"nearest":return`
              ${Vu(Ge,R)};
              ${lc(b.nearestMode,E,tt)};
              ${Yd(Ge,Pe,R,ae,le.length,te.length,Ke)};
              `;case"linear":return`
              ${Zl(Pe,R,ae,le.length,te.length)};
              ${(()=>{if(R.length===2||R.length===4)return`${dc(Ge,Pe,R,Ke,nt)}`;if(R.length===3||R.length===5)return`${fc(Ge,Pe,R,Ke,nt)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(R.length===2||R.length===4)return`${Wu(Ge,Pe,R,ae,le,te,b.cubicCoeffA,Ke,b.extrapolationValue,b.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${dt.registerUniform("output_size","u32").registerUniform("scales","f32",le.length).registerUniform("roi","f32",te.length).declareVariables(Ge,Pe)}
      ${dt.mainStart()}
        ${dt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${je?"output[global_idx] = input[global_idx];":`
        let output_indices = ${Pe.offsetToIndices("global_idx")};
        var input_indices: ${Ge.type.indices};
        ${(()=>{switch(b.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${Ge.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${b.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${R.length===2||R.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${b.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:ae,dataType:d.dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},{type:1,data:le},{type:1,data:te},...Ar(R,ae)]})}},Uu=d=>{let b=d.customDataBuffer;return new Uint32Array(b,b.byteOffset,1)[0]},Hu=(d,b)=>{let E=[],G=[],L=[],W=Uu(d);if(b.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Ac(d.inputs,b,W,E,G,L),d.compute(gc(d.inputs[0],b,W,E,G,L),{inputs:[0]})},pc=d=>{let b=d.antialias,E=d.axes,G=d.coordinateTransformMode,L=d.cubicCoeffA,W=d.excludeOutside!==0,R=d.extrapolationValue,te=d.keepAspectRatioPolicy,ae=d.mode,le=d.nearestMode===""?"simple":d.nearestMode;return Pt({antialias:b,axes:E,coordinateTransformMode:G,cubicCoeffA:L,excludeOutside:W,extrapolationValue:R,keepAspectRatioPolicy:te,mode:ae,nearestMode:le})}}),nn=be(()=>{Lr(),Os(),Bn(),Ws(),Kd=(d,b)=>{let[E,G,L,W]=d,{numHeads:R,rotaryEmbeddingDim:te}=b;if(E.dims.length!==3&&E.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${E.dims.length}`);if(!he.areEqual(G.dims,[])&&!he.areEqual(G.dims,[1])&&G.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${G.dims.length}`);if(L.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${L.dims.length}`);if(W.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${W.dims.length}`);if(!he.areEqual(L.dims,W.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(te>0&&R===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let ae=E.dims[0],le=E.dims[E.dims.length-2],Pe=L.dims[0],Ge=he.sizeFromDimension(E.dims,1)/le,$=te===0?2*L.dims[1]:Ge/R;if(te>$)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(G.dims.length===2){if(ae!==G.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${G.dims[0]}`);if(le!==G.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${G.dims[1]}`)}if($/2!==L.dims[1]&&te/2!==L.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${L.dims[1]}`);if(le>Pe)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},qd=(d,b)=>{let{interleaved:E,numHeads:G,rotaryEmbeddingDim:L,scale:W}=b,R=d[0].dims[0],te=he.sizeFromDimension(d[0].dims,1),ae=d[0].dims[d[0].dims.length-2],le=te/ae,Pe=d[2].dims[1],Ge=L===0?2*Pe:le/G,$=new Array(R,ae,le/Ge,Ge-Pe),je=he.computeStrides($),Ke=[{type:1,data:W},{type:12,data:$},{type:12,data:je},...d[0].dims.length===3?new Array({type:12,data:[te,le,Ge,1]}):[],...d[0].dims.length===4?new Array({type:12,data:[te,Ge,ae*Ge,1]}):[],...Ar(d[0].dims,d[1].dims,d[2].dims,d[3].dims,d[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:Pt({interleaved:E}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:nt=>{let tt=qt("input",d[0].dataType,d[0].dims.length),dt=qt("position_ids",d[1].dataType,d[1].dims.length),Ct=qt("cos_cache",d[2].dataType,d[2].dims.length),Et=qt("sin_cache",d[3].dataType,d[3].dims.length),Ot=Tr("output",d[0].dataType,d[0].dims.length);return nt.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:$.length},{name:"global_strides",type:"u32",length:je.length},{name:"input_output_strides",type:"u32",length:je.length}]),`
        ${nt.declareVariables(tt,dt,Ct,Et,Ot)}

        ${nt.mainStart(ir)}
          let half_rotary_emb_dim = uniforms.${Ct.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${nt.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${dt.broadcastedIndicesToOffset("bsnh.xy",Tr("",dt.type.tensor,2))};
            let position_id =
                u32(${dt.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${E});
            let j = i + select(half_rotary_emb_dim, 1, ${E});
            let re = ${tt.getByOffset("i")} * ${Ct.get("position_id","bsnh[3]")} -
                ${tt.getByOffset("j")} * ${Et.get("position_id","bsnh[3]")};
            ${Ot.setByOffset("i","re")}
            let im = ${tt.getByOffset("i")} * ${Et.get("position_id","bsnh[3]")} +
                ${tt.getByOffset("j")} * ${Ct.get("position_id","bsnh[3]")};
            ${Ot.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${Ot.setByOffset("k",tt.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(he.size($)/ir)},programUniforms:Ke})}},hc=(d,b)=>{Kd(d.inputs,b),d.compute(qd(d.inputs,b))}}),pn=be(()=>{Lr(),Os(),Ws(),p0=d=>{if(!d||d.length<3)throw new Error("layerNorm requires at least 3 inputs.");let b=d[0],E=d[1],G=d[2];if(b.dataType!==E.dataType||b.dataType!==G.dataType)throw new Error("All inputs must have the same data type");if(b.dims.length!==3&&b.dims.length!==2)throw new Error("Input must be 2D or 3D");if(E.dims.length!==3&&E.dims.length!==2)throw new Error("Skip must be 2D or 3D");let L=b.dims[b.dims.length-1],W=b.dims[b.dims.length-2];if(E.dims[E.dims.length-1]!==L)throw new Error("Skip must have the same hidden size as input");if(E.dims[E.dims.length-2]!==W)throw new Error("Skip must have the same sequence length as input");if(G.dims.length!==1)throw new Error("Gamma must be 1D");if(G.dims[G.dims.length-1]!==L)throw new Error("Gamma must have the same hidden size as input");if(d.length>3){let R=d[3];if(R.dims.length!==1)throw new Error("Beta must be 1D");if(R.dims[R.dims.length-1]!==L)throw new Error("Beta must have the same hidden size as input")}if(d.length>4){let R=d[4];if(R.dims.length!==1)throw new Error("Bias must be 1D");if(R.dims[R.dims.length-1]!==L)throw new Error("Bias must have the same hidden size as input")}},Yu=(d,b,E,G)=>{let L=b.simplified,W=d[0].dims,R=he.size(W),te=W,ae=R,le=W.slice(-1)[0],Pe=G?W.slice(0,-1).concat(1):[],Ge=!L&&d.length>3,$=d.length>4,je=G&&E>1,Ke=G&&E>2,nt=E>3,tt=64,dt=Wr(le),Ct=[{type:12,data:ae},{type:12,data:dt},{type:12,data:le},{type:1,data:b.epsilon}],Et=[{dims:te,dataType:d[0].dataType}];return E>1&&Et.push({dims:Pe,dataType:1}),E>2&&Et.push({dims:Pe,dataType:1}),E>3&&Et.push({dims:W,dataType:d[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${dt};${je};${Ke};${nt}`,inputDependencies:d.map((Ot,Ft)=>"type")},getShaderSource:Ot=>{let Ft=[qt("x",d[0].dataType,d[0].dims,dt),qt("skip",d[1].dataType,d[1].dims,dt),qt("gamma",d[2].dataType,d[2].dims,dt)];Ge&&Ft.push(qt("beta",d[3].dataType,d[3].dims,dt)),$&&Ft.push(qt("bias",d[4].dataType,d[4].dims,dt)),Ft.push(Tr("output",d[0].dataType,te,dt)),je&&Ft.push(Tr("mean_output",1,Pe)),Ke&&Ft.push(Tr("inv_std_output",1,Pe)),nt&&Ft.push(Tr("input_skip_bias_sum",d[0].dataType,te,dt));let Lt=nr(d[0].dataType),yr=nr(1,dt);return`

      ${Ot.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...Ft)}
      var<workgroup> sum_shared : array<${yr}, 64>;
      var<workgroup> sum_squared_shared : array<${yr}, 64>;

      ${Ot.mainStart([tt,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${$?"bias[offset1d + i]":Lt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${nt?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Ys(Lt,dt,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${as("sum",dt)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${as("square_sum",dt)} / f32(uniforms.hidden_size) ${L?"":"- mean * mean"} + uniforms.epsilon);
        ${je?"mean_output[global_idx] = mean;":""}
        ${Ke?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${L?"":`- ${Lt}(mean)`}) *
            ${Lt}(inv_std_dev) * gamma[offset1d + i]
            ${Ge?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:Et,dispatchGroup:{x:Math.ceil(ae/le)},programUniforms:Ct})}},mc=(d,b)=>{p0(d.inputs);let E=[0];d.outputCount>1&&E.push(-3),d.outputCount>2&&E.push(-3),d.outputCount>3&&E.push(3),d.compute(Yu(d.inputs,b,d.outputCount,!1),{outputs:E})}}),Ha=be(()=>{Lr(),Os(),Bn(),Ws(),Ku=(d,b)=>{if(!d||d.length<1)throw new Error("too few inputs");if(b.axes.length!==0){if(b.axes.length!==b.starts.length||b.axes.length!==b.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(b.starts.length!==b.ends.length)throw new Error("starts and ends must have the same length");d.slice(1).forEach((E,G)=>{if(d[G+1].dataType!==6&&d[G+1].dataType!==7)throw new Error(`Input ${G} must be an array of int32 or int64`)})},Cl=(d,b)=>{let E=[];if(d.length>b)if(d[b].dataType===7)d[b].getBigInt64Array().forEach(G=>E.push(Number(G)));else{if(d[b].dataType!==6)throw new Error(`Input ${b} must be an array of int32 or int64`);d[b].getInt32Array().forEach(G=>E.push(Number(G)))}return E},bc=(d,b)=>{if(d.length>1){let E=Cl(d,1),G=Cl(d,2),L=Cl(d,3);return L.length===0&&(L=[...Array(d[0].dims.length).keys()]),Pt({starts:E,ends:G,axes:L})}return b},Cc=(d,b,E,G,L)=>{let W=d;return d<0&&(W+=E[G[b]]),L[b]<0?Math.max(0,Math.min(W,E[G[b]]-1)):Math.max(0,Math.min(W,E[G[b]]))},qu=(d,b,E)=>`fn calculateInputIndices(output_indices: ${b.type.indices}) -> ${d.type.indices} {
          var input_indices: ${d.type.indices};
          var carry = 0u;
          for (var i = ${E.length}; i >= 0; i--) {
            let input_shape_i = ${kr("uniforms.input_shape","i",E.length)};
            let steps_i = ${kr("uniforms.steps","i",E.length)};
            let signs_i = ${kr("uniforms.signs","i",E.length)};
            let starts_i = ${kr("uniforms.starts","i",E.length)};
            var output_index = ${b.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${d.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,ya=(d,b)=>{let E=d[0].dims,G=he.size(E),L=b.axes.length>0?he.normalizeAxes(b.axes,E.length):[...Array(E.length).keys()],W=Cl(d,4);W.forEach(tt=>tt!==0||(()=>{throw new Error("step cannot be 0")})),W.length===0&&(W=Array(L.length).fill(1));let R=b.starts.map((tt,dt)=>Cc(tt,dt,E,L,W)),te=b.ends.map((tt,dt)=>Cc(tt,dt,E,L,W));if(L.length!==R.length||L.length!==te.length)throw new Error("start, ends and axes should have the same number of elements");if(L.length!==E.length)for(let tt=0;tt<E.length;++tt)L.includes(tt)||(R.splice(tt,0,0),te.splice(tt,0,E[tt]),W.splice(tt,0,1));let ae=W.map(tt=>Math.sign(tt));W.forEach((tt,dt,Ct)=>{if(tt<0){let Et=(te[dt]-R[dt])/tt,Ot=R[dt],Ft=Ot+Et*W[dt];R[dt]=Ft,te[dt]=Ot,Ct[dt]=-tt}});let le=E.slice(0);L.forEach((tt,dt)=>{le[tt]=Math.ceil((te[tt]-R[tt])/W[tt])});let Pe={dims:le,dataType:d[0].dataType},Ge=Tr("output",d[0].dataType,le.length),$=qt("input",d[0].dataType,d[0].dims.length),je=he.size(le),Ke=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:R.length},{name:"signs",type:"i32",length:ae.length},{name:"steps",type:"u32",length:W.length}],nt=[{type:12,data:je},{type:12,data:R},{type:6,data:ae},{type:12,data:W},...Ar(d[0].dims,le)];return{name:"Slice",shaderCache:{hint:`${ae.length}_${R.length}_${W.length}`,inputDependencies:["rank"]},getShaderSource:tt=>`
      ${tt.registerUniforms(Ke).declareVariables($,Ge)}
        ${qu($,Ge,E)}
        ${tt.mainStart()}
          ${tt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${Ge.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${Ge.setByOffset("global_idx",$.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[Pe],dispatchGroup:{x:Math.ceil(G/64)},programUniforms:nt})}},Xd=(d,b)=>{Ku(d.inputs,b);let E=bc(d.inputs,b);d.compute(ya(d.inputs,E),{inputs:[0]})},Zd=d=>{let b=d.starts,E=d.ends,G=d.axes;return Pt({starts:b,ends:E,axes:G})}}),ri=be(()=>{Lr(),Os(),Bn(),sl(),Ws(),Jd=d=>{if(!d||d.length!==1)throw new Error("Softmax op requires 1 input.")},Jl=(d,b)=>{let E,G=d.inputs[0],L=G.dims,W=he.size(L),R=L.length,te=he.normalizeAxis(b.axis,R),ae=te<L.length-1,le=[];ae?(le=Array.from({length:R},(Ft,Lt)=>Lt),le[te]=R-1,le[R-1]=te,E=d.compute(na(G,le),{inputs:[G],outputs:[-1]})[0]):E=G;let Pe=E.dims,Ge=Pe[R-1],$=W/Ge,je=Wr(Ge),Ke=Ge/je,nt=64;$===1&&(nt=256);let tt=qt("x",E.dataType,E.dims,je),dt=Tr("result",E.dataType,E.dims,je),Ct=tt.type.value,Et=nr(E.dataType)==="f32"?`var threadMax = ${Ct}(-3.402823e+38f);`:`var threadMax = ${Ct}(-65504.0h);`,Ot=d.compute({name:"Softmax",shaderCache:{hint:`${je};${nt}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:Pe,dataType:E.dataType}],dispatchGroup:{x:$},programUniforms:[{type:6,data:Ke}]}),getShaderSource:Ft=>`
      var<workgroup> rowMaxShared : ${Ct};
      var<workgroup> rowSumShared : ${Ct};
      var<workgroup> threadShared : array<${Ct}, ${nt}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${Ct} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${Ct}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Ft.registerUniform("packedCols","i32").declareVariables(tt,dt)}
      ${Ft.mainStart(nt)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${nt};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${Et}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${Ct}(${((Lt,yr)=>yr===4?`max(max(${Lt}.x, ${Lt}.y), max(${Lt}.z, ${Lt}.w))`:yr===2?`max(${Lt}.x, ${Lt}.y)`:yr===3?`max(max(${Lt}.x, ${Lt}.y), ${Lt}.z)`:Lt)("threadShared[0]",je)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${Ct}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${Ct}(${as("threadShared[0]",je)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[E],outputs:[ae?-1:0]})[0];ae&&d.compute(na(Ot,le),{inputs:[Ot]})},Xu=(d,b)=>{Jd(d.inputs),Jl(d,b)},Zu=d=>Pt({axis:d.axis})}),Un=be(()=>{Lr(),Os(),Ws(),wc=d=>Array.from(d.getBigInt64Array(),Number),Ju=d=>{if(!d||d.length!==2)throw new Error("Tile requires 2 inputs.");if(d[0].dataType!==1&&d[0].dataType!==10&&d[0].dataType!==6&&d[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(d[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(d[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(wc(d[1]).length!==d[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Ic=(d,b)=>{let E=[];for(let G=0;G<d.length;++G)E.push(d[G]*b[G]);return E},yc=(d,b)=>{let E=d[0].dims,G=b??wc(d[1]),L=Ic(E,G),W=he.size(L),R=d[0].dataType,te=qt("input",R,E.length),ae=Tr("output",R,L.length);return{name:"Tile",shaderCache:{hint:`${G}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:L,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:[{type:12,data:W},...Ar(d[0].dims,L)]}),getShaderSource:le=>`
      const inputShape = ${te.indices(...E)};
      ${le.registerUniform("output_size","u32").declareVariables(te,ae)}
      ${le.mainStart()}
      ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${ae.offsetToIndices("global_idx")};
      var input_indices: ${te.type.indices};
      for (var i = 0; i < ${E.length}; i++) {
        let input_dim_i = ${te.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${ae.indicesGet("output_indices","i")}  % input_dim_i;

        ${te.indicesSet("input_indices","i","input_dim_value")}
      }
      ${ae.setByOffset("global_idx",te.getByIndices("input_indices"))}
    }`}},$d=d=>{Ju(d.inputs),d.compute(yc(d.inputs),{inputs:[0]})}}),Hn=be(()=>{Lr(),Os(),Ws(),$u=(d,b,E,G,L)=>{let W,R=Tr("output_data",L,E.length,4),te=qt("a_data",b[1].dataType,b[1].dims.length,4),ae=qt("b_data",b[2].dataType,b[2].dims.length,4),le=qt("c_data",b[0].dataType,b[0].dims.length,4),Pe=(Ge,$,je)=>`select(${$}, ${Ge}, ${je})`;if(G){let Ge=($,je,Ke="")=>{let nt=`a_data[index_a${je}][component_a${je}]`,tt=`b_data[index_b${je}][component_b${je}]`,dt=`bool(c_data[index_c${je}] & (0xffu << (component_c${je} * 8)))`;return`
            let output_indices${je} = ${R.offsetToIndices(`global_idx * 4u + ${je}u`)};
            let offset_a${je} = ${te.broadcastedIndicesToOffset(`output_indices${je}`,R)};
            let offset_b${je} = ${ae.broadcastedIndicesToOffset(`output_indices${je}`,R)};
            let offset_c${je} = ${le.broadcastedIndicesToOffset(`output_indices${je}`,R)};
            let index_a${je} = offset_a${je} / 4u;
            let index_b${je} = offset_b${je} / 4u;
            let index_c${je} = offset_c${je} / 4u;
            let component_a${je} = offset_a${je} % 4u;
            let component_b${je} = offset_b${je} % 4u;
            let component_c${je} = offset_c${je} % 4u;
            ${$}[${je}] = ${Ke}(${Pe(nt,tt,dt)});
          `};W=L===9?`
            var data = vec4<u32>(0);
            ${Ge("data",0,"u32")}
            ${Ge("data",1,"u32")}
            ${Ge("data",2,"u32")}
            ${Ge("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${Ge("output_data[global_idx]",0)}
            ${Ge("output_data[global_idx]",1)}
            ${Ge("output_data[global_idx]",2)}
            ${Ge("output_data[global_idx]",3)}
          `}else W=R.setByOffset("global_idx",Pe(te.getByOffset("global_idx"),ae.getByOffset("global_idx"),le.getByOffset("global_idx")));return`
        ${d.registerUniform("vec_size","u32").declareVariables(le,te,ae,R)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${W}
      }`},ed=d=>{let b=d[1].dims,E=d[2].dims,G=d[0].dims,L=d[1].dataType,W=!(he.areEqual(b,E)&&he.areEqual(E,G)),R=b,te=he.size(b);if(W){let le=pe.calcShape(pe.calcShape(b,E,!1),G,!1);if(!le)throw new Error("Can't perform where op on the given tensors");R=le,te=he.size(R)}let ae=Math.ceil(te/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:le=>$u(le,d,R,W,L),getRunData:()=>({outputs:[{dims:R,dataType:L}],dispatchGroup:{x:Math.ceil(te/64/4)},programUniforms:[{type:12,data:ae},...Ar(G,b,E,R)]})}},kc=d=>{d.compute(ed(d.inputs))}}),Gn=be(()=>{Gf(),Pc(),nf(),hd(),of(),Ff(),Af(),Rs(),ki(),Ni(),Wi(),Pl(),Of(),df(),ff(),fe(),Fe(),et(),Gt(),er(),Gr(),Fr(),Er(),Vr(),Zr(),$t(),_s(),ka(),Ts(),js(),Us(),h0(),_a(),nn(),pn(),Ha(),ri(),cr(),Un(),sl(),Dc(),Hn(),td=new Map([["Abs",[pA]],["Acos",[bi]],["Acosh",[gr]],["Add",[wa]],["ArgMax",[fl,uA]],["ArgMin",[oo,uA]],["Asin",[xn]],["Asinh",[Vi]],["Atan",[fn]],["Atanh",[Pi]],["Attention",[Uo]],["AveragePool",[J0,Tl]],["BatchNormalization",[qA]],["BiasAdd",[gl]],["BiasSplitGelu",[Mn]],["Cast",[mo,Ci]],["Ceil",[Pa]],["Clip",[Yo]],["Concat",[yo,BA]],["Conv",[xt,We]],["ConvTranspose",[ea,jr]],["Cos",[Po]],["Cosh",[Ko]],["CumSum",[ma,Ia]],["DepthToSpace",[an,In]],["DequantizeLinear",[rc,d0]],["Div",[xA]],["Einsum",[rr,pr]],["Elu",[bo,gn]],["Equal",[Ki]],["Erf",[Ao]],["Exp",[mA]],["Expand",[ti]],["FastGelu",[Yc]],["Floor",[Is]],["FusedConv",[xt,We]],["Gather",[S0,D0]],["GatherElements",[O0,tu]],["GatherBlockQuantized",[$c,a0]],["GatherND",[G0,F0]],["Gelu",[Co]],["Gemm",[au,Q0]],["GlobalAveragePool",[ec,Fu]],["GlobalMaxPool",[Wd,u0]],["Greater",[tA]],["GreaterOrEqual",[qi]],["GridSample",[lu,j0]],["GroupQueryAttention",[U0]],["HardSigmoid",[Ua,Xo]],["InstanceNormalization",[wu]],["LayerNormalization",[yu]],["LeakyRelu",[ls,gn]],["Less",[JA]],["LessOrEqual",[yi]],["Log",[wo]],["MatMul",[ku]],["MatMulNBits",[vu,xu]],["MaxPool",[zu,c0]],["Mul",[lo]],["MultiHeadAttention",[$A,V0]],["Neg",[bA]],["Not",[qo]],["Pad",[Su]],["Pow",[ZA]],["QuickGelu",[XA,gn]],["Range",[Nu]],["Reciprocal",[CA]],["ReduceMin",[ho]],["ReduceMean",[cA]],["ReduceMax",[no]],["ReduceSum",[Xa]],["ReduceProd",[YA]],["ReduceL1",[HA]],["ReduceL2",[Vn]],["ReduceLogSum",[dl]],["ReduceLogSumExp",[mi]],["ReduceSumSquare",[ul]],["Relu",[wA]],["Resize",[Hu,pc]],["RotaryEmbedding",[hc]],["ScatterND",[ic,Lu]],["Sigmoid",[Oi]],["Sin",[Zo]],["Sinh",[Jo]],["Slice",[Xd,Zd]],["SkipLayerNormalization",[mc]],["Split",[pu,hu]],["Sqrt",[Do]],["Softmax",[Xu,Zu]],["Sub",[MA]],["Tan",[Wn]],["Tanh",[IA]],["ThresholdedRelu",[eA,gn]],["Tile",[$d]],["Transpose",[za,Hr]],["Where",[kc]]])}),$i=be(()=>{$e(),rl(),Ws(),ef=class{constructor(d){this.backend=d,this.repo=new Map,this.attributesBound=!1}getArtifact(d){return this.repo.get(d)}setArtifact(d,b){this.repo.set(d,b)}run(d,b,E,G,L){ke(d.programInfo.name);let W=this.backend.device,R=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let te=[];for(let le of b)te.push({binding:te.length,resource:{buffer:le.buffer}});for(let le of E)te.push({binding:te.length,resource:{buffer:le.buffer}});L&&te.push({binding:te.length,resource:L});let ae=W.createBindGroup({layout:d.computePipeline.getBindGroupLayout(0),entries:te,label:d.programInfo.name});if(this.backend.sessionStatus==="capturing"){let le={kernelId:this.backend.currentKernelId,computePipeline:d.computePipeline,bindGroup:ae,dispatchGroup:G};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(le)}R.setPipeline(d.computePipeline),R.setBindGroup(0,ae),R.dispatchWorkgroups(...G),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ee(d.programInfo.name)}dispose(){}build(d,b){ke(d.name);let E=this.backend.device,G=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(le=>{E.features.has(le.feature)&&G.push(`enable ${le.extension};`)});let L=Fs(b,this.backend.device.limits),W=d.getShaderSource(L),R=`${G.join(`
`)}
${L.additionalImplementations}
${W}`,te=E.createShaderModule({code:R,label:d.name});Cs("verbose",()=>`[WebGPU] ${d.name} shader code: ${R}`);let ae=E.createComputePipeline({compute:{module:te,entryPoint:"main"},layout:"auto",label:d.name});return Ee(d.name),{programInfo:d,computePipeline:ae,uniformVariablesInfo:L.variablesInfo}}normalizeDispatchGroupSize(d){let b=typeof d=="number"?d:d.x,E=typeof d=="number"?1:d.y||1,G=typeof d=="number"?1:d.z||1,L=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(b<=L&&E<=L&&G<=L)return[b,E,G];let W=b*E*G,R=Math.ceil(Math.sqrt(W));if(R>L){if(R=Math.ceil(Math.cbrt(W)),R>L)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[R,R,R]}return[R,R,1]}}}),Da=be(()=>{$e(),Lr(),rl(),af(),gd(),Gn(),$i(),rd=(d,b)=>{if(b.length!==d.length)throw new Error(`inputDependencies length ${b.length} is not equal to inputTensors length ${d.length}.`);let E=[];for(let G=0;G<d.length;++G){let L=d[G].dataType;switch(b[G]){case"none":E.push("");break;case"type":E.push(`${L}`);break;case"rank":{let W=d[G].dims.length;E.push(`${L};${W}`);break}case"dims":{let W=d[G].dims.join(",");E.push(`${L};${W}`);break}default:throw new Error(`unsupported input dependency: ${b[G]}`)}}return E.join("|")},_c=(d,b,E)=>{var L,W;let G=d.name;return(L=d.shaderCache)!=null&&L.hint&&(G+="["+d.shaderCache.hint+"]"),G+=":"+E+`:${rd(b,((W=d.shaderCache)==null?void 0:W.inputDependencies)??new Array(b.length).fill("dims"))}`,G},sd=class{constructor(d){d&&(this.architecture=d.architecture,this.vendor=d.vendor)}isArchitecture(d){return this.architecture===d}isVendor(d){return this.vendor===d}},ad=class{constructor(d){this.subgroupsSupported=d.features.has("subgroups"),this.subgroupsF16Supported=d.features.has("subgroups");let b=d.limits;this.subgroupsSupported&&b.minSubgroupSize&&b.maxSubgroupSize?this.subgroupSizeRange=[b.minSubgroupSize,b.maxSubgroupSize]:this.subgroupSizeRange=void 0}},nd=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let d=this.kernelCustomData.get(this.currentKernelId);return d||(d={},this.kernelCustomData.set(this.currentKernelId,d)),d}async initialize(d,b){this.env=d;let E=[],G={requiredLimits:{maxComputeWorkgroupStorageSize:b.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:b.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:b.limits.maxStorageBufferBindingSize,maxBufferSize:b.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:b.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:b.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:b.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:b.limits.maxComputeWorkgroupSizeZ},requiredFeatures:E},L=W=>b.features.has(W)&&E.push(W)&&!0;L("chromium-experimental-timestamp-query-inside-passes")||L("timestamp-query"),L("shader-f16"),L("subgroups")&&L("subgroups-f16"),this.device=await b.requestDevice(G),this.deviceInfo=new ad(this.device),this.adapterInfo=new sd(b.info||await b.requestAdapterInfo()),this.gpuDataManager=bt(this),this.programManager=new ef(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pi(d.logLevel,!!d.debug),this.device.onuncapturederror=W=>{W.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${W.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:b,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let d=this.getCommandEncoder(),b={};this.queryType==="at-passes"&&(b.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=d.beginComputePass(b)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let d;ke(),this.endComputePass(),this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),d=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(d,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,d,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&d.mapAsync(GPUMapMode.READ).then(()=>{var G;let b=new BigUint64Array(d.getMappedRange()),E=this.pendingQueries.get(d);for(let L=0;L<b.length/2;L++){let W=E[L],R=W.kernelId,te=this.kernels.get(R),ae=te.kernelType,le=te.kernelName,Pe=W.programName,Ge=W.inputTensorViews,$=W.outputTensorViews,je=b[2*L],Ke=b[2*L+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=je);let nt=Number(je-this.queryTimeBase),tt=Number(Ke-this.queryTimeBase);if(!Number.isSafeInteger(nt)||!Number.isSafeInteger(tt))throw new RangeError("incorrect timestamp range");if((G=this.env.webgpu.profiling)!=null&&G.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:Ge.map(dt=>({dims:dt.dims,dataType:ai(dt.dataType)})),outputsMetadata:$.map(dt=>({dims:dt.dims,dataType:ai(dt.dataType)})),kernelId:R,kernelType:ae,kernelName:le,programName:Pe,startTime:nt,endTime:tt});else{let dt="";Ge.forEach((Et,Ot)=>{dt+=`input[${Ot}]: [${Et.dims}] | ${ai(Et.dataType)}, `});let Ct="";$.forEach((Et,Ot)=>{Ct+=`output[${Ot}]: [${Et.dims}] | ${ai(Et.dataType)}, `}),console.log(`[profiling] kernel "${R}|${ae}|${le}|${Pe}" ${dt}${Ct}execution time: ${tt-nt} ns`)}Ie("GPU",`${Pe}::${je}::${Ke}`)}d.unmap(),this.pendingQueries.delete(d)}),Ee()}run(d,b,E,G,L,W){ke(d.name);let R=[];for(let Ct=0;Ct<b.length;++Ct){let Et=b[Ct].data;if(Et===0)continue;let Ot=this.gpuDataManager.get(Et);if(!Ot)throw new Error(`no GPU data for input: ${Et}`);R.push(Ot)}let{outputs:te,dispatchGroup:ae,programUniforms:le}=d.getRunData(b),Pe=E.length===0?te.map((Ct,Et)=>Et):E;if(Pe.length!==te.length)throw new Error(`Output size ${Pe.length} must be equal to ${te.length}.`);let Ge,$=[],je=[];for(let Ct=0;Ct<te.length;++Ct){if(!Number.isInteger(Pe[Ct])||Pe[Ct]<-3||Pe[Ct]>=W)throw new Error(`Invalid output index: ${Pe[Ct]}`);if(Pe[Ct]===-3)continue;let Et=Pe[Ct]===-1,Ot=Pe[Ct]===-2,Ft=Et||Ot?L(te[Ct].dataType,te[Ct].dims):G(Pe[Ct],te[Ct].dataType,te[Ct].dims);if($.push(Ft),Ft.data===0)continue;let Lt=this.gpuDataManager.get(Ft.data);if(!Lt)throw new Error(`no GPU data for output: ${Ft.data}`);if(Et&&this.temporaryData.push(Lt),Ot){let yr=this.kernelPersistentData.get(this.currentKernelId);yr||(yr=[],this.kernelPersistentData.set(this.currentKernelId,yr)),yr.push(Lt)}je.push(Lt)}if(R.length!==b.length||je.length!==$.length){if(je.length===0)return Ee(d.name),$;throw new Error(`Program ${d.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(le){let Ct=0,Et=[];le.forEach(yr=>{let Or=typeof yr.data=="number"?[yr.data]:yr.data;if(Or.length===0)return;let gs,ps,pa=yr.type===10?2:4;yr.type===10?(ps=Or.length>4?16:Or.length>2?8:Or.length*pa,gs=Or.length>4?16:pa*Or.length):(ps=Or.length<=2?Or.length*pa:16,gs=16),Ct=Math.ceil(Ct/ps)*ps,Et.push(Ct);let hs=yr.type===10?8:4;Ct+=Or.length>4?Math.ceil(Or.length/hs)*gs:Or.length*pa});let Ot=16;Ct=Math.ceil(Ct/Ot)*Ot;let Ft=new ArrayBuffer(Ct);le.forEach((yr,Or)=>{let gs=Et[Or],ps=typeof yr.data=="number"?[yr.data]:yr.data;if(yr.type===6)new Int32Array(Ft,gs,ps.length).set(ps);else if(yr.type===12)new Uint32Array(Ft,gs,ps.length).set(ps);else if(yr.type===10)new Uint16Array(Ft,gs,ps.length).set(ps);else{if(yr.type!==1)throw new Error(`Unsupported uniform type: ${ai(yr.type)}`);new Float32Array(Ft,gs,ps.length).set(ps)}});let Lt=this.gpuDataManager.create(Ct,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Lt.buffer,0,Ft,0,Ct),this.gpuDataManager.release(Lt.id),Ge={offset:0,size:Ct,buffer:Lt.buffer}}let Ke=this.programManager.normalizeDispatchGroupSize(ae),nt=Ke[1]===1&&Ke[2]===1,tt=_c(d,b,nt),dt=this.programManager.getArtifact(tt);if(dt||(dt=this.programManager.build(d,Ke),this.programManager.setArtifact(tt,dt),Cs("info",()=>`[artifact] key: ${tt}, programName: ${d.name}`)),le&&dt.uniformVariablesInfo){if(le.length!==dt.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${dt.uniformVariablesInfo.length}, got ${le.length} in program "${dt.programInfo.name}".`);for(let Ct=0;Ct<le.length;Ct++){let Et=le[Ct],Ot=Et.type,Ft=typeof Et.data=="number"?1:Et.data.length,[Lt,yr]=dt.uniformVariablesInfo[Ct];if(Ot!==Lt||Ft!==yr)throw new Error(`Uniform variable ${Ct} mismatch: expect type ${Lt} with size ${yr}, got type ${Ot} with size ${Ft} in program "${dt.programInfo.name}".`)}}if(Cs("info",()=>`[ProgramManager] run "${d.name}" (key=${tt}) with ${Ke[0]}x${Ke[1]}x${Ke[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Ct={kernelId:this.currentKernelId,programName:dt.programInfo.name,inputTensorViews:b,outputTensorViews:$};this.pendingKernels.push(Ct),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Ct)}return this.programManager.run(dt,R,je,Ke,Ge),Ee(d.name),$}upload(d,b){this.gpuDataManager.upload(d,b)}memcpy(d,b){this.gpuDataManager.memcpy(d,b)}async download(d,b){await this.gpuDataManager.download(d,b)}alloc(d){return this.gpuDataManager.create(d).id}free(d){return this.gpuDataManager.release(d)}createKernel(d,b,E,G){let L=td.get(d);if(!L)throw new Error(`kernel not implemented: ${d}`);let W={kernelType:d,kernelName:G,kernelEntry:L[0],attributes:[L[1],E]};this.kernels.set(b,W)}releaseKernel(d){let b=this.kernelPersistentData.get(d);if(b){for(let E of b)this.gpuDataManager.release(E.id);this.kernelPersistentData.delete(d)}this.kernelCustomData.delete(d),this.kernels.delete(d)}computeKernel(d,b,E){let G=this.kernels.get(d);if(!G)throw new Error(`kernel not created: ${d}`);let L=G.kernelType,W=G.kernelName,R=G.kernelEntry,te=G.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${L}] ${W}" is not allowed to be called recursively`);this.currentKernelId=d,te[0]&&(te[1]=te[0](te[1]),te[0]=void 0),Cs("info",()=>`[WebGPU] Start to run kernel "[${L}] ${W}"...`);let ae=this.env.debug;this.temporaryData=[];try{return ae&&this.device.pushErrorScope("validation"),R(b,te[1]),0}catch(le){return E.push(Promise.resolve(`[WebGPU] Kernel "[${L}] ${W}" failed. ${le}`)),1}finally{ae&&E.push(this.device.popErrorScope().then(le=>le?`GPU validation error for kernel "[${L}] ${W}": ${le.message}`:null));for(let le of this.temporaryData)this.gpuDataManager.release(le.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(d,b,E,G){let L=this.sessionExternalDataMapping.get(d);L||(L=new Map,this.sessionExternalDataMapping.set(d,L));let W=L.get(b),R=this.gpuDataManager.registerExternalBuffer(E,G,W);return L.set(b,[R,E]),R}unregisterBuffers(d){let b=this.sessionExternalDataMapping.get(d);b&&(b.forEach(E=>this.gpuDataManager.unregisterExternalBuffer(E[0])),this.sessionExternalDataMapping.delete(d))}getBuffer(d){let b=this.gpuDataManager.get(d);if(!b)throw new Error(`no GPU data for buffer: ${d}`);return b.buffer}createDownloader(d,b,E){return async()=>{let G=await Be(this,d,b);return bn(G.buffer,E)}}writeTimestamp(d){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,d)}setQueryType(){var d;this.queryType="none",(((d=this.env.webgpu.profiling)==null?void 0:d.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Cs("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Cs("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Cs("info","replay"),this.sessionStatus="replaying";let d=this.capturedCommandList.get(this.currentSessionId),b=this.capturedPendingKernels.get(this.currentSessionId),E=d.length;this.pendingKernels=[];for(let G=0;G<E;G++){let L=this.getComputePassEncoder(),W=d[G];this.writeTimestamp(2*this.pendingDispatchNumber),L.setPipeline(W.computePipeline),L.setBindGroup(0,W.bindGroup),L.dispatchWorkgroups(...W.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(b[G]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(d){this.unregisterBuffers(d),this.capturedCommandList.has(d)&&this.capturedCommandList.delete(d),this.capturedPendingKernels.has(d)&&this.capturedPendingKernels.delete(d),this.gpuDataManager.onReleaseSession(d)}onRunStart(d){this.currentSessionId=d,this.setQueryType()}}}),Ui=be(()=>{rl(),id=1,$l=()=>id++,od=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),vc=(d,b)=>{let E=od.get(d);if(!E)throw new Error("Unsupported data type.");return b.length>0?Math.ceil(b.reduce((G,L)=>G*L)*E/8):0},xc=class{constructor(d){this.sessionId=d.sessionId,this.mlContext=d.context,this.mlTensor=d.tensor,this.dataType=d.dataType,this.tensorShape=d.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return vc(this.dataType,this.tensorShape)}destroy(){Cs("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(d){this.mlContext.writeTensor(this.mlTensor,d)}async read(d){return d?this.mlContext.readTensor(this.mlTensor,d):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(d,b,E){return this.mlContext===d&&this.dataType===b&&this.tensorShape.length===E.length&&this.tensorShape.every((G,L)=>G===E[L])}},Mc=class{constructor(d,b){this.tensorManager=d,this.wrapper=b}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(d,b,E,G){if(this.wrapper){if(this.wrapper.canReuseTensor(d,b,E))return this.wrapper.tensor;if(G){if(this.wrapper.byteLength!==vc(b,E))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let L=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(b,E,L,!0,!0),G&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(d){if(this.wrapper){if(d.byteLength===this.wrapper.byteLength)return void this.wrapper.write(d);Cs("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(d):this.activeUpload=new Uint8Array(d)}async download(d){if(this.activeUpload)return d?void(d instanceof ArrayBuffer?new Uint8Array(d).set(this.activeUpload):new Uint8Array(d.buffer,d.byteOffset,d.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return d?this.wrapper.read(d):this.wrapper.read()}},Ad=class{constructor(d){this.backend=d,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let d=$l();return this.tensorTrackersById.set(d,new Mc(this)),d}releaseTensorId(d){let b=this.tensorTrackersById.get(d);b&&(this.tensorTrackersById.delete(d),b.tensorWrapper&&this.releaseTensor(b.tensorWrapper))}async ensureTensor(d,b,E,G){Cs("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${d}, dataType: ${b}, shape: ${E}, copyOld: ${G}}`);let L=this.tensorTrackersById.get(d);if(!L)throw new Error("Tensor not found.");return L.ensureTensor(this.backend.currentContext,b,E,G)}upload(d,b){let E=this.tensorTrackersById.get(d);if(!E)throw new Error("Tensor not found.");E.upload(b)}async download(d,b){Cs("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${d}, dstBuffer: ${b==null?void 0:b.byteLength}}`);let E=this.tensorTrackersById.get(d);if(!E)throw new Error("Tensor not found.");return E.download(b)}releaseTensorsForSession(d){for(let b of this.freeTensors)b.sessionId===d&&b.destroy();this.freeTensors=this.freeTensors.filter(b=>b.sessionId!==d)}registerTensor(d,b,E,G){let L=$l(),W=new xc({sessionId:this.backend.currentSessionId,context:d,tensor:b,dataType:E,shape:G});return this.tensorTrackersById.set(L,new Mc(this,W)),this.externalTensors.add(W),L}async getCachedTensor(d,b,E,G,L){let W=this.backend.currentSessionId,R=this.backend.currentContext;for(let[ae,le]of this.freeTensors.entries())if(le.canReuseTensor(R,d,b)){Cs("verbose",()=>`[WebNN] Reusing tensor {dataType: ${d}, shape: ${b}}`);let Pe=this.freeTensors.splice(ae,1)[0];return Pe.sessionId=W,Pe}Cs("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${d}, shape: ${b}}`);let te=await R.createTensor({dataType:d,shape:b,dimensions:b,usage:E,writable:G,readable:L});return new xc({sessionId:W,context:R,tensor:te,dataType:d,shape:b})}releaseTensor(d){this.externalTensors.has(d)&&this.externalTensors.delete(d),this.freeTensors.push(d)}},Ec=(...d)=>new Ad(...d)}),Il=be(()=>{Lr(),FA(),af(),Ui(),rl(),Bc=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),ld=(d,b)=>{if(d===b)return!0;if(d===void 0||b===void 0)return!1;let E=Object.keys(d).sort(),G=Object.keys(b).sort();return E.length===G.length&&E.every((L,W)=>L===G[W]&&d[L]===b[L])},cd=class{constructor(d){this.tensorManager=Ec(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],pi(d.logLevel,!!d.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(d){this.activeSessionId=d}async createMLContext(d){if(d instanceof GPUDevice){let E=this.mlContextCache.findIndex(G=>G.gpuDevice===d);if(E!==-1)return this.mlContextCache[E].mlContext;{let G=await navigator.ml.createContext(d);return this.mlContextCache.push({gpuDevice:d,mlContext:G}),G}}if(d===void 0){let E=this.mlContextCache.findIndex(G=>G.options===void 0&&G.gpuDevice===void 0);if(E!==-1)return this.mlContextCache[E].mlContext;{let G=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:G}),G}}let b=this.mlContextCache.findIndex(E=>ld(E.options,d));if(b!==-1)return this.mlContextCache[b].mlContext;{let E=await navigator.ml.createContext(d);return this.mlContextCache.push({options:d,mlContext:E}),E}}get currentContext(){let d=this.getMLContext(this.currentSessionId);if(!d)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return d}registerMLContext(d,b){this.mlContextBySessionId.set(d,b);let E=this.sessionIdsByMLContext.get(b);E||(E=new Set,this.sessionIdsByMLContext.set(b,E)),E.add(d)}onReleaseSession(d){let b=this.mlContextBySessionId.get(d);if(!b)return;this.tensorManager.releaseTensorsForSession(d),this.mlContextBySessionId.delete(d);let E=this.sessionIdsByMLContext.get(b);if(E.delete(d),E.size===0){this.sessionIdsByMLContext.delete(b);let G=this.mlContextCache.findIndex(L=>L.mlContext===b);G!==-1&&this.mlContextCache.splice(G,1)}}getMLContext(d){return this.mlContextBySessionId.get(d)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(d){Cs("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${d}}`),this.tensorManager.releaseTensorId(d)}async ensureTensor(d,b,E,G){let L=Bc.get(b);if(!L)throw new Error(`Unsupported ONNX data type: ${b}`);return this.tensorManager.ensureTensor(d,L,E,G)}uploadTensor(d,b){if(!zr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Cs("verbose",()=>`[WebNN] uploadTensor {tensorId: ${d}, data: ${b.byteLength}}`),this.tensorManager.upload(d,b)}async downloadTensor(d,b){return this.tensorManager.download(d,b)}createMLTensorDownloader(d,b){return async()=>{let E=await this.tensorManager.download(d);return bn(E,b)}}registerMLTensor(d,b,E){let G=Bc.get(b);if(!G)throw new Error(`Unsupported ONNX data type: ${b}`);let L=this.tensorManager.registerTensor(this.currentContext,d,G,E);return Cs("verbose",()=>`[WebNN] registerMLTensor {tensor: ${d}, dataType: ${G}, dimensions: ${E}} -> {tensorId: ${L}}`),L}registerMLConstant(d,b,E,G,L,W){if(!W)throw new Error("External mounted files are not available.");let R=d;d.startsWith("./")&&(R=d.substring(2));let te=W.get(R);if(!te)throw new Error(`File with name ${R} not found in preloaded files.`);if(b+E>te.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let ae,le=te.slice(b,b+E).buffer;switch(L.dataType){case"float32":ae=new Float32Array(le);break;case"float16":ae=new Uint16Array(le);break;case"int32":ae=new Int32Array(le);break;case"uint32":ae=new Uint32Array(le);break;case"int64":ae=new BigInt64Array(le);break;case"uint64":ae=new BigUint64Array(le);break;case"int8":ae=new Int8Array(le);break;case"int4":case"uint4":case"uint8":ae=new Uint8Array(le);break;default:throw new Error(`Unsupported data type: ${L.dataType} in creating WebNN Constant from external data.`)}return Cs("verbose",()=>`[WebNN] registerMLConstant {dataType: ${L.dataType}, shape: ${L.shape}}}`),G.constant(L,ae)}flush(){}}}),Dl={};Ye(Dl,{init:()=>md});var yl,t0,md,gf,on,ss,eo,yn,kn,oi,zA,zc,m0,bd,se,we,Ue,vt,Wt,jt,lr,hr,Mr,Dr,Kr,Hs,cs,ia,ws,Xs,Es,ta,Ya,Tn,Hi,oa,hn=be(()=>{Lr(),Da(),rl(),Os(),Il(),yl=class Uk{constructor(b,E,G,L){this.module=b,this.dataType=E,this.data=G,this.dims=L}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let b=he.size(this.dims);return b===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,b)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let b=he.size(this.dims);return b===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,b)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let b=he.size(this.dims);return b===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,b)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let b=he.size(this.dims);return b===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,b)}reshape(b){if(he.size(b)!==he.size(this.dims))throw new Error("Invalid new shape");return new Uk(this.module,this.dataType,this.data,b)}},t0=class{constructor(d,b,E){this.module=d,this.backend=b,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=b.adapterInfo,this.deviceInfo=b.deviceInfo;let G=d.PTR_SIZE,L=E/d.PTR_SIZE,W=G===4?"i32":"i64";this.opKernelContext=Number(d.getValue(G*L++,W));let R=Number(d.getValue(G*L++,W));this.outputCount=Number(d.getValue(G*L++,W)),this.customDataOffset=Number(d.getValue(G*L++,"*")),this.customDataSize=Number(d.getValue(G*L++,W));let te=[];for(let ae=0;ae<R;ae++){let le=Number(d.getValue(G*L++,W)),Pe=Number(d.getValue(G*L++,"*")),Ge=Number(d.getValue(G*L++,W)),$=[];for(let je=0;je<Ge;je++)$.push(Number(d.getValue(G*L++,W)));te.push(new yl(d,le,Pe,$))}this.inputs=te}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(d,b){var L;let E=((L=b==null?void 0:b.inputs)==null?void 0:L.map(W=>typeof W=="number"?this.inputs[W]:W))??this.inputs,G=(b==null?void 0:b.outputs)??[];return this.backend.run(d,E,G,(W,R,te)=>new yl(this.module,R,this.output(W,te),te),(W,R)=>{let te=fi(W,R);if(!te)throw new Error(`Unsupported data type: ${W}`);let ae=te>0?this.backend.gpuDataManager.create(te).id:0;return new yl(this.module,W,ae,R)},this.outputCount)}output(d,b){let E=this.module.stackSave();try{let G=this.module.PTR_SIZE,L=G===4?"i32":"i64",W=this.module.stackAlloc((1+b.length)*G);this.module.setValue(W,b.length,L);for(let R=0;R<b.length;R++)this.module.setValue(W+G*(R+1),b[R],L);return this.module._JsepOutput(this.opKernelContext,d,W)}catch(G){throw new Error(`Failed to generate kernel's output[${d}] with dims [${b}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${G}`)}finally{this.module.stackRestore(E)}}},md=async(d,b,E,G)=>{let L=b.jsepInit;if(!L)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(d==="webgpu"){let W=new nd;await W.initialize(E,G),L("webgpu",[W,R=>W.alloc(Number(R)),R=>W.free(R),(R,te,ae,le=!1)=>{if(le)Cs("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(R)}, dst=${Number(te)}, size=${Number(ae)}`),W.memcpy(Number(R),Number(te));else{Cs("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(R)}, gpuDataId=${Number(te)}, size=${Number(ae)}`);let Pe=b.HEAPU8.subarray(Number(R>>>0),Number(R>>>0)+Number(ae));W.upload(Number(te),Pe)}},async(R,te,ae)=>{Cs("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${R}, dataOffset=${te}, size=${ae}`),await W.download(Number(R),()=>b.HEAPU8.subarray(Number(te)>>>0,Number(te+ae)>>>0))},(R,te,ae)=>W.createKernel(R,Number(te),ae,b.UTF8ToString(b._JsepGetNodeName(Number(te)))),R=>W.releaseKernel(R),(R,te,ae,le)=>{Cs("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${ae}, kernel=${R}, contextDataOffset=${te}`);let Pe=new t0(b,W,Number(te));return W.computeKernel(Number(R),Pe,le)},()=>W.captureBegin(),()=>W.captureEnd(),()=>W.replay()])}else{let W=new cd(E);L("webnn",[W,()=>W.reserveTensorId(),R=>W.releaseTensorId(R),async(R,te,ae,le)=>W.ensureTensor(R,te,ae,le),(R,te)=>{W.uploadTensor(R,te)},async(R,te)=>W.downloadTensor(R,te)])}}}),si=be(()=>{dd(),rf(),Lr(),FA(),ud(),sf(),gf=(d,b)=>{zr()._OrtInit(d,b)!==0&&ks("Can't initialize onnxruntime.")},on=async d=>{gf(d.wasm.numThreads,Xn(d.logLevel))},ss=async(d,b)=>{{let E=(hn(),Le(Dl)).init;if(b==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let G=d.webgpu.adapter;if(G){if(typeof G.limits!="object"||typeof G.features!="object"||typeof G.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let L=d.webgpu.powerPreference;if(L!==void 0&&L!=="low-power"&&L!=="high-performance")throw new Error(`Invalid powerPreference setting: "${L}"`);let W=d.webgpu.forceFallbackAdapter;if(W!==void 0&&typeof W!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${W}"`);if(G=await navigator.gpu.requestAdapter({powerPreference:L,forceFallbackAdapter:W}),!G)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await E("webgpu",zr(),d,G)}if(b==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await E("webnn",zr(),d)}}},eo=new Map,yn=d=>{let b=zr(),E=b.stackSave();try{let G=b.PTR_SIZE,L=b.stackAlloc(2*G);b._OrtGetInputOutputCount(d,L,L+G)!==0&&ks("Can't get session input/output count.");let W=G===4?"i32":"i64";return[Number(b.getValue(L,W)),Number(b.getValue(L+G,W))]}finally{b.stackRestore(E)}},kn=d=>{let b=zr(),E=b._malloc(d.byteLength);if(E===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${d.byteLength}.`);return b.HEAPU8.set(d,E),[E,d.byteLength]},oi=async(d,b)=>{var Ge,$,je;let E,G,L=zr();Array.isArray(d)?[E,G]=d:d.buffer===L.HEAPU8.buffer?[E,G]=[d.byteOffset,d.byteLength]:[E,G]=kn(d);let W=0,R=0,te=0,ae=[],le=[],Pe=[];try{if([R,ae]=di(b),(b==null?void 0:b.externalData)&&L.mountExternalData){let Ft=[];for(let Lt of b.externalData){let yr=typeof Lt=="string"?Lt:Lt.path;Ft.push(Fi(typeof Lt=="string"?Lt:Lt.data).then(Or=>{L.mountExternalData(yr,Or)}))}await Promise.all(Ft)}for(let Ft of(b==null?void 0:b.executionProviders)??[])if((typeof Ft=="string"?Ft:Ft.name)==="webnn"){if(L.shouldTransferToMLTensor=!1,typeof Ft!="string"){let Lt=Ft,yr=Lt==null?void 0:Lt.context,Or=Lt==null?void 0:Lt.gpuDevice,gs=Lt==null?void 0:Lt.deviceType,ps=Lt==null?void 0:Lt.powerPreference;L.currentContext=yr||(Or?await L.jsepCreateMLContext(Or):await L.jsepCreateMLContext({deviceType:gs,powerPreference:ps}))}else L.currentContext=await L.jsepCreateMLContext();break}W=await L._OrtCreateSession(E,G,R),W===0&&ks("Can't create a session."),(Ge=L.jsepOnCreateSession)==null||Ge.call(L),L.currentContext&&(L.jsepRegisterMLContext(W,L.currentContext),L.currentContext=void 0,L.shouldTransferToMLTensor=!0);let[Ke,nt]=yn(W),tt=!!(b!=null&&b.enableGraphCapture),dt=[],Ct=[],Et=[];for(let Ft=0;Ft<Ke;Ft++){let Lt=L._OrtGetInputName(W,Ft);Lt===0&&ks("Can't get an input name."),le.push(Lt),dt.push(L.UTF8ToString(Lt))}for(let Ft=0;Ft<nt;Ft++){let Lt=L._OrtGetOutputName(W,Ft);Lt===0&&ks("Can't get an output name."),Pe.push(Lt);let yr=L.UTF8ToString(Lt);Ct.push(yr);{if(tt&&(b==null?void 0:b.preferredOutputLocation)===void 0){Et.push("gpu-buffer");continue}let Or=typeof(b==null?void 0:b.preferredOutputLocation)=="string"?b.preferredOutputLocation:(($=b==null?void 0:b.preferredOutputLocation)==null?void 0:$[yr])??"cpu";if(Or!=="cpu"&&Or!=="cpu-pinned"&&Or!=="gpu-buffer"&&Or!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Or}.`);if(tt&&Or!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Or}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);Et.push(Or)}}let Ot=null;return Et.some(Ft=>Ft==="gpu-buffer"||Ft==="ml-tensor")&&(te=L._OrtCreateBinding(W),te===0&&ks("Can't create IO binding."),Ot={handle:te,outputPreferredLocations:Et,outputPreferredLocationsEncoded:Et.map(Ft=>Gi(Ft))}),eo.set(W,[W,le,Pe,Ot,tt,!1]),[W,dt,Ct]}catch(Ke){throw le.forEach(nt=>L._OrtFree(nt)),Pe.forEach(nt=>L._OrtFree(nt)),te!==0&&L._OrtReleaseBinding(te)!==0&&ks("Can't release IO binding."),W!==0&&L._OrtReleaseSession(W)!==0&&ks("Can't release session."),Ke}finally{L._free(E),R!==0&&L._OrtReleaseSessionOptions(R)!==0&&ks("Can't release session options."),ae.forEach(Ke=>L._free(Ke)),(je=L.unmountExternalData)==null||je.call(L)}},zA=d=>{var ae;let b=zr(),E=eo.get(d);if(!E)throw new Error(`cannot release session. invalid session id: ${d}`);let[G,L,W,R,te]=E;R&&(te&&b._OrtClearBoundOutputs(R.handle)!==0&&ks("Can't clear bound outputs."),b._OrtReleaseBinding(R.handle)!==0&&ks("Can't release IO binding.")),(ae=b.jsepOnReleaseSession)==null||ae.call(b,d),L.forEach(le=>b._OrtFree(le)),W.forEach(le=>b._OrtFree(le)),b._OrtReleaseSession(G)!==0&&ks("Can't release session."),eo.delete(d)},zc=(d,b,E,G,L,W=!1)=>{if(!d)return void b.push(0);let R,te,ae=zr(),le=ae.PTR_SIZE,Pe=d[0],Ge=d[1],$=d[3];if(Pe==="string"&&($==="gpu-buffer"||$==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(W&&$!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${L} when enableGraphCapture is true.`);if($==="gpu-buffer"){let nt=d[2].gpuBuffer;te=fi(Fa(Pe),Ge);let tt=ae.jsepRegisterBuffer;if(!tt)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');R=tt(G,L,nt,te)}else if($==="ml-tensor"){let nt=d[2].mlTensor;te=fi(Fa(Pe),Ge);let tt=ae.jsepRegisterMLTensor;if(!tt)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');R=tt(nt,Fa(Pe),Ge)}else{let nt=d[2];if(Array.isArray(nt)){te=le*nt.length,R=ae._malloc(te),E.push(R);for(let tt=0;tt<nt.length;tt++){if(typeof nt[tt]!="string")throw new TypeError(`tensor data at index ${tt} is not a string`);ae.setValue(R+tt*le,qs(nt[tt],E),"*")}}else te=nt.byteLength,R=ae._malloc(te),E.push(R),ae.HEAPU8.set(new Uint8Array(nt.buffer,nt.byteOffset,te),R)}let je=ae.stackSave(),Ke=ae.stackAlloc(4*Ge.length);try{Ge.forEach((tt,dt)=>ae.setValue(Ke+dt*le,tt,le===4?"i32":"i64"));let nt=ae._OrtCreateTensor(Fa(Pe),R,te,Ke,Ge.length,Gi($));nt===0&&ks(`Can't create tensor for input/output. session=${G}, index=${L}.`),b.push(nt)}finally{ae.stackRestore(je)}},m0=async(d,b,E,G,L,W)=>{var pa,hs;let R=zr(),te=R.PTR_SIZE,ae=eo.get(d);if(!ae)throw new Error(`cannot run inference. invalid session id: ${d}`);let le=ae[0],Pe=ae[1],Ge=ae[2],$=ae[3],je=ae[4],Ke=ae[5],nt=b.length,tt=G.length,dt=0,Ct=[],Et=[],Ot=[],Ft=[],Lt=R.stackSave(),yr=R.stackAlloc(nt*te),Or=R.stackAlloc(nt*te),gs=R.stackAlloc(tt*te),ps=R.stackAlloc(tt*te);try{(pa=R.jsepOnRunStart)==null||pa.call(R,le),[dt,Ct]=vn(W);for(let tr=0;tr<nt;tr++)zc(E[tr],Et,Ft,d,b[tr],je);for(let tr=0;tr<tt;tr++)zc(L[tr],Ot,Ft,d,nt+G[tr],je);for(let tr=0;tr<nt;tr++)R.setValue(yr+tr*te,Et[tr],"*"),R.setValue(Or+tr*te,Pe[b[tr]],"*");for(let tr=0;tr<tt;tr++)R.setValue(gs+tr*te,Ot[tr],"*"),R.setValue(ps+tr*te,Ge[G[tr]],"*");if($&&!Ke){let{handle:tr,outputPreferredLocations:$r,outputPreferredLocationsEncoded:Yr}=$;if(Pe.length!==nt)throw new Error(`input count from feeds (${nt}) is expected to be always equal to model's input count (${Pe.length}).`);for(let qr=0;qr<nt;qr++){let Ta=b[qr];await R._OrtBindInput(tr,Pe[Ta],Et[qr])!==0&&ks(`Can't bind input[${qr}] for session=${d}.`)}for(let qr=0;qr<tt;qr++){let Ta=G[qr];(hs=L[qr])!=null&&hs[3]?R._OrtBindOutput(tr,Ge[Ta],Ot[qr],0)!==0&&ks(`Can't bind pre-allocated output[${qr}] for session=${d}.`):R._OrtBindOutput(tr,Ge[Ta],0,Yr[Ta])!==0&&ks(`Can't bind output[${qr}] to ${$r[qr]} for session=${d}.`)}eo.set(d,[le,Pe,Ge,$,je,!0])}let Vs;Vs=$?await R._OrtRunWithBinding(le,$.handle,tt,gs,dt):await R._OrtRun(le,Or,yr,nt,ps,tt,gs,dt),Vs!==0&&ks("failed to call OrtRun().");let Ss=[];for(let tr=0;tr<tt;tr++){let $r=Number(R.getValue(gs+tr*te,"*"));if($r===Ot[tr]){Ss.push(L[tr]);continue}let Yr,qr=R.stackSave(),Ta=R.stackAlloc(4*te),vi=!1,vo=0;try{R._OrtGetTensorData($r,Ta,Ta+te,Ta+2*te,Ta+3*te)!==0&&ks(`Can't access output tensor data on index ${tr}.`);let b0=te===4?"i32":"i64",Oc=Number(R.getValue(Ta,b0));vo=R.getValue(Ta+te,"*");let pf=R.getValue(Ta+2*te,"*"),Sl=Number(R.getValue(Ta+3*te,b0)),C0=[];for(let An=0;An<Sl;An++)C0.push(Number(R.getValue(pf+An*te,b0)));R._OrtFree(pf)!==0&&ks("Can't free memory for tensor dims.");let w0=C0.reduce((An,QA)=>An*QA,1);Yr=ai(Oc);let Gl=$==null?void 0:$.outputPreferredLocations[G[tr]];if(Yr==="string"){if(Gl==="gpu-buffer"||Gl==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let An=[];for(let QA=0;QA<w0;QA++){let Qc=R.getValue(vo+QA*te,"*"),l1=R.getValue(vo+(QA+1)*te,"*"),hf=QA===w0-1?void 0:l1-Qc;An.push(R.UTF8ToString(Qc,hf))}Ss.push([Yr,C0,An,"cpu"])}else if(Gl==="gpu-buffer"&&w0>0){let An=R.jsepGetBuffer;if(!An)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let QA=An(vo),Qc=fi(Oc,w0);if(Qc===void 0||!Zn(Yr))throw new Error(`Unsupported data type: ${Yr}`);vi=!0,Ss.push([Yr,C0,{gpuBuffer:QA,download:R.jsepCreateDownloader(QA,Qc,Yr),dispose:()=>{R._OrtReleaseTensor($r)!==0&&ks("Can't release tensor.")}},"gpu-buffer"])}else if(Gl==="ml-tensor"&&w0>0){let An=R.jsepEnsureTensor;if(!An)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(fi(Oc,w0)===void 0||!ba(Yr))throw new Error(`Unsupported data type: ${Yr}`);let QA=await An(vo,Oc,C0,!1);vi=!0,Ss.push([Yr,C0,{mlTensor:QA,download:R.jsepCreateMLTensorDownloader(vo,Yr),dispose:()=>{R.jsepReleaseTensorId(vo),R._OrtReleaseTensor($r)}},"ml-tensor"])}else{let An=new(Ri(Yr))(w0);new Uint8Array(An.buffer,An.byteOffset,An.byteLength).set(R.HEAPU8.subarray(vo,vo+An.byteLength)),Ss.push([Yr,C0,An,"cpu"])}}finally{R.stackRestore(qr),Yr==="string"&&vo&&R._free(vo),vi||R._OrtReleaseTensor($r)}}return $&&!je&&(R._OrtClearBoundOutputs($.handle)!==0&&ks("Can't clear bound outputs."),eo.set(d,[le,Pe,Ge,$,je,!1])),Ss}finally{R.stackRestore(Lt),Et.forEach(Vs=>R._OrtReleaseTensor(Vs)),Ot.forEach(Vs=>R._OrtReleaseTensor(Vs)),Ft.forEach(Vs=>R._free(Vs)),dt!==0&&R._OrtReleaseRunOptions(dt),Ct.forEach(Vs=>R._free(Vs))}},bd=d=>{let b=zr(),E=eo.get(d);if(!E)throw new Error("invalid session id");let G=E[0],L=b._OrtEndProfiling(G);L===0&&ks("Can't get an profile file name."),b._OrtFree(L)},se=d=>{let b=[];for(let E of d){let G=E[2];!Array.isArray(G)&&"buffer"in G&&b.push(G.buffer)}return b}}),_i=be(()=>{$e(),si(),FA(),Tc(),we=()=>!!M.wasm.proxy&&typeof document<"u",vt=!1,Wt=!1,jt=!1,Mr=new Map,Dr=(d,b)=>{let E=Mr.get(d);E?E.push(b):Mr.set(d,[b])},Kr=()=>{if(vt||!Wt||jt||!Ue)throw new Error("worker not ready")},Hs=d=>{switch(d.data.type){case"init-wasm":vt=!1,d.data.err?(jt=!0,hr[1](d.data.err)):(Wt=!0,hr[0]()),lr&&(URL.revokeObjectURL(lr),lr=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let b=Mr.get(d.data.type);d.data.err?b.shift()[1](d.data.err):b.shift()[0](d.data.out);break}}},cs=async()=>{if(!Wt){if(vt)throw new Error("multiple calls to 'initWasm()' detected.");if(jt)throw new Error("previous call to 'initWasm()' failed.");if(vt=!0,we())return new Promise((d,b)=>{Ue==null||Ue.terminate(),Bs().then(([E,G])=>{var L;try{(Ue=G).onerror=R=>b(R),Ue.onmessage=Hs,hr=[d,b];let W={type:"init-wasm",in:M};!W.in.wasm.wasmPaths&&(E||(L=self.location.href)!=null&&L.startsWith("file:"))&&(W.in.wasm.wasmPaths={wasm:new URL(a("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),a.b).href}),Ue.postMessage(W),lr=E}catch(W){b(W)}},b)});try{await Br(M.wasm),await on(M),Wt=!0}catch(d){throw jt=!0,d}finally{vt=!1}}},ia=async d=>{if(we())return Kr(),new Promise((b,E)=>{Dr("init-ep",[b,E]);let G={type:"init-ep",in:{epName:d,env:M}};Ue.postMessage(G)});await ss(M,d)},ws=async d=>we()?(Kr(),new Promise((b,E)=>{Dr("copy-from",[b,E]);let G={type:"copy-from",in:{buffer:d}};Ue.postMessage(G,[d.buffer])})):kn(d),Xs=async(d,b)=>{if(we()){if(b!=null&&b.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Kr(),new Promise((E,G)=>{Dr("create",[E,G]);let L={type:"create",in:{model:d,options:{...b}}},W=[];d instanceof Uint8Array&&W.push(d.buffer),Ue.postMessage(L,W)})}return oi(d,b)},Es=async d=>{if(we())return Kr(),new Promise((b,E)=>{Dr("release",[b,E]);let G={type:"release",in:d};Ue.postMessage(G)});zA(d)},ta=async(d,b,E,G,L,W)=>{if(we()){if(E.some(R=>R[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(L.some(R=>R))throw new Error("pre-allocated output tensor is not supported for proxy.");return Kr(),new Promise((R,te)=>{Dr("run",[R,te]);let ae=E,le={type:"run",in:{sessionId:d,inputIndices:b,inputs:ae,outputIndices:G,options:W}};Ue.postMessage(le,se(ae))})}return m0(d,b,E,G,L,W)},Ya=async d=>{if(we())return Kr(),new Promise((b,E)=>{Dr("end-profiling",[b,E]);let G={type:"end-profiling",in:d};Ue.postMessage(G)});bd(d)}}),OA=be(()=>{$e(),_i(),Lr(),gt(),sf(),Tn=(d,b)=>{switch(d.location){case"cpu":return[d.type,d.dims,d.data,"cpu"];case"gpu-buffer":return[d.type,d.dims,{gpuBuffer:d.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[d.type,d.dims,{mlTensor:d.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${d.location} for ${b()}`)}},Hi=d=>{switch(d[3]){case"cpu":return new j(d[0],d[2],d[1]);case"gpu-buffer":{let b=d[0];if(!Zn(b))throw new Error(`not supported data type: ${b} for deserializing GPU tensor`);let{gpuBuffer:E,download:G,dispose:L}=d[2];return j.fromGpuBuffer(E,{dataType:b,dims:d[1],download:G,dispose:L})}case"ml-tensor":{let b=d[0];if(!ba(b))throw new Error(`not supported data type: ${b} for deserializing MLTensor tensor`);let{mlTensor:E,download:G,dispose:L}=d[2];return j.fromMLTensor(E,{dataType:b,dims:d[1],download:G,dispose:L})}default:throw new Error(`invalid data location: ${d[3]}`)}},oa=class{async fetchModelAndCopyToWasmMemory(d){return ws(await Fi(d))}async loadModel(d,b){let E;ke(),E=typeof d=="string"?await this.fetchModelAndCopyToWasmMemory(d):d,[this.sessionId,this.inputNames,this.outputNames]=await Xs(E,b),Ee()}async dispose(){return Es(this.sessionId)}async run(d,b,E){ke();let G=[],L=[];Object.entries(d).forEach(Ge=>{let $=Ge[0],je=Ge[1],Ke=this.inputNames.indexOf($);if(Ke===-1)throw new Error(`invalid input '${$}'`);G.push(je),L.push(Ke)});let W=[],R=[];Object.entries(b).forEach(Ge=>{let $=Ge[0],je=Ge[1],Ke=this.outputNames.indexOf($);if(Ke===-1)throw new Error(`invalid output '${$}'`);W.push(je),R.push(Ke)});let te=G.map((Ge,$)=>Tn(Ge,()=>`input "${this.inputNames[L[$]]}"`)),ae=W.map((Ge,$)=>Ge?Tn(Ge,()=>`output "${this.outputNames[R[$]]}"`):null),le=await ta(this.sessionId,L,te,R,ae,E),Pe={};for(let Ge=0;Ge<le.length;Ge++)Pe[this.outputNames[R[Ge]]]=W[Ge]??Hi(le[Ge]);return Ee(),Pe}startProfiling(){}endProfiling(){Ya(this.sessionId)}}}),r0={};Ye(r0,{OnnxruntimeWebAssemblyBackend:()=>to,initializeFlags:()=>Cd,wasmBackend:()=>kl});var Cd,to,kl,A2=be(()=>{$e(),_i(),OA(),Cd=()=>{if((typeof M.wasm.initTimeout!="number"||M.wasm.initTimeout<0)&&(M.wasm.initTimeout=0),M.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof M.wasm.proxy!="boolean"&&(M.wasm.proxy=!1),typeof M.wasm.trace!="boolean"&&(M.wasm.trace=!1),typeof M.wasm.numThreads!="number"||!Number.isInteger(M.wasm.numThreads)||M.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)M.wasm.numThreads=1;else{let d=typeof navigator>"u"?ie("node:os").cpus().length:navigator.hardwareConcurrency;M.wasm.numThreads=Math.min(4,Math.ceil((d||1)/2))}},to=class{async init(d){Cd(),await cs(),await ia(d)}async createInferenceSessionHandler(d,b){let E=new oa;return await E.loadModel(d,b),Promise.resolve(E)}},kl=new to});$e(),$e(),$e();var Qf=ze;{let d=(A2(),Le(r0)).wasmBackend;h("webgpu",d,5),h("webnn",d,5),h("cpu",d,10),h("wasm",d,10)}Object.defineProperty(M.versions,"web",{value:"1.21.0-dev.20250206-d981b153d3",enumerable:!0})},"./src/backends/onnx.js":(i,o,a)=>{var u;a.r(o),a.d(o,{Tensor:()=>y.Tensor,createInferenceSession:()=>Z,deviceToExecutionProviders:()=>N,isONNXProxy:()=>q,isONNXTensor:()=>O});var p=a("./src/env.js"),h=a("?2ce3"),C=a("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),y=a("./node_modules/onnxruntime-common/dist/esm/index.js");const k=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),_=[];let v,M;const B=Symbol.for("onnxruntime");if(B in globalThis)M=globalThis[B];else if(p.apis.IS_NODE_ENV){switch(M=h??(u||(u=a.t(h,2))),process.platform){case"win32":_.push("dml");break;case"linux":process.arch==="x64"&&_.push("cuda")}_.push("cpu"),v=["cpu"]}else M=C,p.apis.IS_WEBNN_AVAILABLE&&_.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),p.apis.IS_WEBGPU_AVAILABLE&&_.push("webgpu"),_.push("wasm"),v=["wasm"];const S=M.InferenceSession;function N(f=null){if(!f)return v;switch(f){case"auto":return _;case"gpu":return _.filter(I=>["webgpu","cuda","dml","webnn-gpu"].includes(I))}if(_.includes(f))return[k[f]??f];throw new Error(`Unsupported device: "${f}". Should be one of: ${_.join(", ")}.`)}let V=null;async function Z(f,I,e){V&&await V;const c=S.create(f,I);V??(V=c);const P=await c;return P.config=e,P}function O(f){return f instanceof M.Tensor}const Q=M==null?void 0:M.env;function q(){var f;return(f=Q==null?void 0:Q.wasm)==null?void 0:f.proxy}Q!=null&&Q.wasm&&(Q.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${p.env.version}/dist/`,Q.wasm.proxy=!1,typeof crossOriginIsolated<"u"&&crossOriginIsolated||(Q.wasm.numThreads=1)),Q!=null&&Q.webgpu&&(Q.webgpu.powerPreference="high-performance"),p.env.backends.onnx=Q},"./src/base/feature_extraction_utils.js":(i,o,a)=>{a.r(o),a.d(o,{FeatureExtractor:()=>C,validate_audio_inputs:()=>y});var u=a("./src/utils/constants.js"),p=a("./src/utils/generic.js"),h=a("./src/utils/hub.js");class C extends p.Callable{constructor(_){super(),this.config=_}static async from_pretrained(_,v){return new this(await(0,h.getModelJSON)(_,u.FEATURE_EXTRACTOR_NAME,!0,v))}}function y(k,_){var v;if(!(k instanceof Float32Array||k instanceof Float64Array))throw new Error(`${_} expects input to be a Float32Array or a Float64Array, but got ${((v=k==null?void 0:k.constructor)==null?void 0:v.name)??typeof k} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(i,o,a)=>{a.r(o),a.d(o,{ImageProcessor:()=>q,center_to_corners_format:()=>M,post_process_instance_segmentation:()=>Q,post_process_object_detection:()=>B,post_process_panoptic_segmentation:()=>O,post_process_semantic_segmentation:()=>S});var u=a("./src/utils/generic.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/maths.js");a("./src/utils/image.js");var C=a("./src/utils/core.js"),y=a("./src/utils/hub.js"),k=a("./src/utils/constants.js");function _(f,I,e=0,c=null){const P=f/I;let J=(0,h.bankers_round)(P)*I;return c!==null&&J>c&&(J=Math.floor(P)*I),J<e&&(J=Math.ceil(P)*I),J}function v([f,I],e){return[Math.max(Math.floor(f/e),1)*e,Math.max(Math.floor(I/e),1)*e]}function M([f,I,e,c]){return[f-e/2,I-c/2,f+e/2,I+c/2]}function B(f,I=.5,e=null,c=!1){const P=f.logits,J=f.pred_boxes,[D,j,Ie]=P.dims;if(e!==null&&e.length!==D)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let ge=[];for(let ke=0;ke<D;++ke){let Ee=e!==null?e[ke]:null,Ne={boxes:[],classes:[],scores:[]},Xe=P[ke],At=J[ke];for(let xe=0;xe<j;++xe){let ye,ue=Xe[xe],ie=[];if(c){ye=ue.sigmoid().data;for(let be=0;be<ye.length;++be)ye[be]>I&&ie.push(be)}else{let be=(0,h.max)(ue.data)[1];if(be===Ie-1||(ye=(0,h.softmax)(ue.data),ye[be]<I))continue;ie.push(be)}for(const be of ie){let Ye=At[xe].data;Ye=M(Ye),Ee!==null&&(Ye=Ye.map((Le,lt)=>Le*Ee[(lt+1)%2])),Ne.boxes.push(Ye),Ne.classes.push(be),Ne.scores.push(ye[be])}}ge.push(Ne)}return ge}function S(f,I=null){const e=f.logits,c=e.dims[0];if(I!==null&&I.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const P=[];for(let J=0;J<c;++J){const D=I!==null?I[J]:null;let j=e[J];D!==null&&(j=(0,p.interpolate)(j,D,"bilinear",!1));const[Ie,ge]=D??j.dims.slice(-2),ke=new p.Tensor("int32",new Int32Array(Ie*ge),[Ie,ge]),Ee=j[0].data,Ne=ke.data;for(let xe=1;xe<j.dims[0];++xe){const ye=j[xe].data;for(let ue=0;ue<ye.length;++ue)ye[ue]>Ee[ue]&&(Ee[ue]=ye[ue],Ne[ue]=xe)}const Xe=new Array(j.dims[0]);for(let xe=0;xe<Ne.length;++xe){const ye=Ne[xe];Xe[ye]=ye}const At=Xe.filter(xe=>xe!==void 0);P.push({segmentation:ke,labels:At})}return P}function N(f,I,e,c){const P=[],J=[],D=[];for(let j=0;j<f.dims[0];++j){const Ie=f[j],ge=I[j],ke=(0,h.max)(Ie.data)[1];if(ke===c)continue;const Ee=(0,h.softmax)(Ie.data)[ke];Ee>e&&(P.push(ge),J.push(Ee),D.push(ke))}return[P,J,D]}function V(f,I,e,c=.5,P=.8){const J=[];let D=0,j=0;const Ie=I[e].data;for(let ke=0;ke<f.length;++ke)f[ke]===e&&(J.push(ke),++D),Ie[ke]>=c&&++j;let ge=D>0&&j>0;return ge&&(ge=D/j>P),[ge,J]}function Z(f,I,e,c,P,J=null,D=null){const[j,Ie]=D??f[0].dims,ge=new p.Tensor("int32",new Int32Array(j*Ie),[j,Ie]),ke=[];if(D!==null)for(let xe=0;xe<f.length;++xe)f[xe]=(0,p.interpolate)(f[xe],D,"bilinear",!1);const Ee=new Int32Array(f[0].data.length),Ne=new Float32Array(f[0].data.length);for(let xe=0;xe<f.length;++xe){let ye=I[xe];const ue=f[xe].data;for(let ie=0;ie<ue.length;++ie)ue[ie]*=ye,ue[ie]>Ne[ie]&&(Ee[ie]=xe,Ne[ie]=ue[ie])}let Xe=0;const At=ge.data;for(let xe=0;xe<e.length;++xe){const ye=e[xe],[ue,ie]=V(Ee,f,xe,c,P);if(ue){++Xe;for(const be of ie)At[be]=Xe;ke.push({id:Xe,label_id:ye,score:I[xe]})}}return[ge,ke]}function O(f,I=.5,e=.5,c=.8,P=null,J=null){P===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),P=new Set);const D=f.class_queries_logits??f.logits,j=(f.masks_queries_logits??f.pred_masks).sigmoid();let[Ie,ge,ke]=D.dims;if(ke-=1,J!==null&&J.length!==Ie)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ee=[];for(let Ne=0;Ne<Ie;++Ne){let Xe=J!==null?J[Ne]:null,At=D[Ne],xe=j[Ne],[ye,ue,ie]=N(At,xe,I,ke);if(ie.length===0){let[Le,lt]=Xe??xe.dims.slice(-2),ft=new p.Tensor("int32",new Int32Array(Le*lt).fill(-1),[Le,lt]);Ee.push({segmentation:ft,segments_info:[]});continue}let[be,Ye]=Z(ye,ue,ie,e,c,P,Xe);Ee.push({segmentation:be,segments_info:Ye})}return Ee}function Q(f,I=.5,e=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class q extends u.Callable{constructor(I){super(),this.image_mean=I.image_mean??I.mean,this.image_std=I.image_std??I.std,this.resample=I.resample??2,this.do_rescale=I.do_rescale??!0,this.rescale_factor=I.rescale_factor??.00392156862745098,this.do_normalize=I.do_normalize,this.do_thumbnail=I.do_thumbnail,this.size=I.size??I.image_size,this.do_resize=I.do_resize??this.size!==void 0,this.size_divisibility=I.size_divisibility??I.size_divisor,this.do_center_crop=I.do_center_crop,this.crop_size=I.crop_size,this.do_convert_rgb=I.do_convert_rgb??!0,this.do_crop_margin=I.do_crop_margin,this.pad_size=I.pad_size,this.do_pad=I.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=I.do_flip_channel_order??!1,this.config=I}async thumbnail(I,e,c=2){const P=I.height,J=I.width,D=e.height,j=e.width;let Ie=Math.min(P,D),ge=Math.min(J,j);return Ie===P&&ge===J?I:(P>J?ge=Math.floor(J*Ie/P):J>P&&(Ie=Math.floor(P*ge/J)),await I.resize(ge,Ie,{resample:c}))}async crop_margin(I,e=200){const c=I.clone().grayscale(),P=(0,h.min)(c.data)[0],J=(0,h.max)(c.data)[0]-P;if(J===0)return I;const D=e/255;let j=c.width,Ie=c.height,ge=0,ke=0;const Ee=c.data;for(let Ne=0;Ne<c.height;++Ne){const Xe=Ne*c.width;for(let At=0;At<c.width;++At)(Ee[Xe+At]-P)/J<D&&(j=Math.min(j,At),Ie=Math.min(Ie,Ne),ge=Math.max(ge,At),ke=Math.max(ke,Ne))}return I=await I.crop([j,Ie,ge,ke])}pad_image(I,e,c,{mode:P="constant",center:J=!1,constant_values:D=0}={}){const[j,Ie,ge]=e;let ke,Ee;if(typeof c=="number"?(ke=c,Ee=c):c==="square"?ke=Ee=Math.max(j,Ie):(ke=c.width,Ee=c.height),ke!==Ie||Ee!==j){const Ne=new Float32Array(ke*Ee*ge);if(Array.isArray(D))for(let xe=0;xe<Ne.length;++xe)Ne[xe]=D[xe%ge];else D!==0&&Ne.fill(D);const[Xe,At]=J?[Math.floor((ke-Ie)/2),Math.floor((Ee-j)/2)]:[0,0];for(let xe=0;xe<j;++xe){const ye=(xe+At)*ke,ue=xe*Ie;for(let ie=0;ie<Ie;++ie){const be=(ye+ie+Xe)*ge,Ye=(ue+ie)*ge;for(let Le=0;Le<ge;++Le)Ne[be+Le]=I[Ye+Le]}}if(P==="symmetric"){if(J)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const xe=j-1,ye=Ie-1;for(let ue=0;ue<Ee;++ue){const ie=ue*ke,be=(0,C.calculateReflectOffset)(ue,xe)*Ie;for(let Ye=0;Ye<ke;++Ye){if(ue<j&&Ye<Ie)continue;const Le=(ie+Ye)*ge,lt=(be+(0,C.calculateReflectOffset)(Ye,ye))*ge;for(let ft=0;ft<ge;++ft)Ne[Le+ft]=I[lt+ft]}}}I=Ne,e=[Ee,ke,ge]}return[I,e]}rescale(I){for(let e=0;e<I.length;++e)I[e]=this.rescale_factor*I[e]}get_resize_output_image_size(I,e){const[c,P]=I.size;let J,D;if(this.do_thumbnail){const{height:j,width:Ie}=e;J=Math.min(j,Ie)}else Number.isInteger(e)?(J=e,D=this.config.max_size??J):e!==void 0&&(J=e.shortest_edge,D=e.longest_edge);if(J!==void 0||D!==void 0){const j=J===void 0?1:Math.max(J/c,J/P),Ie=c*j,ge=P*j,ke=D===void 0?1:Math.min(D/Ie,D/ge);let Ee=Math.floor(Number((Ie*ke).toFixed(2))),Ne=Math.floor(Number((ge*ke).toFixed(2)));return this.size_divisibility!==void 0&&([Ee,Ne]=v([Ee,Ne],this.size_divisibility)),[Ee,Ne]}if(e!==void 0&&e.width!==void 0&&e.height!==void 0){let j=e.width,Ie=e.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let ge=Ie/P,ke=j/c;Math.abs(1-ke)<Math.abs(1-ge)?ge=ke:ke=ge,Ie=_(ge*P,this.config.ensure_multiple_of),j=_(ke*c,this.config.ensure_multiple_of)}return[j,Ie]}if(this.size_divisibility!==void 0)return v([c,P],this.size_divisibility);if(e.min_pixels!==void 0&&e.max_pixels!==void 0){const{min_pixels:j,max_pixels:Ie}=e;return function(ge,ke,Ee=28,Ne=3136,Xe=1003520){if(ge<Ee||ke<Ee)throw new Error(`height:${ge} or width:${ke} must be larger than factor:${Ee}`);if(Math.max(ge,ke)/Math.min(ge,ke)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(ge,ke)/Math.min(ge,ke));let At=Math.round(ge/Ee)*Ee,xe=Math.round(ke/Ee)*Ee;if(At*xe>Xe){const ye=Math.sqrt(ge*ke/Xe);At=Math.floor(ge/ye/Ee)*Ee,xe=Math.floor(ke/ye/Ee)*Ee}else if(At*xe<Ne){const ye=Math.sqrt(Ne/(ge*ke));At=Math.ceil(ge*ye/Ee)*Ee,xe=Math.ceil(ke*ye/Ee)*Ee}return[At,xe]}(P,c,this.config.patch_size*this.config.merge_size,j,Ie)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(e)}`)}async resize(I){const[e,c]=this.get_resize_output_image_size(I,this.size);return await I.resize(e,c,{resample:this.resample})}async preprocess(I,{do_normalize:e=null,do_pad:c=null,do_convert_rgb:P=null,do_convert_grayscale:J=null,do_flip_channel_order:D=null}={}){this.do_crop_margin&&(I=await this.crop_margin(I));const[j,Ie]=I.size;if(P??this.do_convert_rgb?I=I.rgb():J&&(I=I.grayscale()),this.do_resize&&(I=await this.resize(I)),this.do_thumbnail&&(I=await this.thumbnail(I,this.size,this.resample)),this.do_center_crop){let Ne,Xe;Number.isInteger(this.crop_size)?(Ne=this.crop_size,Xe=this.crop_size):(Ne=this.crop_size.width,Xe=this.crop_size.height),I=await I.center_crop(Ne,Xe)}const ge=[I.height,I.width];let ke=Float32Array.from(I.data),Ee=[I.height,I.width,I.channels];if(this.do_rescale&&this.rescale(ke),e??this.do_normalize){let Ne=this.image_mean;Array.isArray(this.image_mean)||(Ne=new Array(I.channels).fill(Ne));let Xe=this.image_std;if(Array.isArray(this.image_std)||(Xe=new Array(I.channels).fill(Ne)),Ne.length!==I.channels||Xe.length!==I.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Ne.length}) and \`image_std\` (${Xe.length}) must match the number of channels in the image (${I.channels}).`);for(let At=0;At<ke.length;At+=I.channels)for(let xe=0;xe<I.channels;++xe)ke[At+xe]=(ke[At+xe]-Ne[xe])/Xe[xe]}if(c??this.do_pad){if(this.pad_size)[ke,Ee]=this.pad_image(ke,[I.height,I.width,I.channels],this.pad_size);else if(this.size_divisibility){const[Ne,Xe]=v([Ee[1],Ee[0]],this.size_divisibility);[ke,Ee]=this.pad_image(ke,Ee,{width:Ne,height:Xe})}}if(D??this.do_flip_channel_order){if(Ee[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Ne=0;Ne<ke.length;Ne+=3){const Xe=ke[Ne];ke[Ne]=ke[Ne+2],ke[Ne+2]=Xe}}return{original_size:[Ie,j],reshaped_input_size:ge,pixel_values:new p.Tensor("float32",ke,Ee).permute(2,0,1)}}async _call(I,...e){Array.isArray(I)||(I=[I]);const c=await Promise.all(I.map(J=>this.preprocess(J)));return{pixel_values:(0,p.stack)(c.map(J=>J.pixel_values),0),original_sizes:c.map(J=>J.original_size),reshaped_input_sizes:c.map(J=>J.reshaped_input_size)}}static async from_pretrained(I,e){return new this(await(0,y.getModelJSON)(I,k.IMAGE_PROCESSOR_NAME,!0,e))}}},"./src/base/processing_utils.js":(i,o,a)=>{a.r(o),a.d(o,{Processor:()=>C});var u=a("./src/utils/constants.js"),p=a("./src/utils/generic.js"),h=a("./src/utils/hub.js");class C extends p.Callable{constructor(k,_){super(),this.config=k,this.components=_}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(k,_={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(k,{tokenize:!1,..._})}batch_decode(...k){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...k)}decode(...k){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...k)}async _call(k,..._){for(const v of[this.image_processor,this.feature_extractor,this.tokenizer])if(v)return v(k,..._);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(k,_){const[v,M]=await Promise.all([this.uses_processor_config?(0,h.getModelJSON)(k,u.PROCESSOR_NAME,!0,_):{},Promise.all(this.classes.filter(B=>B in this).map(async B=>{const S=await this[B].from_pretrained(k,_);return[B.replace(/_class$/,""),S]})).then(Object.fromEntries)]);return new this(v,M)}}Te(C,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Te(C,"uses_processor_config",!1)},"./src/configs.js":(i,o,a)=>{a.r(o),a.d(o,{AutoConfig:()=>k,PretrainedConfig:()=>y,getKeyValueShapes:()=>C});var u=a("./src/utils/core.js"),p=a("./src/utils/hub.js");function h(_){const v={};let M={};switch(_.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":M=h(_.text_config);break;case"moondream1":M=h(_.phi_config);break;case"musicgen":M=h(_.decoder);break;case"multi_modality":M=h(_.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":v.num_heads="n_head",v.num_layers="n_layer",v.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":v.num_heads="num_attention_heads",v.num_layers="num_hidden_layers",v.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":v.num_heads="num_key_value_heads",v.num_layers="num_hidden_layers",v.hidden_size="hidden_size",v.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":v.num_heads="num_key_value_heads",v.num_layers="num_hidden_layers",v.dim_kv="head_dim";break;case"openelm":v.num_heads="num_kv_heads",v.num_layers="num_transformer_layers",v.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":v.num_heads="num_heads",v.num_layers="num_layers",v.hidden_size="hidden_size";break;case"bloom":v.num_heads="n_head",v.num_layers="n_layer",v.hidden_size="hidden_size";break;case"mpt":v.num_heads="n_heads",v.num_layers="n_layers",v.hidden_size="d_model";break;case"exaone":v.num_heads="num_key_value_heads",v.num_layers="num_layers",v.dim_kv="head_dim",v.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":v.num_decoder_layers="num_decoder_layers",v.num_decoder_heads="num_heads",v.decoder_dim_kv="d_kv",v.num_encoder_layers="num_layers",v.num_encoder_heads="num_heads",v.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":v.num_decoder_layers="decoder_layers",v.num_decoder_heads="decoder_attention_heads",v.decoder_hidden_size="d_model",v.num_encoder_layers="encoder_layers",v.num_encoder_heads="encoder_attention_heads",v.encoder_hidden_size="d_model";break;case"speecht5":v.num_decoder_layers="decoder_layers",v.num_decoder_heads="decoder_attention_heads",v.decoder_hidden_size="hidden_size",v.num_encoder_layers="encoder_layers",v.num_encoder_heads="encoder_attention_heads",v.encoder_hidden_size="hidden_size";break;case"trocr":v.num_encoder_layers=v.num_decoder_layers="decoder_layers",v.num_encoder_heads=v.num_decoder_heads="decoder_attention_heads",v.encoder_hidden_size=v.decoder_hidden_size="d_model";break;case"musicgen_decoder":v.num_encoder_layers=v.num_decoder_layers="num_hidden_layers",v.num_encoder_heads=v.num_decoder_heads="num_attention_heads",v.encoder_hidden_size=v.decoder_hidden_size="hidden_size";break;case"moonshine":v.num_decoder_layers="decoder_num_hidden_layers",v.num_decoder_heads="decoder_num_key_value_heads",v.num_encoder_layers="encoder_num_hidden_layers",v.num_encoder_heads="encoder_num_key_value_heads",v.encoder_hidden_size=v.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const S=h(_.decoder),N="num_decoder_layers"in S,V=(0,u.pick)(_,["model_type","is_encoder_decoder"]);return N?(V.num_decoder_layers=S.num_decoder_layers,V.num_decoder_heads=S.num_decoder_heads,V.decoder_hidden_size=S.decoder_hidden_size,V.num_encoder_layers=S.num_encoder_layers,V.num_encoder_heads=S.num_encoder_heads,V.encoder_hidden_size=S.encoder_hidden_size):(V.num_layers=S.num_layers,V.num_heads=S.num_heads,V.hidden_size=S.hidden_size),V}const B={...M,...(0,u.pick)(_,["model_type","multi_query","is_encoder_decoder"])};for(const S in v)B[S]=_[v[S]];return B}function C(_,{prefix:v="past_key_values",batch_size:M=1}={}){const B={},S=_.normalized_config;if(S.is_encoder_decoder&&"num_encoder_heads"in S&&"num_decoder_heads"in S){const N=S.encoder_dim_kv??S.encoder_hidden_size/S.num_encoder_heads,V=S.decoder_dim_kv??S.decoder_hidden_size/S.num_decoder_heads,Z=[M,S.num_encoder_heads,0,N],O=[M,S.num_decoder_heads,0,V];for(let Q=0;Q<S.num_decoder_layers;++Q)B[`${v}.${Q}.encoder.key`]=Z,B[`${v}.${Q}.encoder.value`]=Z,B[`${v}.${Q}.decoder.key`]=O,B[`${v}.${Q}.decoder.value`]=O}else{const N=S.num_heads,V=S.num_layers,Z=S.dim_kv??S.hidden_size/(S.num_attention_heads??N);if(S.model_type==="falcon"){const O=[M*N,0,Z];for(let Q=0;Q<V;++Q)B[`${v}.${Q}.key`]=O,B[`${v}.${Q}.value`]=O}else if(S.multi_query){const O=[M*N,0,2*Z];for(let Q=0;Q<V;++Q)B[`${v}.${Q}.key_value`]=O}else if(S.model_type==="bloom"){const O=[M*N,Z,0],Q=[M*N,0,Z];for(let q=0;q<V;++q)B[`${v}.${q}.key`]=O,B[`${v}.${q}.value`]=Q}else if(S.model_type==="openelm")for(let O=0;O<V;++O){const Q=[M,N[O],0,Z];B[`${v}.${O}.key`]=Q,B[`${v}.${O}.value`]=Q}else{const O=[M,N,0,Z];for(let Q=0;Q<V;++Q)B[`${v}.${Q}.key`]=O,B[`${v}.${Q}.value`]=O}}return B}class y{constructor(v){Te(this,"model_type",null);Te(this,"is_encoder_decoder",!1);Te(this,"max_position_embeddings");Te(this,"transformers.js_config");Object.assign(this,v),this.normalized_config=h(this)}static async from_pretrained(v,{progress_callback:M=null,config:B=null,cache_dir:S=null,local_files_only:N=!1,revision:V="main"}={}){!B||B instanceof y||(B=new y(B));const Z=B??await async function(O,Q){return await(0,p.getModelJSON)(O,"config.json",!0,Q)}(v,{progress_callback:M,config:B,cache_dir:S,local_files_only:N,revision:V});return new this(Z)}}class k{static async from_pretrained(...v){return y.from_pretrained(...v)}}},"./src/env.js":(i,o,a)=>{var e,c;a.r(o),a.d(o,{apis:()=>V,env:()=>f});var u=a("?569f"),p=a("?3f59"),h=a("?154a");const C=typeof window<"u"&&window.document!==void 0,y=typeof self<"u"&&((e=self.constructor)==null?void 0:e.name)==="DedicatedWorkerGlobalScope",k=typeof self<"u"&&"caches"in self,_=typeof navigator<"u"&&"gpu"in navigator,v=typeof navigator<"u"&&"ml"in navigator,M=typeof process<"u",B=M&&((c=process==null?void 0:process.release)==null?void 0:c.name)==="node",S=!I(u),N=!I(p),V=Object.freeze({IS_BROWSER_ENV:C,IS_WEBWORKER_ENV:y,IS_WEB_CACHE_AVAILABLE:k,IS_WEBGPU_AVAILABLE:_,IS_WEBNN_AVAILABLE:v,IS_PROCESS_AVAILABLE:M,IS_NODE_ENV:B,IS_FS_AVAILABLE:S,IS_PATH_AVAILABLE:N}),Z=S&&N;let O="./";if(Z){const P=Object({url:self.location.href}).url;P?O=p.dirname(p.dirname(h.fileURLToPath(P))):typeof __dirname<"u"&&(O=p.dirname(__dirname))}const Q=Z?p.join(O,"/.cache/"):null,q="/models/",f={version:"3.3.3",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(C||y),localModelPath:Z?p.join(O,q):q,useFS:S,useBrowserCache:k,useFSCache:S,cacheDir:Q,useCustomCache:!1,customCache:null};function I(P){return Object.keys(P).length===0}},"./src/generation/configuration_utils.js":(i,o,a)=>{a.r(o),a.d(o,{GenerationConfig:()=>p});var u=a("./src/utils/core.js");class p{constructor(C){Te(this,"max_length",20);Te(this,"max_new_tokens",null);Te(this,"min_length",0);Te(this,"min_new_tokens",null);Te(this,"early_stopping",!1);Te(this,"max_time",null);Te(this,"do_sample",!1);Te(this,"num_beams",1);Te(this,"num_beam_groups",1);Te(this,"penalty_alpha",null);Te(this,"use_cache",!0);Te(this,"temperature",1);Te(this,"top_k",50);Te(this,"top_p",1);Te(this,"typical_p",1);Te(this,"epsilon_cutoff",0);Te(this,"eta_cutoff",0);Te(this,"diversity_penalty",0);Te(this,"repetition_penalty",1);Te(this,"encoder_repetition_penalty",1);Te(this,"length_penalty",1);Te(this,"no_repeat_ngram_size",0);Te(this,"bad_words_ids",null);Te(this,"force_words_ids",null);Te(this,"renormalize_logits",!1);Te(this,"constraints",null);Te(this,"forced_bos_token_id",null);Te(this,"forced_eos_token_id",null);Te(this,"remove_invalid_values",!1);Te(this,"exponential_decay_length_penalty",null);Te(this,"suppress_tokens",null);Te(this,"streamer",null);Te(this,"begin_suppress_tokens",null);Te(this,"forced_decoder_ids",null);Te(this,"guidance_scale",null);Te(this,"num_return_sequences",1);Te(this,"output_attentions",!1);Te(this,"output_hidden_states",!1);Te(this,"output_scores",!1);Te(this,"return_dict_in_generate",!1);Te(this,"pad_token_id",null);Te(this,"bos_token_id",null);Te(this,"eos_token_id",null);Te(this,"encoder_no_repeat_ngram_size",0);Te(this,"decoder_start_token_id",null);Te(this,"generation_kwargs",{});Object.assign(this,(0,u.pick)(C,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(i,o,a)=>{a.r(o),a.d(o,{ClassifierFreeGuidanceLogitsProcessor:()=>O,ForcedBOSTokenLogitsProcessor:()=>k,ForcedEOSTokenLogitsProcessor:()=>_,LogitsProcessor:()=>h,LogitsProcessorList:()=>y,LogitsWarper:()=>C,MinLengthLogitsProcessor:()=>N,MinNewTokensLengthLogitsProcessor:()=>V,NoBadWordsLogitsProcessor:()=>Z,NoRepeatNGramLogitsProcessor:()=>B,RepetitionPenaltyLogitsProcessor:()=>S,SuppressTokensAtBeginLogitsProcessor:()=>v,TemperatureLogitsWarper:()=>Q,TopKLogitsWarper:()=>f,TopPLogitsWarper:()=>q,WhisperTimeStampLogitsProcessor:()=>M});var u=a("./src/utils/generic.js");a("./src/utils/tensor.js");var p=a("./src/utils/maths.js");class h extends u.Callable{_call(e,c){throw Error("`_call` should be implemented in a subclass")}}class C extends u.Callable{_call(e,c){throw Error("`_call` should be implemented in a subclass")}}class y extends u.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,c){let P=c;for(const J of this.processors)P=J(e,P);return P}[Symbol.iterator](){return this.processors.values()}}class k extends h{constructor(e){super(),this.bos_token_id=e}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length===1){const J=c[P].data;J.fill(-1/0),J[this.bos_token_id]=0}return c}}class _ extends h{constructor(e,c){super(),this.max_length=e,this.eos_token_id=Array.isArray(c)?c:[c]}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length===this.max_length-1){const J=c[P].data;J.fill(-1/0);for(const D of this.eos_token_id)J[D]=0}return c}}class v extends h{constructor(e,c){super(),this.begin_suppress_tokens=e,this.begin_index=c}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length===this.begin_index){const J=c[P].data;for(const D of this.begin_suppress_tokens)J[D]=-1/0}return c}}class M extends h{constructor(e,c){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=c.length,c.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data;if(J[this.no_timestamps_token_id]=-1/0,e[P].length===this.begin_index-1){J.fill(-1/0),J[this.timestamp_begin]=0;continue}const D=e[P].slice(this.begin_index),j=D.length>=1&&D[D.length-1]>=this.timestamp_begin,Ie=D.length<2||D[D.length-2]>=this.timestamp_begin;if(j&&(Ie?J.subarray(this.timestamp_begin).fill(-1/0):J.subarray(0,this.eos_token_id).fill(-1/0)),e[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const Ee=this.timestamp_begin+this.max_initial_timestamp_index;J.subarray(Ee+1).fill(-1/0)}const ge=(0,p.log_softmax)(J);Math.log(ge.subarray(this.timestamp_begin).map(Math.exp).reduce((Ee,Ne)=>Ee+Ne))>(0,p.max)(ge.subarray(0,this.timestamp_begin))[0]&&J.subarray(0,this.timestamp_begin).fill(-1/0)}return c}}class B extends h{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const c=e.length,P=[];for(let D=0;D<c+1-this.no_repeat_ngram_size;++D){const j=[];for(let Ie=0;Ie<this.no_repeat_ngram_size;++Ie)j.push(e[D+Ie]);P.push(j.map(Number))}const J=new Map;for(const D of P){const j=D.slice(0,D.length-1),Ie=JSON.stringify(j),ge=J.get(Ie)??[];ge.push(D[D.length-1]),J.set(Ie,ge)}return J}getGeneratedNgrams(e,c){const P=c.slice(c.length+1-this.no_repeat_ngram_size,c.length);return e.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(e){const c=[];if(e.length+1<this.no_repeat_ngram_size)return c;{const P=this.getNgrams(e);return this.getGeneratedNgrams(P,e)}}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data,D=this.calcBannedNgramTokens(e[P]);for(const j of D)J[j]=-1/0}return c}}class S extends h{constructor(e){super(),this.penalty=e}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data;for(const D of new Set(e[P])){const j=Number(D);J[j]<0?J[j]*=this.penalty:J[j]/=this.penalty}}return c}}class N extends h{constructor(e,c){super(),this.min_length=e,this.eos_token_id=Array.isArray(c)?c:[c]}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length<this.min_length){const J=c[P].data;for(const D of this.eos_token_id)J[D]=-1/0}return c}}class V extends h{constructor(e,c,P){super(),this.prompt_length_to_skip=e,this.min_new_tokens=c,this.eos_token_id=Array.isArray(P)?P:[P]}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length-this.prompt_length_to_skip<this.min_new_tokens){const J=c[P].data;for(const D of this.eos_token_id)J[D]=-1/0}return c}}class Z extends h{constructor(e,c){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(c)?c:[c]}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data,D=e[P];for(const j of this.bad_words_ids){let Ie=!0;for(let ge=1;ge<=j.length-1&&j.length<D.length;++ge)if(j.at(-ge-1)!=D.at(-ge)){Ie=!1;break}Ie&&(J[j.at(-1)]=-1/0)}}return c}}class O extends h{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,c){if(c.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${c.dims[0]} for the logits and ${e.length} for the input ids.`);const P=e.length,J=c.slice([0,P],null),D=c.slice([P,c.dims[0]],null);for(let j=0;j<D.data.length;++j)D.data[j]+=(J.data[j]-D.data[j])*this.guidance_scale;return D}}class Q extends C{constructor(e){super(),this.temperature=e}_call(e,c){const P=c.data;for(let J=0;J<P.length;++J)P[J]/=this.temperature;return c}}class q extends C{constructor(e,{filter_value:c=-1/0,min_tokens_to_keep:P=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=e,this.filter_value=c,this.min_tokens_to_keep=P}}class f extends C{constructor(e,{filter_value:c=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,P),this.filter_value=c}}},"./src/generation/logits_sampler.js":(i,o,a)=>{a.r(o),a.d(o,{LogitsSampler:()=>C});var u=a("./src/utils/generic.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/maths.js");a("./src/generation/configuration_utils.js");class C extends u.Callable{constructor(M){super(),this.generation_config=M}async _call(M){return this.sample(M)}async sample(M){throw Error("sample should be implemented in subclasses.")}getLogits(M,B){let S=M.dims.at(-1),N=M.data;if(B===-1)N=N.slice(-S);else{let V=B*S;N=N.slice(V,V+S)}return N}randomSelect(M){let B=0;for(let N=0;N<M.length;++N)B+=M[N];let S=Math.random()*B;for(let N=0;N<M.length;++N)if(S-=M[N],S<=0)return N;return 0}static getSampler(M){if(M.do_sample)return new k(M);if(M.num_beams>1)return new _(M);if(M.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${M.num_return_sequences}.`);return new y(M)}}class y extends C{async sample(M){const B=(0,h.max)(M.data)[1];return[[BigInt(B),0]]}}class k extends C{async sample(M){let B=M.dims.at(-1);this.generation_config.top_k>0&&(B=Math.min(this.generation_config.top_k,B));const[S,N]=await(0,p.topk)(M,B),V=(0,h.softmax)(S.data);return Array.from({length:this.generation_config.num_beams},()=>{const Z=this.randomSelect(V);return[N.data[Z],Math.log(V[Z])]})}}class _ extends C{async sample(M){let B=M.dims.at(-1);this.generation_config.top_k>0&&(B=Math.min(this.generation_config.top_k,B));const[S,N]=await(0,p.topk)(M,B),V=(0,h.softmax)(S.data);return Array.from({length:this.generation_config.num_beams},(Z,O)=>[N.data[O],Math.log(V[O])])}}},"./src/generation/stopping_criteria.js":(i,o,a)=>{a.r(o),a.d(o,{EosTokenCriteria:()=>y,InterruptableStoppingCriteria:()=>k,MaxLengthCriteria:()=>C,StoppingCriteria:()=>p,StoppingCriteriaList:()=>h});var u=a("./src/utils/generic.js");class p extends u.Callable{_call(v,M){throw Error("StoppingCriteria needs to be subclassed")}}class h extends u.Callable{constructor(){super(),this.criteria=[]}push(v){this.criteria.push(v)}extend(v){v instanceof h?v=v.criteria:v instanceof p&&(v=[v]),this.criteria.push(...v)}_call(v,M){const B=new Array(v.length).fill(!1);for(const S of this.criteria){const N=S(v,M);for(let V=0;V<B.length;++V)B[V]||(B[V]=N[V])}return B}[Symbol.iterator](){return this.criteria.values()}}class C extends p{constructor(v,M=null){super(),this.max_length=v,this.max_position_embeddings=M}_call(v){return v.map(M=>M.length>=this.max_length)}}class y extends p{constructor(v){super(),Array.isArray(v)||(v=[v]),this.eos_token_id=v}_call(v,M){return v.map(B=>{const S=B.at(-1);return this.eos_token_id.some(N=>S==N)})}}class k extends p{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(v,M){return new Array(v.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(i,o,a)=>{a.r(o),a.d(o,{BaseStreamer:()=>C,TextStreamer:()=>k,WhisperTextStreamer:()=>_});var u=a("./src/utils/core.js"),p=a("./src/tokenizers.js"),h=a("./src/env.js");class C{put(M){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const y=h.apis.IS_PROCESS_AVAILABLE?v=>process.stdout.write(v):v=>console.log(v);class k extends C{constructor(M,{skip_prompt:B=!1,callback_function:S=null,token_callback_function:N=null,skip_special_tokens:V=!0,decode_kwargs:Z={},...O}={}){super(),this.tokenizer=M,this.skip_prompt=B,this.callback_function=S??y,this.token_callback_function=N,this.decode_kwargs={skip_special_tokens:V,...Z,...O},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(M){var V;if(M.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const B=M[0];(V=this.token_callback_function)==null||V.call(this,B),this.token_cache=(0,u.mergeArrays)(this.token_cache,B);const S=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let N;S.endsWith(`
`)?(N=S.slice(this.print_len),this.token_cache=[],this.print_len=0):S.length>0&&(0,p.is_chinese_char)(S.charCodeAt(S.length-1))?(N=S.slice(this.print_len),this.print_len+=N.length):(N=S.slice(this.print_len,S.lastIndexOf(" ")+1),this.print_len+=N.length),this.on_finalized_text(N,!1)}end(){let M;this.token_cache.length>0?(M=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):M="",this.next_tokens_are_prompt=!0,this.on_finalized_text(M,!0)}on_finalized_text(M,B){var S,N;M.length>0&&((S=this.callback_function)==null||S.call(this,M)),B&&this.callback_function===y&&h.apis.IS_PROCESS_AVAILABLE&&((N=this.callback_function)==null||N.call(this,`
`))}}class _ extends k{constructor(M,{skip_prompt:B=!1,callback_function:S=null,token_callback_function:N=null,on_chunk_start:V=null,on_chunk_end:Z=null,on_finalize:O=null,time_precision:Q=.02,skip_special_tokens:q=!0,decode_kwargs:f={}}={}){super(M,{skip_prompt:B,skip_special_tokens:q,callback_function:S,token_callback_function:N,decode_kwargs:f}),this.timestamp_begin=M.timestamp_begin,this.on_chunk_start=V,this.on_chunk_end=Z,this.on_finalize=O,this.time_precision=Q,this.waiting_for_timestamp=!1}put(M){var S,N;if(M.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const B=M[0];if(B.length===1){const V=Number(B[0])-this.timestamp_begin;if(V>=0){const Z=V*this.time_precision;this.waiting_for_timestamp?(S=this.on_chunk_end)==null||S.call(this,Z):(N=this.on_chunk_start)==null||N.call(this,Z),this.waiting_for_timestamp=!this.waiting_for_timestamp,M=[[]]}}return super.put(M)}end(){var M;super.end(),(M=this.on_finalize)==null||M.call(this)}}},"./src/models.js":(i,o,a)=>{a.r(o),a.d(o,{ASTForAudioClassification:()=>Eo,ASTModel:()=>jA,ASTPreTrainedModel:()=>$n,AlbertForMaskedLM:()=>qe,AlbertForQuestionAnswering:()=>he,AlbertForSequenceClassification:()=>pe,AlbertModel:()=>st,AlbertPreTrainedModel:()=>Pt,AutoModel:()=>dd,AutoModelForAudioClassification:()=>of,AutoModelForAudioFrameClassification:()=>Af,AutoModelForCTC:()=>Dc,AutoModelForCausalLM:()=>gd,AutoModelForDepthEstimation:()=>Gc,AutoModelForDocumentQuestionAnswering:()=>wl,AutoModelForImageClassification:()=>sl,AutoModelForImageFeatureExtraction:()=>cf,AutoModelForImageMatting:()=>Sc,AutoModelForImageSegmentation:()=>pd,AutoModelForImageToImage:()=>e0,AutoModelForMaskGeneration:()=>hd,AutoModelForMaskedLM:()=>Bn,AutoModelForNormalEstimation:()=>Fc,AutoModelForObjectDetection:()=>Pc,AutoModelForPoseEstimation:()=>lf,AutoModelForQuestionAnswering:()=>Os,AutoModelForSemanticSegmentation:()=>h0,AutoModelForSeq2SeqLM:()=>sf,AutoModelForSequenceClassification:()=>rf,AutoModelForSpeechSeq2Seq:()=>rl,AutoModelForTextToSpectrogram:()=>af,AutoModelForTextToWaveform:()=>fd,AutoModelForTokenClassification:()=>Lr,AutoModelForUniversalSegmentation:()=>Gf,AutoModelForVision2Seq:()=>Ws,AutoModelForXVector:()=>Ff,AutoModelForZeroShotObjectDetection:()=>nf,BartForConditionalGeneration:()=>as,BartForSequenceClassification:()=>kr,BartModel:()=>Ys,BartPretrainedModel:()=>xs,BaseModelOutput:()=>wt,BeitForImageClassification:()=>ut,BeitModel:()=>Ze,BeitPreTrainedModel:()=>We,BertForMaskedLM:()=>oe,BertForQuestionAnswering:()=>H,BertForSequenceClassification:()=>zt,BertForTokenClassification:()=>ve,BertModel:()=>Mt,BertPreTrainedModel:()=>Bt,BlenderbotForConditionalGeneration:()=>Ls,BlenderbotModel:()=>Fs,BlenderbotPreTrainedModel:()=>Gs,BlenderbotSmallForConditionalGeneration:()=>Ba,BlenderbotSmallModel:()=>fa,BlenderbotSmallPreTrainedModel:()=>Ms,BloomForCausalLM:()=>JA,BloomModel:()=>tA,BloomPreTrainedModel:()=>MA,CLIPModel:()=>vr,CLIPPreTrainedModel:()=>Ti,CLIPSegForImageSegmentation:()=>ei,CLIPSegModel:()=>_r,CLIPSegPreTrainedModel:()=>Bo,CLIPTextModel:()=>cA,CLIPTextModelWithProjection:()=>HA,CLIPVisionModel:()=>Vn,CLIPVisionModelWithProjection:()=>mi,CamembertForMaskedLM:()=>Pn,CamembertForQuestionAnswering:()=>sa,CamembertForSequenceClassification:()=>Dn,CamembertForTokenClassification:()=>qn,CamembertModel:()=>On,CamembertPreTrainedModel:()=>en,CausalLMOutput:()=>Pl,CausalLMOutputWithPast:()=>Of,ChineseCLIPModel:()=>dl,ChineseCLIPPreTrainedModel:()=>ul,ClapAudioModelWithProjection:()=>Ou,ClapModel:()=>u0,ClapPreTrainedModel:()=>c0,ClapTextModelWithProjection:()=>Wd,CodeGenForCausalLM:()=>Pi,CodeGenModel:()=>fn,CodeGenPreTrainedModel:()=>Vi,CohereForCausalLM:()=>So,CohereModel:()=>Wn,CoherePreTrainedModel:()=>Do,ConvBertForMaskedLM:()=>Ks,ConvBertForQuestionAnswering:()=>Va,ConvBertForSequenceClassification:()=>ts,ConvBertForTokenClassification:()=>zn,ConvBertModel:()=>os,ConvBertPreTrainedModel:()=>$s,ConvNextForImageClassification:()=>tu,ConvNextModel:()=>eu,ConvNextPreTrainedModel:()=>z0,ConvNextV2ForImageClassification:()=>su,ConvNextV2Model:()=>ru,ConvNextV2PreTrainedModel:()=>O0,DPTForDepthEstimation:()=>ns,DPTModel:()=>Nr,DPTPreTrainedModel:()=>pr,DebertaForMaskedLM:()=>zr,DebertaForQuestionAnswering:()=>ks,DebertaForSequenceClassification:()=>qs,DebertaForTokenClassification:()=>aa,DebertaModel:()=>Br,DebertaPreTrainedModel:()=>Zt,DebertaV2ForMaskedLM:()=>Sn,DebertaV2ForQuestionAnswering:()=>di,DebertaV2ForSequenceClassification:()=>ci,DebertaV2ForTokenClassification:()=>ui,DebertaV2Model:()=>Qn,DebertaV2PreTrainedModel:()=>vn,DecisionTransformerModel:()=>pc,DecisionTransformerPreTrainedModel:()=>Hu,DeiTForImageClassification:()=>La,DeiTModel:()=>Na,DeiTPreTrainedModel:()=>Ia,DepthAnythingForDepthEstimation:()=>Ea,DepthAnythingPreTrainedModel:()=>ys,DepthProForDepthEstimation:()=>D0,DepthProPreTrainedModel:()=>qc,DetrForObjectDetection:()=>St,DetrForSegmentation:()=>Rt,DetrModel:()=>xt,DetrObjectDetectionOutput:()=>sr,DetrPreTrainedModel:()=>mt,DetrSegmentationOutput:()=>br,Dinov2ForImageClassification:()=>sA,Dinov2Model:()=>au,Dinov2PreTrainedModel:()=>Q0,Dinov2WithRegistersForImageClassification:()=>ml,Dinov2WithRegistersModel:()=>hl,Dinov2WithRegistersPreTrainedModel:()=>Qo,DistilBertForMaskedLM:()=>Zn,DistilBertForQuestionAnswering:()=>Xn,DistilBertForSequenceClassification:()=>fi,DistilBertForTokenClassification:()=>Ri,DistilBertModel:()=>ai,DistilBertPreTrainedModel:()=>Fa,DonutSwinModel:()=>a0,DonutSwinPreTrainedModel:()=>$c,EfficientNetForImageClassification:()=>Ru,EfficientNetModel:()=>oc,EfficientNetPreTrainedModel:()=>ic,ElectraForMaskedLM:()=>Sr,ElectraForQuestionAnswering:()=>$a,ElectraForSequenceClassification:()=>Kt,ElectraForTokenClassification:()=>Bs,ElectraModel:()=>Pr,ElectraPreTrainedModel:()=>Wa,EsmForMaskedLM:()=>Fi,EsmForSequenceClassification:()=>Jn,EsmForTokenClassification:()=>gi,EsmModel:()=>Gi,EsmPreTrainedModel:()=>ba,ExaoneForCausalLM:()=>mA,ExaoneModel:()=>Ao,ExaonePreTrainedModel:()=>fs,FalconForCausalLM:()=>zu,FalconModel:()=>tc,FalconPreTrainedModel:()=>ec,FastViTForImageClassification:()=>s,FastViTModel:()=>r,FastViTPreTrainedModel:()=>t,Florence2ForConditionalGeneration:()=>AA,Florence2PreTrainedModel:()=>ji,GLPNForDepthEstimation:()=>Jc,GLPNModel:()=>Zc,GLPNPreTrainedModel:()=>F0,GPT2LMHeadModel:()=>Yi,GPT2Model:()=>To,GPT2PreTrainedModel:()=>dA,GPTBigCodeForCausalLM:()=>xn,GPTBigCodeModel:()=>gr,GPTBigCodePreTrainedModel:()=>bi,GPTJForCausalLM:()=>pA,GPTJModel:()=>zs,GPTJPreTrainedModel:()=>ds,GPTNeoForCausalLM:()=>qA,GPTNeoModel:()=>fA,GPTNeoPreTrainedModel:()=>Ho,GPTNeoXForCausalLM:()=>gl,GPTNeoXModel:()=>gA,GPTNeoXPreTrainedModel:()=>Za,Gemma2ForCausalLM:()=>wo,Gemma2Model:()=>eA,Gemma2PreTrainedModel:()=>$o,GemmaForCausalLM:()=>yA,GemmaModel:()=>wi,GemmaPreTrainedModel:()=>IA,GlmForCausalLM:()=>bo,GlmModel:()=>gn,GlmPreTrainedModel:()=>Ko,GraniteForCausalLM:()=>Jo,GraniteModel:()=>Zo,GranitePreTrainedModel:()=>Ua,GroundingDinoForObjectDetection:()=>nu,GroundingDinoPreTrainedModel:()=>N0,GroupViTModel:()=>rs,GroupViTPreTrainedModel:()=>Oo,HeliumForCausalLM:()=>Po,HeliumModel:()=>Pa,HeliumPreTrainedModel:()=>Yo,HieraForImageClassification:()=>In,HieraModel:()=>an,HieraPreTrainedModel:()=>Ja,HubertForCTC:()=>xu,HubertForSequenceClassification:()=>Mu,HubertModel:()=>vu,HubertPreTrainedModel:()=>jd,IJepaForImageClassification:()=>TA,IJepaModel:()=>Ji,IJepaPreTrainedModel:()=>Zi,Idefics3ForConditionalGeneration:()=>jo,Idefics3PreTrainedModel:()=>UA,ImageMattingOutput:()=>df,JAISLMHeadModel:()=>KA,JAISModel:()=>Uo,JAISPreTrainedModel:()=>Wo,JinaCLIPModel:()=>oo,JinaCLIPPreTrainedModel:()=>io,JinaCLIPTextModel:()=>fl,JinaCLIPVisionModel:()=>uA,LlamaForCausalLM:()=>hA,LlamaModel:()=>mo,LlamaPreTrainedModel:()=>Ci,LlavaForConditionalGeneration:()=>go,LlavaOnevisionForConditionalGeneration:()=>jn,LlavaPreTrainedModel:()=>Ro,LongT5ForConditionalGeneration:()=>nr,LongT5Model:()=>fr,LongT5PreTrainedModel:()=>ir,M2M100ForConditionalGeneration:()=>El,M2M100Model:()=>uu,M2M100PreTrainedModel:()=>n0,MBartForCausalLM:()=>xa,MBartForConditionalGeneration:()=>Tr,MBartForSequenceClassification:()=>ha,MBartModel:()=>qt,MBartPreTrainedModel:()=>Ns,MPNetForMaskedLM:()=>zi,MPNetForQuestionAnswering:()=>Ln,MPNetForSequenceClassification:()=>Bi,MPNetForTokenClassification:()=>rn,MPNetModel:()=>Nn,MPNetPreTrainedModel:()=>bn,MT5ForConditionalGeneration:()=>Wr,MT5Model:()=>Ar,MT5PreTrainedModel:()=>Yt,MarianMTModel:()=>V0,MarianModel:()=>cu,MarianPreTrainedModel:()=>Qi,MaskFormerForInstanceSegmentation:()=>G0,MaskFormerModel:()=>Xc,MaskFormerPreTrainedModel:()=>S0,MaskedLMOutput:()=>Ni,MgpstrForSceneTextRecognition:()=>Yu,MgpstrModelOutput:()=>hc,MgpstrPreTrainedModel:()=>p0,MistralForCausalLM:()=>Tl,MistralModel:()=>Z0,MistralPreTrainedModel:()=>l0,MobileBertForMaskedLM:()=>pi,MobileBertForQuestionAnswering:()=>Cs,MobileBertForSequenceClassification:()=>Jr,MobileBertModel:()=>Ei,MobileBertPreTrainedModel:()=>tn,MobileLLMForCausalLM:()=>ls,MobileLLMModel:()=>Co,MobileLLMPreTrainedModel:()=>Is,MobileNetV1ForImageClassification:()=>uc,MobileNetV1Model:()=>ju,MobileNetV1PreTrainedModel:()=>cc,MobileNetV2ForImageClassification:()=>Vu,MobileNetV2Model:()=>Yd,MobileNetV2PreTrainedModel:()=>Zl,MobileNetV3ForImageClassification:()=>Wu,MobileNetV3Model:()=>dc,MobileNetV3PreTrainedModel:()=>g0,MobileNetV4ForImageClassification:()=>Uu,MobileNetV4Model:()=>gc,MobileNetV4PreTrainedModel:()=>fc,MobileViTForImageClassification:()=>m,MobileViTModel:()=>g,MobileViTPreTrainedModel:()=>l,MobileViTV2ForImageClassification:()=>x,MobileViTV2Model:()=>T,MobileViTV2PreTrainedModel:()=>w,ModelOutput:()=>ht,ModernBertForMaskedLM:()=>ze,ModernBertForSequenceClassification:()=>$e,ModernBertForTokenClassification:()=>gt,ModernBertModel:()=>ne,ModernBertPreTrainedModel:()=>ce,Moondream1ForConditionalGeneration:()=>po,MoonshineForConditionalGeneration:()=>ii,MoonshineModel:()=>Kl,MoonshinePreTrainedModel:()=>oA,MptForCausalLM:()=>EA,MptModel:()=>yi,MptPreTrainedModel:()=>qi,MultiModalityCausalLM:()=>qd,MultiModalityPreTrainedModel:()=>Kd,MusicgenForCausalLM:()=>Hd,MusicgenForConditionalGeneration:()=>lc,MusicgenModel:()=>f0,MusicgenPreTrainedModel:()=>Ac,NomicBertModel:()=>Nt,NomicBertPreTrainedModel:()=>It,OPTForCausalLM:()=>ua,OPTModel:()=>sn,OPTPreTrainedModel:()=>Fo,Olmo2ForCausalLM:()=>Xo,Olmo2Model:()=>Oi,Olmo2PreTrainedModel:()=>wA,OlmoForCausalLM:()=>CA,OlmoModel:()=>bA,OlmoPreTrainedModel:()=>qo,OpenELMForCausalLM:()=>XA,OpenELMModel:()=>_A,OpenELMPreTrainedModel:()=>kA,OwlViTForObjectDetection:()=>ee,OwlViTModel:()=>U,OwlViTPreTrainedModel:()=>F,Owlv2ForObjectDetection:()=>Me,Owlv2Model:()=>Ce,Owlv2PreTrainedModel:()=>Ae,PaliGemmaForConditionalGeneration:()=>ao,PaliGemmaPreTrainedModel:()=>lA,PatchTSMixerForPrediction:()=>qu,PatchTSMixerModel:()=>Cc,PatchTSMixerPreTrainedModel:()=>bc,PatchTSTForPrediction:()=>Cl,PatchTSTModel:()=>Ku,PatchTSTPreTrainedModel:()=>mc,Phi3ForCausalLM:()=>ZA,Phi3Model:()=>lo,Phi3PreTrainedModel:()=>Ki,Phi3VForCausalLM:()=>mr,Phi3VPreTrainedModel:()=>Vo,PhiForCausalLM:()=>xA,PhiModel:()=>wa,PhiPreTrainedModel:()=>Ii,PreTrainedModel:()=>Qe,PretrainedMixin:()=>ya,PvtForImageClassification:()=>zo,PvtModel:()=>ko,PvtPreTrainedModel:()=>DA,PyAnnoteForAudioFrameClassification:()=>hu,PyAnnoteModel:()=>pu,PyAnnotePreTrainedModel:()=>i0,QuestionAnsweringModelOutput:()=>Wi,Qwen2ForCausalLM:()=>Mn,Qwen2Model:()=>Io,Qwen2PreTrainedModel:()=>Cn,Qwen2VLForConditionalGeneration:()=>Go,Qwen2VLPreTrainedModel:()=>vA,RTDetrForObjectDetection:()=>Ur,RTDetrModel:()=>jr,RTDetrObjectDetectionOutput:()=>As,RTDetrPreTrainedModel:()=>Ir,ResNetForImageClassification:()=>re,ResNetModel:()=>K,ResNetPreTrainedModel:()=>z,RoFormerForMaskedLM:()=>Xt,RoFormerForQuestionAnswering:()=>Rr,RoFormerForSequenceClassification:()=>Jt,RoFormerForTokenClassification:()=>wr,RoFormerModel:()=>Vt,RoFormerPreTrainedModel:()=>_t,RobertaForMaskedLM:()=>na,RobertaForQuestionAnswering:()=>la,RobertaForSequenceClassification:()=>za,RobertaForTokenClassification:()=>Hr,RobertaModel:()=>Ca,RobertaPreTrainedModel:()=>Ma,SamImageSegmentationOutput:()=>j0,SamModel:()=>lu,SamPreTrainedModel:()=>Au,SapiensForDepthEstimation:()=>Yc,SapiensForNormalEstimation:()=>Kc,SapiensForSemanticSegmentation:()=>rA,SapiensPreTrainedModel:()=>ti,SegformerForImageClassification:()=>sc,SegformerForSemanticSegmentation:()=>Nu,SegformerModel:()=>Ud,SegformerPreTrainedModel:()=>d0,Seq2SeqLMOutput:()=>zf,SequenceClassifierOutput:()=>Rs,SiglipModel:()=>ho,SiglipPreTrainedModel:()=>no,SiglipTextModel:()=>YA,SiglipVisionModel:()=>Xa,SpeechT5ForSpeechToText:()=>K0,SpeechT5ForTextToSpeech:()=>q0,SpeechT5HifiGan:()=>X0,SpeechT5Model:()=>A0,SpeechT5PreTrainedModel:()=>bl,SqueezeBertForMaskedLM:()=>ot,SqueezeBertForQuestionAnswering:()=>Tt,SqueezeBertForSequenceClassification:()=>bt,SqueezeBertModel:()=>Be,SqueezeBertPreTrainedModel:()=>Qt,StableLmForCausalLM:()=>Lu,StableLmModel:()=>nc,StableLmPreTrainedModel:()=>ac,Starcoder2ForCausalLM:()=>Fu,Starcoder2Model:()=>$0,Starcoder2PreTrainedModel:()=>J0,StyleTextToSpeech2Model:()=>Su,StyleTextToSpeech2PreTrainedModel:()=>Du,Swin2SRForImageSuperResolution:()=>rr,Swin2SRModel:()=>Ut,Swin2SRPreTrainedModel:()=>yt,SwinForImageClassification:()=>at,SwinModel:()=>_e,SwinPreTrainedModel:()=>me,T5ForConditionalGeneration:()=>Ht,T5Model:()=>kt,T5PreTrainedModel:()=>it,TableTransformerForObjectDetection:()=>da,TableTransformerModel:()=>ea,TableTransformerObjectDetectionOutput:()=>ma,TableTransformerPreTrainedModel:()=>Ds,TokenClassifierOutput:()=>ki,TrOCRForCausalLM:()=>Gu,TrOCRPreTrainedModel:()=>Vd,UniSpeechForCTC:()=>H0,UniSpeechForSequenceClassification:()=>Cu,UniSpeechModel:()=>U0,UniSpeechPreTrainedModel:()=>ql,UniSpeechSatForAudioFrameClassification:()=>yu,UniSpeechSatForCTC:()=>Iu,UniSpeechSatForSequenceClassification:()=>el,UniSpeechSatModel:()=>wu,UniSpeechSatPreTrainedModel:()=>Bl,ViTForImageClassification:()=>Xi,ViTMAEModel:()=>SA,ViTMAEPreTrainedModel:()=>wn,ViTMSNForImageClassification:()=>pl,ViTMSNModel:()=>_o,ViTMSNPreTrainedModel:()=>GA,ViTModel:()=>BA,ViTPreTrainedModel:()=>yo,VisionEncoderDecoderModel:()=>ca,VitMatteForImageMatting:()=>A,VitMattePreTrainedModel:()=>n,VitPoseForPoseEstimation:()=>PA,VitPosePreTrainedModel:()=>En,VitsModel:()=>rc,VitsModelOutput:()=>ff,VitsPreTrainedModel:()=>Qu,Wav2Vec2BertForCTC:()=>_u,Wav2Vec2BertForSequenceClassification:()=>Y0,Wav2Vec2BertModel:()=>ku,Wav2Vec2BertPreTrainedModel:()=>o0,Wav2Vec2ForAudioFrameClassification:()=>W0,Wav2Vec2ForCTC:()=>fu,Wav2Vec2ForSequenceClassification:()=>gu,Wav2Vec2Model:()=>du,Wav2Vec2PreTrainedModel:()=>$A,WavLMForAudioFrameClassification:()=>Pu,WavLMForCTC:()=>Bu,WavLMForSequenceClassification:()=>Tu,WavLMForXVector:()=>Xl,WavLMModel:()=>Eu,WavLMPreTrainedModel:()=>tl,WeSpeakerResNetModel:()=>bu,WeSpeakerResNetPreTrainedModel:()=>mu,WhisperForConditionalGeneration:()=>cl,WhisperModel:()=>WA,WhisperPreTrainedModel:()=>VA,XLMForQuestionAnswering:()=>hi,XLMForSequenceClassification:()=>RA,XLMForTokenClassification:()=>Al,XLMModel:()=>Mo,XLMPreTrainedModel:()=>Rn,XLMRobertaForMaskedLM:()=>fo,XLMRobertaForQuestionAnswering:()=>Qr,XLMRobertaForSequenceClassification:()=>ni,XLMRobertaForTokenClassification:()=>dn,XLMRobertaModel:()=>ll,XLMRobertaPreTrainedModel:()=>uo,XLMWithLMHeadModel:()=>ol,XVectorOutput:()=>uf,YolosForObjectDetection:()=>ou,YolosModel:()=>iu,YolosObjectDetectionOutput:()=>R0,YolosPreTrainedModel:()=>L0});var u=a("./src/configs.js"),p=a("./src/backends/onnx.js"),h=a("./src/utils/dtypes.js"),C=a("./src/utils/generic.js"),y=a("./src/utils/core.js"),k=a("./src/utils/hub.js"),_=a("./src/utils/constants.js"),v=a("./src/generation/logits_process.js"),M=a("./src/generation/configuration_utils.js"),B=a("./src/utils/tensor.js"),S=a("./src/utils/image.js"),N=a("./src/utils/maths.js"),V=a("./src/generation/stopping_criteria.js"),Z=a("./src/generation/logits_sampler.js"),O=a("./src/env.js"),Q=a("./src/models/whisper/generation_whisper.js"),q=a("./src/models/whisper/common_whisper.js");const f=0,I=1,e=2,c=3,P=4,J=5,D=6,j=7,Ie=8,ge=9,ke=new Map,Ee=new Map,Ne=new Map;async function Xe(fe,Fe,et){return Object.fromEntries(await Promise.all(Object.keys(Fe).map(async Gt=>{const{buffer:er,session_options:$t,session_config:cr}=await async function(Gr,Fr,Er){var $i;const Vr=(($i=Er.config)==null?void 0:$i["transformers.js_config"])??{};let Zr=Er.device??Vr.device;Zr&&typeof Zr!="string"&&(Zr.hasOwnProperty(Fr)?Zr=Zr[Fr]:(console.warn(`device not specified for "${Fr}". Using the default device.`),Zr=null));const _s=Zr??(O.apis.IS_NODE_ENV?"cpu":"wasm"),ka=(0,p.deviceToExecutionProviders)(_s);let Ts=Er.dtype??Vr.dtype;if(typeof Ts!="string"&&(Ts&&Ts.hasOwnProperty(Fr)?Ts=Ts[Fr]:(Ts=h.DEFAULT_DEVICE_DTYPE_MAPPING[_s]??h.DATA_TYPES.fp32,console.warn(`dtype not specified for "${Fr}". Using the default dtype (${Ts}) for this device (${_s}).`))),Ts===h.DATA_TYPES.auto){let Da=Vr.dtype;typeof Da!="string"&&(Da=Da[Fr]),Ts=Da&&Da!==h.DATA_TYPES.auto&&h.DATA_TYPES.hasOwnProperty(Da)?Da:h.DEFAULT_DEVICE_DTYPE_MAPPING[_s]??h.DATA_TYPES.fp32}const js=Ts;if(!h.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(js))throw new Error(`Invalid dtype: ${js}. Should be one of: ${Object.keys(h.DATA_TYPES).join(", ")}`);if(js===h.DATA_TYPES.fp16&&_s==="webgpu"&&!await(0,h.isWebGpuFp16Supported)())throw new Error(`The device (${_s}) does not support fp16.`);const Us=Vr.kv_cache_dtype?typeof Vr.kv_cache_dtype=="string"?Vr.kv_cache_dtype:Vr.kv_cache_dtype[js]??"float32":void 0;if(Us&&!["float32","float16"].includes(Us))throw new Error(`Invalid kv_cache_dtype: ${Us}. Should be one of: float32, float16`);const _a={dtype:js,kv_cache_dtype:Us},nn=h.DEFAULT_DTYPE_SUFFIX_MAPPING[js],pn=`${Er.subfolder??""}/${Fr}${nn}.onnx`,Ha={...Er.session_options};Ha.executionProviders??(Ha.executionProviders=ka);const ri=Vr.free_dimension_overrides;ri?Ha.freeDimensionOverrides??(Ha.freeDimensionOverrides=ri):_s.startsWith("webnn")&&!Ha.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Un=(0,k.getModelFile)(Gr,pn,!0,Er),Hn=Er.use_external_data_format??Vr.use_external_data_format;let Gn=[];if(Hn&&(Hn===!0||typeof Hn=="object"&&Hn.hasOwnProperty(Fr)&&Hn[Fr]===!0)){if(O.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Da=`${Fr}${nn}.onnx_data`,Ui=`${Er.subfolder??""}/${Da}`;Gn.push(new Promise(async(Il,Dl)=>{const yl=await(0,k.getModelFile)(Gr,Ui,!0,Er);Il({path:Da,data:yl})}))}else Ha.externalData!==void 0&&(Gn=Ha.externalData.map(async Da=>{if(typeof Da.data=="string"){const Ui=await(0,k.getModelFile)(Gr,Da.data,!0,Er);return{...Da,data:Ui}}return Da}));if(Gn.length>0&&(Ha.externalData=await Promise.all(Gn)),_s==="webgpu"){const Da=(0,u.getKeyValueShapes)(Er.config,{prefix:"present"});if(Object.keys(Da).length>0&&!(0,p.isONNXProxy)()){const Ui={};for(const Il in Da)Ui[Il]="gpu-buffer";Ha.preferredOutputLocation=Ui}}return{buffer:await Un,session_options:Ha,session_config:_a}}(fe,Fe[Gt],et);return[Gt,await(0,p.createInferenceSession)(er,$t,cr)]})))}async function At(fe,Fe,et){return Object.fromEntries(await Promise.all(Object.keys(Fe).map(async Gt=>[Gt,await(0,k.getModelJSON)(fe,Fe[Gt],!1,et)])))}async function xe(fe,Fe){const et=function(Gt,er){const $t=Object.create(null),cr=[];for(const Er of Gt.inputNames){const Vr=er[Er];Vr instanceof B.Tensor?$t[Er]=(0,p.isONNXProxy)()?Vr.clone():Vr:cr.push(Er)}if(cr.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${cr.join(", ")}.`);const Gr=Object.keys(er).length,Fr=Gt.inputNames.length;if(Gr>Fr){let Er=Object.keys(er).filter(Vr=>!Gt.inputNames.includes(Vr));console.warn(`WARNING: Too many inputs were provided (${Gr} > ${Fr}). The following inputs will be ignored: "${Er.join(", ")}".`)}return $t}(fe,Fe);try{const Gt=Object.fromEntries(Object.entries(et).map(([$t,cr])=>[$t,cr.ort_tensor]));let er=await fe.run(Gt);return er=ye(er),er}catch(Gt){const er=Object.fromEntries(Object.entries(et).map(([$t,{type:cr,dims:Gr,data:Fr}])=>[$t,{type:cr,dims:Gr,data:Fr}]));throw console.error(`An error occurred during model execution: "${Gt}".`),console.error("Inputs given to model:",er),Gt}}function ye(fe){for(let Fe in fe)(0,p.isONNXTensor)(fe[Fe])?fe[Fe]=new B.Tensor(fe[Fe]):typeof fe[Fe]=="object"&&ye(fe[Fe]);return fe}function ue(fe){if(fe instanceof B.Tensor)return fe;if(fe.length===0)throw Error("items must be non-empty");if(Array.isArray(fe[0])){if(fe.some(Fe=>Fe.length!==fe[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new B.Tensor("int64",BigInt64Array.from(fe.flat().map(Fe=>BigInt(Fe))),[fe.length,fe[0].length])}return new B.Tensor("int64",BigInt64Array.from(fe.map(Fe=>BigInt(Fe))),[1,fe.length])}function ie(fe){return new B.Tensor("bool",[fe],[1])}async function be(fe,Fe){let{encoder_outputs:et,input_ids:Gt,decoder_input_ids:er,...$t}=Fe;if(!et){const cr=(0,y.pick)(Fe,fe.sessions.model.inputNames);et=(await Ye(fe,cr)).last_hidden_state}return $t.input_ids=er,$t.encoder_hidden_states=et,fe.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&($t.encoder_attention_mask=Fe.attention_mask),await Le(fe,$t,!0)}async function Ye(fe,Fe){const et=fe.sessions.model,Gt=(0,y.pick)(Fe,et.inputNames);if(et.inputNames.includes("inputs_embeds")&&!Gt.inputs_embeds){if(!Fe.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Gt.inputs_embeds=await fe.encode_text({input_ids:Fe.input_ids})}if(et.inputNames.includes("token_type_ids")&&!Gt.token_type_ids){if(!Gt.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");Gt.token_type_ids=(0,B.zeros_like)(Gt.input_ids)}if(et.inputNames.includes("pixel_mask")&&!Gt.pixel_mask){if(!Gt.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const er=Gt.pixel_values.dims;Gt.pixel_mask=(0,B.ones)([er[0],er[2],er[3]])}return await xe(et,Gt)}async function Le(fe,Fe,et=!1){const Gt=fe.sessions[et?"decoder_model_merged":"model"],{past_key_values:er,...$t}=Fe;if(Gt.inputNames.includes("use_cache_branch")&&($t.use_cache_branch=ie(!!er)),Gt.inputNames.includes("position_ids")&&$t.attention_mask&&!$t.position_ids){const Gr=fe.config.model_type==="paligemma"?1:0;$t.position_ids=function(Fr,Er=null,Vr=0){const{input_ids:Zr,inputs_embeds:_s,attention_mask:ka}=Fr,{data:Ts,dims:js}=pt(ka,Vr);let Us=new B.Tensor("int64",Ts,js);if(Er){const _a=-(Zr??_s).dims.at(1);Us=Us.slice(null,[_a,null])}return Us}($t,er,Gr)}fe.addPastKeyValues($t,er);const cr=(0,y.pick)($t,Gt.inputNames);return await xe(Gt,cr)}function lt({image_token_id:fe,inputs_embeds:Fe,image_features:et,input_ids:Gt,attention_mask:er}){const $t=Gt.tolist().map(Er=>Er.reduce((Vr,Zr,_s)=>(Zr==fe&&Vr.push(_s),Vr),[])),cr=$t.reduce((Er,Vr)=>Er+Vr.length,0),Gr=et.dims[0];if(cr!==Gr)throw new Error(`Image features and image tokens do not match: tokens: ${cr}, features ${Gr}`);let Fr=0;for(let Er=0;Er<$t.length;++Er){const Vr=$t[Er],Zr=Fe[Er];for(let _s=0;_s<Vr.length;++_s)Zr[Vr[_s]].data.set(et[Fr++].data)}return{inputs_embeds:Fe,attention_mask:er}}async function ft(fe,{input_ids:Fe=null,attention_mask:et=null,pixel_values:Gt=null,position_ids:er=null,inputs_embeds:$t=null,past_key_values:cr=null,generation_config:Gr=null,logits_processor:Fr=null,...Er}){if(!$t){if($t=await fe.encode_text({input_ids:Fe,...Er}),Gt&&Fe.dims[1]!==1){const Vr=await fe.encode_image({pixel_values:Gt,...Er});({inputs_embeds:$t,attention_mask:et}=fe._merge_input_ids_with_image_features({image_features:Vr,inputs_embeds:$t,input_ids:Fe,attention_mask:et}))}else if(cr&&Gt&&Fe.dims[1]===1){const Vr=Fe.dims[1],Zr=Object.values(cr)[0].dims.at(-2);et=(0,B.cat)([(0,B.ones)([Fe.dims[0],Zr]),et.slice(null,[et.dims[1]-Vr,et.dims[1]])],1)}}if(!er&&fe.config.model_type==="qwen2_vl"){const{image_grid_thw:Vr,video_grid_thw:Zr}=Er;[er]=fe.get_rope_index(Fe,Vr,Zr,et)}return await Le(fe,{inputs_embeds:$t,past_key_values:cr,attention_mask:et,position_ids:er,generation_config:Gr,logits_processor:Fr},!0)}function pt(fe,Fe=0){const[et,Gt]=fe.dims,er=fe.data,$t=new BigInt64Array(er.length);for(let cr=0;cr<et;++cr){const Gr=cr*Gt;let Fr=BigInt(Fe);for(let Er=0;Er<Gt;++Er){const Vr=Gr+Er;er[Vr]===0n?$t[Vr]=BigInt(1):($t[Vr]=Fr,Fr+=er[Vr])}}return{data:$t,dims:fe.dims}}function ct(fe,Fe,et,Gt){if(et.past_key_values){const er=Object.values(et.past_key_values)[0].dims.at(-2),{input_ids:$t,attention_mask:cr}=et;if(!(cr&&cr.dims[1]>$t.dims[1])){if(er<$t.dims[1])et.input_ids=$t.slice(null,[er,null]);else if(fe.config.image_token_index!=null&&$t.data.some(Gr=>Gr==fe.config.image_token_index)){const Gr=fe.config.num_image_tokens;if(!Gr)throw new Error("`num_image_tokens` is missing in the model configuration.");const Fr=$t.dims[1]-(er-Gr);et.input_ids=$t.slice(null,[-Fr,null]),et.attention_mask=(0,B.ones)([1,er+Fr])}}}return et}function He(fe,Fe,et,Gt){return et.past_key_values&&(Fe=Fe.map(er=>[er.at(-1)])),{...et,decoder_input_ids:ue(Fe)}}function Re(fe,...Fe){return fe.config.is_encoder_decoder?He(fe,...Fe):ct(fe,...Fe)}function Se(fe,Fe,et,Gt){const er=!!et.past_key_values;return Gt.guidance_scale!==null&&Gt.guidance_scale>1&&(er?et.input_ids=(0,B.cat)([et.input_ids,et.input_ids],0):(et.input_ids=(0,B.cat)([et.input_ids,(0,B.full_like)(et.input_ids,BigInt(Gt.pad_token_id))],0),et.attention_mask=(0,B.cat)([et.attention_mask,(0,B.full_like)(et.attention_mask,0n)],0))),!er&&et.pixel_values||(et.pixel_values=(0,B.full)([0,0,3,384,384],1)),er&&(et.images_seq_mask=new B.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),et.images_emb_mask=new B.Tensor("bool",new Array(0).fill(!1),[1,1,0])),et}class Qe extends C.Callable{constructor(et,Gt,er){super();Te(this,"main_input_name","input_ids");Te(this,"forward_params",["input_ids","attention_mask"]);this.config=et,this.sessions=Gt,this.configs=er;const $t=Ne.get(this.constructor),cr=ke.get($t);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,cr){case P:this.can_generate=!0,this._forward=Le,this._prepare_inputs_for_generation=ct;break;case e:case c:case j:this.can_generate=!0,this._forward=be,this._prepare_inputs_for_generation=He;break;case I:this._forward=be;break;case D:this.can_generate=!0,this._forward=ft,this._prepare_inputs_for_generation=Re;break;case ge:this.can_generate=!0,this._prepare_inputs_for_generation=Re;break;case Ie:this.can_generate=!0,this._prepare_inputs_for_generation=Se;break;default:this._forward=Ye}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var Gt;const et=[];for(const er of Object.values(this.sessions))(Gt=er==null?void 0:er.handler)!=null&&Gt.dispose&&et.push(er.handler.dispose());return await Promise.all(et)}static async from_pretrained(et,{progress_callback:Gt=null,config:er=null,cache_dir:$t=null,local_files_only:cr=!1,revision:Gr="main",model_file_name:Fr=null,subfolder:Er="onnx",device:Vr=null,dtype:Zr=null,use_external_data_format:_s=null,session_options:ka={}}={}){let Ts={progress_callback:Gt,config:er,cache_dir:$t,local_files_only:cr,revision:Gr,model_file_name:Fr,subfolder:Er,device:Vr,dtype:Zr,use_external_data_format:_s,session_options:ka};const js=Ne.get(this),Us=ke.get(js);let _a;if(er=Ts.config=await u.AutoConfig.from_pretrained(et,Ts),Us===P)_a=await Promise.all([Xe(et,{model:Ts.model_file_name??"model"},Ts),At(et,{generation_config:"generation_config.json"},Ts)]);else if(Us===e||Us===c)_a=await Promise.all([Xe(et,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Ts),At(et,{generation_config:"generation_config.json"},Ts)]);else if(Us===J)_a=await Promise.all([Xe(et,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},Ts)]);else if(Us===I)_a=await Promise.all([Xe(et,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Ts)]);else if(Us===D){const nn={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};er.is_encoder_decoder&&(nn.model="encoder_model"),_a=await Promise.all([Xe(et,nn,Ts),At(et,{generation_config:"generation_config.json"},Ts)])}else if(Us===j)_a=await Promise.all([Xe(et,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},Ts),At(et,{generation_config:"generation_config.json"},Ts)]);else if(Us===Ie)_a=await Promise.all([Xe(et,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},Ts),At(et,{generation_config:"generation_config.json"},Ts)]);else if(Us===ge)_a=await Promise.all([Xe(et,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},Ts),At(et,{generation_config:"generation_config.json"},Ts)]);else{if(Us!==f){const nn=js??(er==null?void 0:er.model_type);nn!=="custom"&&console.warn(`Model type for '${nn}' not found, assuming encoder-only architecture. Please report this at ${_.GITHUB_ISSUE_URL}.`)}_a=await Promise.all([Xe(et,{model:Ts.model_file_name??"model"},Ts)])}return new this(er,..._a)}async _call(et){return await this.forward(et)}async forward(et){return await this._forward(this,et)}get generation_config(){var et;return((et=this.configs)==null?void 0:et.generation_config)??null}_get_logits_warper(et){const Gt=new v.LogitsProcessorList;return et.temperature!==null&&et.temperature!==1&&Gt.push(new v.TemperatureLogitsWarper(et.temperature)),et.top_k!==null&&et.top_k!==0&&Gt.push(new v.TopKLogitsWarper(et.top_k)),et.top_p!==null&&et.top_p<1&&Gt.push(new v.TopPLogitsWarper(et.top_p)),Gt}_get_logits_processor(et,Gt,er=null){const $t=new v.LogitsProcessorList;if(et.repetition_penalty!==null&&et.repetition_penalty!==1&&$t.push(new v.RepetitionPenaltyLogitsProcessor(et.repetition_penalty)),et.no_repeat_ngram_size!==null&&et.no_repeat_ngram_size>0&&$t.push(new v.NoRepeatNGramLogitsProcessor(et.no_repeat_ngram_size)),et.bad_words_ids!==null&&$t.push(new v.NoBadWordsLogitsProcessor(et.bad_words_ids,et.eos_token_id)),et.min_length!==null&&et.eos_token_id!==null&&et.min_length>0&&$t.push(new v.MinLengthLogitsProcessor(et.min_length,et.eos_token_id)),et.min_new_tokens!==null&&et.eos_token_id!==null&&et.min_new_tokens>0&&$t.push(new v.MinNewTokensLengthLogitsProcessor(Gt,et.min_new_tokens,et.eos_token_id)),et.forced_bos_token_id!==null&&$t.push(new v.ForcedBOSTokenLogitsProcessor(et.forced_bos_token_id)),et.forced_eos_token_id!==null&&$t.push(new v.ForcedEOSTokenLogitsProcessor(et.max_length,et.forced_eos_token_id)),et.begin_suppress_tokens!==null){const cr=Gt>1||et.forced_bos_token_id===null?Gt:Gt+1;$t.push(new v.SuppressTokensAtBeginLogitsProcessor(et.begin_suppress_tokens,cr))}return et.guidance_scale!==null&&et.guidance_scale>1&&$t.push(new v.ClassifierFreeGuidanceLogitsProcessor(et.guidance_scale)),er!==null&&$t.extend(er),$t}_prepare_generation_config(et,Gt,er=M.GenerationConfig){const $t={...this.config};for(const Gr of["decoder","generator","text_config"])Gr in $t&&Object.assign($t,$t[Gr]);const cr=new er($t);return Object.assign(cr,this.generation_config??{}),et&&Object.assign(cr,et),Gt&&Object.assign(cr,(0,y.pick)(Gt,Object.getOwnPropertyNames(cr))),cr}_get_stopping_criteria(et,Gt=null){const er=new V.StoppingCriteriaList;return et.max_length!==null&&er.push(new V.MaxLengthCriteria(et.max_length,this.config.max_position_embeddings??null)),et.eos_token_id!==null&&er.push(new V.EosTokenCriteria(et.eos_token_id)),Gt&&er.extend(Gt),er}_validate_model_class(){if(!this.can_generate){const et=[yc,kc,Ic,Jl],Gt=Ne.get(this.constructor),er=new Set,$t=this.config.model_type;for(const Gr of et){const Fr=Gr.get($t);Fr&&er.add(Fr[0])}let cr=`The current model class (${Gt}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw er.size>0&&(cr+=` Please use the following class instead: ${[...er].join(", ")}`),Error(cr)}}prepare_inputs_for_generation(...et){return this._prepare_inputs_for_generation(this,...et)}_update_model_kwargs_for_generation({generated_input_ids:et,outputs:Gt,model_inputs:er,is_encoder_decoder:$t}){return er.past_key_values=this.getPastKeyValues(Gt,er.past_key_values),er.input_ids=new B.Tensor("int64",et.flat(),[et.length,1]),$t||(er.attention_mask=(0,B.cat)([er.attention_mask,(0,B.ones)([er.attention_mask.dims[0],1])],1)),er.position_ids=null,er}_prepare_model_inputs({inputs:et,bos_token_id:Gt,model_kwargs:er}){const $t=(0,y.pick)(er,this.forward_params),cr=this.main_input_name;if(cr in $t){if(et)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else $t[cr]=et;return{inputs_tensor:$t[cr],model_inputs:$t,model_input_name:cr}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:et,model_inputs:Gt,model_input_name:er,generation_config:$t}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!Gt.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Gr,pixel_values:Fr,attention_mask:Er,...Vr}=Gt,Zr=await this._prepare_inputs_embeds(Gt);Gt={...Vr,...(0,y.pick)(Zr,["inputs_embeds","attention_mask"])}}let{last_hidden_state:cr}=await Ye(this,Gt);if($t.guidance_scale!==null&&$t.guidance_scale>1)cr=(0,B.cat)([cr,(0,B.full_like)(cr,0)],0),"attention_mask"in Gt&&(Gt.attention_mask=(0,B.cat)([Gt.attention_mask,(0,B.zeros_like)(Gt.attention_mask)],0));else if(Gt.decoder_input_ids){const Gr=ue(Gt.decoder_input_ids).dims[0];if(Gr!==cr.dims[0]){if(cr.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${cr.dims[0]}) than the decoder inputs (${Gr}).`);cr=(0,B.cat)(Array.from({length:Gr},()=>cr),0)}}return Gt.encoder_outputs=cr,Gt}_prepare_decoder_input_ids_for_generation({batch_size:et,model_input_name:Gt,model_kwargs:er,decoder_start_token_id:$t,bos_token_id:cr,generation_config:Gr}){let{decoder_input_ids:Fr,...Er}=er;if(!(Fr instanceof B.Tensor)){if(Fr)Array.isArray(Fr[0])||(Fr=Array.from({length:et},()=>Fr));else if($t??($t=cr),this.config.model_type==="musicgen")Fr=Array.from({length:et*this.config.decoder.num_codebooks},()=>[$t]);else if(Array.isArray($t)){if($t.length!==et)throw new Error(`\`decoder_start_token_id\` expcted to have length ${et} but got ${$t.length}`);Fr=$t}else Fr=Array.from({length:et},()=>[$t]);Fr=ue(Fr)}return er.decoder_attention_mask=(0,B.ones_like)(Fr),{input_ids:Fr,model_inputs:Er}}async generate({inputs:et=null,generation_config:Gt=null,logits_processor:er=null,stopping_criteria:$t=null,streamer:cr=null,...Gr}){this._validate_model_class(),Gt=this._prepare_generation_config(Gt,Gr);let{inputs_tensor:Fr,model_inputs:Er,model_input_name:Vr}=this._prepare_model_inputs({inputs:et,model_kwargs:Gr});const Zr=this.config.is_encoder_decoder;let _s;Zr&&("encoder_outputs"in Er||(Er=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Fr,model_inputs:Er,model_input_name:Vr,generation_config:Gt}))),Zr?{input_ids:_s,model_inputs:Er}=this._prepare_decoder_input_ids_for_generation({batch_size:Er[Vr].dims.at(0),model_input_name:Vr,model_kwargs:Er,decoder_start_token_id:Gt.decoder_start_token_id,bos_token_id:Gt.bos_token_id,generation_config:Gt}):_s=Er[Vr];let ka=_s.dims.at(-1);Gt.max_new_tokens!==null&&(Gt.max_length=ka+Gt.max_new_tokens);const Ts=this._get_logits_processor(Gt,ka,er),js=this._get_stopping_criteria(Gt,$t),Us=Er[Vr].dims.at(0),_a=Z.LogitsSampler.getSampler(Gt),nn=new Array(Us).fill(0),pn=_s.tolist();let Ha;cr&&cr.put(pn);let ri={};for(;;){if(Er=this.prepare_inputs_for_generation(pn,Er,Gt),Ha=await this.forward(Er),Gt.output_attentions&&Gt.return_dict_in_generate){const Da=this.getAttentions(Ha);for(const Ui in Da)Ui in ri||(ri[Ui]=[]),ri[Ui].push(Da[Ui])}const Gn=Ts(pn,Ha.logits.slice(null,-1,null)),$i=[];for(let Da=0;Da<Gn.dims.at(0);++Da){const Ui=Gn[Da],Il=await _a(Ui);for(const[Dl,yl]of Il){const t0=BigInt(Dl);nn[Da]+=yl,pn[Da].push(t0),$i.push([t0]);break}}if(cr&&cr.put($i),js(pn).every(Da=>Da))break;Er=this._update_model_kwargs_for_generation({generated_input_ids:$i,outputs:Ha,model_inputs:Er,is_encoder_decoder:Zr})}cr&&cr.end();const Un=this.getPastKeyValues(Ha,Er.past_key_values,!0),Hn=new B.Tensor("int64",pn.flat(),[pn.length,pn[0].length]);if(Gt.return_dict_in_generate)return{sequences:Hn,past_key_values:Un,...ri};for(const Gn of Object.values(Ha))Gn.location==="gpu-buffer"&&Gn.dispose();return Hn}getPastKeyValues(et,Gt,er=!1){const $t=Object.create(null);for(const cr in et)if(cr.startsWith("present")){const Gr=cr.replace("present","past_key_values"),Fr=cr.includes("encoder");if($t[Gr]=Fr&&Gt?Gt[Gr]:et[cr],Gt&&(!Fr||er)){const Er=Gt[Gr];Er.location==="gpu-buffer"&&Er.dispose()}}return $t}getAttentions(et){const Gt={};for(const er of["cross_attentions","encoder_attentions","decoder_attentions"])for(const $t in et)$t.startsWith(er)&&(er in Gt||(Gt[er]=[]),Gt[er].push(et[$t]));return Gt}addPastKeyValues(et,Gt){var er,$t,cr;if(Gt)Object.assign(et,Gt);else{const Gr=this.sessions.decoder_model_merged??this.sessions.model,Fr=((er=Gr==null?void 0:Gr.config)==null?void 0:er.kv_cache_dtype)??"float32",Er=Fr==="float16"?new Uint16Array:[],Vr=((cr=($t=et[this.main_input_name]??et.attention_mask)==null?void 0:$t.dims)==null?void 0:cr[0])??1,Zr=(0,u.getKeyValueShapes)(this.config,{batch_size:Vr});for(const _s in Zr)et[_s]=new B.Tensor(Fr,Er,Zr[_s])}}async encode_image({pixel_values:et}){const Gt=(await xe(this.sessions.vision_encoder,{pixel_values:et})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${Gt.dims[1]}).`),this.config.num_image_tokens=Gt.dims[1]),Gt}async encode_text({input_ids:et}){return(await xe(this.sessions.embed_tokens,{input_ids:et})).inputs_embeds}}class ht{}class wt extends ht{constructor({last_hidden_state:Fe,hidden_states:et=null,attentions:Gt=null}){super(),this.last_hidden_state=Fe,this.hidden_states=et,this.attentions=Gt}}class Bt extends Qe{}class Mt extends Bt{}class oe extends Bt{async _call(Fe){return new Ni(await super._call(Fe))}}class zt extends Bt{async _call(Fe){return new Rs(await super._call(Fe))}}class ve extends Bt{async _call(Fe){return new ki(await super._call(Fe))}}class H extends Bt{async _call(Fe){return new Wi(await super._call(Fe))}}class ce extends Qe{}class ne extends ce{}class ze extends ce{async _call(Fe){return new Ni(await super._call(Fe))}}class $e extends ce{async _call(Fe){return new Rs(await super._call(Fe))}}class gt extends ce{async _call(Fe){return new ki(await super._call(Fe))}}class It extends Qe{}class Nt extends It{}class _t extends Qe{}class Vt extends _t{}class Xt extends _t{async _call(Fe){return new Ni(await super._call(Fe))}}class Jt extends _t{async _call(Fe){return new Rs(await super._call(Fe))}}class wr extends _t{async _call(Fe){return new ki(await super._call(Fe))}}class Rr extends _t{async _call(Fe){return new Wi(await super._call(Fe))}}class $s extends Qe{}class os extends $s{}class Ks extends $s{async _call(Fe){return new Ni(await super._call(Fe))}}class ts extends $s{async _call(Fe){return new Rs(await super._call(Fe))}}class zn extends $s{async _call(Fe){return new ki(await super._call(Fe))}}class Va extends $s{async _call(Fe){return new Wi(await super._call(Fe))}}class Wa extends Qe{}class Pr extends Wa{}class Sr extends Wa{async _call(Fe){return new Ni(await super._call(Fe))}}class Kt extends Wa{async _call(Fe){return new Rs(await super._call(Fe))}}class Bs extends Wa{async _call(Fe){return new ki(await super._call(Fe))}}class $a extends Wa{async _call(Fe){return new Wi(await super._call(Fe))}}class en extends Qe{}class On extends en{}class Pn extends en{async _call(Fe){return new Ni(await super._call(Fe))}}class Dn extends en{async _call(Fe){return new Rs(await super._call(Fe))}}class qn extends en{async _call(Fe){return new ki(await super._call(Fe))}}class sa extends en{async _call(Fe){return new Wi(await super._call(Fe))}}class Zt extends Qe{}class Br extends Zt{}class zr extends Zt{async _call(Fe){return new Ni(await super._call(Fe))}}class qs extends Zt{async _call(Fe){return new Rs(await super._call(Fe))}}class aa extends Zt{async _call(Fe){return new ki(await super._call(Fe))}}class ks extends Zt{async _call(Fe){return new Wi(await super._call(Fe))}}class vn extends Qe{}class Qn extends vn{}class Sn extends vn{async _call(Fe){return new Ni(await super._call(Fe))}}class ci extends vn{async _call(Fe){return new Rs(await super._call(Fe))}}class ui extends vn{async _call(Fe){return new ki(await super._call(Fe))}}class di extends vn{async _call(Fe){return new Wi(await super._call(Fe))}}class Fa extends Qe{}class ai extends Fa{}class fi extends Fa{async _call(Fe){return new Rs(await super._call(Fe))}}class Ri extends Fa{async _call(Fe){return new ki(await super._call(Fe))}}class Xn extends Fa{async _call(Fe){return new Wi(await super._call(Fe))}}class Zn extends Fa{async _call(Fe){return new Ni(await super._call(Fe))}}class ba extends Qe{}class Gi extends ba{}class Fi extends ba{async _call(Fe){return new Ni(await super._call(Fe))}}class Jn extends ba{async _call(Fe){return new Rs(await super._call(Fe))}}class gi extends ba{async _call(Fe){return new ki(await super._call(Fe))}}class tn extends Qe{}class Ei extends tn{}class pi extends tn{async _call(Fe){return new Ni(await super._call(Fe))}}class Jr extends tn{async _call(Fe){return new Rs(await super._call(Fe))}}class Cs extends tn{async _call(Fe){return new Wi(await super._call(Fe))}}class bn extends Qe{}class Nn extends bn{}class zi extends bn{async _call(Fe){return new Ni(await super._call(Fe))}}class Bi extends bn{async _call(Fe){return new Rs(await super._call(Fe))}}class rn extends bn{async _call(Fe){return new ki(await super._call(Fe))}}class Ln extends bn{async _call(Fe){return new Wi(await super._call(Fe))}}class Qt extends Qe{}class Be extends Qt{}class ot extends Qt{async _call(Fe){return new Ni(await super._call(Fe))}}class bt extends Qt{async _call(Fe){return new Rs(await super._call(Fe))}}class Tt extends Qt{async _call(Fe){return new Wi(await super._call(Fe))}}class Pt extends Qe{}class st extends Pt{}class pe extends Pt{async _call(Fe){return new Rs(await super._call(Fe))}}class he extends Pt{async _call(Fe){return new Wi(await super._call(Fe))}}class qe extends Pt{async _call(Fe){return new Ni(await super._call(Fe))}}class it extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class kt extends it{}class Ht extends it{}class ir extends Qe{}class fr extends ir{}class nr extends ir{}class Yt extends Qe{}class Ar extends Yt{}class Wr extends Yt{}class xs extends Qe{}class Ys extends xs{}class as extends xs{}class kr extends xs{async _call(Fe){return new Rs(await super._call(Fe))}}class Ns extends Qe{}class qt extends Ns{}class Tr extends Ns{}class ha extends Ns{async _call(Fe){return new Rs(await super._call(Fe))}}class xa extends Ns{}class Gs extends Qe{}class Fs extends Gs{}class Ls extends Gs{}class Ms extends Qe{}class fa extends Ms{}class Ba extends Ms{}class Ma extends Qe{}class Ca extends Ma{}class na extends Ma{async _call(Fe){return new Ni(await super._call(Fe))}}class za extends Ma{async _call(Fe){return new Rs(await super._call(Fe))}}class Hr extends Ma{async _call(Fe){return new ki(await super._call(Fe))}}class la extends Ma{async _call(Fe){return new Wi(await super._call(Fe))}}class Rn extends Qe{}class Mo extends Rn{}class ol extends Rn{async _call(Fe){return new Ni(await super._call(Fe))}}class RA extends Rn{async _call(Fe){return new Rs(await super._call(Fe))}}class Al extends Rn{async _call(Fe){return new ki(await super._call(Fe))}}class hi extends Rn{async _call(Fe){return new Wi(await super._call(Fe))}}class uo extends Qe{}class ll extends uo{}class fo extends uo{async _call(Fe){return new Ni(await super._call(Fe))}}class ni extends uo{async _call(Fe){return new Rs(await super._call(Fe))}}class dn extends uo{async _call(Fe){return new ki(await super._call(Fe))}}class Qr extends uo{async _call(Fe){return new Wi(await super._call(Fe))}}class $n extends Qe{}class jA extends $n{}class Eo extends $n{}class VA extends Qe{constructor(){super(...arguments);Te(this,"requires_attention_mask",!1);Te(this,"main_input_name","input_features");Te(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class WA extends VA{}class cl extends VA{_prepare_generation_config(Fe,et){return super._prepare_generation_config(Fe,et,Q.WhisperGenerationConfig)}_retrieve_init_tokens(Fe){const et=[Fe.decoder_start_token_id];let Gt=Fe.language;const er=Fe.task;if(Fe.is_multilingual){Gt||(console.warn("No language specified - defaulting to English (en)."),Gt="en");const $t=`<|${(0,q.whisper_language_to_code)(Gt)}|>`;et.push(Fe.lang_to_id[$t]),et.push(Fe.task_to_id[er??"transcribe"])}else if(Gt||er)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!Fe.return_timestamps&&Fe.no_timestamps_token_id&&et.at(-1)!==Fe.no_timestamps_token_id?et.push(Fe.no_timestamps_token_id):Fe.return_timestamps&&et.at(-1)===Fe.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),et.pop()),et.filter($t=>$t!=null)}async generate({inputs:Fe=null,generation_config:et=null,logits_processor:Gt=null,stopping_criteria:er=null,...$t}){et=this._prepare_generation_config(et,$t);const cr=$t.decoder_input_ids??this._retrieve_init_tokens(et);if(et.return_timestamps&&(Gt??(Gt=new v.LogitsProcessorList),Gt.push(new v.WhisperTimeStampLogitsProcessor(et,cr))),et.begin_suppress_tokens&&(Gt??(Gt=new v.LogitsProcessorList),Gt.push(new v.SuppressTokensAtBeginLogitsProcessor(et.begin_suppress_tokens,cr.length))),et.return_token_timestamps){if(!et.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");et.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),et.output_attentions=!0,et.return_dict_in_generate=!0}const Gr=await super.generate({inputs:Fe,generation_config:et,logits_processor:Gt,decoder_input_ids:cr,...$t});return et.return_token_timestamps&&(Gr.token_timestamps=this._extract_token_timestamps(Gr,et.alignment_heads,et.num_frames)),Gr}_extract_token_timestamps(Fe,et,Gt=null,er=.02){if(!Fe.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Gt==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let $t=this.config.median_filter_width;$t===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),$t=7);const cr=Fe.cross_attentions,Gr=Array.from({length:this.config.decoder_layers},(js,Us)=>(0,B.cat)(cr.map(_a=>_a[Us]),2)),Fr=(0,B.stack)(et.map(([js,Us])=>{if(js>=Gr.length)throw new Error(`Layer index ${js} is out of bounds for cross attentions (length ${Gr.length}).`);return Gt?Gr[js].slice(null,Us,null,[0,Gt]):Gr[js].slice(null,Us)})).transpose(1,0,2,3),[Er,Vr]=(0,B.std_mean)(Fr,-2,0,!0),Zr=Fr.clone();for(let js=0;js<Zr.dims[0];++js){const Us=Zr[js];for(let _a=0;_a<Us.dims[0];++_a){const nn=Us[_a],pn=Er[js][_a][0].data,Ha=Vr[js][_a][0].data;for(let ri=0;ri<nn.dims[0];++ri){let Un=nn[ri].data;for(let Hn=0;Hn<Un.length;++Hn)Un[Hn]=(Un[Hn]-Ha[Hn])/pn[Hn];Un.set((0,N.medianFilter)(Un,$t))}}}const _s=[(0,B.mean)(Zr,1)],ka=Fe.sequences.dims,Ts=new B.Tensor("float32",new Float32Array(ka[0]*ka[1]),ka);for(let js=0;js<ka[0];++js){const Us=_s[js].neg().squeeze_(0),[_a,nn]=(0,N.dynamic_time_warping)(Us.tolist()),pn=Array.from({length:_a.length-1},(Un,Hn)=>_a[Hn+1]-_a[Hn]),Ha=(0,y.mergeArrays)([1],pn).map(Un=>!!Un),ri=[];for(let Un=0;Un<Ha.length;++Un)Ha[Un]&&ri.push(nn[Un]*er);Ts[js].data.set(ri,1)}return Ts}}class oA extends Qe{constructor(){super(...arguments);Te(this,"requires_attention_mask",!1);Te(this,"main_input_name","input_values");Te(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Kl extends oA{}class ii extends oA{}class ca extends Qe{constructor(){super(...arguments);Te(this,"main_input_name","pixel_values");Te(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Ro extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class go extends Ro{_merge_input_ids_with_image_features({inputs_embeds:Fe,image_features:et,input_ids:Gt,attention_mask:er}){const $t=this.config.image_token_index,cr=Gt.tolist().map(Zr=>Zr.findIndex(_s=>_s==$t)),Gr=cr.every(Zr=>Zr===-1),Fr=cr.every(Zr=>Zr!==-1);if(!Gr&&!Fr)throw new Error("Every input should contain either 0 or 1 image token.");if(Gr)return{inputs_embeds:Fe,attention_mask:er};const Er=[],Vr=[];for(let Zr=0;Zr<cr.length;++Zr){const _s=cr[Zr],ka=Fe[Zr],Ts=et[Zr],js=er[Zr];Er.push((0,B.cat)([ka.slice([0,_s]),Ts,ka.slice([_s+1,ka.dims[0]])],0)),Vr.push((0,B.cat)([js.slice([0,_s]),(0,B.ones)([Ts.dims[0]]),js.slice([_s+1,js.dims[0]])],0))}return{inputs_embeds:(0,B.stack)(Er,0),attention_mask:(0,B.stack)(Vr,0)}}}class jn extends go{}class po extends go{}class ji extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Te(this,"main_input_name","inputs_embeds")}}class AA extends ji{_merge_input_ids_with_image_features({inputs_embeds:Fe,image_features:et,input_ids:Gt,attention_mask:er}){return{inputs_embeds:(0,B.cat)([et,Fe],1),attention_mask:(0,B.cat)([(0,B.ones)(et.dims.slice(0,2)),er],1)}}async _prepare_inputs_embeds({input_ids:Fe,pixel_values:et,inputs_embeds:Gt,attention_mask:er}){if(!Fe&&!et)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let $t,cr;return Fe&&($t=await this.encode_text({input_ids:Fe})),et&&(cr=await this.encode_image({pixel_values:et})),$t&&cr?{inputs_embeds:Gt,attention_mask:er}=this._merge_input_ids_with_image_features({inputs_embeds:$t,image_features:cr,input_ids:Fe,attention_mask:er}):Gt=$t||cr,{inputs_embeds:Gt,attention_mask:er}}async forward({input_ids:Fe,pixel_values:et,attention_mask:Gt,decoder_input_ids:er,decoder_attention_mask:$t,encoder_outputs:cr,past_key_values:Gr,inputs_embeds:Fr,decoder_inputs_embeds:Er}){if(Fr||({inputs_embeds:Fr,attention_mask:Gt}=await this._prepare_inputs_embeds({input_ids:Fe,pixel_values:et,inputs_embeds:Fr,attention_mask:Gt})),!cr){let{last_hidden_state:Zr}=await Ye(this,{inputs_embeds:Fr,attention_mask:Gt});cr=Zr}if(!Er){if(!er)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Er=await this.encode_text({input_ids:er})}return await Le(this,{inputs_embeds:Er,attention_mask:$t,encoder_attention_mask:Gt,encoder_hidden_states:cr,past_key_values:Gr},!0)}}class lA extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ao extends lA{_merge_input_ids_with_image_features(Fe){const et=Fe.image_features.dims.at(-1),Gt=Fe.image_features.view(-1,et);return lt({image_token_id:this.config.image_token_index,...Fe,image_features:Gt})}}class UA extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class jo extends UA{async encode_image({pixel_values:Fe,pixel_attention_mask:et}){return(await xe(this.sessions.vision_encoder,{pixel_values:Fe,pixel_attention_mask:et})).image_features}_merge_input_ids_with_image_features(Fe){const et=Fe.image_features.dims.at(-1),Gt=Fe.image_features.view(-1,et);return lt({image_token_id:this.config.image_token_id,...Fe,image_features:Gt})}}class Vo extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class mr extends Vo{async forward({input_ids:Fe=null,attention_mask:et=null,pixel_values:Gt=null,image_sizes:er=null,position_ids:$t=null,inputs_embeds:cr=null,past_key_values:Gr=null,generation_config:Fr=null,logits_processor:Er=null,...Vr}){if(!cr){let Zr;if(Gt&&Fe.dims[1]!==1){if(!er)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Zr}=await xe(this.sessions.vision_encoder,{pixel_values:Gt,image_sizes:er}))}else{const _s=this.config.normalized_config.hidden_size;Zr=new B.Tensor("float32",[],[0,_s])}({inputs_embeds:cr}=await xe(this.sessions.prepare_inputs_embeds,{input_ids:Fe,image_features:Zr}))}return await Le(this,{inputs_embeds:cr,past_key_values:Gr,attention_mask:et,position_ids:$t,generation_config:Fr,logits_processor:Er},!1)}}class Ti extends Qe{}class vr extends Ti{}class cA extends Ti{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"text_model"})}}class HA extends Ti{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"text_model"})}}class Vn extends Ti{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"vision_model"})}}class mi extends Ti{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"vision_model"})}}class no extends Qe{}class ho extends no{}class YA extends no{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"text_model"})}}class Xa extends Ti{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"vision_model"})}}class ul extends Qe{}class dl extends ul{}class io extends Qe{}class oo extends io{async forward(Fe){const et=!Fe.input_ids,Gt=!Fe.pixel_values;if(et&&Gt)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(et&&(Fe.input_ids=(0,B.ones)([Fe.pixel_values.dims[0],1])),Gt){const{image_size:Er}=this.config.vision_config;Fe.pixel_values=(0,B.full)([0,3,Er,Er],0)}const{text_embeddings:er,image_embeddings:$t,l2norm_text_embeddings:cr,l2norm_image_embeddings:Gr}=await super.forward(Fe),Fr={};return et||(Fr.text_embeddings=er,Fr.l2norm_text_embeddings=cr),Gt||(Fr.image_embeddings=$t,Fr.l2norm_image_embeddings=Gr),Fr}}class fl extends io{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"text_model"})}}class uA extends io{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"vision_model"})}}class Bo extends Qe{}class _r extends Bo{}class ei extends Bo{}class dA extends Qe{}class To extends dA{}class Yi extends dA{}class Wo extends Qe{}class Uo extends Wo{}class KA extends Wo{}class Ho extends Qe{}class fA extends Ho{}class qA extends Ho{}class Za extends Qe{}class gA extends Za{}class gl extends Za{}class ds extends Qe{}class zs extends ds{}class pA extends ds{}class bi extends Qe{}class gr extends bi{}class xn extends bi{}class Vi extends Qe{}class fn extends Vi{}class Pi extends Vi{}class Ci extends Qe{}class mo extends Ci{}class hA extends Ci{}class Yo extends Qe{}class Pa extends Yo{}class Po extends Yo{}class Ko extends Qe{}class gn extends Ko{}class bo extends Ko{}class fs extends Qe{}class Ao extends fs{}class mA extends fs{}class Is extends Qe{}class Co extends Is{}class ls extends Is{}class qo extends Qe{}class bA extends qo{}class CA extends qo{}class wA extends Qe{}class Oi extends wA{}class Xo extends wA{}class Ua extends Qe{}class Zo extends Ua{}class Jo extends Ua{}class Do extends Qe{}class Wn extends Do{}class So extends Do{}class IA extends Qe{}class wi extends IA{}class yA extends IA{}class $o extends Qe{}class eA extends $o{}class wo extends $o{}class kA extends Qe{}class _A extends kA{}class XA extends kA{}class Cn extends Qe{}class Io extends Cn{}class Mn extends Cn{}class vA extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Go extends vA{get_rope_index(Fe,et,Gt,er){const{vision_config:$t,image_token_id:cr,video_token_id:Gr,vision_start_token_id:Fr}=this.config,Er=$t.spatial_merge_size??2,Vr=[];if(et||Gt){let Zr=Fe.tolist();er||(er=(0,B.ones_like)(Fe));const _s=er.tolist(),ka=Array.from({length:3},nn=>Array.from({length:Fe.dims[0]},pn=>Array.from({length:Fe.dims[1]},Ha=>1))),Ts=et?et.tolist():[],js=Gt?Gt.tolist():[];let Us=0,_a=0;for(let nn=0;nn<Zr.length;++nn){const pn=Zr[nn].filter((on,ss)=>_s[nn][ss]==1),Ha=pn.reduce((on,ss,eo)=>(ss==Fr&&on.push(eo),on),[]),ri=Ha.map(on=>pn[on+1]),Un=ri.filter(on=>on==cr).length,Hn=ri.filter(on=>on==Gr).length;let Gn=[],$i=0,Da=Un,Ui=Hn;for(let on=0;on<ri.length;++on){const ss=pn.findIndex((Dr,Kr)=>Kr>$i&&Dr==cr),eo=pn.findIndex((Dr,Kr)=>Kr>$i&&Dr==Gr),yn=Da>0&&ss!==-1?ss:pn.length+1,kn=Ui>0&&eo!==-1?eo:pn.length+1;let oi,zA,zc,m0;yn<kn?([zA,zc,m0]=Ts[Us],++Us,--Da,oi=yn):([zA,zc,m0]=js[_a],++_a,--Ui,oi=kn);const[bd,se,we]=[Number(zA),Math.floor(Number(zc)/Er),Math.floor(Number(m0)/Er)],Ue=oi-$i,vt=Gn.length>0?(0,N.max)(Gn.at(-1))[0]+1:0;Gn.push(Array.from({length:3*Ue},(Dr,Kr)=>vt+Kr%Ue));const Wt=Ue+vt,jt=bd*se*we,lr=Array.from({length:jt},(Dr,Kr)=>Wt+Math.floor(Kr/(se*we))),hr=Array.from({length:jt},(Dr,Kr)=>Wt+Math.floor(Kr/we)%se),Mr=Array.from({length:jt},(Dr,Kr)=>Wt+Kr%we);Gn.push([lr,hr,Mr].flat()),$i=oi+jt}if($i<pn.length){const on=Gn.length>0?(0,N.max)(Gn.at(-1))[0]+1:0,ss=pn.length-$i;Gn.push(Array.from({length:3*ss},(eo,yn)=>on+yn%ss))}const Il=Gn.reduce((on,ss)=>on+ss.length,0),Dl=new Array(Il);let yl=0;for(let on=0;on<3;++on)for(let ss=0;ss<Gn.length;++ss){const eo=Gn[ss],yn=eo.length/3;for(let kn=on*yn;kn<(on+1)*yn;++kn)Dl[yl++]=eo[kn]}let t0=0;const md=_s[nn];for(let on=0;on<md.length;++on)if(md[on]==1){for(let ss=0;ss<3;++ss)ka[ss][nn][on]=Dl[ss*Il/3+t0];++t0}const gf=(0,N.max)(Dl)[0];Vr.push(gf+1-Zr[nn].length)}return[new B.Tensor("int64",ka.flat(1/0),[3,Fe.dims[0],Fe.dims[1]]),new B.Tensor("int64",Vr,[Vr.length,1])]}if(er){const{data:Zr,dims:_s}=pt(er),ka=BigInt64Array.from({length:3*Zr.length},(js,Us)=>Zr[Us%Zr.length]),Ts=Array.from({length:_s[0]},(js,Us)=>(0,N.max)(Zr.subarray(_s[1]*Us,_s[1]*(Us+1)))[0]+1n+BigInt(_s[1]));return[new B.Tensor("int64",ka,[3,..._s]),new B.Tensor("int64",Ts,[Ts.length,1])]}{const[Zr,_s]=Fe.dims,ka=BigInt64Array.from({length:3*Zr*_s},(Ts,js)=>BigInt(Math.floor(js%_s/Zr)));return[new B.Tensor("int64",ka,[3,...Fe.dims]),(0,B.zeros)([Zr,1])]}}async encode_image({pixel_values:Fe,image_grid_thw:et}){return(await xe(this.sessions.vision_encoder,{pixel_values:Fe,grid_thw:et})).image_features}_merge_input_ids_with_image_features(Fe){return lt({image_token_id:this.config.image_token_id,...Fe})}prepare_inputs_for_generation(Fe,et,Gt){if(et.attention_mask&&!et.position_ids)if(et.past_key_values){et.pixel_values=null;const er=BigInt(Object.values(et.past_key_values)[0].dims.at(-2)),$t=et.rope_deltas.map(cr=>er+cr);et.position_ids=(0,B.stack)([$t,$t,$t],0)}else[et.position_ids,et.rope_deltas]=this.get_rope_index(et.input_ids,et.image_grid_thw,et.video_grid_thw,et.attention_mask);return et}}class Ii extends Qe{}class wa extends Ii{}class xA extends Ii{}class Ki extends Qe{}class lo extends Ki{}class ZA extends Ki{}class MA extends Qe{}class tA extends MA{}class JA extends MA{}class qi extends Qe{}class yi extends qi{}class EA extends qi{}class Fo extends Qe{}class sn extends Fo{}class ua extends Fo{}class yo extends Qe{}class BA extends yo{}class Xi extends yo{async _call(Fe){return new Rs(await super._call(Fe))}}class Zi extends Qe{}class Ji extends Zi{}class TA extends Zi{async _call(Fe){return new Rs(await super._call(Fe))}}class En extends Qe{}class PA extends En{}class DA extends Qe{}class ko extends DA{}class zo extends DA{async _call(Fe){return new Rs(await super._call(Fe))}}class wn extends Qe{}class SA extends wn{}class GA extends Qe{}class _o extends GA{}class pl extends GA{async _call(Fe){return new Rs(await super._call(Fe))}}class Oo extends Qe{}class rs extends Oo{}class t extends Qe{}class r extends t{}class s extends t{async _call(Fe){return new Rs(await super._call(Fe))}}class n extends Qe{}class A extends n{async _call(Fe){return new df(await super._call(Fe))}}class l extends Qe{}class g extends l{}class m extends l{async _call(Fe){return new Rs(await super._call(Fe))}}class w extends Qe{}class T extends w{}class x extends w{async _call(Fe){return new Rs(await super._call(Fe))}}class F extends Qe{}class U extends F{}class ee extends F{}class Ae extends Qe{}class Ce extends Ae{}class Me extends Ae{}class We extends Qe{}class Ze extends We{}class ut extends We{async _call(Fe){return new Rs(await super._call(Fe))}}class mt extends Qe{}class xt extends mt{}class St extends mt{async _call(Fe){return new sr(await super._call(Fe))}}class Rt extends mt{async _call(Fe){return new br(await super._call(Fe))}}class sr extends ht{constructor({logits:Fe,pred_boxes:et}){super(),this.logits=Fe,this.pred_boxes=et}}class br extends ht{constructor({logits:Fe,pred_boxes:et,pred_masks:Gt}){super(),this.logits=Fe,this.pred_boxes=et,this.pred_masks=Gt}}class Ir extends Qe{}class jr extends Ir{}class Ur extends Ir{async _call(Fe){return new As(await super._call(Fe))}}class As extends ht{constructor({logits:Fe,pred_boxes:et}){super(),this.logits=Fe,this.pred_boxes=et}}class Ds extends Qe{}class ea extends Ds{}class da extends Ds{async _call(Fe){return new ma(await super._call(Fe))}}class ma extends sr{}class Ia extends Qe{}class Na extends Ia{}class La extends Ia{async _call(Fe){return new Rs(await super._call(Fe))}}class Ja extends Qe{}class an extends Ja{}class In extends Ja{async _call(Fe){return new Rs(await super._call(Fe))}}class z extends Qe{}class K extends z{}class re extends z{async _call(Fe){return new Rs(await super._call(Fe))}}class me extends Qe{}class _e extends me{}class at extends me{async _call(Fe){return new Rs(await super._call(Fe))}}class yt extends Qe{}class Ut extends yt{}class rr extends yt{}class pr extends Qe{}class Nr extends pr{}class ns extends pr{}class ys extends Qe{}class Ea extends ys{}class ti extends Qe{}class rA extends ti{}class Yc extends ti{}class Kc extends ti{}class qc extends Qe{}class D0 extends qc{}class S0 extends Qe{}class Xc extends S0{}class G0 extends S0{}class F0 extends Qe{}class Zc extends F0{}class Jc extends F0{}class $c extends Qe{}class a0 extends $c{}class z0 extends Qe{}class eu extends z0{}class tu extends z0{async _call(Fe){return new Rs(await super._call(Fe))}}class O0 extends Qe{}class ru extends O0{}class su extends O0{async _call(Fe){return new Rs(await super._call(Fe))}}class Q0 extends Qe{}class au extends Q0{}class sA extends Q0{async _call(Fe){return new Rs(await super._call(Fe))}}class Qo extends Qe{}class hl extends Qo{}class ml extends Qo{async _call(Fe){return new Rs(await super._call(Fe))}}class N0 extends Qe{}class nu extends N0{}class L0 extends Qe{}class iu extends L0{}class ou extends L0{async _call(Fe){return new R0(await super._call(Fe))}}class R0 extends ht{constructor({logits:Fe,pred_boxes:et}){super(),this.logits=Fe,this.pred_boxes=et}}class Au extends Qe{}class lu extends Au{async get_image_embeddings({pixel_values:Fe}){return await Ye(this,{pixel_values:Fe})}async forward(Fe){if(Fe.image_embeddings&&Fe.image_positional_embeddings||(Fe={...Fe,...await this.get_image_embeddings(Fe)}),!Fe.input_labels&&Fe.input_points){const Gt=Fe.input_points.dims.slice(0,-1),er=Gt.reduce(($t,cr)=>$t*cr,1);Fe.input_labels=new B.Tensor("int64",new BigInt64Array(er).fill(1n),Gt)}const et={image_embeddings:Fe.image_embeddings,image_positional_embeddings:Fe.image_positional_embeddings};return Fe.input_points&&(et.input_points=Fe.input_points),Fe.input_labels&&(et.input_labels=Fe.input_labels),Fe.input_boxes&&(et.input_boxes=Fe.input_boxes),await xe(this.sessions.prompt_encoder_mask_decoder,et)}async _call(Fe){return new j0(await super._call(Fe))}}class j0 extends ht{constructor({iou_scores:Fe,pred_masks:et}){super(),this.iou_scores=Fe,this.pred_masks=et}}class Qi extends Qe{}class cu extends Qi{}class V0 extends Qi{}class n0 extends Qe{}class uu extends n0{}class El extends n0{}class $A extends Qe{}class du extends $A{}class fu extends $A{async _call(Fe){return new Pl(await super._call(Fe))}}class gu extends $A{async _call(Fe){return new Rs(await super._call(Fe))}}class W0 extends $A{async _call(Fe){return new ki(await super._call(Fe))}}class i0 extends Qe{}class pu extends i0{}class hu extends i0{async _call(Fe){return new ki(await super._call(Fe))}}class mu extends Qe{}class bu extends mu{}class ql extends Qe{}class U0 extends ql{}class H0 extends ql{async _call(Fe){return new Pl(await super._call(Fe))}}class Cu extends ql{async _call(Fe){return new Rs(await super._call(Fe))}}class Bl extends Qe{}class wu extends Bl{}class Iu extends Bl{async _call(Fe){return new Pl(await super._call(Fe))}}class el extends Bl{async _call(Fe){return new Rs(await super._call(Fe))}}class yu extends Bl{async _call(Fe){return new ki(await super._call(Fe))}}class o0 extends Qe{}class ku extends o0{}class _u extends o0{async _call(Fe){return new Pl(await super._call(Fe))}}class Y0 extends o0{async _call(Fe){return new Rs(await super._call(Fe))}}class jd extends Qe{}class vu extends $A{}class xu extends $A{async _call(Fe){return new Pl(await super._call(Fe))}}class Mu extends $A{async _call(Fe){return new Rs(await super._call(Fe))}}class tl extends Qe{}class Eu extends tl{}class Bu extends tl{async _call(Fe){return new Pl(await super._call(Fe))}}class Tu extends tl{async _call(Fe){return new Rs(await super._call(Fe))}}class Xl extends tl{async _call(Fe){return new uf(await super._call(Fe))}}class Pu extends tl{async _call(Fe){return new ki(await super._call(Fe))}}class Du extends Qe{}class Su extends Du{}class bl extends Qe{}class A0 extends bl{}class K0 extends bl{}class q0 extends bl{async generate_speech(Fe,et,{threshold:Gt=.5,minlenratio:er=0,maxlenratio:$t=20,vocoder:cr=null}={}){const Gr={input_ids:Fe},{encoder_outputs:Fr,encoder_attention_mask:Er}=await Ye(this,Gr),Vr=Fr.dims[1]/this.config.reduction_factor,Zr=Math.floor(Vr*$t),_s=Math.floor(Vr*er),ka=this.config.num_mel_bins;let Ts=[],js=null,Us=null,_a=0;for(;;){++_a;const Ha=ie(!!Us);let ri;ri=Us?Us.output_sequence_out:new B.Tensor("float32",new Float32Array(ka),[1,1,ka]);let Un={use_cache_branch:Ha,output_sequence:ri,encoder_attention_mask:Er,speaker_embeddings:et,encoder_hidden_states:Fr};this.addPastKeyValues(Un,js),Us=await xe(this.sessions.decoder_model_merged,Un),js=this.getPastKeyValues(Us,js);const{prob:Hn,spectrum:Gn}=Us;if(Ts.push(Gn),_a>=_s&&(Array.from(Hn.data).filter($i=>$i>=Gt).length>0||_a>=Zr))break}const nn=(0,B.cat)(Ts),{waveform:pn}=await xe(cr.sessions.model,{spectrogram:nn});return{spectrogram:nn,waveform:pn}}}class X0 extends Qe{constructor(){super(...arguments);Te(this,"main_input_name","spectrogram")}}class Vd extends Qe{}class Gu extends Vd{}class l0 extends Qe{}class Z0 extends l0{}class Tl extends l0{}class J0 extends Qe{}class $0 extends J0{}class Fu extends J0{}class ec extends Qe{}class tc extends ec{}class zu extends ec{}class c0 extends Qe{}class u0 extends c0{}class Wd extends c0{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"text_model"})}}class Ou extends c0{static async from_pretrained(Fe,et={}){return super.from_pretrained(Fe,{...et,model_file_name:et.model_file_name??"audio_model"})}}class Qu extends Qe{}class rc extends Qu{async _call(Fe){return new ff(await super._call(Fe))}}class d0 extends Qe{}class Ud extends d0{}class sc extends d0{}class Nu extends d0{}class ac extends Qe{}class nc extends ac{}class Lu extends ac{}class ic extends Qe{}class oc extends ic{}class Ru extends ic{async _call(Fe){return new Rs(await super._call(Fe))}}class Ac extends Qe{}class f0 extends Ac{}class Hd extends Ac{}class lc extends Qe{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(et){const[Gt,er]=et.dims,$t=this.config.decoder.num_codebooks,cr=er-$t;let Gr=0;for(let Vr=0;Vr<et.size;++Vr){if(et.data[Vr]===this.config.decoder.pad_token_id)continue;const Zr=Vr%er-Math.floor(Vr/er)%$t;Zr>0&&Zr<=cr&&(et.data[Gr++]=et.data[Vr])}const Fr=Math.floor(Gt/$t),Er=Gr/(Fr*$t);return new B.Tensor(et.type,et.data.slice(0,Gr),[Fr,$t,Er])}prepare_inputs_for_generation(et,Gt,er){let $t=structuredClone(et);for(let cr=0;cr<$t.length;++cr)for(let Gr=0;Gr<$t[cr].length;++Gr)cr%this.config.decoder.num_codebooks>=Gr&&($t[cr][Gr]=BigInt(this.config.decoder.pad_token_id));return er.guidance_scale!==null&&er.guidance_scale>1&&($t=$t.concat($t)),super.prepare_inputs_for_generation($t,Gt,er)}async generate(et){const Gt=await super.generate(et),er=this._apply_and_filter_by_delay_pattern_mask(Gt).unsqueeze_(0),{audio_values:$t}=await xe(this.sessions.encodec_decode,{audio_codes:er});return $t}}class cc extends Qe{}class ju extends cc{}class uc extends cc{async _call(Fe){return new Rs(await super._call(Fe))}}class Zl extends Qe{}class Yd extends Zl{}class Vu extends Zl{async _call(Fe){return new Rs(await super._call(Fe))}}class g0 extends Qe{}class dc extends g0{}class Wu extends g0{async _call(Fe){return new Rs(await super._call(Fe))}}class fc extends Qe{}class gc extends fc{}class Uu extends fc{async _call(Fe){return new Rs(await super._call(Fe))}}class Hu extends Qe{}class pc extends Hu{}class Kd extends Qe{}class qd extends Kd{constructor(...et){super(...et);Te(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(et){const Gt=this._generation_mode??"text";let er;if(Gt!=="text"&&et.past_key_values){const Er=this.sessions.gen_img_embeds,Vr=(0,y.pick)({image_ids:et.input_ids},Er.inputNames);er=await xe(Er,Vr)}else{const Er=this.sessions.prepare_inputs_embeds,Vr=(0,y.pick)(et,Er.inputNames);er=await xe(Er,Vr)}const $t={...et,...er},cr=await Le(this,$t),Gr=this.sessions[Gt==="text"?"lm_head":"gen_head"];if(!Gr)throw new Error(`Unable to find "${Gr}" generation head`);const Fr=await xe(Gr,(0,y.pick)(cr,Gr.inputNames));return{...er,...cr,...Fr}}async generate(et){return this._generation_mode="text",super.generate(et)}async generate_images(et){this._generation_mode="image";const Gt=(et.inputs??et[this.main_input_name]).dims[1],er=(await super.generate(et)).slice(null,[Gt,null]),$t=this.sessions.image_decode,{decoded_image:cr}=await xe($t,{generated_tokens:er}),Gr=cr.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),Fr=[];for(const Er of Gr){const Vr=S.RawImage.fromTensor(Er);Fr.push(Vr)}return Fr}}class hc extends ht{constructor({char_logits:Fe,bpe_logits:et,wp_logits:Gt}){super(),this.char_logits=Fe,this.bpe_logits=et,this.wp_logits=Gt}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class p0 extends Qe{}class Yu extends p0{async _call(Fe){return new hc(await super._call(Fe))}}class mc extends Qe{}class Ku extends mc{}class Cl extends mc{}class bc extends Qe{}class Cc extends bc{}class qu extends bc{}class ya{static async from_pretrained(Fe,{progress_callback:et=null,config:Gt=null,cache_dir:er=null,local_files_only:$t=!1,revision:cr="main",model_file_name:Gr=null,subfolder:Fr="onnx",device:Er=null,dtype:Vr=null,use_external_data_format:Zr=null,session_options:_s={}}={}){const ka={progress_callback:et,config:Gt,cache_dir:er,local_files_only:$t,revision:cr,model_file_name:Gr,subfolder:Fr,device:Er,dtype:Vr,use_external_data_format:Zr,session_options:_s};if(ka.config=await u.AutoConfig.from_pretrained(Fe,ka),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const Ts of this.MODEL_CLASS_MAPPINGS){const js=Ts.get(ka.config.model_type);if(js)return await js[1].from_pretrained(Fe,ka)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${ka.config.model_type}", attempting to construct from base class.`),await Qe.from_pretrained(Fe,ka);throw Error(`Unsupported model type: ${ka.config.model_type}`)}}Te(ya,"MODEL_CLASS_MAPPINGS",null),Te(ya,"BASE_IF_FAIL",!1);const Xd=new Map([["bert",["BertModel",Mt]],["modernbert",["ModernBertModel",ne]],["nomic_bert",["NomicBertModel",Nt]],["roformer",["RoFormerModel",Vt]],["electra",["ElectraModel",Pr]],["esm",["EsmModel",Gi]],["convbert",["ConvBertModel",os]],["camembert",["CamembertModel",On]],["deberta",["DebertaModel",Br]],["deberta-v2",["DebertaV2Model",Qn]],["mpnet",["MPNetModel",Nn]],["albert",["AlbertModel",st]],["distilbert",["DistilBertModel",ai]],["roberta",["RobertaModel",Ca]],["xlm",["XLMModel",Mo]],["xlm-roberta",["XLMRobertaModel",ll]],["clap",["ClapModel",u0]],["clip",["CLIPModel",vr]],["clipseg",["CLIPSegModel",_r]],["chinese_clip",["ChineseCLIPModel",dl]],["siglip",["SiglipModel",ho]],["jina_clip",["JinaCLIPModel",oo]],["mobilebert",["MobileBertModel",Ei]],["squeezebert",["SqueezeBertModel",Be]],["wav2vec2",["Wav2Vec2Model",du]],["wav2vec2-bert",["Wav2Vec2BertModel",ku]],["unispeech",["UniSpeechModel",U0]],["unispeech-sat",["UniSpeechSatModel",wu]],["hubert",["HubertModel",vu]],["wavlm",["WavLMModel",Eu]],["audio-spectrogram-transformer",["ASTModel",jA]],["vits",["VitsModel",rc]],["pyannote",["PyAnnoteModel",pu]],["wespeaker-resnet",["WeSpeakerResNetModel",bu]],["detr",["DetrModel",xt]],["rt_detr",["RTDetrModel",jr]],["table-transformer",["TableTransformerModel",ea]],["vit",["ViTModel",BA]],["ijepa",["IJepaModel",Ji]],["pvt",["PvtModel",ko]],["vit_msn",["ViTMSNModel",_o]],["vit_mae",["ViTMAEModel",SA]],["groupvit",["GroupViTModel",rs]],["fastvit",["FastViTModel",r]],["mobilevit",["MobileViTModel",g]],["mobilevitv2",["MobileViTV2Model",T]],["owlvit",["OwlViTModel",U]],["owlv2",["Owlv2Model",Ce]],["beit",["BeitModel",Ze]],["deit",["DeiTModel",Na]],["hiera",["HieraModel",an]],["convnext",["ConvNextModel",eu]],["convnextv2",["ConvNextV2Model",ru]],["dinov2",["Dinov2Model",au]],["dinov2_with_registers",["Dinov2WithRegistersModel",hl]],["resnet",["ResNetModel",K]],["swin",["SwinModel",_e]],["swin2sr",["Swin2SRModel",Ut]],["donut-swin",["DonutSwinModel",a0]],["yolos",["YolosModel",iu]],["dpt",["DPTModel",Nr]],["glpn",["GLPNModel",Zc]],["hifigan",["SpeechT5HifiGan",X0]],["efficientnet",["EfficientNetModel",oc]],["decision_transformer",["DecisionTransformerModel",pc]],["patchtst",["PatchTSTForPrediction",Ku]],["patchtsmixer",["PatchTSMixerForPrediction",Cc]],["mobilenet_v1",["MobileNetV1Model",ju]],["mobilenet_v2",["MobileNetV2Model",Yd]],["mobilenet_v3",["MobileNetV3Model",dc]],["mobilenet_v4",["MobileNetV4Model",gc]],["maskformer",["MaskFormerModel",Xc]],["mgp-str",["MgpstrForSceneTextRecognition",Yu]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Su]]]),Zd=new Map([["t5",["T5Model",kt]],["longt5",["LongT5Model",fr]],["mt5",["MT5Model",Ar]],["bart",["BartModel",Ys]],["mbart",["MBartModel",qt]],["marian",["MarianModel",cu]],["whisper",["WhisperModel",WA]],["m2m_100",["M2M100Model",uu]],["blenderbot",["BlenderbotModel",Fs]],["blenderbot-small",["BlenderbotSmallModel",fa]]]),Jd=new Map([["bloom",["BloomModel",tA]],["jais",["JAISModel",Uo]],["gpt2",["GPT2Model",To]],["gptj",["GPTJModel",zs]],["gpt_bigcode",["GPTBigCodeModel",gr]],["gpt_neo",["GPTNeoModel",fA]],["gpt_neox",["GPTNeoXModel",gA]],["codegen",["CodeGenModel",fn]],["llama",["LlamaModel",mo]],["exaone",["ExaoneModel",Ao]],["olmo",["OlmoModel",bA]],["olmo2",["Olmo2Model",Oi]],["mobilellm",["MobileLLMModel",Co]],["granite",["GraniteModel",Zo]],["cohere",["CohereModel",Wn]],["gemma",["GemmaModel",wi]],["gemma2",["Gemma2Model",eA]],["helium",["HeliumModel",Pa]],["glm",["GlmModel",gn]],["openelm",["OpenELMModel",_A]],["qwen2",["Qwen2Model",Io]],["phi",["PhiModel",wa]],["phi3",["Phi3Model",lo]],["mpt",["MptModel",yi]],["opt",["OPTModel",sn]],["mistral",["MistralModel",Z0]],["starcoder2",["Starcoder2Model",$0]],["falcon",["FalconModel",tc]],["stablelm",["StableLmModel",nc]]]),Jl=new Map([["speecht5",["SpeechT5ForSpeechToText",K0]],["whisper",["WhisperForConditionalGeneration",cl]],["moonshine",["MoonshineForConditionalGeneration",ii]]]),Xu=new Map([["speecht5",["SpeechT5ForTextToSpeech",q0]]]),Zu=new Map([["vits",["VitsModel",rc]],["musicgen",["MusicgenForConditionalGeneration",lc]]]),wc=new Map([["bert",["BertForSequenceClassification",zt]],["modernbert",["ModernBertForSequenceClassification",$e]],["roformer",["RoFormerForSequenceClassification",Jt]],["electra",["ElectraForSequenceClassification",Kt]],["esm",["EsmForSequenceClassification",Jn]],["convbert",["ConvBertForSequenceClassification",ts]],["camembert",["CamembertForSequenceClassification",Dn]],["deberta",["DebertaForSequenceClassification",qs]],["deberta-v2",["DebertaV2ForSequenceClassification",ci]],["mpnet",["MPNetForSequenceClassification",Bi]],["albert",["AlbertForSequenceClassification",pe]],["distilbert",["DistilBertForSequenceClassification",fi]],["roberta",["RobertaForSequenceClassification",za]],["xlm",["XLMForSequenceClassification",RA]],["xlm-roberta",["XLMRobertaForSequenceClassification",ni]],["bart",["BartForSequenceClassification",kr]],["mbart",["MBartForSequenceClassification",ha]],["mobilebert",["MobileBertForSequenceClassification",Jr]],["squeezebert",["SqueezeBertForSequenceClassification",bt]]]),Ju=new Map([["bert",["BertForTokenClassification",ve]],["modernbert",["ModernBertForTokenClassification",gt]],["roformer",["RoFormerForTokenClassification",wr]],["electra",["ElectraForTokenClassification",Bs]],["esm",["EsmForTokenClassification",gi]],["convbert",["ConvBertForTokenClassification",zn]],["camembert",["CamembertForTokenClassification",qn]],["deberta",["DebertaForTokenClassification",aa]],["deberta-v2",["DebertaV2ForTokenClassification",ui]],["mpnet",["MPNetForTokenClassification",rn]],["distilbert",["DistilBertForTokenClassification",Ri]],["roberta",["RobertaForTokenClassification",Hr]],["xlm",["XLMForTokenClassification",Al]],["xlm-roberta",["XLMRobertaForTokenClassification",dn]]]),Ic=new Map([["t5",["T5ForConditionalGeneration",Ht]],["longt5",["LongT5ForConditionalGeneration",nr]],["mt5",["MT5ForConditionalGeneration",Wr]],["bart",["BartForConditionalGeneration",as]],["mbart",["MBartForConditionalGeneration",Tr]],["marian",["MarianMTModel",V0]],["m2m_100",["M2M100ForConditionalGeneration",El]],["blenderbot",["BlenderbotForConditionalGeneration",Ls]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Ba]]]),yc=new Map([["bloom",["BloomForCausalLM",JA]],["gpt2",["GPT2LMHeadModel",Yi]],["jais",["JAISLMHeadModel",KA]],["gptj",["GPTJForCausalLM",pA]],["gpt_bigcode",["GPTBigCodeForCausalLM",xn]],["gpt_neo",["GPTNeoForCausalLM",qA]],["gpt_neox",["GPTNeoXForCausalLM",gl]],["codegen",["CodeGenForCausalLM",Pi]],["llama",["LlamaForCausalLM",hA]],["exaone",["ExaoneForCausalLM",mA]],["olmo",["OlmoForCausalLM",CA]],["olmo2",["Olmo2ForCausalLM",Xo]],["mobilellm",["MobileLLMForCausalLM",ls]],["granite",["GraniteForCausalLM",Jo]],["cohere",["CohereForCausalLM",So]],["gemma",["GemmaForCausalLM",yA]],["gemma2",["Gemma2ForCausalLM",wo]],["helium",["HeliumForCausalLM",Po]],["glm",["GlmForCausalLM",bo]],["openelm",["OpenELMForCausalLM",XA]],["qwen2",["Qwen2ForCausalLM",Mn]],["phi",["PhiForCausalLM",xA]],["phi3",["Phi3ForCausalLM",ZA]],["mpt",["MptForCausalLM",EA]],["opt",["OPTForCausalLM",ua]],["mbart",["MBartForCausalLM",xa]],["mistral",["MistralForCausalLM",Tl]],["starcoder2",["Starcoder2ForCausalLM",Fu]],["falcon",["FalconForCausalLM",zu]],["trocr",["TrOCRForCausalLM",Gu]],["stablelm",["StableLmForCausalLM",Lu]],["phi3_v",["Phi3VForCausalLM",mr]]]),$d=new Map([["multi_modality",["MultiModalityCausalLM",qd]]]),$u=new Map([["bert",["BertForMaskedLM",oe]],["modernbert",["ModernBertForMaskedLM",ze]],["roformer",["RoFormerForMaskedLM",Xt]],["electra",["ElectraForMaskedLM",Sr]],["esm",["EsmForMaskedLM",Fi]],["convbert",["ConvBertForMaskedLM",Ks]],["camembert",["CamembertForMaskedLM",Pn]],["deberta",["DebertaForMaskedLM",zr]],["deberta-v2",["DebertaV2ForMaskedLM",Sn]],["mpnet",["MPNetForMaskedLM",zi]],["albert",["AlbertForMaskedLM",qe]],["distilbert",["DistilBertForMaskedLM",Zn]],["roberta",["RobertaForMaskedLM",na]],["xlm",["XLMWithLMHeadModel",ol]],["xlm-roberta",["XLMRobertaForMaskedLM",fo]],["mobilebert",["MobileBertForMaskedLM",pi]],["squeezebert",["SqueezeBertForMaskedLM",ot]]]),ed=new Map([["bert",["BertForQuestionAnswering",H]],["roformer",["RoFormerForQuestionAnswering",Rr]],["electra",["ElectraForQuestionAnswering",$a]],["convbert",["ConvBertForQuestionAnswering",Va]],["camembert",["CamembertForQuestionAnswering",sa]],["deberta",["DebertaForQuestionAnswering",ks]],["deberta-v2",["DebertaV2ForQuestionAnswering",di]],["mpnet",["MPNetForQuestionAnswering",Ln]],["albert",["AlbertForQuestionAnswering",he]],["distilbert",["DistilBertForQuestionAnswering",Xn]],["roberta",["RobertaForQuestionAnswering",la]],["xlm",["XLMForQuestionAnswering",hi]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Qr]],["mobilebert",["MobileBertForQuestionAnswering",Cs]],["squeezebert",["SqueezeBertForQuestionAnswering",Tt]]]),kc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",ca]],["idefics3",["Idefics3ForConditionalGeneration",jo]]]),td=new Map([["llava",["LlavaForConditionalGeneration",go]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",jn]],["moondream1",["Moondream1ForConditionalGeneration",po]],["florence2",["Florence2ForConditionalGeneration",AA]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Go]],["idefics3",["Idefics3ForConditionalGeneration",jo]],["paligemma",["PaliGemmaForConditionalGeneration",ao]]]),ef=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",ca]]]),rd=new Map([["vit",["ViTForImageClassification",Xi]],["ijepa",["IJepaForImageClassification",TA]],["pvt",["PvtForImageClassification",zo]],["vit_msn",["ViTMSNForImageClassification",pl]],["fastvit",["FastViTForImageClassification",s]],["mobilevit",["MobileViTForImageClassification",m]],["mobilevitv2",["MobileViTV2ForImageClassification",x]],["beit",["BeitForImageClassification",ut]],["deit",["DeiTForImageClassification",La]],["hiera",["HieraForImageClassification",In]],["convnext",["ConvNextForImageClassification",tu]],["convnextv2",["ConvNextV2ForImageClassification",su]],["dinov2",["Dinov2ForImageClassification",sA]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",ml]],["resnet",["ResNetForImageClassification",re]],["swin",["SwinForImageClassification",at]],["segformer",["SegformerForImageClassification",sc]],["efficientnet",["EfficientNetForImageClassification",Ru]],["mobilenet_v1",["MobileNetV1ForImageClassification",uc]],["mobilenet_v2",["MobileNetV2ForImageClassification",Vu]],["mobilenet_v3",["MobileNetV3ForImageClassification",Wu]],["mobilenet_v4",["MobileNetV4ForImageClassification",Uu]]]),_c=new Map([["detr",["DetrForObjectDetection",St]],["rt_detr",["RTDetrForObjectDetection",Ur]],["table-transformer",["TableTransformerForObjectDetection",da]],["yolos",["YolosForObjectDetection",ou]]]),sd=new Map([["owlvit",["OwlViTForObjectDetection",ee]],["owlv2",["Owlv2ForObjectDetection",Me]],["grounding-dino",["GroundingDinoForObjectDetection",nu]]]),ad=new Map([["detr",["DetrForSegmentation",Rt]],["clipseg",["CLIPSegForImageSegmentation",ei]]]),nd=new Map([["segformer",["SegformerForSemanticSegmentation",Nu]],["sapiens",["SapiensForSemanticSegmentation",rA]]]),id=new Map([["detr",["DetrForSegmentation",Rt]],["maskformer",["MaskFormerForInstanceSegmentation",G0]]]),$l=new Map([["sam",["SamModel",lu]]]),od=new Map([["wav2vec2",["Wav2Vec2ForCTC",fu]],["wav2vec2-bert",["Wav2Vec2BertForCTC",_u]],["unispeech",["UniSpeechForCTC",H0]],["unispeech-sat",["UniSpeechSatForCTC",Iu]],["wavlm",["WavLMForCTC",Bu]],["hubert",["HubertForCTC",xu]]]),vc=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",gu]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Y0]],["unispeech",["UniSpeechForSequenceClassification",Cu]],["unispeech-sat",["UniSpeechSatForSequenceClassification",el]],["wavlm",["WavLMForSequenceClassification",Tu]],["hubert",["HubertForSequenceClassification",Mu]],["audio-spectrogram-transformer",["ASTForAudioClassification",Eo]]]),xc=new Map([["wavlm",["WavLMForXVector",Xl]]]),Mc=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",yu]],["wavlm",["WavLMForAudioFrameClassification",Pu]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",W0]],["pyannote",["PyAnnoteForAudioFrameClassification",hu]]]),Ad=new Map([["vitmatte",["VitMatteForImageMatting",A]]]),Ec=new Map([["patchtst",["PatchTSTForPrediction",Cl]],["patchtsmixer",["PatchTSMixerForPrediction",qu]]]),Bc=new Map([["swin2sr",["Swin2SRForImageSuperResolution",rr]]]),ld=new Map([["dpt",["DPTForDepthEstimation",ns]],["depth_anything",["DepthAnythingForDepthEstimation",Ea]],["glpn",["GLPNForDepthEstimation",Jc]],["sapiens",["SapiensForDepthEstimation",Yc]],["depth_pro",["DepthProForDepthEstimation",D0]]]),cd=new Map([["sapiens",["SapiensForNormalEstimation",Kc]]]),tf=new Map([["vitpose",["VitPoseForPoseEstimation",PA]]]),Tc=new Map([["clip",["CLIPVisionModelWithProjection",mi]],["siglip",["SiglipVisionModel",Xa]],["jina_clip",["JinaCLIPVisionModel",uA]]]),FA=[[Xd,f],[Zd,I],[Jd,P],[wc,f],[Ju,f],[Ic,e],[Jl,e],[yc,P],[$d,Ie],[$u,f],[ed,f],[kc,c],[td,D],[rd,f],[ad,f],[id,f],[nd,f],[Ad,f],[Ec,f],[Bc,f],[ld,f],[cd,f],[tf,f],[_c,f],[sd,f],[$l,J],[od,f],[vc,f],[Xu,e],[Zu,f],[xc,f],[Mc,f],[Tc,f]];for(const[fe,Fe]of FA)for(const[et,Gt]of fe.values())ke.set(et,Fe),Ne.set(Gt,et),Ee.set(et,Gt);const ud=[["MusicgenForConditionalGeneration",lc,j],["Phi3VForCausalLM",mr,ge],["CLIPTextModelWithProjection",HA,f],["SiglipTextModel",YA,f],["JinaCLIPTextModel",fl,f],["ClapTextModelWithProjection",Wd,f],["ClapAudioModelWithProjection",Ou,f]];for(const[fe,Fe,et]of ud)ke.set(fe,et),Ne.set(Fe,fe),Ee.set(fe,Fe);class dd extends ya{}Te(dd,"MODEL_CLASS_MAPPINGS",FA.map(Fe=>Fe[0])),Te(dd,"BASE_IF_FAIL",!0);class rf extends ya{}Te(rf,"MODEL_CLASS_MAPPINGS",[wc]);class Lr extends ya{}Te(Lr,"MODEL_CLASS_MAPPINGS",[Ju]);class sf extends ya{}Te(sf,"MODEL_CLASS_MAPPINGS",[Ic]);class rl extends ya{}Te(rl,"MODEL_CLASS_MAPPINGS",[Jl]);class af extends ya{}Te(af,"MODEL_CLASS_MAPPINGS",[Xu]);class fd extends ya{}Te(fd,"MODEL_CLASS_MAPPINGS",[Zu]);class gd extends ya{}Te(gd,"MODEL_CLASS_MAPPINGS",[yc]);class Bn extends ya{}Te(Bn,"MODEL_CLASS_MAPPINGS",[$u]);class Os extends ya{}Te(Os,"MODEL_CLASS_MAPPINGS",[ed]);class Ws extends ya{}Te(Ws,"MODEL_CLASS_MAPPINGS",[kc]);class sl extends ya{}Te(sl,"MODEL_CLASS_MAPPINGS",[rd]);class pd extends ya{}Te(pd,"MODEL_CLASS_MAPPINGS",[ad]);class h0 extends ya{}Te(h0,"MODEL_CLASS_MAPPINGS",[nd]);class Gf extends ya{}Te(Gf,"MODEL_CLASS_MAPPINGS",[id]);class Pc extends ya{}Te(Pc,"MODEL_CLASS_MAPPINGS",[_c]);class nf extends ya{}Te(nf,"MODEL_CLASS_MAPPINGS",[sd]);class hd extends ya{}Te(hd,"MODEL_CLASS_MAPPINGS",[$l]);class Dc extends ya{}Te(Dc,"MODEL_CLASS_MAPPINGS",[od]);class of extends ya{}Te(of,"MODEL_CLASS_MAPPINGS",[vc]);class Ff extends ya{}Te(Ff,"MODEL_CLASS_MAPPINGS",[xc]);class Af extends ya{}Te(Af,"MODEL_CLASS_MAPPINGS",[Mc]);class wl extends ya{}Te(wl,"MODEL_CLASS_MAPPINGS",[ef]);class Sc extends ya{}Te(Sc,"MODEL_CLASS_MAPPINGS",[Ad]);class e0 extends ya{}Te(e0,"MODEL_CLASS_MAPPINGS",[Bc]);class Gc extends ya{}Te(Gc,"MODEL_CLASS_MAPPINGS",[ld]);class Fc extends ya{}Te(Fc,"MODEL_CLASS_MAPPINGS",[cd]);class lf extends ya{}Te(lf,"MODEL_CLASS_MAPPINGS",[tf]);class cf extends ya{}Te(cf,"MODEL_CLASS_MAPPINGS",[Tc]);class zf extends ht{constructor({logits:Fe,past_key_values:et,encoder_outputs:Gt,decoder_attentions:er=null,cross_attentions:$t=null}){super(),this.logits=Fe,this.past_key_values=et,this.encoder_outputs=Gt,this.decoder_attentions=er,this.cross_attentions=$t}}class Rs extends ht{constructor({logits:Fe,...et}){super(),this.logits=Fe;const Gt=Object.values(et);Gt.length>0&&(this.attentions=Gt)}}class uf extends ht{constructor({logits:Fe,embeddings:et}){super(),this.logits=Fe,this.embeddings=et}}class ki extends ht{constructor({logits:Fe}){super(),this.logits=Fe}}class Ni extends ht{constructor({logits:Fe}){super(),this.logits=Fe}}class Wi extends ht{constructor({start_logits:Fe,end_logits:et}){super(),this.start_logits=Fe,this.end_logits=et}}class Pl extends ht{constructor({logits:Fe}){super(),this.logits=Fe}}class Of extends ht{constructor({logits:Fe,past_key_values:et}){super(),this.logits=Fe,this.past_key_values=et}}class df extends ht{constructor({alphas:Fe}){super(),this.alphas=Fe}}class ff extends ht{constructor({waveform:Fe,spectrogram:et}){super(),this.waveform=Fe,this.spectrogram=et}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(i,o,a)=>{a.r(o),a.d(o,{ASTFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js");class h extends u.FeatureExtractor{constructor(y){super(y);const k=this.config.sampling_rate,_=(0,p.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(k/2),k,null,"kaldi",!0);for(let v=0;v<_.length;++v)_[v].push(0);this.mel_filters=_,this.window=(0,p.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(y,k){return(0,p.spectrogram)(y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:k,transpose:!0})}async _call(y){(0,u.validate_audio_inputs)(y,"ASTFeatureExtractor");const k=await this._extract_fbank_features(y,this.config.max_length);if(this.config.do_normalize){const _=2*this.std,v=k.data;for(let M=0;M<v.length;++M)v[M]=(v[M]-this.mean)/_}return{input_values:k.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(i,o,a)=>{a.r(o),a.d(o,{AutoFeatureExtractor:()=>C});var u=a("./src/utils/constants.js"),p=a("./src/utils/hub.js");a("./src/base/feature_extraction_utils.js");var h=a("./src/models/feature_extractors.js");class C{static async from_pretrained(k,_={}){const v=await(0,p.getModelJSON)(k,u.FEATURE_EXTRACTOR_NAME,!0,_),M=v.feature_extractor_type,B=h[M];if(!B)throw new Error(`Unknown feature_extractor_type: '${M}'. Please report this at ${u.GITHUB_ISSUE_URL}.`);return new B(v)}}},"./src/models/auto/image_processing_auto.js":(i,o,a)=>{a.r(o),a.d(o,{AutoImageProcessor:()=>y});var u=a("./src/utils/constants.js"),p=a("./src/utils/hub.js"),h=a("./src/base/image_processors_utils.js"),C=a("./src/models/image_processors.js");class y{static async from_pretrained(_,v={}){const M=await(0,p.getModelJSON)(_,u.IMAGE_PROCESSOR_NAME,!0,v),B=M.image_processor_type??M.feature_extractor_type;let S=C[B];return S||(B!==void 0&&console.warn(`Image processor type '${B}' not found, assuming base ImageProcessor. Please report this at ${u.GITHUB_ISSUE_URL}.`),S=h.ImageProcessor),new S(M)}}},"./src/models/auto/processing_auto.js":(i,o,a)=>{a.r(o),a.d(o,{AutoProcessor:()=>_});var u=a("./src/utils/constants.js"),p=a("./src/utils/hub.js"),h=a("./src/base/processing_utils.js"),C=a("./src/models/processors.js"),y=a("./src/models/image_processors.js"),k=a("./src/models/feature_extractors.js");class _{static async from_pretrained(M,B={}){const S=await(0,p.getModelJSON)(M,u.IMAGE_PROCESSOR_NAME,!0,B),{image_processor_type:N,feature_extractor_type:V,processor_class:Z}=S;if(Z&&C[Z])return C[Z].from_pretrained(M,B);if(!N&&!V)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const O={};if(N){const Q=y[N];if(!Q)throw new Error(`Unknown image_processor_type: '${N}'.`);O.image_processor=new Q(S)}if(V){const Q=y[V];if(Q)O.image_processor=new Q(S);else{const q=k[V];if(!q)throw new Error(`Unknown feature_extractor_type: '${V}'.`);O.feature_extractor=new q(S)}}return new h.Processor({},O)}}},"./src/models/beit/image_processing_beit.js":(i,o,a)=>{a.r(o),a.d(o,{BeitFeatureExtractor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(i,o,a)=>{a.r(o),a.d(o,{BitImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(i,o,a)=>{a.r(o),a.d(o,{ChineseCLIPFeatureExtractor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(i,o,a)=>{a.r(o),a.d(o,{ClapFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js");class h extends u.FeatureExtractor{constructor(y){super(y),this.mel_filters=(0,p.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,p.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,p.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(y,k,_,v){let M;const B=y.length-k;if(B>0){if(_!=="rand_trunc")throw new Error(`Truncation strategy "${_}" not implemented`);{const S=Math.floor(Math.random()*(B+1));y=y.subarray(S,S+k),M=await this._extract_fbank_features(y,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(B<0){let S=new Float64Array(k);if(S.set(y),v==="repeat")for(let N=y.length;N<k;N+=y.length)S.set(y.subarray(0,Math.min(y.length,k-N)),N);else if(v==="repeatpad")for(let N=y.length;N<-B;N+=y.length)S.set(y,N);y=S}if(_==="fusion")throw new Error(`Truncation strategy "${_}" not implemented`);M=await this._extract_fbank_features(y,this.mel_filters_slaney,this.config.nb_max_samples)}return M.unsqueeze_(0)}async _extract_fbank_features(y,k,_=null){return(0,p.spectrogram)(y,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:k,log_mel:"dB",max_num_frames:_,do_pad:!1,transpose:!0})}async _call(y,{max_length:k=null}={}){return(0,u.validate_audio_inputs)(y,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(y,k??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(i,o,a)=>{a.r(o),a.d(o,{CLIPFeatureExtractor:()=>h,CLIPImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/convnext/image_processing_convnext.js":(i,o,a)=>{a.r(o),a.d(o,{ConvNextFeatureExtractor:()=>h,ConvNextImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(y){super(y),this.crop_pct=this.config.crop_pct??.875}async resize(y){var _;const k=(_=this.size)==null?void 0:_.shortest_edge;if(k===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(k<384){const v=Math.floor(k/this.crop_pct),[M,B]=this.get_resize_output_image_size(y,{shortest_edge:v});y=await y.resize(M,B,{resample:this.resample}),y=await y.center_crop(k,k)}else y=await y.resize(k,k,{resample:this.resample});return y}}class h extends p{}},"./src/models/deit/image_processing_deit.js":(i,o,a)=>{a.r(o),a.d(o,{DeiTFeatureExtractor:()=>h,DeiTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/detr/image_processing_detr.js":(i,o,a)=>{a.r(o),a.d(o,{DetrFeatureExtractor:()=>C,DetrImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(k){const _=await super._call(k),v=[_.pixel_values.dims[0],64,64],M=(0,p.full)(v,1n);return{..._,pixel_mask:M}}post_process_object_detection(...k){return(0,u.post_process_object_detection)(...k)}post_process_panoptic_segmentation(...k){return(0,u.post_process_panoptic_segmentation)(...k)}post_process_instance_segmentation(...k){return(0,u.post_process_instance_segmentation)(...k)}}class C extends h{}},"./src/models/donut/image_processing_donut.js":(i,o,a)=>{a.r(o),a.d(o,{DonutFeatureExtractor:()=>h,DonutImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{pad_image(y,k,_,v={}){const[M,B,S]=k;let N=this.image_mean;Array.isArray(this.image_mean)||(N=new Array(S).fill(N));let V=this.image_std;Array.isArray(V)||(V=new Array(S).fill(N));const Z=N.map((O,Q)=>-O/V[Q]);return super.pad_image(y,k,_,{center:!0,constant_values:Z,...v})}}class h extends p{}},"./src/models/dpt/image_processing_dpt.js":(i,o,a)=>{a.r(o),a.d(o,{DPTFeatureExtractor:()=>h,DPTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/efficientnet/image_processing_efficientnet.js":(i,o,a)=>{a.r(o),a.d(o,{EfficientNetImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(C){super(C),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(y=>y*y))}}},"./src/models/feature_extractors.js":(i,o,a)=>{a.r(o),a.d(o,{ASTFeatureExtractor:()=>u.ASTFeatureExtractor,ClapFeatureExtractor:()=>p.ClapFeatureExtractor,ImageFeatureExtractor:()=>B.ImageProcessor,MoonshineFeatureExtractor:()=>h.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>C.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>y.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>k.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>v.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>M.WhisperFeatureExtractor});var u=a("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),p=a("./src/models/clap/feature_extraction_clap.js"),h=a("./src/models/moonshine/feature_extraction_moonshine.js"),C=a("./src/models/pyannote/feature_extraction_pyannote.js"),y=a("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),k=a("./src/models/speecht5/feature_extraction_speecht5.js"),_=a("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),v=a("./src/models/wespeaker/feature_extraction_wespeaker.js"),M=a("./src/models/whisper/feature_extraction_whisper.js"),B=a("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(i,o,a)=>{a.r(o),a.d(o,{Florence2Processor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");class C extends u.Processor{constructor(k,_){super(k,_);const{tasks_answer_post_processing_type:v,task_prompts_without_inputs:M,task_prompts_with_input:B}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(v??{})),this.task_prompts_without_inputs=new Map(Object.entries(M??{})),this.task_prompts_with_input=new Map(Object.entries(B??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(k){typeof k=="string"&&(k=[k]);const _=[];for(const v of k)if(this.task_prompts_without_inputs.has(v))_.push(this.task_prompts_without_inputs.get(v));else{for(const[M,B]of this.task_prompts_with_input)if(v.includes(M)){_.push(B.replaceAll("{input}",v).replaceAll(M,""));break}_.length!==k.length&&_.push(v)}return _}post_process_generation(k,_,v){const M=this.tasks_answer_post_processing_type.get(_)??"pure_text";let B;switch(k=k.replaceAll("<s>","").replaceAll("</s>",""),M){case"pure_text":B=k;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const S=M==="ocr"?"quad_boxes":"bboxes",N=k.matchAll(this.regexes[S]),V=[],Z=[];for(const[O,Q,...q]of N)V.push(Q?Q.trim():V.at(-1)??""),Z.push(q.map((f,I)=>(Number(f)+.5)/this.size_per_bin*v[I%2]));B={labels:V,[S]:Z};break;default:throw new Error(`Task "${_}" (of type "${M}") not yet implemented.`)}return{[_]:B}}async _call(k,_=null,v={}){if(!k&&!_)throw new Error("Either text or images must be provided");return{...await this.image_processor(k,v),..._?this.tokenizer(_,v):{}}}}Te(C,"tokenizer_class",h.AutoTokenizer),Te(C,"image_processor_class",p.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(i,o,a)=>{a.r(o),a.d(o,{GLPNFeatureExtractor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(i,o,a)=>{a.r(o),a.d(o,{GroundingDinoImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(y){const k=await super._call(y),_=k.pixel_values.dims,v=(0,p.ones)([_[0],_[2],_[3]]);return{...k,pixel_mask:v}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(i,o,a)=>{a.r(o),a.d(o,{GroundingDinoProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js"),C=a("./src/base/image_processors_utils.js");function y(_,v){const M=_.dims.at(-1)-1,B=_.tolist();B.fill(!1,0,1),B.fill(!1,M);const S=v.tolist();return B.map((N,V)=>N?V:null).filter(N=>N!==null).map(N=>S[N])}class k extends u.Processor{async _call(v,M,B={}){const S=v?await this.image_processor(v,B):{};return{...M?this.tokenizer(M,B):{},...S}}post_process_grounded_object_detection(v,M,{box_threshold:B=.25,text_threshold:S=.25,target_sizes:N=null}={}){const{logits:V,pred_boxes:Z}=v,O=V.dims[0];if(N!==null&&N.length!==O)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Q=V.dims.at(1),q=V.sigmoid(),f=q.max(-1).tolist(),I=Z.tolist().map(c=>c.map(P=>(0,C.center_to_corners_format)(P))),e=[];for(let c=0;c<O;++c){const P=N!==null?N[c]:null;P!==null&&(I[c]=I[c].map(ge=>ge.map((ke,Ee)=>ke*P[(Ee+1)%2])));const J=f[c],D=[],j=[],Ie=[];for(let ge=0;ge<Q;++ge){const ke=J[ge];if(ke<=B)continue;const Ee=I[c][ge],Ne=q[c][ge];D.push(ke),Ie.push(Ee);const Xe=y(Ne.gt(S),M[c]);j.push(Xe)}e.push({scores:D,boxes:Ie,labels:this.batch_decode(j)})}return e}}Te(k,"tokenizer_class",h.AutoTokenizer),Te(k,"image_processor_class",p.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(i,o,a)=>{a.r(o),a.d(o,{Idefics3ImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{constructor(y){super(y),this.do_image_splitting=y.do_image_splitting??!0,this.max_image_size=y.max_image_size}get_resize_for_vision_encoder(y,k){let[_,v]=y.dims.slice(-2);const M=v/_;return v>=_?(v=Math.ceil(v/k)*k,_=Math.floor(v/M),_=Math.ceil(_/k)*k):(_=Math.ceil(_/k)*k,v=Math.floor(_*M),v=Math.ceil(v/k)*k),{height:_,width:v}}async _call(y,{do_image_splitting:k=null,return_row_col_info:_=!1}={}){let v;if(Array.isArray(y)){if(y.length===0||!y[0])throw new Error("No images provided.");v=Array.isArray(y[0])?y:[y]}else v=[[y]];let M=[],B=[],S=[];const N=[],V=[];for(const c of v){let P=await Promise.all(c.map(j=>this.preprocess(j)));N.push(...P.map(j=>j.original_size)),V.push(...P.map(j=>j.reshaped_input_size)),P.forEach(j=>j.pixel_values.unsqueeze_(0));const{longest_edge:J}=this.max_image_size;let D;if(k??this.do_image_splitting){let j=new Array(P.length),Ie=new Array(P.length);D=await Promise.all(P.map(async(ge,ke)=>{const Ee=this.get_resize_for_vision_encoder(ge.pixel_values,J),Ne=await(0,p.interpolate_4d)(ge.pixel_values,{size:[Ee.height,Ee.width]}),{frames:Xe,num_splits_h:At,num_splits_w:xe}=await this.split_image(Ne,this.max_image_size);return j[ke]=At,Ie[ke]=xe,(0,p.cat)(Xe,0)})),B.push(j),S.push(Ie)}else{const j=[J,J];D=await Promise.all(P.map(Ie=>(0,p.interpolate_4d)(Ie.pixel_values,{size:j}))),B.push(new Array(P.length).fill(0)),S.push(new Array(P.length).fill(0))}M.push((0,p.cat)(D,0))}const Z=M.length,[O,Q,q,f]=M[0].dims;let I,e;if(Z===1)I=M[0].unsqueeze_(0),e=(0,p.full)([Z,O,q,f],!0);else{const c=Math.max(...M.map(D=>D.dims.at(0)));e=(0,p.full)([Z,c,q,f],!0);const P=e.data,J=c*q*f;for(let D=0;D<Z;++D){const j=M[D].dims[0];if(j<c){M[D]=(0,p.cat)([M[D],(0,p.full)([c-j,Q,q,f],0)],0);const Ie=D*J+j*q*f,ge=(D+1)*J;P.fill(!1,Ie,ge)}}I=(0,p.stack)(M,0)}return{pixel_values:I,pixel_attention_mask:e,original_sizes:N,reshaped_input_sizes:V,..._?{rows:B,cols:S}:{}}}async split_image(y,{longest_edge:k}){const _=k,v=k,M=[],[B,S]=y.dims.slice(-2);let N=0,V=0;if(B>_||S>v){N=Math.ceil(B/_),V=Math.ceil(S/v);const Z=Math.ceil(B/N),O=Math.ceil(S/V);for(let f=0;f<N;++f)for(let I=0;I<V;++I){let e,c,P,J;f===N-1?(c=B-Z,J=B):(c=f*Z,J=(f+1)*Z),I===V-1?(e=S-O,P=S):(e=I*O,P=(I+1)*O);const D=[c,e],j=[J,P],Ie=await(0,p.slice)(y,D,j,[2,3]);M.push(Ie)}const Q=_,q=v;B===Q&&S===q||(y=await(0,p.interpolate_4d)(y,{size:[Q,q]}))}return M.push(y),{frames:M,num_splits_h:N,num_splits_w:V}}}},"./src/models/idefics3/processing_idefics3.js":(i,o,a)=>{a.r(o),a.d(o,{Idefics3Processor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");a("./src/utils/image.js");var C=a("./src/utils/core.js");function y(_,v,M,B,S,N){return _===0&&v===0?function(V,Z,O,Q){return`${Z}${Q}`+O.repeat(V)+`${Z}`}(M,B,S,N):function(V,Z,O,Q,q,f){let I="";for(let e=0;e<Z;++e){for(let c=0;c<O;++c)I+=Q+`<row_${e+1}_col_${c+1}>`+q.repeat(V);I+=`
`}return I+=`
${Q}${f}`+q.repeat(V)+`${Q}`,I}(M,_,v,B,S,N)}class k extends u.Processor{constructor(){super(...arguments);Te(this,"fake_image_token","<fake_token_around_image>");Te(this,"image_token","<image>");Te(this,"global_img_token","<global-img>")}async _call(M,B=null,S={}){let N;S.return_row_col_info??(S.return_row_col_info=!0),B&&(N=await this.image_processor(B,S)),Array.isArray(M)||(M=[M]);const V=N.rows??[new Array(M.length).fill(0)],Z=N.cols??[new Array(M.length).fill(0)],O=this.config.image_seq_len,Q=[],q=[];for(let f=0;f<M.length;++f){const I=M[f],e=V[f],c=Z[f];Q.push((0,C.count)(I,this.image_token));const P=e.map((j,Ie)=>y(j,c[Ie],O,this.fake_image_token,this.image_token,this.global_img_token)),J=I.split(this.image_token);if(J.length===0)throw new Error("The image token should be present in the text.");let D=J[0];for(let j=0;j<P.length;++j)D+=P[j]+J[j+1];q.push(D)}return{...this.tokenizer(q),...N}}}Te(k,"image_processor_class",p.AutoImageProcessor),Te(k,"tokenizer_class",h.AutoTokenizer),Te(k,"uses_processor_config",!0)},"./src/models/image_processors.js":(i,o,a)=>{a.r(o),a.d(o,{BeitFeatureExtractor:()=>u.BeitFeatureExtractor,BitImageProcessor:()=>p.BitImageProcessor,CLIPFeatureExtractor:()=>C.CLIPFeatureExtractor,CLIPImageProcessor:()=>C.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>h.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>y.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>y.ConvNextImageProcessor,DPTFeatureExtractor:()=>M.DPTFeatureExtractor,DPTImageProcessor:()=>M.DPTImageProcessor,DeiTFeatureExtractor:()=>k.DeiTFeatureExtractor,DeiTImageProcessor:()=>k.DeiTImageProcessor,DetrFeatureExtractor:()=>_.DetrFeatureExtractor,DetrImageProcessor:()=>_.DetrImageProcessor,DonutFeatureExtractor:()=>v.DonutFeatureExtractor,DonutImageProcessor:()=>v.DonutImageProcessor,EfficientNetImageProcessor:()=>B.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>S.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>N.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>V.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>O.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>Q.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>q.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>I.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>I.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>e.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>e.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>c.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>c.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>J.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>J.MobileViTImageProcessor,NougatImageProcessor:()=>D.NougatImageProcessor,OwlViTFeatureExtractor:()=>Ie.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Ie.OwlViTImageProcessor,Owlv2ImageProcessor:()=>j.Owlv2ImageProcessor,Phi3VImageProcessor:()=>ge.Phi3VImageProcessor,PvtImageProcessor:()=>ke.PvtImageProcessor,Qwen2VLImageProcessor:()=>Ee.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Ne.RTDetrImageProcessor,SamImageProcessor:()=>Xe.SamImageProcessor,SegformerFeatureExtractor:()=>At.SegformerFeatureExtractor,SegformerImageProcessor:()=>At.SegformerImageProcessor,SiglipImageProcessor:()=>xe.SiglipImageProcessor,Swin2SRImageProcessor:()=>ye.Swin2SRImageProcessor,VLMImageProcessor:()=>Z.VLMImageProcessor,ViTFeatureExtractor:()=>ue.ViTFeatureExtractor,ViTImageProcessor:()=>ue.ViTImageProcessor,VitMatteImageProcessor:()=>ie.VitMatteImageProcessor,VitPoseImageProcessor:()=>be.VitPoseImageProcessor,YolosFeatureExtractor:()=>Ye.YolosFeatureExtractor,YolosImageProcessor:()=>Ye.YolosImageProcessor});var u=a("./src/models/beit/image_processing_beit.js"),p=a("./src/models/bit/image_processing_bit.js"),h=a("./src/models/chinese_clip/image_processing_chinese_clip.js"),C=a("./src/models/clip/image_processing_clip.js"),y=a("./src/models/convnext/image_processing_convnext.js"),k=a("./src/models/deit/image_processing_deit.js"),_=a("./src/models/detr/image_processing_detr.js"),v=a("./src/models/donut/image_processing_donut.js"),M=a("./src/models/dpt/image_processing_dpt.js"),B=a("./src/models/efficientnet/image_processing_efficientnet.js"),S=a("./src/models/glpn/image_processing_glpn.js"),N=a("./src/models/grounding_dino/image_processing_grounding_dino.js"),V=a("./src/models/idefics3/image_processing_idefics3.js"),Z=a("./src/models/janus/image_processing_janus.js"),O=a("./src/models/jina_clip/image_processing_jina_clip.js"),Q=a("./src/models/llava_onevision/image_processing_llava_onevision.js"),q=a("./src/models/mask2former/image_processing_mask2former.js"),f=a("./src/models/maskformer/image_processing_maskformer.js"),I=a("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),e=a("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),c=a("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=a("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),J=a("./src/models/mobilevit/image_processing_mobilevit.js"),D=a("./src/models/nougat/image_processing_nougat.js"),j=a("./src/models/owlv2/image_processing_owlv2.js"),Ie=a("./src/models/owlvit/image_processing_owlvit.js"),ge=a("./src/models/phi3_v/image_processing_phi3_v.js"),ke=a("./src/models/pvt/image_processing_pvt.js"),Ee=a("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Ne=a("./src/models/rt_detr/image_processing_rt_detr.js"),Xe=a("./src/models/sam/image_processing_sam.js"),At=a("./src/models/segformer/image_processing_segformer.js"),xe=a("./src/models/siglip/image_processing_siglip.js"),ye=a("./src/models/swin2sr/image_processing_swin2sr.js"),ue=a("./src/models/vit/image_processing_vit.js"),ie=a("./src/models/vitmatte/image_processing_vitmatte.js"),be=a("./src/models/vitpose/image_processing_vitpose.js"),Ye=a("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(i,o,a)=>{a.r(o),a.d(o,{VLMImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(C){super({do_pad:!0,pad_size:{width:C.image_size,height:C.image_size},...C}),this.constant_values=this.config.background_color.map(y=>y*this.rescale_factor)}pad_image(C,y,k,_){return super.pad_image(C,y,k,{constant_values:this.constant_values,center:!0,..._})}}},"./src/models/janus/processing_janus.js":(i,o,a)=>{a.r(o),a.d(o,{VLChatProcessor:()=>_});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js"),C=a("./src/utils/core.js"),y=a("./src/utils/tensor.js"),k=a("./src/utils/image.js");class _ extends u.Processor{constructor(M,B){super(M,B),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(M,{images:B=null,chat_template:S="default"}={}){B?Array.isArray(B)||(B=[B]):B=await Promise.all(M.filter(J=>J.images).flatMap(J=>J.images).map(J=>k.RawImage.read(J)));const N=this.tokenizer,V=J=>N.encode(J,{add_special_tokens:!1}),Z=N.apply_chat_template(M,{tokenize:!1,add_generation_prompt:!0,chat_template:S}).split(this.image_tag),O=Z.length-1;if(B.length!==O)throw new Error(`Number of images provided (${B.length}) does not match number of "${this.image_tag}" image tags (${O})`);const[Q,q,f]=N.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let I=V(Z[0]),e=new Array(I.length).fill(!1);for(let J=1;J<Z.length;++J){const D=new Array(this.num_image_tokens).fill(Q),j=V(Z[J]);I=(0,C.mergeArrays)(I,[q],D,[f],j);const Ie=new Array(this.num_image_tokens).fill(!0);e=(0,C.mergeArrays)(e,[!1],Ie,[!1],new Array(j.length).fill(!1))}const c=[1,I.length],P={input_ids:new y.Tensor("int64",I,c),attention_mask:new y.Tensor("int64",new Array(I.length).fill(1),c),images_seq_mask:new y.Tensor("bool",e,c),images_emb_mask:new y.Tensor("bool",new Array(O*this.num_image_tokens).fill(!0),[1,O,this.num_image_tokens])};if(B&&B.length>0){const J=await this.image_processor(B);return J.pixel_values.unsqueeze_(0),{...P,...J}}return P}}Te(_,"image_processor_class",p.AutoImageProcessor),Te(_,"tokenizer_class",h.AutoTokenizer),Te(_,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(i,o,a)=>{a.r(o),a.d(o,{JinaCLIPImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(C){const{resize_mode:y,fill_color:k,interpolation:_,size:v,...M}=C;super({...M,size:y==="squash"?{width:v,height:v}:y==="shortest"?{shortest_edge:v}:{longest_edge:v},resample:_==="bicubic"?3:2,do_center_crop:!0,crop_size:v,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(i,o,a)=>{a.r(o),a.d(o,{JinaCLIPProcessor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");class C extends u.Processor{async _call(k=null,_=null,v={}){if(!k&&!_)throw new Error("Either text or images must be provided");return{...k?this.tokenizer(k,v):{},..._?await this.image_processor(_,v):{}}}}Te(C,"tokenizer_class",h.AutoTokenizer),Te(C,"image_processor_class",p.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(i,o,a)=>{a.r(o),a.d(o,{LlavaOnevisionImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(i,o,a)=>{a.r(o),a.d(o,{Mask2FormerImageProcessor:()=>p});var u=a("./src/models/maskformer/image_processing_maskformer.js");class p extends u.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(i,o,a)=>{a.r(o),a.d(o,{MaskFormerFeatureExtractor:()=>h,MaskFormerImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_panoptic_segmentation(...y){return(0,u.post_process_panoptic_segmentation)(...y)}post_process_instance_segmentation(...y){return(0,u.post_process_instance_segmentation)(...y)}}class h extends p{}},"./src/models/mgp_str/processing_mgp_str.js":(i,o,a)=>{a.r(o),a.d(o,{MgpstrProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js"),C=a("./src/utils/maths.js");const y={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class k extends u.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(v,M){if(!y.hasOwnProperty(M))throw new Error(`Format ${M} is not supported.`);const[B,S]=y[M],N=this[B].bind(this),[V,Z]=v.dims,O=[],Q=[],q=v.tolist();for(let f=0;f<V;++f){const I=q[f],e=[],c=[];for(let J=1;J<Z;++J){const[D,j]=(0,C.max)((0,C.softmax)(I[J]));if(c.push(D),j==S)break;e.push(j)}const P=c.length>0?c.reduce((J,D)=>J*D,1):0;Q.push(e),O.push(P)}return[N(Q),O]}char_decode(v){return this.char_tokenizer.batch_decode(v).map(M=>M.replaceAll(" ",""))}bpe_decode(v){return this.bpe_tokenizer.batch_decode(v)}wp_decode(v){return this.wp_tokenizer.batch_decode(v).map(M=>M.replaceAll(" ",""))}batch_decode([v,M,B]){const[S,N]=this._decode_helper(v,"char"),[V,Z]=this._decode_helper(M,"bpe"),[O,Q]=this._decode_helper(B,"wp"),q=[],f=[];for(let I=0;I<S.length;++I){const[e,c]=(0,C.max)([N[I],Z[I],Q[I]]);q.push([S[I],V[I],O[I]][c]),f.push(e)}return{generated_text:q,scores:f,char_preds:S,bpe_preds:V,wp_preds:O}}static async from_pretrained(...v){const M=await super.from_pretrained(...v),B=await h.AutoTokenizer.from_pretrained("Xenova/gpt2"),S=await h.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return M.components={image_processor:M.image_processor,char_tokenizer:M.tokenizer,bpe_tokenizer:B,wp_tokenizer:S},M}async _call(v,M=null){const B=await this.image_processor(v);return M&&(B.labels=this.tokenizer(M).input_ids),B}}Te(k,"tokenizer_class",h.AutoTokenizer),Te(k,"image_processor_class",p.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV1FeatureExtractor:()=>h,MobileNetV1ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV2FeatureExtractor:()=>h,MobileNetV2ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV3FeatureExtractor:()=>h,MobileNetV3ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV4FeatureExtractor:()=>h,MobileNetV4ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilevit/image_processing_mobilevit.js":(i,o,a)=>{a.r(o),a.d(o,{MobileViTFeatureExtractor:()=>h,MobileViTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/moonshine/feature_extraction_moonshine.js":(i,o,a)=>{a.r(o),a.d(o,{MoonshineFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js");class h extends u.FeatureExtractor{async _call(y){(0,u.validate_audio_inputs)(y,"MoonshineFeatureExtractor"),y instanceof Float64Array&&(y=new Float32Array(y));const k=[1,y.length];return{input_values:new p.Tensor("float32",y,k)}}}},"./src/models/moonshine/processing_moonshine.js":(i,o,a)=>{a.r(o),a.d(o,{MoonshineProcessor:()=>C});var u=a("./src/models/auto/feature_extraction_auto.js"),p=a("./src/tokenizers.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",u.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(i,o,a)=>{a.r(o),a.d(o,{NougatImageProcessor:()=>p});var u=a("./src/models/donut/image_processing_donut.js");class p extends u.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(i,o,a)=>{a.r(o),a.d(o,{Owlv2ImageProcessor:()=>p});var u=a("./src/models/owlvit/image_processing_owlvit.js");class p extends u.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(i,o,a)=>{a.r(o),a.d(o,{OwlViTFeatureExtractor:()=>h,OwlViTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_object_detection(...y){return(0,u.post_process_object_detection)(...y)}}class h extends p{}},"./src/models/owlvit/processing_owlvit.js":(i,o,a)=>{a.r(o),a.d(o,{OwlViTProcessor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");class C extends u.Processor{}Te(C,"tokenizer_class",h.AutoTokenizer),Te(C,"image_processor_class",p.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(i,o,a)=>{a.r(o),a.d(o,{PaliGemmaProcessor:()=>y});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");const C="<image>";class y extends u.Processor{async _call(_,v=null,M={}){v||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),v=""),Array.isArray(_)||(_=[_]),Array.isArray(v)||(v=[v]);const B=this.tokenizer.bos_token,S=this.image_processor.config.image_seq_length;let N;v.some(Z=>Z.includes(C))?N=v.map(Z=>{const O=Z.replaceAll(C,C.repeat(S)),Q=O.lastIndexOf(C),q=Q===-1?0:Q+7;return O.slice(0,q)+B+O.slice(q)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),N=v.map(Z=>function(O,Q,q,f,I){return`${f.repeat(q*I)}${Q}${O}
`}(Z,B,S,C,_.length)));const V=this.tokenizer(N,M);return{...await this.image_processor(_,M),...V}}}Te(y,"tokenizer_class",h.AutoTokenizer),Te(y,"image_processor_class",p.AutoImageProcessor),Te(y,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(i,o,a)=>{a.r(o),a.d(o,{Phi3VImageProcessor:()=>v});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");const h=336,C=[2,3],{ceil:y,floor:k,sqrt:_}=Math;class v extends u.ImageProcessor{constructor(B){super({...B,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=B.num_crops}calc_num_image_tokens_from_image_size(B,S){const{num_img_tokens:N}=this.config;return k((k(S/h)*k(B/h)+1)*N+1+(k(S/h)+1)*_(N))}get_resize_output_image_size(B,S){const N=this._num_crops,[V,Z]=B.size;let O=V/Z,Q=1;for(;Q*Math.ceil(Q/O)<=N;)Q+=1;Q-=1;const q=Math.floor(336*Q);return[q,Math.floor(q/O)]}pad_image(B,S,N,V={}){const[Z,O]=S,Q=h*y(Z/h),q=h*y(O/h),f=[1,1,1].map((I,e)=>(I-this.image_mean[e])/this.image_std[e]);return super.pad_image(B,S,{width:q,height:Q},{center:!0,constant_values:f,...V})}async _call(B,{num_crops:S=null}={}){if(this._num_crops=S??(S=this.config.num_crops),S<4||_(S)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(B)||(B=[B]);const N=B.length,V=await Promise.all(B.map(I=>this.preprocess(I))),Z=V.map(I=>I.original_size),O=V.map(I=>I.reshaped_input_size),Q=[];for(const{pixel_values:I}of V){I.unsqueeze_(0);const[e,c]=I.dims.slice(-2),P=await(0,p.interpolate_4d)(I,{size:[h,h],mode:"bicubic"});if(S>0){const J=[],D=_(S),j=k(c/D),Ie=k(e/D);for(let ke=0;ke<D;++ke)for(let Ee=0;Ee<D;++Ee){let Ne,Xe,At,xe;ke===D-1?(Xe=e-Ie,xe=e):(Xe=ke*Ie,xe=(ke+1)*Ie),Ee===D-1?(Ne=c-j,At=c):(Ne=Ee*j,At=(Ee+1)*j);const ye=[Xe,Ne],ue=[xe,At],ie=await(0,p.slice)(I,ye,ue,C);J.push(ie)}const ge=await(0,p.interpolate_4d)((0,p.cat)(J,0),{size:[h,h],mode:"bicubic"});Q.push((0,p.cat)([P,ge],0))}else Q.push(P)}const q=(0,p.stack)(Q,0),f=O.map(I=>I.map(e=>h*y(e/h)));return{pixel_values:q,original_sizes:Z,reshaped_input_sizes:O,image_sizes:new p.Tensor("int64",f.flat(),[N,2]),num_img_tokens:f.map(([I,e])=>this.calc_num_image_tokens_from_image_size(e,I))}}}},"./src/models/phi3_v/processing_phi3_v.js":(i,o,a)=>{a.r(o),a.d(o,{Phi3VProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");a("./src/utils/image.js");const C="<|image|>",y=/<\|image_\d+\|>/g;class k extends u.Processor{async _call(v,M=null,{padding:B=!0,truncation:S=!0,num_crops:N=null}={}){let V,Z;if(Array.isArray(v)||(v=[v]),M){Z=await this.image_processor(M,{num_crops:N});const{num_img_tokens:O}=Z,Q=v.map((f,I)=>f.split(y).join(C.repeat(O[I])));V=this.tokenizer(Q,{padding:B,truncation:S});const q=this.tokenizer.model.convert_tokens_to_ids([C])[0];V.input_ids.map_(f=>f==q?-f:f)}else V=this.tokenizer(v);return{...V,...Z}}}Te(k,"image_processor_class",p.AutoImageProcessor),Te(k,"tokenizer_class",h.AutoTokenizer)},"./src/models/processors.js":(i,o,a)=>{a.r(o),a.d(o,{Florence2Processor:()=>u.Florence2Processor,GroundingDinoProcessor:()=>p.GroundingDinoProcessor,Idefics3Processor:()=>h.Idefics3Processor,JinaCLIPProcessor:()=>y.JinaCLIPProcessor,MgpstrProcessor:()=>k.MgpstrProcessor,MoonshineProcessor:()=>_.MoonshineProcessor,OwlViTProcessor:()=>v.OwlViTProcessor,PaliGemmaProcessor:()=>B.PaliGemmaProcessor,Phi3VProcessor:()=>M.Phi3VProcessor,PyAnnoteProcessor:()=>S.PyAnnoteProcessor,Qwen2VLProcessor:()=>N.Qwen2VLProcessor,SamProcessor:()=>V.SamProcessor,SpeechT5Processor:()=>Z.SpeechT5Processor,VLChatProcessor:()=>C.VLChatProcessor,Wav2Vec2Processor:()=>O.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>Q.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>q.WhisperProcessor});var u=a("./src/models/florence2/processing_florence2.js"),p=a("./src/models/grounding_dino/processing_grounding_dino.js"),h=a("./src/models/idefics3/processing_idefics3.js"),C=a("./src/models/janus/processing_janus.js"),y=a("./src/models/jina_clip/processing_jina_clip.js"),k=a("./src/models/mgp_str/processing_mgp_str.js"),_=a("./src/models/moonshine/processing_moonshine.js"),v=a("./src/models/owlvit/processing_owlvit.js"),M=a("./src/models/phi3_v/processing_phi3_v.js"),B=a("./src/models/paligemma/processing_paligemma.js"),S=a("./src/models/pyannote/processing_pyannote.js"),N=a("./src/models/qwen2_vl/processing_qwen2_vl.js"),V=a("./src/models/sam/processing_sam.js"),Z=a("./src/models/speecht5/processing_speecht5.js"),O=a("./src/models/wav2vec2/processing_wav2vec2.js"),Q=a("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),q=a("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(i,o,a)=>{a.r(o),a.d(o,{PvtImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(i,o,a)=>{a.r(o),a.d(o,{PyAnnoteFeatureExtractor:()=>C});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/maths.js");class C extends u.FeatureExtractor{async _call(k){(0,u.validate_audio_inputs)(k,"PyAnnoteFeatureExtractor"),k instanceof Float64Array&&(k=new Float32Array(k));const _=[1,1,k.length];return{input_values:new p.Tensor("float32",k,_)}}samples_to_frames(k){return(k-this.config.offset)/this.config.step}post_process_speaker_diarization(k,_){const v=_/this.samples_to_frames(_)/this.config.sampling_rate,M=[];for(const B of k.tolist()){const S=[];let N=-1;for(let V=0;V<B.length;++V){const Z=(0,h.softmax)(B[V]),[O,Q]=(0,h.max)(Z),[q,f]=[V,V+1];Q!==N?(N=Q,S.push({id:Q,start:q,end:f,score:O})):(S.at(-1).end=f,S.at(-1).score+=O)}M.push(S.map(({id:V,start:Z,end:O,score:Q})=>({id:V,start:Z*v,end:O*v,confidence:Q/(O-Z)})))}return M}}},"./src/models/pyannote/processing_pyannote.js":(i,o,a)=>{a.r(o),a.d(o,{PyAnnoteProcessor:()=>h});var u=a("./src/base/processing_utils.js"),p=a("./src/models/pyannote/feature_extraction_pyannote.js");class h extends u.Processor{async _call(y){return await this.feature_extractor(y)}post_process_speaker_diarization(...y){return this.feature_extractor.post_process_speaker_diarization(...y)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Te(h,"feature_extractor_class",p.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(i,o,a)=>{a.r(o),a.d(o,{Qwen2VLImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(y,...k){const{pixel_values:_,original_sizes:v,reshaped_input_sizes:M}=await super._call(y,...k);let B=_;const{temporal_patch_size:S,merge_size:N,patch_size:V}=this.config;B.dims[0]===1&&(B=(0,p.cat)(Array.from({length:S},()=>B),0));const Z=B.dims[0]/S,O=B.dims[1],Q=Math.floor(B.dims[2]/V),q=Math.floor(B.dims[3]/V);return{pixel_values:B.view(Z,S,O,Math.floor(Q/N),N,V,Math.floor(q/N),N,V).permute(0,3,6,4,7,2,1,5,8).view(Z*Q*q,O*S*V*V),image_grid_thw:new p.Tensor("int64",[Z,Q,q],[1,3]),original_sizes:v,reshaped_input_sizes:M}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(i,o,a)=>{a.r(o),a.d(o,{Qwen2VLProcessor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");a("./src/utils/image.js");class C extends u.Processor{async _call(k,_=null,...v){let M,B;if(Array.isArray(k)||(k=[k]),_&&(M=await this.image_processor(_),B=M.image_grid_thw),B){let S=this.image_processor.config.merge_size**2,N=0;const V=B.tolist();k=k.map(Z=>{for(;Z.includes("<|image_pad|>");){const O=Number(V[N++].reduce((Q,q)=>Q*q,1n));Z=Z.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(O/S)))}return Z.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(k),...M}}}Te(C,"image_processor_class",p.AutoImageProcessor),Te(C,"tokenizer_class",h.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(i,o,a)=>{a.r(o),a.d(o,{RTDetrImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_object_detection(...C){return(0,u.post_process_object_detection)(...C)}}},"./src/models/sam/image_processing_sam.js":(i,o,a)=>{a.r(o),a.d(o,{SamImageProcessor:()=>C});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/core.js"),h=a("./src/utils/tensor.js");class C extends u.ImageProcessor{reshape_input_points(k,_,v,M=!1){k=structuredClone(k);let B=(0,p.calculateDimensions)(k);if(B.length===3)M||(B=[1,...B]),k=[k];else if(B.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let S=0;S<k.length;++S){let N=_[S],V=v[S],Z=[V[0]/N[0],V[1]/N[1]];for(let O=0;O<k[S].length;++O)for(let Q=0;Q<k[S][O].length;++Q)for(let q=0;q<k[S][O][Q].length;++q)k[S][O][Q][q]*=Z[q%2]}return new h.Tensor("float32",Float32Array.from(k.flat(1/0)),B)}add_input_labels(k,_){let v=(0,p.calculateDimensions)(k);if(v.length===2)v=[1,...v],k=[k];else if(v.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(v.some((M,B)=>M!==_.dims[B]))throw Error(`The first ${v.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new h.Tensor("int64",k.flat(1/0).map(BigInt),v)}async _call(k,{input_points:_=null,input_labels:v=null,input_boxes:M=null}={}){const B=await super._call(k);if(_&&(B.input_points=this.reshape_input_points(_,B.original_sizes,B.reshaped_input_sizes)),v){if(!B.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");B.input_labels=this.add_input_labels(v,B.input_points)}return M&&(B.input_boxes=this.reshape_input_points(M,B.original_sizes,B.reshaped_input_sizes,!0)),B}async post_process_masks(k,_,v,{mask_threshold:M=0,binarize:B=!0,pad_size:S=null}={}){const N=[],V=[(S=S??this.pad_size).height,S.width];for(let Z=0;Z<_.length;++Z){const O=_[Z],Q=v[Z];let q=await(0,h.interpolate_4d)(k[Z],{mode:"bilinear",size:V});if(q=q.slice(null,null,[0,Q[0]],[0,Q[1]]),q=await(0,h.interpolate_4d)(q,{mode:"bilinear",size:O}),B){const f=q.data,I=new Uint8Array(f.length);for(let e=0;e<f.length;++e)f[e]>M&&(I[e]=1);q=new h.Tensor("bool",I,q.dims)}N.push(q)}return N}generate_crop_boxes(k,_,{crop_n_layers:v=0,overlap_ratio:M=.3413333333333333,points_per_crop:B=32,crop_n_points_downscale_factor:S=1}={}){}}},"./src/models/sam/processing_sam.js":(i,o,a)=>{a.r(o),a.d(o,{SamProcessor:()=>h});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js");class h extends u.Processor{async _call(...y){return await this.image_processor(...y)}post_process_masks(...y){return this.image_processor.post_process_masks(...y)}reshape_input_points(...y){return this.image_processor.reshape_input_points(...y)}}Te(h,"image_processor_class",p.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(i,o,a)=>{a.r(o),a.d(o,{SeamlessM4TFeatureExtractor:()=>C});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/audio.js");class C extends u.FeatureExtractor{constructor(k){super(k);const _=this.config.sampling_rate,v=(0,h.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(_/2),_,null,"kaldi",!0);for(let M=0;M<v.length;++M)v[M].push(0);this.mel_filters=v,this.window=(0,h.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(k,_){return k=k.map(v=>32768*v),(0,h.spectrogram)(k,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:_,transpose:!0})}async _call(k,{padding:_=!0,pad_to_multiple_of:v=2,do_normalize_per_mel_bins:M=!0,return_attention_mask:B=!0}={}){(0,u.validate_audio_inputs)(k,"SeamlessM4TFeatureExtractor");let S,N=await this._extract_fbank_features(k,this.config.max_length);if(M){const[f,I]=N.dims,e=N.data;for(let c=0;c<I;++c){let P=0;for(let Ie=0;Ie<f;++Ie)P+=e[Ie*I+c];const J=P/f;let D=0;for(let Ie=0;Ie<f;++Ie)D+=(e[Ie*I+c]-J)**2;D/=f-1;const j=Math.sqrt(D+1e-7);for(let Ie=0;Ie<f;++Ie){const ge=Ie*I+c;e[ge]=(e[ge]-J)/j}}}if(_){const[f,I]=N.dims,e=N.data,c=f%v;if(c>0){const P=new Float32Array(I*(f+c));P.set(e),P.fill(this.config.padding_value,e.length);const J=f+c;N=new p.Tensor(N.type,P,[J,I]),B&&(S=new p.Tensor("int64",new BigInt64Array(J),[1,J]),S.data.fill(1n,0,f))}}const[V,Z]=N.dims,O=this.config.stride;if(V%O!==0)throw new Error(`The number of frames (${V}) must be a multiple of the stride (${O}).`);const Q=N.view(1,Math.floor(V/O),Z*O),q={input_features:Q};if(B){const f=Q.dims[1],I=new BigInt64Array(f);if(S){const e=S.data;for(let c=1,P=0;c<V;c+=O,++P)I[P]=e[c]}else I.fill(1n);q.attention_mask=new p.Tensor("int64",I,[1,f])}return q}}},"./src/models/segformer/image_processing_segformer.js":(i,o,a)=>{a.r(o),a.d(o,{SegformerFeatureExtractor:()=>h,SegformerImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_semantic_segmentation(...y){return(0,u.post_process_semantic_segmentation)(...y)}}class h extends p{}},"./src/models/siglip/image_processing_siglip.js":(i,o,a)=>{a.r(o),a.d(o,{SiglipImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(i,o,a)=>{a.r(o),a.d(o,{SpeechT5FeatureExtractor:()=>p});var u=a("./src/base/feature_extraction_utils.js");class p extends u.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(i,o,a)=>{a.r(o),a.d(o,{SpeechT5Processor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/tokenizers.js"),h=a("./src/models/auto/feature_extraction_auto.js");class C extends u.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",h.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(i,o,a)=>{a.r(o),a.d(o,{Swin2SRImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{pad_image(C,y,k,_={}){const[v,M,B]=y;return super.pad_image(C,y,{width:M+(k-M%k)%k,height:v+(k-v%k)%k},{mode:"symmetric",center:!1,constant_values:-1,..._})}}},"./src/models/vit/image_processing_vit.js":(i,o,a)=>{a.r(o),a.d(o,{ViTFeatureExtractor:()=>h,ViTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/vitmatte/image_processing_vitmatte.js":(i,o,a)=>{a.r(o),a.d(o,{VitMatteImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(y,k){Array.isArray(y)||(y=[y]),Array.isArray(k)||(k=[k]);const _=await Promise.all(y.map(B=>this.preprocess(B))),v=await Promise.all(k.map(B=>this.preprocess(B,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,p.stack)(_.map((B,S)=>(0,p.cat)([B.pixel_values,v[S].pixel_values],0)),0),original_sizes:_.map(B=>B.original_size),reshaped_input_sizes:_.map(B=>B.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(i,o,a)=>{a.r(o),a.d(o,{VitPoseImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_pose_estimation(C,y,{threshold:k=null}={}){const _=C.tolist(),[v,M,B,S]=C.dims,N=[];for(let V=0;V<v;++V){const Z=_[V],O=y[V],Q=[];for(let q=0;q<O.length;++q){const f=O[q],I=[],e=[],c=[],P=f.at(-2)/S,J=f.at(-1)/B;for(let D=0;D<Z.length;++D){let[j,Ie]=[0,0],ge=0,ke=-1/0;const Ee=Z[D];for(let Xe=0;Xe<Ee.length;++Xe){const At=Ee[Xe];for(let xe=0;xe<At.length;++xe){const ye=At[xe];ge+=ye,ke=Math.max(ke,ye),j+=(xe+.5)*ye,Ie+=Xe*ye}}if(k!=null&&ke<k)continue;const Ne=[P*j/ge,J*Ie/ge];I.push(Ne),c.push(D),e.push(ke)}Q.push({bbox:f,scores:e,labels:c,keypoints:I})}N.push(Q)}return N}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(i,o,a)=>{a.r(o),a.d(o,{Wav2Vec2FeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js");class h extends u.FeatureExtractor{_zero_mean_unit_var_norm(y){const k=y.reduce((M,B)=>M+B,0),_=k/y.length,v=y.reduce((M,B)=>M+(B-_)**2,0)/y.length;return y.map(M=>(M-_)/Math.sqrt(v+1e-7))}async _call(y){(0,u.validate_audio_inputs)(y,"Wav2Vec2FeatureExtractor"),y instanceof Float64Array&&(y=new Float32Array(y));let k=y;this.config.do_normalize&&(k=this._zero_mean_unit_var_norm(k));const _=[1,k.length];return{input_values:new p.Tensor("float32",k,_),attention_mask:new p.Tensor("int64",new BigInt64Array(k.length).fill(1n),_)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(i,o,a)=>{a.r(o),a.d(o,{Wav2Vec2Processor:()=>C});var u=a("./src/tokenizers.js"),p=a("./src/models/auto/feature_extraction_auto.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",u.AutoTokenizer),Te(C,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(i,o,a)=>{a.r(o),a.d(o,{Wav2Vec2ProcessorWithLM:()=>C});var u=a("./src/tokenizers.js"),p=a("./src/models/auto/feature_extraction_auto.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",u.AutoTokenizer),Te(C,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(i,o,a)=>{a.r(o),a.d(o,{WeSpeakerFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js");class h extends u.FeatureExtractor{constructor(y){super(y);const k=this.config.sampling_rate,_=(0,p.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(k/2),k,null,"kaldi",!0);for(let v=0;v<_.length;++v)_[v].push(0);this.mel_filters=_,this.window=(0,p.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(y){return y=y.map(k=>32768*k),(0,p.spectrogram)(y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(y){(0,u.validate_audio_inputs)(y,"WeSpeakerFeatureExtractor");const k=(await this._extract_fbank_features(y)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const _=k.mean(1).data,v=k.data,[M,B,S]=k.dims;for(let N=0;N<M;++N){const V=N*B*S,Z=N*S;for(let O=0;O<B;++O){const Q=V+O*S;for(let q=0;q<S;++q)v[Q+q]-=_[Z+q]}}}return{input_features:k}}}},"./src/models/whisper/common_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WHISPER_LANGUAGE_MAPPING:()=>p,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>h,whisper_language_to_code:()=>C});const u=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],p=new Map(u),h=new Map([...u.map(([y,k])=>[k,y]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function C(y){y=y.toLowerCase();let k=h.get(y);if(k===void 0){if(!p.has(y)){const _=y.length===2?p.keys():p.values();throw new Error(`Language "${y}" is not supported. Must be one of: ${JSON.stringify(_)}`)}k=y}return k}},"./src/models/whisper/feature_extraction_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WhisperFeatureExtractor:()=>C});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js"),h=a("./src/utils/maths.js");class C extends u.FeatureExtractor{constructor(k){var _;super(k),(_=this.config).mel_filters??(_.mel_filters=(0,p.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,p.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(k){const _=await(0,p.spectrogram)(k,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),v=_.data,M=(0,h.max)(v)[0];for(let B=0;B<v.length;++B)v[B]=(Math.max(v[B],M-8)+4)/4;return _}async _call(k){let _;return(0,u.validate_audio_inputs)(k,"WhisperFeatureExtractor"),k.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),_=k.slice(0,this.config.n_samples)):(_=new Float32Array(this.config.n_samples),_.set(k)),{input_features:(await this._extract_fbank_features(_)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WhisperGenerationConfig:()=>p});var u=a("./src/generation/configuration_utils.js");class p extends u.GenerationConfig{constructor(){super(...arguments);Te(this,"return_timestamps",null);Te(this,"return_token_timestamps",null);Te(this,"num_frames",null);Te(this,"alignment_heads",null);Te(this,"task",null);Te(this,"language",null);Te(this,"no_timestamps_token_id",null);Te(this,"prompt_ids",null);Te(this,"is_multilingual",null);Te(this,"lang_to_id",null);Te(this,"task_to_id",null);Te(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WhisperProcessor:()=>C});var u=a("./src/models/auto/feature_extraction_auto.js"),p=a("./src/tokenizers.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",u.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(i,o,a)=>{a.r(o),a.d(o,{YolosFeatureExtractor:()=>h,YolosImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_object_detection(...y){return(0,u.post_process_object_detection)(...y)}}class h extends p{}},"./src/ops/registry.js":(i,o,a)=>{a.r(o),a.d(o,{TensorOpRegistry:()=>k});var u=a("./src/backends/onnx.js"),p=a("./src/utils/tensor.js"),h=a("./src/env.js");const C=h.apis.IS_BROWSER_ENV||h.apis.IS_WEBWORKER_ENV,y=async(_,v,M)=>{const B=await(0,u.createInferenceSession)(new Uint8Array(_),v);let S=Promise.resolve();return async N=>{const V=(0,u.isONNXProxy)(),Z=Object.fromEntries(Object.entries(N).map(([Q,q])=>[Q,(V?q.clone():q).ort_tensor])),O=await(S=C?S.then(()=>B.run(Z)):B.run(Z));return Array.isArray(M)?M.map(Q=>new p.Tensor(O[Q])):new p.Tensor(O[M])}};class k{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=y([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=y([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=y([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=y([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=y([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=y([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=y([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=y([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Te(k,"session_options",{})},"./src/pipelines.js":(i,o,a)=>{a.r(o),a.d(o,{AudioClassificationPipeline:()=>Ie,AutomaticSpeechRecognitionPipeline:()=>ke,DepthEstimationPipeline:()=>Ye,DocumentQuestionAnsweringPipeline:()=>ue,FeatureExtractionPipeline:()=>D,FillMaskPipeline:()=>q,ImageClassificationPipeline:()=>Ne,ImageFeatureExtractionPipeline:()=>j,ImageSegmentationPipeline:()=>Xe,ImageToImagePipeline:()=>be,ImageToTextPipeline:()=>Ee,ObjectDetectionPipeline:()=>xe,Pipeline:()=>V,QuestionAnsweringPipeline:()=>Q,SummarizationPipeline:()=>I,Text2TextGenerationPipeline:()=>f,TextClassificationPipeline:()=>Z,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>ie,TokenClassificationPipeline:()=>O,TranslationPipeline:()=>e,ZeroShotAudioClassificationPipeline:()=>ge,ZeroShotClassificationPipeline:()=>J,ZeroShotImageClassificationPipeline:()=>At,ZeroShotObjectDetectionPipeline:()=>ye,pipeline:()=>ft});var u=a("./src/tokenizers.js"),p=a("./src/models.js"),h=a("./src/models/auto/processing_auto.js");a("./src/base/processing_utils.js");var C=a("./src/utils/generic.js"),y=a("./src/utils/core.js"),k=a("./src/utils/maths.js"),_=a("./src/utils/audio.js"),v=a("./src/utils/tensor.js"),M=a("./src/utils/image.js");async function B(pt){return Array.isArray(pt)||(pt=[pt]),await Promise.all(pt.map(ct=>M.RawImage.read(ct)))}async function S(pt,ct){return Array.isArray(pt)||(pt=[pt]),await Promise.all(pt.map(He=>typeof He=="string"||He instanceof URL?(0,_.read_audio)(He,ct):He instanceof Float64Array?new Float32Array(He):He))}function N(pt,ct){ct&&(pt=pt.map(ht=>0|ht));const[He,Re,Se,Qe]=pt;return{xmin:He,ymin:Re,xmax:Se,ymax:Qe}}class V extends C.Callable{constructor({task:ct,model:He,tokenizer:Re=null,processor:Se=null}){super(),this.task=ct,this.model=He,this.tokenizer=Re,this.processor=Se}async dispose(){await this.model.dispose()}}class Z extends V{constructor(ct){super(ct)}async _call(ct,{top_k:He=1}={}){const Re=this.tokenizer(ct,{padding:!0,truncation:!0}),Se=await this.model(Re),Qe=this.model.config.problem_type==="multi_label_classification"?Bt=>Bt.sigmoid():Bt=>new v.Tensor("float32",(0,k.softmax)(Bt.data),Bt.dims),ht=this.model.config.id2label,wt=[];for(const Bt of Se.logits){const Mt=Qe(Bt),oe=await(0,v.topk)(Mt,He),zt=oe[0].tolist(),ve=oe[1].tolist().map((H,ce)=>({label:ht?ht[H]:`LABEL_${H}`,score:zt[ce]}));He===1?wt.push(...ve):wt.push(ve)}return Array.isArray(ct)||He===1?wt:wt[0]}}class O extends V{constructor(ct){super(ct)}async _call(ct,{ignore_labels:He=["O"]}={}){const Re=Array.isArray(ct),Se=this.tokenizer(Re?ct:[ct],{padding:!0,truncation:!0}),Qe=(await this.model(Se)).logits,ht=this.model.config.id2label,wt=[];for(let Bt=0;Bt<Qe.dims[0];++Bt){const Mt=Se.input_ids[Bt],oe=Qe[Bt],zt=[];for(let ve=0;ve<oe.dims[0];++ve){const H=oe[ve],ce=(0,k.max)(H.data)[1],ne=ht?ht[ce]:`LABEL_${ce}`;if(He.includes(ne))continue;const ze=this.tokenizer.decode([Mt[ve].item()],{skip_special_tokens:!0});if(ze==="")continue;const $e=(0,k.softmax)(H.data);zt.push({entity:ne,score:$e[ce],index:ve,word:ze})}wt.push(zt)}return Re?wt:wt[0]}}class Q extends V{constructor(ct){super(ct)}async _call(ct,He,{top_k:Re=1}={}){const Se=this.tokenizer(ct,{text_pair:He,padding:!0,truncation:!0}),{start_logits:Qe,end_logits:ht}=await this.model(Se),wt=Se.input_ids.tolist(),Bt=Se.attention_mask.tolist(),Mt=this.tokenizer.all_special_ids,oe=[];for(let zt=0;zt<Qe.dims[0];++zt){const ve=wt[zt],H=ve.findIndex(It=>It==this.tokenizer.sep_token_id);Bt[zt].map((It,Nt)=>It==1&&(Nt===0||Nt>H&&Mt.findIndex(_t=>_t==ve[Nt])===-1));const ce=Qe[zt].tolist(),ne=ht[zt].tolist();for(let It=1;It<ce.length;++It)(Bt[zt]==0||It<=H||Mt.findIndex(Nt=>Nt==ve[It])!==-1)&&(ce[It]=-1/0,ne[It]=-1/0);const ze=(0,k.softmax)(ce).map((It,Nt)=>[It,Nt]),$e=(0,k.softmax)(ne).map((It,Nt)=>[It,Nt]);ze[0][0]=0,$e[0][0]=0;const gt=(0,y.product)(ze,$e).filter(It=>It[0][1]<=It[1][1]).map(It=>[It[0][1],It[1][1],It[0][0]*It[1][0]]).sort((It,Nt)=>Nt[2]-It[2]);for(let It=0;It<Math.min(gt.length,Re);++It){const[Nt,_t,Vt]=gt[It],Xt=ve.slice(Nt,_t+1),Jt=this.tokenizer.decode(Xt,{skip_special_tokens:!0});oe.push({answer:Jt,score:Vt})}}return Re===1?oe[0]:oe}}class q extends V{constructor(ct){super(ct)}async _call(ct,{top_k:He=5}={}){const Re=this.tokenizer(ct,{padding:!0,truncation:!0}),{logits:Se}=await this.model(Re),Qe=[],ht=Re.input_ids.tolist();for(let wt=0;wt<ht.length;++wt){const Bt=ht[wt],Mt=Bt.findIndex(ce=>ce==this.tokenizer.mask_token_id);if(Mt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const oe=Se[wt][Mt],zt=await(0,v.topk)(new v.Tensor("float32",(0,k.softmax)(oe.data),oe.dims),He),ve=zt[0].tolist(),H=zt[1].tolist();Qe.push(H.map((ce,ne)=>{const ze=Bt.slice();return ze[Mt]=ce,{score:ve[ne],token:Number(ce),token_str:this.tokenizer.decode([ce]),sequence:this.tokenizer.decode(ze,{skip_special_tokens:!0})}}))}return Array.isArray(ct)?Qe:Qe[0]}}class f extends V{constructor(He){super(He);Te(this,"_key","generated_text")}async _call(He,Re={}){Array.isArray(He)||(He=[He]),this.model.config.prefix&&(He=He.map(Mt=>this.model.config.prefix+Mt));const Se=this.model.config.task_specific_params;Se&&Se[this.task]&&Se[this.task].prefix&&(He=He.map(Mt=>Se[this.task].prefix+Mt));const Qe=this.tokenizer,ht={padding:!0,truncation:!0};let wt;wt=this instanceof e&&"_build_translation_inputs"in Qe?Qe._build_translation_inputs(He,ht,Re):Qe(He,ht);const Bt=await this.model.generate({...wt,...Re});return Qe.batch_decode(Bt,{skip_special_tokens:!0}).map(Mt=>({[this._key]:Mt}))}}class I extends f{constructor(He){super(He);Te(this,"_key","summary_text")}}class e extends f{constructor(He){super(He);Te(this,"_key","translation_text")}}function c(pt){return Array.isArray(pt)&&pt.every(ct=>"role"in ct&&"content"in ct)}class P extends V{constructor(ct){super(ct)}async _call(ct,He={}){let Re,Se=!1,Qe=!1;if(typeof ct=="string")Re=ct=[ct];else if(Array.isArray(ct)&&ct.every(H=>typeof H=="string"))Se=!0,Re=ct;else{if(c(ct))ct=[ct];else{if(!Array.isArray(ct)||!ct.every(c))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Se=!0}Qe=!0,Re=ct.map(H=>this.tokenizer.apply_chat_template(H,{tokenize:!1,add_generation_prompt:!0}))}const ht=He.add_special_tokens??!1,wt=!Qe&&(He.return_full_text??!0);this.tokenizer.padding_side="left";const Bt=this.tokenizer(Re,{add_special_tokens:ht,padding:!0,truncation:!0}),Mt=await this.model.generate({...Bt,...He}),oe=this.tokenizer.batch_decode(Mt,{skip_special_tokens:!0});let zt;!wt&&Bt.input_ids.dims.at(-1)>0&&(zt=this.tokenizer.batch_decode(Bt.input_ids,{skip_special_tokens:!0}).map(H=>H.length));const ve=Array.from({length:ct.length},H=>[]);for(let H=0;H<oe.length;++H){const ce=Math.floor(H/Mt.dims[0]*ct.length);zt&&(oe[H]=oe[H].slice(zt[ce])),ve[ce].push({generated_text:Qe?[...ct[ce],{role:"assistant",content:oe[H]}]:oe[H]})}return Se||ve.length!==1?ve:ve[0]}}class J extends V{constructor(ct){super(ct),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([He,Re])=>[He.toLowerCase(),Re])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(ct,He,{hypothesis_template:Re="This example is {}.",multi_label:Se=!1}={}){const Qe=Array.isArray(ct);Qe||(ct=[ct]),Array.isArray(He)||(He=[He]);const ht=He.map(Mt=>Re.replace("{}",Mt)),wt=Se||He.length===1,Bt=[];for(const Mt of ct){const oe=[];for(const H of ht){const ce=this.tokenizer(Mt,{text_pair:H,padding:!0,truncation:!0}),ne=await this.model(ce);wt?oe.push([ne.logits.data[this.contradiction_id],ne.logits.data[this.entailment_id]]):oe.push(ne.logits.data[this.entailment_id])}const zt=wt?oe.map(H=>(0,k.softmax)(H)[1]):(0,k.softmax)(oe),ve=zt.map((H,ce)=>[H,ce]).sort((H,ce)=>ce[0]-H[0]);Bt.push({sequence:Mt,labels:ve.map(H=>He[H[1]]),scores:ve.map(H=>H[0])})}return Qe?Bt:Bt[0]}}class D extends V{constructor(ct){super(ct)}async _call(ct,{pooling:He="none",normalize:Re=!1,quantize:Se=!1,precision:Qe="binary"}={}){const ht=this.tokenizer(ct,{padding:!0,truncation:!0}),wt=await this.model(ht);let Bt=wt.last_hidden_state??wt.logits??wt.token_embeddings;if(He!=="none")if(He==="mean")Bt=(0,v.mean_pooling)(Bt,ht.attention_mask);else{if(He!=="cls")throw Error(`Pooling method '${He}' not supported.`);Bt=Bt.slice(null,0)}return Re&&(Bt=Bt.normalize(2,-1)),Se&&(Bt=(0,v.quantize_embeddings)(Bt,Qe)),Bt}}class j extends V{constructor(ct){super(ct)}async _call(ct,{pool:He=null}={}){const Re=await B(ct),{pixel_values:Se}=await this.processor(Re),Qe=await this.model({pixel_values:Se});let ht;if(He){if(!("pooler_output"in Qe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");ht=Qe.pooler_output}else ht=Qe.last_hidden_state??Qe.logits??Qe.image_embeds;return ht}}class Ie extends V{constructor(ct){super(ct)}async _call(ct,{top_k:He=5}={}){const Re=this.processor.feature_extractor.config.sampling_rate,Se=await S(ct,Re),Qe=this.model.config.id2label,ht=[];for(const wt of Se){const Bt=await this.processor(wt),Mt=(await this.model(Bt)).logits[0],oe=await(0,v.topk)(new v.Tensor("float32",(0,k.softmax)(Mt.data),Mt.dims),He),zt=oe[0].tolist(),ve=oe[1].tolist().map((H,ce)=>({label:Qe?Qe[H]:`LABEL_${H}`,score:zt[ce]}));ht.push(ve)}return Array.isArray(ct)?ht:ht[0]}}class ge extends V{constructor(ct){super(ct)}async _call(ct,He,{hypothesis_template:Re="This is a sound of {}."}={}){const Se=!Array.isArray(ct);Se&&(ct=[ct]);const Qe=He.map(oe=>Re.replace("{}",oe)),ht=this.tokenizer(Qe,{padding:!0,truncation:!0}),wt=this.processor.feature_extractor.config.sampling_rate,Bt=await S(ct,wt),Mt=[];for(const oe of Bt){const zt=await this.processor(oe),ve=await this.model({...ht,...zt}),H=(0,k.softmax)(ve.logits_per_audio.data);Mt.push([...H].map((ce,ne)=>({score:ce,label:He[ne]})))}return Se?Mt[0]:Mt}}class ke extends V{constructor(ct){super(ct)}async _call(ct,He={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(ct,He);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(ct,He);case"moonshine":return this._call_moonshine(ct,He);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(ct,He){He.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),He.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Re=!Array.isArray(ct);Re&&(ct=[ct]);const Se=this.processor.feature_extractor.config.sampling_rate,Qe=await S(ct,Se),ht=[];for(const wt of Qe){const Bt=await this.processor(wt),Mt=(await this.model(Bt)).logits[0],oe=[];for(const ve of Mt)oe.push((0,k.max)(ve.data)[1]);const zt=this.tokenizer.decode(oe);ht.push({text:zt})}return Re?ht[0]:ht}async _call_whisper(ct,He){const Re=He.return_timestamps??!1,Se=He.chunk_length_s??0,Qe=He.force_full_sequences??!1;let ht=He.stride_length_s??null;const wt={...He};Re==="word"&&(wt.return_token_timestamps=!0,wt.return_timestamps=!1);const Bt=!Array.isArray(ct);Bt&&(ct=[ct]);const Mt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,oe=this.processor.feature_extractor.config.hop_length,zt=this.processor.feature_extractor.config.sampling_rate,ve=await S(ct,zt),H=[];for(const ce of ve){let ne=[];if(Se>0){if(ht===null)ht=Se/6;else if(Se<=ht)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const gt=zt*Se,It=zt*ht,Nt=gt-2*It;let _t=0;for(;;){const Vt=_t+gt,Xt=ce.subarray(_t,Vt),Jt=await this.processor(Xt),wr=_t===0,Rr=Vt>=ce.length;if(ne.push({stride:[Xt.length,wr?0:It,Rr?0:It],input_features:Jt.input_features,is_last:Rr}),Rr)break;_t+=Nt}}else ne=[{stride:[ce.length,0,0],input_features:(await this.processor(ce)).input_features,is_last:!0}];for(const gt of ne){wt.num_frames=Math.floor(gt.stride[0]/oe);const It=await this.model.generate({inputs:gt.input_features,...wt});Re==="word"?(gt.tokens=It.sequences.tolist()[0],gt.token_timestamps=It.token_timestamps.tolist()[0].map(Nt=>(0,k.round)(Nt,2))):gt.tokens=It[0].tolist(),gt.stride=gt.stride.map(Nt=>Nt/zt)}const[ze,$e]=this.tokenizer._decode_asr(ne,{time_precision:Mt,return_timestamps:Re,force_full_sequences:Qe});H.push({text:ze,...$e})}return Bt?H[0]:H}async _call_moonshine(ct,He){const Re=!Array.isArray(ct);Re&&(ct=[ct]);const Se=this.processor.feature_extractor.config.sampling_rate,Qe=await S(ct,Se),ht=[];for(const wt of Qe){const Bt=await this.processor(wt),Mt=6*Math.floor(wt.length/Se),oe=await this.model.generate({max_new_tokens:Mt,...He,...Bt}),zt=this.processor.batch_decode(oe,{skip_special_tokens:!0})[0];ht.push({text:zt})}return Re?ht[0]:ht}}class Ee extends V{constructor(ct){super(ct)}async _call(ct,He={}){const Re=Array.isArray(ct),Se=await B(ct),{pixel_values:Qe}=await this.processor(Se),ht=[];for(const wt of Qe){wt.dims=[1,...wt.dims];const Bt=await this.model.generate({inputs:wt,...He}),Mt=this.tokenizer.batch_decode(Bt,{skip_special_tokens:!0}).map(oe=>({generated_text:oe.trim()}));ht.push(Mt)}return Re?ht:ht[0]}}class Ne extends V{constructor(ct){super(ct)}async _call(ct,{top_k:He=5}={}){const Re=await B(ct),{pixel_values:Se}=await this.processor(Re),Qe=await this.model({pixel_values:Se}),ht=this.model.config.id2label,wt=[];for(const Bt of Qe.logits){const Mt=await(0,v.topk)(new v.Tensor("float32",(0,k.softmax)(Bt.data),Bt.dims),He),oe=Mt[0].tolist(),zt=Mt[1].tolist().map((ve,H)=>({label:ht?ht[ve]:`LABEL_${ve}`,score:oe[H]}));wt.push(zt)}return Array.isArray(ct)?wt:wt[0]}}class Xe extends V{constructor(ct){super(ct),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(ct,{threshold:He=.5,mask_threshold:Re=.5,overlap_mask_area_threshold:Se=.8,label_ids_to_fuse:Qe=null,target_sizes:ht=null,subtask:wt=null}={}){if(Array.isArray(ct)&&ct.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Bt=await B(ct),Mt=Bt.map(ze=>[ze.height,ze.width]),{pixel_values:oe,pixel_mask:zt}=await this.processor(Bt),ve=await this.model({pixel_values:oe,pixel_mask:zt});let H=null;if(wt!==null)H=this.subtasks_mapping[wt];else for(let[ze,$e]of Object.entries(this.subtasks_mapping))if($e in this.processor.image_processor){H=this.processor.image_processor[$e].bind(this.processor.image_processor),wt=ze;break}const ce=this.model.config.id2label,ne=[];if(wt==="panoptic"||wt==="instance"){const ze=H(ve,He,Re,Se,Qe,ht??Mt)[0],$e=ze.segmentation;for(const gt of ze.segments_info){const It=new Uint8ClampedArray($e.data.length);for(let _t=0;_t<$e.data.length;++_t)$e.data[_t]===gt.id&&(It[_t]=255);const Nt=new M.RawImage(It,$e.dims[1],$e.dims[0],1);ne.push({score:gt.score,label:ce[gt.label_id],mask:Nt})}}else{if(wt!=="semantic")throw Error(`Subtask ${wt} not supported.`);{const{segmentation:ze,labels:$e}=H(ve,ht??Mt)[0];for(const gt of $e){const It=new Uint8ClampedArray(ze.data.length);for(let _t=0;_t<ze.data.length;++_t)ze.data[_t]===gt&&(It[_t]=255);const Nt=new M.RawImage(It,ze.dims[1],ze.dims[0],1);ne.push({score:null,label:ce[gt],mask:Nt})}}}return ne}}class At extends V{constructor(ct){super(ct)}async _call(ct,He,{hypothesis_template:Re="This is a photo of {}"}={}){const Se=Array.isArray(ct),Qe=await B(ct),ht=He.map(ve=>Re.replace("{}",ve)),wt=this.tokenizer(ht,{padding:this.model.config.model_type!=="siglip"||"max_length",truncation:!0}),{pixel_values:Bt}=await this.processor(Qe),Mt=await this.model({...wt,pixel_values:Bt}),oe=this.model.config.model_type==="siglip"?ve=>ve.sigmoid().data:ve=>(0,k.softmax)(ve.data),zt=[];for(const ve of Mt.logits_per_image){const H=[...oe(ve)].map((ce,ne)=>({score:ce,label:He[ne]}));H.sort((ce,ne)=>ne.score-ce.score),zt.push(H)}return Se?zt:zt[0]}}class xe extends V{constructor(ct){super(ct)}async _call(ct,{threshold:He=.9,percentage:Re=!1}={}){const Se=Array.isArray(ct);if(Se&&ct.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Qe=await B(ct),ht=Re?null:Qe.map(H=>[H.height,H.width]),{pixel_values:wt,pixel_mask:Bt}=await this.processor(Qe),Mt=await this.model({pixel_values:wt,pixel_mask:Bt}),oe=this.processor.image_processor.post_process_object_detection(Mt,He,ht),zt=this.model.config.id2label,ve=oe.map(H=>H.boxes.map((ce,ne)=>({score:H.scores[ne],label:zt[H.classes[ne]],box:N(ce,!Re)})));return Se?ve:ve[0]}}class ye extends V{constructor(ct){super(ct)}async _call(ct,He,{threshold:Re=.1,top_k:Se=null,percentage:Qe=!1}={}){const ht=Array.isArray(ct),wt=await B(ct),Bt=this.tokenizer(He,{padding:!0,truncation:!0}),Mt=await this.processor(wt),oe=[];for(let zt=0;zt<wt.length;++zt){const ve=wt[zt],H=Qe?null:[[ve.height,ve.width]],ce=Mt.pixel_values[zt].unsqueeze_(0),ne=await this.model({...Bt,pixel_values:ce});let ze;if("post_process_grounded_object_detection"in this.processor){const $e=this.processor.post_process_grounded_object_detection(ne,Bt.input_ids,{box_threshold:Re,text_threshold:Re,target_sizes:H})[0];ze=$e.boxes.map((gt,It)=>({score:$e.scores[It],label:$e.labels[It],box:N(gt,!Qe)}))}else{const $e=this.processor.image_processor.post_process_object_detection(ne,Re,H,!0)[0];ze=$e.boxes.map((gt,It)=>({score:$e.scores[It],label:He[$e.classes[It]],box:N(gt,!Qe)}))}ze.sort(($e,gt)=>gt.score-$e.score),Se!==null&&(ze=ze.slice(0,Se)),oe.push(ze)}return ht?oe:oe[0]}}class ue extends V{constructor(ct){super(ct)}async _call(ct,He,Re={}){const Se=(await B(ct))[0],{pixel_values:Qe}=await this.processor(Se),ht=`<s_docvqa><s_question>${He}</s_question><s_answer>`,wt=this.tokenizer(ht,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Bt=await this.model.generate({inputs:Qe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:wt,...Re}),Mt=this.tokenizer.batch_decode(Bt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let oe=null;return Mt&&Mt.length>=2&&(oe=Mt[1].trim()),[{answer:oe}]}}class ie extends V{constructor(He){super(He);Te(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=He.vocoder??null}async _call(He,{speaker_embeddings:Re=null}={}){return this.processor?this._call_text_to_spectrogram(He,{speaker_embeddings:Re}):this._call_text_to_waveform(He)}async _call_text_to_waveform(He){const Re=this.tokenizer(He,{padding:!0,truncation:!0}),{waveform:Se}=await this.model(Re),Qe=this.model.config.sampling_rate;return new _.RawAudio(Se.data,Qe)}async _call_text_to_spectrogram(He,{speaker_embeddings:Re}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await p.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Re=="string"||Re instanceof URL)&&(Re=new Float32Array(await(await fetch(Re)).arrayBuffer())),Re instanceof Float32Array)Re=new v.Tensor("float32",Re,[1,Re.length]);else if(!(Re instanceof v.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Se}=this.tokenizer(He,{padding:!0,truncation:!0}),{waveform:Qe}=await this.model.generate_speech(Se,Re,{vocoder:this.vocoder}),ht=this.processor.feature_extractor.config.sampling_rate;return new _.RawAudio(Qe.data,ht)}}class be extends V{constructor(ct){super(ct)}async _call(ct){const He=await B(ct),Re=await this.processor(He),Se=await this.model(Re),Qe=[];for(const ht of Se.reconstruction){const wt=ht.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Qe.push(M.RawImage.fromTensor(wt))}return Qe.length>1?Qe:Qe[0]}}class Ye extends V{constructor(ct){super(ct)}async _call(ct){const He=await B(ct),Re=await this.processor(He),{predicted_depth:Se}=await this.model(Re),Qe=[];for(let ht=0;ht<He.length;++ht){const wt=Se[ht],[Bt,Mt]=wt.dims.slice(-2),[oe,zt]=He[ht].size,ve=(await(0,v.interpolate_4d)(wt.view(1,1,Bt,Mt),{size:[zt,oe],mode:"bilinear"})).view(zt,oe),H=ve.min().item(),ce=ve.max().item(),ne=ve.sub(H).div_(ce-H).mul_(255).to("uint8").unsqueeze(0),ze=M.RawImage.fromTensor(ne);Qe.push({predicted_depth:ve,depth:ze})}return Qe.length>1?Qe:Qe[0]}}const Le=Object.freeze({"text-classification":{tokenizer:u.AutoTokenizer,pipeline:Z,model:p.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:u.AutoTokenizer,pipeline:O,model:p.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:u.AutoTokenizer,pipeline:Q,model:p.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:u.AutoTokenizer,pipeline:q,model:p.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:u.AutoTokenizer,pipeline:I,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:u.AutoTokenizer,pipeline:e,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:u.AutoTokenizer,pipeline:f,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:u.AutoTokenizer,pipeline:P,model:p.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:u.AutoTokenizer,pipeline:J,model:p.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ie,model:p.AutoModelForAudioClassification,processor:h.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:u.AutoTokenizer,pipeline:ge,model:p.AutoModel,processor:h.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:u.AutoTokenizer,pipeline:ke,model:[p.AutoModelForSpeechSeq2Seq,p.AutoModelForCTC],processor:h.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:u.AutoTokenizer,pipeline:ie,model:[p.AutoModelForTextToWaveform,p.AutoModelForTextToSpectrogram],processor:[h.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:u.AutoTokenizer,pipeline:Ee,model:p.AutoModelForVision2Seq,processor:h.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:Ne,model:p.AutoModelForImageClassification,processor:h.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Xe,model:[p.AutoModelForImageSegmentation,p.AutoModelForSemanticSegmentation,p.AutoModelForUniversalSegmentation],processor:h.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:u.AutoTokenizer,pipeline:At,model:p.AutoModel,processor:h.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:xe,model:p.AutoModelForObjectDetection,processor:h.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:u.AutoTokenizer,pipeline:ye,model:p.AutoModelForZeroShotObjectDetection,processor:h.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:u.AutoTokenizer,pipeline:ue,model:p.AutoModelForDocumentQuestionAnswering,processor:h.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:be,model:p.AutoModelForImageToImage,processor:h.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ye,model:p.AutoModelForDepthEstimation,processor:h.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:u.AutoTokenizer,pipeline:D,model:p.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:h.AutoProcessor,pipeline:j,model:[p.AutoModelForImageFeatureExtraction,p.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),lt=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function ft(pt,ct=null,{progress_callback:He=null,config:Re=null,cache_dir:Se=null,local_files_only:Qe=!1,revision:ht="main",device:wt=null,dtype:Bt=null,model_file_name:Mt=null,session_options:oe={}}={}){pt=lt[pt]??pt;const zt=Le[pt.split("_",1)[0]];if(!zt)throw Error(`Unsupported pipeline: ${pt}. Must be one of [${Object.keys(Le)}]`);ct||(ct=zt.default.model,console.log(`No model specified. Using default model: "${ct}".`));const ve={progress_callback:He,config:Re,cache_dir:Se,local_files_only:Qe,revision:ht,device:wt,dtype:Bt,model_file_name:Mt,session_options:oe},H=new Map([["tokenizer",zt.tokenizer],["model",zt.model],["processor",zt.processor]]),ce=await async function(ne,ze,$e){const gt=Object.create(null),It=[];for(const[Nt,_t]of ne.entries()){if(!_t)continue;let Vt;Vt=Array.isArray(_t)?new Promise(async(Xt,Jt)=>{var Rr,$s;let wr;for(const os of _t){if(os===null)return void Xt(null);try{return void Xt(await os.from_pretrained(ze,$e))}catch(Ks){if((Rr=Ks.message)!=null&&Rr.includes("Unsupported model type"))wr=Ks;else{if(!(($s=Ks.message)!=null&&$s.includes("Could not locate file")))return void Jt(Ks);wr=Ks}}}Jt(wr)}):_t.from_pretrained(ze,$e),gt[Nt]=Vt,It.push(Vt)}await Promise.all(It);for(const[Nt,_t]of Object.entries(gt))gt[Nt]=await _t;return gt}(H,ct,ve);return ce.task=pt,(0,y.dispatchCallback)(He,{status:"ready",task:pt,model:ct}),new zt.pipeline(ce)}},"./src/tokenizers.js":(i,o,a)=>{a.r(o),a.d(o,{AlbertTokenizer:()=>Va,AutoTokenizer:()=>Ln,BartTokenizer:()=>Br,BertTokenizer:()=>zn,BlenderbotSmallTokenizer:()=>Cs,BlenderbotTokenizer:()=>Jr,BloomTokenizer:()=>ks,CLIPTokenizer:()=>gi,CamembertTokenizer:()=>Pn,CodeGenTokenizer:()=>Jn,CodeLlamaTokenizer:()=>Sn,CohereTokenizer:()=>Bi,ConvBertTokenizer:()=>$a,DebertaTokenizer:()=>Sr,DebertaV2Tokenizer:()=>Kt,DistilBertTokenizer:()=>On,ElectraTokenizer:()=>qn,EsmTokenizer:()=>ai,FalconTokenizer:()=>di,GPT2Tokenizer:()=>Zt,GPTNeoXTokenizer:()=>Fa,GemmaTokenizer:()=>Ri,Grok1Tokenizer:()=>Xn,HerbertTokenizer:()=>Bs,LlamaTokenizer:()=>Qn,M2M100Tokenizer:()=>Gi,MBart50Tokenizer:()=>qs,MBartTokenizer:()=>zr,MPNetTokenizer:()=>ui,MarianTokenizer:()=>Ei,MgpstrTokenizer:()=>rn,MobileBertTokenizer:()=>Wa,NllbTokenizer:()=>ba,NougatTokenizer:()=>Nn,PreTrainedTokenizer:()=>ts,Qwen2Tokenizer:()=>fi,RoFormerTokenizer:()=>en,RobertaTokenizer:()=>aa,SiglipTokenizer:()=>tn,SpeechT5Tokenizer:()=>bn,SqueezeBertTokenizer:()=>Pr,T5Tokenizer:()=>sa,TokenizerModel:()=>c,VitsTokenizer:()=>zi,Wav2Vec2CTCTokenizer:()=>pi,WhisperTokenizer:()=>Fi,XLMRobertaTokenizer:()=>ci,XLMTokenizer:()=>Dn,is_chinese_char:()=>O});var u=a("./src/utils/generic.js"),p=a("./src/utils/core.js"),h=a("./src/utils/hub.js"),C=a("./src/utils/maths.js"),y=a("./src/utils/tensor.js"),k=a("./src/utils/data-structures.js"),_=a("./node_modules/@huggingface/jinja/dist/index.js"),v=a("./src/models/whisper/common_whisper.js");async function M(Qt,Be){const ot=await Promise.all([(0,h.getModelJSON)(Qt,"tokenizer.json",!0,Be),(0,h.getModelJSON)(Qt,"tokenizer_config.json",!0,Be)]);return Be.legacy!==null&&(ot[1].legacy=Be.legacy),ot}function B(Qt,Be=!0){if(Qt.Regex!==void 0){let ot=Qt.Regex.replace(/\\([#&~])/g,"$1");for(const[bt,Tt]of I)ot=ot.replaceAll(bt,Tt);return new RegExp(ot,"gu")}if(Qt.String!==void 0){const ot=(0,p.escapeRegExp)(Qt.String);return new RegExp(Be?ot:`(${ot})`,"gu")}return console.warn("Unknown pattern type:",Qt),null}function S(Qt){return new Map(Object.entries(Qt))}function N(Qt){const Be=Qt.dims;switch(Be.length){case 1:return Qt.tolist();case 2:if(Be[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Qt.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${Be.length}.`)}}function V(Qt){return Qt.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Z(Qt){return Qt.replace(new RegExp("\\p{M}","gu"),"")}function O(Qt){return Qt>=19968&&Qt<=40959||Qt>=13312&&Qt<=19903||Qt>=131072&&Qt<=173791||Qt>=173824&&Qt<=177983||Qt>=177984&&Qt<=178207||Qt>=178208&&Qt<=183983||Qt>=63744&&Qt<=64255||Qt>=194560&&Qt<=195103}const Q="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",q=new RegExp(`^[${Q}]+$`,"gu"),f=".,!?…。，、।۔،",I=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${f}])]+`,` ?[^\\s${f}]+`]]);class e{constructor(Be){this.content=Be.content,this.id=Be.id,this.single_word=Be.single_word??!1,this.lstrip=Be.lstrip??!1,this.rstrip=Be.rstrip??!1,this.special=Be.special??!1,this.normalized=Be.normalized??null}}class c extends u.Callable{constructor(Be){super(),this.config=Be,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(Be,...ot){switch(Be.type){case"WordPiece":return new P(Be);case"Unigram":return new J(Be,...ot);case"BPE":return new Ie(Be);default:if(Be.vocab)return Array.isArray(Be.vocab)?new J(Be,...ot):typeof Be.vocab=="object"&&Be.continuing_subword_prefix&&Be.unk_token?new P(Be):new ge(Be,...ot);throw new Error(`Unknown TokenizerModel type: ${Be.type}`)}}_call(Be){return Be=this.encode(Be),this.fuse_unk&&(Be=function(ot,bt,Tt){const Pt=[];let st=0;for(;st<ot.length;)if(Pt.push(ot[st]),(bt.get(ot[st])??Tt)===Tt)for(;++st<ot.length&&(bt.get(ot[st])??Tt)===Tt;)bt.get(Pt.at(-1))!==Tt&&(Pt[Pt.length-1]+=ot[st]);else++st;return Pt}(Be,this.tokens_to_ids,this.unk_token_id)),Be}encode(Be){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(Be){return Be.map(ot=>this.tokens_to_ids.get(ot)??this.unk_token_id)}convert_ids_to_tokens(Be){return Be.map(ot=>this.vocab[ot]??this.unk_token)}}class P extends c{constructor(Be){super(Be),this.tokens_to_ids=S(Be.vocab),this.unk_token_id=this.tokens_to_ids.get(Be.unk_token),this.unk_token=Be.unk_token,this.max_input_chars_per_word=Be.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[ot,bt]of this.tokens_to_ids)this.vocab[bt]=ot}encode(Be){const ot=[];for(const bt of Be){const Tt=[...bt];if(Tt.length>this.max_input_chars_per_word){ot.push(this.unk_token);continue}let Pt=!1,st=0;const pe=[];for(;st<Tt.length;){let he=Tt.length,qe=null;for(;st<he;){let it=Tt.slice(st,he).join("");if(st>0&&(it=this.config.continuing_subword_prefix+it),this.tokens_to_ids.has(it)){qe=it;break}--he}if(qe===null){Pt=!0;break}pe.push(qe),st=he}Pt?ot.push(this.unk_token):ot.push(...pe)}return ot}}class J extends c{constructor(Be,ot){super(Be);const bt=Be.vocab.length;this.vocab=new Array(bt),this.scores=new Array(bt);for(let Tt=0;Tt<bt;++Tt)[this.vocab[Tt],this.scores[Tt]]=Be.vocab[Tt];this.unk_token_id=Be.unk_id,this.unk_token=this.vocab[Be.unk_id],this.tokens_to_ids=new Map(this.vocab.map((Tt,Pt)=>[Tt,Pt])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ot.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,C.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new k.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(Be){const ot=Be.chars;let bt=0;for(;bt<ot.length;){let Tt=!1;const Pt=ot.slice(bt).join(""),st=this.trie.commonPrefixSearch(Pt);for(const pe of st){const he=this.tokens_to_ids.get(pe),qe=this.scores[he],it=(0,p.len)(pe);Be.insert(bt,it,qe,he),Tt||it!==1||(Tt=!0)}Tt||Be.insert(bt,1,this.unk_score,this.unk_token_id),bt+=1}}tokenize(Be){const ot=new k.TokenLattice(Be,this.bos_token_id,this.eos_token_id);return this.populateNodes(ot),ot.tokens()}encode(Be){const ot=[];for(const bt of Be){const Tt=this.tokenize(bt);ot.push(...Tt)}return ot}}const D=(()=>{const Qt=[...Array.from({length:94},(Tt,Pt)=>Pt+33),...Array.from({length:12},(Tt,Pt)=>Pt+161),...Array.from({length:82},(Tt,Pt)=>Pt+174)],Be=Qt.slice();let ot=0;for(let Tt=0;Tt<256;++Tt)Qt.includes(Tt)||(Qt.push(Tt),Be.push(256+ot),ot+=1);const bt=Be.map(Tt=>String.fromCharCode(Tt));return Object.fromEntries(Qt.map((Tt,Pt)=>[Tt,bt[Pt]]))})(),j=(0,p.reverseDictionary)(D);class Ie extends c{constructor(Be){super(Be),this.tokens_to_ids=S(Be.vocab),this.unk_token_id=this.tokens_to_ids.get(Be.unk_token),this.unk_token=Be.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[bt,Tt]of this.tokens_to_ids)this.vocab[Tt]=bt;const ot=Array.isArray(Be.merges[0]);this.merges=ot?Be.merges:Be.merges.map(bt=>bt.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((bt,Tt)=>[JSON.stringify(bt),Tt])),this.end_of_word_suffix=Be.end_of_word_suffix,this.continuing_subword_suffix=Be.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(Be){if(Be.length===0)return[];const ot=this.cache.get(Be);if(ot!==void 0)return ot;const bt=Array.from(Be);this.end_of_word_suffix&&(bt[bt.length-1]+=this.end_of_word_suffix);let Tt=[];if(bt.length>1){const Pt=new k.PriorityQueue((he,qe)=>he.score<qe.score);let st={token:bt[0],bias:0,prev:null,next:null},pe=st;for(let he=1;he<bt.length;++he){const qe={bias:he/bt.length,token:bt[he],prev:pe,next:null};pe.next=qe,this._add_node(Pt,pe),pe=qe}for(;!Pt.isEmpty();){const he=Pt.pop();if(he.deleted||!he.next||he.next.deleted)continue;if(he.deleted=!0,he.next.deleted=!0,he.prev){const it={...he.prev};he.prev.deleted=!0,he.prev=it,it.prev?it.prev.next=it:st=it}const qe={token:he.token+he.next.token,bias:he.bias,prev:he.prev,next:he.next.next};qe.prev?(qe.prev.next=qe,this._add_node(Pt,qe.prev)):st=qe,qe.next&&(qe.next.prev=qe,this._add_node(Pt,qe))}for(let he=st;he!==null;he=he.next)Tt.push(he.token)}else Tt=bt;if(this.continuing_subword_suffix)for(let Pt=0;Pt<Tt.length-1;++Pt)Tt[Pt]+=this.continuing_subword_suffix;return this.cache.set(Be,Tt),Tt}_add_node(Be,ot){const bt=this.bpe_ranks.get(JSON.stringify([ot.token,ot.next.token]));bt!==void 0&&(ot.score=bt+ot.bias,Be.push(ot))}encode(Be){const ot=[];for(const bt of Be){if(this.ignore_merges&&this.tokens_to_ids.has(bt)){ot.push(bt);continue}const Tt=this.bpe(bt);for(const Pt of Tt)if(this.tokens_to_ids.has(Pt))ot.push(Pt);else if(this.byte_fallback){const st=Array.from(this.text_encoder.encode(Pt)).map(pe=>`<0x${pe.toString(16).toUpperCase().padStart(2,"0")}>`);st.every(pe=>this.tokens_to_ids.has(pe))?ot.push(...st):ot.push(this.unk_token)}else ot.push(this.unk_token)}return ot}}class ge extends c{constructor(Be,ot){super(Be),this.tokens_to_ids=S(ot.target_lang?Be.vocab[ot.target_lang]:Be.vocab),this.bos_token=ot.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ot.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=ot.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=ot.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[bt,Tt]of this.tokens_to_ids)this.vocab[Tt]=bt}encode(Be){return Be}}class ke extends u.Callable{constructor(Be){super(),this.config=Be}static fromConfig(Be){if(Be===null)return null;switch(Be.type){case"BertNormalizer":return new Ye(Be);case"Precompiled":return new Vt(Be);case"Sequence":return new be(Be);case"Replace":return new Ee(Be);case"NFC":return new Ne(Be);case"NFKC":return new Xe(Be);case"NFKD":return new At(Be);case"Strip":return new xe(Be);case"StripAccents":return new ye(Be);case"Lowercase":return new ue(Be);case"Prepend":return new ie(Be);default:throw new Error(`Unknown Normalizer type: ${Be.type}`)}}normalize(Be){throw Error("normalize should be implemented in subclass.")}_call(Be){return this.normalize(Be)}}class Ee extends ke{normalize(Be){const ot=B(this.config.pattern);return ot===null?Be:Be.replaceAll(ot,this.config.content)}}class Ne extends ke{normalize(Be){return Be=Be.normalize("NFC")}}class Xe extends ke{normalize(Be){return Be=Be.normalize("NFKC")}}class At extends ke{normalize(Be){return Be=Be.normalize("NFKD")}}class xe extends ke{normalize(Be){return this.config.strip_left&&this.config.strip_right?Be=Be.trim():(this.config.strip_left&&(Be=Be.trimStart()),this.config.strip_right&&(Be=Be.trimEnd())),Be}}class ye extends ke{normalize(Be){return Be=Z(Be)}}class ue extends ke{normalize(Be){return Be=Be.toLowerCase()}}class ie extends ke{normalize(Be){return Be=this.config.prepend+Be}}class be extends ke{constructor(Be){super(Be),this.normalizers=Be.normalizers.map(ot=>ke.fromConfig(ot))}normalize(Be){return this.normalizers.reduce((ot,bt)=>bt.normalize(ot),Be)}}class Ye extends ke{_tokenize_chinese_chars(Be){const ot=[];for(let bt=0;bt<Be.length;++bt){const Tt=Be[bt];O(Tt.charCodeAt(0))?(ot.push(" "),ot.push(Tt),ot.push(" ")):ot.push(Tt)}return ot.join("")}stripAccents(Be){return Be.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(Be){switch(Be){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(Be)}}_clean_text(Be){const ot=[];for(const bt of Be){const Tt=bt.charCodeAt(0);Tt===0||Tt===65533||this._is_control(bt)||(/^\s$/.test(bt)?ot.push(" "):ot.push(bt))}return ot.join("")}normalize(Be){return this.config.clean_text&&(Be=this._clean_text(Be)),this.config.handle_chinese_chars&&(Be=this._tokenize_chinese_chars(Be)),this.config.lowercase?(Be=Be.toLowerCase(),this.config.strip_accents!==!1&&(Be=this.stripAccents(Be))):this.config.strip_accents&&(Be=this.stripAccents(Be)),Be}}class Le extends u.Callable{static fromConfig(Be){if(Be===null)return null;switch(Be.type){case"BertPreTokenizer":return new lt(Be);case"Sequence":return new Xt(Be);case"Whitespace":return new Jt(Be);case"WhitespaceSplit":return new wr(Be);case"Metaspace":return new Nt(Be);case"ByteLevel":return new ft(Be);case"Split":return new pt(Be);case"Punctuation":return new ct(Be);case"Digits":return new He(Be);case"Replace":return new Rr(Be);default:throw new Error(`Unknown PreTokenizer type: ${Be.type}`)}}pre_tokenize_text(Be,ot){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(Be,ot){return(Array.isArray(Be)?Be.map(bt=>this.pre_tokenize_text(bt,ot)):this.pre_tokenize_text(Be,ot)).flat()}_call(Be,ot){return this.pre_tokenize(Be,ot)}}class lt extends Le{constructor(Be){super(),this.pattern=new RegExp(`[^\\s${Q}]+|[${Q}]`,"gu")}pre_tokenize_text(Be,ot){return Be.trim().match(this.pattern)||[]}}class ft extends Le{constructor(Be){super(),this.config=Be,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=D,this.text_encoder=new TextEncoder}pre_tokenize_text(Be,ot){return this.add_prefix_space&&!Be.startsWith(" ")&&(Be=" "+Be),(this.use_regex?Be.match(this.pattern)||[]:[Be]).map(bt=>Array.from(this.text_encoder.encode(bt),Tt=>this.byte_encoder[Tt]).join(""))}}class pt extends Le{constructor(Be){super(),this.config=Be,this.pattern=B(this.config.pattern,this.config.invert)}pre_tokenize_text(Be,ot){var bt;return this.pattern===null?[]:this.config.invert?Be.match(this.pattern)||[]:((bt=this.config.behavior)==null?void 0:bt.toLowerCase())==="removed"?Be.split(this.pattern).filter(Tt=>Tt):function(Tt,Pt){const st=[];let pe=0;for(const he of Tt.matchAll(Pt)){const qe=he[0];pe<he.index&&st.push(Tt.slice(pe,he.index)),qe.length>0&&st.push(qe),pe=he.index+qe.length}return pe<Tt.length&&st.push(Tt.slice(pe)),st}(Be,this.pattern)}}class ct extends Le{constructor(Be){super(),this.config=Be,this.pattern=new RegExp(`[^${Q}]+|[${Q}]+`,"gu")}pre_tokenize_text(Be,ot){return Be.match(this.pattern)||[]}}class He extends Le{constructor(Be){super(),this.config=Be;const ot="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(ot,"gu")}pre_tokenize_text(Be,ot){return Be.match(this.pattern)||[]}}class Re extends u.Callable{constructor(Be){super(),this.config=Be}static fromConfig(Be){if(Be===null)return null;switch(Be.type){case"TemplateProcessing":return new ht(Be);case"ByteLevel":return new wt(Be);case"RobertaProcessing":return new Qe(Be);case"BertProcessing":return new Se(Be);case"Sequence":return new Bt(Be);default:throw new Error(`Unknown PostProcessor type: ${Be.type}`)}}post_process(Be,...ot){throw Error("post_process should be implemented in subclass.")}_call(Be,...ot){return this.post_process(Be,...ot)}}class Se extends Re{constructor(Be){super(Be),this.cls=Be.cls[0],this.sep=Be.sep[0]}post_process(Be,ot=null,{add_special_tokens:bt=!0}={}){bt&&(Be=(0,p.mergeArrays)([this.cls],Be,[this.sep]));let Tt=new Array(Be.length).fill(0);if(ot!==null){const Pt=bt&&this instanceof Qe?[this.sep]:[],st=bt?[this.sep]:[];Be=(0,p.mergeArrays)(Be,Pt,ot,st),Tt=(0,p.mergeArrays)(Tt,new Array(ot.length+Pt.length+st.length).fill(1))}return{tokens:Be,token_type_ids:Tt}}}class Qe extends Se{}class ht extends Re{constructor(Be){super(Be),this.single=Be.single,this.pair=Be.pair}post_process(Be,ot=null,{add_special_tokens:bt=!0}={}){const Tt=ot===null?this.single:this.pair;let Pt=[],st=[];for(const pe of Tt)"SpecialToken"in pe?bt&&(Pt.push(pe.SpecialToken.id),st.push(pe.SpecialToken.type_id)):"Sequence"in pe&&(pe.Sequence.id==="A"?(Pt=(0,p.mergeArrays)(Pt,Be),st=(0,p.mergeArrays)(st,new Array(Be.length).fill(pe.Sequence.type_id))):pe.Sequence.id==="B"&&(Pt=(0,p.mergeArrays)(Pt,ot),st=(0,p.mergeArrays)(st,new Array(ot.length).fill(pe.Sequence.type_id))));return{tokens:Pt,token_type_ids:st}}}class wt extends Re{post_process(Be,ot=null){return ot&&(Be=(0,p.mergeArrays)(Be,ot)),{tokens:Be}}}class Bt extends Re{constructor(Be){super(Be),this.processors=Be.processors.map(ot=>Re.fromConfig(ot))}post_process(Be,ot=null,bt={}){let Tt;for(const Pt of this.processors)if(Pt instanceof wt)Be=Pt.post_process(Be).tokens,ot&&(ot=Pt.post_process(ot).tokens);else{const st=Pt.post_process(Be,ot,bt);Be=st.tokens,Tt=st.token_type_ids}return{tokens:Be,token_type_ids:Tt}}}class Mt extends u.Callable{constructor(Be){super(),this.config=Be,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=Be.trim_offsets}static fromConfig(Be){if(Be===null)return null;switch(Be.type){case"WordPiece":return new ce(Be);case"Metaspace":return new _t(Be);case"ByteLevel":return new ne(Be);case"Replace":return new oe(Be);case"ByteFallback":return new zt(Be);case"Fuse":return new ve(Be);case"Strip":return new H(Be);case"Sequence":return new $e(Be);case"CTC":return new ze(Be);case"BPEDecoder":return new gt(Be);default:throw new Error(`Unknown Decoder type: ${Be.type}`)}}_call(Be){return this.decode(Be)}decode(Be){return this.decode_chain(Be).join("")}decode_chain(Be){throw Error("`decode_chain` should be implemented in subclass.")}}class oe extends Mt{decode_chain(Be){const ot=B(this.config.pattern);return ot===null?Be:Be.map(bt=>bt.replaceAll(ot,this.config.content))}}class zt extends Mt{constructor(Be){super(Be),this.text_decoder=new TextDecoder}decode_chain(Be){const ot=[];let bt=[];for(const Tt of Be){let Pt=null;if(Tt.length===6&&Tt.startsWith("<0x")&&Tt.endsWith(">")){const st=parseInt(Tt.slice(3,5),16);isNaN(st)||(Pt=st)}if(Pt!==null)bt.push(Pt);else{if(bt.length>0){const st=this.text_decoder.decode(Uint8Array.from(bt));ot.push(st),bt=[]}ot.push(Tt)}}if(bt.length>0){const Tt=this.text_decoder.decode(Uint8Array.from(bt));ot.push(Tt),bt=[]}return ot}}class ve extends Mt{decode_chain(Be){return[Be.join("")]}}class H extends Mt{constructor(Be){super(Be),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(Be){return Be.map(ot=>{let bt=0;for(let Pt=0;Pt<this.start&&ot[Pt]===this.content;++Pt)bt=Pt+1;let Tt=ot.length;for(let Pt=0;Pt<this.stop;++Pt){const st=ot.length-Pt-1;if(ot[st]!==this.content)break;Tt=st}return ot.slice(bt,Tt)})}}class ce extends Mt{constructor(Be){super(Be),this.cleanup=Be.cleanup}decode_chain(Be){return Be.map((ot,bt)=>(bt!==0&&(ot=ot.startsWith(this.config.prefix)?ot.replace(this.config.prefix,""):" "+ot),this.cleanup&&(ot=V(ot)),ot))}}class ne extends Mt{constructor(Be){super(Be),this.byte_decoder=j,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(Be){const ot=Be.join(""),bt=new Uint8Array([...ot].map(Tt=>this.byte_decoder[Tt]));return this.text_decoder.decode(bt)}decode_chain(Be){const ot=[];let bt=[];for(const Tt of Be)this.added_tokens.find(Pt=>Pt.content===Tt)!==void 0?(bt.length>0&&(ot.push(this.convert_tokens_to_string(bt)),bt=[]),ot.push(Tt)):bt.push(Tt);return bt.length>0&&ot.push(this.convert_tokens_to_string(bt)),ot}}class ze extends Mt{constructor(Be){super(Be),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(Be){if(Be.length===0)return"";const ot=[Be[0]];for(let Tt=1;Tt<Be.length;++Tt)Be[Tt]!==ot.at(-1)&&ot.push(Be[Tt]);let bt=ot.filter(Tt=>Tt!==this.pad_token).join("");return this.cleanup&&(bt=V(bt).replaceAll(this.word_delimiter_token," ").trim()),bt}decode_chain(Be){return[this.convert_tokens_to_string(Be)]}}class $e extends Mt{constructor(Be){super(Be),this.decoders=Be.decoders.map(ot=>Mt.fromConfig(ot))}decode_chain(Be){return this.decoders.reduce((ot,bt)=>bt.decode_chain(ot),Be)}}class gt extends Mt{constructor(Be){super(Be),this.suffix=this.config.suffix}decode_chain(Be){return Be.map((ot,bt)=>ot.replaceAll(this.suffix,bt===Be.length-1?"":" "))}}class It extends Mt{decode_chain(Be){let ot="";for(let bt=1;bt<Be.length;bt+=2)ot+=Be[bt];return[ot]}}class Nt extends Le{constructor(Be){super(),this.addPrefixSpace=Be.add_prefix_space,this.replacement=Be.replacement,this.strRep=Be.str_rep||this.replacement,this.prepend_scheme=Be.prepend_scheme??"always"}pre_tokenize_text(Be,{section_index:ot}={}){let bt=Be.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!bt.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&ot===0)&&(bt=this.strRep+bt),[bt]}}class _t extends Mt{constructor(Be){super(Be),this.addPrefixSpace=Be.add_prefix_space,this.replacement=Be.replacement}decode_chain(Be){const ot=[];for(let bt=0;bt<Be.length;++bt){let Tt=Be[bt].replaceAll(this.replacement," ");this.addPrefixSpace&&bt==0&&Tt.startsWith(" ")&&(Tt=Tt.substring(1)),ot.push(Tt)}return ot}}class Vt extends ke{constructor(Be){super(Be),this.charsmap=Be.precompiled_charsmap}normalize(Be){return(Be=(Be=Be.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?Be=Be.split("～").map(bt=>bt.normalize("NFKC")).join("～"):Be=Be.normalize("NFKC"),Be}}class Xt extends Le{constructor(Be){super(),this.tokenizers=Be.pretokenizers.map(ot=>Le.fromConfig(ot))}pre_tokenize_text(Be,ot){return this.tokenizers.reduce((bt,Tt)=>Tt.pre_tokenize(bt,ot),[Be])}}class Jt extends Le{constructor(Be){super()}pre_tokenize_text(Be,ot){return Be.match(/\w+|[^\w\s]+/g)||[]}}class wr extends Le{constructor(Be){super()}pre_tokenize_text(Be,ot){return function(bt){return bt.match(/\S+/g)||[]}(Be)}}class Rr extends Le{constructor(Be){super(),this.config=Be,this.pattern=B(this.config.pattern),this.content=this.config.content}pre_tokenize_text(Be,ot){return this.pattern===null?[Be]:[Be.replaceAll(this.pattern,this.config.content)]}}const $s=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function os(Qt,Be,ot,bt){for(const Tt of Object.keys(Qt)){const Pt=Be-Qt[Tt].length,st=ot(Tt),pe=new Array(Pt).fill(st);Qt[Tt]=bt==="right"?(0,p.mergeArrays)(Qt[Tt],pe):(0,p.mergeArrays)(pe,Qt[Tt])}}function Ks(Qt,Be){for(const ot of Object.keys(Qt))Qt[ot].length=Be}class ts extends u.Callable{constructor(ot,bt){super();Te(this,"return_token_type_ids",!1);Te(this,"padding_side","right");this._tokenizer_config=bt,this.normalizer=ke.fromConfig(ot.normalizer),this.pre_tokenizer=Le.fromConfig(ot.pre_tokenizer),this.model=c.fromConfig(ot.model,bt),this.post_processor=Re.fromConfig(ot.post_processor),this.decoder=Mt.fromConfig(ot.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const Tt of ot.added_tokens){const Pt=new e(Tt);this.added_tokens.push(Pt),this.model.tokens_to_ids.set(Pt.content,Pt.id),this.model.vocab[Pt.id]=Pt.content,Pt.special&&(this.special_tokens.push(Pt.content),this.all_special_ids.push(Pt.id))}if(this.additional_special_tokens=bt.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((Tt,Pt)=>Pt.content.length-Tt.content.length).map(Tt=>`${Tt.lstrip?"\\s*":""}(${(0,p.escapeRegExp)(Tt.content)})${Tt.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=bt.model_max_length,this.remove_space=bt.remove_space,this.clean_up_tokenization_spaces=bt.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=bt.do_lowercase_and_remove_accent??!1,bt.padding_side&&(this.padding_side=bt.padding_side),this.legacy=!1,this.chat_template=bt.chat_template??null,Array.isArray(this.chat_template)){const Tt=Object.create(null);for(const{name:Pt,template:st}of this.chat_template){if(typeof Pt!="string"||typeof st!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');Tt[Pt]=st}this.chat_template=Tt}this._compiled_template_cache=new Map}getToken(...ot){for(const bt of ot){const Tt=this._tokenizer_config[bt];if(Tt){if(typeof Tt=="object"){if(Tt.__type==="AddedToken")return Tt.content;throw Error(`Unknown token: ${Tt}`)}return Tt}}return null}static async from_pretrained(ot,{progress_callback:bt=null,config:Tt=null,cache_dir:Pt=null,local_files_only:st=!1,revision:pe="main",legacy:he=null}={}){return new this(...await M(ot,{progress_callback:bt,config:Tt,cache_dir:Pt,local_files_only:st,revision:pe,legacy:he}))}_call(ot,{text_pair:bt=null,add_special_tokens:Tt=!0,padding:Pt=!1,truncation:st=null,max_length:pe=null,return_tensor:he=!0,return_token_type_ids:qe=null}={}){const it=Array.isArray(ot);let kt;if(it){if(ot.length===0)throw Error("text array must be non-empty");if(bt!==null){if(!Array.isArray(bt))throw Error("text_pair must also be an array");if(ot.length!==bt.length)throw Error("text and text_pair must have the same length");kt=ot.map((ir,fr)=>this._encode_plus(ir,{text_pair:bt[fr],add_special_tokens:Tt,return_token_type_ids:qe}))}else kt=ot.map(ir=>this._encode_plus(ir,{add_special_tokens:Tt,return_token_type_ids:qe}))}else{if(ot==null)throw Error("text may not be null or undefined");if(Array.isArray(bt))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");kt=[this._encode_plus(ot,{text_pair:bt,add_special_tokens:Tt,return_token_type_ids:qe})]}if(pe===null?pe=Pt==="max_length"?this.model_max_length:(0,C.max)(kt.map(ir=>ir.input_ids.length))[0]:st||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),pe=Math.min(pe,this.model_max_length??1/0),Pt||st)for(let ir=0;ir<kt.length;++ir)kt[ir].input_ids.length!==pe&&(kt[ir].input_ids.length>pe?st&&Ks(kt[ir],pe):Pt&&os(kt[ir],pe,fr=>fr==="input_ids"?this.pad_token_id:0,this.padding_side));const Ht={};if(he){if((!Pt||!st)&&kt.some(fr=>{var nr;for(const Yt of Object.keys(fr))if(fr[Yt].length!==((nr=kt[0][Yt])==null?void 0:nr.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const ir=[kt.length,kt[0].input_ids.length];for(const fr of Object.keys(kt[0]))Ht[fr]=new y.Tensor("int64",BigInt64Array.from(kt.flatMap(nr=>nr[fr]).map(BigInt)),ir)}else{for(const ir of Object.keys(kt[0]))Ht[ir]=kt.map(fr=>fr[ir]);if(!it)for(const ir of Object.keys(Ht))Ht[ir]=Ht[ir][0]}return Ht}_encode_text(ot){return ot===null?null:(this.added_tokens_regex?ot.split(this.added_tokens_regex).filter(Pt=>Pt):[ot]).map((Pt,st)=>{if(this.added_tokens.find(he=>he.content===Pt)!==void 0)return Pt;{if(this.remove_space===!0&&(Pt=Pt.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Pt=function(qe){return Z(qe.toLowerCase())}(Pt)),this.normalizer!==null&&(Pt=this.normalizer(Pt)),Pt.length===0)return[];const he=this.pre_tokenizer!==null?this.pre_tokenizer(Pt,{section_index:st}):[Pt];return this.model(he)}}).flat()}_encode_plus(ot,{text_pair:bt=null,add_special_tokens:Tt=!0,return_token_type_ids:Pt=null}={}){const{tokens:st,token_type_ids:pe}=this._tokenize_helper(ot,{pair:bt,add_special_tokens:Tt}),he=this.model.convert_tokens_to_ids(st),qe={input_ids:he,attention_mask:new Array(he.length).fill(1)};return(Pt??this.return_token_type_ids)&&pe&&(qe.token_type_ids=pe),qe}_tokenize_helper(ot,{pair:bt=null,add_special_tokens:Tt=!1}={}){const Pt=this._encode_text(ot),st=this._encode_text(bt);return this.post_processor?this.post_processor(Pt,st,{add_special_tokens:Tt}):{tokens:(0,p.mergeArrays)(Pt??[],st??[])}}tokenize(ot,{pair:bt=null,add_special_tokens:Tt=!1}={}){return this._tokenize_helper(ot,{pair:bt,add_special_tokens:Tt}).tokens}encode(ot,{text_pair:bt=null,add_special_tokens:Tt=!0,return_token_type_ids:Pt=null}={}){return this._encode_plus(ot,{text_pair:bt,add_special_tokens:Tt,return_token_type_ids:Pt}).input_ids}batch_decode(ot,bt={}){return ot instanceof y.Tensor&&(ot=ot.tolist()),ot.map(Tt=>this.decode(Tt,bt))}decode(ot,bt={}){if(ot instanceof y.Tensor&&(ot=N(ot)),!Array.isArray(ot)||ot.length===0||!(0,p.isIntegralNumber)(ot[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(ot,bt)}decode_single(ot,{skip_special_tokens:bt=!1,clean_up_tokenization_spaces:Tt=null}){let Pt=this.model.convert_ids_to_tokens(ot);bt&&(Pt=Pt.filter(pe=>!this.special_tokens.includes(pe)));let st=this.decoder?this.decoder(Pt):Pt.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(st=st.replaceAll(this.decoder.end_of_word_suffix," "),bt&&(st=st.trim())),(Tt??this.clean_up_tokenization_spaces)&&(st=V(st)),st}get_chat_template({chat_template:ot=null,tools:bt=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const Tt=this.chat_template;if(ot!==null&&Object.hasOwn(Tt,ot))ot=Tt[ot];else if(ot===null)if(bt!==null&&"tool_use"in Tt)ot=Tt.tool_use;else{if(!("default"in Tt))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(Tt).sort()}.`);ot=Tt.default}}else if(ot===null){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");ot=this.chat_template}return ot}apply_chat_template(ot,{tools:bt=null,documents:Tt=null,chat_template:Pt=null,add_generation_prompt:st=!1,tokenize:pe=!0,padding:he=!1,truncation:qe=!1,max_length:it=null,return_tensor:kt=!0,return_dict:Ht=!1,tokenizer_kwargs:ir={},...fr}={}){if(typeof(Pt=this.get_chat_template({chat_template:Pt,tools:bt}))!="string")throw Error("chat_template must be a string, but got "+typeof Pt);let nr=this._compiled_template_cache.get(Pt);nr===void 0&&(nr=new _.Template(Pt),this._compiled_template_cache.set(Pt,nr));const Yt=Object.create(null);for(const Wr of $s){const xs=this.getToken(Wr);xs&&(Yt[Wr]=xs)}const Ar=nr.render({messages:ot,add_generation_prompt:st,tools:bt,documents:Tt,...Yt,...fr});if(pe){const Wr=this._call(Ar,{add_special_tokens:!1,padding:he,truncation:qe,max_length:it,return_tensor:kt,...ir});return Ht?Wr:Wr.input_ids}return Ar}}class zn extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Va extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Wa extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Pr extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Sr extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Kt extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Bs extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class $a extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class en extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class On extends ts{}class Pn extends ts{}class Dn extends ts{constructor(ot,bt){super(ot,bt);Te(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class qn extends ts{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class sa extends ts{}class Zt extends ts{}class Br extends ts{}class zr extends ts{constructor(Be,ot){super(Be,ot),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(bt=>this.languageRegex.test(bt)),this.lang_to_token=bt=>bt}_build_translation_inputs(Be,ot,bt){return Zn(this,Be,ot,bt)}}class qs extends zr{}class aa extends ts{}class ks extends ts{}const vn="▁";class Qn extends ts{constructor(ot,bt){super(ot,bt);Te(this,"padding_side","left");this.legacy=bt.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Nt({replacement:vn,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(ot){if(ot===null)return null;if(this.legacy||ot.length===0)return super._encode_text(ot);let bt=super._encode_text(vn+ot.replaceAll(vn," "));return bt.length>1&&bt[0]===vn&&this.special_tokens.includes(bt[1])&&(bt=bt.slice(1)),bt}}class Sn extends ts{}class ci extends ts{}class ui extends ts{}class di extends ts{}class Fa extends ts{}class ai extends ts{}class fi extends ts{}class Ri extends ts{}class Xn extends ts{}function Zn(Qt,Be,ot,bt){if(!("language_codes"in Qt)||!Array.isArray(Qt.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Qt&&Qt.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Qt)||typeof Qt.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const Tt=bt.src_lang,Pt=bt.tgt_lang;if(!Qt.language_codes.includes(Pt))throw new Error(`Target language code "${Pt}" is not valid. Must be one of: {${Qt.language_codes.join(", ")}}`);if(Tt!==void 0){if(!Qt.language_codes.includes(Tt))throw new Error(`Source language code "${Tt}" is not valid. Must be one of: {${Qt.language_codes.join(", ")}}`);for(const st of Qt.post_processor.config.single)if("SpecialToken"in st&&Qt.languageRegex.test(st.SpecialToken.id)){st.SpecialToken.id=Qt.lang_to_token(Tt);break}}return bt.forced_bos_token_id=Qt.model.convert_tokens_to_ids([Qt.lang_to_token(Pt)])[0],Qt._call(Be,ot)}class ba extends ts{constructor(Be,ot){super(Be,ot),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(bt=>this.languageRegex.test(bt)),this.lang_to_token=bt=>bt}_build_translation_inputs(Be,ot,bt){return Zn(this,Be,ot,bt)}}class Gi extends ts{constructor(Be,ot){super(Be,ot),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(bt=>this.languageRegex.test(bt)).map(bt=>bt.slice(2,-2)),this.lang_to_token=bt=>`__${bt}__`}_build_translation_inputs(Be,ot,bt){return Zn(this,Be,ot,bt)}}class Fi extends ts{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(Be,{return_timestamps:ot=!1,return_language:bt=!1,time_precision:Tt=null,force_full_sequences:Pt=!0}={}){if(Tt===null)throw Error("Must specify time_precision");let st=null;const pe=ot==="word";function he(){return{language:st,timestamp:[null,null],text:""}}const qe=[];let it=he(),kt=0;const Ht=this.timestamp_begin,ir=Ht+1500;let fr=[],nr=[],Yt=!1,Ar=null;const Wr=new Set(this.all_special_ids);for(const as of Be){const kr=as.tokens,Ns=pe?as.token_timestamps:null;let qt=null,Tr=Ht;if("stride"in as){const[Gs,Fs,Ls]=as.stride;if(kt-=Fs,Ar=Gs-Ls,Fs&&(Tr=Fs/Tt+Ht),Ls)for(let Ms=kr.length-1;Ms>=0;--Ms){const fa=Number(kr[Ms]);if(fa>=Ht){if(qt!==null&&(fa-Ht)*Tt<Ar)break;qt=fa}}}let ha=[],xa=[];for(let Gs=0;Gs<kr.length;++Gs){const Fs=Number(kr[Gs]);if(Wr.has(Fs)){const Ls=this.decode([Fs]),Ms=v.WHISPER_LANGUAGE_MAPPING.get(Ls.slice(2,-2));if(Ms!==void 0){if(st!==null&&Ms!==st&&!ot){fr.push(ha);const fa=this.findLongestCommonSequence(fr)[0],Ba=this.decode(fa);it.text=Ba,qe.push(it),fr=[],ha=[],it=he()}st=it.language=Ms}}else if(Fs>=Ht&&Fs<=ir){const Ls=(Fs-Ht)*Tt+kt,Ms=(0,C.round)(Ls,2);if(qt!==null&&Fs>=qt)Yt=!0;else if(Yt||fr.length>0&&Fs<Tr)Yt=!1;else if(it.timestamp[0]===null)it.timestamp[0]=Ms;else if(Ms!==it.timestamp[0]){it.timestamp[1]=Ms,fr.push(ha),pe&&nr.push(xa);const[fa,Ba]=this.findLongestCommonSequence(fr,nr),Ma=this.decode(fa);it.text=Ma,pe&&(it.words=this.collateWordTimestamps(fa,Ba,st)),qe.push(it),fr=[],ha=[],nr=[],xa=[],it=he()}}else if(ha.push(Fs),pe){let Ls,Ms=(0,C.round)(Ns[Gs]+kt,2);if(Gs+1<Ns.length){Ls=(0,C.round)(Ns[Gs+1]+kt,2);const fa=this.decode([Fs]);q.test(fa)&&(Ls=(0,C.round)(Math.min(Ms+Tt,Ls),2))}else Ls=null;xa.push([Ms,Ls])}}if("stride"in as){const[Gs,Fs,Ls]=as.stride;kt+=Gs-Ls}ha.length>0?(fr.push(ha),pe&&nr.push(xa)):fr.every(Gs=>Gs.length===0)&&(it=he(),fr=[],ha=[],nr=[],xa=[])}if(fr.length>0){if(Pt&&ot)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[as,kr]=this.findLongestCommonSequence(fr,nr),Ns=this.decode(as);it.text=Ns,pe&&(it.words=this.collateWordTimestamps(as,kr,st)),qe.push(it)}let xs=Object.create(null);const Ys=qe.map(as=>as.text).join("");if(ot||bt){for(let as=0;as<qe.length;++as){const kr=qe[as];ot||delete kr.timestamp,bt||delete kr.language}if(pe){const as=[];for(const kr of qe)for(const Ns of kr.words)as.push(Ns);xs={chunks:as}}else xs={chunks:qe}}return[Ys,xs]}findLongestCommonSequence(Be,ot=null){let bt=Be[0],Tt=bt.length,Pt=[];const st=Array.isArray(ot)&&ot.length>0;let pe=st?[]:null,he=st?ot[0]:null;for(let qe=1;qe<Be.length;++qe){const it=Be[qe];let kt=0,Ht=[Tt,Tt,0,0];const ir=it.length;for(let Ys=1;Ys<Tt+ir;++Ys){const as=Math.max(0,Tt-Ys),kr=Math.min(Tt,Tt+ir-Ys),Ns=bt.slice(as,kr),qt=Math.max(0,Ys-Tt),Tr=Math.min(ir,Ys),ha=it.slice(qt,Tr);if(Ns.length!==ha.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let xa;xa=st?Ns.filter((Fs,Ls)=>Fs===ha[Ls]&&he[as+Ls]<=ot[qe][qt+Ls]).length:Ns.filter((Fs,Ls)=>Fs===ha[Ls]).length;const Gs=xa/Ys+Ys/1e4;xa>1&&Gs>kt&&(kt=Gs,Ht=[as,kr,qt,Tr])}const[fr,nr,Yt,Ar]=Ht,Wr=Math.floor((nr+fr)/2),xs=Math.floor((Ar+Yt)/2);Pt.push(...bt.slice(0,Wr)),bt=it.slice(xs),Tt=bt.length,st&&(pe.push(...he.slice(0,Wr)),he=ot[qe].slice(xs))}return Pt.push(...bt),st?(pe.push(...he),[Pt,pe]):[Pt,[]]}collateWordTimestamps(Be,ot,bt){const[Tt,Pt,st]=this.combineTokensIntoWords(Be,bt),pe=[];for(let he=0;he<Tt.length;++he){const qe=st[he];pe.push({text:Tt[he],timestamp:[ot[qe.at(0)][0],ot[qe.at(-1)][1]]})}return pe}combineTokensIntoWords(Be,ot,bt=`"'“¡¿([{-`,Tt=`"'.。,，!！?？:：”)]}、`){let Pt,st,pe;return["chinese","japanese","thai","lao","myanmar"].includes(ot=ot??"english")?[Pt,st,pe]=this.splitTokensOnUnicode(Be):[Pt,st,pe]=this.splitTokensOnSpaces(Be),this.mergePunctuations(Pt,st,pe,bt,Tt)}decode(Be,ot){let bt;return ot!=null&&ot.decode_with_timestamps?(Be instanceof y.Tensor&&(Be=N(Be)),bt=this.decodeWithTimestamps(Be,ot)):bt=super.decode(Be,ot),bt}decodeWithTimestamps(Be,ot){const bt=(ot==null?void 0:ot.time_precision)??.02,Tt=Array.from(this.all_special_ids).at(-1)+1;let Pt=[[]];for(let st of Be)if(st=Number(st),st>=Tt){const pe=((st-Tt)*bt).toFixed(2);Pt.push(`<|${pe}|>`),Pt.push([])}else Pt[Pt.length-1].push(st);return Pt=Pt.map(st=>typeof st=="string"?st:super.decode(st,ot)),Pt.join("")}splitTokensOnUnicode(Be){const ot=this.decode(Be,{decode_with_timestamps:!0}),bt=[],Tt=[],Pt=[];let st=[],pe=[],he=0;for(let qe=0;qe<Be.length;++qe){const it=Be[qe];st.push(it),pe.push(qe);const kt=this.decode(st,{decode_with_timestamps:!0});kt.includes("�")&&ot[he+kt.indexOf("�")]!=="�"||(bt.push(kt),Tt.push(st),Pt.push(pe),st=[],pe=[],he+=kt.length)}return[bt,Tt,Pt]}splitTokensOnSpaces(Be){const[ot,bt,Tt]=this.splitTokensOnUnicode(Be),Pt=[],st=[],pe=[],he=new RegExp(`^[${Q}]$`,"gu");for(let qe=0;qe<ot.length;++qe){const it=ot[qe],kt=bt[qe],Ht=Tt[qe],ir=kt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),fr=it.startsWith(" "),nr=it.trim(),Yt=he.test(nr);if(ir||fr||Yt||Pt.length===0)Pt.push(it),st.push(kt),pe.push(Ht);else{const Ar=Pt.length-1;Pt[Ar]+=it,st[Ar].push(...kt),pe[Ar].push(...Ht)}}return[Pt,st,pe]}mergePunctuations(Be,ot,bt,Tt,Pt){const st=structuredClone(Be),pe=structuredClone(ot),he=structuredClone(bt);let qe=st.length-2,it=st.length-1;for(;qe>=0;)st[qe].startsWith(" ")&&Tt.includes(st[qe].trim())?(st[it]=st[qe]+st[it],pe[it]=(0,p.mergeArrays)(pe[qe],pe[it]),he[it]=(0,p.mergeArrays)(he[qe],he[it]),st[qe]="",pe[qe]=[],he[qe]=[]):it=qe,--qe;for(qe=0,it=1;it<st.length;)!st[qe].endsWith(" ")&&Pt.includes(st[it])?(st[qe]+=st[it],pe[qe]=(0,p.mergeArrays)(pe[qe],pe[it]),he[qe]=(0,p.mergeArrays)(he[qe],he[it]),st[it]="",pe[it]=[],he[it]=[]):qe=it,++it;return[st.filter(kt=>kt),pe.filter(kt=>kt.length>0),he.filter(kt=>kt.length>0)]}}class Jn extends ts{}class gi extends ts{}class tn extends ts{}class Ei extends ts{constructor(Be,ot){super(Be,ot),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(bt=>this.languageRegex.test(bt)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(Be){if(Be===null)return null;const[ot,...bt]=Be.trim().split(this.languageRegex);if(bt.length===0)return super._encode_text(ot);if(bt.length===2){const[Tt,Pt]=bt;return this.supported_language_codes.includes(Tt)||console.warn(`Unsupported language code "${Tt}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,p.mergeArrays)([Tt],super._encode_text(Pt))}}}class pi extends ts{}class Jr extends ts{}class Cs extends ts{}class bn extends ts{}class Nn extends ts{}class zi extends ts{constructor(Be,ot){super(Be,ot),this.decoder=new It({})}}class Bi extends ts{}class rn extends ts{}class Ln{static async from_pretrained(Be,{progress_callback:ot=null,config:bt=null,cache_dir:Tt=null,local_files_only:Pt=!1,revision:st="main",legacy:pe=null}={}){var Ht;const[he,qe]=await M(Be,{progress_callback:ot,config:bt,cache_dir:Tt,local_files_only:Pt,revision:st,legacy:pe}),it=((Ht=qe.tokenizer_class)==null?void 0:Ht.replace(/Fast$/,""))??"PreTrainedTokenizer";let kt=this.TOKENIZER_CLASS_MAPPING[it];return kt||(console.warn(`Unknown tokenizer class "${it}", attempting to construct from base class.`),kt=ts),new kt(he,qe)}}Te(Ln,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:sa,DistilBertTokenizer:On,CamembertTokenizer:Pn,DebertaTokenizer:Sr,DebertaV2Tokenizer:Kt,BertTokenizer:zn,HerbertTokenizer:Bs,ConvBertTokenizer:$a,RoFormerTokenizer:en,XLMTokenizer:Dn,ElectraTokenizer:qn,MobileBertTokenizer:Wa,SqueezeBertTokenizer:Pr,AlbertTokenizer:Va,GPT2Tokenizer:Zt,BartTokenizer:Br,MBartTokenizer:zr,MBart50Tokenizer:qs,RobertaTokenizer:aa,WhisperTokenizer:Fi,CodeGenTokenizer:Jn,CLIPTokenizer:gi,SiglipTokenizer:tn,MarianTokenizer:Ei,BloomTokenizer:ks,NllbTokenizer:ba,M2M100Tokenizer:Gi,LlamaTokenizer:Qn,CodeLlamaTokenizer:Sn,XLMRobertaTokenizer:ci,MPNetTokenizer:ui,FalconTokenizer:di,GPTNeoXTokenizer:Fa,EsmTokenizer:ai,Wav2Vec2CTCTokenizer:pi,BlenderbotTokenizer:Jr,BlenderbotSmallTokenizer:Cs,SpeechT5Tokenizer:bn,NougatTokenizer:Nn,VitsTokenizer:zi,Qwen2Tokenizer:fi,GemmaTokenizer:Ri,Grok1Tokenizer:Xn,CohereTokenizer:Bi,MgpstrTokenizer:rn,PreTrainedTokenizer:ts})},"./src/utils/audio.js":(i,o,a)=>{a.r(o),a.d(o,{RawAudio:()=>e,hamming:()=>B,hanning:()=>M,mel_filter_bank:()=>O,read_audio:()=>_,spectrogram:()=>q,window_function:()=>f});var u=a("./src/utils/hub.js"),p=a("./src/utils/maths.js"),h=a("./src/utils/core.js"),C=a("./src/env.js"),y=a("?7a2c"),k=a("./src/utils/tensor.js");async function _(c,P){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const J=await(await(0,u.getFile)(c)).arrayBuffer(),D=new AudioContext({sampleRate:P});P===void 0&&console.warn(`No sampling rate provided, using default of ${D.sampleRate}Hz.`);const j=await D.decodeAudioData(J);let Ie;if(j.numberOfChannels===2){const ge=Math.sqrt(2),ke=j.getChannelData(0),Ee=j.getChannelData(1);Ie=new Float32Array(ke.length);for(let Ne=0;Ne<j.length;++Ne)Ie[Ne]=ge*(ke[Ne]+Ee[Ne])/2}else Ie=j.getChannelData(0);return Ie}function v(c,P){if(c<1)return new Float64Array;if(c===1)return new Float64Array([1]);const J=1-P,D=2*Math.PI/(c-1),j=new Float64Array(c);for(let Ie=0;Ie<c;++Ie)j[Ie]=P-J*Math.cos(Ie*D);return j}function M(c){return v(c,.5)}function B(c){return v(c,.54)}const S={htk:c=>2595*Math.log10(1+c/700),kaldi:c=>1127*Math.log(1+c/700),slaney:(c,P=1e3,J=15,D=27/Math.log(6.4))=>c>=P?J+Math.log(c/P)*D:3*c/200};function N(c,P="htk"){const J=S[P];if(!J)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof c=="number"?J(c):c.map(D=>J(D))}const V={htk:c=>700*(10**(c/2595)-1),kaldi:c=>700*(Math.exp(c/1127)-1),slaney:(c,P=1e3,J=15,D=Math.log(6.4)/27)=>c>=J?P*Math.exp(D*(c-J)):200*c/3};function Z(c,P,J){const D=(P-c)/(J-1);return Float64Array.from({length:J},(j,Ie)=>c+D*Ie)}function O(c,P,J,D,j,Ie=null,ge="htk",ke=!1){if(Ie!==null&&Ie!=="slaney")throw new Error('norm must be one of null or "slaney"');const Ee=Z(N(J,ge),N(D,ge),P+2);let Ne,Xe=function(xe,ye="htk"){const ue=V[ye];if(!ue)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof xe=="number"?ue(xe):xe.map(ie=>ue(ie))}(Ee,ge);if(ke){const xe=j/(2*c);Ne=N(Float64Array.from({length:c},(ye,ue)=>ue*xe),ge),Xe=Ee}else Ne=Z(0,Math.floor(j/2),c);const At=function(xe,ye){const ue=Float64Array.from({length:ye.length-1},(Le,lt)=>ye[lt+1]-ye[lt]),ie=Array.from({length:xe.length},()=>new Array(ye.length));for(let Le=0;Le<xe.length;++Le){const lt=ie[Le];for(let ft=0;ft<ye.length;++ft)lt[ft]=ye[ft]-xe[Le]}const be=ye.length-2,Ye=Array.from({length:be},()=>new Array(xe.length));for(let Le=0;Le<xe.length;++Le){const lt=ie[Le];for(let ft=0;ft<be;++ft){const pt=-lt[ft]/ue[ft],ct=lt[ft+2]/ue[ft+1];Ye[ft][Le]=Math.max(0,Math.min(pt,ct))}}return Ye}(Ne,Xe);if(Ie!==null&&Ie==="slaney")for(let xe=0;xe<P;++xe){const ye=At[xe],ue=2/(Xe[xe+2]-Xe[xe]);for(let ie=0;ie<c;++ie)ye[ie]*=ue}return At}function Q(c,P,J,D,j){if(J<=0)throw new Error("reference must be greater than zero");if(D<=0)throw new Error("min_value must be greater than zero");J=Math.max(D,J);const Ie=Math.log10(J);for(let ge=0;ge<c.length;++ge)c[ge]=P*Math.log10(Math.max(D,c[ge])-Ie);if(j!==null){if(j<=0)throw new Error("db_range must be greater than zero");const ge=(0,p.max)(c)[0]-j;for(let ke=0;ke<c.length;++ke)c[ke]=Math.max(c[ke],ge)}return c}async function q(c,P,J,D,{fft_length:j=null,power:Ie=1,center:ge=!0,pad_mode:ke="reflect",onesided:Ee=!0,preemphasis:Ne=null,mel_filters:Xe=null,mel_floor:At=1e-10,log_mel:xe=null,reference:ye=1,min_value:ue=1e-10,db_range:ie=null,remove_dc_offset:be=null,min_num_frames:Ye=null,max_num_frames:Le=null,do_pad:lt=!0,transpose:ft=!1}={}){const pt=P.length;if(j===null&&(j=J),J>j)throw Error(`frame_length (${J}) may not be larger than fft_length (${j})`);if(pt!==J)throw new Error(`Length of the window (${pt}) must equal frame_length (${J})`);if(D<=0)throw new Error("hop_length must be greater than zero");if(Ie===null&&Xe!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ge){if(ke!=="reflect")throw new Error(`pad_mode="${ke}" not implemented yet.`);const ve=Math.floor((j-1)/2)+1;c=function(H,ce,ne){const ze=new H.constructor(H.length+ce+ne),$e=H.length-1;for(let gt=0;gt<H.length;++gt)ze[ce+gt]=H[gt];for(let gt=1;gt<=ce;++gt)ze[ce-gt]=H[(0,h.calculateReflectOffset)(gt,$e)];for(let gt=1;gt<=ne;++gt)ze[$e+ce+gt]=H[(0,h.calculateReflectOffset)($e-gt,$e)];return ze}(c,ve,ve)}let ct=Math.floor(1+Math.floor((c.length-J)/D));Ye!==null&&ct<Ye&&(ct=Ye);const He=Ee?Math.floor(j/2)+1:j;let Re=ct,Se=ct;Le!==null&&(Le>ct?lt&&(Se=Le):Se=Re=Le);const Qe=new p.FFT(j),ht=new Float64Array(j),wt=new Float64Array(Qe.outputBufferSize),Bt=new Float32Array(He*Se);for(let ve=0;ve<Re;++ve){const H=ve*D,ce=Math.min(c.length-H,J);ce!==J&&ht.fill(0,0,J);for(let ne=0;ne<ce;++ne)ht[ne]=c[H+ne];if(be){let ne=0;for(let $e=0;$e<ce;++$e)ne+=ht[$e];const ze=ne/ce;for(let $e=0;$e<ce;++$e)ht[$e]-=ze}if(Ne!==null){for(let ne=ce-1;ne>=1;--ne)ht[ne]-=Ne*ht[ne-1];ht[0]*=1-Ne}for(let ne=0;ne<P.length;++ne)ht[ne]*=P[ne];Qe.realTransform(wt,ht);for(let ne=0;ne<He;++ne){const ze=ne<<1;Bt[ne*Se+ve]=wt[ze]**2+wt[ze+1]**2}}if(Ie!==null&&Ie!==2){const ve=2/Ie;for(let H=0;H<Bt.length;++H)Bt[H]**=ve}const Mt=Xe.length;let oe=await(0,k.matmul)(new k.Tensor("float32",Xe.flat(),[Mt,He]),new k.Tensor("float32",Bt,[He,Se]));ft&&(oe=oe.transpose(1,0));const zt=oe.data;for(let ve=0;ve<zt.length;++ve)zt[ve]=Math.max(At,zt[ve]);if(Ie!==null&&xe!==null){const ve=Math.min(zt.length,Re*Mt);switch(xe){case"log":for(let H=0;H<ve;++H)zt[H]=Math.log(zt[H]);break;case"log10":for(let H=0;H<ve;++H)zt[H]=Math.log10(zt[H]);break;case"dB":if(Ie===1)(function(H,ce=1,ne=1e-5,ze=null){Q(H,20,ce,ne,ze)})(zt,ye,ue,ie);else{if(Ie!==2)throw new Error(`Cannot use log_mel option '${xe}' with power ${Ie}`);(function(H,ce=1,ne=1e-10,ze=null){Q(H,10,ce,ne,ze)})(zt,ye,ue,ie)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${xe}'`)}}return oe}function f(c,P,{periodic:J=!0,frame_length:D=null,center:j=!0}={}){const Ie=J?c+1:c;let ge;switch(P){case"boxcar":ge=new Float64Array(Ie).fill(1);break;case"hann":case"hann_window":ge=M(Ie);break;case"hamming":ge=B(Ie);break;case"povey":ge=M(Ie).map(ke=>Math.pow(ke,.85));break;default:throw new Error(`Unknown window type ${P}.`)}if(J&&(ge=ge.subarray(0,c)),D===null)return ge;if(c>D)throw new Error(`Length of the window (${c}) may not be larger than frame_length (${D})`);return ge}function I(c,P,J){for(let D=0;D<J.length;++D)c.setUint8(P+D,J.charCodeAt(D))}class e{constructor(P,J){this.audio=P,this.sampling_rate=J}toWav(){return function(P,J){let D=44;const j=new ArrayBuffer(D+4*P.length),Ie=new DataView(j);I(Ie,0,"RIFF"),Ie.setUint32(4,36+4*P.length,!0),I(Ie,8,"WAVE"),I(Ie,12,"fmt "),Ie.setUint32(16,16,!0),Ie.setUint16(20,3,!0),Ie.setUint16(22,1,!0),Ie.setUint32(24,J,!0),Ie.setUint32(28,4*J,!0),Ie.setUint16(32,4,!0),Ie.setUint16(34,32,!0),I(Ie,36,"data"),Ie.setUint32(40,4*P.length,!0);for(let ge=0;ge<P.length;++ge,D+=4)Ie.setFloat32(D,P[ge],!0);return j}(this.audio,this.sampling_rate)}toBlob(){const P=this.toWav();return new Blob([P],{type:"audio/wav"})}async save(P){let J;if(C.apis.IS_BROWSER_ENV){if(C.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");J=h.saveBlob}else{if(!C.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");J=async(D,j)=>{let Ie=await j.arrayBuffer();y.writeFileSync(D,Buffer.from(Ie))}}await J(P,this.toBlob())}}},"./src/utils/constants.js":(i,o,a)=>{a.r(o),a.d(o,{CHAT_TEMPLATE_NAME:()=>k,CONFIG_NAME:()=>p,FEATURE_EXTRACTOR_NAME:()=>h,GENERATION_CONFIG_NAME:()=>_,GITHUB_ISSUE_URL:()=>u,IMAGE_PROCESSOR_NAME:()=>C,PROCESSOR_NAME:()=>y});const u="https://github.com/huggingface/transformers.js/issues/new/choose",p="config.json",h="preprocessor_config.json",C=h,y="processor_config.json",k="chat_template.json",_="generation_config.json"},"./src/utils/core.js":(i,o,a)=>{function u(Q,q){Q&&Q(q)}function p(Q){return Object.fromEntries(Object.entries(Q).map(([q,f])=>[f,q]))}function h(Q){return Q.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function C(Q){var q,f,I;return((I=(f=(q=Q==null?void 0:Q.prototype)==null?void 0:q.__proto__)==null?void 0:f.constructor)==null?void 0:I.name)==="TypedArray"}function y(Q){return Number.isInteger(Q)||typeof Q=="bigint"}function k(Q){return Q==null||Q===-1}function _(Q){const q=[];let f=Q;for(;Array.isArray(f);)q.push(f.length),f=f[0];return q}function v(Q,q,f=void 0){const I=Q[q];if(I!==void 0)return delete Q[q],I;if(f===void 0)throw Error(`Key ${q} does not exist in object.`);return f}function M(...Q){return Array.prototype.concat.apply([],Q)}function B(...Q){return Q.reduce((q,f)=>q.flatMap(I=>f.map(e=>[I,e])))}function S(Q,q){return Math.abs((Q+q)%(2*q)-q)}function N(Q,q){const f=URL.createObjectURL(q),I=document.createElement("a");I.href=f,I.download=Q,I.click(),I.remove(),URL.revokeObjectURL(f)}function V(Q,q){return Object.assign({},...q.map(f=>{if(Q[f]!==void 0)return{[f]:Q[f]}}))}function Z(Q){let q=0;for(const f of Q)++q;return q}function O(Q,q){let f=0;for(const I of Q)I===q&&++f;return f}a.r(o),a.d(o,{calculateDimensions:()=>_,calculateReflectOffset:()=>S,count:()=>O,dispatchCallback:()=>u,escapeRegExp:()=>h,isIntegralNumber:()=>y,isNullishDimension:()=>k,isTypedArray:()=>C,len:()=>Z,mergeArrays:()=>M,pick:()=>V,pop:()=>v,product:()=>B,reverseDictionary:()=>p,saveBlob:()=>N})},"./src/utils/data-structures.js":(i,o,a)=>{a.r(o),a.d(o,{CharTrie:()=>p,PriorityQueue:()=>u,TokenLattice:()=>C});class u{constructor(_=(M,B)=>M>B,v=1/0){this._heap=[],this._comparator=_,this._maxSize=v}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(..._){return this.extend(_)}extend(_){for(const v of _)if(this.size<this._maxSize)this._heap.push(v),this._siftUp();else{const M=this._smallest();this._comparator(v,this._heap[M])&&(this._heap[M]=v,this._siftUpFrom(M))}return this.size}pop(){const _=this.peek(),v=this.size-1;return v>0&&this._swap(0,v),this._heap.pop(),this._siftDown(),_}replace(_){const v=this.peek();return this._heap[0]=_,this._siftDown(),v}_parent(_){return(_+1>>>1)-1}_left(_){return 1+(_<<1)}_right(_){return _+1<<1}_greater(_,v){return this._comparator(this._heap[_],this._heap[v])}_swap(_,v){const M=this._heap[_];this._heap[_]=this._heap[v],this._heap[v]=M}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(_){for(;_>0&&this._greater(_,this._parent(_));)this._swap(_,this._parent(_)),_=this._parent(_)}_siftDown(){let _=0;for(;this._left(_)<this.size&&this._greater(this._left(_),_)||this._right(_)<this.size&&this._greater(this._right(_),_);){const v=this._right(_)<this.size&&this._greater(this._right(_),this._left(_))?this._right(_):this._left(_);this._swap(_,v),_=v}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class p{constructor(){this.root=h.default()}extend(_){for(const v of _)this.push(v)}push(_){let v=this.root;for(const M of _){let B=v.children.get(M);B===void 0&&(B=h.default(),v.children.set(M,B)),v=B}v.isLeaf=!0}*commonPrefixSearch(_){let v=this.root;if(v===void 0)return;let M="";for(const B of _){if(M+=B,v=v.children.get(B),v===void 0)return;v.isLeaf&&(yield M)}}}class h{constructor(_,v){this.isLeaf=_,this.children=v}static default(){return new h(!1,new Map)}}class C{constructor(_,v,M){this.chars=Array.from(_),this.len=this.chars.length,this.bosTokenId=v,this.eosTokenId=M,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const B=new y(this.bosTokenId,0,0,0,0),S=new y(this.eosTokenId,1,this.len,0,0);this.nodes.push(B.clone()),this.nodes.push(S.clone()),this.beginNodes[this.len].push(S),this.endNodes[0].push(B)}insert(_,v,M,B){const S=this.nodes.length,N=new y(B,S,_,v,M);this.beginNodes[_].push(N),this.endNodes[_+v].push(N),this.nodes.push(N)}viterbi(){const _=this.len;let v=0;for(;v<=_;){if(this.beginNodes[v].length==0)return[];for(let N of this.beginNodes[v]){N.prev=null;let V=0,Z=null;for(let O of this.endNodes[v]){const Q=O.backtraceScore+N.score;(Z===null||Q>V)&&(Z=O.clone(),V=Q)}if(Z===null)return[];N.prev=Z,N.backtraceScore=V}++v}const M=[],B=this.beginNodes[_][0].prev;if(B===null)return[];let S=B.clone();for(;S.prev!==null;)M.push(S.clone()),S=S.clone().prev.clone();return M.reverse(),M}piece(_){return this.chars.slice(_.pos,_.pos+_.length).join("")}tokens(){return this.viterbi().map(_=>this.piece(_))}tokenIds(){return this.viterbi().map(_=>_.tokenId)}}class y{constructor(_,v,M,B,S){this.tokenId=_,this.nodeId=v,this.pos=M,this.length=B,this.score=S,this.prev=null,this.backtraceScore=0}clone(){const _=new y(this.tokenId,this.nodeId,this.pos,this.length,this.score);return _.prev=this.prev,_.backtraceScore=this.backtraceScore,_}}},"./src/utils/devices.js":(i,o,a)=>{a.r(o),a.d(o,{DEVICE_TYPES:()=>u});const u=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(i,o,a)=>{a.r(o),a.d(o,{DATA_TYPES:()=>C,DEFAULT_DEVICE_DTYPE_MAPPING:()=>y,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>k,isWebGpuFp16Supported:()=>h});var u=a("./src/env.js"),p=a("./src/utils/devices.js");const h=function(){let _;return async function(){if(_===void 0)if(u.apis.IS_WEBGPU_AVAILABLE)try{_=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{_=!1}else _=!1;return _}}(),C=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),y=Object.freeze({[p.DEVICE_TYPES.wasm]:C.q8}),k=Object.freeze({[C.fp32]:"",[C.fp16]:"_fp16",[C.int8]:"_int8",[C.uint8]:"_uint8",[C.q8]:"_quantized",[C.q4]:"_q4",[C.q4f16]:"_q4f16",[C.bnb4]:"_bnb4"})},"./src/utils/generic.js":(i,o,a)=>{a.r(o),a.d(o,{Callable:()=>u});const u=class{constructor(){let p=function(...h){return p._call(...h)};return Object.setPrototypeOf(p,new.target.prototype)}_call(...p){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(i,o,a)=>{a.r(o),a.d(o,{getFile:()=>v,getModelFile:()=>S,getModelJSON:()=>N});var u=a("?7a2c"),p=a("?a42a"),h=a("./src/env.js"),C=a("./src/utils/core.js");const y={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class k{constructor(O){if(this.filePath=O,this.headers=new Headers,this.exists=u.existsSync(O),this.exists){this.status=200,this.statusText="OK";let Q=u.statSync(O);this.headers.set("content-length",Q.size.toString()),this.updateContentType();let q=this;this.body=new ReadableStream({start(f){q.arrayBuffer().then(I=>{f.enqueue(new Uint8Array(I)),f.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const O=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",y[O]??"application/octet-stream")}clone(){let O=new k(this.filePath);return O.exists=this.exists,O.status=this.status,O.statusText=this.statusText,O.headers=new Headers(this.headers),O}async arrayBuffer(){return(await u.promises.readFile(this.filePath)).buffer}async blob(){const O=await u.promises.readFile(this.filePath);return new Blob([O],{type:this.headers.get("content-type")})}async text(){return await u.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function _(Z,O=null,Q=null){let q;try{q=new URL(Z)}catch{return!1}return!(O&&!O.includes(q.protocol))&&!(Q&&!Q.includes(q.hostname))}async function v(Z){var O;if(h.env.useFS&&!_(Z,["http:","https:","blob:"]))return new k(Z);if(typeof process<"u"&&((O=process==null?void 0:process.release)==null?void 0:O.name)==="node"){const Q=!!(aA!=null&&aA.TESTING_REMOTELY),q=h.env.version,f=new Headers;if(f.set("User-Agent",`transformers.js/${q}; is_ci/${Q};`),_(Z,["http:","https:"],["huggingface.co","hf.co"])){const I=(aA==null?void 0:aA.HF_TOKEN)??(aA==null?void 0:aA.HF_ACCESS_TOKEN);I&&f.set("Authorization",`Bearer ${I}`)}return fetch(Z,{headers:f})}return fetch(Z)}const M={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class B{constructor(O){this.path=O}async match(O){let Q=p.join(this.path,O),q=new k(Q);return q.exists?q:void 0}async put(O,Q){const q=Buffer.from(await Q.arrayBuffer());let f=p.join(this.path,O);try{await u.promises.mkdir(p.dirname(f),{recursive:!0}),await u.promises.writeFile(f,q)}catch(I){console.warn("An error occurred while writing the file to cache:",I)}}}async function S(Z,O,Q=!0,q={}){if(!h.env.allowLocalModels){if(q.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!h.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let f;if((0,C.dispatchCallback)(q.progress_callback,{status:"initiate",name:Z,file:O}),!f&&h.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{f=await caches.open("transformers-cache")}catch(Ne){console.warn("An error occurred while opening the browser cache:",Ne)}}if(!f&&h.env.useFSCache&&(f=new B(q.cache_dir??h.env.cacheDir)),!f&&h.env.useCustomCache){if(!h.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!h.env.customCache.match||!h.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");f=h.env.customCache}const I=q.revision??"main";let e,c,P=V(Z,O),J=V(h.env.localModelPath,P),D=V(h.env.remoteHost,h.env.remotePathTemplate.replaceAll("{model}",Z).replaceAll("{revision}",encodeURIComponent(I)),O),j=I==="main"?P:V(Z,I,O),Ie=f instanceof B?j:D,ge=!1;f&&(c=await async function(Ne,...Xe){for(let At of Xe)try{let xe=await Ne.match(At);if(xe)return xe}catch{continue}}(f,J,Ie));const ke=c!==void 0;if(c===void 0){if(h.env.allowLocalModels)if(_(P,["http:","https:"])){if(q.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${P}.`);if(!h.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${P}.`)}else try{c=await v(J),e=J}catch(Ne){console.warn(`Unable to load from local path "${J}": "${Ne}"`)}if(c===void 0||c.status===404){if(q.local_files_only||!h.env.allowRemoteModels){if(Q)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${J}".`);return null}if(c=await v(D),c.status!==200)return function(Ne,Xe,At){if(!At)return null;const xe=M[Ne]??`Error (${Ne}) occurred while trying to load file`;throw Error(`${xe}: "${Xe}".`)}(c.status,D,Q);e=Ie}ge=f&&typeof Response<"u"&&c instanceof Response&&c.status===200}let Ee;return(0,C.dispatchCallback)(q.progress_callback,{status:"download",name:Z,file:O}),q.progress_callback?ke&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Ee=new Uint8Array(await c.arrayBuffer()),(0,C.dispatchCallback)(q.progress_callback,{status:"progress",name:Z,file:O,progress:100,loaded:Ee.length,total:Ee.length})):Ee=await async function(Ne,Xe){const At=Ne.headers.get("Content-Length");At===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let xe=parseInt(At??"0"),ye=new Uint8Array(xe),ue=0;const ie=Ne.body.getReader();async function be(){const{done:Ye,value:Le}=await ie.read();if(Ye)return;let lt=ue+Le.length;if(lt>xe){xe=lt;let ft=new Uint8Array(xe);ft.set(ye),ye=ft}return ye.set(Le,ue),ue=lt,Xe({progress:ue/xe*100,loaded:ue,total:xe}),be()}return await be(),ye}(c,Ne=>{(0,C.dispatchCallback)(q.progress_callback,{status:"progress",name:Z,file:O,...Ne})}):Ee=new Uint8Array(await c.arrayBuffer()),ge&&e&&await f.match(e)===void 0&&await f.put(e,new Response(Ee,{headers:c.headers})).catch(Ne=>{console.warn(`Unable to add response to browser cache: ${Ne}.`)}),(0,C.dispatchCallback)(q.progress_callback,{status:"done",name:Z,file:O}),Ee}async function N(Z,O,Q=!0,q={}){let f=await S(Z,O,Q,q);if(f===null)return{};let I=new TextDecoder("utf-8").decode(f);return JSON.parse(I)}function V(...Z){return(Z=Z.map((O,Q)=>(Q&&(O=O.replace(new RegExp("^/"),"")),Q!==Z.length-1&&(O=O.replace(new RegExp("/$"),"")),O))).join("/")}},"./src/utils/image.js":(i,o,a)=>{a.r(o),a.d(o,{RawImage:()=>N,load_image:()=>V});var u=a("./src/utils/core.js"),p=a("./src/utils/hub.js"),h=a("./src/env.js"),C=a("./src/utils/tensor.js"),y=a("?2b25");let k,_,v;const M=h.apis.IS_BROWSER_ENV||h.apis.IS_WEBWORKER_ENV;if(M)k=(Z,O)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Z,O)},v=self.createImageBitmap,_=self.ImageData;else{if(!y)throw new Error("Unable to load image processing library.");v=async Z=>{const O=(await Z.metadata()).channels,{data:Q,info:q}=await Z.rotate().raw().toBuffer({resolveWithObject:!0}),f=new N(new Uint8ClampedArray(Q),q.width,q.height,q.channels);return O!==void 0&&O!==q.channels&&f.convert(O),f}}const B={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},S=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class N{constructor(O,Q,q,f){this.data=O,this.width=Q,this.height=q,this.channels=f}get size(){return[this.width,this.height]}static async read(O){if(O instanceof N)return O;if(typeof O=="string"||O instanceof URL)return await this.fromURL(O);throw new Error("Unsupported input type: "+typeof O)}static fromCanvas(O){if(!M)throw new Error("fromCanvas() is only supported in browser environments.");const Q=O.getContext("2d").getImageData(0,0,O.width,O.height).data;return new N(Q,O.width,O.height,4)}static async fromURL(O){const Q=await(0,p.getFile)(O);if(Q.status!==200)throw new Error(`Unable to read image from "${O}" (${Q.status} ${Q.statusText})`);const q=await Q.blob();return this.fromBlob(q)}static async fromBlob(O){if(M){const Q=await v(O),q=k(Q.width,Q.height).getContext("2d");return q.drawImage(Q,0,0),new this(q.getImageData(0,0,Q.width,Q.height).data,Q.width,Q.height,4)}{const Q=y(await O.arrayBuffer());return await v(Q)}}static fromTensor(O,Q="CHW"){if(O.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${O.dims.length} dimensions.`);if(Q==="CHW")O=O.transpose(1,2,0);else if(Q!=="HWC")throw new Error(`Unsupported channel format: ${Q}`);if(!(O.data instanceof Uint8ClampedArray||O.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${O.type}`);switch(O.dims[2]){case 1:case 2:case 3:case 4:return new N(O.data,O.dims[1],O.dims[0],O.dims[2]);default:throw new Error(`Unsupported number of channels: ${O.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const O=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let Q=0,q=0;Q<this.data.length;Q+=this.channels){const f=this.data[Q],I=this.data[Q+1],e=this.data[Q+2];O[q++]=Math.round(.2989*f+.587*I+.114*e)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(O,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const O=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let Q=0,q=0;Q<this.data.length;++Q)O[q++]=this.data[Q],O[q++]=this.data[Q],O[q++]=this.data[Q];break;case 4:for(let Q=0,q=0;Q<this.data.length;Q+=4)O[q++]=this.data[Q],O[q++]=this.data[Q+1],O[q++]=this.data[Q+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(O,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const O=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let Q=0,q=0;Q<this.data.length;++Q)O[q++]=this.data[Q],O[q++]=this.data[Q],O[q++]=this.data[Q],O[q++]=255;break;case 3:for(let Q=0,q=0;Q<this.data.length;Q+=3)O[q++]=this.data[Q],O[q++]=this.data[Q+1],O[q++]=this.data[Q+2],O[q++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(O,this.width,this.height,4)}putAlpha(O){if(O.width!==this.width||O.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${O.width}x${O.height}`);if(O.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${O.channels}`);const Q=this.data,q=O.data,f=this.width*this.height;if(this.channels===3){const I=new Uint8ClampedArray(4*f);for(let e=0,c=0,P=0;e<f;++e)I[P++]=Q[c++],I[P++]=Q[c++],I[P++]=Q[c++],I[P++]=q[e];return this._update(I,this.width,this.height,4)}if(this.channels===4){for(let I=0;I<f;++I)Q[4*I+3]=q[I];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(O,Q,{resample:q=2}={}){if(this.width===O&&this.height===Q)return this;let f=B[q]??q;const I=(0,u.isNullishDimension)(O),e=(0,u.isNullishDimension)(Q);if(I&&e)return this;if(I?O=Q/this.height*this.width:e&&(Q=O/this.width*this.height),M){const c=this.channels,P=this.toCanvas(),J=k(O,Q).getContext("2d");return J.drawImage(P,0,0,O,Q),new N(J.getImageData(0,0,O,Q).data,O,Q,4).convert(c)}{let c=this.toSharp();switch(f){case"box":case"hamming":f!=="box"&&f!=="hamming"||(console.warn(`Resampling method ${f} is not yet supported. Using bilinear instead.`),f="bilinear");case"nearest":case"bilinear":case"bicubic":c=c.affine([O/this.width,0,0,Q/this.height],{interpolator:f});break;case"lanczos":c=c.resize({width:O,height:Q,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${f} is not supported.`)}return await v(c)}}async pad([O,Q,q,f]){if(O=Math.max(O,0),Q=Math.max(Q,0),q=Math.max(q,0),f=Math.max(f,0),O===0&&Q===0&&q===0&&f===0)return this;if(M){const I=this.channels,e=this.toCanvas(),c=this.width+O+Q,P=this.height+q+f,J=k(c,P).getContext("2d");return J.drawImage(e,0,0,this.width,this.height,O,q,this.width,this.height),new N(J.getImageData(0,0,c,P).data,c,P,4).convert(I)}{const I=this.toSharp().extend({left:O,right:Q,top:q,bottom:f});return await v(I)}}async crop([O,Q,q,f]){if(O=Math.max(O,0),Q=Math.max(Q,0),q=Math.min(q,this.width-1),f=Math.min(f,this.height-1),O===0&&Q===0&&q===this.width-1&&f===this.height-1)return this;const I=q-O+1,e=f-Q+1;if(M){const c=this.channels,P=this.toCanvas(),J=k(I,e).getContext("2d");return J.drawImage(P,O,Q,I,e,0,0,I,e),new N(J.getImageData(0,0,I,e).data,I,e,4).convert(c)}{const c=this.toSharp().extract({left:O,top:Q,width:I,height:e});return await v(c)}}async center_crop(O,Q){if(this.width===O&&this.height===Q)return this;const q=(this.width-O)/2,f=(this.height-Q)/2;if(M){const I=this.channels,e=this.toCanvas(),c=k(O,Q).getContext("2d");let P=0,J=0,D=0,j=0;return q>=0?P=q:D=-q,f>=0?J=f:j=-f,c.drawImage(e,P,J,O,Q,D,j,O,Q),new N(c.getImageData(0,0,O,Q).data,O,Q,4).convert(I)}{let I=this.toSharp();if(q>=0&&f>=0)I=I.extract({left:Math.floor(q),top:Math.floor(f),width:O,height:Q});else if(q<=0&&f<=0){const e=Math.floor(-f),c=Math.floor(-q);I=I.extend({top:e,left:c,right:O-this.width-c,bottom:Q-this.height-e})}else{let e=[0,0],c=0;f<0?(e[0]=Math.floor(-f),e[1]=Q-this.height-e[0]):c=Math.floor(f);let P=[0,0],J=0;q<0?(P[0]=Math.floor(-q),P[1]=O-this.width-P[0]):J=Math.floor(q),I=I.extend({top:e[0],bottom:e[1],left:P[0],right:P[1]}).extract({left:J,top:c,width:O,height:Q})}return await v(I)}}async toBlob(O="image/png",Q=1){if(!M)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:O,quality:Q})}toTensor(O="CHW"){let Q=new C.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(O!=="HWC"){if(O!=="CHW")throw new Error(`Unsupported channel format: ${O}`);Q=Q.permute(2,0,1)}return Q}toCanvas(){if(!M)throw new Error("toCanvas() is only supported in browser environments.");const O=this.clone().rgba(),Q=k(O.width,O.height),q=new _(O.data,O.width,O.height);return Q.getContext("2d").putImageData(q,0,0),Q}split(){const{data:O,width:Q,height:q,channels:f}=this,I=O.constructor,e=O.length/f,c=Array.from({length:f},()=>new I(e));for(let P=0;P<e;++P){const J=f*P;for(let D=0;D<f;++D)c[D][P]=O[J+D]}return c.map(P=>new N(P,Q,q,1))}_update(O,Q,q,f=null){return this.data=O,this.width=Q,this.height=q,f!==null&&(this.channels=f),this}clone(){return new N(this.data.slice(),this.width,this.height,this.channels)}convert(O){if(this.channels===O)return this;switch(O){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(O){if(!M){if(h.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(O);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(h.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const Q=O.split(".").pop().toLowerCase(),q=S.get(Q)??"image/png",f=await this.toBlob(q);(0,u.saveBlob)(O,f)}}toSharp(){if(M)throw new Error("toSharp() is only supported in server-side environments.");return y(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const V=N.read.bind(N)},"./src/utils/maths.js":(i,o,a)=>{function u(f,[I,e,c],[P,J],D="bilinear",j=!1){const Ie=J/c,ge=P/e,ke=new f.constructor(P*J*I),Ee=e*c,Ne=P*J;for(let Xe=0;Xe<P;++Xe)for(let At=0;At<J;++At){const xe=Xe*J+At,ye=(At+.5)/Ie-.5,ue=(Xe+.5)/ge-.5;let ie=Math.floor(ye),be=Math.floor(ue);const Ye=Math.min(ie+1,c-1),Le=Math.min(be+1,e-1);ie=Math.max(ie,0),be=Math.max(be,0);const lt=ye-ie,ft=ue-be,pt=(1-lt)*(1-ft),ct=lt*(1-ft),He=(1-lt)*ft,Re=lt*ft,Se=be*c,Qe=Le*c,ht=Se+ie,wt=Se+Ye,Bt=Qe+ie,Mt=Qe+Ye;for(let oe=0;oe<I;++oe){const zt=oe*Ee;ke[oe*Ne+xe]=pt*f[zt+ht]+ct*f[zt+wt]+He*f[zt+Bt]+Re*f[zt+Mt]}}return ke}function p(f,I,e){const c=new Array(e.length),P=new Array(e.length);for(let j=e.length-1,Ie=1;j>=0;--j)P[j]=Ie,c[j]=I[e[j]],Ie*=c[j];const J=e.map((j,Ie)=>P[e.indexOf(Ie)]),D=new f.constructor(f.length);for(let j=0;j<f.length;++j){let Ie=0;for(let ge=I.length-1,ke=j;ge>=0;--ge)Ie+=ke%I[ge]*J[ge],ke=Math.floor(ke/I[ge]);D[Ie]=f[j]}return[D,c]}function h(f){const I=M(f)[0],e=f.map(J=>Math.exp(J-I)),c=e.reduce((J,D)=>J+D,0);return e.map(J=>J/c)}function C(f){const I=M(f)[0];let e=0;for(let J=0;J<f.length;++J)e+=Math.exp(f[J]-I);const c=Math.log(e);return f.map(J=>J-I-c)}function y(f,I){let e=0;for(let c=0;c<f.length;++c)e+=f[c]*I[c];return e}function k(f,I){return y(f,I)/(_(f)*_(I))}function _(f){return Math.sqrt(f.reduce((I,e)=>I+e*e,0))}function v(f){if(f.length===0)throw Error("Array must not be empty");let I=f[0],e=0;for(let c=1;c<f.length;++c)f[c]<I&&(I=f[c],e=c);return[I,e]}function M(f){if(f.length===0)throw Error("Array must not be empty");let I=f[0],e=0;for(let c=1;c<f.length;++c)f[c]>I&&(I=f[c],e=c);return[I,e]}function B(f){return f>0&&!(f&f-1)}a.r(o),a.d(o,{FFT:()=>V,bankers_round:()=>Q,cos_sim:()=>k,dot:()=>y,dynamic_time_warping:()=>q,interpolate_data:()=>u,log_softmax:()=>C,magnitude:()=>_,max:()=>M,medianFilter:()=>Z,min:()=>v,permute_data:()=>p,round:()=>O,softmax:()=>h});class S{constructor(I){if(this.size=0|I,this.size<=1||!B(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=I<<1,this.table=new Float64Array(2*this.size);for(let c=0;c<this.table.length;c+=2){const P=Math.PI*c/this.size;this.table[c]=Math.cos(P),this.table[c+1]=-Math.sin(P)}let e=0;for(let c=1;this.size>c;c<<=1)++e;this._width=e%2==0?e-1:e,this._bitrev=new Int32Array(1<<this._width);for(let c=0;c<this._bitrev.length;++c){this._bitrev[c]=0;for(let P=0;P<this._width;P+=2){const J=this._width-P-2;this._bitrev[c]|=(c>>>P&3)<<J}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(I,e){const c=e||new Array(I.length>>>1);for(let P=0;P<I.length;P+=2)c[P>>>1]=I[P];return c}toComplexArray(I,e){const c=e||this.createComplexArray();for(let P=0;P<c.length;P+=2)c[P]=I[P>>>1],c[P+1]=0;return c}transform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,1)}realTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._realTransform4(I,e,1)}inverseTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,-1);for(let c=0;c<I.length;++c)I[c]/=this.size}_transform4(I,e,c){const P=this._csize;let J,D,j=1<<this._width,Ie=P/j<<1;const ge=this._bitrev;if(Ie===4)for(J=0,D=0;J<P;J+=Ie,++D){const Ee=ge[D];this._singleTransform2(e,I,J,Ee,j)}else for(J=0,D=0;J<P;J+=Ie,++D){const Ee=ge[D];this._singleTransform4(e,I,J,Ee,j,c)}const ke=this.table;for(j>>=2;j>=2;j>>=2){Ie=P/j<<1;const Ee=Ie>>>2;for(J=0;J<P;J+=Ie){const Ne=J+Ee-1;for(let Xe=J,At=0;Xe<Ne;Xe+=2,At+=j){const xe=Xe,ye=xe+Ee,ue=ye+Ee,ie=ue+Ee,be=I[xe],Ye=I[xe+1],Le=I[ye],lt=I[ye+1],ft=I[ue],pt=I[ue+1],ct=I[ie],He=I[ie+1],Re=ke[At],Se=c*ke[At+1],Qe=Le*Re-lt*Se,ht=Le*Se+lt*Re,wt=ke[2*At],Bt=c*ke[2*At+1],Mt=ft*wt-pt*Bt,oe=ft*Bt+pt*wt,zt=ke[3*At],ve=c*ke[3*At+1],H=ct*zt-He*ve,ce=ct*ve+He*zt,ne=be+Mt,ze=Ye+oe,$e=be-Mt,gt=Ye-oe,It=Qe+H,Nt=ht+ce,_t=c*(Qe-H),Vt=c*(ht-ce);I[xe]=ne+It,I[xe+1]=ze+Nt,I[ye]=$e+Vt,I[ye+1]=gt-_t,I[ue]=ne-It,I[ue+1]=ze-Nt,I[ie]=$e-Vt,I[ie+1]=gt+_t}}}}_singleTransform2(I,e,c,P,J){const D=I[P],j=I[P+1],Ie=I[P+J],ge=I[P+J+1];e[c]=D+Ie,e[c+1]=j+ge,e[c+2]=D-Ie,e[c+3]=j-ge}_singleTransform4(I,e,c,P,J,D){const j=2*J,Ie=3*J,ge=I[P],ke=I[P+1],Ee=I[P+J],Ne=I[P+J+1],Xe=I[P+j],At=I[P+j+1],xe=I[P+Ie],ye=I[P+Ie+1],ue=ge+Xe,ie=ke+At,be=ge-Xe,Ye=ke-At,Le=Ee+xe,lt=Ne+ye,ft=D*(Ee-xe),pt=D*(Ne-ye);e[c]=ue+Le,e[c+1]=ie+lt,e[c+2]=be+pt,e[c+3]=Ye-ft,e[c+4]=ue-Le,e[c+5]=ie-lt,e[c+6]=be-pt,e[c+7]=Ye+ft}_realTransform4(I,e,c){const P=this._csize;let J,D,j=1<<this._width,Ie=P/j<<1;const ge=this._bitrev;if(Ie===4)for(J=0,D=0;J<P;J+=Ie,++D){const Ne=ge[D];this._singleRealTransform2(e,I,J,Ne>>>1,j>>>1)}else for(J=0,D=0;J<P;J+=Ie,++D){const Ne=ge[D];this._singleRealTransform4(e,I,J,Ne>>>1,j>>>1,c)}const ke=this.table;for(j>>=2;j>=2;j>>=2){Ie=P/j<<1;const Ne=Ie>>>1,Xe=Ne>>>1,At=Xe>>>1;for(J=0;J<P;J+=Ie)for(let xe=0,ye=0;xe<=At;xe+=2,ye+=j){const ue=J+xe,ie=ue+Xe,be=ie+Xe,Ye=be+Xe,Le=I[ue],lt=I[ue+1],ft=I[ie],pt=I[ie+1],ct=I[be],He=I[be+1],Re=I[Ye],Se=I[Ye+1],Qe=Le,ht=lt,wt=ke[ye],Bt=c*ke[ye+1],Mt=ft*wt-pt*Bt,oe=ft*Bt+pt*wt,zt=ke[2*ye],ve=c*ke[2*ye+1],H=ct*zt-He*ve,ce=ct*ve+He*zt,ne=ke[3*ye],ze=c*ke[3*ye+1],$e=Re*ne-Se*ze,gt=Re*ze+Se*ne,It=Qe+H,Nt=ht+ce,_t=Qe-H,Vt=ht-ce,Xt=Mt+$e,Jt=oe+gt,wr=c*(Mt-$e),Rr=c*(oe-gt);if(I[ue]=It+Xt,I[ue+1]=Nt+Jt,I[ie]=_t+Rr,I[ie+1]=Vt-wr,xe===0){I[be]=It-Xt,I[be+1]=Nt-Jt;continue}if(xe===At)continue;const $s=J+Xe-xe,os=J+Ne-xe;I[$s]=_t-c*Rr,I[$s+1]=-Vt-c*wr,I[os]=It-c*Xt,I[os+1]=c*Jt-Nt}}const Ee=P>>>1;for(let Ne=2;Ne<Ee;Ne+=2)I[P-Ne]=I[Ne],I[P-Ne+1]=-I[Ne+1]}_singleRealTransform2(I,e,c,P,J){const D=I[P],j=I[P+J];e[c]=D+j,e[c+1]=0,e[c+2]=D-j,e[c+3]=0}_singleRealTransform4(I,e,c,P,J,D){const j=2*J,Ie=3*J,ge=I[P],ke=I[P+J],Ee=I[P+j],Ne=I[P+Ie],Xe=ge+Ee,At=ge-Ee,xe=ke+Ne,ye=D*(ke-Ne);e[c]=Xe+xe,e[c+1]=0,e[c+2]=At,e[c+3]=-ye,e[c+4]=Xe-xe,e[c+5]=0,e[c+6]=At,e[c+7]=ye}}class N{constructor(I){const e=2*(I-1),c=2*(2*I-1),P=2**Math.ceil(Math.log2(c));this.bufferSize=P,this._a=e;const J=new Float64Array(c),D=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const j=-2*Math.PI/I,Ie=Math.cos(j),ge=Math.sin(j);for(let ke=0;ke<c>>1;++ke){const Ee=(ke+1-I)**2/2,Ne=Math.sqrt(Ie**2+ge**2)**Ee,Xe=Ee*Math.atan2(ge,Ie),At=2*ke;J[At]=Ne*Math.cos(Xe),J[At+1]=Ne*Math.sin(Xe),D[At]=J[At],D[At+1]=-J[At+1]}this._slicedChirpBuffer=J.subarray(e,c),this._f=new S(P>>1),this._f.transform(this._chirpBuffer,D)}_transform(I,e,c){const P=this._buffer1,J=this._buffer2,D=this._outBuffer1,j=this._outBuffer2,Ie=this._chirpBuffer,ge=this._slicedChirpBuffer,ke=this._a;if(c)for(let Ee=0;Ee<ge.length;Ee+=2){const Ne=Ee+1,Xe=e[Ee>>1];P[Ee]=Xe*ge[Ee],P[Ne]=Xe*ge[Ne]}else for(let Ee=0;Ee<ge.length;Ee+=2){const Ne=Ee+1;P[Ee]=e[Ee]*ge[Ee]-e[Ne]*ge[Ne],P[Ne]=e[Ee]*ge[Ne]+e[Ne]*ge[Ee]}this._f.transform(D,P);for(let Ee=0;Ee<Ie.length;Ee+=2){const Ne=Ee+1;J[Ee]=D[Ee]*Ie[Ee]-D[Ne]*Ie[Ne],J[Ne]=D[Ee]*Ie[Ne]+D[Ne]*Ie[Ee]}this._f.inverseTransform(j,J);for(let Ee=0;Ee<j.length;Ee+=2){const Ne=j[Ee+ke],Xe=j[Ee+ke+1],At=ge[Ee],xe=ge[Ee+1];I[Ee]=Ne*At-Xe*xe,I[Ee+1]=Ne*xe+Xe*At}}transform(I,e){this._transform(I,e,!1)}realTransform(I,e){this._transform(I,e,!0)}}class V{constructor(I){this.fft_length=I,this.isPowerOfTwo=B(I),this.isPowerOfTwo?(this.fft=new S(I),this.outputBufferSize=2*I):(this.fft=new N(I),this.outputBufferSize=this.fft.bufferSize)}realTransform(I,e){this.fft.realTransform(I,e)}transform(I,e){this.fft.transform(I,e)}}function Z(f,I){if(I%2==0||I<=0)throw new Error("Window size must be a positive odd number");const e=new f.constructor(f.length),c=new f.constructor(I),P=Math.floor(I/2);for(let J=0;J<f.length;++J){let D=0;for(let j=-P;j<=P;++j){let Ie=J+j;Ie<0?Ie=Math.abs(Ie):Ie>=f.length&&(Ie=2*(f.length-1)-Ie),c[D++]=f[Ie]}c.sort(),e[J]=c[P]}return e}function O(f,I){const e=Math.pow(10,I);return Math.round(f*e)/e}function Q(f){const I=Math.round(f);return Math.abs(f)%1==.5?I%2==0?I:I-1:I}function q(f){const I=f.length,e=f[0].length,c=[I+1,e+1],P=Array.from({length:c[0]},()=>Array(c[1]).fill(1/0));P[0][0]=0;const J=Array.from({length:c[0]},()=>Array(c[1]).fill(-1));for(let ke=1;ke<c[1];++ke)for(let Ee=1;Ee<c[0];++Ee){const Ne=P[Ee-1][ke-1],Xe=P[Ee-1][ke],At=P[Ee][ke-1];let xe,ye;Ne<Xe&&Ne<At?(xe=Ne,ye=0):Xe<Ne&&Xe<At?(xe=Xe,ye=1):(xe=At,ye=2),P[Ee][ke]=f[Ee-1][ke-1]+xe,J[Ee][ke]=ye}for(let ke=0;ke<c[1];++ke)J[0][ke]=2;for(let ke=0;ke<c[0];++ke)J[ke][0]=1;let D=I,j=e,Ie=[],ge=[];for(;D>0||j>0;)switch(Ie.push(D-1),ge.push(j-1),J[D][j]){case 0:--D,--j;break;case 1:--D;break;case 2:--j;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${D}, ${j}]. Please file a bug report.`)}return Ie.reverse(),ge.reverse(),[Ie,ge]}},"./src/utils/tensor.js":(i,o,a)=>{a.r(o),a.d(o,{Tensor:()=>y,cat:()=>I,full:()=>j,full_like:()=>Ie,interpolate:()=>_,interpolate_4d:()=>v,layer_norm:()=>O,matmul:()=>M,mean:()=>J,mean_pooling:()=>Z,ones:()=>ge,ones_like:()=>ke,permute:()=>k,quantize_embeddings:()=>At,rand:()=>Xe,rfft:()=>B,slice:()=>V,stack:()=>e,std_mean:()=>P,topk:()=>S,zeros:()=>Ee,zeros_like:()=>Ne});var u=a("./src/utils/maths.js"),p=a("./src/backends/onnx.js"),h=a("./src/ops/registry.js");const C=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class y{constructor(...ye){Te(this,"ort_tensor");return(0,p.isONNXTensor)(ye[0])?this.ort_tensor=ye[0]:this.ort_tensor=new p.Tensor(ye[0],ye[1],ye[2]),new Proxy(this,{get:(ue,ie)=>{if(typeof ie=="string"){let be=Number(ie);if(Number.isInteger(be))return ue._getitem(be)}return ue[ie]},set:(ue,ie,be)=>ue[ie]=be})}get dims(){return this.ort_tensor.dims}set dims(ye){this.ort_tensor.dims=ye}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[ye,...ue]=this.dims;if(ue.length>0){const ie=ue.reduce((be,Ye)=>be*Ye);for(let be=0;be<ye;++be)yield this._subarray(be,ie,ue)}else yield*this.data}_getitem(ye){const[ue,...ie]=this.dims;if(ye=f(ye,ue),ie.length>0){const be=ie.reduce((Ye,Le)=>Ye*Le);return this._subarray(ye,be,ie)}return new y(this.type,[this.data[ye]],ie)}indexOf(ye){const ue=this.data;for(let ie=0;ie<ue.length;++ie)if(ue[ie]==ye)return ie;return-1}_subarray(ye,ue,ie){const be=ye*ue,Ye=(ye+1)*ue,Le="subarray"in this.data?this.data.subarray(be,Ye):this.data.slice(be,Ye);return new y(this.type,Le,ie)}item(){const ye=this.data;if(ye.length!==1)throw new Error(`a Tensor with ${ye.length} elements cannot be converted to Scalar`);return ye[0]}tolist(){return function(ye,ue){const ie=ye.length,be=ue.reduce((Le,lt)=>Le*lt);if(ie!==be)throw Error(`cannot reshape array of size ${ie} into shape (${ue})`);let Ye=ye;for(let Le=ue.length-1;Le>=0;Le--)Ye=Ye.reduce((lt,ft)=>{let pt=lt[lt.length-1];return pt.length<ue[Le]?pt.push(ft):lt.push([ft]),lt},[[]]);return Ye[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const ye=this.data;for(let ue=0;ue<ye.length;++ue)ye[ue]=1/(1+Math.exp(-ye[ue]));return this}map(ye){return this.clone().map_(ye)}map_(ye){const ue=this.data;for(let ie=0;ie<ue.length;++ie)ue[ie]=ye(ue[ie],ie,ue);return this}mul(ye){return this.clone().mul_(ye)}mul_(ye){const ue=this.data;for(let ie=0;ie<ue.length;++ie)ue[ie]*=ye;return this}div(ye){return this.clone().div_(ye)}div_(ye){const ue=this.data;for(let ie=0;ie<ue.length;++ie)ue[ie]/=ye;return this}add(ye){return this.clone().add_(ye)}add_(ye){const ue=this.data;for(let ie=0;ie<ue.length;++ie)ue[ie]+=ye;return this}sub(ye){return this.clone().sub_(ye)}sub_(ye){const ue=this.data;for(let ie=0;ie<ue.length;++ie)ue[ie]-=ye;return this}clone(){return new y(this.type,this.data.slice(),this.dims.slice())}slice(...ye){const ue=[],ie=[];for(let pt=0;pt<this.dims.length;++pt){let ct=ye[pt];if(ct==null)ie.push([0,this.dims[pt]]),ue.push(this.dims[pt]);else if(typeof ct=="number")ct=f(ct,this.dims[pt],pt),ie.push([ct,ct+1]);else{if(!Array.isArray(ct)||ct.length!==2)throw new Error(`Invalid slice: ${ct}`);{let[He,Re]=ct;if(He=He===null?0:f(He,this.dims[pt],pt,!1),Re=Re===null?this.dims[pt]:f(Re,this.dims[pt],pt,!1),He>Re)throw new Error(`Invalid slice: ${ct}`);const Se=[Math.max(He,0),Math.min(Re,this.dims[pt])];ie.push(Se),ue.push(Se[1]-Se[0])}}}const be=ie.map(([pt,ct])=>ct-pt),Ye=be.reduce((pt,ct)=>pt*ct),Le=this.data,lt=new Le.constructor(Ye),ft=this.stride();for(let pt=0;pt<Ye;++pt){let ct=0;for(let He=be.length-1,Re=pt;He>=0;--He){const Se=be[He];ct+=(Re%Se+ie[He][0])*ft[He],Re=Math.floor(Re/Se)}lt[pt]=Le[ct]}return new y(this.type,lt,ue)}permute(...ye){return k(this,ye)}transpose(...ye){return this.permute(...ye)}sum(ye=null,ue=!1){return this.norm(1,ye,ue)}norm(ye="fro",ue=null,ie=!1){if(ye==="fro")ye=2;else if(typeof ye=="string")throw Error(`Unsupported norm: ${ye}`);const be=this.data,Ye=(pt,ct)=>pt+ct**ye;if(ue===null){const pt=be.reduce(Ye,0)**(1/ye);return new y(this.type,[pt],[])}const[Le,lt,ft]=c(Ye,this,ue,ie);if(ye!==1)for(let pt=0;pt<lt.length;++pt)lt[pt]=lt[pt]**(1/ye);return new y(Le,lt,ft)}normalize_(ye=2,ue=1){ue=f(ue,this.dims.length);const ie=this.norm(ye,ue,!0),be=this.data,Ye=ie.data;for(let Le=0;Le<be.length;++Le){let lt=0;for(let ft=this.dims.length-1,pt=Le,ct=1;ft>=0;--ft){const He=this.dims[ft];ft!==ue&&(lt+=pt%He*ct,ct*=this.dims[ft]),pt=Math.floor(pt/He)}be[Le]/=Ye[lt]}return this}normalize(ye=2,ue=1){return this.clone().normalize_(ye,ue)}stride(){return function(ye){const ue=new Array(ye.length);for(let ie=ye.length-1,be=1;ie>=0;--ie)ue[ie]=be,be*=ye[ie];return ue}(this.dims)}squeeze(ye=null){return new y(this.type,this.data,Q(this.dims,ye))}squeeze_(ye=null){return this.dims=Q(this.dims,ye),this}unsqueeze(ye=null){return new y(this.type,this.data,q(this.dims,ye))}unsqueeze_(ye=null){return this.dims=q(this.dims,ye),this}flatten_(ye=0,ue=-1){ue=(ue+this.dims.length)%this.dims.length;let ie=this.dims.slice(0,ye),be=this.dims.slice(ye,ue+1),Ye=this.dims.slice(ue+1);return this.dims=[...ie,be.reduce((Le,lt)=>Le*lt,1),...Ye],this}flatten(ye=0,ue=-1){return this.clone().flatten_(ye,ue)}view(...ye){let ue=-1;for(let be=0;be<ye.length;++be)if(ye[be]===-1){if(ue!==-1)throw new Error("Only one dimension can be inferred");ue=be}const ie=this.data;if(ue!==-1){const be=ye.reduce((Ye,Le,lt)=>lt!==ue?Ye*Le:Ye,1);ye[ue]=ie.length/be}return new y(this.type,ie,ye)}neg_(){const ye=this.data;for(let ue=0;ue<ye.length;++ue)ye[ue]=-ye[ue];return this}neg(){return this.clone().neg_()}gt(ye){const ue=new Uint8Array(this.data.length),ie=this.data;for(let be=0;be<ie.length;++be)ue[be]=ie[be]>ye?1:0;return new y("bool",ue,this.dims)}lt(ye){const ue=new Uint8Array(this.data.length),ie=this.data;for(let be=0;be<ie.length;++be)ue[be]=ie[be]<ye?1:0;return new y("bool",ue,this.dims)}clamp_(ye,ue){const ie=this.data;for(let be=0;be<ie.length;++be)ie[be]=Math.min(Math.max(ie[be],ye),ue);return this}clamp(ye,ue){return this.clone().clamp_(ye,ue)}round_(){const ye=this.data;for(let ue=0;ue<ye.length;++ue)ye[ue]=Math.round(ye[ue]);return this}round(){return this.clone().round_()}mean(ye=null,ue=!1){return J(this,ye,ue)}min(ye=null,ue=!1){if(ye===null){const Le=(0,u.min)(this.data)[0];return new y(this.type,[Le],[])}const[ie,be,Ye]=c((Le,lt)=>Math.min(Le,lt),this,ye,ue,1/0);return new y(ie,be,Ye)}max(ye=null,ue=!1){if(ye===null){const Le=(0,u.max)(this.data)[0];return new y(this.type,[Le],[])}const[ie,be,Ye]=c((Le,lt)=>Math.max(Le,lt),this,ye,ue,-1/0);return new y(ie,be,Ye)}argmin(ye=null,ue=!1){if(ye!==null)throw new Error("`dim !== null` not yet implemented.");const ie=(0,u.min)(this.data)[1];return new y("int64",[BigInt(ie)],[])}argmax(ye=null,ue=!1){if(ye!==null)throw new Error("`dim !== null` not yet implemented.");const ie=(0,u.max)(this.data)[1];return new y("int64",[BigInt(ie)],[])}to(ye){if(this.type===ye)return this;if(!C.hasOwnProperty(ye))throw new Error(`Unsupported type: ${ye}`);let ue;const ie=["int64","uint64"].includes(this.type),be=["int64","uint64"].includes(ye);return ie&&!be?ue=Number:!ie&&be&&(ue=BigInt),new y(ye,C[ye].from(this.data,ue),this.dims)}}function k(xe,ye){const[ue,ie]=(0,u.permute_data)(xe.data,xe.dims,ye);return new y(xe.type,ue,ie)}function _(xe,[ye,ue],ie="bilinear",be=!1){const Ye=xe.dims.at(-3)??1,Le=xe.dims.at(-2),lt=xe.dims.at(-1);let ft=(0,u.interpolate_data)(xe.data,[Ye,Le,lt],[ye,ue],ie,be);return new y(xe.type,ft,[Ye,ye,ue])}async function v(xe,{size:ye=null,mode:ue="bilinear"}={}){if(xe.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!ye)throw new Error("`interpolate_4d` requires a `size` argument.");let ie,be;if(ye.length===2)ie=[...xe.dims.slice(0,2),...ye];else if(ye.length===3)ie=[xe.dims[0],...ye];else{if(ye.length!==4)throw new Error("`size` must be of length 2, 3, or 4.");ie=ye}if(ue==="nearest")be=await h.TensorOpRegistry.nearest_interpolate_4d;else if(ue==="bilinear")be=await h.TensorOpRegistry.bilinear_interpolate_4d;else{if(ue!=="bicubic")throw new Error(`Unsupported mode: ${ue}`);be=await h.TensorOpRegistry.bicubic_interpolate_4d}const Ye=new y("int64",new BigInt64Array(ie.map(BigInt)),[ie.length]);return await be({x:xe,s:Ye})}async function M(xe,ye){return await(await h.TensorOpRegistry.matmul)({a:xe,b:ye})}async function B(xe,ye){return await(await h.TensorOpRegistry.rfft)({x:xe,a:ye})}async function S(xe,ye){const ue=await h.TensorOpRegistry.top_k;return ye=ye==null?xe.dims.at(-1):Math.min(ye,xe.dims.at(-1)),await ue({x:xe,k:new y("int64",[BigInt(ye)],[1])})}const N=xe=>new y("int64",xe,[xe.length]);async function V(xe,ye,ue,ie,be){return await(await h.TensorOpRegistry.slice)({x:xe,s:N(ye),e:N(ue),a:N(ie),t:N(be??new Array(ie.length).fill(1))})}function Z(xe,ye){const ue=xe.data,ie=ye.data,be=[xe.dims[0],xe.dims[2]],Ye=new ue.constructor(be[0]*be[1]),[Le,lt,ft]=xe.dims;let pt=0;for(let ct=0;ct<Le;++ct){const He=ct*ft*lt;for(let Re=0;Re<ft;++Re){let Se=0,Qe=0;const ht=ct*lt,wt=He+Re;for(let Mt=0;Mt<lt;++Mt){const oe=Number(ie[ht+Mt]);Qe+=oe,Se+=ue[wt+Mt*ft]*oe}const Bt=Se/Qe;Ye[pt++]=Bt}}return new y(xe.type,Ye,be)}function O(xe,ye,{eps:ue=1e-5}={}){if(xe.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ie,be]=xe.dims;if(ye.length!==1&&ye[0]!==be)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[Ye,Le]=P(xe,1,0,!0),lt=Ye.data,ft=Le.data,pt=xe.data,ct=new pt.constructor(pt.length);for(let He=0;He<ie;++He){const Re=He*be;for(let Se=0;Se<be;++Se){const Qe=Re+Se;ct[Qe]=(pt[Qe]-ft[He])/(lt[He]+ue)}}return new y(xe.type,ct,xe.dims)}function Q(xe,ye){return xe=xe.slice(),ye===null?xe=xe.filter(ue=>ue!==1):typeof ye=="number"?xe[ye]===1&&xe.splice(ye,1):Array.isArray(ye)&&(xe=xe.filter((ue,ie)=>ue!==1||!ye.includes(ie))),xe}function q(xe,ye){return ye=f(ye,xe.length+1),(xe=xe.slice()).splice(ye,0,1),xe}function f(xe,ye,ue=null,ie=!0){if(ie&&(xe<-ye||xe>=ye))throw new Error(`IndexError: index ${xe} is out of bounds for dimension${ue===null?"":" "+ue} with size ${ye}`);return xe<0&&(xe=(xe%ye+ye)%ye),xe}function I(xe,ye=0){ye=f(ye,xe[0].dims.length);const ue=xe[0].dims.slice();ue[ye]=xe.reduce((Le,lt)=>Le+lt.dims[ye],0);const ie=ue.reduce((Le,lt)=>Le*lt,1),be=new xe[0].data.constructor(ie),Ye=xe[0].type;if(ye===0){let Le=0;for(const lt of xe){const ft=lt.data;be.set(ft,Le),Le+=ft.length}}else{let Le=0;for(let lt=0;lt<xe.length;++lt){const{data:ft,dims:pt}=xe[lt];for(let ct=0;ct<ft.length;++ct){let He=0;for(let Re=pt.length-1,Se=ct,Qe=1;Re>=0;--Re){const ht=pt[Re];let wt=Se%ht;Re===ye&&(wt+=Le),He+=wt*Qe,Qe*=ue[Re],Se=Math.floor(Se/ht)}be[He]=ft[ct]}Le+=pt[ye]}}return new y(Ye,be,ue)}function e(xe,ye=0){return I(xe.map(ue=>ue.unsqueeze(ye)),ye)}function c(xe,ye,ue=null,ie=!1,be=null){const Ye=ye.data,Le=ye.dims;ue=f(ue,Le.length);const lt=Le.slice();lt[ue]=1;const ft=new Ye.constructor(Ye.length/Le[ue]);be!==null&&ft.fill(be);for(let pt=0;pt<Ye.length;++pt){let ct=0;for(let He=Le.length-1,Re=pt,Se=1;He>=0;--He){const Qe=Le[He];He!==ue&&(ct+=Re%Qe*Se,Se*=lt[He]),Re=Math.floor(Re/Qe)}ft[ct]=xe(ft[ct],Ye[pt],pt,ct)}return ie||lt.splice(ue,1),[ye.type,ft,lt]}function P(xe,ye=null,ue=1,ie=!1){const be=xe.data,Ye=xe.dims;if(ye===null){const He=be.reduce((ht,wt)=>ht+wt,0),Re=He/be.length,Se=Math.sqrt(be.reduce((ht,wt)=>ht+(wt-Re)**2,0)/(be.length-ue)),Qe=new y(xe.type,[Re],[]);return[new y(xe.type,[Se],[]),Qe]}const Le=J(xe,ye=f(ye,Ye.length),ie),lt=Le.data,[ft,pt,ct]=c((He,Re,Se,Qe)=>He+(Re-lt[Qe])**2,xe,ye,ie);for(let He=0;He<pt.length;++He)pt[He]=Math.sqrt(pt[He]/(Ye[ye]-ue));return[new y(ft,pt,ct),Le]}function J(xe,ye=null,ue=!1){const ie=xe.dims,be=xe.data;if(ye===null){const ft=be.reduce((pt,ct)=>pt+ct,0);return new y(xe.type,[ft/be.length],[])}ye=f(ye,ie.length);const[Ye,Le,lt]=c((ft,pt)=>ft+pt,xe,ye,ue);if(ie[ye]!==1)for(let ft=0;ft<Le.length;++ft)Le[ft]/=ie[ye];return new y(Ye,Le,lt)}function D(xe,ye,ue,ie){const be=xe.reduce((Ye,Le)=>Ye*Le,1);return new y(ue,new ie(be).fill(ye),xe)}function j(xe,ye){let ue,ie;if(typeof ye=="number")ue="float32",ie=Float32Array;else if(typeof ye=="bigint")ue="int64",ie=BigInt64Array;else{if(typeof ye!="boolean")throw new Error("Unsupported data type: "+typeof ye);ue="bool",ie=Uint8Array}return D(xe,ye,ue,ie)}function Ie(xe,ye){return j(xe.dims,ye)}function ge(xe){return D(xe,1n,"int64",BigInt64Array)}function ke(xe){return ge(xe.dims)}function Ee(xe){return D(xe,0n,"int64",BigInt64Array)}function Ne(xe){return Ee(xe.dims)}function Xe(xe){const ye=xe.reduce((ue,ie)=>ue*ie,1);return new y("float32",Float32Array.from({length:ye},()=>Math.random()),xe)}function At(xe,ye){if(xe.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(xe.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(ye))throw new Error("The precision must be either 'binary' or 'ubinary'");const ue=ye==="binary",ie=ue?"int8":"uint8",be=ue?Int8Array:Uint8Array,Ye=xe.data,Le=new be(Ye.length/8);for(let lt=0;lt<Ye.length;++lt){const ft=Ye[lt]>0?1:0,pt=Math.floor(lt/8),ct=lt%8;Le[pt]|=ft<<7-ct,ue&&ct===0&&(Le[pt]-=128)}return new y(ie,Le,[xe.dims[0],xe.dims[1]/8])}}},S1={};function Qa(i){var o=S1[i];if(o!==void 0)return o.exports;var a=S1[i]={exports:{}};return D1[i](a,a.exports,Qa),a.exports}Qa.m=D1,Ol=Object.getPrototypeOf?i=>Object.getPrototypeOf(i):i=>i.__proto__,Qa.t=function(i,o){if(1&o&&(i=this(i)),8&o||typeof i=="object"&&i&&(4&o&&i.__esModule||16&o&&typeof i.then=="function"))return i;var a=Object.create(null);Qa.r(a);var u={};zl=zl||[null,Ol({}),Ol([]),Ol(Ol)];for(var p=2&o&&i;typeof p=="object"&&!~zl.indexOf(p);p=Ol(p))Object.getOwnPropertyNames(p).forEach(h=>u[h]=()=>i[h]);return u.default=()=>i,Qa.d(a,u),a},Qa.d=(i,o)=>{for(var a in o)Qa.o(o,a)&&!Qa.o(i,a)&&Object.defineProperty(i,a,{enumerable:!0,get:o[a]})},Qa.o=(i,o)=>Object.prototype.hasOwnProperty.call(i,o),Qa.r=i=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},(()=>{var i;if(typeof self.location.href=="string"&&(i=self.location.href),!i)throw new Error("Automatic publicPath is not supported in this browser");i=i.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Qa.p=i})(),Qa.b=new URL(self.location.href);var wf={};(()=>{Qa.r(wf),Qa.d(wf,{ASTFeatureExtractor:()=>v.ASTFeatureExtractor,ASTForAudioClassification:()=>a.ASTForAudioClassification,ASTModel:()=>a.ASTModel,ASTPreTrainedModel:()=>a.ASTPreTrainedModel,AlbertForMaskedLM:()=>a.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>a.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>a.AlbertForSequenceClassification,AlbertModel:()=>a.AlbertModel,AlbertPreTrainedModel:()=>a.AlbertPreTrainedModel,AlbertTokenizer:()=>u.AlbertTokenizer,AudioClassificationPipeline:()=>o.AudioClassificationPipeline,AutoConfig:()=>p.AutoConfig,AutoFeatureExtractor:()=>M.AutoFeatureExtractor,AutoImageProcessor:()=>N.AutoImageProcessor,AutoModel:()=>a.AutoModel,AutoModelForAudioClassification:()=>a.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>a.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>a.AutoModelForCTC,AutoModelForCausalLM:()=>a.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>a.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>a.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>a.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>a.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>a.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>a.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>a.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>a.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>a.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>a.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>a.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>a.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>a.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>a.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>a.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>a.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>a.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>a.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>a.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>a.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>a.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>a.AutoModelForVision2Seq,AutoModelForXVector:()=>a.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>a.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>O.AutoProcessor,AutoTokenizer:()=>u.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>o.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>a.BartForConditionalGeneration,BartForSequenceClassification:()=>a.BartForSequenceClassification,BartModel:()=>a.BartModel,BartPretrainedModel:()=>a.BartPretrainedModel,BartTokenizer:()=>u.BartTokenizer,BaseModelOutput:()=>a.BaseModelOutput,BaseStreamer:()=>Q.BaseStreamer,BeitFeatureExtractor:()=>S.BeitFeatureExtractor,BeitForImageClassification:()=>a.BeitForImageClassification,BeitModel:()=>a.BeitModel,BeitPreTrainedModel:()=>a.BeitPreTrainedModel,BertForMaskedLM:()=>a.BertForMaskedLM,BertForQuestionAnswering:()=>a.BertForQuestionAnswering,BertForSequenceClassification:()=>a.BertForSequenceClassification,BertForTokenClassification:()=>a.BertForTokenClassification,BertModel:()=>a.BertModel,BertPreTrainedModel:()=>a.BertPreTrainedModel,BertTokenizer:()=>u.BertTokenizer,BitImageProcessor:()=>S.BitImageProcessor,BlenderbotForConditionalGeneration:()=>a.BlenderbotForConditionalGeneration,BlenderbotModel:()=>a.BlenderbotModel,BlenderbotPreTrainedModel:()=>a.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>a.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>a.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>a.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>u.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>u.BlenderbotTokenizer,BloomForCausalLM:()=>a.BloomForCausalLM,BloomModel:()=>a.BloomModel,BloomPreTrainedModel:()=>a.BloomPreTrainedModel,BloomTokenizer:()=>u.BloomTokenizer,CLIPFeatureExtractor:()=>S.CLIPFeatureExtractor,CLIPImageProcessor:()=>S.CLIPImageProcessor,CLIPModel:()=>a.CLIPModel,CLIPPreTrainedModel:()=>a.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>a.CLIPSegForImageSegmentation,CLIPSegModel:()=>a.CLIPSegModel,CLIPSegPreTrainedModel:()=>a.CLIPSegPreTrainedModel,CLIPTextModel:()=>a.CLIPTextModel,CLIPTextModelWithProjection:()=>a.CLIPTextModelWithProjection,CLIPTokenizer:()=>u.CLIPTokenizer,CLIPVisionModel:()=>a.CLIPVisionModel,CLIPVisionModelWithProjection:()=>a.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>a.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>a.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>a.CamembertForSequenceClassification,CamembertForTokenClassification:()=>a.CamembertForTokenClassification,CamembertModel:()=>a.CamembertModel,CamembertPreTrainedModel:()=>a.CamembertPreTrainedModel,CamembertTokenizer:()=>u.CamembertTokenizer,CausalLMOutput:()=>a.CausalLMOutput,CausalLMOutputWithPast:()=>a.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>S.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>a.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>a.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>a.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>v.ClapFeatureExtractor,ClapModel:()=>a.ClapModel,ClapPreTrainedModel:()=>a.ClapPreTrainedModel,ClapTextModelWithProjection:()=>a.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>f.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>a.CodeGenForCausalLM,CodeGenModel:()=>a.CodeGenModel,CodeGenPreTrainedModel:()=>a.CodeGenPreTrainedModel,CodeGenTokenizer:()=>u.CodeGenTokenizer,CodeLlamaTokenizer:()=>u.CodeLlamaTokenizer,CohereForCausalLM:()=>a.CohereForCausalLM,CohereModel:()=>a.CohereModel,CoherePreTrainedModel:()=>a.CoherePreTrainedModel,CohereTokenizer:()=>u.CohereTokenizer,ConvBertForMaskedLM:()=>a.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>a.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>a.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>a.ConvBertForTokenClassification,ConvBertModel:()=>a.ConvBertModel,ConvBertPreTrainedModel:()=>a.ConvBertPreTrainedModel,ConvBertTokenizer:()=>u.ConvBertTokenizer,ConvNextFeatureExtractor:()=>S.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>a.ConvNextForImageClassification,ConvNextImageProcessor:()=>S.ConvNextImageProcessor,ConvNextModel:()=>a.ConvNextModel,ConvNextPreTrainedModel:()=>a.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>a.ConvNextV2ForImageClassification,ConvNextV2Model:()=>a.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>a.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>S.DPTFeatureExtractor,DPTForDepthEstimation:()=>a.DPTForDepthEstimation,DPTImageProcessor:()=>S.DPTImageProcessor,DPTModel:()=>a.DPTModel,DPTPreTrainedModel:()=>a.DPTPreTrainedModel,DebertaForMaskedLM:()=>a.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>a.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>a.DebertaForSequenceClassification,DebertaForTokenClassification:()=>a.DebertaForTokenClassification,DebertaModel:()=>a.DebertaModel,DebertaPreTrainedModel:()=>a.DebertaPreTrainedModel,DebertaTokenizer:()=>u.DebertaTokenizer,DebertaV2ForMaskedLM:()=>a.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>a.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>a.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>a.DebertaV2ForTokenClassification,DebertaV2Model:()=>a.DebertaV2Model,DebertaV2PreTrainedModel:()=>a.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>u.DebertaV2Tokenizer,DecisionTransformerModel:()=>a.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>a.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>S.DeiTFeatureExtractor,DeiTForImageClassification:()=>a.DeiTForImageClassification,DeiTImageProcessor:()=>S.DeiTImageProcessor,DeiTModel:()=>a.DeiTModel,DeiTPreTrainedModel:()=>a.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>a.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>a.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>o.DepthEstimationPipeline,DepthProForDepthEstimation:()=>a.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>a.DepthProPreTrainedModel,DetrFeatureExtractor:()=>S.DetrFeatureExtractor,DetrForObjectDetection:()=>a.DetrForObjectDetection,DetrForSegmentation:()=>a.DetrForSegmentation,DetrImageProcessor:()=>S.DetrImageProcessor,DetrModel:()=>a.DetrModel,DetrObjectDetectionOutput:()=>a.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>a.DetrPreTrainedModel,DetrSegmentationOutput:()=>a.DetrSegmentationOutput,Dinov2ForImageClassification:()=>a.Dinov2ForImageClassification,Dinov2Model:()=>a.Dinov2Model,Dinov2PreTrainedModel:()=>a.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>a.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>a.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>a.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>a.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>a.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>a.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>a.DistilBertForTokenClassification,DistilBertModel:()=>a.DistilBertModel,DistilBertPreTrainedModel:()=>a.DistilBertPreTrainedModel,DistilBertTokenizer:()=>u.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>o.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>S.DonutFeatureExtractor,DonutImageProcessor:()=>S.DonutImageProcessor,DonutSwinModel:()=>a.DonutSwinModel,DonutSwinPreTrainedModel:()=>a.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>a.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>S.EfficientNetImageProcessor,EfficientNetModel:()=>a.EfficientNetModel,EfficientNetPreTrainedModel:()=>a.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>a.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>a.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>a.ElectraForSequenceClassification,ElectraForTokenClassification:()=>a.ElectraForTokenClassification,ElectraModel:()=>a.ElectraModel,ElectraPreTrainedModel:()=>a.ElectraPreTrainedModel,ElectraTokenizer:()=>u.ElectraTokenizer,EosTokenCriteria:()=>q.EosTokenCriteria,EsmForMaskedLM:()=>a.EsmForMaskedLM,EsmForSequenceClassification:()=>a.EsmForSequenceClassification,EsmForTokenClassification:()=>a.EsmForTokenClassification,EsmModel:()=>a.EsmModel,EsmPreTrainedModel:()=>a.EsmPreTrainedModel,EsmTokenizer:()=>u.EsmTokenizer,ExaoneForCausalLM:()=>a.ExaoneForCausalLM,ExaoneModel:()=>a.ExaoneModel,ExaonePreTrainedModel:()=>a.ExaonePreTrainedModel,FFT:()=>k.FFT,FalconForCausalLM:()=>a.FalconForCausalLM,FalconModel:()=>a.FalconModel,FalconPreTrainedModel:()=>a.FalconPreTrainedModel,FalconTokenizer:()=>u.FalconTokenizer,FastViTForImageClassification:()=>a.FastViTForImageClassification,FastViTModel:()=>a.FastViTModel,FastViTPreTrainedModel:()=>a.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>o.FeatureExtractionPipeline,FeatureExtractor:()=>_.FeatureExtractor,FillMaskPipeline:()=>o.FillMaskPipeline,Florence2ForConditionalGeneration:()=>a.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>a.Florence2PreTrainedModel,Florence2Processor:()=>Z.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>f.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>f.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>S.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>a.GLPNForDepthEstimation,GLPNModel:()=>a.GLPNModel,GLPNPreTrainedModel:()=>a.GLPNPreTrainedModel,GPT2LMHeadModel:()=>a.GPT2LMHeadModel,GPT2Model:()=>a.GPT2Model,GPT2PreTrainedModel:()=>a.GPT2PreTrainedModel,GPT2Tokenizer:()=>u.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>a.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>a.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>a.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>a.GPTJForCausalLM,GPTJModel:()=>a.GPTJModel,GPTJPreTrainedModel:()=>a.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>a.GPTNeoForCausalLM,GPTNeoModel:()=>a.GPTNeoModel,GPTNeoPreTrainedModel:()=>a.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>a.GPTNeoXForCausalLM,GPTNeoXModel:()=>a.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>a.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>u.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>a.Gemma2ForCausalLM,Gemma2Model:()=>a.Gemma2Model,Gemma2PreTrainedModel:()=>a.Gemma2PreTrainedModel,GemmaForCausalLM:()=>a.GemmaForCausalLM,GemmaModel:()=>a.GemmaModel,GemmaPreTrainedModel:()=>a.GemmaPreTrainedModel,GemmaTokenizer:()=>u.GemmaTokenizer,GlmForCausalLM:()=>a.GlmForCausalLM,GlmModel:()=>a.GlmModel,GlmPreTrainedModel:()=>a.GlmPreTrainedModel,GraniteForCausalLM:()=>a.GraniteForCausalLM,GraniteModel:()=>a.GraniteModel,GranitePreTrainedModel:()=>a.GranitePreTrainedModel,Grok1Tokenizer:()=>u.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>a.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>S.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>a.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>Z.GroundingDinoProcessor,GroupViTModel:()=>a.GroupViTModel,GroupViTPreTrainedModel:()=>a.GroupViTPreTrainedModel,HeliumForCausalLM:()=>a.HeliumForCausalLM,HeliumModel:()=>a.HeliumModel,HeliumPreTrainedModel:()=>a.HeliumPreTrainedModel,HerbertTokenizer:()=>u.HerbertTokenizer,HieraForImageClassification:()=>a.HieraForImageClassification,HieraModel:()=>a.HieraModel,HieraPreTrainedModel:()=>a.HieraPreTrainedModel,HubertForCTC:()=>a.HubertForCTC,HubertForSequenceClassification:()=>a.HubertForSequenceClassification,HubertModel:()=>a.HubertModel,HubertPreTrainedModel:()=>a.HubertPreTrainedModel,IJepaForImageClassification:()=>a.IJepaForImageClassification,IJepaModel:()=>a.IJepaModel,IJepaPreTrainedModel:()=>a.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>a.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>S.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>a.Idefics3PreTrainedModel,Idefics3Processor:()=>Z.Idefics3Processor,ImageClassificationPipeline:()=>o.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>o.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>v.ImageFeatureExtractor,ImageMattingOutput:()=>a.ImageMattingOutput,ImageProcessor:()=>B.ImageProcessor,ImageSegmentationPipeline:()=>o.ImageSegmentationPipeline,ImageToImagePipeline:()=>o.ImageToImagePipeline,ImageToTextPipeline:()=>o.ImageToTextPipeline,InterruptableStoppingCriteria:()=>q.InterruptableStoppingCriteria,JAISLMHeadModel:()=>a.JAISLMHeadModel,JAISModel:()=>a.JAISModel,JAISPreTrainedModel:()=>a.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>S.JinaCLIPImageProcessor,JinaCLIPModel:()=>a.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>a.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>Z.JinaCLIPProcessor,JinaCLIPTextModel:()=>a.JinaCLIPTextModel,JinaCLIPVisionModel:()=>a.JinaCLIPVisionModel,LlamaForCausalLM:()=>a.LlamaForCausalLM,LlamaModel:()=>a.LlamaModel,LlamaPreTrainedModel:()=>a.LlamaPreTrainedModel,LlamaTokenizer:()=>u.LlamaTokenizer,LlavaForConditionalGeneration:()=>a.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>a.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>S.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>a.LlavaPreTrainedModel,LogitsProcessor:()=>f.LogitsProcessor,LogitsProcessorList:()=>f.LogitsProcessorList,LogitsWarper:()=>f.LogitsWarper,LongT5ForConditionalGeneration:()=>a.LongT5ForConditionalGeneration,LongT5Model:()=>a.LongT5Model,LongT5PreTrainedModel:()=>a.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>a.M2M100ForConditionalGeneration,M2M100Model:()=>a.M2M100Model,M2M100PreTrainedModel:()=>a.M2M100PreTrainedModel,M2M100Tokenizer:()=>u.M2M100Tokenizer,MBart50Tokenizer:()=>u.MBart50Tokenizer,MBartForCausalLM:()=>a.MBartForCausalLM,MBartForConditionalGeneration:()=>a.MBartForConditionalGeneration,MBartForSequenceClassification:()=>a.MBartForSequenceClassification,MBartModel:()=>a.MBartModel,MBartPreTrainedModel:()=>a.MBartPreTrainedModel,MBartTokenizer:()=>u.MBartTokenizer,MPNetForMaskedLM:()=>a.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>a.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>a.MPNetForSequenceClassification,MPNetForTokenClassification:()=>a.MPNetForTokenClassification,MPNetModel:()=>a.MPNetModel,MPNetPreTrainedModel:()=>a.MPNetPreTrainedModel,MPNetTokenizer:()=>u.MPNetTokenizer,MT5ForConditionalGeneration:()=>a.MT5ForConditionalGeneration,MT5Model:()=>a.MT5Model,MT5PreTrainedModel:()=>a.MT5PreTrainedModel,MarianMTModel:()=>a.MarianMTModel,MarianModel:()=>a.MarianModel,MarianPreTrainedModel:()=>a.MarianPreTrainedModel,MarianTokenizer:()=>u.MarianTokenizer,Mask2FormerImageProcessor:()=>S.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>S.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>a.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>S.MaskFormerImageProcessor,MaskFormerModel:()=>a.MaskFormerModel,MaskFormerPreTrainedModel:()=>a.MaskFormerPreTrainedModel,MaskedLMOutput:()=>a.MaskedLMOutput,MaxLengthCriteria:()=>q.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>a.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>a.MgpstrModelOutput,MgpstrPreTrainedModel:()=>a.MgpstrPreTrainedModel,MgpstrProcessor:()=>Z.MgpstrProcessor,MgpstrTokenizer:()=>u.MgpstrTokenizer,MinLengthLogitsProcessor:()=>f.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>f.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>a.MistralForCausalLM,MistralModel:()=>a.MistralModel,MistralPreTrainedModel:()=>a.MistralPreTrainedModel,MobileBertForMaskedLM:()=>a.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>a.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>a.MobileBertForSequenceClassification,MobileBertModel:()=>a.MobileBertModel,MobileBertPreTrainedModel:()=>a.MobileBertPreTrainedModel,MobileBertTokenizer:()=>u.MobileBertTokenizer,MobileLLMForCausalLM:()=>a.MobileLLMForCausalLM,MobileLLMModel:()=>a.MobileLLMModel,MobileLLMPreTrainedModel:()=>a.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>S.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>a.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>S.MobileNetV1ImageProcessor,MobileNetV1Model:()=>a.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>a.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>S.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>a.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>S.MobileNetV2ImageProcessor,MobileNetV2Model:()=>a.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>a.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>S.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>a.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>S.MobileNetV3ImageProcessor,MobileNetV3Model:()=>a.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>a.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>S.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>a.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>S.MobileNetV4ImageProcessor,MobileNetV4Model:()=>a.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>a.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>S.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>a.MobileViTForImageClassification,MobileViTImageProcessor:()=>S.MobileViTImageProcessor,MobileViTModel:()=>a.MobileViTModel,MobileViTPreTrainedModel:()=>a.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>a.MobileViTV2ForImageClassification,MobileViTV2Model:()=>a.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>a.MobileViTV2PreTrainedModel,ModelOutput:()=>a.ModelOutput,ModernBertForMaskedLM:()=>a.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>a.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>a.ModernBertForTokenClassification,ModernBertModel:()=>a.ModernBertModel,ModernBertPreTrainedModel:()=>a.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>a.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>v.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>a.MoonshineForConditionalGeneration,MoonshineModel:()=>a.MoonshineModel,MoonshinePreTrainedModel:()=>a.MoonshinePreTrainedModel,MoonshineProcessor:()=>Z.MoonshineProcessor,MptForCausalLM:()=>a.MptForCausalLM,MptModel:()=>a.MptModel,MptPreTrainedModel:()=>a.MptPreTrainedModel,MultiModalityCausalLM:()=>a.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>a.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>a.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>a.MusicgenForConditionalGeneration,MusicgenModel:()=>a.MusicgenModel,MusicgenPreTrainedModel:()=>a.MusicgenPreTrainedModel,NllbTokenizer:()=>u.NllbTokenizer,NoBadWordsLogitsProcessor:()=>f.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>f.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>a.NomicBertModel,NomicBertPreTrainedModel:()=>a.NomicBertPreTrainedModel,NougatImageProcessor:()=>S.NougatImageProcessor,NougatTokenizer:()=>u.NougatTokenizer,OPTForCausalLM:()=>a.OPTForCausalLM,OPTModel:()=>a.OPTModel,OPTPreTrainedModel:()=>a.OPTPreTrainedModel,ObjectDetectionPipeline:()=>o.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>a.Olmo2ForCausalLM,Olmo2Model:()=>a.Olmo2Model,Olmo2PreTrainedModel:()=>a.Olmo2PreTrainedModel,OlmoForCausalLM:()=>a.OlmoForCausalLM,OlmoModel:()=>a.OlmoModel,OlmoPreTrainedModel:()=>a.OlmoPreTrainedModel,OpenELMForCausalLM:()=>a.OpenELMForCausalLM,OpenELMModel:()=>a.OpenELMModel,OpenELMPreTrainedModel:()=>a.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>S.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>a.OwlViTForObjectDetection,OwlViTImageProcessor:()=>S.OwlViTImageProcessor,OwlViTModel:()=>a.OwlViTModel,OwlViTPreTrainedModel:()=>a.OwlViTPreTrainedModel,OwlViTProcessor:()=>Z.OwlViTProcessor,Owlv2ForObjectDetection:()=>a.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>S.Owlv2ImageProcessor,Owlv2Model:()=>a.Owlv2Model,Owlv2PreTrainedModel:()=>a.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>a.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>a.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>Z.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>a.PatchTSMixerForPrediction,PatchTSMixerModel:()=>a.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>a.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>a.PatchTSTForPrediction,PatchTSTModel:()=>a.PatchTSTModel,PatchTSTPreTrainedModel:()=>a.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>a.Phi3ForCausalLM,Phi3Model:()=>a.Phi3Model,Phi3PreTrainedModel:()=>a.Phi3PreTrainedModel,Phi3VForCausalLM:()=>a.Phi3VForCausalLM,Phi3VImageProcessor:()=>S.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>a.Phi3VPreTrainedModel,Phi3VProcessor:()=>Z.Phi3VProcessor,PhiForCausalLM:()=>a.PhiForCausalLM,PhiModel:()=>a.PhiModel,PhiPreTrainedModel:()=>a.PhiPreTrainedModel,Pipeline:()=>o.Pipeline,PreTrainedModel:()=>a.PreTrainedModel,PreTrainedTokenizer:()=>u.PreTrainedTokenizer,PretrainedConfig:()=>p.PretrainedConfig,PretrainedMixin:()=>a.PretrainedMixin,Processor:()=>V.Processor,PvtForImageClassification:()=>a.PvtForImageClassification,PvtImageProcessor:()=>S.PvtImageProcessor,PvtModel:()=>a.PvtModel,PvtPreTrainedModel:()=>a.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>v.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>a.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>a.PyAnnoteModel,PyAnnotePreTrainedModel:()=>a.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>Z.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>a.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>o.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>a.Qwen2ForCausalLM,Qwen2Model:()=>a.Qwen2Model,Qwen2PreTrainedModel:()=>a.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>u.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>a.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>S.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>a.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>Z.Qwen2VLProcessor,RTDetrForObjectDetection:()=>a.RTDetrForObjectDetection,RTDetrImageProcessor:()=>S.RTDetrImageProcessor,RTDetrModel:()=>a.RTDetrModel,RTDetrObjectDetectionOutput:()=>a.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>a.RTDetrPreTrainedModel,RawAudio:()=>h.RawAudio,RawImage:()=>C.RawImage,RepetitionPenaltyLogitsProcessor:()=>f.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>a.ResNetForImageClassification,ResNetModel:()=>a.ResNetModel,ResNetPreTrainedModel:()=>a.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>a.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>a.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>a.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>a.RoFormerForTokenClassification,RoFormerModel:()=>a.RoFormerModel,RoFormerPreTrainedModel:()=>a.RoFormerPreTrainedModel,RoFormerTokenizer:()=>u.RoFormerTokenizer,RobertaForMaskedLM:()=>a.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>a.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>a.RobertaForSequenceClassification,RobertaForTokenClassification:()=>a.RobertaForTokenClassification,RobertaModel:()=>a.RobertaModel,RobertaPreTrainedModel:()=>a.RobertaPreTrainedModel,RobertaTokenizer:()=>u.RobertaTokenizer,SamImageProcessor:()=>S.SamImageProcessor,SamImageSegmentationOutput:()=>a.SamImageSegmentationOutput,SamModel:()=>a.SamModel,SamPreTrainedModel:()=>a.SamPreTrainedModel,SamProcessor:()=>Z.SamProcessor,SapiensForDepthEstimation:()=>a.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>a.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>a.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>a.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>v.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>S.SegformerFeatureExtractor,SegformerForImageClassification:()=>a.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>a.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>S.SegformerImageProcessor,SegformerModel:()=>a.SegformerModel,SegformerPreTrainedModel:()=>a.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>a.Seq2SeqLMOutput,SequenceClassifierOutput:()=>a.SequenceClassifierOutput,SiglipImageProcessor:()=>S.SiglipImageProcessor,SiglipModel:()=>a.SiglipModel,SiglipPreTrainedModel:()=>a.SiglipPreTrainedModel,SiglipTextModel:()=>a.SiglipTextModel,SiglipTokenizer:()=>u.SiglipTokenizer,SiglipVisionModel:()=>a.SiglipVisionModel,SpeechT5FeatureExtractor:()=>v.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>a.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>a.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>a.SpeechT5HifiGan,SpeechT5Model:()=>a.SpeechT5Model,SpeechT5PreTrainedModel:()=>a.SpeechT5PreTrainedModel,SpeechT5Processor:()=>Z.SpeechT5Processor,SpeechT5Tokenizer:()=>u.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>a.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>a.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>a.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>a.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>a.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>u.SqueezeBertTokenizer,StableLmForCausalLM:()=>a.StableLmForCausalLM,StableLmModel:()=>a.StableLmModel,StableLmPreTrainedModel:()=>a.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>a.Starcoder2ForCausalLM,Starcoder2Model:()=>a.Starcoder2Model,Starcoder2PreTrainedModel:()=>a.Starcoder2PreTrainedModel,StoppingCriteria:()=>q.StoppingCriteria,StoppingCriteriaList:()=>q.StoppingCriteriaList,StyleTextToSpeech2Model:()=>a.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>a.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>o.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>f.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>a.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>S.Swin2SRImageProcessor,Swin2SRModel:()=>a.Swin2SRModel,Swin2SRPreTrainedModel:()=>a.Swin2SRPreTrainedModel,SwinForImageClassification:()=>a.SwinForImageClassification,SwinModel:()=>a.SwinModel,SwinPreTrainedModel:()=>a.SwinPreTrainedModel,T5ForConditionalGeneration:()=>a.T5ForConditionalGeneration,T5Model:()=>a.T5Model,T5PreTrainedModel:()=>a.T5PreTrainedModel,T5Tokenizer:()=>u.T5Tokenizer,TableTransformerForObjectDetection:()=>a.TableTransformerForObjectDetection,TableTransformerModel:()=>a.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>a.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>a.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>f.TemperatureLogitsWarper,Tensor:()=>y.Tensor,Text2TextGenerationPipeline:()=>o.Text2TextGenerationPipeline,TextClassificationPipeline:()=>o.TextClassificationPipeline,TextGenerationPipeline:()=>o.TextGenerationPipeline,TextStreamer:()=>Q.TextStreamer,TextToAudioPipeline:()=>o.TextToAudioPipeline,TokenClassificationPipeline:()=>o.TokenClassificationPipeline,TokenClassifierOutput:()=>a.TokenClassifierOutput,TokenizerModel:()=>u.TokenizerModel,TopKLogitsWarper:()=>f.TopKLogitsWarper,TopPLogitsWarper:()=>f.TopPLogitsWarper,TrOCRForCausalLM:()=>a.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>a.TrOCRPreTrainedModel,TranslationPipeline:()=>o.TranslationPipeline,UniSpeechForCTC:()=>a.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>a.UniSpeechForSequenceClassification,UniSpeechModel:()=>a.UniSpeechModel,UniSpeechPreTrainedModel:()=>a.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>a.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>a.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>a.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>a.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>a.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>Z.VLChatProcessor,VLMImageProcessor:()=>S.VLMImageProcessor,ViTFeatureExtractor:()=>S.ViTFeatureExtractor,ViTForImageClassification:()=>a.ViTForImageClassification,ViTImageProcessor:()=>S.ViTImageProcessor,ViTMAEModel:()=>a.ViTMAEModel,ViTMAEPreTrainedModel:()=>a.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>a.ViTMSNForImageClassification,ViTMSNModel:()=>a.ViTMSNModel,ViTMSNPreTrainedModel:()=>a.ViTMSNPreTrainedModel,ViTModel:()=>a.ViTModel,ViTPreTrainedModel:()=>a.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>a.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>a.VitMatteForImageMatting,VitMatteImageProcessor:()=>S.VitMatteImageProcessor,VitMattePreTrainedModel:()=>a.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>a.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>S.VitPoseImageProcessor,VitPosePreTrainedModel:()=>a.VitPosePreTrainedModel,VitsModel:()=>a.VitsModel,VitsModelOutput:()=>a.VitsModelOutput,VitsPreTrainedModel:()=>a.VitsPreTrainedModel,VitsTokenizer:()=>u.VitsTokenizer,Wav2Vec2BertForCTC:()=>a.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>a.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>a.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>a.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>u.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>v.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>a.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>a.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>a.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>a.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>a.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>Z.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>Z.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>a.WavLMForAudioFrameClassification,WavLMForCTC:()=>a.WavLMForCTC,WavLMForSequenceClassification:()=>a.WavLMForSequenceClassification,WavLMForXVector:()=>a.WavLMForXVector,WavLMModel:()=>a.WavLMModel,WavLMPreTrainedModel:()=>a.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>v.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>a.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>a.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>v.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>a.WhisperForConditionalGeneration,WhisperModel:()=>a.WhisperModel,WhisperPreTrainedModel:()=>a.WhisperPreTrainedModel,WhisperProcessor:()=>Z.WhisperProcessor,WhisperTextStreamer:()=>Q.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>f.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>u.WhisperTokenizer,XLMForQuestionAnswering:()=>a.XLMForQuestionAnswering,XLMForSequenceClassification:()=>a.XLMForSequenceClassification,XLMForTokenClassification:()=>a.XLMForTokenClassification,XLMModel:()=>a.XLMModel,XLMPreTrainedModel:()=>a.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>a.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>a.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>a.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>a.XLMRobertaForTokenClassification,XLMRobertaModel:()=>a.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>a.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>u.XLMRobertaTokenizer,XLMTokenizer:()=>u.XLMTokenizer,XLMWithLMHeadModel:()=>a.XLMWithLMHeadModel,XVectorOutput:()=>a.XVectorOutput,YolosFeatureExtractor:()=>S.YolosFeatureExtractor,YolosForObjectDetection:()=>a.YolosForObjectDetection,YolosImageProcessor:()=>S.YolosImageProcessor,YolosModel:()=>a.YolosModel,YolosObjectDetectionOutput:()=>a.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>a.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>o.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>o.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>o.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>o.ZeroShotObjectDetectionPipeline,bankers_round:()=>k.bankers_round,cat:()=>y.cat,cos_sim:()=>k.cos_sim,dot:()=>k.dot,dynamic_time_warping:()=>k.dynamic_time_warping,env:()=>i.env,full:()=>y.full,full_like:()=>y.full_like,getKeyValueShapes:()=>p.getKeyValueShapes,hamming:()=>h.hamming,hanning:()=>h.hanning,interpolate:()=>y.interpolate,interpolate_4d:()=>y.interpolate_4d,interpolate_data:()=>k.interpolate_data,is_chinese_char:()=>u.is_chinese_char,layer_norm:()=>y.layer_norm,load_image:()=>C.load_image,log_softmax:()=>k.log_softmax,magnitude:()=>k.magnitude,matmul:()=>y.matmul,max:()=>k.max,mean:()=>y.mean,mean_pooling:()=>y.mean_pooling,medianFilter:()=>k.medianFilter,mel_filter_bank:()=>h.mel_filter_bank,min:()=>k.min,ones:()=>y.ones,ones_like:()=>y.ones_like,permute:()=>y.permute,permute_data:()=>k.permute_data,pipeline:()=>o.pipeline,quantize_embeddings:()=>y.quantize_embeddings,rand:()=>y.rand,read_audio:()=>h.read_audio,rfft:()=>y.rfft,round:()=>k.round,slice:()=>y.slice,softmax:()=>k.softmax,spectrogram:()=>h.spectrogram,stack:()=>y.stack,std_mean:()=>y.std_mean,topk:()=>y.topk,window_function:()=>h.window_function,zeros:()=>y.zeros,zeros_like:()=>y.zeros_like});var i=Qa("./src/env.js"),o=Qa("./src/pipelines.js"),a=Qa("./src/models.js"),u=Qa("./src/tokenizers.js"),p=Qa("./src/configs.js"),h=Qa("./src/utils/audio.js"),C=Qa("./src/utils/image.js"),y=Qa("./src/utils/tensor.js"),k=Qa("./src/utils/maths.js"),_=Qa("./src/base/feature_extraction_utils.js"),v=Qa("./src/models/feature_extractors.js"),M=Qa("./src/models/auto/feature_extraction_auto.js"),B=Qa("./src/base/image_processors_utils.js"),S=Qa("./src/models/image_processors.js"),N=Qa("./src/models/auto/image_processing_auto.js"),V=Qa("./src/base/processing_utils.js"),Z=Qa("./src/models/processors.js"),O=Qa("./src/models/auto/processing_auto.js"),Q=Qa("./src/generation/streamers.js"),q=Qa("./src/generation/stopping_criteria.js"),f=Qa("./src/generation/logits_process.js")})();var Xk=wf.AutoTokenizer,Zk=wf.RawAudio,Jk=wf.StyleTextToSpeech2Model,G1=wf.Tensor,Je=Je!==void 0?Je:{};Je.expectedDataFileDownloads||(Je.expectedDataFileDownloads=0);var $k=typeof importScripts=="function",Ag=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",F1=typeof atob=="function"?atob:function(i){var o,a,u,p,h,C,y="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",k="",_=0;i=i.replace(/[^A-Za-z0-9\+\/\=]/g,"");do o=y.indexOf(i.charAt(_++))<<2|(p=y.indexOf(i.charAt(_++)))>>4,a=(15&p)<<4|(h=y.indexOf(i.charAt(_++)))>>2,u=(3&h)<<6|(C=y.indexOf(i.charAt(_++))),k+=String.fromCharCode(o),h!==64&&(k+=String.fromCharCode(a)),C!==64&&(k+=String.fromCharCode(u));while(_<i.length);return k};Ag&&(process.argv.length>1&&(lg=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(i){if(!(i instanceof e_))throw i}),process.on("unhandledRejection",function(i){throw i}),Je.inspect=function(){return"[Emscripten Module object]"}),Je.expectedDataFileDownloads++,function(){if(Je.ENVIRONMENT_IS_PTHREAD)return;const i="/usr/share/espeak-ng-data",o=i+"/lang",a=i+"/voices";(function(u){var p=null,h=null;function C(){function y(B,S){if(!B)throw S+new Error().stack}function k(B,S,N){this.start=B,this.end=S,this.audio=N}Je.FS_createPath("/","usr",!0,!0),Je.FS_createPath("/usr","share",!0,!0),Je.FS_createPath("/usr/share","espeak-ng-data",!0,!0),Je.FS_createPath(i,"lang",!0,!0),Je.FS_createPath(o,"aav",!0,!0),Je.FS_createPath(o,"art",!0,!0),Je.FS_createPath(o,"azc",!0,!0),Je.FS_createPath(o,"bat",!0,!0),Je.FS_createPath(o,"bnt",!0,!0),Je.FS_createPath(o,"ccs",!0,!0),Je.FS_createPath(o,"cel",!0,!0),Je.FS_createPath(o,"cus",!0,!0),Je.FS_createPath(o,"dra",!0,!0),Je.FS_createPath(o,"esx",!0,!0),Je.FS_createPath(o,"gmq",!0,!0),Je.FS_createPath(o,"gmw",!0,!0),Je.FS_createPath(o,"grk",!0,!0),Je.FS_createPath(o,"inc",!0,!0),Je.FS_createPath(o,"ine",!0,!0),Je.FS_createPath(o,"ira",!0,!0),Je.FS_createPath(o,"iro",!0,!0),Je.FS_createPath(o,"itc",!0,!0),Je.FS_createPath(o,"jpx",!0,!0),Je.FS_createPath(o,"map",!0,!0),Je.FS_createPath(o,"miz",!0,!0),Je.FS_createPath(o,"myn",!0,!0),Je.FS_createPath(o,"poz",!0,!0),Je.FS_createPath(o,"roa",!0,!0),Je.FS_createPath(o,"sai",!0,!0),Je.FS_createPath(o,"sem",!0,!0),Je.FS_createPath(o,"sit",!0,!0),Je.FS_createPath(o,"tai",!0,!0),Je.FS_createPath(o,"trk",!0,!0),Je.FS_createPath(o,"urj",!0,!0),Je.FS_createPath(o,"zle",!0,!0),Je.FS_createPath(o,"zls",!0,!0),Je.FS_createPath(o,"zlw",!0,!0),Je.FS_createPath(i,"voices",!0,!0),Je.FS_createPath(a,"!v",!0,!0),Je.FS_createPath(a,"mb",!0,!0),k.prototype={requests:{},open:function(B,S){this.name=S,this.requests[S]=this,Je.addRunDependency("fp "+this.name)},send:function(){},onload:function(){var B=this.byteArray.subarray(this.start,this.end);this.finish(B)},finish:function(B){Je.FS_createDataFile(this.name,null,B,!0,!0,!0),Je.removeRunDependency("fp "+this.name),this.requests[this.name]=null}};for(var _=u.files,v=0;v<_.length;++v)new k(_[v].start,_[v].end,_[v].audio||0).open("GET",_[v].filename);function M(B){y(B,"Loading data file failed."),y(B.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var S=new Uint8Array(B);k.prototype.byteArray=S;for(var N=u.files,V=0;V<N.length;++V)k.prototype.requests[N[V].filename].onload();Je.removeRunDependency("datafile_js/espeakng.worker.data")}Je.addRunDependency("datafile_js/espeakng.worker.data"),h?(M(h),h=null):p=M}(async()=>{const y=function(M){if(typeof Ag=="boolean"&&Ag){var B=Buffer.from(M,"base64");return new Uint8Array(B.buffer,B.byteOffset,B.byteLength)}try{for(var S=F1(M),N=new Uint8Array(S.length),V=0;V<S.length;++V)N[V]=S.charCodeAt(V);return N}catch(Z){throw console.error(F1),console.error(Z),new Error("Converting base64 string to bytes failed.")}}(""),k=new Blob([y]).stream().pipeThrough(new DecompressionStream("gzip")),_=[];for await(const M of k)_.push(M);const v=await new Blob(_).arrayBuffer();p?(p(v),p=null):h=v})(),Je.calledRun?C():(Je.preRun||(Je.preRun=[]),Je.preRun.push(C))})({files:[{filename:i+"/en_dict",start:0,end:167064},{filename:i+"/intonations",start:167064,end:169104},{filename:o+"/aav/vi",start:169104,end:169215},{filename:o+"/aav/vi-VN-x-central",start:169215,end:169358},{filename:o+"/aav/vi-VN-x-south",start:169358,end:169500},{filename:o+"/art/eo",start:169500,end:169541},{filename:o+"/art/ia",start:169541,end:169570},{filename:o+"/art/io",start:169570,end:169620},{filename:o+"/art/jbo",start:169620,end:169689},{filename:o+"/art/lfn",start:169689,end:169824},{filename:o+"/art/piqd",start:169824,end:169880},{filename:o+"/art/py",start:169880,end:170020},{filename:o+"/art/qdb",start:170020,end:170077},{filename:o+"/art/qya",start:170077,end:170250},{filename:o+"/art/sjn",start:170250,end:170425},{filename:o+"/azc/nci",start:170425,end:170539},{filename:o+"/bat/lt",start:170539,end:170567},{filename:o+"/bat/ltg",start:170567,end:170879},{filename:o+"/bat/lv",start:170879,end:171108},{filename:o+"/bnt/sw",start:171108,end:171149},{filename:o+"/bnt/tn",start:171149,end:171191},{filename:o+"/ccs/ka",start:171191,end:171315},{filename:o+"/cel/cy",start:171315,end:171352},{filename:o+"/cel/ga",start:171352,end:171418},{filename:o+"/cel/gd",start:171418,end:171469},{filename:o+"/cus/om",start:171469,end:171508},{filename:o+"/dra/kn",start:171508,end:171563},{filename:o+"/dra/ml",start:171563,end:171620},{filename:o+"/dra/ta",start:171620,end:171671},{filename:o+"/dra/te",start:171671,end:171741},{filename:o+"/esx/kl",start:171741,end:171771},{filename:o+"/eu",start:171771,end:171825},{filename:o+"/gmq/da",start:171825,end:171868},{filename:o+"/gmq/is",start:171868,end:171895},{filename:o+"/gmq/nb",start:171895,end:171982},{filename:o+"/gmq/sv",start:171982,end:172007},{filename:o+"/gmw/af",start:172007,end:172130},{filename:o+"/gmw/de",start:172130,end:172172},{filename:o+"/gmw/en",start:172172,end:172312},{filename:o+"/gmw/en-029",start:172312,end:172647},{filename:o+"/gmw/en-GB-scotland",start:172647,end:172942},{filename:o+"/gmw/en-GB-x-gbclan",start:172942,end:173180},{filename:o+"/gmw/en-GB-x-gbcwmd",start:173180,end:173368},{filename:o+"/gmw/en-GB-x-rp",start:173368,end:173617},{filename:o+"/gmw/en-US",start:173617,end:173874},{filename:o+"/gmw/en-US-nyc",start:173874,end:174145},{filename:o+"/gmw/lb",start:174145,end:174176},{filename:o+"/gmw/nl",start:174176,end:174199},{filename:o+"/grk/el",start:174199,end:174222},{filename:o+"/grk/grc",start:174222,end:174321},{filename:o+"/inc/as",start:174321,end:174363},{filename:o+"/inc/bn",start:174363,end:174388},{filename:o+"/inc/bpy",start:174388,end:174427},{filename:o+"/inc/gu",start:174427,end:174469},{filename:o+"/inc/hi",start:174469,end:174492},{filename:o+"/inc/kok",start:174492,end:174518},{filename:o+"/inc/mr",start:174518,end:174559},{filename:o+"/inc/ne",start:174559,end:174596},{filename:o+"/inc/or",start:174596,end:174635},{filename:o+"/inc/pa",start:174635,end:174660},{filename:o+"/inc/sd",start:174660,end:174726},{filename:o+"/inc/si",start:174726,end:174781},{filename:o+"/inc/ur",start:174781,end:174875},{filename:o+"/ine/hy",start:174875,end:174936},{filename:o+"/ine/hyw",start:174936,end:175301},{filename:o+"/ine/sq",start:175301,end:175404},{filename:o+"/ira/fa",start:175404,end:175494},{filename:o+"/ira/fa-Latn",start:175494,end:175763},{filename:o+"/ira/ku",start:175763,end:175803},{filename:o+"/iro/chr",start:175803,end:176372},{filename:o+"/itc/la",start:176372,end:176669},{filename:o+"/jpx/ja",start:176669,end:176721},{filename:o+"/ko",start:176721,end:176772},{filename:o+"/map/haw",start:176772,end:176814},{filename:o+"/miz/mto",start:176814,end:176997},{filename:o+"/myn/quc",start:176997,end:177207},{filename:o+"/poz/id",start:177207,end:177341},{filename:o+"/poz/mi",start:177341,end:177708},{filename:o+"/poz/ms",start:177708,end:178138},{filename:o+"/qu",start:178138,end:178226},{filename:o+"/roa/an",start:178226,end:178253},{filename:o+"/roa/ca",start:178253,end:178278},{filename:o+"/roa/es",start:178278,end:178341},{filename:o+"/roa/es-419",start:178341,end:178508},{filename:o+"/roa/fr",start:178508,end:178587},{filename:o+"/roa/fr-BE",start:178587,end:178671},{filename:o+"/roa/fr-CH",start:178671,end:178757},{filename:o+"/roa/ht",start:178757,end:178897},{filename:o+"/roa/it",start:178897,end:179006},{filename:o+"/roa/pap",start:179006,end:179068},{filename:o+"/roa/pt",start:179068,end:179163},{filename:o+"/roa/pt-BR",start:179163,end:179272},{filename:o+"/roa/ro",start:179272,end:179298},{filename:o+"/sai/gn",start:179298,end:179345},{filename:o+"/sem/am",start:179345,end:179386},{filename:o+"/sem/ar",start:179386,end:179436},{filename:o+"/sem/he",start:179436,end:179476},{filename:o+"/sem/mt",start:179476,end:179517},{filename:o+"/sem/ti",start:179517,end:179610},{filename:o+"/sit/cmn",start:179610,end:180296},{filename:o+"/sit/cmn-Latn-pinyin",start:180296,end:180457},{filename:o+"/sit/hak",start:180457,end:180585},{filename:o+"/sit/my",start:180585,end:180641},{filename:o+"/sit/yue",start:180641,end:180835},{filename:o+"/sit/yue-Latn-jyutping",start:180835,end:181048},{filename:o+"/tai/shn",start:181048,end:181140},{filename:o+"/tai/th",start:181140,end:181177},{filename:o+"/trk/az",start:181177,end:181222},{filename:o+"/trk/ba",start:181222,end:181247},{filename:o+"/trk/cv",start:181247,end:181287},{filename:o+"/trk/kk",start:181287,end:181327},{filename:o+"/trk/ky",start:181327,end:181370},{filename:o+"/trk/nog",start:181370,end:181409},{filename:o+"/trk/tk",start:181409,end:181434},{filename:o+"/trk/tr",start:181434,end:181459},{filename:o+"/trk/tt",start:181459,end:181482},{filename:o+"/trk/ug",start:181482,end:181506},{filename:o+"/trk/uz",start:181506,end:181545},{filename:o+"/urj/et",start:181545,end:181782},{filename:o+"/urj/fi",start:181782,end:182019},{filename:o+"/urj/hu",start:182019,end:182092},{filename:o+"/urj/smj",start:182092,end:182137},{filename:o+"/zle/be",start:182137,end:182189},{filename:o+"/zle/ru",start:182189,end:182246},{filename:o+"/zle/ru-LV",start:182246,end:182526},{filename:o+"/zle/ru-cl",start:182526,end:182617},{filename:o+"/zle/uk",start:182617,end:182714},{filename:o+"/zls/bg",start:182714,end:182825},{filename:o+"/zls/bs",start:182825,end:183055},{filename:o+"/zls/hr",start:183055,end:183317},{filename:o+"/zls/mk",start:183317,end:183345},{filename:o+"/zls/sl",start:183345,end:183388},{filename:o+"/zls/sr",start:183388,end:183638},{filename:o+"/zlw/cs",start:183638,end:183661},{filename:o+"/zlw/pl",start:183661,end:183699},{filename:o+"/zlw/sk",start:183699,end:183723},{filename:i+"/phondata",start:183723,end:734147},{filename:i+"/phonindex",start:734147,end:773403},{filename:i+"/phontab",start:773403,end:829491},{filename:a+"/!v/Alex",start:829491,end:829619},{filename:a+"/!v/Alicia",start:829619,end:830093},{filename:a+"/!v/Andrea",start:830093,end:830450},{filename:a+"/!v/Andy",start:830450,end:830770},{filename:a+"/!v/Annie",start:830770,end:831085},{filename:a+"/!v/AnxiousAndy",start:831085,end:831446},{filename:a+"/!v/Demonic",start:831446,end:835304},{filename:a+"/!v/Denis",start:835304,end:835609},{filename:a+"/!v/Diogo",start:835609,end:835988},{filename:a+"/!v/Gene",start:835988,end:836269},{filename:a+"/!v/Gene2",start:836269,end:836552},{filename:a+"/!v/Henrique",start:836552,end:836933},{filename:a+"/!v/Hugo",start:836933,end:837311},{filename:a+"/!v/Jacky",start:837311,end:837578},{filename:a+"/!v/Lee",start:837578,end:837916},{filename:a+"/!v/Marco",start:837916,end:838383},{filename:a+"/!v/Mario",start:838383,end:838653},{filename:a+"/!v/Michael",start:838653,end:838923},{filename:a+"/!v/Mike",start:838923,end:839035},{filename:a+"/!v/Mr serious",start:839035,end:842228},{filename:a+"/!v/Nguyen",start:842228,end:842508},{filename:a+"/!v/Reed",start:842508,end:842710},{filename:a+"/!v/RicishayMax",start:842710,end:842943},{filename:a+"/!v/RicishayMax2",start:842943,end:843378},{filename:a+"/!v/RicishayMax3",start:843378,end:843813},{filename:a+"/!v/Storm",start:843813,end:844233},{filename:a+"/!v/Tweaky",start:844233,end:847422},{filename:a+"/!v/UniRobot",start:847422,end:847839},{filename:a+"/!v/adam",start:847839,end:847914},{filename:a+"/!v/anika",start:847914,end:848407},{filename:a+"/!v/anikaRobot",start:848407,end:848919},{filename:a+"/!v/announcer",start:848919,end:849219},{filename:a+"/!v/antonio",start:849219,end:849600},{filename:a+"/!v/aunty",start:849600,end:849958},{filename:a+"/!v/belinda",start:849958,end:850298},{filename:a+"/!v/benjamin",start:850298,end:850499},{filename:a+"/!v/boris",start:850499,end:850723},{filename:a+"/!v/caleb",start:850723,end:850780},{filename:a+"/!v/croak",start:850780,end:850873},{filename:a+"/!v/david",start:850873,end:850985},{filename:a+"/!v/ed",start:850985,end:851272},{filename:a+"/!v/edward",start:851272,end:851423},{filename:a+"/!v/edward2",start:851423,end:851575},{filename:a+"/!v/f1",start:851575,end:851899},{filename:a+"/!v/f2",start:851899,end:852256},{filename:a+"/!v/f3",start:852256,end:852631},{filename:a+"/!v/f4",start:852631,end:852981},{filename:a+"/!v/f5",start:852981,end:853413},{filename:a+"/!v/fast",start:853413,end:853562},{filename:a+"/!v/grandma",start:853562,end:853825},{filename:a+"/!v/grandpa",start:853825,end:854081},{filename:a+"/!v/gustave",start:854081,end:854334},{filename:a+"/!v/ian",start:854334,end:857502},{filename:a+"/!v/iven",start:857502,end:857763},{filename:a+"/!v/iven2",start:857763,end:858042},{filename:a+"/!v/iven3",start:858042,end:858304},{filename:a+"/!v/iven4",start:858304,end:858565},{filename:a+"/!v/john",start:858565,end:861751},{filename:a+"/!v/kaukovalta",start:861751,end:862112},{filename:a+"/!v/klatt",start:862112,end:862150},{filename:a+"/!v/klatt2",start:862150,end:862188},{filename:a+"/!v/klatt3",start:862188,end:862227},{filename:a+"/!v/klatt4",start:862227,end:862266},{filename:a+"/!v/klatt5",start:862266,end:862305},{filename:a+"/!v/klatt6",start:862305,end:862344},{filename:a+"/!v/linda",start:862344,end:862694},{filename:a+"/!v/m1",start:862694,end:863029},{filename:a+"/!v/m2",start:863029,end:863293},{filename:a+"/!v/m3",start:863293,end:863593},{filename:a+"/!v/m4",start:863593,end:863883},{filename:a+"/!v/m5",start:863883,end:864145},{filename:a+"/!v/m6",start:864145,end:864333},{filename:a+"/!v/m7",start:864333,end:864587},{filename:a+"/!v/m8",start:864587,end:864871},{filename:a+"/!v/marcelo",start:864871,end:865122},{filename:a+"/!v/max",start:865122,end:865347},{filename:a+"/!v/michel",start:865347,end:865751},{filename:a+"/!v/miguel",start:865751,end:866133},{filename:a+"/!v/mike2",start:866133,end:866321},{filename:a+"/!v/norbert",start:866321,end:869510},{filename:a+"/!v/pablo",start:869510,end:872652},{filename:a+"/!v/paul",start:872652,end:872936},{filename:a+"/!v/pedro",start:872936,end:873288},{filename:a+"/!v/quincy",start:873288,end:873642},{filename:a+"/!v/rob",start:873642,end:873907},{filename:a+"/!v/robert",start:873907,end:874181},{filename:a+"/!v/robosoft",start:874181,end:874632},{filename:a+"/!v/robosoft2",start:874632,end:875086},{filename:a+"/!v/robosoft3",start:875086,end:875541},{filename:a+"/!v/robosoft4",start:875541,end:875988},{filename:a+"/!v/robosoft5",start:875988,end:876433},{filename:a+"/!v/robosoft6",start:876433,end:876720},{filename:a+"/!v/robosoft7",start:876720,end:877130},{filename:a+"/!v/robosoft8",start:877130,end:877373},{filename:a+"/!v/sandro",start:877373,end:877903},{filename:a+"/!v/shelby",start:877903,end:878183},{filename:a+"/!v/steph",start:878183,end:878547},{filename:a+"/!v/steph2",start:878547,end:878914},{filename:a+"/!v/steph3",start:878914,end:879291},{filename:a+"/!v/travis",start:879291,end:879674},{filename:a+"/!v/victor",start:879674,end:879927},{filename:a+"/!v/whisper",start:879927,end:880113},{filename:a+"/!v/whisperf",start:880113,end:880505},{filename:a+"/!v/zac",start:880505,end:880780},{filename:a+"/mb/mb-af1",start:880780,end:880868},{filename:a+"/mb/mb-af1-en",start:880868,end:880951},{filename:a+"/mb/mb-ar1",start:880951,end:881035},{filename:a+"/mb/mb-ar2",start:881035,end:881119},{filename:a+"/mb/mb-br1",start:881119,end:881251},{filename:a+"/mb/mb-br2",start:881251,end:881387},{filename:a+"/mb/mb-br3",start:881387,end:881519},{filename:a+"/mb/mb-br4",start:881519,end:881655},{filename:a+"/mb/mb-ca1",start:881655,end:881760},{filename:a+"/mb/mb-ca2",start:881760,end:881865},{filename:a+"/mb/mb-cn1",start:881865,end:881957},{filename:a+"/mb/mb-cr1",start:881957,end:882068},{filename:a+"/mb/mb-cz1",start:882068,end:882138},{filename:a+"/mb/mb-cz2",start:882138,end:882220},{filename:a+"/mb/mb-de1",start:882220,end:882364},{filename:a+"/mb/mb-de1-en",start:882364,end:882460},{filename:a+"/mb/mb-de2",start:882460,end:882588},{filename:a+"/mb/mb-de2-en",start:882588,end:882668},{filename:a+"/mb/mb-de3",start:882668,end:882767},{filename:a+"/mb/mb-de3-en",start:882767,end:882863},{filename:a+"/mb/mb-de4",start:882863,end:882992},{filename:a+"/mb/mb-de4-en",start:882992,end:883073},{filename:a+"/mb/mb-de5",start:883073,end:883309},{filename:a+"/mb/mb-de5-en",start:883309,end:883399},{filename:a+"/mb/mb-de6",start:883399,end:883521},{filename:a+"/mb/mb-de6-en",start:883521,end:883595},{filename:a+"/mb/mb-de6-grc",start:883595,end:883678},{filename:a+"/mb/mb-de7",start:883678,end:883828},{filename:a+"/mb/mb-de8",start:883828,end:883899},{filename:a+"/mb/mb-ee1",start:883899,end:883996},{filename:a+"/mb/mb-en1",start:883996,end:884127},{filename:a+"/mb/mb-es1",start:884127,end:884241},{filename:a+"/mb/mb-es2",start:884241,end:884349},{filename:a+"/mb/mb-es3",start:884349,end:884453},{filename:a+"/mb/mb-es4",start:884453,end:884541},{filename:a+"/mb/mb-fr1",start:884541,end:884707},{filename:a+"/mb/mb-fr1-en",start:884707,end:884811},{filename:a+"/mb/mb-fr2",start:884811,end:884914},{filename:a+"/mb/mb-fr3",start:884914,end:885014},{filename:a+"/mb/mb-fr4",start:885014,end:885141},{filename:a+"/mb/mb-fr4-en",start:885141,end:885248},{filename:a+"/mb/mb-fr5",start:885248,end:885348},{filename:a+"/mb/mb-fr6",start:885348,end:885448},{filename:a+"/mb/mb-fr7",start:885448,end:885531},{filename:a+"/mb/mb-gr1",start:885531,end:885625},{filename:a+"/mb/mb-gr2",start:885625,end:885719},{filename:a+"/mb/mb-gr2-en",start:885719,end:885807},{filename:a+"/mb/mb-hb1",start:885807,end:885875},{filename:a+"/mb/mb-hb2",start:885875,end:885958},{filename:a+"/mb/mb-hu1",start:885958,end:886060},{filename:a+"/mb/mb-hu1-en",start:886060,end:886157},{filename:a+"/mb/mb-ic1",start:886157,end:886245},{filename:a+"/mb/mb-id1",start:886245,end:886346},{filename:a+"/mb/mb-in1",start:886346,end:886415},{filename:a+"/mb/mb-in2",start:886415,end:886500},{filename:a+"/mb/mb-ir1",start:886500,end:887253},{filename:a+"/mb/mb-it1",start:887253,end:887337},{filename:a+"/mb/mb-it2",start:887337,end:887424},{filename:a+"/mb/mb-it3",start:887424,end:887566},{filename:a+"/mb/mb-it4",start:887566,end:887711},{filename:a+"/mb/mb-jp1",start:887711,end:887782},{filename:a+"/mb/mb-jp2",start:887782,end:887883},{filename:a+"/mb/mb-jp3",start:887883,end:887970},{filename:a+"/mb/mb-la1",start:887970,end:888053},{filename:a+"/mb/mb-lt1",start:888053,end:888140},{filename:a+"/mb/mb-lt2",start:888140,end:888227},{filename:a+"/mb/mb-ma1",start:888227,end:888325},{filename:a+"/mb/mb-mx1",start:888325,end:888445},{filename:a+"/mb/mb-mx2",start:888445,end:888565},{filename:a+"/mb/mb-nl1",start:888565,end:888634},{filename:a+"/mb/mb-nl2",start:888634,end:888730},{filename:a+"/mb/mb-nl2-en",start:888730,end:888821},{filename:a+"/mb/mb-nl3",start:888821,end:888906},{filename:a+"/mb/mb-nz1",start:888906,end:888974},{filename:a+"/mb/mb-pl1",start:888974,end:889073},{filename:a+"/mb/mb-pl1-en",start:889073,end:889155},{filename:a+"/mb/mb-pt1",start:889155,end:889286},{filename:a+"/mb/mb-ro1",start:889286,end:889373},{filename:a+"/mb/mb-ro1-en",start:889373,end:889454},{filename:a+"/mb/mb-sw1",start:889454,end:889552},{filename:a+"/mb/mb-sw1-en",start:889552,end:889645},{filename:a+"/mb/mb-sw2",start:889645,end:889747},{filename:a+"/mb/mb-sw2-en",start:889747,end:889846},{filename:a+"/mb/mb-tl1",start:889846,end:889931},{filename:a+"/mb/mb-tr1",start:889931,end:890016},{filename:a+"/mb/mb-tr2",start:890016,end:890130},{filename:a+"/mb/mb-us1",start:890130,end:890300},{filename:a+"/mb/mb-us2",start:890300,end:890478},{filename:a+"/mb/mb-us3",start:890478,end:890658},{filename:a+"/mb/mb-vz1",start:890658,end:890802}]})}();var z1=Object.assign({},Je),lg="./this.program",f2=Je.print||console.log.bind(console),If=Je.printErr||console.warn.bind(console);Object.assign(Je,z1),z1=null,Je.arguments&&Je.arguments,Je.thisProgram&&(lg=Je.thisProgram),Je.quit&&Je.quit,Je.wasmBinary&&Je.wasmBinary,Je.noExitRuntime;var cg,yf={Memory:function(i){this.buffer=new ArrayBuffer(65536*i.initial)},Module:function(i){},Instance:function(i,o){this.exports=function(a){for(var u,p=new Uint8Array(123),h=25;h>=0;--h)p[48+h]=52+h,p[65+h]=h,p[97+h]=26+h;function C(O,Q,q){for(var f,I,e=0,c=Q,P=q.length,J=Q+(3*P>>2)-(q[P-2]=="=")-(q[P-1]=="=");e<P;e+=4)f=p[q.charCodeAt(e+1)],I=p[q.charCodeAt(e+2)],O[c++]=p[q.charCodeAt(e)]<<2|f>>4,c<J&&(O[c++]=f<<4|I>>2),c<J&&(O[c++]=I<<6|p[q.charCodeAt(e+3)])}p[43]=62,p[47]=63;var y=new ArrayBuffer(16),k=new Int32Array(y),_=new Float32Array(y),v=new Float64Array(y);function M(O){return k[O]}function B(O,Q){k[O]=Q}function S(){return v[0]}function N(O){v[0]=O}function V(){throw new Error("abort")}function Z(O){_[2]=O}return function(O){var Q=O.a,q=Q.a.buffer,f=new Int8Array(q),I=new Int16Array(q),e=new Int32Array(q),c=new Uint8Array(q),P=new Uint16Array(q),J=new Uint32Array(q),D=new Float64Array(q),j=Math.imul,Ie=Math.fround,ge=Math.abs,ke=Math.clz32,Ee=Math.min,Ne=Math.floor,Xe=Math.ceil,At=Q.b,xe=Q.c,ye=Q.d,ue=Q.e,ie=Q.f,be=Q.g,Ye=Q.h,Le=Q.i,lt=Q.j,ft=Q.k,pt=Q.l,ct=Q.m,He=Q.n,Re=Q.o,Se=Q.p,Qe=Q.q,ht=Q.r,wt=Q.s,Bt=Q.t,Mt=Q.u,oe=294656,zt=0,ve=0,H=0;function ce(t){var r,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0,Ds=0,ea=0,da=0,ma=0,Ia=0,Na=0,La=0,Ja=0,an=0,In=0,z=0,K=0,re=0,me=0,_e=0,at=0,yt=0,Ut=0,rr=0,pr=0,Nr=0,ns=0,ys=0,Ea=0,ti=0;if(oe=r=oe-16|0,(0|t)!=2)if(t=e[33283],e[t>>2]!=e[t+4>>2]){if(Mn(e[e[32972]+60>>2]),Ce=e[47192],K=r+12|0,yt=r+8|0,oe=w=oe-6832|0,e[w+6816>>2]=0,e[w+6808>>2]=32,e[w+6800>>2]=0,Ce){e[47351]=0,e[47350]=0,e[47352]=0,f[189076]=0,t=e[33284],e[47353]=(0|t)>0?t:0,e[47355]=e[47354]+1,Yt(br=w+5184|0,0,1600),an=w+6800|0,oe=g=oe-2608|0,e[g+2156>>2]=32,e[g+2148>>2]=0,c[134760]&&(f[190280]=0,f[134760]=0),e[Ce+8216>>2]=0,e[Ce+8220>>2]=0,e[Ce+288>>2]=0,e[w+780>>2]=0,f[189360]=0;e:if(t=e[33691])e[g+2152>>2]=t;else{t:{s:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2]){e[g+2152>>2]=0;break e}if(!(s=e[33285]))break s}e[33285]=0;break t}e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t)}e[g+2152>>2]=s}Nr=br+2|0,St=32;e:{for(;;){xt=St;t:{s:{n:{if(s=e[33691],(A=e[33285])?t=0:(A=e[33285],t=e[33283],t=e[t>>2]==e[t+4>>2]),s|!t|A||!(e[32524]<0)){if(!Co(e[g+2156>>2])){if((A=(0|(t=e[49828]))>0)&(0|(s=t))<(0|(t=e[33284])))break n;if(!((0|(s=e[49845]))<=0|(0|t)<(0|s))){e[49845]=0,f[134760]=1,e[33285]=e[g+2152>>2],n=16384;break e}}St=e[g+2156>>2],e[g+2156>>2]=e[g+2152>>2];i:{c:{A:{d:{l:{if((0|(s=e[32524]))>=0){if(c[s+134736|0])break l;e[32524]=-1}if(s=e[33285])break A;if(t=e[33283],e[t>>2]!=e[t+4>>2])break d;s=32;break i}e[33691]|s||(e[g+2156>>2]=f[134736],s=1),e[32524]=s+1,s=f[s+134736|0];break i}if(!(s=e[33285]))break c}e[33285]=0;break i}e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t)}e[g+2152>>2]=s,e[33691]=0;i:if(!(T|!e[47203])){c:{if((0|(t=e[g+2156>>2]))!=60){if((0|s)!=35&s-97>>>0>25|(0|t)!=38)break i;for(A=e[33285],l=0;;){A:{if(e[g+2156>>2]=s,!A){if(t=e[33283],e[t>>2]==e[t+4>>2])break A;s=e[g+2156>>2]}if(!(!((s=!!(0|Co(s)))|(0|(t=e[g+2156>>2]))==35)|l>>>0>19)){f[(g+112|0)+l|0]=t,l=l+1|0,(s=e[33285])?(e[33285]=0,A=0):(e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t),A=e[33285]);continue}}break}f[(g+112|0)+l|0]=0;A:{d:{if(!(s=e[33285])){if(s=0,t=e[33283],e[t>>2]==e[t+4>>2])break A;if(!(s=e[33285]))break d}e[33285]=0;break A}e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t)}e[g+2152>>2]=s,e[g+100>>2]=e[g+2156>>2],e[g+104>>2]=s,e[g+96>>2]=g+112,mr(134736,84252,g+96|0);A:{if(e[g+2156>>2]==59){l=g+2156|0,Ae=g+2152|0,oe=A=oe-32|0;d:if(c[0|(s=g+112|0)]!=35)t=-1,(0|(s=Oi(130752,s)))!=-1&&(e[l>>2]=s,e[Ae>>2]||(e[Ae>>2]=32),t=s);else{if(c[0|(t=s+1|0)]==120){e[A>>2]=l,t=Jt(s+2|0,90005,A);break d}e[A+16>>2]=l,t=Jt(t,90070,A+16|0)}if(oe=A+32|0,(0|t)>0)break A}e[32524]=0,e[g+2156>>2]=38,e[g+2152>>2]=32;break i}if((0|(t=e[g+2156>>2]))>32)break i;if(!(s=e[33692]-20|0)|(0|s)==16)break c;break i}if((0|s)!=47&&!ls(s)&&(0|(t=e[g+2152>>2]))!=63&&(0|t)!=33)break i;if((0|(t=e[g+2148>>2]))>780){e[33691]=e[g+2156>>2],f[0|(t=t+189424|0)]=32,f[t+1|0]=0,e[33285]=e[g+2152>>2],n=16384;break e}for(Ae=e[33285],l=0,s=e[g+2152>>2];e[g+2156>>2]=s,A=0,Ae||(t=e[33283],A=e[t>>2]==e[t+4>>2],s=e[g+2156>>2]),!((0|s)==62|A|l>>>0>499);)e[(g+144|0)+(l<<2)>>2]=s,l=l+1|0,(s=e[33285])?(Ae=0,e[33285]=0):(e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t),Ae=e[33285]);e[(A=g+144|0)+(l<<2)>>2]=0,e[g+2152>>2]=32,Rt=g+2148|0,xt=e[32525],s=0,oe=mt=oe-560|0;A:if(Ko(A,84333,3)&&Ko(A,84477,4)){for(t=(A+(_A(A)<<2)|0)-4|0,(0|(Ir=e[t>>2]))==47&&(e[t>>2]=32);;){if(t=e[A+(s<<2)>>2]){if(Za(t))t=s;else if(f[(mt+512|0)+s|0]=zs(t<<24>>24),t=39,(0|(s=s+1|0))!=39)continue}else t=s;break}if(f[(mt+512|0)+t|0]=0,c[mt+512|0]!=47){if((0|(Ae=Oi(130480,mt+512|0)))!=16&&(s=e[Rt>>2],e[Rt>>2]=s+1,f[s+189424|0]=32),(0|Ir)==47&&(s=0,!(502241>>>Ae&1)))break A}else(0|(s=Oi(130480,mt+512|1)))!=16&&(l=e[Rt>>2],e[Rt>>2]=l+1,f[l+189424|0]=32),Ae=s+32|0;l=A+(t<<2)|0,t=e[33708],T=j(t,76)+133076|0,s=262174;d:{l:{o:{p:switch(Ae-1|0){case 33:b:if(!((0|t)<=1)){for(;;){if(e[j(s=t-1|0,76)+133152>>2]==2)break b;if(e[33708]=s,A=t>>>0>2,t=s,!A)break}t=1}s=Br(l,34,t);break A;case 32:b:if(!((0|t)<=1)){for(;;){if(e[j(s=t-1|0,76)+133152>>2]==1)break b;if(e[33708]=s,A=t>>>0>2,t=s,!A)break}t=1}s=Br(l,33,t)+524328|0;break A;case 9:(0|(s=e[33709]))<=18&&(e[33709]=s+1),e[(t=134912+(T=s<<6)|0)>>2]=10,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,t=Ms(l,88301),A=Ms(l,88390),Wo(t,88479)?Wo(t,88528)||(e[28+(134912+(s<<6)|0)>>2]=jn(A,130224)):e[24+(T+134912|0)>>2]=jn(A,130192),Xn(Rt,e[33709]);break o;case 2:for((0|(t=e[33709]))<=18&&(e[33709]=t+1),e[(t=134912+(Ut=t<<6)|0)>>2]=3,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,da=1;;){if(A=Ms(l,e[130448+(ma=da<<2)>>2])){Ir=0,t=e[ma+131072>>2];b:if(Ae=e[t>>2])for(;;){for(s=0;T=f[s+Ae|0],(xt=e[(s<<2)+A>>2])&&(s=s+1|0,(0|T)==(0|xt)););switch(xt-34|0){case 0:case 5:if(!T)break b}if(!(Ae=e[t+((Ir=Ir+1|0)<<3)>>2]))break}ns=ma+(Ut+134912|0)|0;b:if((0|(t=e[4+(t+(Ir<<3)|0)>>2]))>=0)t=(0|j(t,e[4+(ma+134912|0)>>2]))/100|0;else{for(;A=(t=A)+4|0,Za(e[t>>2]););for(rr=e[t>>2]==43,A=((pr=e[(t=t+(rr<<2)|0)>>2]==45)<<2)+t|0,Ir=mt+96|0,oe=Ae=(oe=T=oe-16|0)-224|0,Yt(Ae+16|0,0,144),t=Ae+160|4,e[Ae+24>>2]=t,e[Ae+60>>2]=t,e[Ae+92>>2]=-1,e[Ae+64>>2]=60,e[Ae+20>>2]=t,e[Ae+48>>2]=19,s=A;s=(t=s)+4|0,xt=(xt=e[t>>2])?Ua(124960,xt):0;);e[Ae+100>>2]=t,ei(s=Ae+16|0,0,0),It(Ae,s,1,1),s=e[Ae+8>>2],ys=e[Ae+12>>2],xt=e[Ae>>2],Ea=e[Ae+4>>2],Ir&&(ti=Ir,Ir=e[Ae+136>>2]+(e[Ae+20>>2]-e[Ae+60>>2]|0)|0,e[ti>>2]=Ir?t+(Ir<<2)|0:A),e[(t=T)+8>>2]=s,e[t+12>>2]=ys,e[t>>2]=xt,e[t+4>>2]=Ea,oe=Ae+224|0,ut=zi(e[t>>2],e[t+4>>2],e[t+8>>2],e[t+12>>2]),oe=t+16|0;m:{s=100;C:if((0|(t=A))!=(0|(A=e[mt+96>>2]))){s=pr?-1:rr;h:{if((0|(t=e[A>>2]))!=115){if((0|t)!=37)break h;if(ge(ut=s?+(0|s)*ut+100:ut)<2147483648){s=~~ut;break C}s=-2147483648;break C}if(e[A+4>>2]==116){N(+(Ds=ut*+(0|s)/12)),t=0|M(1),M(0);M:{if((s=(t=t>>>20&2047)-969|0)>>>0>=63){if(ut=Ds+1,(0|s)<0)break M;if(N(+Ds),s=0|M(1),A=0|M(0),!(t>>>0<1033)){if(ut=0,!A&(0|s)==-1048576||(ut=Ds+1,t>>>0>=2047))break M;if((0|s)>0|(0|s)>=0){D[8+(t=oe-16|0)>>3]=3105036184601418e216,ut=3105036184601418e216*D[t+8>>3];break M}if(!(s>>>0<3230714880)){D[8+(t=oe-16|0)>>3]=12882297539194267e-247,ut=12882297539194267e-247*D[t+8>>3];break M}}T=t,t=!(A<<1)&(0|(t=s<<1|A>>>31))==-2129002496|t>>>0<2165964800?T:0}re=(Ds=(ut=Ds-((In=(ut=D[14416])+Ds)-ut))*ut)*Ds*(ut*D[14421]+D[14420]),Ds*=ut*D[14419]+D[14418],ut*=D[14417],N(+In),M(1),T=0|M(0),ut=re+(Ds+(ut+D[115376+(A=T<<4&2032)>>3])),xt=e[(A=A+115384|0)>>2],Ae=e[A+4>>2],A=(s=xt)+(xt=0)|0,s=(T<<13)+Ae|0,s=A>>>0<xt>>>0?s+1|0:s,t?(B(0,0|A),B(1,0|s),ut=(Ds=+S())*ut+Ds):-2147483648&T?(B(0,0|A),B(1,s+1071644672|0),(ut=(In=(Ds=+S())*ut)+Ds)<1&&(e[8+(t=oe-16|0)>>2]=0,e[t+12>>2]=1048576,D[t+8>>3]=22250738585072014e-324*D[t+8>>3],ut=(ut=(re=ut+1)+(In+(Ds-ut)+(ut+(1-re)))+-1)==0?0:ut),ut*=22250738585072014e-324):(B(0,0|A),B(1,s+-1048576|0),ut=(Ds=+S())*ut+Ds,ut+=ut)}if(ge(ut*=100)<2147483648){s=~~ut;break C}s=-2147483648;break C}}if((0|da)!=1)break m;if(s)s=100+(t=ge(ut=ut*+(0|s)*100)<2147483648?~~ut:-2147483648)|0;else{if(ge(ut*=100)<2147483648){s=~~ut;break C}s=-2147483648}}t=(0|j(s,e[ma+134848>>2]))/100|0;break b}t=ge(ut)<2147483648?~~ut:-2147483648,s&&(t=e[ma+134848>>2]+j(t,s)|0)}e[ns+4>>2]=t}if((0|(da=da+1|0))==5)break}Xn(Rt,e[33709]);break o;case 11:(0|(s=e[33709]))<=18&&(e[33709]=s+1),e[(t=134912+(s<<6)|0)>>2]=12,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,t=(t=Ms(l,88658))?jn(t,130400):3,A=134912+(s<<6)|0,e[e[47192]+148>>2]!=1?(e[52+(134912+(s<<6)|0)>>2]=t,t=c[t+102776|0]):(e[20+(134912+(s<<6)|0)>>2]=c[t+102764|0],t=c[t+102770|0]),e[A+12>>2]=t,Xn(Rt,e[33709]);break o;case 34:case 41:case 43:if(!((0|(t=e[33709]))<=0)){if(l=Ae-32|0,Ae=0,A=0,s=0,t>>>0>=4)for(T=-4&t,Ir=0;da=2|s,ma=1|s,A=(0|l)==e[134912+((xt=3|s)<<6)>>2]?xt:(0|l)==e[134912+(da<<6)>>2]?da:(0|l)==e[134912+(ma<<6)>>2]?ma:(0|l)==e[134912+(s<<6)>>2]?s:A,s=s+4|0,(0|T)!=(0|(Ir=Ir+4|0)););if(T=3&t)for(;A=(0|l)==e[134912+(s<<6)>>2]?s:A,s=s+1|0,(0|T)!=(0|(Ae=Ae+1|0)););(0|A)<=0||(e[33709]=A,t=A)}Xn(Rt,t);break o;case 7:if(t=Ms(l,88741),s=Ms(l,88860),(0|jn(t,130176))!=1)break o;t=e[Rt>>2],e[Rt>>2]=t+1,f[t+189424|0]=91,t=e[Rt>>2],e[Rt>>2]=t+1,f[t+189424|0]=91,t=ii((t=e[Rt>>2])+189424|0,s,800-t|0)+e[Rt>>2]|0,e[Rt>>2]=t+1,f[t+189424|0]=93,t=e[Rt>>2],e[Rt>>2]=t+1,f[t+189424|0]=93;break o;case 35:e[33692]==36&&(f[e[Rt>>2]+189424|0]=0,(A=Oi(131104,s=(t=e[33707])+189424|0))&&(e[Rt>>2]=Xa(A,s)+t)),t=e[Rt>>2],e[Rt>>2]=t+1,f[t+189424|0]=1,t=e[Rt>>2],e[Rt>>2]=t+1,f[t+189424|0]=89,e[33692]=0;break o;case 8:if(!(t=Ms(l,89299)))break o;f[134824]=1,s=e[Rt>>2],e[Rt>>2]=ii(s+189424|0,t,800-s|0)+e[Rt>>2];break o;case 13:f[134824]=1;break o;case 40:case 45:f[134824]=0;break o;case 4:if(!(t=Ms(l,89360)))break o;if(ii(mt+352|0,t,160),c[mt+352|0]&&!Pa(199328,mt+352|0)){f[134760]=1,f[199328]=0,s=16384;break A}if((0|(t=Ci(mt+352|0)))<0)break o;e[mt+20>>2]=t,e[mt+16>>2]=1,mr(t=mt+352|0,89460,mt+16|0),Qr(e[Rt>>2]+189424|0,t),e[Rt>>2]=e[Rt>>2]+_r(t);break o;case 10:(0|(s=e[33709]))<=18&&(e[33709]=s+1),e[(t=134912+(s<<6)|0)>>2]=11,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1;b:if(t=Ms(l,89514)){if(ii(mt+352|0,t,160),e[34441]){if((0|(t=Ci(mt+352|0)))<0||0|rs[e[34441]](1,t+e[33282]|0,xt))break b;e[mt+68>>2]=t,e[mt+64>>2]=1,mr(mt+352|0,89658,mt- -64|0)}else{if(!xt|c[mt+352|0]==47?t=cl(mt+352|0):(e[mt+48>>2]=xt,e[mt+52>>2]=mt+352,mr(t=mt+96|0,89564,mt+48|0),t=cl(t)),(0|t)<0)break b;e[mt+36>>2]=t,e[mt+32>>2]=1,mr(mt+352|0,89623,mt+32|0)}t=mt+352|0,Qr(e[Rt>>2]+189424|0,t),e[Rt>>2]=e[Rt>>2]+_r(t),e[4+(134912+(s<<6)|0)>>2]=1}if(Xn(Rt,e[33709]),(0|Ir)==47){Mo(11,Rt),s=16384;break A}f[134772]=1,s=16384;break A;case 42:Mo(43,Rt),f[134772]=0,s=16384;break A;case 12:b:{if(t=Ms(l,89714)){if(s=16384,(T=(0|(t=jn(t,130336)))<0?2:t)>>>0<=2&&(t=e[Rt>>2],e[mt+84>>2]=T,e[mt+80>>2]=1,mr(t+189424|0,89770,mt+80|0),e[Rt>>2]=e[Rt>>2]+3,s=0),t=e[102784+(T<<2)>>2],!(A=Ms(l,89907)))break b;break l}if(s=16384,A=Ms(l,89907))break l;t=21;break d}if(T>>>0<3)break o;break d;case 0:(t=Ms(l,89965))&&(ii(s=mt+352|0,t,160),Ci(s)),s=Br(l,1,e[33708])?147456:0;break A;case 1:s=Br(l,2,t)?147456:0;break A;case 5:s=0,e[T>>2]==6&&(s=Br(l,38,t),t=e[33708]),s=524358+(Br(l,6,t)|s)|0;break A;case 6:s=0,(0|(A=e[T>>2]))==6&&(s=Br(l,38,t),A=e[T>>2]),(0|A)==7&&(s=Br(l,39,e[33708])|s),s=524358+(s|Br(l,7,e[33708]))|0;break A;case 37:if(s=524328,e[T>>2]!=6)break A;s=Br(l,38,t)+524328|0;break A;case 38:if(s=524358,(-2&e[T>>2])!=6)break A;s=Br(l,39,t)+524358|0;break A;case 14:case 46:break A;case 3:break p;default:break o}t=Ms(l,88893),s=Ms(l,88992),A=Ms(l,89153),l=jn(t,130272),s=jn(s,130320),t=qA(A,0),e[mt>>2]=1,A=(0|t)<2?193:t- -64|0,s=(0|(t=(0|s)==1?19:l))==64?A:t,e[mt+4>>2]=s,mr(t=mt+352|0,89230,mt),Qr(e[Rt>>2]+189424|0,t),t=e[Rt>>2]+_r(t)|0,e[Rt>>2]=t,e[33707]=t,e[33692]=s}s=0;break A}t=qA(A,1),A=e[33722],mA(1,e[33713]),(0|(t=(0|(A=(0|j(t,A))/100<<8))/(0|j(e[36429],10))|0))<=199&&(t=(0|A)/(0|j(e[36428],10))|0),s=s||16384}A=t>>>5|0,l=t,s=((t=(0|t)>4095)?A>>>0>=4095?4095:A:l)+(t?8388608|s:s)|0}if(oe=mt+560|0,s){if(t=e[g+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,!(131072&s)){n=s;break e}Qr(189360,134784),n=s;break e}e[g+2156>>2]=32;A:{d:{if(!(s=e[33285])){if(T=0,t=e[33283],e[t>>2]==e[t+4>>2])continue;if(!(s=e[33285]))break d}e[33285]=0;break A}e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t)}e[g+2152>>2]=s,T=0;continue}e[g+2156>>2]=t+57344}if(c[134824])continue;if(A=e[g+2156>>2],!((0|(t=e[g+2152>>2]))!=10|e[47268]!=-1)){(0|(n=Ei(A)))==16384?(t=e[g+2148>>2],I[br+(t<<1)>>1]=e[33284]-e[47353],e[an>>2]=t,n=524328,t=Xa(e[g+2156>>2],t+189424|0)+e[g+2148>>2]|0):t=e[g+2148>>2],f[0|(t=t+189424|0)]=32,f[t+1|0]=0;break e}i:if((0|A)==1){if((0|t)!=66){if((0|t)!=86)break i;for(t=e[g+2148>>2],e[g+2148>>2]=t+1,f[t+189424|0]=0;;){c:{A:{d:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])break c;if(!(s=e[33285]))break d}e[33285]=0;break A}e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t)}if(e[g+2156>>2]=s,!(Za(s)||(0|(t=e[g+2148>>2]))>=799)){e[g+2148>>2]=t+1,f[t+189424|0]=e[g+2156>>2];continue}}break}f[e[g+2148>>2]+189424|0]=0,n=147456;break e}s=e[g+2148>>2],f[0|(t=s+189424|0)]=32,f[t+1|0]=32,f[t+2|0]=32,f[t+3|0]=0,e[g+2148>>2]=s+3;c:{A:{d:{l:{o:{p:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])break l;if(!(s=e[33285]))break p}e[33285]=0;break o}e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t)}if(e[g+2152>>2]=s,A=0,(0|s)!=48)break d;break A}s=e[g+2152>>2]}if(e[47208]=0,e[47201]=1,(0|s)==49)break c;for(A=e[33285],l=0;;){d:{if(!A){if(t=e[33283],e[t>>2]==e[t+4>>2])break d;s=e[g+2152>>2]}if(!(Za(s)|l>>>0>58)){e[188832+(l<<2)>>2]=e[g+2152>>2],(s=e[33285])?(e[33285]=0,A=0):(e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t),A=e[33285]),l=l+1|0,e[g+2152>>2]=s,t=e[g+2148>>2],e[g+2148>>2]=t+1,f[t+189424|0]=32;continue}}break}A=2,e[188832+(l<<2)>>2]=0}e[47201]=A}c:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])continue;if(!(s=e[33285]))break c}e[33285]=0,e[g+2152>>2]=s;continue}e[33284]=e[33284]+1,t=e[33283],e[g+2152>>2]=rs[e[t+8>>2]](t);continue}Na=Na+1|0,s=0,t=e[Ce+340>>2];i:if(l=P[t>>1]){for(;;){if((65535&l)!=(0|A)){if(l=P[t+((s=s+2|0)<<1)>>1])continue;break i}break}switch(0|(t=P[t+(s<<1|2)>>1])){case 1:continue;case 0:break i}e[g+2156>>2]=t,A=t}Co(A)?(We=1,s=e[g+2156>>2]):Ur?(e[33285]=e[g+2152>>2],s=1328,e[g+2156>>2]=1328,e[g+2152>>2]=32,Ur=0):(0|(s=e[g+2156>>2]))!=3851?(Ur=0,(0|s)!=3405|e[g+2152>>2]!=8205||(s=3406,e[g+2156>>2]=3406)):(s=32,e[g+2156>>2]=32,Ur=0);i:if(Pi(s)){if(e[Ce+8216>>2]=e[Ce+8216>>2]+1,e[33692]|e[47200]!=2||Pi(St)||(e[g+2544>>2]=0,e[g+2548>>2]=0,e[g+2304>>2]=84731,!ba(Ce,g+2304|0,g+2160|0,g+2544|0,0,0))||(Rr(Ce,t=g+2160|0,g+2544|0,-1,0),Tr(s=t,t=g+2336|0),e[g+80>>2]=t,mr(s=g+2240|0,85451,g+80|0),t=e[g+2148>>2],(0|(s=_r(s)+t|0))>=800))break i;Qr(t+189424|0,g+2240|0),e[g+2148>>2]=s}else ls(e[g+2156>>2])&&(e[Ce+8220>>2]=e[Ce+8220>>2]+1);if(s=e[g+2152>>2],t=e[g+2156>>2],e[47204])if((0|T)>0)T=T-1|0;else{if(!((0|t)!=91|(0|s)!=91)){A=0,T=-1;break t}T=(0|t)==93&&(0|s)==93?2:T}if((0|t)==10){for(A=e[33285],l=0;;){i:{if(!A){if(t=e[33283],e[t>>2]==e[t+4>>2])break i;s=e[g+2152>>2]}if(Za(s)){l=(e[g+2152>>2]==10)+l|0,(s=e[33285])?(e[33285]=0,A=0):(e[33284]=e[33284]+1,t=e[33283],s=0|rs[e[t+8>>2]](t),A=e[33285]),e[g+2152>>2]=s;continue}}break}if((0|l)>0){n&&Yt(t=La+189424|0,32,Hr(g+2336|0,t)),t=e[g+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,e[33285]=e[g+2152>>2],n=e[47203]?524358:j((0|l)>=3?3:l,30)+524328|0;break e}if(t=e[47268]<(0|Na),Na=0,!t){t=e[g+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,e[33285]=e[g+2152>>2],n=262174;break e}}if(A=0,e[33692]|T)break t;if(t=0,!n)break s;if(Za(e[g+2156>>2])){t=n;break s}if(ca(e[g+2156>>2])&&fs(e[g+2156>>2]))break s;e[33691]=e[g+2156>>2],f[0|(t=La+189424|0)]=32,f[t+1|0]=0,e[33285]=e[g+2152>>2];break e}Ur&&(e[g+2148>>2]=Xa(1328,e[g+2148>>2]+189424|0)+e[g+2148>>2]),n&&Yt(t=La+189424|0,32,Hr(g+2336|0,t)),t=e[g+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0}n=589864;break e}if(!((0|(s=e[g+2156>>2]))!=46|e[g+2152>>2]!=46)){s:{n:{i:{if(!(s=e[33285])){if(s=e[33283],e[s>>2]==e[s+4>>2])break s;if(!(s=e[33285]))break i}e[33285]=0;break n}e[33284]=e[33284]+1,s=e[33283],s=0|rs[e[s+8>>2]](s)}if(m=s,(0|s)==46)for(e[g+2152>>2]=32,e[g+2156>>2]=8230,m=e[33285];;){n:{i:{if(!m){if(s=e[33283],e[s>>2]==e[s+4>>2]){m=46;break s}if(!(m=e[33285]))break i}e[33285]=0,s=0;break n}e[33284]=e[33284]+1,s=e[33283],m=0|rs[e[s+8>>2]](s),s=e[33285]}if((0|m)!=46)break s;e[g+2152>>2]=32,e[g+2156>>2]=8230,m=s}}(0|(s=e[g+2156>>2]))!=8230?e[33285]=m:(e[g+2152>>2]=m,s=8230)}if(Ir=0,(0|(Ae=Ei(s)))!=16384){s:if(536621&Ae)for(s=e[33285];;){if(!s&&(s=e[33283],e[s>>2]==e[s+4>>2])||!(536621&Ei(e[g+2152>>2])))break s;(m=e[33285])?(e[33285]=0,s=0):(e[33284]=e[33284]+1,s=e[33283],m=0|rs[e[s+8>>2]](s),s=e[33285]),e[g+2152>>2]=m}if(1048576&Ae){e[w+780>>2]=Ae>>>12&15,Ur=1,T=0,n=t;continue}(Za(e[g+2152>>2])|32768&Ae||lo(e[g+2152>>2])||(0|(s=e[g+2152>>2]))==63||(l=0,e[33285]||(s=e[33283],l=e[s>>2]==e[s+4>>2],s=e[g+2152>>2]),l||(0|s)==1))&&(Ir=1)}if((0|(s=e[g+2156>>2]))==57404&&(e[g+2156>>2]=60,s=60),e[47201]){n=0;s:if(!(1<<(l=Rn(s))&1879048255&&l>>>0<=30)){if(!((l=Rn(s))>>>0>27)){if(116672&(T=1<<l))break s;if(134227968&T){n=!(1024&ne(s,l));break s}}n=1}if(!(c[134772]|!n)&&(e[47201]==1||Ua(188832,e[g+2156>>2]))){e[Ce+288>>2]=0,A=e[g+2156>>2],f[g+2336|0]=0,T=e[g+2152>>2],s=0;s:{n:if(!((0|(n=e[34064]))<=0))for(;;){if((0|A)==e[136272+(s<<4)>>2]){if(e[136276+(s<<4)>>2])break s;if(ui(0,s))break n;break s}if((0|n)==(0|(s=s+1|0)))break}s=-1}s:if((0|s)>=0)e[g>>2]=s,mr(g+2336|0,86007,g),e[33285]=T;else if((l=!Ir)|(0|A)!=46|(0|T)==46||(e[g+2600>>2]=0,e[g+2604>>2]=0,e[g+2540>>2]=86036,!ba(Ce,g+2540|0,g+2544|0,g+2600|0,0,0))?s=Ri(g+2240|0,Ce,A,0):(Rr(Ce,s=g+2544|0,g+2600|0,-1,0),Tr(n=s,s=g+2160|0),e[g+64>>2]=s,mr(s=g+2304|0,85451,g- -64|0)),n=s,l|!e[g+2148>>2]|2&c[Ce+76|0]){for(s=e[33285],l=1;;){n:{i:{if(!s){if(s=e[33283],e[s>>2]==e[s+4>>2]|(0|A)==60|(0|A)!=(0|T))break n;if(l=l+1|0,T=e[33285])break i;e[33284]=e[33284]+1,s=e[33283],T=0|rs[e[s+8>>2]](s),s=e[33285];continue}if((0|A)==60|(0|A)!=(0|T))break n;T=s,l=l+1|0}s=0,e[33285]=0;continue}break}if(e[g+2152>>2]=T,Ir&&(e[33285]=T),(0|l)==1){e[g+16>>2]=n,mr(g+2336|0,86219,g+16|0);break s}if((0|l)<=3){if(f[g+2336|0]=0,(0|(s=e[50786]))<=299&&(e[g+2336>>2]=c[86728]|c[86729]<<8|c[86730]<<16|c[86731]<<24,I[g+2340>>1]=c[86732]|c[86733]<<8),(0|l)>0){for(;e[g+32>>2]=n,mr(s=g+2160|0,86219,g+32|0),T=l>>>0>1,wn(g+2336|0,s),l=l-1|0,T;);s=e[50786]}if((0|s)>299)break s;e[g+2160>>2]=c[86857]|c[86858]<<8|c[86859]<<16|c[86860]<<24,s=c[86860]|c[86861]<<8|c[86862]<<16|c[86863]<<24,f[g+2163|0]=s,f[g+2164|0]=s>>>8,f[g+2165|0]=s>>>16,f[g+2166|0]=s>>>24,wn(g+2336|0,g+2160|0);break s}e[g+56>>2]=n,e[g+52>>2]=l,e[g+48>>2]=n,mr(g+2336|0,86932,g+48|0)}else e[33691]=A,e[33285]=T,I[g+2336>>1]=32;if(l=_r(n=g+2336|0),Qr((s=e[g+2148>>2])+189424|0,n),e[g+2148>>2]=s+l,Ir){if((0|A)==45){n=16384;break e}if(n=Ei(A),!(2&c[Ce+76|0]|(0|s)<=0)){n=(-32769&n)==266270?262148:(28672&n)==4096?266244:262148;break e}if(!(524288&n)){n=(28672&n)==4096?266244:262148;break e}if((0|n)>=0)break e}A=e[g+2156>>2]}}if(A|!(2097152&Ae)||(s=Qr(e[g+2148>>2]+189424|0,Ri(g+2336|0,Ce,e[g+2156>>2],1)),c[0|s]?(e[g+2148>>2]=e[g+2148>>2]+_r(s),Ae&=-28673,A=e[g+2156>>2]):A=0),T=0,Ir){s:if(Za(m=e[g+2152>>2]))for(l=e[33285],s=0;;){if(!l&&(n=e[33283],e[n>>2]==e[n+4>>2])||!Za(m))break s;s=((0|m)==10)+s|0,(m=e[33285])?(e[33285]=0,l=0):(e[33284]=e[33284]+1,n=e[33283],m=0|rs[e[n+8>>2]](n),l=e[33285])}else s=0;n=(0|(T=e[g+2156>>2]))==46&&(0|s)<2?4194304|Ae:Ae;s:{if(!s){l=1,(0|T)!=44|(0|St)!=46|e[Ce+212>>2]!=26741|xt-48>>>0>=10||m-48>>>0>=10&&!fs(m)||(e[g+2156>>2]=1367,l=0),(0|(Ae=e[g+2156>>2]))!=46|(0|m)!=39||(T=l,Ae=e[33283],(0|(mt=e[Ae>>2]))==e[Ae+4>>2]?l=0:(l=0|rs[e[Ae+8>>2]](Ae),e[Ae>>2]=mt),Ae=e[g+2156>>2],l=(0|l)!=115&T);n:if((0|Ae)!=46)l&=We;else{i:if(1&f[Ce+106|0]){if(!(St-48>>>0<10)&&((T=St-73|0)>>>0>15|!(1<<T&40969)||!(1<<(T=xt-73|0)&40969&&T>>>0<=15||Za(xt))))break i;l=St-48>>>0>=10?0:!fs(m)&(0|m)!=45&l}if(fs(m)&&(l=c[Ce+208|0]!=0&l),We){Ae=e[g+2156>>2];break n}Ae=32,e[g+2156>>2]=32,l=0}if(!(!l|(0|Ae)!=46|!e[47203]|(0|m)!=60)){La=e[g+2148>>2],t=n;break s}if(!l)break s}if(t=e[g+2148>>2]+189424|0,f[0|t]=32,f[t+1|0]=0,e[33285]=m,St-48>>>0<10&&(n=ca(m)?n:-4194305&n),(0|s)<2)break e;n=(0|n)==536621?536656:(0|n)==532520?532555:524358;break e}(e[33285]||(T=0,s=e[33283],e[s>>2]!=e[s+4>>2]))&&(T=0,Za(e[g+2152>>2])&&(e[33285]=m))}n=t}if(e[33712]!=1){if((0|A)!=(0|(s=e[g+2156>>2])))l=e[g+2148>>2],(0|s)==57404&&(s=60,e[g+2156>>2]=60);else{t:{if(lo(A))s=57384;else{if(s=45,e[g+2156>>2]==45)break t;s=32}e[g+2156>>2]=s}l=e[g+2148>>2]}e[g+2148>>2]=Xa(s,l+189424|0)+e[g+2148>>2],Za(e[g+2156>>2])||lo(e[g+2156>>2])||(t=e[g+2148>>2],I[br+(t<<1)>>1]=e[33284]-e[47353],(0|t)<=(l+1|0)||Yt(Nr+(l<<1)|0,255,t+~l<<1)),s=e[g+2148>>2],e[an>>2]=s;t:{s:{if((0|s)>725){if(!ca(e[g+2156>>2]))break s;s=e[g+2148>>2]}if((0|s)<796)continue;break t}if(s=e[g+2148>>2],!(e[g+2156>>2]-48>>>0>=10)&&(0|s)<796)continue}break}}f[0|(t=s+189424|0)]=32,f[t+1|0]=0,e[33285]=e[g+2152>>2],n=16384}oe=g+2608|0,Ur=n,K&&(t=e[w+780>>2],e[K>>2]=t||Ur>>>12&7),t=(w+5184|0)+(e[w+6800>>2]<<1)|0,I[t+6>>1]=0,I[t+2>>1]=0,I[t+4>>1]=32767,Ae=j(4095&Ur,8388608&Ur?320:10),n=189424;e:{t:{s:if(t=c[189424]){for(;;){if(!!(255&(t=t<<24>>24))&t>>>0<33){if(t=c[0|(n=n+1|0)])continue;break s}break}if(c[0|n])break t}Ae=(0|(s=Ae-(t=e[47566])|0))>0?s:0,e[47566]=Ae+t,Ur=c[190268]?524288|Ur:Ur,e[Ce+8240>>2]=Ur;break e}e[47566]=Ae,t=c[190268],e[Ce+8240>>2]=Ur,t&&(As=1,e[47568]=e[47568]+1,(0|(t=e[47569]))<=0||(t=t-1|0,e[47569]=t,t||(f[190280]=0)))}e[49572]=1,e[47572]=655360,e[47573]=0,e[Ce+8184>>2]=0,e[Ce+8188>>2]=0,t=0,e[Ce+288>>2]=0,e[(s=Ce- -8192|0)>>2]=0,e[s+4>>2]=0,e[Ce+8200>>2]=0,e[Ce+8224>>2]=0,e[Ce+8228>>2]=0,e[(s=Ce+8232|0)>>2]=0,e[s+4>>2]=0,f[w+786|0]=32,I[w+784>>1]=8192,e[w+6812>>2]=32,I[w+1588>>1]=3,e[w+1584>>2]=0,n=0;e:if(!((0|(s=e[w+6800>>2]))<=0)){for(;;){if(I[(w+5184|0)+(n<<1)>>1]>0)break e;if((0|s)==(0|(n=n+1|0)))break}n=s}if(s=P[(w+5184|0)+(n<<1)>>1],I[w+1592>>1]=s,s)for(;t=!!(65535&~s)+t|0,s=P[(w+5184|0)+((n=n+1|0)<<1)>>1];);for(f[w+1594|0]=t,l=3,br=1,n=0;;){xt=e[w+6808>>2],na(w+6808|0,(Rt=(w+784|0)+l|0)-1|0),!c[Ce+170|0]|e[w+6808>>2]-48>>>0>=10||ca(xt)&&(e[w+6808>>2]=97),Ze?e[w+6812>>2]=Ze:F&&na(w+6812|0,F+189423|0),s=F;e:{t:if(n||(s=Hr(w+6816|0,F+189424|0)+F|0,n=e[w+6816>>2])){if(We=Hr(w+6804|0,t=s+189424|0),(0|n)==1){if(A=s-1|0,Ze=32,St=0,e[w+6812>>2]!=32){s=A,t=32;break t}F=0,n=s;s:{n:switch(c[0|t]-43|0){case 0:n=s+1|0,F=64;break s;case 2:break n;default:break s}n=s+1|0,F=96}if(f[0|(t=n+189424|0)]-48>>>0>=10)m=n+1|0,We=-1;else{for(We=ao(t);n=(t=n)+1|0,f[t+189424|0]-48>>>0<10;);m=n,n=t}if((0|(Ze=e[47350]))>247)t=0;else if(t=0,!((0|(n=f[n+189424|0]))<0)&&(n=hi(84868,255&n,14))){s=1+(t=n-84868|0)|0,(0|We)==-1&&(We=e[105536+(s<<2)>>2],F=0);s:{n:switch(t-8|0){case 0:e[49574]=0,e[49573]=We;break s;case 4:break n;default:break s}f[199304]=(0|We)>=3?1:0}t=1,e[47350]=Ze+1,e[198304+(Ze<<2)>>2]=(s+F|0)+(We<<8),s=m}Ze=e[w+6812>>2],Yt(A+189424|0,32,s-A|0),z=t+z|0,n=0;break e}Ze=0,(0|n)==32|e[49573]!=36?(St=0,t=n):(e[w+6812>>2]!=32|e[w+6804>>2]!=32||(e[49573]=20),St=0,t=Io(n,Ce))}else e[w+6804>>2]=32,St=1,Ze=0,We=0,t=32;t:if(Ia){if(Ia=1,br=8,n=0,(0|t)!=93|e[w+6804>>2]!=93)break t;s=s+1|0,t=32,Ia=0}else if((240&(n=e[49573]))!=64)if(Ia=0,16&n)n=0;else{s:{n:{i:{c:{if(!((0|(m=(0|t)==8242||(0|t)==8217||(0|t)==146||(0|t)==180?39:t))!=8216&(0|m)!=63))if(ca(e[w+6808>>2])){if(m=t,ca(e[w+6804>>2])){m=39;break c}}else m=t;A:{if((0|m)!=1367){if((0|m)==1328){ee|=1024,m=32;break c}if((t=m-44032|0)>>>0>11183)break c;if(A=((n=((T=65535&t)>>>0)/28|0)>>>0)%21|0,t=t-j(n,28)&65535,m-50500>>>0>587)break A;n=t?t+4519|0:0,A=A+4449|0;break n}ee|=131072,La=e[w+6804>>2],t=e[w+6812>>2],m=32;break i}n=50500+(t+j(A,28)|0)|0,A=(T>>>0)/588|4352;break n}if(La=e[w+6804>>2],t=e[w+6812>>2],!((n=m-12592|0)>>>0>51)){A=4352|c[n+103296|0],n=0;break n}}g=s+189424|0;i:if(!((0|(n=e[Ce+212>>2]))!=28268&(0|n)!=24934|(0|m)!=39)&&!ls(t)&&(Hr(w+6820|0,g+1|0),wo(e[w+6820>>2]))){A=601,n=0;c:switch(La-110|0){case 6:break n;case 0:break c;default:break i}if(e[Ce+212>>2]!=24934)break n;f[0|g]=32;break n}if(e[w+6824>>2]=32,(0|(t=e[49897]))>0)e[49897]=t-1,n=0;else{if(!m){n=0,A=0;break s}i:{c:{A:{d:if((Ir=e[Ce+180>>2])&&(T=m,(mt=Pi(m))&&(T=Io(m,Ce)),!tA(Ir)))for(;;){e[w+16>>2]=0,e[w+624>>2]=T,t=Hr(w+16|0,Ir)+Ir|0;l:if(e[w+624>>2]==e[w+16>>2]){if(c[0|t]){for(A=1,da=0,n=g;ma=Hr(w+16|0,t),Na=Hr(w+624|0,n),an=Io(e[w+624>>2],Ce),e[w+624>>2]=an,n=n+Na|0,da=(Na=(0|an)==e[w+16>>2])+da|0,A&=Na,c[0|(t=t+ma|0)];);if(!A)break l;e[49897]=da}if(!(t=t+1|0))break d;if(8&c[188788]&&(e[w>>2]=Ir,e[w+4>>2]=t,wa(e[47195],85187,w)),t=Hr(w+6828|0,t)+t|0,c[0|t])break A;n=0;break c}for(;n=t,t=t+1|0,c[0|n];);for(;c[0|(n=(t=n)+1|0)];);if(tA(Ir=t+2|0))break}n=0,A=m;break i}Hr(w+6824|0,t),mt&&Pi(La)&&(e[w+6824>>2]=pA(e[w+6824>>2])),n=e[w+6824>>2]}A=e[w+6828>>2],ee|=2097152,mt&&(A=pA(A))}if((0|A)!=8)break n}A=s;break e}n?e[w+6804>>2]=n:n=0}ca(A)||wo(A)||Ua(e[Ce+336>>2],A)||!ca(e[w+6808>>2])|!(!c[Ce+170|0]|A-48>>>0>=10)&e[w+6804>>2]-48>>>0>=10||(A=32,sr=1);s:{n:{i:{c:{A:{if(e[w+6808>>2]-48>>>0<10){if(A-48>>>0<10){t=U;break A}if(1<<(t=A-32|0)&20481&&t>>>0<=14)break c;sr=1}else if(t=0,e[w+6812>>2]!=44||(t=U,(0|A)!=44))break A;A=32;break c}if((0|A)==91&&((0|(m=e[w+6804>>2]))==2||(A=91,(0|m)==91&&e[47204])))break i;U=t}if(ca(A)){c:{A:{d:{if(ca(e[w+6808>>2])){if(!c[Ce+171|0]||(t=e[w+6808>>2],!((0|A)>12352)&&(0|t)<12353))break d}else t=e[w+6808>>2];if(Ja=Ua(e[Ce+336>>2],t)?Ja:0,(0|(t=e[w+6808>>2]))!=32&&!Ua(e[Ce+336>>2],t)){t=32,Me=lo(e[w+6808>>2])?Me:256|Me;break A}ee=Pi(A)?2|ee:ee,e[w+6808>>2]!=32|f[Rt-2|0]-48>>>0>=10|e[w+6812>>2]-48>>>0<10||(f[(w+784|0)+l|0]=32,t=1588+(j(jr,12)+w|0)|0,I[t>>1]=P[t>>1]+1,l=l+1|0)}if(t=32,(0|A)==32)break c;if(Ja=Ja+1|0,(0|(m=e[Ce+600>>2]))<=0){t=A;break c}if(!((0|A)<=591&(0|(T=e[w+6808>>2]))>=(0|m))){if((0|A)<(0|m)){t=A;break c}if((0|Ja)<2){t=A;break c}if(!((0|T)<=591)){t=A;break c}}if(!ca(T)){t=A;break c}ee|=16384,Me|=128}sr=1}if(me=me+1|0,Pi(t)){if(m=Io(t,Ce),e[Ce- -64>>2]){t=_e?m:712,n=_e?n:m,_e=1;break t}if(fs(e[w+6812>>2])){if(e[w+6808>>2]==32){t=m;break t}if(t=32,e[Ce+212>>2]!=26465)break s;for(A=85240,T=(w+784|0)+l|0,We=0;;){if(g=_r(A),c[0|(xt=T-g|0)]==32&&!Vn(xt+1|0,A,g=g-1|0)){if((0|(A=f[A+g|0]))==(0|m)){t=m;break t}if((0|A)==65&&dl(Ce,m)){t=m;break t}}if(A=e[131184+((We=We+1|0)<<2)>>2],(0|We)==11)break}break s}if(t=32,(0|m)==32)break t;if(!Pi(e[w+6812>>2])){t=m;break t}if(!fs(e[w+6804>>2])){t=m;break t}if(Hr(w+16|0,189424+(s+We|0)|0),!(e[Ce+212>>2]!=28268|(0|Ja)!=2|(0|m)!=106|e[w+6812>>2]!=73)){t=m;break t}if(e[w+6808>>2]==32){t=m;break t}if(!ca(e[w+16>>2])){t=m;break t}Me|=256,Ze=32,sr=1;break t}if(!br){br=0;break t}if((0|Ja)<3){br=0;break t}if((0|t)!=115){br=0;break t}if(e[Ce+212>>2]!=25966){br=0;break t}if(e[w+6804>>2]!=32){br=0;break t}if(br|=4,t=32,c[783+(A=l+w|0)|0]!=39)break t;f[A+783|0]=32;break t}t=32;c:{A:{d:{l:{switch(A-39|0){default:if((0|A)==95)break t;case 1:case 2:case 3:case 4:case 5:if(A-48>>>0>=10||c[Ce+170|0]&&ca(e[w+6808>>2])&&!((m=e[w+6804>>2])-48>>>0<10|m-2406>>>0<10))break c;if((0|(T=e[w+6808>>2]))==32)break A;if(m=e[w+6808>>2],T-48>>>0<10)break d;if((0|(T=m))==(0|(m=e[Ce+128>>2])))break l;sr=1;break t;case 6:if(!wo(e[w+6812>>2])&&ca(e[w+6804>>2])){if(e[w+6808>>2]!=32){sr=1;break t}if(ee|=128,(0|jr)<=0)break t;A=1572+(j(jr,12)+w|0)|0,e[A>>2]=16384|e[A>>2];break t}if(A=e[w+6804>>2],!(e[w+6812>>2]!=32|(0|A)!=32)){ea=4;break t}if((0|A)==45){s=s+1|0,ea=4;break t}if(t=45,e[w+6808>>2]!=32||!ca(xt)||ca(e[w+6812>>2]))break t;f[(w+784|0)+l|0]=32,A=1588+(j(jr,12)+w|0)|0,I[A>>1]=P[A>>1]+1,l=l+1|0;break t;case 7:if(e[w+6808>>2]==46){sr=1;break t}if(t=46,(0|jr)<=0||(A=1572+(j(jr,12)+w|0)|0,1&f[A+1|0])||!ca(e[w+6812>>2]))break t;e[A>>2]=65536|e[A>>2],t=(t=wo(e[w+6804>>2]))||e[w+6804>>2]==45?32:46;break t;case 0:}o:{if((0|(m=e[w+6812>>2]))!=46||(A=115,e[w+6804>>2]!=115)){if(!Co(m))break o;A=e[w+6804>>2]}if(ca(A))break n}if(1&(A=e[Ce+88>>2])){if(ca(e[w+6804>>2]))break n;A=e[Ce+88>>2]}if(2&A&&ca(e[w+6812>>2]))break n;if(!(!Ua(e[Ce+332>>2],e[w+6812>>2])|(0|xt)!=32)){s=(e[w+6804>>2]==32)+s|0;break n}if(m=(0|(A=e[w+6808>>2]))!=115|at,at=0,!(1&m))break t;at=!!(0|wo(A)),ea=4;break t}if((0|m)==44&U){sr=1;break t}U=1;break c}if((0|m)!=32)break c}ca(xt)&&(ca(e[w+6812>>2])||(f[(w+784|0)+l|0]=32,t=1588+(j(jr,12)+w|0)|0,I[t>>1]=P[t>>1]+1,l=l+1|0))}t=A;break t}Ia=1,A=s+1|0,U=t;break e}t=39,at=0;break t}sr=1,Ze=32}else{if(t-48>>>0<10){n=0,A=(0|(m=e[49574]+1|0))>(15&e[49573]),e[49574]=A?0:m,t=A?32:t,sr|=A,Ia=0;break t}n=0,e[49574]=0,t=(A=e[w+6808>>2]-48>>>0<10)?32:t,sr|=A,Ia=0}if(wo(t)){if(e[w+6808>>2]==32){ee|=262144,A=s;break e}if(A=e[w+6816>>2]-9>>>0<2,T=1&sr){We=0;t:if(!((0|x)>(0|(t=s-1|0))))for(;;){if(!(m=I[(w+5184|0)+(t<<1)>>1]))break t;if(We=((0|m)>0)+We|0,!((0|x)<=(0|(t=t-1|0))))break}f[1594+(j(jr,12)+w|0)|0]=We}if(Me=A?262144|Me:Me,f[(w+784|0)+l|0]=32,t=l+1|0,!((0|jr)>298||(A=(w+1584|0)+j(jr,12)|0,(0|(m=P[A+4>>1]))>=(0|t)))){if((0|z)<=0?x=e[A>>2]:(x=198300+(e[47350]<<2)|0,e[x>>2]=128|e[x>>2],z=0,x=64|e[A>>2]),g=e[47352],f[A+6|0]=g,e[A>>2]=x|(me?br:-2&br)|(c[199304]?2048:0)|ee,(0|g)>0){for(;ee=(x=w+784|0)+t|0,x=x+(t=t-1|0)|0,f[0|ee]=c[0|x],(0|t)>(0|m););f[0|x]=32,I[A+4>>1]=m+1,t=l+2|0}m=(w+1584|0)+j(jr=jr+1|0,12)|0,e[m>>2]=0,I[m+4>>1]=t,l=s;t:if(!((0|(A=e[w+6800>>2]))<=(0|s))){for(;;){if(I[(w+5184|0)+(l<<1)>>1]>0)break t;if((0|A)==(0|(l=l+1|0)))break}l=A}if(We=P[(w+5184|0)+(l<<1)>>1],I[m+8>>1]=We,me=0,A=0,We)for(;A=!!(65535&~We)+A|0,We=P[(w+5184|0)+((l=l+1|0)<<1)>>1];);f[m+10|0]=A,e[47352]=0,br=1,ee=Me,Me=0,_e=0}sr=0,n=T?0:n,A=T?F:s}else(0|l)>795?(A=s,s=x,t=l):(t=Xa(t,(w+784|0)+l|0)+l|0,A=s,s=x);e[47352]<(0|ea)&&(e[47352]=ea),ea=0,x=s,l=t}if(St||(F=A,!((0|l)<799)))break}(0|z)<=0|jr||(t=198300+(e[47350]<<2)|0,e[t>>2]=128|e[t>>2],e[w+1584>>2]=64|e[w+1584>>2],jr=1),t=(w+784|0)+l|0,e[Ce+8204>>2]=t-1,s=0,f[0|t]=0,f[w+1590|0]=0,f[1590+(j(jr,12)+w|0)|0]=8;e:if((0|jr)<=0)e[w+1584>>2]=512|e[w+1584>>2],l=e[49572];else{t=jr-1|0;t:if((0|jr)!=1)for(n=t;;){if(!lo(f[P[1588+(j(n,12)+w|0)>>1]+(w+784|0)|0])){s=n;break t}if(m=(0|n)>1,n=n-1|0,!m)break}if(s=(w+1584|0)+j(s,12)|0,e[s>>2]=16|e[s>>2],4194304&Ur&&(t=(w+1584|0)+j(t,12)|0,256&(s=e[t>>2])||(e[t>>2]=65536|s)),e[w+1584>>2]=512|e[w+1584>>2],!((0|jr)<=0|(0|(l=e[49572]))>990))for(m=3|(t=w+624|0),T=2|t,Ze=w+754|0,St=!(4194304&Ur),F=0,x=0;;){e[47354]=e[47354]+1;t:{if((0|(t=e[49827]))<=0||(t=t-1|0,e[49827]=t,t)){if(c[190280])break t}else f[190280]=0;t=P[1588+(j(F,12)+w|0)>>1]+(w+784|0)|0;s:if(!(f[0|t]-48>>>0>=10)&&(s=w+624|0,n=t,e[Ce+112>>2]!=1227133512)){for(;;){n:{if(f[0|n]-48>>>0<10)f[0|s]=c[0|n],s=s+1|0,n=n+1|0;else{if(e[Ce+124>>2]!=f[0|n]|c[n+1|0]!=32||(l=n+2|0,c[n+3|0]==32|f[0|l]-48>>>0>=10|c[n+4|0]==32))break n;F=F+1|0,n=l}if(s>>>0<Ze>>>0)continue;break s}break}Yt(t+(s=s-(U=w+624|0)|0)|0,32,(n=(l=n-t|0)-s|0)>>>0<=l>>>0?n:0),Jr(t,U,s)}for(s=0;n=s,s=s+1|0,f[t+n|0]-48>>>0<10;);s:if(n-5>>>0<=27){for(f[w+626|0]=32,I[w+624>>1]=8224,c[0|t]!=48&e[Ce+132>>2]>=(0|n)||(s=(w+1584|0)+j(F,12)|0,e[s>>2]=524288|e[s>>2]),Me=(w+1584|0)+j(F,12)|0,We=0,l=m;s=t,!((t=f[0|t])-48>>>0>=10&(0|t)!=e[Ce+128>>2])&&(f[0|l]=t,t=l+1|0,U=n,(0|(n=n-1|0))<=0?l=t:e[Ce+112>>2]>>>n&1?(g=e[Me+4>>2],ee=(w+16|0)+j(We,12)|0,e[ee>>2]=e[Me>>2],e[ee+4>>2]=g,e[ee+8>>2]=e[Me+8>>2],We=We+1|0,(0|(ee=e[Ce+124>>2]))!=32&&(f[l+1|0]=ee,t=l+2|0),f[0|t]=32,l=t+1|0,8&c[Me+2|0]||((ea=e[Ce+112>>2])>>>U-2&1&&(f[t+1|0]=48,f[t+2|0]=48,ea=e[Ce+112>>2],l=t+3|0),ea>>>U-3&1&&(f[0|l]=48,l=l+1|0))):l=t,t=s+1|0,l>>>0<Ze>>>0););if(n=e[Me+4>>2],t=(w+16|0)+j(We,12)|0,e[t>>2]=e[Me>>2],e[t+4>>2]=n,n=e[Me+20>>2],e[t+16>>2]=e[Me+16>>2],e[t+20>>2]=n,n=e[Me+12>>2],e[t+8>>2]=e[Me+8>>2],e[t+12>>2]=n,n=1,(0|We)>0)for(;t=(w+16|0)+j(n,12)|0,e[t>>2]=-262209&e[t>>2],(0|We)>=(0|(n=n+1|0)););if(t=c[s+4|0]|c[s+5|0]<<8|c[s+6|0]<<16|c[s+7|0]<<24,n=c[0|s]|c[s+1|0]<<8|c[s+2|0]<<16|c[s+3|0]<<24,f[0|l]=n,f[l+1|0]=n>>>8,f[l+2|0]=n>>>16,f[l+3|0]=n>>>24,f[l+4|0]=t,f[l+5|0]=t>>>8,f[l+6|0]=t>>>16,f[l+7|0]=t>>>24,t=c[s+12|0]|c[s+13|0]<<8|c[s+14|0]<<16|c[s+15|0]<<24,s=c[s+8|0]|c[s+9|0]<<8|c[s+10|0]<<16|c[s+11|0]<<24,f[l+8|0]=s,f[l+9|0]=s>>>8,f[l+10|0]=s>>>16,f[l+11|0]=s>>>24,f[l+12|0]=t,f[l+13|0]=t>>>8,f[l+14|0]=t>>>16,f[l+15|0]=t>>>24,f[l+16|0]=0,l>>>0<=m>>>0)break s;for(t=c[Me+6|0],We=0,n=m;;){for(x=ts(Ce,n,(w+16|0)+j(We,12)|0,255&t);t=c[0|n],n=n+1|0,(0|t)!=32;);if(t=0,f[Me+6|0]=0,We=We+1|0,!(n>>>0<l>>>0))break}}else{if(e[47352]=0,x=ts(Ce,t,s=(w+1584|0)+j(F,12)|0,c[s+6|0]),(0|(n=e[47352]))>c[s+18|0]&&(f[s+18|0]=n,e[47352]=0),!(!(4096&x)|c[0|t]==32))for(;Yt(w+624|0,0,150),e[w+624>>2]=538976288,e[w+628>>2]=538976288,f[w+632|0]=32,ts(Ce,Jr(T,t,n=Hr(w+16|0,t)),s,0),c[0|(t=t+n|0)]!=32;);50331648&x&&(Ae=(t=St|(~e[33264]+jr|0)!=(0|F))?Ae:10,t|!K||(e[K>>2]=4,Ae=10))}if(128&x&&!((0|(s=e[33264]))<=0)){if(t=0,n=s,l=3&s)for(;U=(w+1584|0)+j(n+F|0,12)|0,e[U>>2]=1048576|e[U>>2],n=n-1|0,(0|l)!=(0|(t=t+1|0)););if(s>>>0>=4)for(;t=(w+1584|0)+j(n+F|0,12)|0,e[t>>2]=1048576|e[t>>2],e[(s=t-12|0)>>2]=1048576|e[s>>2],e[(s=t-24|0)>>2]=1048576|e[s>>2],e[(t=t-36|0)>>2]=1048576|e[t>>2],n=n-4|0;);e[33264]=n}}if(l=e[49572],(0|jr)<=(0|(F=F+1|0)))break e;if(!((0|l)<991))break}}if((0|(n=e[47351]))<(0|(m=e[47350]))){for(Ze=e[47202],St=e[49846],We=e[47352];;){t=(s=e[198304+(n<<2)>>2])>>8;e:{t:switch((31&s)-9|0){case 0:Ze=t;break e;case 4:St=t;break e;case 3:break t;default:break e}We=s>>>0>=256?t+We|0:0}if(!(!(128&s)&(0|m)>(0|(n=n+1|0))))break}e[47352]=We,e[47351]=n,e[49846]=St,e[47202]=Ze}e[49572]=l+2,e[(t=190288+(l<<3)|0)>>2]=589824,I[t+4>>1]=A,e[t+8>>2]=589824,I[t+12>>1]=A,s=jr&&e[47199]?Ae:10,e[33285]?t=0:(t=e[33283],t=e[t>>2]==e[t+4>>2]),Ae=t?s:Ae,F=As,m=0,jr=0,oe=T=oe-32192|0,e[T+24>>2]=0,e[T+28>>2]=0,e[T+16>>2]=0,e[T+20>>2]=0,e[T+8>>2]=0,e[T+12>>2]=0,e[T>>2]=0,e[T+4>>2]=0,A=e[49572],g=P[190284+(A<<3)>>1];e:{if((0|(n=A-3|0))<0)t=n;else{for(;;){if(m=(0|(s=127&c[3+(t=190288+(n<<3)|0)|0]))<(0|m)?m:s,P[t+4>>1])t=n;else if(t=-1,s=(0|n)>0,n=n-1|0,s)continue;break}if(m>>>0>3)break e}for(;;){if((0|(t=t-1|0))<0)break e;if(64&c[0|(s=190288+(t<<3)|0)]){f[s+3|0]=4;break e}if(!(c[s+3|0]<4))break}}if(t=e[Ce+292>>2],n=0,(0|A)<=0)m=0;else for(U=-1,m=0;;){s=t,e[Ce+292>>2]!=(0|t)&&(I[(t=190288+(n<<3)|0)>>1]=32|P[t>>1]),(0|m)>0&&(Me=e[4+(x=190288+(n<<3)|0)>>2],e[(l=190288+(t=n-m<<3)|0)>>2]=e[x>>2],e[l+4>>2]=Me,(0|U)!=-1&&(I[4+(t+190288|0)>>1]=U),U=-1);e:{if(c[2+(190288+(l=n<<3)|0)|0]==21){if(t=c[7+(x=l+190288|0)|0],2&c[0|x])break e;t:if((0|t)!=(0|s)){if(x=c[10+(l+190288|0)|0]-9|0){if((0|x)==12)break t;break e}if(c[18+(l+190288|0)|0]!=21)break e}(0|U)==-1&&(U=(t=P[4+(l+190288|0)>>1])||-1),m=m+1|0}t=s}if((0|A)==(0|(n=n+1|0)))break}if(e[49572]=A-m,Mn(t),(s=e[Ce+36>>2])&&!((0|(t=(m=e[49572])-1|0))<0))for(Ze=256&s,ee=4&s,St=8&s,Me=15&s,sr=16&s,As=2&s,s=s>>>8&1,n=0;;){if(l=m,A=n,m=t,(0|(t=c[2+(x=190288+(br=t<<3)|0)|0]))==21){e:{t:{if((0|(n=l-2|0))>=0)for(;;){if(c[2+(190288+(t=n<<3)|0)|0]==21)break t;if(t=(0|n)>0,n=n-1|0,!t)break}t=e[Ce+292>>2];break e}t=c[7+(t+190288|0)|0]}Mn(t),t=c[x+2|0]}if(n=A,(t=e[144464+((255&t)<<2)>>2])&&(n=s,!(32&c[0|x]))){n=c[t+11|0],U=0,As&&((0|(l=c[0|t]))!=118&(0|l)!=82||(A=sr?0:A,U=1));e:{t:{s:{n:switch((l=253&n)-4|0){case 1:break s;case 0:break n;default:break t}if(Me&&(n=1,!A)||(0|(n=A))!=2||(n=2,!(t=c[t+13|0])))break e;f[x+2|0]=t;break e}if(Me&&(n=2,!A)||(0|(n=A))!=1||(n=1,!(t=c[t+13|0])))break e;f[x+2|0]=t;break e}n=0,St&&(n=l?A:0)}n=t=U?0:n,P[4+(br+190288|0)>>1]&&(n=t=ee?0:t,Ze&&(n=t||1))}if(!((0|(t=m-1|0))>=0))break}if(Mn(e[Ce+292>>2]),e[49572]<=0)sr=-2,n=0;else{for(n=-1,A=0,x=0,St=0;;){t=x<<3,(0|n)!=-1&&(I[4+(t+190288|0)>>1]=n),c[2+(U=t+190288|0)|0]==21&&Mn(c[7+(t+190288|0)|0]),Me=e[49572];e:{if(!(32&c[0|(l=t+190288|0)])){A=(0|(s=Me-1|0))>(0|x)?e[144464+(c[10+(t+190288|0)|0]<<2)>>2]:A,!(P[l+12>>1]|(0|s)==(0|x))&&(We=0,c[A+11|0]|!A)||(We=1),m=c[U+2|0];t:if(!((0|(sr=e[49848]))<=0))for(s=t+190288|0,n=0;;){if(Ze=j(n,3),c[Ze+199408|0]==(255&m)&&!((ee=c[2+(Ze+199408|0)|0])&(1^We)|(4&c[s+3|0]?2&ee:0)|(P[s+4>>1]?0:4&ee))){if(m=c[1+(Ze+199408|0)|0],f[U+2|0]=m,!(2&c[e[144464+(m<<2)>>2]+4|0])|c[s+3|0]<2)break t;f[s+3|0]=0;break t}if((0|sr)==(0|(n=n+1|0)))break}if(!(255&m)){n=P[4+(t+190288|0)>>1];break e}}n=e[l+4>>2],t=(T+32|0)+(St<<5)|0,s=e[l>>2],e[t>>2]=s,e[t+4>>2]=n,s=e[144464+(s>>>14&1020)>>2],e[t+8>>2]=s,f[t+17|0]=c[s+11|0],St=St+1|0,n=-1}if(!((0|St)<1e3&(0|Me)>(0|(x=x+1|0))))break}if(m=0,n=0,!((0|(sr=St-2|0))<=0))for(;;){e:if(P[4+((T+32|0)+(m<<5)|0)>>1]){for(s=(0|m)>(0|sr)?m:sr,n=0,t=m;;){if((0|t)!=(0|s)){if(n=(0|n)>(0|(l=c[3+((A=T+32|0)+(t<<5)|0)|0]))?n:l,!P[4+(A+((t=t+1|0)<<5)|0)>>1])continue}else t=s;break}if((0|t)<=(0|m))break e;if(s=~m+t|0,A=0,l=t-m&7)for(;f[6+((T+32|0)+(m<<5)|0)|0]=n,m=m+1|0,(0|l)!=(0|(A=A+1|0)););if(s>>>0<7)break e;for(;f[6+(s=(T+32|0)+(m<<5)|0)|0]=n,f[s+38|0]=n,f[s+70|0]=n,f[s+102|0]=n,f[s+134|0]=n,f[s+166|0]=n,f[s+198|0]=n,f[s+230|0]=n,(0|(m=m+8|0))!=(0|t););}else t=m+1|0;if(m=t,!((0|sr)>(0|t)))break}}for(e[T+40>>2]=e[36125],Mn(e[Ce+292>>2]),xt=(0|n)<4,x=1,Ze=1,Me=0,s=0,n=0,As=0;;){e:{t:{s:{n:{if(s){if(A=(t=T+32|0)+((U=n-1|0)<<5)|0,Me=c[2+(t+(n<<5)|0)|0],(0|U)>0){if(t=x-(n=(0|x)>0)|0,U>>>0>=(m=n?x:2)>>>0)for(;l=(n=(T+32|0)+(m<<5)|0)-32|0,x=e[n+12>>2],e[l+8>>2]=e[n+8>>2],e[l+12>>2]=x,x=e[n+4>>2],e[l>>2]=e[n>>2],e[l+4>>2]=x,x=e[n+28>>2],e[l+24>>2]=e[n+24>>2],e[l+28>>2]=x,x=e[n+20>>2],e[l+16>>2]=e[n+16>>2],e[l+20>>2]=x,(0|U)>=(0|(m=m+1|0)););x=t}We=e[144464+(Me<<2)>>2],e[A>>2]=0,e[A+4>>2]=0,e[A+24>>2]=0,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A+8>>2]=0,e[A+12>>2]=0,f[A+2|0]=s,t=e[144464+(s<<2)>>2],e[A+8>>2]=t,Me=A}else{if((0|n)>=(0|sr)|(0|As)>=997)break n;l=c[2+(A=(m=n<<5)+(T+32|0)|0)|0],t=e[144464+(l<<2)>>2],e[A+8>>2]=t,U=P[A+4>>1],(0|l)==21&&Mn(c[7+(m+(T+32|0)|0)|0]),x=U?n:x,We=e[144464+(c[A+34|0]<<2)>>2],e[A+40>>2]=We,U=n}if(!t){s=0,n=U+1|0;continue}if(os(Ce,256,A,T+32040|0,T),(0|(n=e[T+32052>>2]))>0&&(m=(T+32|0)+(U<<5)|0,We=e[144464+(n<<2)>>2],e[m+40>>2]=We,f[m+34|0]=n,f[m+49|0]=c[We+11|0]),n=0,s)s=t;else if((0|(m=e[T+32056>>2]))<=0)s=t;else{s=e[144464+(m<<2)>>2],e[A+8>>2]=s,n=c[A+2|0],f[A+2|0]=m,m=P[A>>1];i:if(c[s+11|0]!=2)I[A>>1]=65531&m;else{if(I[A>>1]=4|m,c[t+11|0]==2)break i;f[A+3|0]=0}os(Ce,256,A,T+32040|0,T)}if((0|(l=e[T+32048>>2]))<=0)m=s;else{if(m=e[144464+(l<<2)>>2],f[A+2|0]=l,e[A+8>>2]=m,t=c[m+11|0],St=1,(0|l)==1){br=(0|t)==2;break t}l=P[A>>1];i:if((0|t)!=2)I[A>>1]=65531&l;else{if(I[A>>1]=4|l,c[s+11|0]==2)break i;f[A+3|0]=0}os(Ce,256,A,T+32040|0,T)}if(br=0,(0|(t=c[m+11|0]))!=2){St=0;break t}if(br=1,St=0,t=2,c[A+3|0]>1){jr=0;break t}l=A+3|0,jr=jr+1|0,s=A;i:{if(8&(ee=e[Ce+12>>2])){for(;;){c:switch(ee=s,s=s+32|0,c[ee+49|0]){case 0:break t;case 2:break c;default:continue}break}if(c[0|(s=ee+35|0)]>1)break t;if(c[A+6|0]<=3&&(f[0|l]=0),c[ee+38|0]<4)break i;break t}if(1&jr|(0|jr)<2)break t;if(2&ee)break s;if(xt)s=l;else if(s=l,P[A+36>>1])break s}f[0|s]=0;break t}e[36423]=As+2,I[(t=145840+(As<<5)|0)>>1]=0,f[t+2|0]=9,f[t+20|0]=2,e[t+12>>2]=Ae,I[t+4>>1]=g,f[t+17|0]=0,f[t+18|0]=0,e[t+8>>2]=e[36125],I[t+32>>1]=0,f[t+34|0]=9,f[t+52|0]=0,e[t+44>>2]=0,I[t+36>>1]=0,f[t+49|0]=0,f[t+50|0]=0,e[t+40>>2]=e[36126],Mn(e[Ce+292>>2]),oe=T+32192|0;break e}jr=1}if(!(8&(s=P[A+32>>1]))|(0|U)<=0||(l=c[We+11|0])>>>0>15|!(1<<l&457)||(n=c[We+10|0],I[A+32>>1]=8^s),mt=P[A+36>>1]){t:if(s=e[Ce+4>>2]){switch(0|t){default:n=512&s?11:n;break;case 0:break t;case 2:}if(c[We+11|0]==2){(l=12&s)&&(n=(0|l)!=12?23:11);s:if(br){switch(3&s){case 2:n=10;break s;case 0:break s}n=23}c[A+35|0]<4||(n=256&s?10:n)}}if(!((0|A)==(0|Me)|(0|As)<=0)){t:{s:{n:switch(0|(s=7&e[Ce>>2])){case 0:break t;case 1:break n;default:break s}if(n-12>>>0>4294967293)break t}n=c[s+101916|0]}n=e[47205]>0?24:n}}if(e[A+72>>2]=e[144464+(c[A+66|0]<<2)>>2],s=e[T+32060>>2],s=n||s||n,!St){f[17+(l=145840+(ee=As<<5)|0)|0]=t,e[l+8>>2]=m,f[l+16|0]=0,I[l>>1]=P[A>>1],f[l+3|0]=15&c[A+3|0],f[l+6|0]=c[A+6|0],n=c[A+7|0],I[l+4>>1]=0,f[l+7|0]=n,St=c[m+10|0],f[l+2|0]=St;t:if(n=P[A+4>>1]){if(I[l+4>>1]=n,F=1&F?5:1,f[20+(A=ee+145840|0)|0]=F,n=Ze,Ze=0,!n){F=0;break t}f[A+20|0]=8|F,F=0}else f[20+(ee+145840|0)|0]=0;e[12+(n=ee+145840|0)>>2]=e[T+32084>>2]<<1,!mt|(0|St)!=24||(0|(A=e[47205]))<=0||(e[l+8>>2]=e[36126],e[n+12>>2]=j(A,14)),(1<<t&428?t>>>0<=8:0)|2&c[m+7|0]&&(e[n+12>>2]=128,f[l+16|0]=0),f[21+(t=ee+145840|0)|0]=255,f[t+22|0]=255,I[t+18>>1]=5120,As=As+1|0}n=U+1|0;continue}break}I[88922]=1,e[44462]=0,z&&(I[145776+(e[36423]<<5)>>1]=2,t=198304+(e[47350]<<2)|0,e[t>>2]=128,e[(t=t-4|0)>>2]=128|e[t>>2]),f[190268]=Ur>>>19&1,yt&&(e[yt>>2]=Ur<<14>>31&189360)}oe=w+6832|0,sr=e[47192],br=e[r+12>>2],s=0,l=0,x=0,ee=0,Me=0,ea=0,Ae=0,oe=g=oe-6e3|0;e:if(!((0|(A=(As=e[36423])-1|0))<=0)){for(;f[2+(g+j(s,6)|0)|0]=0,4&c[145840+(t=s<<5)|0]?(n=g+j(ee,6)|0,f[n+1|0]=0,t=t+145840|0,f[n+3|0]=c[t+49|0],t=c[t+3|0],f[0|n]=t,ee=ee+1|0,ea=(t>>>0>3)+ea|0):c[e[8+(t+145840|0)>>2]+10|0]!=27|(0|ee)<=0||(t=(g+j(ee,6)|0)-4|0,f[0|t]=4|c[0|t]),(0|A)!=(0|(s=s+1|0)););if(f[g+j(ee,6)|0]=0,ee)if(e[sr+148>>2]==1){if(!((0|As)<=0)){for(t=-2&As,n=1&As,s=145840;x=c[s+17|0]==2&&c[s+3|0]>3?l:x,x=c[s+49|0]==2&&c[s+35|0]>3?1|l:x,s=s- -64|0,l=l+2|0,(0|t)!=(0|(Me=Me+2|0)););!n|c[s+17|0]!=2||(x=c[s+3|0]>3?l:x)}if(f[3+(m=145840+(t=x<<5)|0)|0]=7,e[sr+212>>2]==30313&&(c[7+(t=t+145840|0)|0]||(f[t+7|0]=gn(55),As=e[36423])),!((0|As)<=0)){for(Me=0,s=145840,t=145840,l=U=e[36125],A=0,Ze=1;;){if(c[s+17|0]?F=e[36125]:(F=e[36125],U=(n=c[e[s+8>>2]+14|0]>50)?F:U,Ze|=n),n=c[s+20|0]?F:l,4&c[0|s]){F=c[s+7|0],l=e[144464+(F<<2)>>2];t:{if((0|(ee=e[sr+212>>2]))==6840683){if(e[n>>2]!=49||(ee=e[l>>2]-49|0)>>>0>5|!(1<<ee&41))break t;f[t+7|0]=gn(50),ee=e[sr+212>>2]}if(!((0|ee)!=6516078&(0|ee)!=31336)){ee=0,F||(A=gn(1&(ee=A|Ze)?13621:12593),f[s+7|0]=A,l=e[144464+(A<<2)>>2]),(0|x)!=(0|Me)|(1024|e[l>>2])!=13621||(f[m+3|0]=6),e[U>>2]==3420466&&(f[t+7|0]=gn(e[l>>2]==3420466?13619:12594));s:{if(e[n>>2]==12597){if((0|(F=e[l>>2]))!=12597)break s;f[t+7|0]=gn(13109)}F=e[l>>2]}A=ee,(0|F)==12593&&((0|(F=e[U>>2]))==13621&&(f[s+7|0]=gn(12850),F=e[U>>2]),(0|F)==13619&&(f[s+7|0]=gn(13107),F=e[U>>2]),(0|F)==3420466&&(f[s+7|0]=gn(13364)),f[s+3|0]=0)}}Ze=0,U=l,t=s}else l=n;if(s=s+32|0,!((0|(Me=Me+1|0))<(0|(n=e[36423]))))break}if(l=0,s=145840,!((0|n)<=0))for(;4&c[0|s]&&((t=c[s+7|0])||(f[s+7|0]=17,t=17),t=e[144464+(t<<2)>>2],f[s+21|0]=c[t+12|0],f[s+22|0]=c[t+13|0]),s=s+32|0,(0|n)!=(0|(l=l+1|0)););}}else{if(t=e[sr+152>>2],t=sr+j(xt=(0|t)>7?1:t,6)|0,Ce=c[0|(xt?t+637:sr+157)],Ur=c[0|(xt?636+(t+br|0):156+(sr+br|0))],f[133068]=(0|br)==4,!((0|ee)<=0)){for(St=ee-1|0,We=br-1>>>0>1,n=0,A=0;;){w=g+j(A,6)|0,Ae=((t=c[0|w])<<24>>24>3)+Ae|0;t:if((0|t)==6){t=A-3|0,s=A;s:{for(;;){if((0|s)<=(0|n)|(0|t)>=(0|s))break s;n:switch(m=g+j(s=s-1|0,6)|0,c[0|m]-4|0){case 2:break s;case 0:break n;default:continue}break}f[0|m]=3}s=A;s:{for(;;){if((0|ee)<=(0|(s=s+1|0)))break s;n:switch(c[g+j(s,6)|0]-4|0){case 0:break s;case 2:break n;default:continue}break}f[w+2|0]=2,f[0|w]=5,t=n;break t}if(c[0|w]==6){f[w+2|0]=2,T=0;s:if((0|ee)<=(0|(t=A+1|0)))m=A,Ia=0;else if(Ia=1,(0|(l=f[g+j(t,6)|0]))>4)m=A;else{for(x=(ea-Ae|0)>1,m=A;;){if(s=t,(255&l)==4&&(t=x+1|0,x=1,!((0|t)<=1))){t=s;break s}if(Ia=(0|ee)>(0|(t=s+1|0)),(0|t)==(0|ee))break;if(m=s,(0|(l=f[g+j(t,6)|0]))>4)break s}m=St,t=ee}l=-1,F=0,x=0,Ze=-1,Me=0,U=-1;s:{if((0|(s=n))<(0|t)){for(;l=(mt=(0|(U=f[g+j(s,6)|0]))>3)&&(0|l)<0?s-n|0:l,T=(Me=(0|x)>(0|U))?T:(0|x)<(0|U)?s:F,Ze=mt?s:Ze,F=Me?F:s,mt=(0|s)!=(0|m),x=Me?x:U,s=s+1|0,mt;);if(Me=F,U=Ze,(0|l)>=0)break s}l=t,F=Me,Ze=U}e[33269]=m-F,e[33268]=l,e[33270]=F,e[33271]=T;s:if(c[133068])e[33270]=t,e[33271]=t;else if((0|Ze)>=0){if((0|t)!=(0|ee))break s;f[g+j(Ze,6)|0]=7}else f[g+j(F,6)|0]=7;zn(g,xt,n,t,Ur),!Ia&!!(0|br)||(Ur=We?c[sr+156|0]:c[sr+157|0])}else t=n}else t=n;if((0|t)>=(0|A))n=t;else if(4&c[w+2|0]){for(n=A+1|0,l=-1,Ze=0,F=0,x=0,s=t,T=-1;l=(Me=(0|(m=f[g+j(s,6)|0]))>3)&&(0|l)<0?s-t|0:l,Ze=(U=(0|m)<(0|x))?Ze:(0|m)>(0|x)?s:F,T=Me?s:T,F=U?F:s,Me=(0|s)!=(0|A),x=U?x:m,s=s+1|0,Me;);e[33269]=A-F,e[33270]=F,e[33271]=Ze,e[33268]=(0|l)<0?n:l,c[133068]?(e[33270]=n,e[33271]=n):(0|T)>=0?f[g+j(T,6)|0]=7:f[g+j(F,6)|0]=7,zn(g,xt,t,n,Ce)}else n=t;if((0|ee)==(0|(A=A+1|0)))break}if(!((0|n)>=(0|ee))){for(l=-1,Ze=0,F=0,x=0,s=n,T=-1;l=(m=(0|(t=f[g+j(s,6)|0]))>3)&&(0|l)<0?s-n|0:l,Ze=(A=(0|t)<(0|x))?Ze:(0|t)>(0|x)?s:F,T=m?s:T,F=A?F:s,x=A?x:t,(0|ee)!=(0|(s=s+1|0)););e[33270]=F,e[33271]=Ze,e[33269]=~F+ee,e[33268]=(0|l)<0?ee:l,c[133068]?(e[33270]=ee,e[33271]=ee):(0|T)>=0?f[g+j(T,6)|0]=7:f[g+j(F,6)|0]=7,zn(g,xt,n,ee,Ur)}}if((0|As)<=0)break e;for(s=0,Me=0;;){if(U=n=145840+(m=s<<5)|0,t=g+j(Me,6)|0,l=c[0|t],f[n+3|0]=l,4&c[0|n]){A=m+145840|0,n=c[t+4|0],f[A+21|0]=n,x=c[t+5|0],f[A+16|0]=0,f[A+22|0]=x;t:{if(1&(F=c[t+2|0]))t=2;else{if(l>>>0<6)break t;t=c[t+1|0]}f[A+16|0]=t}n>>>0<=(255&x)>>>0?(t=x,x=n):(f[A+21|0]=x,f[A+22|0]=n,t=n),(n=c[7+(m+145840|0)|0])&&(t=(255&t)+(255&x)>>>1|0,n=e[144464+(n<<2)>>2],f[A+22|0]=t+c[n+13|0],f[A+21|0]=t+c[n+12|0]),2&F&&(f[U+3|0]=8|l),Me=Me+1|0}if((0|As)==(0|(s=s+1|0)))break}}}if(oe=g+6e3|0,Me=e[47192],s=0,We=0,T=0,Ae=0,oe=g=oe-160|0,e[36423]>=2)for(br=e[30450],l=1;;){if(l=(t=l)+1|0,ee=c[3+(A=145840+(x=t<<5)|0)|0],2&(F=P[A>>1])){for(;(31&(m=e[198304+(Ae<<2)>>2]))==2&&(Gi(127&m,m>>>8|0),e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,F=e[50786],U=e[32972],(0|(n=e[U+84>>2]))>0&&(F=(0|j(n,F))/100|0),Ze=c[((0|(n=(0|F)>=359?359:F))<=80?80:n)+101856|0],n=(0|(n=(0|F)>=450?450:F))>399?6:(0|n)>379?7:Ze,e[32526]=(0|j(n,e[U+72>>2]))/256,e[32527]=(0|j(n,e[U+76>>2]))/256,e[32528]=(0|j(n,e[U+80>>2]))/256,n>>>0>7||(U=n-1|0,e[32528]=U,e[32526]=n,e[32527]=U)),Ae=Ae+1|0,!(128&m););F=P[A>>1]}U=l<<5,Ze=t-1|0,n=7&ee;e:{t:{s:{n:{i:{c:{A:{d:{l:{o:switch(Ur=c[17+(x+145840|0)|0],0|(m=4&F?2:Ur)){case 2:break i;case 3:case 8:break c;case 5:break A;case 6:case 7:break d;case 4:break l;case 0:break o;default:break e}s=0;break e}if((0|(t=c[17+(145840+(Ze<<5)|0)|0]))!=6?(n=(0|t)==4?60:e[34063]>0||n>>>0<4?48:60,f[18+(x+145840|0)|0]=n):(n=25,f[18+(x+145840|0)|0]=25),!(16&c[0|Me])|!c[20+(x+145840|0)|0]||(f[18+(x+145840|0)|0]=60,n=60),64&c[e[8+(x+145840|0)>>2]+6|0]&&(n=n+30|0,f[18+(x+145840|0)|0]=n),s=0,!(8&F))break e;f[18+(x+145840|0)|0]=c[Me+164|0]+n;break e}!(A=c[20+(t=x+145840|0)|0])|1&f[e[t+8>>2]+7|0]&c[17+(145840+(Ze<<5)|0)|0]==2||(f[18+(x+145840|0)|0]=15),n=c[17+(U+145840|0)|0],8&c[e[8+(x+145840|0)>>2]+4|0]|n|c[17+(145840+(Ze<<5)|0)|0]!=8||(f[18+(x+145840|0)|0]=25),64&c[e[8+(145840+(t=Ze<<5)|0)>>2]+5|0]&&(f[18+(x+145840|0)|0]=30),!A|!(16&e[Me>>2])||(f[18+(x+145840|0)|0]=30);d:if(c[20+(U+145840|0)|0]|!(32&c[e[8+(x+145840|0)>>2]+4|0])|(0|n)!=4)e[12+(x+145840|0)>>2]=256;else{if(A=x+145840|0,c[17+(t+145840|0)|0]==2){e[A+12>>2]=200;break d}e[A+12>>2]=150}if((0|m)!=7||(We|=(0|n)==2,(254&c[17+(t+145840|0)|0])!=2))break e;e[12+(x+145840|0)>>2]=e[12+(t+145840|0)>>2]+255>>>1;break e}(254&(n=c[17+(145840+(t=Ze<<5)|0)|0]))==6|(0|n)==3|32&e[e[8+(t+145840|0)>>2]+4>>2]&&(f[18+(x+145840|0)|0]=30);A:if((254&(A=c[17+(U+145840|0)|0]))==2){We=c[20+(U+145840|0)|0]&&(0|A)!=2?We:1,f[18+(A=x+145840|0)|0]=40,ee=0;d:{switch(0|n){case 0:if((t=e[12+(t+145840|0)>>2])>>>0>39)break d;ee=40-t|0;break d;case 2:break d}if(c[20+(x+145840|0)|0])break A;ee=20;l:switch(n-3|0){case 1:if(ee=0,!(8&c[e[8+(t+145840|0)>>2]+4|0]))break d;break A;case 0:break d;case 5:break l;default:break A}ee=12}f[A+18|0]=ee}if(!(16&c[0|Me])|!c[20+(x+145840|0)|0]||c[18+(t=x+145840|0)|0]>19)break e;f[t+18|0]=20;break e}A=c[Me+296|0],m=n=x+145840|0,e[n+12>>2]=256,f[n+19|0]=A;c:if(c[n+20|0]){F=25;A:switch(c[17+(145840+(Ze<<5)|0)|0]-2|0){case 0:if(F=12,1&f[e[8+(x+145840|0)>>2]+7|0])break c;break;case 1:break A;default:break c}f[18+(x+145840|0)|0]=F}if((0|(U=c[17+(U+145840|0)|0]))==2){T=1;break e}if(f[22+(A=x+145840|0)|0]=s,(254&c[17+(145840+(n=Ze<<5)|0)|0])==2)break n;if(n=s,(0|(m=e[36423]))<=(0|t))break t;for(;;){if(c[17+(145840+(n=t<<5)|0)|0]==2){n=c[22+(n+145840|0)|0],f[A+22|0]=n;break t}if((0|m)==(0|(t=t+1|0)))break}break s}if(sr=x+145840|0,St=n^n>>>0<2,n=(As=8&ee)?25:c[296+(St+Me|0)|0]-T|0,f[sr+19|0]=n,(e[36423]-3|0)>(0|t)||(0|(m=255&n))<=(0|(n=e[Me+52>>2]))||(f[sr+19|0]=n),n=0,ee=0,!(F=c[A+52|0]))for(;m=e[A+40>>2],ee=c[A+49|0]==2?(~e[m+4>>2]>>>20&1)+ee|0:ee,n=c[m+10|0]==27?2:n,m=A,A=A+32|0,!(F=c[m+84|0]););m=sr+96|0,t=145840+(xt=t+2<<5)|0,e[34063]=ee,w=c[e[A+40>>2]+10|0],U=U+145840|0,c[17+(xt+145840|0)|0]|c[e[U+8>>2]+10|0]!=23?(A=m,m=t,t=U):A=x+145968|0,U=c[e[m+8>>2]+15|0];i:if(ee)U=c[e[Me+96>>2]+(c[e[t+8>>2]+15|0]+j(U,10)|0)|0],c[t+17|0]!=8|(254&c[m+17|0])!=4||(U=8&c[e[A+8>>2]+4|0]?U-15|0:U);else{if(Ce=e[Me+100>>2],xt=c[e[t+8>>2]+15|0],A=c[t+20|0],U=c[Ce+(xt+j(A|c[m+20|0]?(0|U)==1:U,10)|0)|0],!A|!(32&c[0|Me]))break i;U=c[1+(Ce+j(xt,10)|0)|0]+U>>>1|0}A=F>>>1|0,xt=!ee,F=(0|(U=(0|j(e[130104+(ee?(0|ee)==1?4:8:0)>>2],U))/128|0))<=8?8:U;i:if((0|St)!=7)As&&(F=e[Me+200>>2]+F|0);else{if(F=(U=e[Me+200>>2])+F|0,!As)break i;F=((0|U)/2|0)+F|0}U=A&xt|(0|w)==27,(A=P[304+(Me+(St<<1)|0)>>1])||(A=P[Me+316>>1]),F=j(A<<16>>16,F),(ee=c[7+(A=x+145840|0)|0])&&(St=c[e[144464+(ee<<2)>>2]+14|0])&&(F=(0|j(F,St))/100|0),(U|(0|n)==2)==1&&(2097152&(n=e[Me+12>>2])||(F=(0|j(262144&n?282:256+((280-(c[e[8+(x+145840|0)>>2]+14|0]<<1)|0)/3|0)&65535,F))/256|0)),St=x+145840|0,n=j(e[32526],e[Me+196>>2]),As=(0|Ur)!=2?256:(0|((0|n)>(0|F)?F:n))/128|0,e[St+12>>2]=As,(n=c[St+16|0])>>>0>=19&&(xA(84371,28,br),f[St+16|0]=0,ee=c[A+7|0],n=0),F=n+1|0,(n=255&ee)?(Ho(n,g+8|0),n=vA(e[g+132>>2])):n=e[129280+((255&F)<<2)>>2],U=x+145840|0,1&(T|We)&&(A=145840+(x=Ze<<5)|0,T=c[0|n],n=c[U+21|0],n=((0|j(T,c[U+22|0]-n|0))/256|0)+n|0,f[A+22|0]=n,s=(n-(s=(0|n)==255?255:s)|0)>16?n-16|0:s,f[A+21|0]=s,A=0,(0|s)<(0|n)&&(f[St+16|0]=F,A=2),e[12+(s=x+145840|0)>>2]=As,f[s+16|0]=A,n=c[sr+19|0],f[s+19|0]=c[s+17|0]!=3&&n>>>0>18?18:n),s=(0|Ur)!=2,A=-2&(n=P[t>>1]),I[t>>1]=A;i:{c:{A:switch(c[t+17|0]-3|0){case 5:if(c[m+17|0]==2)break i;A=1|n;break c;case 0:break A;default:break i}if(I[t>>1]=1|n,c[m+17|0]!=2&&e[e[t+8>>2]>>2]!=12146)break i}I[t>>1]=A}s?(0|(t=s<<4))<=((n=c[U+22|0])-(A=c[U+21|0])|0)||(A=(0|(t=n-t|0))>0?t:0,f[U+21|0]=A):(n=c[U+22|0],A=c[U+21|0]),t=255&A,s=((0|j(c[e[129280+(c[St+16|0]<<2)>>2]+127|0],n-t|0))/256|0)+t|0,T=0,We=0;break e}A=e[12+(n+145840|0)>>2],e[m+12>>2]=A,(0|Ur)==3&&(A=e[32526],e[m+12>>2]=A),n=s;n:switch(U-5|0){case 0:e[m+12>>2]=(j(A,160)>>>0)/100;break s;case 2:break n;default:break t}e[m+12>>2]=(j(A,120)>>>0)/100}n=s}We=0,f[16+(t=x+145840|0)|0]=0,A=t,n=(t=255&n)-16|0,f[A+21|0]=t>>>0>=n>>>0?n:0}if(!(e[36423]>(0|l)))break}if(oe=g+160|0,15&(A=e[47197])|e[36456]){t=0,m=0,oe=n=oe-80|0;e:if((s=e[33222])||(e[33223]=500,s=wr(500),e[33222]=s,s)){if(!((e[36423]-2|0)<2)){for(t=A>>8,Me=128&A?0:t,ee=t&A<<24>>31,U=2&A,A=n+32|1,x=1;;){if(rn(n,e[8+(l=145840+(Ze=x<<5)|0)>>2],l,U,n+72|0),t=n+32|0,(13&(s=c[l+20|0]))==1&&(f[n+32|0]=32,t=A),!Me|(0|Me)!=32&!!(0|s)|x>>>0<2||(Hr(n+76|0,n),e[n+76>>2]-880>>>0>4294967103||(t=Xa(Me,t)+t|0)),4&c[0|l]&&((s=c[3+(Ze+145840|0)|0])>>>0<2||(s=s>>>0>=5?5:s,s=U?s>>>0>3?712:716:f[s+94144|0],e[n+76>>2]=s,t=Xa(s,t)+t|0)),F=0,e[n+72>>2]=0,c[0|(s=n)])for(;s=Hr(n+76|0,s)+s|0,e[n+72>>2]>>>F-1&1|!ee|(0|F)<=0||(T=e[n+76>>2])-880>>>0>4294967103||So(T)&&(t=Xa(ee,t)+t|0),F=F+1|0,t=Xa(e[n+76>>2],t)+t|0,c[0|s];);if(c[e[l+8>>2]+10|0]!=21&&(8&(s=P[l>>1])&&(t=rn(t,e[36128],l,U,0),s=P[l>>1]),!(4&s)|c[17+(Ze+145840|0)|0]==2||(t=rn(t,e[36136],l,U,0)),(s=c[7+(Ze+145840|0)|0])&&(t=rn(t,e[144464+(s<<2)>>2],l,U,0))),(t=(l=t-(n+32|0)|0)+m|0)>>>0<J[33223])s=e[33222];else{if(s=t+500|0,e[33223]=s,!(s=Fa(e[33222],s))){e[33223]=0,s=86135;break e}e[33222]=s}if(f[(F=l)+(l=n+32|0)|0]=0,Qr(s+m|0,l),m=t,!((0|(x=x+1|0))<(e[36423]-2|0)))break}if(!s){s=86135;break e}}f[t+s|0]=0}else e[33223]=0,s=86135;oe=n+80|0,15&c[188788]&&(e[r>>2]=s,wa(e[47195],84367,r)),(t=e[36456])&&rs[0|t](s)}c[190280]?(e[36423]=0,t=1):(gt(0),(t=e[r+8>>2])?(oe=s=oe+-64|0,ua(s,t,60),fo(s,1),n=0,(t=Xt(s,0))&&(n=t,c[202976]&&(n=Xt(202976,2))),oe=s- -64|0,e[44468]=n):n=e[44468],t=1,n&&(s=e[32972],(n=wr(1344))&&(s=Jr(n,s,1344),n=216192+(e[50758]<<4)|0,e[n>>2]=11,e[n+8>>2]=s,s=e[50758]+1|0,e[50758]=(0|s)<=169?s:0),e[44468]=0))}else t=0,f[190280]=0;else t=0,e[36423]=0,e[50758]=0,e[50757]=0;return oe=r+16|0,t}function ne(t,r){var s=0,n=0,A=0,l=0;s=1073741825;e:{t:{s:{n:{i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{W:{E:{_:{T:{F:{X:{L:{K:{z:{ne:{R:{xe:{H:{f:{g:{$:{y:{ee:{w:{a:{Ve:{Z:{r:{ge:{j:{pe:{he:{We:{le:{O:{Me:{v:{Ee:{J:{me:{Be:{Ue:{Te:{Pe:{De:{Se:{Ge:{Fe:{be:{He:{te:{ze:{Ye:{Oe:{Qe:{B:{Ce:{Ke:{ht:{mt:{bt:{Ct:{wt:{It:{yt:{kt:{_t:{vt:{xt:{Mt:{Et:{Bt:{Tt:{Pt:{Dt:{St:{Gt:{Ft:{zt:{Ot:{Qt:{Nt:{Lt:{Rt:{jt:{Vt:{Wt:{Ut:switch(0|r){case 0:r=t-9>>>0<5?1073741825:0,r=(t=(0|t)==133)?1073741825:r;break F;case 1:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{if((0|(r=-256&t))<=2047){if(!r)break ue;if((0|r)==1536)break ce;if((0|r)!=1792||(s=0,n=1,(0|t)!=1807))break u;break r}if((0|r)<=69631){if((0|r)==2048)break oe;if((0|r)!=8192)break u;switch(s=131076,t-8204|0){case 1:break se;case 0:break r;default:break ie}}if((0|r)==69632)break re;if((0|r)!=917504)break u;switch(s=8388608,t-917505|0){case 62:break D;case 58:break S;case 57:break G;case 45:break Q;case 43:break q;case 32:break U;case 0:break r;default:break P}}if(s=16,(0|t)!=173)break u;break r}if(s=0,n=1,t-1536>>>0<6)break r;n=(0|t)==1757,r=(t=(0|t)==1564)?2:0;break T}if(s=0,n=1,(0|t)!=2274)break u;break r}return H=64,4}if(s=1073741826,(-2&t)==8206)break r;if(t-8234>>>0<5)return H=0,2;if(s=128,t-8289>>>0<4||(s=2,t-8294>>>0<4))break r;if(s=8388608,t-8298>>>0>=6)break u;break r}r=!(t-69821&-17),t=0;break _}H=536870976;break E}H=268435520;break E}H=-2147483584;break E}H=134217792;break E}H=67108928;break E}H=1073741888;break E}if(s=131072,n=64,t-917536>>>0<96)break r}break a;case 2:u:{P:{D:{S:{G:{Q:{q:{if((0|(r=-256&t))<=130303){if((0|r)<=127743){if((0|r)<=64767){if((0|r)<=11007){if((0|r)==8192)break q;if((0|r)!=9216)break u;if(t-9255>>>0>=25)break Q;break w}if((0|r)==11008)break G;if((0|r)!=11776||(s=-2147483648,t-11845>>>0>=59))break u;break r}if((0|r)<=126975){if((0|r)==64768)break S;if((0|r)!=65280||(s=4194304,t-65520>>>0>=9))break u;break r}if((0|r)==126976|(0|r)==127232|(0|r)==127488)break Z;break u}if((0|r)<=129023){if((0|r)<=128255){if((0|r)==127744|(0|r)==128e3)break Z;break u}if((0|r)==128256|(0|r)==128512|(0|r)==128768)break Z;break u}if((0|r)<=129535){if((0|r)==129024|(0|r)==129280)break Z;break u}if((0|r)==129536|(0|r)==129792|(0|r)==130048)break Z;break u}if((0|r)<=919039){if((0|r)<=917759){if((0|r)<=130815){if((0|r)==130304)break Z;if((0|r)!=130560)break u;break Z}if((0|r)==130816)break Z;if((0|r)!=917504)break u;if((-128&t)!=917632)break D;break ee}if((0|r)<=918271){if((0|r)==917760)break P;if(s=4194304,(0|r)!=918016)break u;break r}if((0|r)==918272|(0|r)==918528)break ee;if(s=4194304,(0|r)!=918784)break u;break r}if((0|r)<=920319){if((0|r)<=919551){if((0|r)==919040)break ee;if(s=4194304,(0|r)!=919296)break u;break r}if((0|r)==919552|(0|r)==919808)break ee;if(s=4194304,(0|r)!=920064)break u;break r}if((0|r)<=920831){if((0|r)==920320)break ee;if(s=4194304,(0|r)!=920576)break u;break r}if((0|r)==920832|(0|r)==921088)break ee;if(s=4194304,(0|r)!=921344)break u;break r}if(s=4194304,(0|t)!=8293)break u;break r}if(s=-2147483648,t-9291>>>0>=21)break u;break r}if((-16&t)==11248|t-11219>>>0<25|(0|t)==11209|t-11194>>>0<3||(0|(r=-2&t))==11124)break w;if(s=-2147483648,(0|r)!=11158)break u;break r}if(s=65536,t-64976>>>0>=32)break u;break r}if((0|t)==917504)break ee;if(s=4194304,t-917506>>>0>=30)break u;break r}if(s=4194304,t>>>0>917999)break r}r=(t=!(65534&~t))>>>16|0,t<<=16;break _;case 6:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{if((0|(r=-256&t))<=7679){if((0|r)<=767){if(!r)break oe;if((0|r)==256)break se;if((0|r)!=512)break a;if((0|t)!=585)break ie;break W}if((0|r)==768)break re;if((0|r)==1024)break U;if((0|r)!=7424||(s=16777216,(0|t)!=7574))break a;break r}if((0|r)<=119807){if((0|r)==7680)break q;if((0|r)==8448)break Q;if((0|r)!=65280||(s=256,t-65345>>>0>=6))break a;break r}if((0|r)<=120319){if((0|r)==119808)break G;if((0|r)!=120064)break a;if(t>>>0>=120070)break S;break y}if((0|r)==120320)break D;if((0|r)!=120576)break a;if(t>>>0>=120597)break P;break y}if(s=768,t-97>>>0<6)break r;if(s=16777216,t-105>>>0>=2)break a;break r}s=(r=(0|t)==329)>>>9|0,r=(t=(0|t)==303)?16777216:r<<23;break V}if((0|t)==616)break W;if(s=16777216,(0|t)!=669)break a;break r}switch(s=128,t-976|0){case 35:break u;case 0:case 1:case 2:case 5:case 32:case 33:break r}if((-2&t)!=1012)break a;break r}n=(t=!(t-1110&-3))>>>8|0,t<<=24;break N}n=(r=(0|t)==7883)>>>8|0,r=(t=(0|t)==7725)?16777216:r<<24;break T}if(t-8458>>>0<10)break y;if((r=t-8495|0)>>>0<11)break Wt;break ge}if((0|(r=-2&t))==119842)break $;if(t-119808>>>0<85)break y;if(t-119894>>>0<2|t-119946>>>0<2)break $;if((0|t)==119995|t-119896>>>0<69|t-119982>>>0<12)break y;if((0|r)==119998)break $;if(t-119997>>>0<7)break y;if(s=16777344,(0|r)==120050)break r;if(s=128,t>>>0<=120004)break a;break r}if((-2&t)==120102)break $;if(t-120094>>>0<28)break y;S:{if((0|t)<=120257){if(t-120154>>>0<2)break $;if(s=16777344,t-120206>>>0>=2)break S;break r}if(t-120258>>>0<2)break $;if(s=16777344,t-120310>>>0<2)break r}if(s=128,t>>>0<=120145)break a;break r}if(t-120362>>>0<2|t-120414>>>0<2)break $;if(s=16777344,t-120466>>>0<2)break r;if(t-120540>>>0<31|t>>>0>120571|t>>>0<120486)break y;if(s=128,t-120514>>>0>=25)break a;break r}if(t-120772>>>0<8|t-120746>>>0<25|t-120714>>>0<31|t-120688>>>0<25||(0|t)!=120597&t>>>0<120629|t-120656>>>0<31)break y;if(s=128,t-120630>>>0<25)break r;break a}break W;case 7:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{k:{Ae:{ae:{Y:{de:{fe:{we:{Ie:{if((0|(r=-256&t))<=11263){if((0|r)<=3583){if((0|r)<=1535){if((0|r)==512)break Ie;if((0|r)==768)break we;if((0|r)!=1280||(s=4096,(0|t)!=1369))break a;break r}if((0|r)==1536)break fe;if((0|r)==1792)break de;if((0|r)!=2304||(s=4096,(0|t)!=2417))break a;break r}if((0|r)<=7167){if((0|r)==3584)break Y;if((0|r)==6144)break ae;if((0|r)!=6656||(s=8192,(0|t)!=6823))break a;break r}if((0|r)==7168)break Ae;if((0|r)==7424)break k;if((0|r)!=8192)break a;if(s=16793600,!(r=t-8305|0))break r;if((0|r)==14)break ue;break ce}if((0|r)<=43263){if((0|r)<=40959){if((0|r)==11264)break oe;if((0|r)==11776)break se;if((0|r)!=12288)break a;switch(s=8192,t-12293|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:break re;case 0:case 44:case 45:case 46:case 47:case 48:break r;default:break ie}}if((0|r)==40960)break U;if((0|r)==42496)break q;if((0|r)!=42752)break a;if(t-42775>>>0>=9)break Q;break g}if((0|r)<=65279){if((0|r)==43264)break G;if((0|r)==43520)break S;if((0|r)!=43776||(s=20480,(-4&t)!=43868))break a;break r}if((0|r)==65280)break D;if((0|r)==92928)break P;if((0|r)!=93952)break a;if(s=4096,t-94099>>>0<13)break r;if(s=8192,(-2&t)!=94176)break a;break r}if(s=16797696,(0|t)==690)break r;if(t-688>>>0<9)return H=0,20480;if(t-697>>>0<7)break g;if((0|(r=-2&t))==704)return H=0,20480;if(s=4096,t-710>>>0<10||(s=12288,(0|r)==720)||(s=20480,t-736>>>0<5))break r;s=(t=(-3&t)==748)>>>20|0,t<<=12;break x}r=(0|t)==890?20480:0,r=(t=(0|t)==884)?4096:r;break F}if(s=8192,(0|t)==1600)break r;if(s=4096,t-1765>>>0>=2)break a;break r}if(s=4096,(-2&t)==2036)break r;if(s=8192,(0|t)!=2042)break a;break r}r=(t=!(t-3654&-129))>>>19|0,t<<=13;break _}if(s=8192,(0|t)!=6211)break a;break r}if(s=12288,(0|t)==7291)break r;if(s=4096,t-7288>>>0>=6)break a;break r}if(s=16797696,(0|t)==7522||(s=20480,t-7468>>>0<63))break r;switch(s=16384,t-7588|0){default:if((0|t)==7544)break r;case 1:case 2:case 3:if(t-7579>>>0>=37)break a;break r;case 0:case 4:}return H=0,16793600}return H=0,16384}if(s=16384,t-8336>>>0>=13)break a;break r}r=(s=(0|t)==11389)>>>18|0,s=(t=(0|t)==11388)?16793600:s<<14;break I}if(s=-2147479552,(0|t)!=11823)break a;break r}if(t-12445>>>0<2)break r;if((0|t)==12540)break u}if(t-12541>>>0>=2)break a;break r}if(s=8192,(0|t)!=40981)break a;break r}if((0|t)==42508)break M;if((0|t)==42623)break g;if(s=20480,(-2&t)!=42652)break a;break r}if((0|t)==42864)return H=0,16384;if((0|t)==42888)break g;if(s=20480,(-2&t)!=43e3)break a;break r}s=(r=(0|t)==43494)>>>19|0,r=(t=(0|t)==43471)?8192:r<<13;break V}if((0|t)==43632||(0|t)==43741)break M;if(s=8192,t-43763>>>0>=2)break a;break r}if(s=12288,(0|t)==65392)break r;if(s=135168,(-2&t)!=65438)break a;break r}if(s=8192,(-2&t)==92994)break r;break a}return H=0,12288;case 8:s=128;u:{P:{D:{S:{G:{Q:{q:{U:{re:{if((0|(r=-256&t))<=12543){if((0|r)<=5887){if((0|r)<=3583){if(!r)break re;if((0|r)!=1536||(r=8388608,(0|t)!=1651))break v;break le}if((0|r)==3584)break U;if((0|r)!=4352||(s=4194304,t-4447>>>0>=2))break v;break O}if((0|r)<=8447){if((0|r)==5888)break q;if((0|r)!=6400||(r=t-6581|0)>>>0>=6)break v;s=e[(r=81432+(r<<3)|0)>>2],n=e[r+4>>2];break O}if((0|r)==8448)break Q;if((0|r)!=12288||(r=2048,(0|t)!=12294))break v;break le}if((0|r)<=68863){if((0|r)<=63999){if((0|r)==12544)break G;if((0|r)!=43520)break v;if((r=t-43701|0)>>>0<8)break P;break Me}if((0|r)==64e3)break u;if((0|r)!=65280||(r=4194304,(0|t)!=65440))break v;break le}if((0|r)<=100095){if((0|r)==68864)break S;if((0|r)!=70400||(s=8192,(0|t)!=70493))break v;break he}if((0|r)==100096)break D;if((0|r)!=126464)break v;break O}n=(r=!(t-170&-17))>>>18|0,s=r<<14;break O}if(s=33554432,t-3648>>>0<5)break O;if(r=0,l=33554432,(0|t)==3759)break le;if(t-3776>>>0>=5)break v;break O}if(s=8388608,t-6051>>>0>=2)break v;break O}if(t-8501>>>0>=4)break v;break O}if(r=4194304,(0|t)!=12644)break v;break le}if(s=4096,(-2&t)!=68898)break v;break O}if(s=2048,t-100333>>>0<5)break O;break v}if(s=33554432,!(211>>>r&1))break Me;break O}if((r=t-64014|0)>>>0>=28)break v;s=e[(r=81480+(r<<3)|0)>>2],n=e[r+4>>2];break O;case 10:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=119807){if((0|r)<=8447){if(!r)break Q;if((0|r)!=768)break a;switch(s=128,t-976|0){case 0:case 1:case 2:case 36:case 37:break r;default:break a}}if((0|r)==8448)break G;if((0|r)!=65280||(s=256,t-65313>>>0>=6))break a;break r}if((0|r)<=120319){if((0|r)==119808)break S;if((0|r)!=120064)break a;if(t>>>0>=120070)break D;break y}if((0|r)==120320)break P;if((0|r)!=120576)break a;if(t-120772>>>0>=8)break u;break y}if(s=768,t-65>>>0>=6)break a;break r}switch(s=128,t-8450|0){case 0:case 5:break r}if(t-8458>>>0<10)break y;if((r=t-8469|0)>>>0<20)break Vt;if((-4&t)==8508)break r;break Ee}if(t-119982>>>0<12|t>>>0>120004|t-119977>>>0<4|t-119973>>>0<2||(0|t)==119970|(-2&t)==119966|t-119808>>>0<85)break y;if(s=128,t-119894>>>0>=71)break a;break r}if(t-120138>>>0<7|t>>>0>120145|(0|t)==120134|t-120128>>>0<5||t-120123>>>0<4|t-120094>>>0<28|(0|t)!=120070&t>>>0<120075|t-120086>>>0<7)break y;if(s=128,t-120077>>>0>=8)break a;break r}if(t-120540>>>0<31|t>>>0<120486)break y;if(s=128,t-120488>>>0>=25)break a;break r}if(t-120714>>>0<31|t-120598>>>0<31)break y;if(s=128,t-120656>>>0<31)break r;break a;case 11:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{k:{Ae:{ae:{if((0|(r=-256&t))<=43263){if((0|r)<=3839){if((0|r)<=3071){if((0|r)==2304)break ae;if((0|r)!=2816)break f;if((0|t)>3005)break k;if((0|t)!=2878)break Ae;return H=0,132096}if((0|r)==3072)break ue;if((0|r)!=3328)break f;switch(s=132096,t-3535|0){case 0:case 16:break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break f;default:break ce}}if((0|r)<=6911){if((0|r)==3840)break oe;if((0|r)!=4096)break f;if(s=1024,t-4139>>>0<2)break r;switch(t-4145|0){case 0:case 7:case 10:case 11:case 37:case 38:case 49:case 54:case 55:case 82:case 83:break r;case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 105:case 106:break u;default:break se}}if((0|r)==6912)break ie;if((0|r)==7168)break re;if((0|r)!=12288||(s=135168,(-2&t)!=12334))break f;break r}if((0|r)<=70399){if((0|r)<=43775){if((0|r)==43264)break U;if((0|r)!=43520)break f;return H=0,t-43643&-3?1024:4096}if((0|r)==43776)break q;if((0|r)==69888)break Q;if((0|r)!=70144||(s=4096,(0|t)!=70197))break f;break r}if((0|r)<=70911){if((0|r)==70400)break G;if((0|r)!=70656)break f;r=(0|t)==70845?132096:1024,r=(t=(0|t)==70832)?132096:r;break F}if((0|r)==70912)break S;if((0|r)==71168)break D;if((0|r)!=119040)break f;switch(s=131072,t-119141|0){case 8:break g;case 1:break a;case 0:break r;default:break P}}r=(0|t)==2519?132096:1024,r=(t=(0|t)==2494)?132096:r;break F}if(s=132096,(0|t)!=2903)break f;break r}if((0|t)==3006)return H=0,132096;if(s=132096,(0|t)!=3031)break f;break r}if((t=t-3266|0)>>>0>20||(s=132096,!(1<<t&1572865)))break f;break r}if((0|t)==3390)break r;if((0|t)!=3415)break f;break r}if(s=4096,(-2&t)!=3902)break f;break r}s=(t=(0|t)==4252)>>>22|0,t<<=10;break x}switch(s=1024,t-6965|0){default:if((0|t)==6916)break r;break;case 0:case 6:break r;case 1:case 2:case 3:case 4:case 5:}if(t-6973>>>0<5)break r;switch(t-6979|0){case 1:break g;case 0:break r}if((0|t)==7042|(0|t)==7073|(-2&t)==7078)break r;if((0|t)==7082)break g;if((0|t)==7143|t-7146>>>0<3)break r;s=(t=(0|t)==7150)>>>22|0,t<<=10;break x}r=(0|t)==7415?4096:1024,r=(t=(0|t)==7393)?4096:r;break F}r=(0|t)==43456?4096:1024,r=(t=(0|t)==43347)?4096:r;break F}if(s=4096,(0|t)!=44012)break f;break r}if(s=4096,(0|t)!=70080)break f;break r}s=132096;G:switch(t-70462|0){case 0:case 25:break r;case 15:break G;default:break f}break g}if(s=132096,(0|t)!=71087)break f;break r}if(s=4096,(0|t)!=71350)break f;break r}if(s=135168,t-119150>>>0<5)break r;break f}break g;case 12:r=((0|t)==8419)<<6,t=0;break _;case 13:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{k:{Ae:{ae:{Y:{de:{fe:{we:{Ie:{Ne:{ye:{Le:{qe:{Xe:{Ze:{Je:{$e:{et:{tt:{rt:{st:{at:{ke:{nt:{it:{ot:{At:{lt:{Re:{_e:{je:{ct:{ut:{dt:{ve:{ft:{gt:{pt:{if((0|(r=-256&t))<=43775){if((0|r)<=5887){if((0|r)<=2559){if((0|r)<=1535){if((0|r)==768)break pt;if((0|r)==1024)break gt;if((0|r)!=1280)break a;if(t-1425>>>0>=17)break ft;break g}if((0|r)<=2047){if((0|r)==1536)break ve;if((0|r)!=1792)break a;if(s=1024,(0|t)==1809)break r;if((-16&t)!=1840)break dt;return H=0,5120}if((0|r)==2048)break ut;if((0|r)!=2304)break a;if(t>>>0>=2307)break ct;break f}if((0|r)<=3583){if((0|r)<=3071){if((0|r)==2560)break je;if((0|r)!=2816)break a;switch(s=1024,t-2876|0){case 0:break g;case 3:break r;case 1:case 2:break Re;default:break _e}}if((0|r)==3072)break lt;if((0|r)!=3328)break a;if((0|(r=-2&t))!=3328)break At;break f}if((0|r)<=4095){if((0|r)==3584)break ot;if((0|r)!=3840)break a;if((0|(r=-2&t))!=3864)break it;break g}if((0|r)==4096)break nt;if((0|r)!=4864||(s=1024,(0|t)!=4959))break a;break r}if((0|r)<=8191){if((0|r)<=6655){if((0|r)==5888)break ke;if((0|r)==6144)break at;if((0|r)!=6400)break a;if((r=t-6432|0)>>>0<=18&&(s=1024,1<<r&262535))break r;if(s=4096,t-6457>>>0>=3)break a;break r}if((0|r)<=7167){if((0|r)==6656)break st;if((0|r)!=6912)break a;if(s=1024,(-4&t)==6912)break r;if((0|t)!=6964)break rt;break g}if((0|r)==7168)break tt;if((0|r)!=7424)break a;if(s=4096,t-7620>>>0<12||(s=1024,t-7655>>>0<14))break r;if((t=t-7669|0)>>>0>=11)break a;r=e[(t=82104+(t<<3)|0)>>2];break h}if((0|r)<=42495){if((0|r)<=11519){if((0|r)==8192)break et;if((0|r)!=11264||(s=4096,t-11503>>>0>=3))break a;break r}if((0|r)==11520)break $e;if((0|r)!=12288)break a;if(t-12330>>>0>=4)break Je;break g}if((0|r)<=43263){if((0|r)==42496)break Ze;if((0|r)!=43008)break a;if(t-43045>>>0>=2)break Xe;break f}if((0|r)==43264)break qe;if((0|r)!=43520)break a;switch(s=1024,t-43561|0){case 83:case 150:case 152:break g;case 0:case 1:case 2:case 3:case 4:case 5:case 8:case 9:case 12:case 13:case 26:case 35:case 135:case 137:case 138:case 139:case 142:case 143:case 149:break r;default:break Le}}if((0|r)<=71423){if((0|r)<=69375){if((0|r)<=66047){if((0|r)==43776)break ye;if((0|r)==64256)break Ne;if((0|r)!=65024)break a;if(s=536870912,t-65024>>>0<15||(n=64,(0|t)==65039))break r;if(s=4096,n=0,(-16&t)!=65056)break a;break r}if((0|r)<=68095){if((0|r)==66048)break Ie;if((0|r)!=66304||(s=1024,t-66422>>>0>=5))break a;break r}if((0|r)==68096)break we;if((0|r)!=68864||(s=5120,(-4&t)!=68900))break a;break r}if((0|r)<=70399){if((0|r)<=69887){if((0|r)==69376)break fe;if((0|r)!=69632)break a;if(t-69688>>>0>=14)break de;break f}if((0|r)==69888)break Y;if((0|r)!=70144)break a;if(s=1024,t-70191>>>0<3)break r;switch(t-70196|0){case 2:break g;case 0:case 3:case 10:break r;case 1:case 4:case 5:case 6:case 7:case 8:case 9:break Ae;default:break ae}}if((0|r)<=70911){if((0|r)==70400)break k;if((0|r)!=70656)break a;if((-8&t)!=70712)break ue;break f}if((0|r)==70912)break ce;if((0|r)!=71168)break a;if(s=1024,t-71219>>>0<8)break r;switch(t-71229|0){case 2:break g;case 0:case 3:break r;case 1:break se;default:break oe}}if((0|r)<=92927){if((0|r)<=72703){if((0|r)==71424)break Ot;if((0|r)==71680)break ie;if((0|r)!=72192)break a;if(t-72193>>>0>=10)break re;break f}if((0|r)<=73215){if((0|r)==72704)break U;if((0|r)!=72960)break a;if((r=t-73009|0)>>>0<19)break Ft;break J}if((0|r)==73216)break q;if((0|r)!=92672||(s=4096,t-92912>>>0>=5))break a;break r}if((0|r)<=122879){if((0|r)<=113663){if((0|r)==92928)break Q;if((0|r)!=93952||(s=4096,t-94095>>>0>=4))break a;break r}if((0|r)==113664)break G;if((0|r)!=119040)break a;switch(s=4096,t-119143|0){case 0:case 1:case 2:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 67:case 68:case 69:case 70:break r;default:break a}}if((0|r)<=125183){if((0|r)==122880)break S;if((0|r)!=124928||(s=4096,t-125136>>>0>=7))break a;break r}if((0|r)==125184)break D;if((0|r)!=917760||(s=536870912,t-917760>>>0>=240))break a;break r}if(t-768>>>0<69)break g;if(s=21504,(0|t)==837)break r;if(t-838>>>0<9)break g;if(s=4194304,(0|t)==847)break r;if((-8&t)==848)break g;if(s=4096,t-861>>>0>=6)break a;break r}if(s=4096,t-1155>>>0>=5)break a;break r}if(s=4096,t-1443>>>0<13||(s=5120,t-1456>>>0<14))break r;if((t=t-1471|0)>>>0>=9)break a;r=e[(t=81944+(t<<3)|0)>>2];break h}if(t-1552>>>0<11)break f;if(s=5120,t-1611>>>0<8)break r;if(t-1619>>>0<4)break f;switch(t-1623|0){case 1:break g;case 0:break r;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 25:case 127:case 128:case 129:case 130:case 131:case 132:case 133:break f}if(s=4096,t-1759>>>0<2)break r;if((r=t-1761|0)>>>0<8)break jt;break me}if(t-1856>>>0<11)break g;if(s=5120,t-1958>>>0<11)break r;if(s=4096,t-2027>>>0>=9)break a;break r}switch(s=1024,(-2&t)-2070|0){case 2:break g;case 0:break r}if(t-2260>>>0<12|t-2089>>>0<4|t-2075>>>0<9|t-2085>>>0<3)break f;if(t-2275>>>0<7)return H=0,5120;if(s=4096,t-2282>>>0<6||(s=5120,t-2288>>>0<15))break r;if(s=1024,(0|t)!=2303)break a;break r}switch(s=1024,t-2362|0){case 2:break g;case 0:break r}if(t-2369>>>0<8)break f;switch(s=4096,t-2381|0){case 0:case 4:case 5:case 6:case 7:case 111:break r;case 8:case 9:case 10:case 21:case 22:case 52:break f}if(t-2497>>>0<4)break f;if((0|t)==2509)break r;if(s=1024,(-2&t)!=2530)break a;break r}if(t-2561>>>0<2)break f;switch(s=4096,t-2620|0){case 0:case 17:case 128:case 145:break r;case 5:case 6:case 11:case 12:case 15:case 16:case 21:case 52:case 53:case 57:case 69:case 70:case 133:case 134:case 135:case 136:case 137:case 139:case 140:case 166:case 167:case 190:case 191:case 192:break f}if(t-2813>>>0>=3)break a;break r}if((0|t)==2817)break f}if(t-2881>>>0<4)break f;switch(s=4096,t-2893|0){case 0:break r;case 9:break f}if((-2&t)==2914)break f;switch(s=1024,t-3008|0){default:if((0|t)!=2946)break a;break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break a;case 0:break r;case 13:}break g}switch(s=1024,t-3072|0){case 77:case 188:case 205:break g;case 0:case 62:case 63:case 64:case 70:case 71:case 72:case 74:case 75:case 76:case 85:case 86:case 98:case 99:case 129:case 191:case 198:case 204:break r}if((-2&t)!=3298)break a;break r}if(s=4096,t-3387>>>0<2)break r;if(t-3393>>>0<4)break f;if((0|t)==3405)break r;if((0|r)==3426)break f;switch(t-3530|0){case 0:break r;case 8:case 9:case 10:case 12:break f;default:break a}}if((r=t-3633|0)>>>0<10)break Rt;break Be}if((s=t-3893|0)>>>0>4|!(1<<s&21))break Ue;break g}switch(s=1024,t-4141|0){case 10:case 12:case 13:break g;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:case 9:case 16:case 17:case 43:case 44:case 49:case 50:case 51:case 68:case 69:case 70:case 71:case 85:case 88:case 89:break r}r=(s=(0|t)==4253)>>>22|0,s=(t=(0|t)==4237)?4096:s<<10;break I}s=1024;ke:{switch(t-5906|0){case 0:case 1:case 32:case 33:break r;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:break ke}switch(t-5970|0){case 0:case 1:case 32:case 33:break r;default:break ke}}if(s=4194304,(-2&t)==6068)break r;if((r=t-6071|0)>>>0<16)break Lt;break Te}if(s=536870912,t-6155>>>0<3||(s=67109888,t-6277>>>0<2))break r;if(s=1024,(0|t)!=6313)break a;break r}if(t-6679>>>0<2)break f;switch(s=1024,t-6683|0){case 0:case 59:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 71:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 88:case 89:break r}if(s=4096,t-6832>>>0<14)break r;if((t=t-6773|0)>>>0>=11)break a;r=e[(t=82016+(t<<3)|0)>>2];break h}if(t-6966>>>0<5)break r;switch(t-6972|0){case 0:case 6:break r}if(t-7019>>>0<9)break g;switch(t-7040|0){case 43:break g;case 0:case 1:case 34:case 35:case 36:case 37:case 40:case 41:case 44:case 45:case 104:case 105:case 109:case 111:case 112:case 113:break r;default:break a}}if(s=1024,t-7212>>>0<8)break r;switch(s=12288,t-7222|0){case 1:break g;case 0:break r}if(t-7380>>>0<13)break g;switch(s=4096,t-7376|0){case 0:case 1:case 2:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 29:case 36:break r}if((-2&t)!=7416)break a;break r}if(s=128,t-8400>>>0<13)break r;if((t=t-8417|0)>>>0>=15)break a;r=e[(t=82192+(t<<3)|0)>>2];break h}if(s=1024,(-32&t)!=11744)break a;break r}if(s=4096,t-12441>>>0>=2)break a;break r}if((0|t)==42607)break g;if(t-42612>>>0<8)break f;if((0|(t&=-2))==42620)break g;if((0|t)==42654)break u;if(s=4096,(0|t)!=42736)break a;break r}switch(s=4096,t-43204|0){case 0:break r;case 1:break f}if(t-43232>>>0>=18)break a;break r}if(t-43302>>>0<5)break f;if(t-43307>>>0<3)break g;if(t-43335>>>0<11|t-43392>>>0<3)break f;if(s=4096,(0|t)==43443||(s=1024,t-43446>>>0<4))break r;n=(r=(0|t)==43493)>>>20|0,r=(t=(0|t)==43452)?1024:r<<12;break T}if((-2&t)==43756)break r;if(s=4096,(0|t)!=43766)break a;break r}s=1024;ye:switch(t-44005|0){case 0:case 3:break r;case 8:break ye;default:break a}break g}if(s=5120,(0|t)!=64286)break a;break r}if(s=4096,(0|t)!=66272)break a;break r}if((-4&t)==68108)break f;if((r=t-68097|0)>>>0<6)break Nt;break Pe}if(s=4096,t-69446>>>0>=11)break a;break r}if(t-69811>>>0<4)break f;if(s=1024,(0|t)==69633)break r;if(s=4096,t-69817>>>0>=2)break a;break r}switch(s=1024,t-69888|0){case 51:case 52:case 115:break g;case 0:case 1:case 2:case 39:case 40:case 41:case 42:case 43:case 45:case 46:case 47:case 48:case 49:case 50:break r}if((-2&t)==70016|t-70070>>>0<9)break r;if(s=4096,t-70090>>>0>=3)break a;break r}if((0|t)==70367)break r}if(t-70371>>>0<6)break r;if(s=4096,t-70377>>>0>=2)break a;break r}if((-2&t)==70400)break f;s=4096;k:switch(t-70460|0){case 0:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 52:case 53:case 54:case 55:case 56:break r;case 4:break k;default:break a}break f}if((0|t)==70722)break g;if(t-70723>>>0<2)break f;if((r=t-70835|0)>>>0<=13)break P;break De}if((r=t-71090|0)>>>0<12)break Qt;break Se}switch(t-71339|0){case 0:case 2:break r;default:break se}}if(t-71344>>>0<6)break r;if(s=4096,(0|t)!=71351)break a;break r}if(s=1024,t-71727>>>0<10)break r;if(s=4096,t-71737>>>0>=2)break a;break r}if((0|t)==72244)break g;if(t-72245>>>0<10)break f;if(s=4096,(0|t)==72263)break r;if(t-72273>>>0<11)break f;if(s=1024,t-72330>>>0<13)break r;s=(r=(0|t)==72345)>>>20|0,r=(t=(0|t)==72344)?8192:r<<12;break V}if((r=t-72752|0)>>>0<16)break zt;break Ge}if(s=1024,t-73459>>>0>=2)break a;break r}if(s=1024,t-92976>>>0>=7)break a;break r}if(s=1024,(0|t)!=113822)break a;break r}if(s=1024,t-122888>>>0<17)break r;if((t=t-122880|0)>>>0>=43)break a;r=e[(t=82816+(t<<3)|0)>>2];break h}if(s=12288,t-125252>>>0<3||(s=1024,(0|t)==125255)||(s=4096,t-125256>>>0<3))break r;break a}if(!(1<<r&12479))break De;break f}break f;case 14:u:{if((0|(r=-256&t))!=120576){if((0|r)!=65280){if(r||(s=768,n=66,t-48>>>0>=10))break u;break r}if(s=256,t-65296>>>0>=10)break u;break r}if(s=128,t-120782>>>0<50)break r}break a;case 15:u:{if((0|(r=-256&t))!=12288){if((0|r)!=8448)break u;r=(t=(0|(s=-16&t))==8560)>>>18|0,n=t<<14,s=(t=(0|s)==8544)?32768:n;break I}if(t-12321>>>0<9||t-12344>>>0<3)return H=0,2048;if(s=2048,(0|t)==12295)break r}break a;case 16:u:{P:{D:{if((0|(r=-256&t))<=9215){if((0|r)==4864)break D;if((0|r)!=6400||(s=134217728,(0|t)!=6618))break u;break r}if((0|r)==9216)break P;if((0|r)!=127232)break u;if(s=0,n=-2147483648,(0|t)==127232)break r;if(n=268435456,t-127233>>>0>=10)break u;break r}if(s=134217728,t-4969>>>0>=9)break u;break r}if(s=0,n=-2147483648,t-9352>>>0<20)break r}break a;case 17:n=(t=(0|t)==8256)>>>25|0,t<<=7;break N;case 18:u:{P:{D:{S:{if((0|(r=-256&t))<=11775){if((0|r)<=6143){if(s=-2147483624,!r)break r;if((0|r)!=1280||(s=24,(0|t)!=1418))break u;break r}if((0|r)==6144)break S;if((0|r)!=8192)break u;if(s=-2147483624,(-2&t)==8208)break r;t=t-8211>>>0<2,r=-2147483640;break C}if((0|r)<=65023){if((0|r)==11776)break D;if((0|r)!=12288)break u;r=(0|t)==12336,s=(t=(0|t)==12316)||r?-2147483640:8,H=t?0:r?130:0;break m}if((0|r)==65024)break P;if((0|r)!=65280||(s=24,(0|t)!=65293))break u;break r}if(s=24,(0|t)!=6150)break u;break r}if(s=-2147483624,(0|t)==11799)break r;t=(-2&t)==11834,r=-2147483640;break C}if(s=8,n=8388608,t-65073>>>0<2||(s=152,n=0,(0|t)==65123))break r}return H=0,8;case 19:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=11775){if((0|r)<=8959){if(r)break Q;break w}if((0|r)==8960)break G;if((0|r)==9984)break S;if((0|r)!=10496)break a;break H}if((0|r)<=64767){if(s=-2147483648,(0|r)==11776)break r;if((0|r)!=12288)break a;switch(s=-2147483616,t-12301|0){case 0:case 2:break r;default:break D}}if((0|r)==64768)break P;if((0|r)==65024)break u;if((0|r)!=65280)break a;if(s=32,(0|t)==65379)break r;break a}if((0|r)!=8192)break a;switch(t-8318|0){default:if(s=-2147483648,(0|t)!=8262)break a;break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break a;case 0:case 16:}break y}switch(s=-2147483520,t-8969|0){case 1:break a;case 0:case 2:break r}if((0|t)!=9002)break a;return H=0,-2139095040}if(s=-2147483520,(0|t)==10182)break r;break xe}return H=0,(-2&t)==12318?-2147483616:-2147483648}if(s=-2147483648,(0|t)!=64830)break a;break r}n=(t=!(t-65090&-3))>>>27|0,t<<=5;break N;case 20:case 21:if(!(t&=-256))break b;if(s=-2147483616,(0|t)==8192)break r;break Ve;case 22:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{k:{Ae:{ae:{Y:{de:{fe:{we:{Ie:{Ne:{ye:{Le:{qe:{Xe:{Ze:{Je:{$e:{et:{tt:{rt:{st:{at:{ke:{nt:{it:{ot:{At:{lt:{Re:{_e:{je:{ct:{ut:{dt:{ve:{if((0|(r=-256&t))<=43519){if((0|r)<=5887){if((0|r)<=2303){if((0|r)<=1535){if(!r)break ve;if((0|r)==768)break dt;if((0|r)!=1280)break a;if(s=0,n=538968064,t-1371>>>0<2)break r;switch(n=268435456,t-1373|0){case 0:break r;case 1:break ct;default:break ut}}if((0|r)==1536)break _e;if((0|r)==1792)break Re;if((0|r)!=2048)break a;if((r=t-2103|0)>>>0<8)break St;break Fe}if((0|r)<=3839){if((0|r)==2304)break lt;if((0|r)==3328)break At;if((0|r)!=3584||(s=64,(-2&t)!=3674))break a;break r}if((0|r)<=4863){if((0|r)==3840)break ot;if((0|r)!=4096)break a;if(s=268435520,(-2&t)==4170)break r;if(s=0,n=16777216,(0|t)!=4347)break a;break r}if((0|r)==4864)break it;if((0|r)!=5632)break a;switch(s=64,t-5741|0){case 1:break i;case 0:break r;default:break nt}}if((0|r)<=11263){if((0|r)<=6655){if((0|r)==5888)break ke;if((0|r)==6144)break Pt;if((0|r)!=6400)break a;r=(0|t)==6469,s=(t=(0|t)==6468)||r?268435520:0,H=t?536870912:r?1073741824:0;break m}if((0|r)<=7167){if((0|r)==6656)break at;if((0|r)!=6912)break a;if((0|(r=-2&t))!=7002)break st;break R}if((0|r)==7168)break rt;if((0|r)!=8192)break a;switch(s=-2147483520,t-8214|0){case 1:break w;case 0:break r;case 16:break tt;default:break et}}if((0|r)<=41983){if((0|r)==11264)break $e;if((0|r)==11776)break Je;if((0|r)!=12288)break a;switch(s=-2147483584,n=272629760,t-12289|0){case 2:break w;case 0:break r;case 1:break Xe;default:break Ze}}if((0|r)<=43007){if((0|r)==41984)break qe;if((0|r)!=42496)break a;switch(s=64,n=268435456,t-42739|0){case 4:break c;case 0:break i;case 3:break s;case 2:break r;case 1:break ye;default:break Le}}if((0|r)==43008)break Ne;if((0|r)!=43264)break a;switch(s=4096,t-43310|0){case 0:break r;case 1:break R;default:break Ie}}if((0|r)<=70655){if((0|r)<=67839){if((0|r)<=65279){if((0|r)==43520)break we;if((0|r)==43776)break fe;if((0|r)!=65024)break a;if(s=0,n=268435456,(0|(l=-2&t))==65040)break r;if((r=t-65042|0)>>>0<8)break Bt;break be}if((0|r)==65280)break de;if((0|r)==66304)break Y;if((0|r)!=67584||(s=64,(0|t)!=67671))break a;break r}if((0|r)<=69375){if((0|r)==67840)break ae;if((0|r)==68096)break Ae;if((0|r)!=68352)break a;switch(s=64,t-68410|0){case 0:case 1:case 2:case 3:case 4:case 5:case 95:case 96:case 97:case 98:break r;default:break a}}if((0|r)<=69887){if((0|r)==69376)break k;if((0|r)!=69632)break a;if(t-69703>>>0>=2)break ue;break R}if((0|r)==69888)break ce;if((0|r)!=70144)break a;if((r=t-70200|0)>>>0<=4)break oe;if((0|t)!=70313)break a;break R}if((0|r)<=74751){if((0|r)<=71423){if((0|r)==70656)break se;if((0|r)==70912)break ie;if((0|r)!=71168||(s=268435520,t-71233>>>0>=2))break a;break r}if((0|r)<=72703){if((0|r)==71424)break re;if((0|r)!=72192)break a;if(t-72258>>>0>=2)break U;break R}if((0|r)==72704)break q;if((0|r)!=73216||(s=268435520,t-73463>>>0>=2))break a;break r}if((0|r)<=93695){if((0|r)==74752)break Q;if((0|r)==92672)break S;if((0|r)!=92928)break a;if(s=268435520,t-92983>>>0<2)break r;r=(0|t)==92996?268435520:0,r=(t=(0|t)==92985)?64:r;break F}if((0|r)<=121343){if((0|r)==93696)break G;if((0|r)!=113664||(s=268435520,n=-2147483648,(0|t)!=113823))break a;break r}if((0|r)==121344)break Et;if((0|r)!=125184)break a;s=((0|t)==125279)<<30,r=0,H=(t=(0|t)==125278)?536870912:s;break o}s=-1879048128,n=536870912;ve:{ft:{gt:{pt:{switch(t-33|0){default:switch(t-183|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:break ve;case 8:break gt;case 0:break pt;default:break ft}case 2:case 9:H=66;break d;case 11:return H=268435456,-2147483584;case 13:return H=-2147483648,-1879048128;case 25:return H=134217728,-2147483584;case 26:return H=67108864,-2147483584;case 1:case 6:break b;case 0:break r;case 3:case 4:case 5:case 7:case 8:case 10:case 12:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 27:case 28:case 29:break ve;case 30:}return H=1073741824,-1879048128}return H=0,134230016}H=1078984704;break d}if((0|t)==161)break He}break w}r=(0|t)==903,s=(t=(0|t)==894)?64:r?134217792:0,H=t?1073741824:r?67108864:0;break m}if((0|t)==1417)break je;if((0|t)!=1475)break a;break ne}H=1075838976;break A}H=-2143289344;break n}s=64,n=268435456;_e:switch(t-1548|0){case 15:break s;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 16:case 17:break a;case 0:break r;case 19:break _e;case 18:break R;default:break D}break c}if((r=t-1792|0)>>>0<6)break Gt;if(s=64,n=134217728,(-2&t)==1798)break r;n=67108864;Re:{_e:{je:switch(t-1800|0){default:switch(t-2040|0){case 1:break Re;case 0:break _e;default:break a}case 3:break a;case 0:break r;case 1:break je;case 2:case 4:break ne}H=1073741824;break t}H=268435456;break t}H=536870912;break n}r=(0|t)==2405,s=(t=(0|t)==2404)||r?268435520:0,H=t?-2143289344:r?16777216:0;break m}if(s=0,n=-2143289344,(0|t)!=3572)break a;break r}switch(s=64,t-3848|0){case 5:H=-2143289344;break t;case 6:H=16777216;break t;case 0:break r}if(t-3854>>>0<5)break r;if(s=0,n=268435456,(0|t)!=3860)break a;break r}if((r=t-4961|0)>>>0<4)break Dt;if(s=64,n=134217728,t-4965>>>0<2)break r;r=(0|t)==4968,s=(t=(0|t)==4967)||r?268435520:0,H=t?1073741824:r?16777216:0;break m}if(t-5867>>>0>=3)break a;break r}if(s=268435520,t-5941>>>0<2)break r;if((t=t-6100|0)>>>0>=7)break a;r=e[(t=83240+(t<<3)|0)>>2];break h}if(s=268435520,(-4&t)!=6824)break a;break r}if(s=64,(0|t)==7005)break r;if(s=268435520,(0|r)!=7006)break a;break r}if(t-7227>>>0<2)break R;if(s=64,t-7229>>>0<3||(s=268435520,(-2&t)==7294))break r;if(s=4096,(0|t)!=7379)break a;break r}H=33554432;break d}if((-8&t)==8224)break w;if(t-8242>>>0<3)break r;if(t-8240>>>0<9)break w;if((r=t-8251|0)>>>0<21)break Tt;break te}if((0|t)==11513){H=-2147483648;break A}if(s=0,n=1073741824,(-2&t)==11514)break r;if(n=-2147483648,(0|t)!=11518)break a;break r}switch(s=-1879048128,t-11822|0){case 4:case 6:H=268435456;break d;case 5:H=-2147483648;break d;case 7:H=67108864;break d;case 14:return H=-2147483648,-1879048128;case 19:return H=268435456,-2147483584;case 30:case 32:return H=0,-2147483584;case 0:break r}break w}if((0|t)==12349)break z;if((0|t)!=12539)break a;return H=0,16}return H=-2143289344,-1879048128}r=(0|t)==42239,s=(t=(0|t)==42238)?64:r?268435520:0,H=t?268435456:r?-2147483648:0;break m}Le:switch(t-42509|0){case 1:break i;case 0:break r;case 2:break Le;default:break a}break c}H=134217728;break t}if(t-43126>>>0<2)break R;if(s=268435520,t-43214>>>0>=2)break a;break r}if((0|t)==43463)break ne;if(s=268435520,(-2&t)!=43464)break a;break r}if(t-43613>>>0<3)break R;if(s=64,(0|t)==43743)break r;if(s=268435520,(-2&t)!=43760)break a;break r}if(s=268435520,(0|t)!=44011)break a;break r}s=268435520,n=541065216;de:switch(t-65281|0){case 1:case 6:return H=0,32;case 11:H=272629760;break t;case 13:H=-2143289344;break n;case 100:return H=0,16;case 25:H=138412032;break t;case 26:H=71303168;break t;case 30:H=1077936128;break n;case 96:break i;case 59:break y;case 0:break r;case 99:break de;default:break a}H=268435456;break t}s=(r=(0|t)==66512)>>>26|0,r=(t=(0|t)==66463)?64:r<<6;break V}if(s=64,(0|t)!=67871)break a;break r}if(s=268435520,(-2&t)==68182)break r;if(s=64,t-68336>>>0>=6)break a;break r}if(s=268435520,t-69461>>>0>=5)break a;break r}if(s=64,t-69705>>>0<5)break r;if(s=268435520,t-69822>>>0>=4)break a;break r}if(t-69953>>>0<2)break R;if((r=t-70085|0)>>>0<=26)break P;break ze}if((0|r)!=2)break R;break ne}if(s=268435520,t-70731>>>0<2)break r;n=(r=(0|t)==70747)>>>26|0,r=(t=(0|t)==70733)?64:r<<6,H=t?268435456:n;break o}switch(s=268435520,(-2&t)-71106|0){case 0:break r;case 2:break u}if(s=8192,t-71110>>>0<3)break r;if(s=268435520,t-71113>>>0>=15)break a;break r}if(s=268435520,t-71484>>>0>=3)break a;break r}if(s=268435520,t-72347>>>0<2)break r;if(s=64,t-72353>>>0>=2)break a;break r}if(s=268435520,t-72769>>>0<2)break r;s=(r=(0|t)==72817)>>>26|0,r=(t=(0|t)==72771)?64:r<<6;break V}if(s=64,n=134217728,t-74865>>>0<2)break r;if(n=0,t-74864>>>0>=5)break a;break r}r=(0|t)==93848?268435520:0,r=(t=(0|t)==93847)?64:r;break F}if(s=268435520,(-2&t)==92782)break r;if(n=-2147483648,(0|t)!=92917)break a;break r}if((0|t)==1748)break i;break a}if(!(1<<r&100663555))break ze;break R}break ne;case 23:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=11775){if((0|r)<=8959){if(r)break Q;break w}if((0|r)==8960)break G;if((0|r)==9984)break S;if((0|r)!=10496)break a;break H}if((0|r)<=64767){if((0|r)==11776)break D;if((0|r)!=12288)break a;if((t=t-12300|0)>>>0<=17&&(s=-2147483616,1<<t&131077))break r;break w}if((0|r)==64768)break P;if((0|r)==65024)break u;if((0|r)!=65280)break a;if(s=32,(0|t)==65378)break r;break a}if((0|r)!=8192)break a;switch(s=-2147483616,t-8218|0){case 1:case 2:case 3:break a;case 0:case 4:break r}switch(t-8317|0){default:if((0|t)!=8261)break a;break w;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break a;case 0:case 16:}break y}switch(s=-2147483520,t-8968|0){case 1:break a;case 0:case 2:break r}if((0|t)!=9001)break a;return H=0,-2139095040}if(s=-2147483520,(0|t)==10181)break r;break xe}return H=0,(0|t)==11842?-2147483616:-2147483648}if(s=-2147483648,(0|t)!=64831)break a;break r}s=(t=!(t-65089&-3))>>>27|0,t<<=5;break x;case 24:s=(t=t>>>0<256)>>>1|0,t<<=31;break x;case 25:u:{P:{D:{S:{G:{Q:{q:{U:{if((0|(r=-256&t))<=12287){if((0|r)<=767){if(!r)break U;if((0|r)!=512)break u;if(t-751>>>0>=17)break q;break g}if((0|r)==768)break Q;if((0|r)!=7936)break u;switch(s=4096,t-8125|0){case 0:case 2:case 3:case 4:case 16:case 17:case 18:case 32:case 33:case 34:case 48:case 49:case 50:case 64:case 65:break r;default:break u}}if((0|r)<=43775){if((0|r)==12288)break G;if((0|r)!=42752||(s=4096,(-2&t)!=42784))break u;break r}if((0|r)==43776)break S;if((0|r)==65280)break D;if(s=0,n=78,(0|r)!=127744)break u;break r}switch(t-168|0){default:s=-2147479424;U:switch(t-94|0){case 0:break r;case 2:break U;default:break u}return H=0,-2147479552;case 0:case 7:break g;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:case 13:case 14:case 15:break u;case 12:case 16:}break g}if((0|t)==749|t-741>>>0<7)break g;if(t-706>>>0>=4)break P;break g}if((t=t-885|0)>>>0>16||(s=4096,!(1<<t&98305)))break u;break r}if(s=67112960,t-12443>>>0>=2)break u;break r}if(s=4096,(0|t)!=43867)break u;break r}switch(s=4224,t-65342|0){default:if((0|t)!=65507)break u;break;case 0:break r;case 1:break u;case 2:}break g}if(s=4096,t-722>>>0<14)break r}break a;case 26:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=9471){if((0|r)<=8447){if(r)break u;break w}if((0|r)==8448)break Q;if((0|r)==8704)break G;if(s=-2147483648,(0|r)!=8960)break a;break r}if((0|r)<=10495){if((0|r)==9472)break S;if((0|r)==9728)break D;if((0|r)==9984)break w;break a}if((0|r)==10496)break P;if((0|r)==10752)break w;if(s=-2147483648,(0|r)!=11008)break a;break r}if((0|t)==8472)return H=0,67108864;if((0|t)==8596)break K;if(s=-2147483648,t>>>0<=8591)break a;break r}if(s=-2147483640,(0|t)==8722)break r;r=-2147483648,H=(t=t-8942>>>0<4)?33554432:0;break o}if(s=-2147483648,n=130,t-9723>>>0<2)break r;r=-2147483648,H=(t=t-9725>>>0<2)?134:0;break o}if(s=-2147483648,n=128,(0|t)==9839)break r;break w}if(s=-2147483648,n=130,(-2&t)==10548)break r;r=-2147483648,H=(t=(0|t)==10626)?134217728:0;break o}if((0|r)==8192)break Ye;break a;case 27:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{k:{Ae:{ae:{Y:{de:{fe:{we:{Ie:{Ne:{ye:{if((0|(r=-256&t))<=12287){if((0|r)<=9727){if((0|r)<=8959){if(!r)break ye;if((0|r)!=8448)break a;switch(s=0,n=130,t-8482|0){case 7:break y;case 0:break r;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:break fe;case 12:break Ie;default:break Ne}}if((0|r)==8960)break de;if((0|r)==9216)break Y;if((0|r)!=9472)break a;switch(s=-2147483520,(-2&t)-9632|0){case 0:break r;case 10:break K;default:break ae}}if((0|r)<=11007){if((0|r)==9728)break Ae;if((0|r)==9984)break k;if(s=-2147483648,(0|r)!=10240)break a;break r}if((0|r)==11008)break ue;if((0|r)==11776)break ce;if((0|r)!=12032)break a;if(s=1048576,t>>>0<12246)break r;switch(s=262144,(-2&t)-12272|0){case 0:break r;case 2:break u;default:break oe}}if((0|r)<=127999){if((0|r)<=127231){if((0|r)==12288)break se;if((0|r)==12800)break ie;if((0|r)!=126976)break a;r=(0|t)==127183,s=0,H=(t=(0|t)==126980)||r?134:128;break m}if((0|r)==127232)break re;if((0|r)==127488)break U;if((0|r)!=127744)break a;if(t>>>0>=127777)break q;break L}if((0|r)<=128767){if((0|r)==128e3)break Q;if((0|r)==128256)break G;if((0|r)!=128512)break a;if((r=t-128581|0)>>>0<11)break bt;break Oe}if((0|r)==128768)break S;if((0|r)==129280)break D;if((0|r)!=129536)break a;H=128;break A}r=(0|t)==174,s=-2147483648,H=(t=(0|t)==169)||r?130:0;break m}switch(t-8616|0){case 0:break w;case 1:case 2:break we;default:break fe}}return H=0,67108864}return H=130,-2147483520}if(s=-2147483520,t-8597>>>0<5)break r;if(t-8604>>>0<18)break H;if((r=t-8624|0)>>>0<8)break Mt;break Qe}if(t>>>0<8968)break w;if((0|(r=-2&t))==8986)break l;if(t-8972>>>0<20|t-8994>>>0<6)break w;if((0|t)==9e3)break K;if(t-9003>>>0<81)break w;if(s=-2147483648,n=128,(0|t)==9096)break r;if(t-9085>>>0<30)break w;if(s=-2147483520,n=0,(0|r)==9140)break r;switch(t-9143|0){case 0:case 25:break r;case 24:break K}if(t-9140>>>0<40)break w;if((0|t)==9186)break r;if((r=t-9193|0)>>>0<4)break l;switch(s=-2147483648,n=134,t-9200|0){case 0:case 3:break r}if(r>>>0<11)break K;if(n=130,t-9208>>>0<3)break r;if(n=0,t>>>0<=9186)break a;break r}if(s=-2147483648,t-9216>>>0<75||(s=33792,n=130,(0|t)==9410)||(n=0,t-9398>>>0<26))break r;if(s=17408,t-9424>>>0>=26)break a;break r}if(t-9646>>>0<8)break H;if(n=130,(0|t)==9654)break r;if((-4&t)==9660)break H;switch(t-9664|0){case 0:break r;case 6:case 7:case 10:case 11:case 15:case 16:case 17:case 18:case 19:case 34:case 36:break H}return H=0,t-9703>>>0<6?-2147483520:-2147483648}Ae:switch((-16&t)-9728>>>4|0){case 0:if(t>>>0<9733)break K;s=-2147483520,n=128;ae:switch(t-9733|0){case 0:break r;case 9:break ae;case 1:break H;default:break B}break K;case 2:if((r=t-9760|0)>>>0<11)break vt;if(s=-2147483648,n=130,t>>>0<=9773)break B;break r;case 3:if(s=-2147483648,n=130,t-9784>>>0>=3)break B;break r;case 4:switch(s=-2147483520,n=130,t-9792|0){case 0:case 2:break r}if(s=-2147483648,n=134,t>>>0<=9799)break B;break r;case 5:if(s=-2147483648,n=134,t>>>0<9812)break r;if(n=130,(0|t)!=9823)break B;break r;case 6:if((0|t)==9734)break H;if((0|t)==9824)return H=130,-2147483520;if(s=-2147483520,n=128,t-9825>>>0<2)break r;if((r=t-9827|0)>>>0<6)break _t;break Ce;case 8:if(s=-2147483648,t>>>0<=9861)break B;break r;case 10:switch(s=-2147483648,n=130,t-9888|0){case 1:break l;case 0:break r}if(n=134,(-2&t)!=9898)break B;break r;case 11:if(s=-2147483648,n=130,(-2&t)==9904)break r;if(n=134,t-9917>>>0>=2)break B;break r;case 12:if((-2&t)==9924)break l;s=-2147483648,n=130;ae:switch(t-9928|0){case 0:case 7:break r;case 6:break ae;default:break B}break l;case 14:r=(0|t)==9962,s=-2147483648,H=(t=(0|t)==9961)?130:r?134:128;break m;case 13:break It;case 9:break yt;case 15:break Ae;case 7:break kt;case 1:break xt;default:break B}if((0|t)==9972|t>>>0<9970)break K;if(s=-2147483648,n=134,t>>>0<9974||(0|t)!=9974&&(n=130,t>>>0<9977))break r;if((t=t-9977|0)>>>0<5)break wt;break B}k:{Ae:{ae:{Y:{de:switch((-16&t)-9984>>>4|0){case 0:if(s=0,n=130,(0|t)==9986||(n=128,t>>>0<9989)||(n=134,(0|t)==9989))break k;switch(n=150,(-2&t)-9994|0){case 0:break k;case 2:break ae}if(n=130,t-9992>>>0<6)break k;r=(0|t)==9999,s=0,n=(t=(0|t)==9998)?128:r?130:0;break k;case 1:if(s=0,n=128,t>>>0<10002)break k;if((t=t-10002|0)>>>0>11||(n=130,!(1<<t&2069)))break Y;break k;case 2:r=(0|t)==10024,s=0,n=(t=(0|t)==10017)?130:r?134:0;break k;case 4:s=0,n=130;fe:switch(t-10052|0){case 0:case 3:break k;case 8:case 10:break fe;default:break Y}n=134;break k;case 5:if(s=0,n=1073741958,t-10067>>>0<2)break k;n=(t=t-10069&-3)?0:536871046;break k;case 6:if((r=t-10082|0)>>>0<3)break Ae;if(s=0,n=128,t>>>0<=10084)break Y;break k;case 9:if(s=0,n=134,t-10133>>>0>=3)break Y;break k;case 10:if(s=0,n=130,(0|t)!=10145)break Y;break k;case 11:r=(0|t)==10175,s=0,n=(t=(0|t)==10160)||r?134:0;break k;case 3:break de;default:break Y}if(s=0,n=130,t-10035>>>0<2)break k}s=0,n=0;break k}n=146;break k}s=e[(t=83992+(r<<3)|0)>>2],n=e[t+4>>2]}return H=n,-2147483648|s}if(s=-2147483648,n=130,t-11013>>>0<3||(n=134,t-11035>>>0<2))break r;r=(0|t)==11093,s=-2147483648,H=(t=(0|t)==11088)||r?134:0;break m}if(t-11904>>>0>=26)break P;return H=0,1048576}if(t-12276>>>0>=8)break a;break r}if((t=t-12306|0)>>>0>14||(s=-2147483648,!(1<<t&16387)))break a;break r}r=0,H=(t=t-12951&-3)?0:130;break o}if(s=0,n=128,(0|t)==127279)break r;if(t-127280>>>0<26||t-127312>>>0<26)return H=0,33792;if((r=t-127344|0)>>>0<=15&&(s=33792,n=130,1<<r&49155)||(s=33792,n=0,r>>>0<26))break r;if((0|t)==127374)break L;if(s=0,n=134,t-127377>>>0<10)break r;if(n=102,t>>>0<=127461)break a;break r}s=0,n=134;U:{switch(t-127489|0){case 0:case 25:break r;case 1:break z;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:break U}switch(t-127535|0){case 0:break r;case 8:break z;default:break U}}if((-2&t)==127568|t-127538>>>0<9)break r;if(n=128,t>>>0<=127583)break a;break r}if((0|t)==127777)break z;if(t-127789>>>0<9|t-127799>>>0<70)break L;if((0|t)==127877)break X;if(t-127870>>>0<22)break L;if(t-127780>>>0<112)break z;switch(s=0,n=130,t-127894|0){case 44:case 45:case 46:case 49:break X;case 0:case 1:case 3:case 4:case 5:break r}if(t-127904>>>0<42)break L;if(n=150,(0|t)==127946||(n=146,t-127947>>>0<2))break r;if(t-127951>>>0<5)break L;if(n=134,t-127968>>>0<17||(n=130,t-127902>>>0<83))break r;if((r=t-127987|0)>>>0<5)break Ct;break Ke}switch(s=0,n=130,t-128063|0){case 0:case 2:break r}if((0|t)==128124|(-5&t)-128129>>>0<3|(0|t)==128110|t-128112>>>0<9||(-2&t)==128066|t-128102>>>0<4|t-128070>>>0<11)break X;switch(t-128253|0){case 1:H=128;break A;case 0:break z}if(n=150,(0|t)==128170)break r;break L}if(t>>>0<128318)break L;if(s=0,t>>>0<128326)break r;if(t-128329>>>0<2)break z;if(t-128331>>>0<4|t-128336>>>0<24)break L;if(t-128367>>>0<2)break z;if((-2&t)==128372){H=146;break A}if(t-128371>>>0<7)break z;if(n=150,!(r=t-128378|0))break r;if((0|r)==13|t-128394>>>0<4)break z;if(n=146,(0|t)==128400||(n=150,t-128405>>>0<2))break r;switch(n=134,t-128420|0){case 0:break r;case 1:case 4:case 13:case 14:case 24:case 30:case 31:case 32:case 45:case 46:case 47:case 56:case 57:case 58:case 61:case 63:case 68:case 75:case 79:case 86:break z}t=t>>>0>128506,r=0;break p}if(s=0,n=128,t-128981>>>0>=4)break a;break r}if(t>>>0<129292)break a;if(t-129328>>>0<10)break X;switch(s=0,n=150,t-129304|0){case 35:break a;case 0:case 1:case 2:case 3:case 4:case 6:case 7:case 14:break r}if(t-129341>>>0<2)break X;if(n=0,(0|t)==129350||(n=198,(-4&t)==129456))break r;if((r=t-129461|0)>>>0<5)break mt;break ht}if(s=1048576,t-11931>>>0<89)break r;break a}return H=0,524288;case 29:return H=16777216,1073741825;case 28:break r;case 30:break Ut;default:break a}return H=0,(0|t)==32?1073741825:1}if(!(1079>>>r&1))break ge;r=e[(t=81344+(r<<3)|0)>>2];break h}if(557553>>>r&1)break y;if((-4&t)!=8508)break Ee;break r}if(!(207>>>r&1))break me;break f}if(s=1024,!(1017>>>r&1))break Be;break r}if(s=1024,!(32895>>>r&1))break Te;break r}if(s=1024,!(55>>>r&1))break Pe;break r}if(s=1024,!(3087>>>r&1))break Se;break r}if((t=t-71453|0)>>>0>=15)break a;r=e[(t=82312+(t<<3)|0)>>2];break h}if(!(49023>>>r&1))break Ge;r=e[(t=82432+(r<<3)|0)>>2];break h}if(!(514623>>>r&1))break J;r=e[(t=82664+(r<<3)|0)>>2];break h}r=e[(t=83160+(r<<3)|0)>>2];break h}if(s=268435520,!(197>>>r&1))break Fe;break r}r=e[(t=83208+(r<<3)|0)>>2];break h}if((t=t-6145|0)>>>0>=10)break a;r=e[(t=83296+(t<<3)|0)>>2];break h}if(!(1077711>>>r&1))break te;r=e[(t=83376+(r<<3)|0)>>2];break h}if(!(159>>>r&1))break be;r=e[(t=83544+(r<<3)|0)>>2];break h}if((t=t-121479|0)>>>0>=4)break a;r=e[(t=83608+(t<<3)|0)>>2];break h}if(!(195>>>r&1))break Qe;break H}if((t=t-9745|0)>>>0>=13)break B;r=e[(t=83640+(t<<3)|0)>>2];break h}if(1101>>>r&1)break K;if(s=-2147483648,n=130,t>>>0<=9773)break B;break r}if(!(45>>>r&1))break Ce;r=e[(t=83744+(r<<3)|0)>>2];break h}if((t=t-9851|0)>>>0>=5)break B;r=e[(t=83792+(t<<3)|0)>>2];break h}if((t=t-9874|0)>>>0>=11)break B;r=e[(t=83832+(t<<3)|0)>>2];break h}if((t=t-9937|0)>>>0>=4)break B;r=e[(t=83920+(t<<3)|0)>>2];break h}r=e[(t=83952+(t<<3)|0)>>2];break h}if(!(23>>>r&1))break Ke;r=e[(t=84016+(r<<3)|0)>>2];break h}if(s=0,n=150,!(1991>>>r&1))break Oe;break r}if(n=150,27>>>r&1)break r}r=0,H=(t=t-129489>>>0<13)?150:134;break o}t=t-127992>>>0<3,r=0;break p}if(t-9837>>>0<2)break r}H=128;break d}if(t-8623>>>0<13)break w;if(t-8636>>>0<18)break H;if((r=t-8656|0)>>>0<22&&(n=0,3157995>>>r&1)||(s=-2147483648,n=0,t-8661>>>0<31))break r;break a}if(t>>>0<128592)break L;if(s=0,n=0,t>>>0<128640)break r;if(!((r=t-128675|0)>>>0>29|!(1<<r&537788417)))break X;if(t>>>0<128710)break L;if(n=150,(0|t)==128716)break r;if(t-128715>>>0<5)break z;if(t-128720>>>0<3)break L;if(!((r=t-128736|0)>>>0>=10|!(575>>>r&1)))break z;if(n=134,t-128747>>>0<2)break r;switch(n=130,t-128752|0){case 0:case 3:break r}t=t-128756>>>0<6,r=0;break p}switch(s=-2147483648,t-8260|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:break a;case 0:case 14:break r}if((0|(t=t-8315|0))!=16&&t)break a;return H=0,8}if(s=268435520,n=1073741824,(0|t)!=69955)break a;break r}if(t-8266>>>0<8)break w;if(s=-2147483640,(0|t)==8275)break r;if(s=-2147483648,t-8277>>>0>=10)break a;break r}H=542113792;break d}if(s=-2147483648,n=0,t-65093>>>0<2||(s=64,n=268435456,(0|l)==65104))break r;s=268435520,n=-2147483648;be:switch(t-65106|0){case 3:H=134217728;break t;case 5:H=536870912;break n;case 4:break c;case 2:break s;case 0:break r;case 15:case 22:break be;default:break a}break y}if((0|t)==2142)break ne;if(s=64,t-2096>>>0<15)break r;break a}if(s=1024,t-72850>>>0<22)break r;if((t=t-72874|0)>>>0>=13)break a;r=e[(t=82560+(t<<3)|0)>>2];break h}if(s=4096,t-71103>>>0<2)break r;if(s=1024,(-2&t)!=71132)break a;break r}if((0|t)==70726)break g;if(s=4096,(-2&t)!=70850)break a;break r}if(s=4096,t-68325>>>0>=2)break a;break r}if((0|t)==6109)break g;if(s=4096,t-6089>>>0>=11)break a;break r}switch(t-3959|0){case 0:case 2:return H=0,8389632}if((0|r)==3968|t-3953>>>0<14)break f;if(!((r=t-3970|0)>>>0>=6|!(55>>>r&1)))break g;if(t-3981>>>0<11)break f;if(s=1024,t-3993>>>0<36)break r;if(s=4096,(0|t)!=4038)break a;break r}if(t-3655>>>0<6)break g;if(!((r=t-3761|0)>>>0>11|!(1<<r&3577)))break f;switch(s=1024,t-3661|0){case 1:break g;case 0:break r}if(s=4096,t-3784>>>0<5)break r;if(s=1024,(0|t)!=3789)break a;break r}if(t-1770>>>0<3)break r;if(s=1024,(0|t)!=1773)break a;break r}if((-2&t)==73028)break g;switch(s=1024,t-73104|0){default:if((0|t)!=73031)break a;break r;case 2:case 3:case 4:case 6:break a;case 0:case 1:case 5:break r;case 7:}break g}if((t=t-8492|0)>>>0>=30)break a;r=e[(t=81704+(t<<3)|0)>>2];break h}s=0;break O}n=(r=(-3&t)==43712)>>>20|0,s=r<<12}if((0|(A=-65536&t))==131072)break We;if((0|A)==65536)break he;if(r=s,l=n,A)break pe}if(t-13312>>>0<6582||t-19968>>>0<20976)break e;if(A=2048,t-63744>>>0<366)return H=l,2048|r;if(s=r,n=l,t-64112>>>0>=106)break pe;break j}if(A=2099200,t-183984>>>0<7473|t-178208>>>0<5762|t-177984>>>0<222|t-131072>>>0<42711||t-173824>>>0<4149||(A=2048,t-194560>>>0<542))break j;break pe}if(A=2048,t-110960>>>0<396|t-94208>>>0<6125|t-100352>>>0<755)break j}A=0}return H=n,s|A}if((-4&t)==8508)break y;if(s=128,!(t-8517>>>0<3)&&(s=16777344,(-2&t)!=8520))break a}H=n;break m}r=(t=t>>>0>131069)?65536:0,H=t?0:128;break o}if((0|t)==11776)break w}H=0;break A}H=0;break d}return H=0,4194304}return H=0,128}return H=0,16777344}return H=0,4096}return H=0,1024}return H=0,-2147483520}return H=0,t-10214>>>0<10?-2147483520:-2147483648}H=0;break n}H=0;break t}H=130;break A}H=130;break d}H=134;break A}return H=150,0}H=0;break o}H=t?0:n;break o}return H=r,t}return 131072}return H=0,16777216}H=t?0:s;break o}return H=n,t}return H=s,t}H=t?0:r;break m}return H=0,8192}H=e[t+4>>2];break o}H=t?8388608:0;break o}return s}return H=0,-2147483616}H=t?134:128}return r}H=134}return-2147483648}return 0}H=1073741824;break n}H=-2147483648}return 268435520}H=67108864}return 64}return H=l,2099200|r}function ze(t){var r,s=0,n=0,A=0,l=0,g=0;(r=wr(8244))&&(e[r+328>>2]=2,f[132848]=0,e[r+684>>2]=0,e[r+688>>2]=0,e[r+320>>2]=0,e[r+324>>2]=0,f[r+268|0]=0,f[r+228|0]=0,e[r+8216>>2]=0,e[r+8220>>2]=0,e[r+224>>2]=104944,e[r+216>>2]=383,e[r+220>>2]=96,Yt(r+344|0,0,292),e[r+8196>>2]=0,e[(s=r+8188|0)>>2]=0,e[s+4>>2]=0,e[r+8180>>2]=0,e[r+8184>>2]=0,f[r+460|0]=22,f[r+461|0]=129,f[r+466|0]=38,f[r+462|0]=38,f[r+463|0]=36,f[r+464|0]=22,f[r+465|0]=224,f[r+456|0]=22,f[r+457|0]=22,f[r+458|0]=44,f[r+459|0]=22,f[r+454|0]=46,f[r+455|0]=129,f[r+446|0]=22,f[r+447|0]=38,f[r+448|0]=28,f[r+449|0]=193,f[r+450|0]=38,f[r+451|0]=22,f[r+452|0]=46,f[r+453|0]=46,f[r+441|0]=129,f[r+442|0]=38,f[r+443|0]=22,f[r+444|0]=38,f[r+445|0]=193,e[r+332>>2]=104912,e[r+336>>2]=104916,e[r+340>>2]=105232,f[r+296|0]=18,f[r+297|0]=18,I[r+304>>1]=182,I[r+306>>1]=140,f[r+298|0]=20,I[r+308>>1]=220,I[r+310>>1]=220,I[r+312>>1]=220,f[r+299|0]=20,f[r+300|0]=20,I[r+314>>1]=240,f[r+301|0]=22,I[r+316>>1]=260,I[r+318>>1]=280,f[r+302|0]=22,f[r+303|0]=20,s=Yt(r,0,212),e[s+200>>2]=20,e[s+192>>2]=25966,e[s+196>>2]=500,e[s+80>>2]=95,e[s+16>>2]=1,e[s+20>>2]=3,e[s+8>>2]=2,e[s+52>>2]=19,f[s+168|0]=3,e[s+92>>2]=2,e[s+72>>2]=4,e[s+40>>2]=115,e[s+44>>2]=95,e[s+140>>2]=105244,CA(s,201),e[s+120>>2]=2,e[s+124>>2]=44,e[s+164>>2]=100,e[s+128>>2]=46,e[s+132>>2]=14,e[s+112>>2]=1227133512,e[s+116>>2]=49,e[s+104>>2]=1,n=e[26313],e[s+636>>2]=e[26312],e[s+640>>2]=n,n=e[26315],e[s+644>>2]=e[26314],e[s+648>>2]=n,n=e[26317],e[s+652>>2]=e[26316],e[s+656>>2]=n,n=e[26319],e[s+660>>2]=e[26318],e[s+664>>2]=n,n=e[26321],e[s+668>>2]=e[26320],e[s+672>>2]=n,n=e[26323],e[s+676>>2]=e[26322],e[s+680>>2]=n,n=c[104928]|c[104929]<<8,f[s+160|0]=n,f[s+161|0]=n>>>8,n=c[104924]|c[104925]<<8|c[104926]<<16|c[104927]<<24,f[s+156|0]=n,f[s+157|0]=n>>>8,f[s+158|0]=n>>>16,f[s+159|0]=n>>>24),A=Qr(r+228|0,t),s=0;e:{t:if(n=c[0|t]){for(;s=(n<<24>>24)+(s<<8)|0,n=c[0|(t=t+1|0)];);s:{n:{i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{W:{E:{_:{T:{F:{X:{L:{K:{z:{ne:{R:{xe:{H:{f:{g:{$:{y:{ee:{w:{a:{Ve:{Z:{r:{ge:{j:{pe:{he:{We:{le:{O:{Me:{v:{Ee:{J:{me:{Be:{Ue:{Te:{Pe:{De:{Se:{Ge:{Fe:{be:{He:{te:{ze:{Ye:{Oe:{Qe:{B:{Ce:{if((0|s)<=28008){if((0|s)<=26464){if((0|s)<=25696){switch(s-24934|0){case 20:break o;case 1:case 2:case 3:case 4:case 5:case 6:case 9:case 10:case 11:case 14:case 15:case 16:case 17:case 18:case 19:break t;case 8:break J;case 12:break Fe;case 7:break be;case 0:break He;case 13:break Ce}switch(s-25189|0){case 1:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 11:case 12:case 13:break t;case 14:break ge;case 2:break Se;case 0:break Ge;case 9:break Ce}switch(s-25441|0){case 18:break x;case 0:break J;case 24:break Pe;default:break t}}switch(s-25964|0){case 1:case 4:case 5:case 6:break t;case 8:break Me;case 9:break Ee;case 7:break J;case 3:break me;case 2:break Be;case 0:break Qe}switch(s-26209|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break t;case 17:break le;case 8:break O;case 0:break v}switch(s-25697|0){case 4:break Ue;case 0:break Te;default:break t}}if((0|s)<=27488){switch(s-26729|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 13:case 14:case 15:break t;case 16:break Ve;case 12:break Z;case 11:break r;case 9:break ge;case 0:break j}switch(s-26977|0){case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 15:case 16:case 17:break t;case 19:break y;case 18:break ee;case 3:break w;case 14:break a;case 0:break J}switch(s-26465|0){case 20:break j;case 13:break pe;case 0:case 3:break he;default:break t}}switch(s-27489|0){case 13:break p;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 12:case 15:case 16:case 17:case 18:case 19:case 21:case 22:case 23:break t;case 24:break ne;case 20:break R;case 14:break xe;case 11:break H;case 10:break f;case 0:break g}switch(s-27745|0){case 19:break K;case 0:break z;case 21:break Ye;default:break t}}if((0|s)<=29792){if((0|s)<=28768){switch(s-28009|0){case 3:break p;case 11:break X;case 2:break L;case 1:case 4:case 5:case 6:case 7:case 8:case 12:case 13:case 14:case 15:break t;case 10:break w;case 9:break j;case 0:case 16:break te}switch(s-28258|0){case 0:break T;case 10:break F;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:break t;case 3:break j}switch(s-28525|0){case 0:break _;case 5:break j;default:break t}}if((0|s)<=29539){switch(s-28769|0){case 19:break W;case 11:break E;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 20:case 21:case 22:case 23:break t;case 0:break j;case 24:break te}switch(s-29295|0){case 6:break N;case 0:break V;case 1:case 2:case 3:case 4:case 5:break t}if((0|s)==29045)break te;break t}switch(s-29540|0){case 19:break b;case 18:break m;case 13:break C;case 8:break M;case 5:break I;case 7:break x;case 14:break ge;case 0:break A;default:break t}}if((0|s)>6514801)break B;if((0|s)<=30058)switch(s-29793|0){case 19:break l;case 17:break o;case 0:case 4:break p;case 13:break b;case 7:break te;default:break t}if((0|s)<=30312)switch(s-30059|0){case 0:break d;case 15:break te;case 7:break A;default:break t}if((0|s)==30313)break c;if((0|s)==31336)break i;if((0|s)!=6451321)break t}if(e[r+296>>2]=303174162,e[r+300>>2]=370545684,e[r+600>>2]=2432,e[r+8>>2]=0,e[r+12>>2]=65540,e[r+100>>2]=e[r+96>>2],t=e[25889],e[r+304>>2]=e[25888],e[r+308>>2]=t,t=e[25891],e[r+312>>2]=e[25890],e[r+316>>2]=t,Qn(r),f[r+345|0]=2|c[r+345|0],f[r+406|0]=16|c[r+406|0],f[r+407|0]=16|c[r+407|0],f[r+408|0]=16|c[r+408|0],f[r+409|0]=16|c[r+409|0],f[r+410|0]=16|c[r+410|0],f[r+411|0]=16|c[r+411|0],f[r+412|0]=16|c[r+412|0],f[r+413|0]=16|c[r+413|0],f[r+414|0]=16|c[r+414|0],f[r+415|0]=16|c[r+415|0],f[r+416|0]=16|c[r+416|0],f[r+417|0]=16|c[r+417|0],f[r+418|0]=16|c[r+418|0],f[r+419|0]=16|c[r+419|0],f[r+420|0]=16|c[r+420|0],f[r+456|0]=4|c[r+456|0],f[r+457|0]=4|c[r+457|0],e[r+112>>2]=613567144,e[r+104>>2]=16,(0|s)!=6451321)break e;e[r+104>>2]=1,e[r+108>>2]=512,s=6451321;break e}if((0|s)>7364975)break ze;if((0|s)>6840682)break Oe;if((0|s)==6514802)break De;if((0|s)==6516078)break i;if((0|s)!=6779491)break t}if(e[r+600>>2]=896,e[r+328>>2]=8,e[r+296>>2]=336858127,e[r+300>>2]=353768980,e[r+332>>2]=103632,t=e[25905],e[r+304>>2]=e[25904],e[r+308>>2]=t,t=e[25907],e[r+312>>2]=e[25906],e[r+316>>2]=t,Yt(r+344|0,0,256),f[r+388|0]=129,f[r+389|0]=129,f[r+390|0]=129,f[r+391|0]=129,f[r+420|0]=129,f[r+421|0]=129,f[r+422|0]=129,f[r+423|0]=129,f[r+360|0]=129,f[r+392|0]=129,f[r+393|0]=129,f[r+417|0]=129,f[r+418|0]=129,f[r+419|0]=129,f[r+420|0]=129,f[r+408|0]=6,f[r+409|0]=4,f[r+410|0]=6,f[r+411|0]=6,f[r+412|0]=6,f[r+413|0]=193,f[r+414|0]=6,f[r+415|0]=6,f[r+406|0]=6,f[r+407|0]=129,f[r+398|0]=4,f[r+399|0]=193,f[r+400|0]=6,f[r+401|0]=193,f[r+402|0]=6,f[r+403|0]=4,f[r+404|0]=4,f[r+405|0]=4,f[r+394|0]=4,f[r+395|0]=4,f[r+396|0]=4,f[r+397|0]=193,e[r+44>>2]=130,e[r+8>>2]=2,e[r+12>>2]=6,e[r+16>>2]=0,e[r+20>>2]=2,e[r+104>>2]=264,e[r+108>>2]=6146,f[r+391|0]=193,f[r+389|0]=193,f[r+390|0]=193,f[r+421|0]=193,e[r+100>>2]=e[r+96>>2],f[r+416|0]=4|c[r+416|0],(0|s)!=6779491)break e;e[r+40>>2]=1,s=6779491;break e}if((0|s)==6840683)break We;if((0|s)==6972015)break $;if((0|s)!=7107687)break t}e[r+296>>2]=134875662,e[r+300>>2]=252968960,e[r+328>>2]=5,f[r+169|0]=1,e[r+132>>2]=33,e[r+104>>2]=99336,e[r+8>>2]=0,e[r+12>>2]=262182,t=e[26069],e[r+304>>2]=e[26068],e[r+308>>2]=t,t=e[26071],e[r+312>>2]=e[26070],e[r+316>>2]=t;break e}if((0|s)<=7564649){if((0|s)==7364976)break J;if((0|s)==7435619)break te;if((0|s)!=7563374)break t;e[r+148>>2]=1,e[r+112>>2]=24,e[r+104>>2]=1,e[r+100>>2]=e[r+96>>2],s=7563374;break e}if((0|s)==7564650)break h;if((0|s)==7959909)break i;if((0|s)!=1885958500)break t}e[r+104>>2]=0;break e}e[r+4>>2]=48,e[r+8>>2]=0,e[r+144>>2]=1,e[r+104>>2]=16779472,e[r+32>>2]=1,e[r+24>>2]=1,t=e[25881],e[r+304>>2]=e[25880],e[r+308>>2]=t,t=e[25883],e[r+312>>2]=e[25882],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=24934;break e}e[r+600>>2]=4608,e[r+296>>2]=303173650,e[r+300>>2]=303174162,e[r+8>>2]=0,e[r+12>>2]=36,e[r+104>>2]=1024,e[r+100>>2]=e[r+96>>2],e[r+40>>2]=1,t=e[25865],e[r+304>>2]=e[25864],e[r+308>>2]=t,t=e[25867],e[r+312>>2]=e[25866],e[r+316>>2]=t,s=24941;break e}for(e[r+600>>2]=1536,e[r+224>>2]=0,e[r+216>>2]=1631,e[r+220>>2]=1536,e[r+104>>2]=2884720,e[r+328>>2]=7,e[r+40>>2]=1,oe=s=oe-16|0,e[s+12>>2]=-1,t=89684;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=1|c[0|l]),t=t+A|0,n;);for(e[s+12>>2]=-1,t=89743;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=2|c[0|l]),t=t+A|0,n;);for(e[s+12>>2]=-1,t=89795;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=4|c[0|l]),t=t+A|0,n;);for(e[s+12>>2]=-1,t=89941;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=16|c[0|l]),t=t+A|0,n;);for(e[s+12>>2]=-1,t=90045;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=32|c[0|l]),t=t+A|0,n;);for(e[s+12>>2]=-1,t=90045;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=8|c[0|l]),t=t+A|0,n;);for(e[s+12>>2]=-1,t=90045;A=Hr(s+12|0,t),(0|(n=e[s+12>>2]))>=33&&(f[0|(l=(r+n|0)-1192|0)]=64|c[0|l]),t=t+A|0,n;);oe=s+16|0,s=24946;break e}e[r+600>>2]=1056,e[r+12>>2]=34,e[r+216>>2]=1118,e[r+220>>2]=1072,Yt(r+344|0,0,256),f[r+406|0]=4,f[r+366|0]=4,f[r+367|0]=4,f[r+369|0]=4,f[r+370|0]=4,f[r+371|0]=4,f[r+372|0]=4,f[r+361|0]=4,f[r+362|0]=4,f[r+363|0]=4,f[r+364|0]=4,f[r+373|0]=4,f[r+380|0]=4,f[r+381|0]=4,f[r+382|0]=4,f[r+383|0]=4,f[r+375|0]=4,f[r+376|0]=4,f[r+377|0]=4,f[r+378|0]=4,f[r+384|0]=4,f[r+360|0]=129,e[r+328>>2]=6,e[r+296>>2]=134744588,e[r+300>>2]=286261248,e[r+40>>2]=1,e[r+8>>2]=0,e[r+104>>2]=1032,e[r+108>>2]=66,t=e[25885],e[r+304>>2]=e[25884],e[r+308>>2]=t,t=e[25887],e[r+312>>2]=e[25886],e[r+316>>2]=t,s=25189;break e}Zn(r),e[r+328>>2]=6,e[r+56>>2]=2,e[r+36>>2]=263,e[r+40>>2]=1074,e[r+124>>2]=32,e[r+104>>2]=184554728,e[r+8>>2]=2,f[r+386|0]=64&c[r+386|0]|129,s=25191;break e}e[r+12>>2]=262182,e[r+40>>2]=1,s=6514802;break e}e[r+328>>2]=14,e[r+296>>2]=303173393,e[r+300>>2]=336986112,e[r+104>>2]=1024,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=22,e[r+44>>2]=120,t=e[25893],e[r+304>>2]=e[25892],e[r+308>>2]=t,t=e[25895],e[r+312>>2]=e[25894],e[r+316>>2]=t,f[r+463|0]=64&c[r+463|0]|129,f[r+465|0]=64&c[r+465|0]|129,s=25465;break e}e[r+8>>2]=0,e[r+104>>2]=184618072,e[r+32>>2]=1,t=e[26101],e[r+304>>2]=e[26100],e[r+308>>2]=t,t=e[26103],e[r+312>>2]=e[26102],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=25697;break e}e[r+296>>2]=336860180,e[r+300>>2]=336991764,e[r+8>>2]=0,e[r+104>>2]=16846872,e[r>>2]=8,e[r+4>>2]=48,e[r+80>>2]=87,e[r+32>>2]=1,e[r+36>>2]=256,e[r+40>>2]=2,t=e[25897],e[r+304>>2]=e[25896],e[r+308>>2]=t,t=e[25899],e[r+312>>2]=e[25898],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=25701;break e}e[r+132>>2]=33,e[r+104>>2]=16779328,e[r+8>>2]=0,e[r+12>>2]=8,e[r+204>>2]=101,e[r+60>>2]=2,e[r+40>>2]=2,t=e[25901],e[r+304>>2]=e[25900],e[r+308>>2]=t,t=e[25903],e[r+312>>2]=e[25902],e[r+316>>2]=t,f[r+441|0]=64|c[r+441|0],f[r+445|0]=64|c[r+445|0],f[r+449|0]=64|c[r+449|0],f[r+455|0]=64|c[r+455|0],f[r+461|0]=64|c[r+461|0],f[r+465|0]=64|c[r+465|0],s=25966;break e}e[r+328>>2]=4,e[r+296>>2]=336858640,e[r+300>>2]=353768980,e[r+104>>2]=16782344,e[r+20>>2]=2,e[r+12>>2]=22,e[r+4>>2]=2,e[r+8>>2]=2,e[r+332>>2]=103640,t=e[25997],e[r+304>>2]=e[25996],e[r+308>>2]=t,t=e[25999],e[r+312>>2]=e[25998],e[r+316>>2]=t,s=25967;break e}e[r+296>>2]=269422096,e[r+300>>2]=370545684,e[r+104>>2]=86017320,e[r+108>>2]=6144,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=534,e[r+100>>2]=e[r+96>>2],e[r+44>>2]=120,t=e[25913],e[r+304>>2]=e[25912],e[r+308>>2]=t,t=e[25915],e[r+312>>2]=e[25914],e[r+316>>2]=t;J:{me:{if((0|s)<=26976){if((0|s)==24942)break me;if((0|s)!=25441)break J;e[r+12>>2]=566,e[r+336>>2]=103664,s=25441;break e}if((0|s)!=26977){if((0|s)!=7364976)break J;e[r+8>>2]=3,e[r+12>>2]=310,s=7364976;break e}e[r+104>>2]=85984264,s=26977;break e}e[r+104>>2]=153093416,e[r+108>>2]=2048,e[r+140>>2]=103676,s=24942;break e}e[r+40>>2]=2;break e}e[r+296>>2]=303173648,e[r+300>>2]=303174162,e[r+104>>2]=3147080,e[r+12>>2]=65792,e[r+84>>2]=1,t=e[25921],e[r+304>>2]=e[25920],e[r+308>>2]=t,t=e[25923],e[r+312>>2]=e[25922],e[r+316>>2]=t,s=25973;break e}e[r+600>>2]=1536,e[r+216>>2]=1740,e[r+220>>2]=1568,e[r+104>>2]=96,e[r+224>>2]=103696,e[r+340>>2]=103872,e[r+40>>2]=1,s=26209;break e}e[r+328>>2]=5}e[r+104>>2]=86024,e[r+164>>2]=130,f[r+465|0]=64&c[r+465|0]|129;break e}e[r+296>>2]=303173650,e[r+300>>2]=303174162,e[r+8>>2]=3,e[r+12>>2]=36,e[r+144>>2]=2,e[r+104>>2]=118658312,e[r+28>>2]=1,e[r+100>>2]=e[r+96>>2],t=e[25865],e[r+304>>2]=e[25864],e[r+308>>2]=t,t=e[25867],e[r+312>>2]=e[25866],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=26226;break e}I[r+170>>1]=257,e[r+148>>2]=1,e[r+12>>2]=2,s=6840683;break e}e[r+144>>2]=2,e[r+104>>2]=2098176,e[r+8>>2]=0,e[r+12>>2]=32,e[r+40>>2]=3,e[r+28>>2]=1;break e}e[r+8>>2]=3,e[r+100>>2]=e[r+96>>2],s=26478;break e}e[r+328>>2]=18,e[r+296>>2]=320081425,e[r+300>>2]=353768980,e[r+600>>2]=2304,e[r+112>>2]=84648,e[r+104>>2]=16,e[r+8>>2]=6,e[r+12>>2]=65540,e[r+100>>2]=e[r+96>>2],t=e[25973],e[r+304>>2]=e[25972],e[r+308>>2]=t,t=e[25975],e[r+312>>2]=e[25974],e[r+316>>2]=t;j:{pe:{he:{if((0|s)<=28529){if((0|s)==26485)break he;if((0|s)!=28261)break j;t=e[25861],e[r+304>>2]=e[25860],e[r+308>>2]=t,t=e[25863],e[r+312>>2]=e[25862],e[r+316>>2]=t,e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+132>>2]=22,e[r+112>>2]=-1431655768,e[r+108>>2]=32768|e[r+108>>2],Qn(r);break e}if((0|s)==28530)break pe;if((0|s)!=28769)break j;e[r+600>>2]=2560,Qn(r);break e}t=e[25861],e[r+304>>2]=e[25860],e[r+308>>2]=t,t=e[25863],e[r+312>>2]=e[25862],e[r+316>>2]=t,e[r+600>>2]=2688,e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+8>>2]=2,Qn(r);break e}e[r+600>>2]=2816}Qn(r);break e}f[0|A]=104,f[A+1|0]=98,f[A+2|0]=115,f[A+3|0]=0,(0|s)!=29554?(t=e[26093],e[r+304>>2]=e[26092],e[r+308>>2]=t,t=e[26095],e[r+312>>2]=e[26094],e[r+316>>2]=t):(t=e[25977],e[r+304>>2]=e[25976],e[r+308>>2]=t,t=e[25979],e[r+312>>2]=e[25978],e[r+316>>2]=t),e[r+328>>2]=3,e[r+296>>2]=336859409,e[r+300>>2]=353768980,I[r+168>>1]=261,e[r+8>>2]=0,e[r+12>>2]=16,e[r+144>>2]=1,e[r+184>>2]=1056,e[r+104>>2]=33572172,e[r+108>>2]=330,e[r+36>>2]=3,f[r+465|0]=64&c[r+465|0]|129,f[r+458|0]=64&c[r+458|0]|129;break e}e[r+104>>2]=17990912,e[r+8>>2]=3,e[r+12>>2]=36,s=26740;break e}e[r+328>>2]=3,e[r+296>>2]=320016657,e[r+300>>2]=353768980,e[r+124>>2]=32,e[r+128>>2]=44,e[r+104>>2]=186758144,e[r+12>>2]=1081398,e[r+16>>2]=2,e[r+4>>2]=32,e[r+8>>2]=0,e[r+116>>2]=899,e[r+120>>2]=1,f[r+169|0]=1,e[r+76>>2]=2,t=e[25981],e[r+304>>2]=e[25980],e[r+308>>2]=t,t=e[25983],e[r+312>>2]=e[25982],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,CA(r,3),s=26741;break e}for(e[r+600>>2]=1328,e[r+8>>2]=3,t=e[25985],e[r+304>>2]=e[25984],e[r+308>>2]=t,t=e[25987],e[r+312>>2]=e[25986],e[r+316>>2]=t,A=Yt(r+344|0,0,256),f[r+429|0]=129,f[r+416|0]=129,f[r+403|0]=129,f[r+399|0]=129,f[r+400|0]=129,f[r+397|0]=129,f[r+393|0]=129,n=103952,l=50,g=50;f[0|(t=A+g|0)]=2|c[0|t],t=A+c[n+1|0]|0,f[0|t]=2|c[0|t],t=A+c[n+2|0]|0,f[0|t]=2|c[0|t],g=c[0|(n=n+3|0)],t=103952,(0|n)!=103982;);for(n=r+344|0;f[0|(A=n+l|0)]=4|c[0|A],A=n+c[t+1|0]|0,f[0|A]=4|c[0|A],A=n+c[t+2|0]|0,f[0|A]=4|c[0|A],l=c[0|(t=t+3|0)],(0|t)!=103982;);f[r+168|0]=6,e[r+104>>2]=5128,f[r+413|0]=4|c[r+413|0];break e}e[r+328>>2]=4,e[r+296>>2]=336858640,e[r+300>>2]=353768980,e[r+104>>2]=16782440,e[r+20>>2]=2,e[r+12>>2]=22,e[r+4>>2]=2,e[r+8>>2]=2,e[r+332>>2]=104e3,t=e[25997],e[r+304>>2]=e[25996],e[r+308>>2]=t,t=e[25999],e[r+312>>2]=e[25998],e[r+316>>2]=t,s=26991;break e}e[r+296>>2]=303174160,e[r+300>>2]=353768980,e[r+104>>2]=16781320,e[r+144>>2]=2,e[r+8>>2]=2,e[r+12>>2]=22,t=e[26005],e[r+304>>2]=e[26004],e[r+308>>2]=t,t=e[26007],e[r+312>>2]=e[26006],e[r+316>>2]=t;break e}for(e[r+8>>2]=0,e[r+12>>2]=16,e[r+56>>2]=2,e[r+28>>2]=17,t=e[26009],e[r+304>>2]=e[26008],e[r+308>>2]=t,t=e[26011],e[r+312>>2]=e[26010],e[r+316>>2]=t,t=0,n=r+344|0;f[0|(A=t+n|0)]=231&c[0|A],f[0|(A=n+(1|t)|0)]=231&c[0|A],f[0|(A=n+(2|t)|0)]=231&c[0|A],f[0|(A=n+(3|t)|0)]=231&c[0|A],(0|(t=t+4|0))!=256;);e[r+104>>2]=2280,e[r+108>>2]=2,e[r+608>>2]=104048,f[r+451|0]=16|c[r+451|0],f[r+456|0]=16|c[r+456|0],f[r+459|0]=16|c[r+459|0],f[r+460|0]=16|c[r+460|0],f[r+450|0]=8|c[r+450|0],f[r+462|0]=8|c[r+462|0],f[r+458|0]=8|c[r+458|0],f[r+465|0]=64&c[r+465|0]|129;break e}e[r+296>>2]=269618961,e[r+300>>2]=370546196,e[r+12>>2]=131110,e[r+144>>2]=2,e[r+104>>2]=184559112,e[r+108>>2]=8192,e[r+16>>2]=0,e[r+20>>2]=2,e[r+4>>2]=1,e[r+8>>2]=2,e[r+100>>2]=e[r+96>>2],e[r+140>>2]=103676,e[r+68>>2]=2,e[r+56>>2]=1,e[r+44>>2]=130,e[r+28>>2]=2,t=e[26025],e[r+304>>2]=e[26024],e[r+308>>2]=t,t=e[26027],e[r+312>>2]=e[26026],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=26996;break e}e[r+4>>2]=524,e[r+8>>2]=2,e[r+196>>2]=368,e[r+104>>2]=0,e[r+336>>2]=104128,e[r- -64>>2]=1,t=e[26029],e[r+304>>2]=e[26028],e[r+308>>2]=t,t=e[26031],e[r+312>>2]=e[26030],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=6972015;break e}for(e[r+296>>2]=303174162,e[r+300>>2]=370545684,t=e[25873],e[r+304>>2]=e[25872],e[r+308>>2]=t,t=e[25875],e[r+312>>2]=e[25874],e[r+316>>2]=t,A=Yt(r+344|0,0,256),f[r+431|0]=1,f[r+429|0]=1,f[r+411|0]=1,f[r+405|0]=1,f[r+400|0]=1,f[r+396|0]=1,f[r+392|0]=1,t=104160,n=49;f[0|(n=n+A|0)]=4|c[0|n],n=A+c[t+1|0]|0,f[0|n]=4|c[0|n],n=A+c[t+2|0]|0,f[0|n]=4|c[0|n],n=c[0|(t=t+3|0)],(0|t)!=104193;);e[r+600>>2]=4256,e[r+8>>2]=0,e[r+12>>2]=16,f[r+168|0]=7,e[r+132>>2]=32,f[r+392|0]=128|c[r+392|0],f[r+396|0]=128|c[r+396|0],f[r+400|0]=128|c[r+400|0],f[r+405|0]=128|c[r+405|0],f[r+411|0]=128|c[r+411|0],f[r+429|0]=128|c[r+429|0],f[r+431|0]=128|c[r+431|0],e[r+188>>2]=1056,e[r+192>>2]=29301,e[r+104>>2]=19964960;break e}for(e[r+600>>2]=1056,A=Yt(r+344|0,0,256),f[r+393|0]=1,f[r+365|0]=1,f[r+360|0]=1,f[r+545|0]=1,f[r+529|0]=1,f[r+391|0]=1,f[r+389|0]=1,f[r+390|0]=1,f[r+387|0]=1,f[r+379|0]=1,f[r+374|0]=1,f[r+368|0]=1,f[r+489|0]=1,f[r+487|0]=1,f[r+398|0]=1,t=104224,n=17;f[0|(n=n+A|0)]=4|c[0|n],n=A+c[t+1|0]|0,f[0|n]=4|c[0|n],n=A+c[t+2|0]|0,f[0|n]=4|c[0|n],n=c[0|(t=t+3|0)],(0|t)!=104251;);f[r+360|0]=128|c[r+360|0],f[r+365|0]=128|c[r+365|0],f[r+393|0]=128|c[r+393|0],f[r+368|0]=128|c[r+368|0],f[r+374|0]=128|c[r+374|0],f[r+379|0]=128|c[r+379|0],f[r+387|0]=128|c[r+387|0],f[r+389|0]=128|c[r+389|0],f[r+390|0]=128|c[r+390|0],f[r+391|0]=128|c[r+391|0],f[r+529|0]=128|c[r+529|0],f[r+545|0]=128|c[r+545|0],f[r+489|0]=128|c[r+489|0],f[r+487|0]=128|c[r+487|0],f[r+398|0]=128|c[r+398|0],t=e[26055],e[r+312>>2]=e[26054],e[r+316>>2]=t,t=e[26053],e[r+304>>2]=e[26052],e[r+308>>2]=t,e[r+296>>2]=353636370,e[r+300>>2]=336925972,e[r+200>>2]=0,e[r+8>>2]=7,e[r+12>>2]=2097184,f[r+168|0]=2,e[r+104>>2]=50176,e[r+84>>2]=1,CA(r,3);break e}e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+104>>2]=184618072,e[r+8>>2]=12,e[r+12>>2]=32,t=e[25861],e[r+304>>2]=e[25860],e[r+308>>2]=t,t=e[25863],e[r+312>>2]=e[25862],e[r+316>>2]=t,s=27500;break e}e[r+184>>2]=42752,e[r+600>>2]=4352,Yt(r+344|0,0,256),f[r+456|0]=1,f[r+457|0]=1,f[r+458|0]=1,f[r+459|0]=1,f[r+449|0]=1,f[r+450|0]=1,f[r+451|0]=1,f[r+452|0]=1,f[r+453|0]=1,f[r+454|0]=1,f[r+455|0]=1,f[r+456|0]=1,f[r+441|0]=1,f[r+442|0]=1,f[r+443|0]=1,f[r+444|0]=1,f[r+445|0]=1,f[r+446|0]=1,f[r+447|0]=1,f[r+448|0]=1,f[r+460|0]=65,f[r+461|0]=65,f[r+532|0]=32,f[r+527|0]=32,f[r+519|0]=32,f[r+515|0]=32,f[r+349|0]=32,f[r+350|0]=32,f[r+346|0]=32,e[r+132>>2]=20,e[r+112>>2]=286331152,e[r+104>>2]=1024,e[r+108>>2]=16384,e[r+40>>2]=1,e[r+8>>2]=8,f[r+458|0]=65,f[r+453|0]=65,f[r+447|0]=65,f[r+448|0]=65,f[r+443|0]=65,f[r+444|0]=65,s=27503;break e}e[r+328>>2]=10,e[r+296>>2]=336859666,e[r+300>>2]=353768980,f[r+168|0]=2,e[r+104>>2]=263264,e[r+8>>2]=7,t=e[26065],e[r+304>>2]=e[26064],e[r+308>>2]=t,t=e[26067],e[r+312>>2]=e[26066],e[r+316>>2]=t,s=27509;break e}e[r+104>>2]=1,s=27513;break e}e[r+116>>2]=5e3,e[r+104>>2]=16777216,e[r+24>>2]=1,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=32,e[r+328>>2]=5,s=27745;break e}e[r+116>>2]=5e3,e[r+104>>2]=99336,e[r+108>>2]=256,e[r+24>>2]=1,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=32,e[r+328>>2]=5,s=27764;break e}e[r+328>>2]=6,e[r+296>>2]=336859409,e[r+300>>2]=353768980,e[r+600>>2]=1056,e[r+104>>2]=2114600,e[r+108>>2]=138,e[r+8>>2]=4,e[r+632>>2]=104288,e[r+604>>2]=104288,t=e[26093],e[r+304>>2]=e[26092],e[r+308>>2]=t,t=e[26095],e[r+312>>2]=e[26094],e[r+316>>2]=t,s=28011;break e}e[r+328>>2]=4,e[r+104>>2]=1,e[r+8>>2]=2,e[r+36>>2]=256,s=28020;break e}e[r+4>>2]=48,e[r+8>>2]=0,e[r+12>>2]=128,e[r+104>>2]=2169880,e[r+32>>2]=1,e[r+36>>2]=256,e[r+24>>2]=1,e[r+136>>2]=85767,t=e[26097],e[r+304>>2]=e[26096],e[r+308>>2]=t,t=e[26099],e[r+312>>2]=e[26098],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=28268;break e}e[r+8>>2]=0,e[r+104>>2]=71752,t=e[26101],e[r+304>>2]=e[26100],e[r+308>>2]=t,t=e[26103],e[r+312>>2]=e[26102],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=28258;break e}e[r+296>>2]=336858898,e[r+300>>2]=370546196,e[r+104>>2]=1088,e[r+108>>2]=512,e[r+8>>2]=2,e[r+12>>2]=524310,t=e[26105],e[r+304>>2]=e[26104],e[r+308>>2]=t,t=e[26107],e[r+312>>2]=e[26106],e[r+316>>2]=t,s=28525;break e}e[r+328>>2]=3,e[r+296>>2]=320015633,e[r+300>>2]=353768980,f[r+168|0]=7,e[r+8>>2]=2,e[r+12>>2]=6,e[r+104>>2]=20488,e[r+108>>2]=192,e[r+36>>2]=9,e[r+60>>2]=260,t=e[26109],e[r+304>>2]=e[26108],e[r+308>>2]=t,t=e[26111],e[r+312>>2]=e[26110],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=28780;break e}for(e[r+296>>2]=353569552,e[r+300>>2]=353768980,e[r+116>>2]=5e3,e[r+104>>2]=33570920,e[r+108>>2]=14336,e[r+8>>2]=3,e[r+12>>2]=139286,e[r+100>>2]=e[r+96>>2],t=e[26113],e[r+304>>2]=e[26112],e[r+308>>2]=t,t=e[26115],e[r+312>>2]=e[26114],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,t=0,n=r+344|0;f[0|(A=t+n|0)]=253&c[0|A],f[0|(A=n+(1|t)|0)]=253&c[0|A],f[0|(A=n+(2|t)|0)]=253&c[0|A],f[0|(A=n+(3|t)|0)]=253&c[0|A],(0|(t=t+4|0))!=256;);f[r+442|0]=2|c[r+442|0],f[r+443|0]=2|c[r+443|0],f[r+444|0]=2|c[r+444|0],f[r+446|0]=2|c[r+446|0],f[r+447|0]=2|c[r+447|0],f[r+450|0]=2|c[r+450|0],f[r+451|0]=2|c[r+451|0],f[r+453|0]=2|c[r+453|0],f[r+454|0]=2|c[r+454|0],f[r+456|0]=2|c[r+456|0],f[r+457|0]=2|c[r+457|0],f[r+459|0]=2|c[r+459|0],f[r+460|0]=2|c[r+460|0],f[r+462|0]=2|c[r+462|0],f[r+464|0]=2|c[r+464|0],f[r+466|0]=2|c[r+466|0],e[r+144>>2]=2,e[r+68>>2]=2;break e}e[r+296>>2]=303172879,e[r+300>>2]=353768980,e[r+328>>2]=3,e[r+8>>2]=3,e[r+12>>2]=262,e[r+104>>2]=16805928,e[r+108>>2]=30,t=e[26117],e[r+304>>2]=e[26116],e[r+308>>2]=t,t=e[26119],e[r+312>>2]=e[26118],e[r+316>>2]=t,s=29295;break e}VA(r),s=29301;break e}for(e[r+328>>2]=3,e[r+296>>2]=336859153,e[r+300>>2]=353768980,I[r+168>>1]=261,e[r+8>>2]=0,e[r+12>>2]=22,e[r+124>>2]=0,e[r+128>>2]=44,e[r+104>>2]=16794624,e[r+108>>2]=128,e[r+36>>2]=3,e[r+60>>2]=4,t=e[25869],e[r+304>>2]=e[25868],e[r+308>>2]=t,t=e[25871],e[r+312>>2]=e[25870],e[r+316>>2]=t,(0|s)==25459&&(e[r+108>>2]=136),f[r+465|0]=64&c[r+465|0]|129,f[r+458|0]=64&c[r+458|0]|129,t=0,n=r+344|0;f[0|(A=t+n|0)]=223&c[0|A],f[0|(A=n+(1|t)|0)]=223&c[0|A],f[0|(A=n+(2|t)|0)]=223&c[0|A],f[0|(A=n+(3|t)|0)]=223&c[0|A],(0|(t=t+4|0))!=256;);f[r+442|0]=32|c[r+442|0],f[r+444|0]=32|c[r+444|0],f[r+447|0]=32|c[r+447|0],f[r+450|0]=32|c[r+450|0],f[r+452|0]=32|c[r+452|0],f[r+453|0]=32|c[r+453|0],f[r+454|0]=32|c[r+454|0],f[r+458|0]=32|c[r+458|0],f[r+462|0]=32|c[r+462|0],f[r+463|0]=32|c[r+463|0],f[r+466|0]=32|c[r+466|0],f[r+441|0]=32|c[r+441|0],f[r+445|0]=32|c[r+445|0],f[r+449|0]=32|c[r+449|0],f[r+455|0]=32|c[r+455|0],f[r+461|0]=32|c[r+461|0],f[r+465|0]=32|c[r+465|0];break e}for(e[r+296>>2]=303174162,e[r+300>>2]=370545684,e[r+600>>2]=3456,f[r+169|0]=1,e[r+8>>2]=0,e[r+12>>2]=22,e[r+100>>2]=e[r+96>>2],t=e[25873],e[r+304>>2]=e[25872],e[r+308>>2]=t,t=e[25875],e[r+312>>2]=e[25874],e[r+316>>2]=t,Yt(r+344|0,0,256),f[r+365|0]=1,f[r+366|0]=1,f[r+357|0]=1,f[r+358|0]=1,f[r+359|0]=1,f[r+360|0]=1,f[r+361|0]=1,f[r+362|0]=1,f[r+363|0]=1,f[r+364|0]=1,f[r+349|0]=1,f[r+350|0]=1,f[r+351|0]=1,f[r+352|0]=1,f[r+353|0]=1,f[r+354|0]=1,f[r+355|0]=1,f[r+356|0]=1,t=74,n=74;f[344+(A=r+n|0)|0]=1|c[A+344|0],f[A+345|0]=1|c[A+345|0],f[A+346|0]=1|c[A+346|0],(0|(n=n+3|0))!=116;);for(;f[344+(n=t+r|0)|0]=2|c[n+344|0],f[n+345|0]=2|c[n+345|0],f[n+346|0]=2|c[n+346|0],(0|(t=t+3|0))!=116;);for(n=26;f[344+(t=r+n|0)|0]=4|c[t+344|0],f[t+345|0]=4|c[t+345|0],f[t+346|0]=4|c[t+346|0],f[t+347|0]=4|c[t+347|0],f[t+348|0]=4|c[t+348|0],(0|(n=n+5|0))!=71;);e[r+112>>2]=84648,e[r+104>>2]=270589952,e[r+108>>2]=65536,e[r+40>>2]=1,e[r+204>>2]=e[r+600>>2]+74;break e}e[r+8>>2]=2,e[r+12>>2]=32,e[r+328>>2]=3,e[r+124>>2]=32,e[r+104>>2]=16864280,e[r+108>>2]=256,e[r+68>>2]=2,e[r+36>>2]=259,e[r+40>>2]=118,e[r+28>>2]=1,f[r+458|0]=128|c[r+458|0],s=29548;break e}e[r+296>>2]=370544658,e[r+300>>2]=370546196,e[r+164>>2]=130,e[r+8>>2]=0,e[r+12>>2]=86,e[r+104>>2]=87064,f[r+169|0]=1,e[r+152>>2]=3,t=e[26121],e[r+304>>2]=e[26120],e[r+308>>2]=t,t=e[26123],e[r+312>>2]=e[26122],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=7564650;break e}e[r+296>>2]=269487120,e[r+300>>2]=320148500,e[r+8>>2]=3,e[r+12>>2]=278,e[r+144>>2]=2,e[r+104>>2]=32872,t=e[26125],e[r+304>>2]=e[26124],e[r+308>>2]=t,t=e[26127],e[r+312>>2]=e[26126],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=29553;break e}e[r+296>>2]=336859152,e[r+300>>2]=353768980,e[r+8>>2]=0,e[r+144>>2]=1,e[r+104>>2]=6408,t=e[26129],e[r+304>>2]=e[26128],e[r+308>>2]=t,t=e[26131],e[r+312>>2]=e[26130],e[r+316>>2]=t,f[r+465|0]=64&c[r+465|0]|129,s=29558;break e}e[r+296>>2]=320015376,e[r+300>>2]=353768980,f[r+168|0]=4,e[r+12>>2]=22,e[r+4>>2]=1,e[r+8>>2]=2,e[r+104>>2]=1248,e[r+100>>2]=e[r+96>>2],t=e[26133],e[r+304>>2]=e[26132],e[r+308>>2]=t,t=e[26135],e[r+312>>2]=e[26134],e[r+316>>2]=t;break e}e[r+296>>2]=303174162,e[r+300>>2]=370545684,f[r+169|0]=1,e[r+8>>2]=0,e[r+12>>2]=22,e[r+112>>2]=5288,e[r+100>>2]=e[r+96>>2],t=e[25877],e[r+304>>2]=e[25876],e[r+308>>2]=t,t=e[25879],e[r+312>>2]=e[25878],e[r+316>>2]=t;p:switch(s-29793|0){default:if((0|s)!=27502){if((0|s)!=28012)break s;t=e[26137],e[r+304>>2]=e[26136],e[r+308>>2]=t,t=e[26139],e[r+312>>2]=e[26138],e[r+316>>2]=t,e[r+600>>2]=3328,e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+104>>2]=2098176,e[r+108>>2]=131072,e[r+8>>2]=13;break s}e[r+104>>2]=1,e[r+600>>2]=3200;break s;case 4:break p;case 1:case 2:case 3:break s;case 0:break n}e[r+104>>2]=1,e[r+108>>2]=524288,e[r+600>>2]=3072;break s}e[r+328>>2]=10,e[r+296>>2]=353636370,e[r+300>>2]=336925972,f[r+173|0]=1,e[r+8>>2]=7,e[r+12>>2]=32,f[r+168|0]=2,e[r+84>>2]=1,t=e[26141],e[r+304>>2]=e[26140],e[r+308>>2]=t,e[r+104>>2]=(0|s)==24954?2118920:2114824,t=e[26143],e[r+312>>2]=e[26142],e[r+316>>2]=t;break e}Zn(r),e[r+296>>2]=303173650,e[r+300>>2]=303174162,e[r+104>>2]=2131208,e[r+8>>2]=3,e[r+12>>2]=32,t=e[25865],e[r+304>>2]=e[25864],e[r+308>>2]=t,t=e[25867],e[r+312>>2]=e[25866],e[r+316>>2]=t,s=29812;break e}VA(r),s=30059;break e}e[r+112>>2]=21160,e[r+104>>2]=16,e[r+600>>2]=1536,e[r+40>>2]=1;break e}e[r+296>>2]=269488144,e[r+300>>2]=370546198,e[r+8>>2]=0,e[r>>2]=33,e[r+148>>2]=1,e[r+104>>2]=12615688,e[r+16>>2]=2,e[r+100>>2]=e[r+96>>2],e[r+632>>2]=104592,e[r+604>>2]=104592,t=e[26145],e[r+304>>2]=e[26144],e[r+308>>2]=t,t=e[26147],e[r+312>>2]=e[26146],e[r+316>>2]=t,s=30313;break e}if(e[r+296>>2]=370544662,e[r+300>>2]=370546198,e[r+8>>2]=3,e[r+12>>2]=2,e[r+148>>2]=1,e[r+184>>2]=12544,I[r+170>>1]=257,e[r+176>>2]=1,f[r+172|0]=1,e[r>>2]=33,e[r+4>>2]=0,e[r+100>>2]=e[r+96>>2],t=e[26225],e[r+304>>2]=e[26224],e[r+308>>2]=t,t=e[26227],e[r+312>>2]=e[26226],e[r+316>>2]=t,(0|s)!=7959909)break e;e[r+112>>2]=24,e[r+104>>2]=1,e[r+108>>2]=1048576,s=7959909;break e}t=e[25873],e[r+304>>2]=e[25872],e[r+308>>2]=t,t=e[25875],e[r+312>>2]=e[25874],e[r+316>>2]=t,e[r+600>>2]=2944,e[r+104>>2]=2097152,e[r+108>>2]=262144,e[r+48>>2]=1}Qn(r),f[r+422|0]=2|c[r+422|0];break e}e[r+40>>2]=1}return e[r+212>>2]=s,8&(t=e[r+104>>2])&&(e[r+124>>2]=46,e[r+128>>2]=44),4&t&&(e[r+124>>2]=0),r}function $e(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0;e:{s=e[32538],e[47354]=0,e[47568]=0,e[49828]=0,e[47569]=0,f[199328]=0,e[49827]=0,e[49845]=0,f[190280]=0,f[190268]=1,e[47202]=0,e[49573]=0,e[49846]=0,f[199304]=0,f[199388]=0,e[33691]=0,e[33285]=0,e[33708]=1,e[33709]=1,e[33288]=0,r=e[33730],e[33712]=e[33729],e[33713]=r,r=e[33732],e[33714]=e[33731],e[33715]=r,r=e[33734],e[33716]=e[33733],e[33717]=r,r=e[33736],e[33718]=e[33735],e[33719]=r,r=e[33738],e[33720]=e[33737],e[33721]=r,r=e[33740],e[33722]=e[33739],e[33723]=r,r=e[33742],e[33724]=e[33741],e[33725]=r,e[33726]=e[33743],f[134784]=0,f[134824]=0,f[134772]=0,f[134760]=0,e[33284]=-1,e[33692]=0,e[32525]=0,e[47201]=e[33717],e[47200]=e[33718],Ii(),e[34438]=0,e[34437]=0,r=e[33730],e[34048]=e[33729],e[34049]=r,r=e[33732],e[34050]=e[33731],e[34051]=r,r=e[33734],e[34052]=e[33733],e[34053]=r,r=e[33736],e[34054]=e[33735],e[34055]=r,r=e[33738],e[34056]=e[33737],e[34057]=r,r=e[33740],e[34058]=e[33739],e[34059]=r,r=e[33742],e[34060]=e[33741],e[34061]=r,e[34062]=e[33743];t:{s:{if(1&s){if(e[e[32539]>>2]=0,e[47569]|e[49845]|e[49827])break s;break t}if(e[e[32539]>>2]=0,!(e[49845]|e[49827]||e[47569]))break t}f[190280]=1}e[49828]=0,r=268436735;t:if(!(!e[34391]|!e[34388])&&(e[47204]=0,e[47203]=0,e[47199]=0,e[34439]=0,(e[47192]||!(r=ol(86228)))&&((r=e[33283])||((r=wr(16))&&(e[r>>2]=0,e[r+4>>2]=0,e[r+8>>2]=0,e[r+12>>2]=0),e[33283]=r),l=268439807,(s=e[e[47192]+328>>2])>>>0>20|!e[129104+(s<<3)>>2]?r=l:(t?(l=4,A=_r(t)+1|0):(l=2,A=0),e[r+8>>2]=l,e[r>>2]=t,e[r+12>>2]=e[129108+(s<<3)>>2],e[r+4>>2]=t?t+A|0:0,r=0),!r))){ce(0);s:{for(;;){e[34436]=0,t=e[34391],e[51290]=t,e[54046]=t+e[34390],e[50767]<=102399&&(e[50767]=102400);n:if(!((g=e[51290])>>>0>=J[54046]))for(;;){if((((0|(t=(A=e[50757])-(m=e[50758])|0))<=0?t+170|0:t)-171|0)>=-1){if((0|(t=e[54731]))<=0)break n;l=0,e[50763]=0,e[50762]=0,e[50765]=2147483647,t=c[218920]?e[54732]:t;i:{for(;;){if(s=t-1|0,e[54732]=s,(0|t)<=0)break i;if(e[51290]=g+1,r=(t=e[51293])+1|0,e[51293]=(0|r)<=5499?r:0,r=(t=j(e[50755],I[205184+(t<<1)>>1]))>>8,f[0|g]=r,A=e[51290],e[51290]=A+1,f[0|A]=t>>>16,(A=e[50756])?(t=s,(s=e[A+4>>2])&&(rs[0|s](r<<16>>16),t=e[54732])):t=s,A=(s=e[51292])+1|0,e[51292]=A,I[205184+(s<<1)>>1]=r,(0|A)>=5500&&(e[51292]=0),g=e[51290],!(J[54046]>=g+2>>>0))break}l=1}f[218920]=l;break n}t=e[4+(s=216192+(A<<4)|0)>>2];i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:switch((255&(r=e[s>>2]))-1|0){case 9:break A;case 7:break d;case 10:break l;case 11:break o;case 13:break p;case 0:break b;case 1:break m;case 2:break C;case 3:break h;case 6:break M;case 5:break I;case 4:break x;case 15:break N;case 8:break V;default:break c}if(!e[50759])break c;r=e[s+12>>2],s=e[s+8>>2],e[50768]=0,g=s||99232,e[50766]=g,e[50769]=t?2097152/(0|t)|0:0,t=e[50971],A=(0|j(t,e[50788]))/50|0,s=j(A-t|0,-18),t=((0|(t=e[50785]))>=101?101:t)-e[50790]|0,r=(l=s+((0|j(e[50970],c[((0|t)>0?t:0)+105680|0]))/128|0)|0)+((0|j(A,(0|(t=r>>16))<(0|(s=65535&r))?t:s))/2|0)|0,e[50770]=r,t=(l+((0|j(A,(0|t)>(0|s)?t:s))/2|0)|0)-r|0,e[50771]=t,s=c[0|g],e[33072]=e[50976],e[50767]=r+(j(t,s)>>8);break c}rs[e[e[50756]>>2]](t,e[s+8>>2]),Zt(t);break c}if(c[218920]||(e[54731]=e[54731]-t),e[50781]=100,e[50773]=0,Be(),e[50763]=0,e[50762]=0,e[50765]=2147483647,!t)break c;for(t=c[218920]?e[54732]:t;;){if(s=t-1|0,e[54732]=s,(0|t)<=0)break c;if(t=e[51290],e[51290]=t+1,A=(r=e[51293])+1|0,e[51293]=(0|A)<=5499?A:0,A=t,r=(t=j(e[50755],I[205184+(r<<1)>>1]))>>8,f[0|A]=r,A=e[51290],e[51290]=A+1,f[0|A]=t>>>16,(A=e[50756])?(t=s,(s=e[A+4>>2])&&(rs[0|s](r<<16>>16),t=e[54732])):t=s,A=(s=e[51292])+1|0,e[51292]=A,I[205184+(s<<1)>>1]=r,(0|A)>=5500&&(e[51292]=0),A=1,!(J[54046]>=e[51290]+2>>>0))break}break i}for(e[50773]=0,e[54731]=e[54729],Be(),r=e[s+12>>2],A=e[s+8>>2],c[218920]?t=e[54733]:e[54734]=0,m=r>>8,l=255&r,e[50762]=0,e[50763]=0;;){if(s=t-1|0,e[54733]=s,(0|t)<=0)break c;if(r=(t=e[54734])+1|0,l?g=j(l,f[t+A|0]):(g=c[t+A|0]|f[r+A|0]<<8,r=t+2|0),e[54734]=r,w=(t=e[51293])+1|0,e[51293]=w,r=(0|(t=(0|(t=((0|j(m,j(e[33037],j(e[33038],g))>>10))/32|0)+(j(e[50755],I[205184+(t<<1)>>1])>>8)|0))<=-32768?-32768:t))>=32767?32767:t,(0|w)>=5500&&(e[51293]=0),f[e[51290]]=r,f[e[51290]+1|0]=r>>>8,(g=e[50756])?(t=s,(s=e[g+12>>2])&&(rs[0|s](r<<16>>16),t=e[54733])):t=s,s=e[51290],e[51290]=s+2,w=(g=e[51292])+1|0,e[51292]=w,I[205184+(g<<1)>>1]=(0|j(r,3))/4,(0|w)>=5500&&(e[51292]=0),!(J[54046]>=s+4>>>0))break}A=1;break i}r=e[s+12>>2],A=t>>>16|0,e[50777]=A,t&=65535,e[50773]=t,l=255&r,e[50774]=l,e[50775]=r>>8,l||(e[50777]=A<<1,e[50773]=t<<1),e[50778]=0,e[50776]=0,e[50772]=e[s+8>>2];break c}e[50773]=0}if(e[54731]=e[54729],r=e[50759],c[218920]){if(!r)break c}else{if(!r)break c;for(l=e[s+12>>2],g=e[s+8>>2],s=t>>16,e[55912]=255&s,f[218960]=1,e[55908]=0,67108864&t&&(e[55908]=3,e[55909]=e[110496+(s>>>6&12)>>2]),134217728&t&&(e[55908]=4,e[55909]=e[110512+(s>>>6&12)>>2]),t&=65504;;){if((0|m)!=(0|(A=(0|(s=A+1|0))<=169?s:0)))if((0|(s=e[216192+(A<<4)>>2]))!=3){if(s-5>>>0>1)continue}else f[218960]=0;break}for(e[55913]=e[50762],t=(t=t+32&131008)||64,e[50763]=t+e[50763],e[55684]=j(I[101997],7800)+(P[102024]<<8)<<8,e[55704]=j(I[101998],9e3)+(P[102025]<<8)<<8,ee=e[50980],n=+(0|t),F=+(t>>>2|0),t=0;(0|t)!=7&&(A=I[218+(w=(s=t<<1)+r|0)>>1]<<8,m=j(t,80)+222176|0,w=I[w+164>>1],U=A+j(w,I[2+(s+g|0)>>1])<<8,e[m>>2]=U,x=+(0|U),D[m+16>>3]=x,D[m+48>>3]=16*(+(A+j(w,I[2+(s+l|0)>>1])<<8)-x)/F),A=(s=j(t,80))+222176|0,w=I[182+(U=r+(t<<1)|0)>>1],Ce=j(w,c[18+(m=t+g|0)|0])<<6,e[A+4>>2]=Ce,x=+(0|Ce),D[A+24>>3]=x,Ae=A,A=t+l|0,D[Ae+56>>3]=64*(+(j(w,c[A+18|0])<<6)-x)/n,(0|t)>(0|ee)|t>>>0>5||(w=s+222176|0,Ce=I[U+200>>1],U=j(Ce,c[m+26|0])<<10,e[w+8>>2]=U,x=+(0|U),D[w+32>>3]=x,Ae=w- -64|0,w=Ce<<10,D[Ae>>3]=64*(+(0|j(w,c[A+26|0]))-x)/n,t>>>0<=2?(s=s+222176|0,m=j(w,c[m+32|0]),e[s+12>>2]=m,x=+(0|m),D[s+40>>3]=x,D[s+72>>3]=64*(+(0|j(w,c[A+32|0]))-x)/n):e[s+222188>>2]=U),(0|(t=t+1|0))!=8;);}for(;;){if(t=e[50762],!c[218960]&(0|t)==e[50763])break c;C:{h:{if(63&t){if(7&t)break C;M:if(!((0|(s=e[54736]))<=0||(0|(r=e[54735]))<=0))for(A=e[50826],t=1;;){if(e[(g=(l=t<<2)+A|0)>>2]=e[g>>2]+e[l+203312>>2],t>>>0>28|(0|t)>=(0|s))break M;if(l=(0|t)<(0|r),t=t+1|0,!l)break}if((0|(t=e[33073]))>255)break C;e[33073]=t+1;break C}if(t)if(e[50759]){if(s=e[50768]+e[50769]|0,e[50768]=s,s=(r=e[50766])?j(c[r+((0|(s>>=8))>=127?127:s)|0],e[50771])>>8:0,e[55911]=e[55911]+e[55915],r=(0|(r=e[55914]))<=23551?r:0,e[55914]=r+e[50761],r=(s+e[50770]|0)+j(e[33072],c[110528+(r>>6)|0]-128|0)|0,e[50767]=r,!(A=e[51291])&(0|(s=A?A<<12:r))>102399||(r=(0|s)<=102400?102400:s,e[50767]=r),(0|t)!=e[55913]){if(t=0,!((0|(m=e[50980]))<0)){for(;g=j(t,80),n=D[48+(s=g+222176|0)>>3]+D[s+16>>3],D[s+16>>3]=n,F=D[s+56>>3]+D[s+24>>3],D[s+24>>3]=F,x=D[s- -64>>3]+D[s+32>>3],D[s+32>>3]=x,A=ge(n)<2147483648?~~n:-2147483648,e[s>>2]=A,A=ge(x)<2147483648?~~x:-2147483648,e[s+8>>2]=A,l=ge(F)<2147483648?~~F:-2147483648,e[s+4>>2]=(0|l)>0?l:0,(0|t)>2||(n=D[72+(s=g+222176|0)>>3]+D[s+40>>3],D[s+40>>3]=n,A=ge(n)<2147483648?~~n:-2147483648),e[g+222188>>2]=A,(0|m)>=(0|(t=t+1|0)););if((0|t)>=8)break h}for(;(0|t)!=7&&(s=j(t,80)+222176|0,n=D[s+48>>3]+D[s+16>>3],D[s+16>>3]=n,A=ge(n)<2147483648?~~n:-2147483648,e[s>>2]=A),s=j(t,80)+222176|0,n=D[s+56>>3]+D[s+24>>3],D[s+24>>3]=n,A=ge(n)<2147483648?~~n:-2147483648,e[s+4>>2]=(0|A)>0?A:0,(0|(t=t+1|0))!=8;);}}else r=e[50767];else e[50826]=218976,e[54742]=0,e[54736]=fi(e[50767]<<4,218976,0),r=e[50767],e[54737]=890/(r>>12),e[54739]=(0|j(e[50781],j(e[50779],r>>8)))/8e4}if(e[55906]=r>>11,e[54735]=e[54736],e[55904]=j(e[50760],r>>7),e[55905]=e[50754]/(r>>12),s=1^(t=e[54742]),e[54742]=s,e[50826]=j(t,1600)+218976,e[54736]=fi(r<<4,j(s,1600)+218976|0,1),!(!(r=e[50759])|!e[51022]))for(F=D[25430],x=D[25429],t=1;e[272+(s=r+(t<<2)|0)>>2]&&(A=e[s+308>>2],s=j(t,40)+203456|0,T=$n(F*+I[2+(j(t,80)+222176|0)>>1]),T*=n=Cs(x*+(0|A)),T+=T,D[s+8>>3]=T,n*=-n,D[s+16>>3]=n,D[s>>3]=1-T-n),(0|(t=t+1|0))!=9;);}if(l=e[50762]+1|0,e[50762]=l,g=(t=e[50765])+e[55904]|0,e[50765]=g,(0|g)<0&(0|t)>0){if(w=e[55905],r=e[50800]+((0|w)/-2|0)|0,e[55907]=r,(0|(U=e[50763]))<(0|l))break c;if(ee=e[54738]+1|0,e[54738]=ee,m=e[50767],!((0|(t=(s=e[50980])+1|0))>8)&&(A=m<<3,1&s&&(e[203264+(t<<2)>>2]=(1+(e[j(t,80)+222176>>2]/(0|A)|0)|0)/2,t=s+2|0),(0|s)!=7))for(;s=203264+(t<<2)|0,Ce=j(t,80)+222176|0,e[s>>2]=(1+(e[Ce>>2]/(0|A)|0)|0)/2,e[s+4>>2]=(1+(e[Ce+80>>2]/(0|A)|0)|0)/2,(0|(t=t+2|0))!=9;);t=(0|j(e[50781],j(e[50779],m>>8)))/8e4|0,e[54739]=t;C:if(!((0|(s=e[55908]))<=0)){switch(s-3|0){case 0:if((U-l|0)>=w<<1)break C;e[55908]=2,t=(0|j(e[55909],t))/256|0,e[54739]=t;break C;case 1:e[55908]=2,t=(0|j(e[55909],t))/256|0,e[54739]=t;break C}e[55908]=s-1}(s=e[55910])&&(A=t,t=e[55911]>>8,t=(0|j(A,c[s+((0|t)>=127?127:t)|0]))/128|0,e[54739]=t),(0|(s=e[e[32972]+92>>2]))>7||(s=15&(A=c[e[55912]+(106336+(s<<3)|0)|0]),(A=A>>>4|0)&&((0|A)!=15?(0|ee)%(0|A)|0||(e[54739]=(0|j(t,s))/16):(e[55912]=0,e[54739]=(0|j(t,s))/16)))}else r=e[55907];if(l=r+1|0,e[55907]=l,s=g>>>16|0,A=0,!((0|l)<0|(0|l)>=e[50799])){if(!((0|(t=(r=e[50980])+1|0))>8)){if(m=1&(g=8-r|0),(0|r)!=7)for(w=-2&g,r=0;A=j(e[203216+(U=4+(g=t<<2)|0)>>2],I[106400+(j(s,e[U+203264>>2])>>>4&4094)>>1])+(j(e[g+203216>>2],I[106400+(j(s,e[g+203264>>2])>>>4&4094)>>1])+A|0)|0,t=t+2|0,(0|w)!=(0|(r=r+2|0)););m&&(A=j(e[203216+(t<<=2)>>2],I[106400+(j(s,e[t+203264>>2])>>>4&4094)>>1])+A|0)}A=j(c[l+132160|0],(0|A)/e[55906]|0)}if(t=1,(0|(l=e[54737]))<=0)r=s;else for(g=e[50826],r=s;A=j(e[g+(t<<2)>>2],I[106400+((65504&r)>>>4|0)>>1])+A|0,r=r+s|0,(0|l)>=(0|(t=t+1|0)););if((0|(l=e[54735]))>=(0|t))for(g=e[50826];A=A-j(e[g+(t<<2)>>2],I[106400+((65504&r)>>>4|0)>>1])|0,r=r+s|0,(0|l)>=(0|(t=t+1|0)););if(l=(0|(t=e[54728]))==64?A:j(t,A>>6),e[51022]){if(e[50759])for(s=ds(e[33209],0,1103515245,0),t=H,t=EA(s=s+12345|0,t=s>>>0<12345?t+1|0:t),e[33209]=t,F=+((16383&t)- -8192|0),r=e[50759],g=0,t=1;(A=e[272+(r+(t<<2)|0)>>2])&&(m=e[j(t,80)+222180>>2],s=j(t,40)+203456|0,n=D[s+32>>3],x=D[s+24>>3],D[s+32>>3]=x,n=n*D[s+16>>3]+(D[s>>3]*F+x*D[s+8>>3]),D[s+24>>3]=n,s=ge(n)<2147483648?~~n:-2147483648,g=j(s,j(A,m>>14))+g|0),(0|(t=t+1|0))!=9;);else g=0;l=l+g|0}r=0,(0|(t=e[50776]))>=e[50773]||(s=e[50778],r=e[50772],(g=e[50774])?(A=t+1|0,e[50776]=A,t=j(g,f[r+(t+s|0)|0])):(g=c[0|(r=r+(t+s|0)|0)],r=f[r+1|0],A=t+2|0,e[50776]=A,t=g|r<<8),r=(0|j(j(t,e[50780])>>10,e[50775]))/32|0,(0|(t=e[50777]))>(s+A|0)||(e[50778]=s+((0|j(t,3))/-4|0))),s=(t=e[51293])+1|0,e[51293]=s,t=((j(e[54739],l>>8)>>13)+r|0)+(j(e[50755],I[205184+(t<<1)>>1])>>8)|0,(0|s)>=5500&&(e[51293]=0),s=e[33073];C:{h:{if((0|(r=j(s,t)))>=8388608){if((0|s)>=(0|(g=8388608/(0|t)|0)))break h;break C}if((0|r)>-8388353||(0|s)<(0|(g=-8388608/(0|t)|0)))break C}s=g-1|0,e[33073]=s,r=j(t,s)}if(t=e[51290],e[51290]=t+1,s=t,t=r>>8,f[0|s]=t,s=e[51290],e[51290]=s+1,f[0|s]=r>>>16,(s=e[50756])&&(s=e[s+8>>2])&&rs[0|s](t<<16>>16),r=(s=e[51292])+1|0,e[51292]=r,I[205184+(s<<1)>>1]=t,(0|r)>=5500&&(e[51292]=0),!(J[54046]>=e[51290]+2>>>0))break}A=1;break i}e[50773]=0}e[54731]=e[54729],A=1,m=65535&t,r=c[218920],g=e[s+8>>2],l=e[s+12>>2],n=0,x=0,oe=s=oe+-64|0,w=e[50759];b:if((0|(t=e[w+132>>2]))!=6){if(!r){for(t-1>>>0<=4&&(e[55921]=t,e[55964]=e[110896+(t<<2)>>2]),t=e[w+88>>2],e[54741]=1,e[55922]=(0|t)/32,r=e[50758],t=e[50757];;){m:if((0|r)!=(0|(t=(0|(t=t+1|0))<=169?t:0)))if((0|(U=e[216192+(t<<4)>>2]))!=1){if(U-5>>>0>1)continue}else{if(e[54741]=0,t=e[8+(216192+(t<<4)|0)>>2],!(P[l+4>>1]!=P[t+4>>1]|P[t+6>>1]!=P[l+6>>1]|P[t+8>>1]!=P[l+8>>1]|P[t+10>>1]!=P[l+10>>1])&&P[t+12>>1]==P[l+12>>1])break m;e[54741]=2}break}for((P[g+4>>1]!=P[113564]|P[g+6>>1]!=P[113565]|P[g+8>>1]!=P[113566]|P[g+10>>1]!=P[113567]||P[g+12>>1]!=P[113568])&&(qo(),e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0),t=P[l+4>>1]|P[l+6>>1]<<16,r=P[l>>1]|P[l+2>>1]<<16,I[113562]=r,I[113563]=r>>>16,I[113564]=t,I[113565]=t>>>16,t=P[l+60>>1]|P[l+62>>1]<<16,r=P[l+56>>1]|P[l+58>>1]<<16,I[113590]=r,I[113591]=r>>>16,I[113592]=t,I[113593]=t>>>16,t=P[l+52>>1]|P[l+54>>1]<<16,r=P[l+48>>1]|P[l+50>>1]<<16,I[113586]=r,I[113587]=r>>>16,I[113588]=t,I[113589]=t>>>16,t=P[l+44>>1]|P[l+46>>1]<<16,r=P[l+40>>1]|P[l+42>>1]<<16,I[113582]=r,I[113583]=r>>>16,I[113584]=t,I[113585]=t>>>16,t=P[l+36>>1]|P[l+38>>1]<<16,r=P[l+32>>1]|P[l+34>>1]<<16,I[113578]=r,I[113579]=r>>>16,I[113580]=t,I[113581]=t>>>16,t=P[l+28>>1]|P[l+30>>1]<<16,r=P[l+24>>1]|P[l+26>>1]<<16,I[113574]=r,I[113575]=r>>>16,I[113576]=t,I[113577]=t>>>16,t=P[l+20>>1]|P[l+22>>1]<<16,r=P[l+16>>1]|P[l+18>>1]<<16,I[113570]=r,I[113571]=r>>>16,I[113572]=t,I[113573]=t>>>16,t=P[l+12>>1]|P[l+14>>1]<<16,r=P[l+8>>1]|P[l+10>>1]<<16,I[113566]=r,I[113567]=r>>>16,I[113568]=t,I[113569]=t>>>16,F=+(0|m),(Ae=1&I[g>>1])?(t=c[g+39|0],e[56680]=t,D[28364]=t>>>0,D[28354]=+(c[l+39|0]-t<<6)/F,t=c[g+40|0],D[28366]=t>>>0,D[28356]=+(c[l+40|0]-t<<6)/F,t=c[g+41|0],e[56682]=t,D[28368]=t>>>0,D[28358]=+(c[l+41|0]-t<<6)/F,r=c[g+42|0],e[56684]=r,D[28370]=r>>>0,t=c[g+43|0],n=+(c[l+43|0]-t<<6)/F,x=+(c[l+42|0]-r<<6)/F,T=+(t>>>0)):(e[56728]=0,e[56729]=0,t=0,e[56680]=0,e[56708]=0,e[56709]=0,e[56732]=0,e[56733]=0,e[56712]=0,e[56713]=0,e[56682]=0,e[56736]=0,e[56737]=0,e[56716]=0,e[56717]=0,e[56684]=0,e[56740]=0,e[56741]=0,T=0),e[56688]=t,D[28360]=x,D[28372]=T,D[28362]=n,e[56692]=0,e[56748]=0,e[56749]=0,e[56694]=0,e[56752]=0,e[56753]=0,e[56696]=0,e[56756]=0,e[56757]=0,e[56700]=0,e[56760]=0,e[56761]=0,e[56704]=0,e[56764]=0,e[56765]=0,e[50764]=m,t=1;ee=I[164+(U=(m=t<<1)+w|0)>>1],r=(mt=j(t,80))+222896|0,x=+I[U+218>>1],n=.00390625*+(0|j(ee,I[2+(g+m|0)>>1]))+x,D[r+16>>3]=n,Ce=ge(n)<2147483648?~~n:-2147483648,e[r>>2]=Ce,D[r+48>>3]=64*(.00390625*+(0|j(ee,I[2+(l+m|0)>>1]))+x-n)/F,t>>>0<=3&&(r=mt+222896|0,n=.00390625*+I[U+200>>1]*+(c[35+(t+g|0)|0]<<1),D[r+24>>3]=n,m=ge(n)<2147483648?~~n:-2147483648,e[r+4>>2]=m,D[r+56>>3]=64*(+(c[35+(t+l|0)|0]<<1)-n)/F),(0|(t=t+1|0))!=6;);if(n=+((t=c[g+40|0])<<1),D[27864]=n,r=e[56618],t||(n=+(0|r),D[27864]=n),t=ge(n)<2147483648?~~n:-2147483648,e[55724]=t,m=c[l+40|0],e[55730]=0,e[55731]=1079394304,e[55738]=0,e[55739]=0,e[55725]=89,t=1,D[27868]=64*(+(0|(m?m<<1:r))-n)/F,Ae)for(;r=j(t,80)+222896|0,w=c[56+(m=t+g|0)|0]<<2,e[r+12>>2]=w,n=+(0|w),D[r+40>>3]=n,w=t+l|0,D[r+72>>3]=64*(+(c[w+56|0]<<2)-n)/F,m=c[m+49|0],e[r+8>>2]=m,n=+(m>>>0),D[r+32>>3]=n,D[r- -64>>3]=64*(+c[w+49|0]-n)/F,(0|(t=t+1|0))!=7;);e[56606]=0}for(;;){if((0|(Ce=e[50764]))>(0|(l=e[56606]))){for(t=e[50767],e[56609]=e[55724],e[56619]=e[55725],e[56610]=e[55744],e[56611]=e[55764],e[56612]=e[55784],e[56613]=e[55804],Ae=j(t,10),e[56607]=(0|Ae)/4096,e[56620]=e[55745],e[56621]=e[55765],e[56622]=e[55785],e[56614]=e[55824],e[56630]=e[55746],e[56631]=e[55766],e[56632]=e[55786],e[56633]=e[55806],e[56634]=e[55826],e[56635]=e[55846],mt=e[56680],e[56608]=mt,g=e[56694],e[56656]=g,m=e[56696],e[56653]=m,w=e[56700],e[56655]=w,U=e[56684],e[56649]=U,e[56651]=e[56704],e[56654]=e[56688],e[56652]=e[56682],e[56650]=e[56692],t=0;r=j(t,80)+222896|0,n=D[r+48>>3]+D[r+16>>3],D[r+16>>3]=n,F=D[r+56>>3]+D[r+24>>3],D[r+24>>3]=F,x=D[r+72>>3]+D[r+40>>3],D[r+40>>3]=x,T=D[r- -64>>3]+D[r+32>>3],D[r+32>>3]=T,ee=ge(n)<2147483648?~~n:-2147483648,e[r>>2]=ee,ee=ge(F)<2147483648?~~F:-2147483648,e[r+4>>2]=ee,ee=ge(x)<2147483648?~~x:-2147483648,e[r+12>>2]=ee,ee=ge(T)<2147483648?~~T:-2147483648,e[r+8>>2]=ee,(0|(t=t+1|0))!=9;);for(n=D[28354]+D[28364],D[28364]=n,D[28366]=D[28356]+D[28366],F=D[28358]+D[28368],D[28368]=F,x=D[28360]+D[28370],D[28370]=x,T=D[28362]+D[28372],D[28372]=T,t=ge(n)<2147483648?~~n:-2147483648,e[56680]=t,t=ge(F)<2147483648?~~F:-2147483648,e[56682]=t,t=ge(x)<2147483648?~~x:-2147483648,e[56684]=t,t=ge(T)<2147483648?~~T:-2147483648,e[56688]=t,n=D[28374]+0,D[28374]=n,t=ge(n)<2147483648?~~n:-2147483648,e[56692]=t,n=D[28376]+0,D[28376]=n,t=ge(n)<2147483648?~~n:-2147483648,e[56694]=t,n=D[28378]+0,D[28378]=n,t=ge(n)<2147483648?~~n:-2147483648,e[56696]=t,n=D[28380]+0,D[28380]=n,t=ge(n)<2147483648?~~n:-2147483648,e[56700]=t,n=D[28382]+0,D[28382]=n,t=ge(n)<2147483648?~~n:-2147483648,e[56704]=t,e[56659]=e[55724],e[56669]=e[55725],e[56660]=e[55744],e[56670]=e[55745],e[56661]=e[55764],e[56671]=e[55765],e[56662]=e[55784],e[56672]=e[55785],e[56663]=e[55804],e[56664]=e[55824],e[56665]=e[55844],t=e[50768]+e[50769]|0,e[50768]=t,t>>=8,e[50767]=e[50770]+(j(e[50771],c[e[50766]+((0|t)>=127?127:t)|0])>>8),t=Ce-l|0,e[55923]=(0|t)>=64?64:t,e[55961]=(0|Ae)/40960,t=mt-7|0,e[56658]=(0|t)>0?t:0,D[27974]=U>>>0<=87?.001*+I[111136+(U<<1)>>1]*.05:0,D[27975]=m>>>0<=87?.001*+I[111136+(m<<1)>>1]*.25:0,D[27973]=g>>>0<=87?.001*+I[111136+(g<<1)>>1]:0,D[27971]=w>>>0<=87?.001*+I[111136+(w<<1)>>1]*.05:0,n=(t=e[56629])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.6:0,D[s>>3]=n,n=(t=e[56630])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.4:0,D[s+8>>3]=n,n=(t=e[56631])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.15:0,D[s+16>>3]=n,n=(t=e[56632])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.06:0,D[s+24>>3]=n,n=(t=e[56633])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.04:0,D[s+32>>3]=n,n=(t=e[56634])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.022:0,D[s+40>>3]=n,n=(t=e[56635])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.03:0,D[s+48>>3]=n,n=(t=(0|(t=e[56657]-3|0))<=0?57:t)>>>0<=87?.001*+I[111136+(t<<1)>>1]:0,D[27977]=n/+e[55964],F=D[27968],x=D[27967],t=1;r=223664+(l=t<<6)|0,T=(n=Cs(x*+e[48+(m=226428+(g=t<<2)|0)>>2]))*-n,D[r+216>>3]=T,n*=$n(F*+e[m+8>>2]),n+=n,D[r+208>>3]=n,Ze=1-n-T,D[r+200>>3]=Ze,t>>>0<=5&&(m=e[208+(g=g+226428|0)>>2],r=l+223664|0,We=(Me=Cs(x*+e[g+248>>2]))*$n(F*+(0|m)),We+=We,D[r+1488>>3]=We,Me*=-Me,D[r+1496>>3]=Me,ut=1-We-Me,D[r+1480>>3]=ut,D[r+256>>3]=.015625*(Me-T),D[r+248>>3]=.015625*(We-n),D[r+240>>3]=.015625*(ut-Ze)),(0|(t=t+1|0))!=10;);for(Me=(n=Cs(x*+e[56619]))*-n,D[27985]=Me,We=(n*=$n(F*+(0-e[56609]|0)))+n,D[27984]=We,n=1-We-Me,D[27983]=n,n!=0&&(n=1/n,D[27983]=n,Me*=T=-n,D[27985]=Me,We*=T,D[27984]=We),Ze=(T=Cs(x*+e[56669]))*-T,D[28145]=Ze,ut=(T*=$n(F*+(0-e[56659]|0)))+T,D[28144]=ut,T=1-ut-Ze,D[28143]=T,T!=0&&(T=1/T,D[28143]=T,Ze*=Rt=-T,D[28145]=Ze,ut*=Rt,D[28144]=ut),D[27990]=.015625*(Ze-Me),D[27989]=.015625*(ut-We),D[27988]=.015625*(T-n),t=0;g=e[8+(l=226428+(t<<2)|0)>>2],r=223664+(t<<6)|0,T=(n=Cs(x*+e[l+128>>2]))*$n(F*+(0|g)),T+=T,D[r+848>>3]=T,n*=-n,D[r+856>>3]=n,D[r+840>>3]=D[s+(t<<3)>>3]*(1-T-n),(0|(t=t+1|0))!=7;);if(x=(n=Cs(x*+(e[55918]/2|0)))*-n,D[28137]=x,n*=$n(0*F),n+=n,D[28136]=n,D[28135]=1-n-x,t=1,(0|Pr())!=1)continue;break b}break}t=1,e[54741]>0&&(e[54741]=0,e[55963]=64,e[56606]=l+-64,e[55923]=64,(0|Pr())==1)||(t=0)}else{if(oe=U=oe-752|0,!r){Yt(t=U+376|0,0,376),tn(w,g,t),tn(w,l,t=Yt(U,0,376)),r=e[50768]+j(e[50769],m>>>6|0)|0,e[50768]=r,r>>=8,r=e[50770]+(j(e[50771],c[e[50766]+((0|r)>=127?127:r)|0])>>8)|0,e[50767]=r,D[t+368>>3]=(0|r)/4096|0,e[50773]&&(D[t+736>>3]=D[t+736>>3]/5,D[t+360>>3]=D[t+360>>3]/5),r=e[e[56797]+4>>2],rs[e[e[r>>2]>>2]](r,t+376|0,110,110,-1,0),l=m-110|0,w=e[50758],r=e[50757];m:{for(;;){if((0|w)!=(0|(r=(r+1|0)%170|0))&&!((ee=e[216192+(r<<4)>>2])-5>>>0<2)){if(g=1,(0|ee)!=1)continue;break m}break}l=m-220|0,g=0}(0|l)>0&&(r=e[e[56797]+4>>2],rs[e[e[r>>2]>>2]](r,t,l,l||1,-1,0)),g||(e[t+352>>2]=0,e[t+356>>2]=0,D[t>>3]=D[t+368>>3],r=e[e[56797]+4>>2],rs[e[e[r>>2]>>2]](r,t,55,55,-1,0),e[t+360>>2]=0,e[t+364>>2]=0,r=e[e[56797]+4>>2],rs[e[e[r>>2]>>2]](r,t,55,55,-1,0))}t=e[e[56797]+8>>2],r=e[51290],m=0|rs[e[e[t>>2]>>2]](t,e[54046]-r>>>1|0,r),w=e[51290];m:if(m&&!((0|(r=e[50776]))>=(0|(mt=e[50773]))))for(xt=e[50777],sr=(0|j(xt,3))/-4|0,n=.0009765625*+e[50780],ee=e[50772],l=e[50778],br=e[50775],Ce=e[50774],t=0;;){if(Ae=c[ee+(g=r+l|0)|0],Ce?Ae=j(Ce,Ae<<24>>24):(r=r+1|0,e[50776]=r,Ae|=f[ee+(g=r+l|0)|0]<<8),Ae=ge(F=n*+(0|Ae))<2147483648?~~F:-2147483648,I[(St=w+(t<<1)|0)>>1]=P[St>>1]+((0|j(Ae,br))/40|0),(0|g)>=(0|xt)&&(l=l+sr|0,e[50778]=l),r=r+1|0,e[50776]=r,(0|r)>=(0|mt))break m;if(!(m>>>0>(t=t+1|0)>>>0))break}t=w+(m<<1)|0,e[51290]=t,oe=U+752|0,t=J[54046]<=t>>>0}if(oe=s- -64|0,t)break i;break c}e[50781]=t||100;break c}Gi(t,e[s+8>>2]);break c}t=e[s+8>>2],e[50759]=Jr(203816,t,1344),e[50801]=e[t+108>>2]?105792:106064,t=(0|j(e[t+120>>2],26))/100|0,e[33038]=t,(0|(A=e[50754]))<=11e3&&(f[203300]=1,e[33038]=t<<1),e[54728]=e[50982],t=e[50979],r=e[50978],Yt(205184,0,11e3),e[51293]=0,t=(r=(g=(0|(l=e[50789]))>0)?130:(0|r)>=5499?5499:r)?g?l:(0|t)>=100?100:t:0,e[50755]=t,r=(0|j(r,A))/1e3|0,e[51292]=r,e[54729]=(0|t)>20?r<<1:t?r:0,e[33037]=(0|j(500-t|0,(0|j(c[e[50797]+105596|0],(0|j(e[50787],55))/100|0))/16|0))/500,t=256,(0|(r=(0|(r=e[50785]))>=101?101:r))>=51&&(t=256+(((j(r,25)-1250&65535)>>>0)/50|0)|0),I[101990]=(0|j(I[102026],t))/256,I[101991]=(0|j(I[102027],t))/256,I[101992]=(0|j(I[102028],t))/256,I[101993]=(0|j(I[102029],t))/256,I[101994]=(0|j(I[102030],t))/256,I[101995]=(0|j(I[102031],t))/256,t=e[50790],I[101999]=(0|j(I[102035],j(t,-6)+256|0))/256,I[102e3]=(0|j(I[102036],j(t,-3)+256|0))/256,Ba(8,0,e[50986],0,e[51290]),Zt(e[s+8>>2]);break c}if(!e[50759])break c;r=e[s+12>>2],s=e[s+8>>2],e[55911]=0,e[55915]=t?2097152/(0|t)|0:0,e[55910]=s,t=(0|j(r,e[33037]))/16|0,e[50779]=t,e[50780]=(0|j(j(t,e[50985]),15))/100;break c}Ba(r>>8,t,e[s+8>>2],e[s+12>>2],g)}A=0,t=e[50757]+1|0,e[50757]=(0|t)<=169?t:0}if(f[218920]=A,!((g=e[51290])>>>0<J[54046]))break}l=e[34391],s=(e[51290]-l|0)/2|0,e[34439]=s+e[34439],r=e[34436],t=e[34388]+j(r,36)|0,e[t+4>>2]=0,e[t>>2]=0,e[t+24>>2]=e[34438];n:if(2&(t=e[32538])){if(g=e[34388],(-2&t)==2&&(!(s=r?g:0)|e[s>>2]!=8||(0|(s=e[s+28>>2]))!=e[34389]&&(e[34389]=s)),A=1,(0|r)<2)break n;for(;;){s=r?g+j(A,36)|0:0;i:{c:switch(0|t){case 2:case 3:if(!s|e[s>>2]!=8||(0|(s=e[s+28>>2]))==e[34389])break i;e[34389]=s;break i;case 0:break c;default:break i}(t=e[34440])?(rs[0|t](l,0,s),r=e[34436],t=e[32538]):t=0}if(!((0|(A=A+1|0))<(0|r)))break}}else if((t=e[34440])&&0|rs[0|t](l,s,e[34388]))break s;if(!gt(1)&&!(170-((0|(t=e[50757]-e[50758]|0))<=0?t+170|0:t)|0||(t=e[34388],e[t>>2]=0,e[t+4>>2]=e[34437],e[t+24>>2]=e[34438],ce(1))))break}if(r=0,2&c[130152]||!(t=e[34440])||!(0|rs[0|t](0,0,e[34388])))break t}ce(2),r=268439295}if((0|r)<=268437502){if(!r|(0|r)==268436479|(0|r)!=268437247)break e;return}}}function gt(t){var r,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0;oe=r=oe-720|0,s=e[47198],t||(e[36443]=0,e[36442]=1,e[36444]=0,e[36440]=0,e[36441]=0,t=e[50758],e[36454]=t,e[36427]=-1,e[36424]=-1,e[36446]=0,e[36447]=0,e[36439]=-1,e[36426]=0,e[36455]=t,e[36448]=0,e[36449]=0,e[36450]=0,e[36451]=0,e[36452]=0,e[36453]=0,Va(),e[36427]=-1,t=216192+(e[50758]<<4)|0,e[t>>2]=5,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,e[36426]=0,e[36438]&&(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0));e:{t:if(!((0|(t=e[36442]))>997|e[36423]<=(0|t)))for(Ae=s>>>1&1,Ce=r+48|4,Me=r+348|0,We=r+652|0,Ze=e[32322],F=e[32320],ut=r+60|0,mt=r+648|0,xt=r+56|0,St=r+620|0,U=r- -64|0;;){if(n=145840+(t<<5)|0,!(t=e[50756])|!e[t>>2]||(e[r+12>>2]=0,rn(t=r+16|0,e[n+8>>2],n,0,r+12|0),s=Go(t),A=c[n+17|0],t=216192+(e[50758]<<4)|0,e[t>>2]=16,e[t+8>>2]=A,e[t+4>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),t=1,(0|(A=(0|(s=e[50757]-e[50758]|0))<=0?s+170|0:s))<=(0|((s=c[n+17|0])?(0|s)==2?25:15:10)))break e;if(T=e[36442],2&c[0|n])for(x=2047&P[n+4>>1];;){if(A=e[36443],m=127&(s=e[198304+(A<<2)>>2])){t=s>>>8|0,e[36443]=A+1;s:{n:{switch((31&s)-2|0){case 0:Gi(96&s|8,t),gi(2);break s;case 5:if((0|t)>=e[34064]||!e[4+(m=136272+(A=t<<4)|0)>>2])break s;Ns(10,0),t=216192+(e[50758]<<4)|0,e[t>>2]=6,m=e[m+4>>2],e[t+8>>2]=e[8+(A+136272|0)>>2]+44,e[t+12>>2]=5376,e[t+4>>2]=m;break n;case 8:if((0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))<6)break s;m=e[47353],A=216192+(e[50758]<<4)|0,e[A>>2]=778,e[A+8>>2]=t,e[A+4>>2]=m+x&16777215;break n;case 9:if((0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))<6)break s;m=e[33284],A=216192+(e[50758]<<4)|0,e[A>>2]=1034,e[A+8>>2]=t,e[A+4>>2]=m+1&16777215;break n}Ns(10,0),A=216192+(e[50758]<<4)|0,e[A>>2]=12,e[A+8>>2]=t,e[A+4>>2]=m}t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}if(!(128&s))continue}break}(t=c[n+20|0])&&(1&f[e[47192]+48|0]&c[n+17|0]==2|1&f[e[n+8>>2]+7|0]||(e[36426]=0),s=e[47353]+(2047&P[n+4>>1])|0,e[36445]=s,4&t&&((0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(A=e[47568],t=216192+(e[50758]<<4)|0,e[t>>2]=522,e[t+8>>2]=A,e[t+4>>2]=16777215&s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)),1&f[n+20|0]&&(s=P[n+4>>1],A=e[36444],e[36444]=A+1,(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(x=e[36445],m=e[47355],t=216192+(e[50758]<<4)|0,e[t>>2]=266,e[t+8>>2]=A+m,e[t+4>>2]=16777215&x|(63488&s)<<13,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0))),(0|(t=e[36441]))>0&&(s=216192+(e[36425]<<4)|0,e[s+4>>2]||(e[s+4>>2]=t),e[36441]=0),t=T+1<<5,s=T-1<<5,!(A=c[n+18|0])|2&c[e[n+8>>2]+7|0]||Ns(A,1),m=t+145840|0,l=s+145840|0,x=1;s:{n:{if(e[47198]&&(w=e[n+8>>2],c[w+10|0]!=15)){i:if(c[n+17|0]==2)switch(c[l+17|0]-3|0){case 0:case 5:break n;default:break i}x=0,rn(r+704|0,w,n,Ae,0),(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(s=e[36445],t=216192+(e[50758]<<4)|0,e[t>>2]=1802,e[t+4>>2]=16777215&s,s=e[r+708>>2],e[t+8>>2]=e[r+704>>2],e[t+12>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}i:switch(c[n+17|0]){case 0:Ns(e[n+12>>2],0),f[n+23|0]=c[e[n+8>>2]+14|0];break s;case 4:s=e[n+8>>2],(0|(t=c[m+17|0]))==2|!c[m+20|0]&(0|t)==3||(I[n>>1]=8192|P[n>>1]),2&c[s+7|0]&&(e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[U>>2]=0,e[U+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,os(0,1,n,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[U>>2]=e[r+640>>2],e[36424]<0&&(A=c[m+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=A,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,x=c[m+22|0],A=c[m+21|0],m=e[129280+(c[n+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(w=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=w),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,x|=A<<16,A=(0|A)==255,e[t+12>>2]=A?3604556:x,e[t+8>>2]=A?F:m,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),Nt(s,0,r+48|0,n,0)),os(0,0,n,r+552|0,145784),e[r+552>>2]=4|e[r+552>>2],(0|(t=e[36440]))<=0||(0|(s=e[36424]))<0||(e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Va(),e[36427]=-1,e[36422]=0,(t=e[r+624>>2])&&(A=t,t=e[r+644>>2],pi(A,2,e[r+596>>2]<<1,e[r+552>>2],0,t?(t<<5)/100|0:32)),e[36426]=0;break s;case 6:os(0,0,n,r+552|0,145784),8&c[0|n]&&(t=e[n+12>>2],(0|(s=e[36440]))<=0||(0|(A=e[36424]))<0||(e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=s),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Va(),e[36427]=-1,e[36422]=0,(s=e[r+624>>2])&&(A=t,t=e[r+644>>2],pi(s,2,e[r+596>>2]<<1,e[r+552>>2],A,t?(t<<5)/100|0:32))),t=e[n+12>>2],(0|(s=e[36440]))<=0||(0|(A=e[36424]))<0||(e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=s),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Va(),e[36427]=-1,e[36422]=0,(s=e[r+624>>2])&&(A=t,t=e[r+644>>2],pi(s,2,e[r+596>>2]<<1,e[r+552>>2],A,t?(t<<5)/100|0:32)),e[36426]=0;break s;case 5:A=e[n+8>>2],e[Ce+40>>2]=0,e[(t=Ce)+32>>2]=0,e[t+36>>2]=0,e[t+24>>2]=0,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t+8>>2]=0,e[t+12>>2]=0,e[t>>2]=0,e[t+4>>2]=0,e[r+48>>2]=4;c:{A:{d:{l:switch(c[m+17|0]-2|0){case 0:s=c[n+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,s=c[n+22|0],w=c[n+21|0],x=e[129280+(c[n+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(g=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=g),t=(g=!(255&~w))?F:x,x=1;break A;case 1:break l;default:break d}if(!c[m+20|0]){s=c[m+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,s=c[m+22|0],w=c[m+21|0],x=e[129280+(c[m+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(g=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=g),t=(g=!(255&~w))?F:x,x=1;break A}}if(x=0,e[36424]>=0)break c;s=c[m+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,s=c[n+22|0],w=c[n+21|0],x=e[129280+(c[n+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(g=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=g),t=(g=!(255&~w))?F:x,x=0}ee=e[50758],e[36424]=ee,e[36440]=0,e[(ee=216192+(ee<<4)|0)>>2]=9,e[ee+4>>2]=0,e[ee+12>>2]=g?3604556:255&s|(255&w)<<16,e[ee+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}c:if(!(2&c[A+7|0])&c[l+17|0]!=2)8&c[0|n]&&Ns(50,0);else{if(os(0,1,n,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],Nt(A,0,r+48|0,n,0),!(8&c[0|n]))break c;Ns(25,1),Nt(A,0,r+48|0,n,0)}c:if(x){if(e[36455]!=e[36454])break c;e[36455]=e[50758]}else I[n>>1]=8192|P[n>>1];if(os(0,0,n,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],e[r+76>>2]=e[r+636>>2],e[r+80>>2]=e[r+656>>2],Nt(A,0,r+48|0,n,0),c[n+20|0]|c[84+(145840+(T<<5)|0)|0]||((0|(t=c[m+17|0]))==7&&(Ns(20,0),t=c[m+17|0]),(255&t)!=6))break s;Ns(12,0);break s;case 7:c:{A:{d:{l:{o:switch((t=c[m+17|0])-2|0){case 1:break l;case 0:break o;default:break d}s=c[n+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,x=c[n+22|0],t=c[n+21|0],A=e[129280+(c[n+16|0]<<2)>>2],(0|(s=e[36424]))<0|(0|(w=e[36440]))<=0||e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=w),s=(w=!(255&~t))?F:A;break A}s=c[m+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,x=c[m+22|0],t=c[m+21|0],A=e[129280+(c[m+16|0]<<2)>>2],(0|(s=e[36424]))<0|(0|(w=e[36440]))<=0||e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=w),s=(w=!(255&~t))?F:A;break A}if(e[36424]>=0)break c;s=c[n+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,x=c[n+22|0],t=c[n+21|0],A=e[129280+(c[n+16|0]<<2)>>2],(0|(s=e[36424]))<0|(0|(w=e[36440]))<=0||e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=w),s=(w=!(255&~t))?F:A}A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,e[A+12>>2]=w?3604556:(255&t)<<16|x,e[A+8>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,t=c[m+17|0]}c:{A:{d:switch((255&t)-2|0){case 1:if(c[m+20|0])break A;break;case 0:break d;default:break A}if(e[36455]!=e[36454])break c;e[36455]=e[50758];break c}I[n>>1]=8192|P[n>>1]}os(0,0,n,r+552|0,145784),e[r+56>>2]=0,e[r+60>>2]=0,e[U>>2]=0,e[U+4>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[r+88>>2]=0,e[r+56>>2]=e[r+620>>2],e[U>>2]=e[r+640>>2],e[r+80>>2]=e[r+656>>2],e[r+48>>2]=0,e[r+52>>2]=0,e[r+76>>2]=e[r+636>>2],e[r+92>>2]=e[r+596>>2]<<1,8&c[0|n]&&Nt(e[n+8>>2],0,r+48|0,n,0),Nt(e[n+8>>2],0,r+48|0,n,0);break s;case 8:if(e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[U>>2]=0,e[U+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,1&f[0|n]||(s=c[n+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,A=c[n+22|0],s=c[n+21|0],x=e[129280+(c[n+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(w=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=w),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,A|=s<<16,s=(0|s)==255,e[t+12>>2]=s?3604556:A,e[t+8>>2]=s?F:x,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),c[l+17|0]==8&&(e[36426]=0),os(0,0,n,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],e[r+92>>2]=e[r+596>>2]<<1,c[m+17|0]==2){e[36455]==e[36454]&&(e[36455]=e[50758]),Nt(e[n+8>>2],0,r+48|0,n,0);break s}if(!(!(1&f[0|n])|c[l+17|0]!=2)){Nt(e[n+8>>2],0,r+48|0,n,0);break s}e[36426]=0,Nt(e[n+8>>2],0,r+48|0,n,0),e[36426]=0;break s;case 3:e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[U>>2]=0,e[U+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,A=e[e[n+8>>2]+4>>2],1&f[0|n]||(s=c[n+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,x=c[n+22|0],s=c[n+21|0],w=e[129280+(c[n+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(g=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=g),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,x|=s<<16,s=(0|s)==255,e[t+12>>2]=s?3604556:x,e[t+8>>2]=s?F:w,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),c[l+17|0]==8&&(e[36426]=0),c[m+17|0]!=2|e[36455]!=e[36454]||(e[36455]=e[50758]),os(0,0,n,r+552|0,145784),(0|(t=e[r+584>>2]-c[n+18|0]|0))>0&&Ns(t,1),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],e[r+76>>2]=e[r+636>>2],e[r+80>>2]=e[r+656>>2],e[r+92>>2]=e[r+596>>2]<<1,Nt(e[n+8>>2],0,r+48|0,n,A<<24>>31&5);break s;case 2:break i;default:break s}w=e[n+8>>2]}T=c[n+3|0],e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[U>>2]=0,e[U+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,os(0,0,n,r+552|0,145784),t=e[r+628>>2],e[r+56>>2]=t,e[r+92>>2]=e[r+596>>2]<<1;n:{if(!t||(g=0,A=mt,s=ut,2&c[r+552|0])){if(c[l+17|0]?(g=0,os(0,0,l,r+400|0,0),t=e[r+476>>2],e[r+56>>2]=t,!t|!(2&c[r+400|0])||(e[r+72>>2]=e[r+496>>2],g=1),s=e[r+512>>2],e[r+84>>2]=e[r+508>>2],e[r+88>>2]=s):g=0,t)break n;e[r+48>>2]=1,e[r+52>>2]=1,A=St,s=xt}e[s>>2]=e[A>>2]}e[r+64>>2]=e[r+640>>2],s=c[n+16|0],t=0,(A=c[n+7|0])?(Ho(A,r+96|0),s=vA(e[r+220>>2]),(0|(A=e[r+224>>2]))<=0||(t=vA(A))):s=e[129280+(s<<2)>>2],e[36455]==e[36454]&&(e[36455]=e[50758]),A=(A=15&T)>>>0<2?1:A>>>0>6?3:2;n:{switch(c[l+17|0]-3|0){case 2:case 4:g=c[n+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[12+(l=216192+(l<<4)|0)>>2]=g,e[l+8>>2]=t,e[l>>2]=8,e[l+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,g=c[n+22|0],l=c[n+21|0],(0|(t=e[36440]))<=0||(0|(T=e[36424]))<0||e[4+(T=216192+(T<<4)|0)>>2]||(e[T+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,g|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:g,e[t+8>>2]=l?F:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,Nt(w,1,r+48|0,n,A);break n;case 0:case 5:g=c[n+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[12+(l=216192+(l<<4)|0)>>2]=g,e[l+8>>2]=t,e[l>>2]=8,e[l+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,Nt(w,1,r+48|0,n,A),g=c[n+22|0],l=c[n+21|0],(0|(t=e[36440]))<=0||(0|(T=e[36424]))<0||e[4+(T=216192+(T<<4)|0)>>2]||(e[T+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,g|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:g,e[t+8>>2]=l?F:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0;break n}g?(g=c[n+22|0],(0|(l=e[36440]))<=0||(0|(T=e[36424]))<0||e[4+(T=216192+(T<<4)|0)>>2]||(e[T+4>>2]=l),l=e[50758],e[36424]=l,e[36440]=0,e[(l=216192+(l<<4)|0)>>2]=9,e[l+4>>2]=0,e[l+12>>2]=(g|g<<16)-983040,e[l+8>>2]=Ze,l=e[50758]+1|0,e[50758]=(0|l)<=169?l:0,g=c[n+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[(l=216192+(l<<4)|0)>>2]=8,e[l+4>>2]=0,e[l+12>>2]=g-1,e[l+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,Nt(w,1,r+48|0,n,A),l=c[n+21|0],g=c[n+22|0],(0|(t=e[36440]))<=0||(0|(T=e[36424]))<0||e[4+(T=216192+(T<<4)|0)>>2]||(e[T+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,g|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:g,e[t+8>>2]=l?F:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0):(1&f[0|n]||(g=c[n+19|0],l=e[50758],e[36425]=l,e[36441]=0,e[12+(l=216192+(l<<4)|0)>>2]=g,e[l+8>>2]=t,e[l>>2]=8,e[l+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,g=c[n+22|0],l=c[n+21|0],(0|(t=e[36440]))<=0||(0|(T=e[36424]))<0||e[4+(T=216192+(T<<4)|0)>>2]||(e[T+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,g|=l<<16,l=(0|l)==255,e[t+12>>2]=l?3604556:g,e[t+8>>2]=l?F:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),Nt(w,1,r+48|0,n,A))}!e[47198]|1^x||(rn(r+704|0,e[n+8>>2],n,Ae,0),(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(s=e[36445],t=216192+(e[50758]<<4)|0,e[t>>2]=1802,e[t+4>>2]=16777215&s,s=e[r+708>>2],e[t+8>>2]=e[r+704>>2],e[t+12>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)),e[r+56>>2]=e[r+620>>2],e[r+84>>2]=0,e[r+88>>2]=0,e[r+64>>2]=e[r+640>>2],s=e[r+632>>2],e[r+68>>2]=s,t=We;n:{if(!s&&(!c[m+17|0]||(e[r+72>>2]=0,os(0,0,m,r+248|0,0),e[r+52>>2]=1,t=e[r+368>>2],e[r+84>>2]=e[r+364>>2],e[r+88>>2]=t,s=e[r+328>>2],e[r+68>>2]=s,t=Me,!s)))break n;e[r+72>>2]=e[t>>2]}Nt(w,2,r+48|0,n,A)}if(t=e[36442]+1|0,e[36442]=t,(0|t)>997)break t;if(!(e[36423]>(0|t)))break}(0|(t=e[36440]))<=0||(0|(s=e[36424]))<0||(e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Va(),e[36427]=-1,t=0,e[36423]<=0||(s=e[47568],A=e[33284],(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))>=6&&(t=216192+(e[50758]<<4)|0,e[t>>2]=1290,e[t+8>>2]=s,e[t+4>>2]=16777215&A,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),e[36423]=0,t=0)}return oe=r+720|0,t}function It(t,r,s,n){var A,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0;oe=A=oe-48|0;e:{if(s>>>0<=2){for(br=e[124732+(s<<=2)>>2],Ir=e[s+124720>>2];(0|(s=e[r+4>>2]))==e[r+104>>2]?s=it(r):(e[r+4>>2]=s+1,s=c[0|s]),(0|s)==32|s-9>>>0<5;);ee=1;t:{s:switch(s-43|0){case 0:case 2:break s;default:break t}ee=(0|s)==45?-1:1,(0|(s=e[r+4>>2]))==e[r+104>>2]?s=it(r):(e[r+4>>2]=s+1,s=c[0|s])}t:{s:{for(;;){if(f[m+84056|0]==(32|s)){if(m>>>0>6||((0|(s=e[r+4>>2]))==e[r+104>>2]?s=it(r):(e[r+4>>2]=s+1,s=c[0|s])),(0|(m=m+1|0))!=8)continue;break s}break}if((0|m)!=3){if((0|m)==8)break s;if(!n|m>>>0<4)break t;if((0|m)==8)break s}if((0|(s=e[r+116>>2]))>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1),!(!n|m>>>0<4))for(s=(0|s)<0;s||(e[r+4>>2]=e[r+4>>2]-1),(m=m-1|0)>>>0>3;);}oe=F=oe-16|0,Z(Ie(Ie(0|ee)*Ie(1/0))),(r=2147483647&(w=M(2)))-8388608>>>0<=2130706431?(s=r,s<<=25,n=1065353216+(r=r>>>7|0)|0):(s=w<<25,n=w>>>7|2147418112,r>>>0>=2139095040||(s=0,n=0,r&&(la(F,s=r,0,0,0,(r=ke(r))+81|0),x=e[F>>2],T=e[F+4>>2],s=e[F+8>>2],n=65536^e[F+12>>2]|16265-r<<16))),e[A>>2]=x,e[A+4>>2]=T,e[A+8>>2]=s,e[A+12>>2]=-2147483648&w|n,oe=F+16|0,x=e[A+8>>2],T=e[A+12>>2],w=e[A>>2],U=e[A+4>>2];break e}t:{s:{n:if(!m){for(m=0;;){if(f[m+84473|0]!=(32|s))break n;if(m>>>0>1||((0|(s=e[r+4>>2]))==e[r+104>>2]?s=it(r):(e[r+4>>2]=s+1,s=c[0|s])),(0|(m=m+1|0))==3)break}break s}switch(0|m){case 0:if((0|s)==48){if((0|(m=e[r+4>>2]))==e[r+104>>2]?m=it(r):(e[r+4>>2]=m+1,m=c[0|m]),(-33&m)==88){oe=g=oe-432|0,(0|(s=e[r+4>>2]))==e[r+104>>2]?m=it(r):(e[r+4>>2]=s+1,m=c[0|s]);n:{i:{for(;;){if((0|m)!=48){if((0|m)!=46)break n;if((0|(s=e[r+4>>2]))!=e[r+104>>2]){e[r+4>>2]=s+1,m=c[0|s];break i}break}(0|(s=e[r+4>>2]))!=e[r+104>>2]?(sr=1,e[r+4>>2]=s+1,m=c[0|s]):(sr=1,m=it(r))}m=it(r)}if(Me=1,(0|m)==48){for(;We=(s=We)-1|0,Ze=Ze-!s|0,(0|(s=e[r+4>>2]))==e[r+104>>2]?m=it(r):(e[r+4>>2]=s+1,m=c[0|s]),(0|m)==48;);sr=1}}for(U=1073676288;;){n:{s=32|m;i:{if(!((jr=m-48|0)>>>0<10)){if((0|m)!=46&s-97>>>0>=6)break n;if((0|m)==46){if(Me)break n;Me=1,We=x,Ze=T;break i}}s=(0|m)>57?s-87|0:jr,(0|T)<=0&x>>>0<=7|(0|T)<0?l=s+(l<<4)|0:!T&x>>>0<=28?(mi(g+48|0,s),Kt(g+32|0,St,Rt,w,U,0,0,0,1073414144),St=e[g+32>>2],Rt=e[g+36>>2],w=e[g+40>>2],U=e[g+44>>2],Kt(g+16|0,e[g+48>>2],e[g+52>>2],e[g+56>>2],e[g+60>>2],St,Rt,w,U),sa(g,e[g+16>>2],e[g+20>>2],e[g+24>>2],e[g+28>>2],F,Ce,mt,xt),mt=e[g+8>>2],xt=e[g+12>>2],F=e[g>>2],Ce=e[g+4>>2]):Ae|!s||(Kt(g+80|0,St,Rt,w,U,0,0,0,1073610752),sa(g- -64|0,e[g+80>>2],e[g+84>>2],e[g+88>>2],e[g+92>>2],F,Ce,mt,xt),mt=e[g+72>>2],xt=e[g+76>>2],Ae=1,F=e[g+64>>2],Ce=e[g+68>>2]),T=(x=x+1|0)?T:T+1|0,sr=1}(0|(s=e[r+4>>2]))!=e[r+104>>2]?(e[r+4>>2]=s+1,m=c[0|s]):m=it(r);continue}break}n:if(sr){if((0|T)<=0&x>>>0<=7|(0|T)<0)for(w=x,U=T;l<<=4,(0|(w=w+1|0))!=8|(U=w?U:U+1|0););i:{c:{A:{if((-33&m)==80){if(w=Jn(r,n),U=s=H,w|(0|s)!=-2147483648)break i;if(n){if((0|(s=e[r+116>>2]))>0|(0|s)>=0)break A;break c}F=0,Ce=0,ei(r,0,0),s=0,r=0;break n}if(w=0,U=0,e[r+116>>2]<0)break i}e[r+4>>2]=e[r+4>>2]-1}w=0,U=0}if(l)if(s=w+((r=Me?We:x)<<2)|0,r=(T=(Me?Ze:T)<<2|r>>>30)+U|0,(x=s-32|0)>>>0>0-br>>>0&(0|(r=T=(s>>>0<w>>>0?r+1|0:r)-(s>>>0<32)|0))>=0|(0|r)>0)e[56798]=68,mi(g+160|0,ee),Kt(g+144|0,e[g+160>>2],e[g+164>>2],e[g+168>>2],e[g+172>>2],-1,-1,-1,2147418111),Kt(g+128|0,e[g+144>>2],e[g+148>>2],e[g+152>>2],e[g+156>>2],-1,-1,-1,2147418111),F=e[g+128>>2],Ce=e[g+132>>2],s=e[g+140>>2],r=e[g+136>>2];else if((0|T)>=(0|(s=(r=br-226|0)>>31))&r>>>0<=x>>>0|(0|s)<(0|T)){if((0|l)>=0)for(;sa(g+416|0,F,Ce,mt,xt,0,0,0,-1073807360),sa(g+400|0,F,Ce,mt,xt,(r=s=(0|(r=ll(F,Ce,mt,xt,1073610752)))>=0)?e[g+416>>2]:F,r?e[g+420>>2]:Ce,r?e[g+424>>2]:mt,r?e[g+428>>2]:xt),x=(r=x)-1|0,T=T-!r|0,mt=e[g+408>>2],xt=e[g+412>>2],F=e[g+400>>2],Ce=e[g+404>>2],(0|(l=s|l<<1))>=0;);r=T-((br>>31)+(x>>>0<br>>>0)|0)|0,(0|(s=(s=32+(x-br|0)|0)>>>0<Ir>>>0&(0|(r=s>>>0<32?r+1|0:r))<=0|(0|r)<0?(0|s)>0?s:0:Ir))>=113?(mi(g+384|0,ee),We=e[g+392>>2],Ze=e[g+396>>2],St=e[g+384>>2],Rt=e[g+388>>2],w=0,r=0):(xa(g+352|0,po(1,144-s|0)),mi(g+336|0,ee),St=e[g+336>>2],Rt=e[g+340>>2],We=e[g+344>>2],Ze=e[g+348>>2],IA(g+368|0,e[g+352>>2],e[g+356>>2],e[g+360>>2],e[g+364>>2],St,Rt,We,Ze),ut=e[g+376>>2],Ur=e[g+380>>2],w=e[g+372>>2],r=e[g+368>>2]),oo(g+320|0,(n=!(1&l)&!!(0|qt(F,Ce,mt,xt,0,0,0,0))&(0|s)<32)+l|0),Kt(g+304|0,St,Rt,We,Ze,e[g+320>>2],e[g+324>>2],e[g+328>>2],e[g+332>>2]),s=r,sa(g+272|0,e[g+304>>2],e[g+308>>2],e[g+312>>2],e[g+316>>2],r,w,ut,Ur),Kt(g+288|0,St,Rt,We,Ze,(r=n)?0:F,r?0:Ce,r?0:mt,r?0:xt),sa(g+256|0,e[g+288>>2],e[g+292>>2],e[g+296>>2],e[g+300>>2],e[g+272>>2],e[g+276>>2],e[g+280>>2],e[g+284>>2]),Yo(g+240|0,e[g+256>>2],e[g+260>>2],e[g+264>>2],e[g+268>>2],s,w,ut,Ur),qt(r=e[g+240>>2],n=e[g+244>>2],s=e[g+248>>2],w=e[g+252>>2],0,0,0,0)||(e[56798]=68),ir(g+224|0,r,n,s,w,x),F=e[g+224>>2],Ce=e[g+228>>2],s=e[g+236>>2],r=e[g+232>>2]}else e[56798]=68,mi(g+208|0,ee),Kt(g+192|0,e[g+208>>2],e[g+212>>2],e[g+216>>2],e[g+220>>2],0,0,0,65536),Kt(g+176|0,e[g+192>>2],e[g+196>>2],e[g+200>>2],e[g+204>>2],0,0,0,65536),F=e[g+176>>2],Ce=e[g+180>>2],s=e[g+188>>2],r=e[g+184>>2];else xa(g+112|0,0*+(0|ee)),F=e[g+112>>2],Ce=e[g+116>>2],s=e[g+124>>2],r=e[g+120>>2]}else{i:{c:{if((0|(s=e[r+116>>2]))>0|(0|s)>=0){if(s=e[r+4>>2],e[r+4>>2]=s-1,!n)break c;if(e[r+4>>2]=s-2,!Me)break i;e[r+4>>2]=s-3;break i}if(n)break i}ei(r,0,0)}xa(g+96|0,0*+(0|ee)),F=e[g+96>>2],Ce=e[g+100>>2],s=e[g+108>>2],r=e[g+104>>2]}e[A+16>>2]=F,e[A+20>>2]=Ce,e[A+24>>2]=r,e[A+28>>2]=s,oe=g+432|0,x=e[A+24>>2],T=e[A+28>>2],w=e[A+16>>2],U=e[A+20>>2];break e}e[r+116>>2]<0||(e[r+4>>2]=e[r+4>>2]-1)}m=r,ut=ee,g=n,r=0,ee=0,oe=l=oe-8976|0,Ur=(jr=0-br|0)-Ir|0;n:{i:{for(;;){if((0|s)!=48){if((0|s)!=46)break n;if((0|(s=e[m+4>>2]))!=e[m+104>>2]){e[m+4>>2]=s+1,s=c[0|s];break i}break}(0|(r=e[m+4>>2]))!=e[m+104>>2]?(e[m+4>>2]=r+1,s=c[0|r]):s=it(m),r=1}s=it(m)}if(Ae=1,(0|s)==48){for(;x=(r=x)-1|0,T=T-!r|0,(0|(r=e[m+4>>2]))==e[m+104>>2]?s=it(m):(e[m+4>>2]=r+1,s=c[0|r]),(0|s)==48;);r=1}}e[l+784>>2]=0;n:{i:{c:{A:{d:{if((n=(0|s)==46)|(F=s-48|0)>>>0<=9)for(;;){l:{if(1&n){if(!Ae){x=w,T=U,Ae=1;break l}n=!r;break d}U=(w=w+1|0)?U:U+1|0,(0|ee)<=2044?(sr=(0|s)==48?sr:w,r=(l+784|0)+(ee<<2)|0,Me&&(F=(j(e[r>>2],10)+s|0)-48|0),e[r>>2]=F,r=1,Me=(s=(0|(n=Me+1|0))==9)?0:n,ee=s+ee|0):(0|s)!=48&&(e[l+8960>>2]=1|e[l+8960>>2],sr=18396)}if((0|(s=e[m+4>>2]))==e[m+104>>2]?s=it(m):(e[m+4>>2]=s+1,s=c[0|s]),!((n=(0|s)==46)|(F=s-48|0)>>>0<10))break}if(x=Ae?x:w,T=Ae?T:U,!(!r|(-33&s)!=69)){if(F=Jn(m,g),Ce=r=H,!(F|(0|r)!=-2147483648)){if(!g)break c;F=0,Ce=0,e[m+116>>2]<0||(e[m+4>>2]=e[m+4>>2]-1)}T=T+Ce|0,T=(x=x+F|0)>>>0<F>>>0?T+1|0:T;break i}if(n=!r,(0|s)<0)break A}e[m+116>>2]<0||(e[m+4>>2]=e[m+4>>2]-1)}if(!n)break i;e[56798]=28}w=0,U=0,ei(m,0,0),s=0,r=0;break n}if(r=e[l+784>>2])if(w>>>0>9&(0|U)>=0|(0|U)>0|(0|w)!=(0|x)|(0|T)!=(0|U)|(r>>>Ir|0?(0|Ir)<=30:0))if(x>>>0>jr>>>1>>>0&(0|T)>=0|(0|T)>0)e[56798]=68,mi(l+96|0,ut),Kt(l+80|0,e[l+96>>2],e[l+100>>2],e[l+104>>2],e[l+108>>2],-1,-1,-1,2147418111),Kt(l- -64|0,e[l+80>>2],e[l+84>>2],e[l+88>>2],e[l+92>>2],-1,-1,-1,2147418111),w=e[l+64>>2],U=e[l+68>>2],s=e[l+76>>2],r=e[l+72>>2];else if((s=x>>>0<(r=br-226|0)>>>0)&(0|T)<=(0|(r>>=31))|(0|r)>(0|T))e[56798]=68,mi(l+144|0,ut),Kt(l+128|0,e[l+144>>2],e[l+148>>2],e[l+152>>2],e[l+156>>2],0,0,0,65536),Kt(l+112|0,e[l+128>>2],e[l+132>>2],e[l+136>>2],e[l+140>>2],0,0,0,65536),w=e[l+112>>2],U=e[l+116>>2],s=e[l+124>>2],r=e[l+120>>2];else{if(Me){if((0|Me)<=8){for(m=e[(r=(l+784|0)+(ee<<2)|0)>>2];m=j(m,10),(0|(Me=Me+1|0))!=9;);e[r>>2]=m}ee=ee+1|0}if(Ae=x,!((0|sr)>(0|x)|(0|sr)>=9|(0|x)>17)){if((0|Ae)==9){mi(l+192|0,ut),oo(l+176|0,e[l+784>>2]),Kt(l+160|0,e[l+192>>2],e[l+196>>2],e[l+200>>2],e[l+204>>2],e[l+176>>2],e[l+180>>2],e[l+184>>2],e[l+188>>2]),w=e[l+160>>2],U=e[l+164>>2],s=e[l+172>>2],r=e[l+168>>2];break n}if((0|Ae)<=8){mi(l+272|0,ut),oo(l+256|0,e[l+784>>2]),Kt(l+240|0,e[l+272>>2],e[l+276>>2],e[l+280>>2],e[l+284>>2],e[l+256>>2],e[l+260>>2],e[l+264>>2],e[l+268>>2]),mi(l+224|0,e[124720+(0-Ae<<2)>>2]),$s(l+208|0,e[l+240>>2],e[l+244>>2],e[l+248>>2],e[l+252>>2],e[l+224>>2],e[l+228>>2],e[l+232>>2],e[l+236>>2]),w=e[l+208>>2],U=e[l+212>>2],s=e[l+220>>2],r=e[l+216>>2];break n}if(r=27+(j(Ae,-3)+Ir|0)|0,!((s=e[l+784>>2])>>>r|0&&(0|r)<=30)){mi(l+352|0,ut),oo(l+336|0,s),Kt(l+320|0,e[l+352>>2],e[l+356>>2],e[l+360>>2],e[l+364>>2],e[l+336>>2],e[l+340>>2],e[l+344>>2],e[l+348>>2]),mi(l+304|0,e[124648+(Ae<<2)>>2]),Kt(l+288|0,e[l+320>>2],e[l+324>>2],e[l+328>>2],e[l+332>>2],e[l+304>>2],e[l+308>>2],e[l+312>>2],e[l+316>>2]),w=e[l+288>>2],U=e[l+292>>2],s=e[l+300>>2],r=e[l+296>>2];break n}}for(;!e[(l+784|0)+((ee=(s=ee)-1|0)<<2)>>2];);if(Me=0,r=(0|Ae)%9|0){if(n=0,r=(0|Ae)<0?r+9|0:r,s){for(T=1e9/(0|(x=e[124720+(0-r<<2)>>2]))|0,F=0,m=0;w=(w=F)+(ee=((U=e[(F=(l+784|0)+(m<<2)|0)>>2])>>>0)/(x>>>0)|0)|0,e[F>>2]=w,n=(w=!w&(0|n)==(0|m))?n+1&2047:n,Ae=w?Ae-9|0:Ae,F=j(T,U-j(x,ee)|0),(0|(m=m+1|0))!=(0|s););F&&(e[(l+784|0)+(s<<2)>>2]=F,s=s+1|0)}else s=0;Ae=9+(Ae-r|0)|0}else n=0;for(;;){m=(l+784|0)+(n<<2)|0;i:{for(;;){if(((0|Ae)!=36|J[m>>2]>=10384593)&(0|Ae)>=36)break i;for(ee=s+2047|0,F=0,r=s;s=r,x=F,F=(r=e[(ee=(l+784|0)+((w=2047&ee)<<2)|0)>>2])<<29,r=U=r>>>3|0,!(T=(x=x+F|0)>>>0<F>>>0?r+1|0:r)&x>>>0<1000000001?F=0:x=(r=x)-ds(F=ko(r,T,1e9),H,1e9,0)|0,e[ee>>2]=x,r=(0|w)!=(s-1&2047)||(0|n)==(0|w)||x?s:w,ee=w-1|0,(0|n)!=(0|w););if(Me=Me-29|0,F)break}(0|(n=n-1&2047))==(0|r)&&(m=s=(x=l+784|0)+((r+2046&2047)<<2)|0,T=e[s>>2],s=r-1&2047,e[m>>2]=T|e[x+(s<<2)>>2]),Ae=Ae+9|0,e[(l+784|0)+(n<<2)>>2]=F;continue}break}i:{c:for(;;){for(x=s+1&2047,F=(l+784|0)+((s-1&2047)<<2)|0;;){w=(0|Ae)>45?9:1;A:{for(;;){r=n,m=0;d:{for(;;){if((0|(n=r+m&2047))!=(0|s)&&!((n=e[(l+784|0)+(n<<2)>>2])>>>0<(T=e[124672+(m<<2)>>2])>>>0)){if(n>>>0>T>>>0)break d;if((0|(m=m+1|0))!=4)continue}break}if((0|Ae)==36){for(x=0,T=0,m=0,w=0,U=0;(0|(n=r+m&2047))==(0|s)&&(e[780+(l+((s=s+1&2047)<<2)|0)>>2]=0),oo(l+768|0,e[(l+784|0)+(n<<2)>>2]),Kt(l+752|0,x,T,w,U,0,0,1342177280,1075633366),sa(l+736|0,e[l+752>>2],e[l+756>>2],e[l+760>>2],e[l+764>>2],e[l+768>>2],e[l+772>>2],e[l+776>>2],e[l+780>>2]),w=e[l+744>>2],U=e[l+748>>2],x=e[l+736>>2],T=e[l+740>>2],(0|(m=m+1|0))!=4;);if(mi(l+720|0,ut),Kt(l+704|0,x,T,w,U,e[l+720>>2],e[l+724>>2],e[l+728>>2],e[l+732>>2]),w=e[l+712>>2],U=e[l+716>>2],x=0,T=0,F=e[l+704>>2],Ce=e[l+708>>2],(0|(n=(ee=(0|(m=(g=Me+113|0)-br|0))<(0|Ir))?(0|m)>0?m:0:Ir))<=112)break A;break i}}if(Me=w+Me|0,n=s,(0|r)!=(0|s))break}for(U=1e9>>>w|0,ee=~(-1<<w),m=0,n=r;T=(T=m)+((g=e[(m=(l+784|0)+(r<<2)|0)>>2])>>>w|0)|0,e[m>>2]=T,n=(T=!T&(0|r)==(0|n))?n+1&2047:n,Ae=T?Ae-9|0:Ae,m=j(U,g&ee),(0|s)!=(0|(r=r+1&2047)););if(!m)continue;if((0|n)!=(0|x)){e[(l+784|0)+(s<<2)>>2]=m,s=x;continue c}e[F>>2]=1|e[F>>2];continue}break}break}xa(l+656|0,po(1,225-n|0)),IA(l+688|0,e[l+656>>2],e[l+660>>2],e[l+664>>2],e[l+668>>2],F,Ce,w,U),St=e[l+696>>2],Rt=e[l+700>>2],mt=e[l+688>>2],xt=e[l+692>>2],xa(l+640|0,po(1,113-n|0)),Sn(l+672|0,F,Ce,w,U,e[l+640>>2],e[l+644>>2],e[l+648>>2],e[l+652>>2]),Yo(l+624|0,F,Ce,w,U,x=e[l+672>>2],T=e[l+676>>2],We=e[l+680>>2],Ze=e[l+684>>2]),sa(l+608|0,mt,xt,St,Rt,e[l+624>>2],e[l+628>>2],e[l+632>>2],e[l+636>>2]),w=e[l+616>>2],U=e[l+620>>2],F=e[l+608>>2],Ce=e[l+612>>2]}if((0|(Ae=r+4&2047))!=(0|s)){i:if((Ae=e[(l+784|0)+(Ae<<2)>>2])>>>0<=499999999){if(!Ae&(r+5&2047)==(0|s))break i;xa(l+496|0,.25*+(0|ut)),sa(l+480|0,x,T,We,Ze,e[l+496>>2],e[l+500>>2],e[l+504>>2],e[l+508>>2]),We=e[l+488>>2],Ze=e[l+492>>2],x=e[l+480>>2],T=e[l+484>>2]}else(0|Ae)==5e8?(As=+(0|ut),(r+5&2047)!=(0|s)?(xa(l+560|0,.75*As),sa(l+544|0,x,T,We,Ze,e[l+560>>2],e[l+564>>2],e[l+568>>2],e[l+572>>2]),We=e[l+552>>2],Ze=e[l+556>>2],x=e[l+544>>2],T=e[l+548>>2]):(xa(l+528|0,.5*As),sa(l+512|0,x,T,We,Ze,e[l+528>>2],e[l+532>>2],e[l+536>>2],e[l+540>>2]),We=e[l+520>>2],Ze=e[l+524>>2],x=e[l+512>>2],T=e[l+516>>2])):(xa(l+592|0,.75*+(0|ut)),sa(l+576|0,x,T,We,Ze,e[l+592>>2],e[l+596>>2],e[l+600>>2],e[l+604>>2]),We=e[l+584>>2],Ze=e[l+588>>2],x=e[l+576>>2],T=e[l+580>>2]);(0|n)>111||(Sn(l+464|0,x,T,We,Ze,0,0,0,1073676288),qt(e[l+464>>2],e[l+468>>2],e[l+472>>2],e[l+476>>2],0,0,0,0)||(sa(l+448|0,x,T,We,Ze,0,0,0,1073676288),We=e[l+456>>2],Ze=e[l+460>>2],x=e[l+448>>2],T=e[l+452>>2]))}sa(l+432|0,F,Ce,w,U,x,T,We,Ze),Yo(l+416|0,e[l+432>>2],e[l+436>>2],e[l+440>>2],e[l+444>>2],mt,xt,St,Rt),w=e[l+424>>2],U=e[l+428>>2],F=e[l+416>>2],Ce=e[l+420>>2],(Ur-2|0)>=(2147483647&g)||(e[l+408>>2]=w,e[l+412>>2]=2147483647&U,e[l+400>>2]=F,e[l+404>>2]=Ce,Kt(l+384|0,F,Ce,w,U,0,0,0,1073610752),w=(r=(0|(r=ll(e[l+400>>2],e[l+404>>2],e[l+408>>2],e[l+412>>2],1081081856)))>=0)?e[l+392>>2]:w,U=r?e[l+396>>2]:U,F=r?e[l+384>>2]:F,Ce=r?e[l+388>>2]:Ce,Me=r+Me|0,!(!!(0|qt(x,T,We,Ze,0,0,0,0))&(r?ee&(0|n)!=(0|m):ee))&(Me+110|0)<=(0|Ur)||(e[56798]=68)),ir(l+368|0,F,Ce,w,U,Me),w=e[l+368>>2],U=e[l+372>>2],s=e[l+380>>2],r=e[l+376>>2]}else mi(l+48|0,ut),oo(l+32|0,r),Kt(l+16|0,e[l+48>>2],e[l+52>>2],e[l+56>>2],e[l+60>>2],e[l+32>>2],e[l+36>>2],e[l+40>>2],e[l+44>>2]),w=e[l+16>>2],U=e[l+20>>2],s=e[l+28>>2],r=e[l+24>>2];else xa(l,0*+(0|ut)),w=e[l>>2],U=e[l+4>>2],s=e[l+12>>2],r=e[l+8>>2]}e[A+40>>2]=r,e[A+44>>2]=s,e[A+32>>2]=w,e[A+36>>2]=U,oe=l+8976|0,x=e[A+40>>2],T=e[A+44>>2],w=e[A+32>>2],U=e[A+36>>2];break e;case 3:break s}(0|(s=e[r+116>>2]))>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1);break t}if((0|(s=e[r+4>>2]))==e[r+104>>2]?s=it(r):(e[r+4>>2]=s+1,s=c[0|s]),(0|s)!=40){if(T=2147450880,e[r+116>>2]<0)break e;e[r+4>>2]=e[r+4>>2]-1;break e}for(m=1;(0|(s=e[r+4>>2]))==e[r+104>>2]?s=it(r):(e[r+4>>2]=s+1,s=c[0|s]),s-48>>>0<10|s-65>>>0<26|(0|s)==95||!(s-97>>>0>=26);)m=m+1|0;if(T=2147450880,(0|s)==41)break e;(0|(s=e[r+116>>2]))>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1);s:{if(n){if(m)break s;break e}break t}for(;m=m-1|0,(0|s)>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1),m;);break e}e[56798]=28,ei(r,0,0)}T=0}e[t>>2]=w,e[t+4>>2]=U,e[t+8>>2]=x,e[t+12>>2]=T,oe=A+48|0}function Nt(t,r,s,n,A){var l,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0;if(oe=l=oe-112|0,e[s+8>>2]){br=e[50754]/70|0,Ce=(F=e[n+12>>2])||256;e:if((0|r)!=2){if((0|r)==1){t:if(c[t+11|0]!=3)switch(c[n-15|0]-3|0){case 0:case 5:break t;default:break e}Ce=(0|(F=e[e[47192]+44>>2]))<(0|Ce)?Ce:F}}else{if((0|(F=e[e[47192]+80>>2]))<=0|!(8&c[0|n]|F>>>0<=c[t+14|0]|32&c[t+6|0]))break e;br<<=1}if(e[36436]=0,Ze=t,Ir=r,x=n,oe=Ae=oe-16|0,t=e[34460]+e[s+8>>2]|0,r=(r=c[t+2|0])>>>0>=24?24:r,e[Ae+12>>2]=r,m=e[s+12>>2]+e[s+24>>2]|0,e[36422]=m,r){for(F=t+4|0,g=1&I[t+4>>1];t=145488+(T<<3)|0,n=F+(g?T<<6:j(T,44))|0,e[t+4>>2]=n,ee=P[n>>1],I[t+2>>1]=ee,I[t>>1]=c[n+16|0],w=2&ee?T:w,(0|(T=T+1|0))!=(0|r););F=145488,(0|w)<=0||((0|Ir)!=1?(r=r-w|0,e[Ae+12>>2]=r,F=145488+(w<<3)|0):(r=w+1|0,e[Ae+12>>2]=r,F=145488))}else r=0,F=145488;if(!(!e[s+4>>2]|e[s+20>>2]|c[Ze+11|0]!=2)){if(g=e[s+36>>2],n=e[s+40>>2],t=0,(0|(r=e[Ae+12>>2]))>=2){w=g>>>12|0,ee=n>>>26&7,ut=n>>>18&248,Me=j(We=63&n,50),xt=63&(St=g>>>6|0),T=g<<1&126,Rt=j(n>>>16&31,50)-750|0,sr=j(n>>>11&31,50)-750|0,mt=j(n>>>6&31,50)-750|0;e:{t:if((0|Ir)!=1){if(!(w|We))break e;if(8&w?(r=e[4+(F+((m=r-1|0)<<3)|0)>>2],I[r>>1]<0?t=r:(t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,m=P[r+20>>1]|P[r+22>>1]<<16,t=177888+(t<<6)|0,g=P[r+16>>1]|P[r+18>>1]<<16,I[t+16>>1]=g,I[t+18>>1]=g>>>16,I[t+20>>1]=m,I[t+22>>1]=m>>>16,m=P[r+4>>1]|P[r+6>>1]<<16,g=P[r>>1]|P[r+2>>1]<<16,I[t>>1]=g,I[t+2>>1]=g>>>16,I[t+4>>1]=m,I[t+6>>1]=m>>>16,m=P[r+12>>1]|P[r+14>>1]<<16,g=P[r+8>>1]|P[r+10>>1]<<16,I[t+8>>1]=g,I[t+10>>1]=g>>>16,I[t+12>>1]=m,I[t+14>>1]=m>>>16,m=P[r+28>>1]|P[r+30>>1]<<16,g=P[r+24>>1]|P[r+26>>1]<<16,I[t+24>>1]=g,I[t+26>>1]=g>>>16,I[t+28>>1]=m,I[t+30>>1]=m>>>16,m=P[r+36>>1]|P[r+38>>1]<<16,g=P[r+32>>1]|P[r+34>>1]<<16,I[t+32>>1]=g,I[t+34>>1]=g>>>16,I[t+36>>1]=m,I[t+38>>1]=m>>>16,m=P[r+44>>1]|P[r+46>>1]<<16,g=P[r+40>>1]|P[r+42>>1]<<16,I[t+40>>1]=g,I[t+42>>1]=g>>>16,I[t+44>>1]=m,I[t+46>>1]=m>>>16,m=P[r+52>>1]|P[r+54>>1]<<16,g=P[r+48>>1]|P[r+50>>1]<<16,I[t+48>>1]=g,I[t+50>>1]=g>>>16,I[t+52>>1]=m,I[t+54>>1]=m>>>16,m=P[r+60>>1]|P[r+62>>1]<<16,r=P[r+56>>1]|P[r+58>>1]<<16,I[t+56>>1]=r,I[t+58>>1]=r>>>16,I[t+60>>1]=m,I[t+62>>1]=m>>>16,f[t+16|0]=0,I[t>>1]=32768|P[t>>1],m=e[Ae+12>>2]-1|0),e[4+(F+(m<<3)|0)>>2]=t,r=1792,(0|(m=I[t+4>>1]))<300||(r=1536,m>>>0<400||(r=m>>>0<500?1280:1024)),e[36436]=r,g=35):(e[Ae+12>>2]=r+1,I[(t=(m=F+(r<<3)|0)-8|0)>>1]=T,r=e[t+4>>2],t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=177888+(St=t<<6)|0)&&(g=P[r+4>>1]|P[r+6>>1]<<16,U=P[r>>1]|P[r+2>>1]<<16,I[t>>1]=U,I[t+2>>1]=U>>>16,I[t+4>>1]=g,I[t+6>>1]=g>>>16,g=P[r+60>>1]|P[r+62>>1]<<16,U=P[r+56>>1]|P[r+58>>1]<<16,I[t+56>>1]=U,I[t+58>>1]=U>>>16,I[t+60>>1]=g,I[t+62>>1]=g>>>16,g=P[r+52>>1]|P[r+54>>1]<<16,U=P[r+48>>1]|P[r+50>>1]<<16,I[t+48>>1]=U,I[t+50>>1]=U>>>16,I[t+52>>1]=g,I[t+54>>1]=g>>>16,g=P[r+44>>1]|P[r+46>>1]<<16,U=P[r+40>>1]|P[r+42>>1]<<16,I[t+40>>1]=U,I[t+42>>1]=U>>>16,I[t+44>>1]=g,I[t+46>>1]=g>>>16,g=P[r+36>>1]|P[r+38>>1]<<16,U=P[r+32>>1]|P[r+34>>1]<<16,I[t+32>>1]=U,I[t+34>>1]=U>>>16,I[t+36>>1]=g,I[t+38>>1]=g>>>16,g=P[r+28>>1]|P[r+30>>1]<<16,U=P[r+24>>1]|P[r+26>>1]<<16,I[t+24>>1]=U,I[t+26>>1]=U>>>16,I[t+28>>1]=g,I[t+30>>1]=g>>>16,g=P[r+20>>1]|P[r+22>>1]<<16,U=P[r+16>>1]|P[r+18>>1]<<16,I[t+16>>1]=U,I[t+18>>1]=U>>>16,I[t+20>>1]=g,I[t+22>>1]=g>>>16,g=P[r+12>>1]|P[r+14>>1]<<16,r=P[r+8>>1]|P[r+10>>1]<<16,I[t+8>>1]=r,I[t+10>>1]=r>>>16,I[t+12>>1]=g,I[t+14>>1]=g>>>16,f[St+177904|0]=0,I[t>>1]=32768|P[t>>1]),I[m>>1]=0,e[m+4>>2]=t,T>>>0>=37&&(e[36422]=(T+e[36422]|0)-36),g=xt<<1,We&&he(t,Me,mt,sr,ee,Rt,ut,w)),e[e[32972]+132>>2]||(r=c[t+17|0])&&(r=I[102896+(((0|(r=(g<<6>>>0)/(r>>>0)|0))>=199?199:r)<<1)>>1],f[t+18|0]=(0|j(r,c[t+18|0]))/512,f[t+19|0]=(0|j(r,c[t+19|0]))/512,f[t+20|0]=(0|j(r,c[t+20|0]))/512,f[t+21|0]=(0|j(r,c[t+21|0]))/512,f[t+22|0]=(0|j(r,c[t+22|0]))/512,f[t+23|0]=(0|j(r,c[t+23|0]))/512,f[t+24|0]=(0|j(r,c[t+24|0]))/512,f[t+25|0]=(0|j(r,c[t+25|0]))/512),n-536870912>>>0<=1073741823){if(ee=e[44469],(0|(m=e[Ae+12>>2]))>0)for(t=j(n>>>29|0,10)+102854|0,ut=I[t+4>>1],We=I[t+2>>1],Me=I[t>>1],Rt=I[t+6>>1],sr=I[t+8>>1],g=0;r=e[4+(mt=F+(g<<3)|0)>>2],I[r>>1]<0?t=r:(t=177888+(xt=(ee=(0|(t=ee+1|0))<=169?t:0)<<6)|0)?(n=P[r+4>>1]|P[r+6>>1]<<16,m=P[r>>1]|P[r+2>>1]<<16,I[t>>1]=m,I[t+2>>1]=m>>>16,I[t+4>>1]=n,I[t+6>>1]=n>>>16,n=P[r+60>>1]|P[r+62>>1]<<16,m=P[r+56>>1]|P[r+58>>1]<<16,I[t+56>>1]=m,I[t+58>>1]=m>>>16,I[t+60>>1]=n,I[t+62>>1]=n>>>16,n=P[r+52>>1]|P[r+54>>1]<<16,m=P[r+48>>1]|P[r+50>>1]<<16,I[t+48>>1]=m,I[t+50>>1]=m>>>16,I[t+52>>1]=n,I[t+54>>1]=n>>>16,n=P[r+44>>1]|P[r+46>>1]<<16,m=P[r+40>>1]|P[r+42>>1]<<16,I[t+40>>1]=m,I[t+42>>1]=m>>>16,I[t+44>>1]=n,I[t+46>>1]=n>>>16,n=P[r+36>>1]|P[r+38>>1]<<16,m=P[r+32>>1]|P[r+34>>1]<<16,I[t+32>>1]=m,I[t+34>>1]=m>>>16,I[t+36>>1]=n,I[t+38>>1]=n>>>16,n=P[r+28>>1]|P[r+30>>1]<<16,m=P[r+24>>1]|P[r+26>>1]<<16,I[t+24>>1]=m,I[t+26>>1]=m>>>16,I[t+28>>1]=n,I[t+30>>1]=n>>>16,n=P[r+20>>1]|P[r+22>>1]<<16,m=P[r+16>>1]|P[r+18>>1]<<16,I[t+16>>1]=m,I[t+18>>1]=m>>>16,I[t+20>>1]=n,I[t+22>>1]=n>>>16,n=P[r+12>>1]|P[r+14>>1]<<16,r=P[r+8>>1]|P[r+10>>1]<<16,I[t+8>>1]=r,I[t+10>>1]=r>>>16,I[t+12>>1]=n,I[t+14>>1]=n>>>16,f[xt+177904|0]=0,I[t>>1]=32768|P[t>>1],m=e[Ae+12>>2]):t=0,e[mt+4>>2]=t,I[t+8>>1]=(0|j(ut,I[t+8>>1]))/256,I[t+6>>1]=(0|j(We,I[t+6>>1]))/256,I[t+4>>1]=(0|j(Me,I[t+4>>1]))/256,I[t+12>>1]=(0|j(sr,I[t+12>>1]))/256,I[t+10>>1]=(0|j(Rt,I[t+10>>1]))/256,(0|m)>(0|(g=g+1|0)););e[44469]=ee}if(!t)break e}else{r=e[F+4>>2],(0|(m=I[r>>1]))<0?t=r:(n=(0|(n=e[44469]+1|0))<=169?n:0,e[44469]=n,(n=177888+(m=n<<6)|0)&&(t=P[r+4>>1]|P[r+6>>1]<<16,U=P[r>>1]|P[r+2>>1]<<16,I[n>>1]=U,I[n+2>>1]=U>>>16,I[n+4>>1]=t,I[n+6>>1]=t>>>16,t=P[r+60>>1]|P[r+62>>1]<<16,U=P[r+56>>1]|P[r+58>>1]<<16,I[n+56>>1]=U,I[n+58>>1]=U>>>16,I[n+60>>1]=t,I[n+62>>1]=t>>>16,t=P[r+52>>1]|P[r+54>>1]<<16,U=P[r+48>>1]|P[r+50>>1]<<16,I[n+48>>1]=U,I[n+50>>1]=U>>>16,I[n+52>>1]=t,I[n+54>>1]=t>>>16,t=P[r+44>>1]|P[r+46>>1]<<16,U=P[r+40>>1]|P[r+42>>1]<<16,I[n+40>>1]=U,I[n+42>>1]=U>>>16,I[n+44>>1]=t,I[n+46>>1]=t>>>16,t=P[r+36>>1]|P[r+38>>1]<<16,U=P[r+32>>1]|P[r+34>>1]<<16,I[n+32>>1]=U,I[n+34>>1]=U>>>16,I[n+36>>1]=t,I[n+38>>1]=t>>>16,t=P[r+28>>1]|P[r+30>>1]<<16,U=P[r+24>>1]|P[r+26>>1]<<16,I[n+24>>1]=U,I[n+26>>1]=U>>>16,I[n+28>>1]=t,I[n+30>>1]=t>>>16,t=P[r+20>>1]|P[r+22>>1]<<16,U=P[r+16>>1]|P[r+18>>1]<<16,I[n+16>>1]=U,I[n+18>>1]=U>>>16,I[n+20>>1]=t,I[n+22>>1]=t>>>16,t=P[r+12>>1]|P[r+14>>1]<<16,r=P[r+8>>1]|P[r+10>>1]<<16,I[n+8>>1]=r,I[n+10>>1]=r>>>16,I[n+12>>1]=t,I[n+14>>1]=t>>>16,f[m+177904|0]=0,m=-32768|P[n>>1],I[n>>1]=m,t=n)),e[F+4>>2]=t,I[F>>1]=T||50,I[F+2>>1]=16384|P[F+2>>1],I[t>>1]=16384|m,m=e[F+12>>2],r=c[m+17|0],n=e[32972],e[n+132>>2]&&(f[t+39|0]=c[m+39|0]-4);s:if(We){if(2048&g){r=(j(r,31&St)>>>0)/30|0,e[n+132>>2]||(n=c[t+17|0])&&(r=I[102896+(((0|(r=(r<<6>>>0)/(n>>>0)|0))>=199?199:r)<<1)>>1],f[t+18|0]=(0|j(r,c[t+18|0]))/512,f[t+19|0]=(0|j(r,c[t+19|0]))/512,f[t+20|0]=(0|j(r,c[t+20|0]))/512,f[t+21|0]=(0|j(r,c[t+21|0]))/512,f[t+22|0]=(0|j(r,c[t+22|0]))/512,f[t+23|0]=(0|j(r,c[t+23|0]))/512,f[t+24|0]=(0|j(r,c[t+24|0]))/512,f[t+25|0]=(0|j(r,c[t+25|0]))/512),he(t,Me,mt,sr,ee,Rt,ut,w);break s}if(he(t,Me,mt,sr,ee,Rt,ut,w),e[e[32972]+132>>2]||!(r=c[t+17|0]))break s;r=I[102896+(((0|(r=(xt<<7>>>0)/(r>>>0)|0))>=199?199:r)<<1)>>1],f[t+18|0]=(0|j(r,c[t+18|0]))/512,f[t+19|0]=(0|j(r,c[t+19|0]))/512,f[t+20|0]=(0|j(r,c[t+20|0]))/512,f[t+21|0]=(0|j(r,c[t+21|0]))/512,f[t+22|0]=(0|j(r,c[t+22|0]))/512,f[t+23|0]=(0|j(r,c[t+23|0]))/512,f[t+24|0]=(0|j(r,c[t+24|0]))/512,f[t+25|0]=(0|j(r,c[t+25|0]))/512}else if(n=e[n+132>>2],8&w){if(n||!(n=c[t+17|0]))break s;r=((16320&j(r,48))>>>0)/(n>>>0)|0,r=I[102896+((r>>>0>=199?199:r)<<1)>>1],f[t+18|0]=(0|j(r,c[t+18|0]))/512,f[t+19|0]=(0|j(r,c[t+19|0]))/512,f[t+20|0]=(0|j(r,c[t+20|0]))/512,f[t+21|0]=(0|j(r,c[t+21|0]))/512,f[t+22|0]=(0|j(r,c[t+22|0]))/512,f[t+23|0]=(0|j(r,c[t+23|0]))/512,f[t+24|0]=(0|j(r,c[t+24|0]))/512,f[t+25|0]=(0|j(r,c[t+25|0]))/512}else n||(r=c[t+17|0])&&(r=I[102896+(((r=1792/(r>>>0)|0)>>>0>=199?199:r)<<1)>>1],f[t+18|0]=(0|j(r,c[t+18|0]))/512,f[t+19|0]=(0|j(r,c[t+19|0]))/512,f[t+20|0]=(0|j(r,c[t+20|0]))/512,f[t+21|0]=(0|j(r,c[t+21|0]))/512,f[t+22|0]=(0|j(r,c[t+22|0]))/512,f[t+23|0]=(0|j(r,c[t+23|0]))/512,f[t+24|0]=(0|j(r,c[t+24|0]))/512,f[t+25|0]=(0|j(r,c[t+25|0]))/512);if(!(8&w))break t;r=2816,(0|(n=I[t+4>>1]))<300||(r=2560,n>>>0<400||(r=n>>>0<500?2304:2048)),e[36436]=r}4&w&&(I[t>>1]=32|P[t>>1]),2&w&&(I[t>>1]=16|P[t>>1])}64&w&&Ns(20,0),t=T&w<<27>>31}else t=0;m=t+e[36422]|0,e[36422]=m,r=e[Ae+12>>2]}if((0|(n=r-1|0))<=0)g=0;else{if(t=0,T=0,g=0,r-2>>>0>=3)for(ut=-4&n,ee=0;g=(((I[(w=T<<3)+F>>1]+g|0)+I[F+(8|w)>>1]|0)+I[F+(16|w)>>1]|0)+I[F+(24|w)>>1]|0,T=T+4|0,(0|ut)!=(0|(ee=ee+4|0)););if(w=3&n)for(;g=I[F+(T<<3)>>1]+g|0,T=T+1|0,(0|w)!=(0|(t=t+1|0)););}if(t=r,(w=e[s+20>>2])&&(t=n,T=w+e[34460]|0,(ee=c[T+2|0])&&(We=P[T+4>>1],I[F+(n<<3)>>1]=c[T+20|0],w=1,t=r,(0|ee)!=1))){if(ut=T+4|0,We&=1,Rt=1&(T=ee-1|0),(0|ee)!=2)for(sr=-2&T,ee=0;mt=ut+(w<<6)|0,xt=ut+j(w,44)|0,St=c[(Me=We?mt:xt)+16|0],e[4+(T=F+(t<<3)|0)>>2]=Me,I[T>>1]=St,I[T+2>>1]=P[Me>>1],mt=c[16+(Me=We?mt- -64|0:xt+44|0)|0],e[T+12>>2]=Me,I[T+8>>1]=mt,I[T+10>>1]=P[Me>>1],w=w+2|0,t=t+2|0,(0|sr)!=(0|(ee=ee+2|0)););Rt&&(w=ut+(We?w<<6:j(w,44))|0,ee=c[w+16|0],e[4+(T=F+(t<<3)|0)>>2]=w,I[T>>1]=ee,I[T+2>>1]=P[w>>1],t=t+1|0)}e:if(!((0|g)<=0)){t:{switch(Ir-1|0){case 1:if(w=(0|(w=(e[s+44>>2]+m|0)-45|0))<=10?10:w,8&c[0|x]&&(w=w+(c[e[36128]+14|0]<<1)|0),(0|n)<=0)break e;if(x=(w<<8)/(0|g)|0,T=0,(0|r)!=2)for(r=-2&n,w=0;I[(g=(m=T<<3)+F|0)>>1]=(0|j(x,I[g>>1]))/256,I[(m=F+(8|m)|0)>>1]=(0|j(x,I[m>>1]))/256,T=T+2|0,(0|r)!=(0|(w=w+2|0)););if(!(1&n))break e;I[(r=F+(T<<3)|0)>>1]=(0|j(x,I[r>>1]))/256;break e;case 0:if(e[s>>2]!=1||(0|(w=e[s+44>>2]))>129)break t;I[F>>1]=(0|j(w,I[F>>1]))/130;break t}(0|(w=e[s+44>>2]))<=0||(m=(w-g|0)+m|0,e[36422]=m)}if(!(!m|(0|n)<=0)){if(x=(g+m<<8)/(0|g)|0,T=0,(0|r)!=2)for(r=-2&n,w=0;I[(g=(m=T<<3)+F|0)>>1]=(0|j(x,I[g>>1]))/256,I[(m=F+(8|m)|0)>>1]=(0|j(x,I[m>>1]))/256,T=T+2|0,(0|r)!=(0|(w=w+2|0)););1&n&&(I[(r=F+(T<<3)|0)>>1]=(0|j(x,I[r>>1]))/256)}}if(e[l+108>>2]=t,oe=Ae+16|0,F){if((0|(t=e[s+16>>2]))!=e[36438]&&(e[36438]=t,r=216192+(e[50758]<<4)|0,e[r>>2]=14,e[r+4>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),T=(t=e[e[32972]+132>>2])?1:3,r=e[F+4>>2],e[s+28>>2]|!c[145748]||(f[145748]=0,T=t?2:4),(n=e[36426])&&(!((2&(t=P[n>>1]))>>>1|c[n+16|0]<2)|16&t||(m=216192+(e[36439]<<4)|0,e[m+12>>2]=r,8&t&&(t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=177888+(w=t<<6)|0)&&(x=P[r+4>>1]|P[r+6>>1]<<16,g=P[r>>1]|P[r+2>>1]<<16,I[t>>1]=g,I[t+2>>1]=g>>>16,I[t+4>>1]=x,I[t+6>>1]=x>>>16,x=P[r+60>>1]|P[r+62>>1]<<16,g=P[r+56>>1]|P[r+58>>1]<<16,I[t+56>>1]=g,I[t+58>>1]=g>>>16,I[t+60>>1]=x,I[t+62>>1]=x>>>16,x=P[r+52>>1]|P[r+54>>1]<<16,g=P[r+48>>1]|P[r+50>>1]<<16,I[t+48>>1]=g,I[t+50>>1]=g>>>16,I[t+52>>1]=x,I[t+54>>1]=x>>>16,x=P[r+44>>1]|P[r+46>>1]<<16,g=P[r+40>>1]|P[r+42>>1]<<16,I[t+40>>1]=g,I[t+42>>1]=g>>>16,I[t+44>>1]=x,I[t+46>>1]=x>>>16,x=P[r+36>>1]|P[r+38>>1]<<16,g=P[r+32>>1]|P[r+34>>1]<<16,I[t+32>>1]=g,I[t+34>>1]=g>>>16,I[t+36>>1]=x,I[t+38>>1]=x>>>16,x=P[r+28>>1]|P[r+30>>1]<<16,g=P[r+24>>1]|P[r+26>>1]<<16,I[t+24>>1]=g,I[t+26>>1]=g>>>16,I[t+28>>1]=x,I[t+30>>1]=x>>>16,x=P[r+20>>1]|P[r+22>>1]<<16,g=P[r+16>>1]|P[r+18>>1]<<16,I[t+16>>1]=g,I[t+18>>1]=g>>>16,I[t+20>>1]=x,I[t+22>>1]=x>>>16,x=P[r+12>>1]|P[r+14>>1]<<16,g=P[r+8>>1]|P[r+10>>1]<<16,I[t+8>>1]=g,I[t+10>>1]=g>>>16,I[t+12>>1]=x,I[t+14>>1]=x>>>16,f[w+177904|0]=0,I[t>>1]=32768|P[t>>1]),I[8+(w=w+177888|0)>>1]=P[n+8>>1],f[w+21|0]=c[n+21|0],I[w+10>>1]=P[n+10>>1],f[w+22|0]=c[n+22|0],I[w+12>>1]=P[n+12>>1],f[w+23|0]=c[n+23|0],I[w+14>>1]=P[n+14>>1],f[w+24|0]=c[n+24|0],f[w+25|0]=c[n+25|0],e[m+12>>2]=t))),(0|Ir)!=2|c[Ze+11|0]!=2||(Va(),e[36427]=e[50758]),!((0|(Ze=e[l+108>>2]))<2)){for(t=e[36433],x=(j(256-t|0,Ce)+(t<<8)|0)/256|0,t=e[36432],m=(j(256-t|0,Ce)+(t<<8)|0)/256|0,g=e[50754],t=0,n=1;w=P[2+(Ae=(F+(n<<3)|0)-8|0)>>1],w=(0|j((0|j(g,I[Ae>>1]))/1e3|0,4&w?m:16384&w?x:Ce))/256|0,e[(n<<2)+l>>2]=w,t=t+w|0,(0|Ze)!=(0|(n=n+1|0)););if(!((0|t)<=0|(0|t)>=(0|br)|(0|Ze)<2)){if(n=1,x=1&(w=Ze-1|0),(0|Ze)!=2)for(m=-2&w,Ce=0;e[(w=(n<<2)+l|0)>>2]=(0|j(e[w>>2],br))/(0|t),e[w+4>>2]=(0|j(e[w+4>>2],br))/(0|t),n=n+2|0,(0|m)!=(0|(Ce=Ce+2|0)););x&&(e[(n=(n<<2)+l|0)>>2]=(0|j(e[n>>2],br))/(0|t))}if(Ce=0,!((0|Ze)<2))for(Ze=Ir+256|0,n=1;t=e[4+(F+(n<<3)|0)>>2],!(w=e[s+28>>2])|128&c[0|r]||(e[36422]=0,pi(w,Ze,0,g=e[s>>2],0,x=(x=e[s+32>>2])?(x<<5)/100|0:32),f[145748]=1,e[s+28>>2]=0),(0|A)<0||(A=64&c[0|r]?6:A,(e[l+108>>2]-1|0)==(0|n)&&(A=(w=A)|(3840&(A=e[36436])?A:0))),w=e[(n<<2)+l>>2],e[36440]=w+e[36440],e[36441]=w+e[36441],w?(x=e[50758],e[36439]=x,(0|A)>=0&&(e[(x=216192+(x<<4)|0)>>2]=T,e[x+12>>2]=t,e[x+8>>2]=r,e[x+4>>2]=w+(A<<16),r=e[50758]+1|0,e[50758]=(0|r)<=169?r:0),e[36426]=t,Ce=w+Ce|0):e[36426]=0,r=t,(0|(n=n+1|0))<e[l+108>>2];);}!e[36438]|(0|Ir)==1||(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}}oe=l+112|0}function _t(t,r,s,n){var A,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0;oe=A=oe-1856|0,e[A+164>>2]=0,s?U=e[s>>2]:Yt(s=A- -64|0,0,96),e[33264]=0,e[A+1824>>2]=0,e[A+1828>>2]=0,e[A+1832>>2]=0,e[A+1836>>2]=0,f[A+1616|0]=0,f[A+992|0]=0,f[A+1200|0]=0,f[A+784|0]=0;e:if(e[t+688>>2]){for(e[A+1840>>2]=r,c[0|(l=r)]==32&&(l=r+1|0,e[A+1840>>2]=l),ee=A+416|1,St=A+1844|1,sr=A+1848|1,br=A+1852|1,e[A+1820>>2]=l,Hr(A+168|0,l),l=e[A+1820>>2];(32|c[0|l])!=32;)l=Hr(A+164|0,l)+e[A+1820>>2]|0,e[A+1820>>2]=l,Me=Me+1|0;Jr(A+256|0,r,Rt=(0|(m=l-r|0))>=159?159:m),!(mt=4194304&U)|(0|Me)!=1?(Ze=((0|(l=e[47202]))==36)<<2,(0|Me)==1|(0|l)!=36||(l=e[A+1840>>2]-1|0,e[A+1840>>2]=l,f[0|l]=95,Ze=0,g=!!(0|ba(t,A+1840|0,A+1616|0,A+1832|0,0,s)),l=e[47202])):(g=1,Hr(A+172|0,l+1|0),ca(e[A+172>>2])&&(0|Ln(e[A+164>>2]))==(0|Ln(e[A+172>>2]))&&(g=0),Ze=(0|(l=e[47202]))==36?4:g,g=0);t:{s:{n:{i:{c:if(16&l)Ae=15&l,Ze=0;else{if(We=1,g||(We=!!(0|ba(t,A+1840|0,A+1616|0,A+1832|0,2,s))),50331648&(l=e[A+1832>>2])&&(m=e[A+1820>>2],c[m+1|0]==46&&(f[m+1|0]=32,l=e[A+1832>>2])),536870912&l){if(!n)break e;Qr(n,e[A+1840>>2]);break e}if(8192&l|!(128&l)|We)n=e[33264];else if(l=e[A+1840>>2],e[A+1820>>2]=l,!((0|(n=e[33264]))<=0))for(g=0;c[0|l]==32&&(f[0|l]=45,g=g+1|0,l=e[A+1820>>2],n=e[33264]),l=l+1|0,e[A+1820>>2]=l,(0|n)>(0|g););A:if(!(n|(0|Me)!=1)&&(m=Hr(A+576|0,F=e[A+1840>>2]),c[m+F|0]==32)){g=A+1408|0,n=F;d:{l:{o:{for(;;){p:if(ca(e[A+576>>2])){b:{if(c[1+(w=n+m|0)|0]==46){Ae=0;m:switch(c[(l=m+2|0)+n|0]-32|0){case 0:break b;case 7:break m;default:break p}if(Ae=1,m=l,c[w+3|0]==115)break b;break p}if(Ae=1,(0|x)<=0)break o}if(!((0|m)<=0)){if(Ce=3&m,T=0,m>>>0<4)l=0;else for(ut=-4&m,l=0,w=0;f[0|g]=c[n+l|0],f[g+1|0]=c[(1|l)+n|0],f[g+2|0]=c[(2|l)+n|0],f[g+3|0]=c[(3|l)+n|0],l=l+4|0,g=g+4|0,(0|ut)!=(0|(w=w+4|0)););if(Ce)for(;f[0|g]=c[n+l|0],l=l+1|0,g=g+1|0,(0|Ce)!=(0|(T=T+1|0)););}if(x=x+1|0,Ae)n=n+m|0;else if(m=Hr(A+576|0,n=3+(n+m|0)|0),c[n+m|0]==32)continue}break}if(!((0|x)<2)){(m=(m=g-(l=A+1408|0)|0)+(l=Jr(F,l,m))|0)>>>0<n>>>0&&Yt(m,32,(A+1408|0)+n-(l+g)|0),e[33264]=(x<<1)-2,e[A+1836>>2]=0;break l}}if(!x)break A;if(e[A+1832>>2]=0,e[A+1836>>2]=0,!e[33264])break d}e[A+1832>>2]=128}Ze=1}if(c[A+1616|0]==21){Qr(189088,A+1616|0),l=0;break e}if(Ir=c[A+1833|0],g=1,!We){if(e[A+168>>2]-48>>>0<10){if(vr(t,84174,189088),l=0,c[189088]==21)break e;if(!(!(128&c[t+109|0])|32&c[s+2|0])){f[189088]=21,f[189089]=0;break e}g=!!(0|Ks(t,e[A+1840>>2],A+1616|0,A+1832|0,s,0))}else g=0;if(!(g|(3&U)==2)&&(16777216&(n=e[t+104>>2])||(g=0,!(!(33554432&n)|!(1&U))))&&(16&U||(g=0,!(1&f[s+13|0])))){ut=e[A+1840>>2],l=0,x=0,w=0,oe=Ce=oe-224|0,f[0|(T=A+1616|0)]=0,e[Ce+216>>2]=0,e[Ce+220>>2]=0;A:if(!(f[ut-2|0]-48>>>0<10|(1&f[0|s]?0:2&c[t+107|0])||(n=c[0|(m=ut+1|0)],(!(2561&P[t+106>>1])|!(1&f[s+2|0]))&(0|n)==32))){if((0|(x=c[0|ut]))!=32){for(Ae=32767,n=0;;){if(!(l=hi(101868,x<<24>>24,8))){x=0;break A}if(F=0,(0|(l=e[(l<<2)-305584>>2]))==(0|n)&&!((0|(F=w+1|0))<=2)){x=0;break A}d:{l:{o:{p:{if(!((0|n)<2)){if((0|n)==10|(0|n)==100)break p;if(!((0|n)>(0|l))){x=0;break A}}if(!n)break l;if((0|n)<(0|l))break o;break l}if((0|n)>=(0|l))break l}if(x=0,(0|xt)%10|(0|j(n,10))<(0|l))break A;l=l-n|0,Ae=n;break d}if((0|l)>=(0|Ae)){x=0;break A}xt=n+xt|0}if(x=c[0|m],m=g=m+1|0,n=l,w=F,(0|x)==32)break}n=c[0|g]}else g=m;if((n<<24>>24)-48>>>0<10)x=0;else if((0|(n=l+xt|0))<e[t+120>>2])x=0;else if((0|n)>e[t+116>>2])x=0;else if(vr(t,85600,Ce+176|0),l=T,4&c[t+107|0]||(l=Qr(T,l=Ce+176|0)+_r(l)|0),e[Ce+4>>2]=e[t+140>>2],e[Ce>>2]=n,mr(Ce+16|0,85839,Ce),x=0,c[0|g]!=46){Ys(t,ut,g,s,1)&&(e[s>>2]=32768|e[s>>2]),m=0;d:if(8&c[t+107|0]){if(w=e[s>>2],e[t+212>>2]==26741){if(32768&w)break d;if(!(16384&w))break A;m=1,w=0;l:{o:switch(c[0|g]-97|0){case 0:case 4:break o;default:break l}o:{p:{b:{m:switch((Ae=c[g+1|0])-116|0){case 6:break l;case 1:case 2:case 3:case 4:case 5:break p;case 0:break m;default:break b}if(c[g+2|0]!=116)break o;break l}if((0|Ae)==32)break l}if(!((0|n)%1e3|0)&&(0|Ae)==108)break l}w=1}if(w)break d;break A}e[s>>2]=32768|w}e[(n=t+8232|0)>>2]=0,e[n+4>>2]=0,Ks(t,Ce+16|2,l,Ce+216|0,s,m),x=1,4&c[t+107|0]&&wn(T,Ce+176|0)}}oe=Ce+224|0,x?(e[A+1832>>2]=8192|e[A+1832>>2],g=1):g=0}}if(Ae=We?Ze:32&Ir?1:Ze,Ze=0,!(!(1&U)|(0|Me)<2)&&ls(e[A+168>>2])){A:{if(1&f[188785]){if(!(!(n=8192&(l=e[A+1832>>2]))|g))break A;Ze=n>>>2^2048;break c}if(g)break i;l=e[A+1832>>2]}if(!(128&l|Me>>>0>3)&&!((0|(l=e[t+8220>>2]))<4)&&(n=1,(0|l)>=e[t+8216>>2]))break t}}if(T=0,(0|Ae)<=0)break n;n=Ae;break t}if((0|(n=Ae))>0)break t;T=0,F=0,w=0,x=0;break s}if(g)F=0,w=0,x=0;else{n=e[A+1840>>2],e[A+1820>>2]=n,l=999,x=0,F=0,ee=0;n:{i:{c:{for(;;){A:{d:{l:{if(l-1>>>0>=2){if((0|Me)<2||(Hr(A+1408|0,n),(0|(l=e[A+1408>>2]))<577&e[t+600>>2]>0)||(l=Ln(l),(e[l+4>>2]!=e[t+600>>2]?l:0)|e[t+40>>2]==1))break l;switch(l=c[0|n],e[A+1408>>2]=l<<24>>24,l-32|0){default:if(!l)break l;break;case 0:case 7:break l;case 1:case 2:case 3:case 4:case 5:case 6:}T=Hr(A+1408|0,n),We=9;o:{p:{b:{m:if(-33&(l=e[A+1408>>2])){for(g=0,w=0;;){C:{h:{if((0|l)==39){if((0|F)>0|(0|g)>1)break m;if(w=g?w:39,e[t+40>>2]!=3)break h;break C}w=g?w:l}g=g+1|0}if(!dl(t,l)){if((0|(l=e[A+1408>>2]))!=39&&!ls(l))break l;if(T=Hr(A+1408|0,n+T|0)+T|0,-33&(l=e[A+1408>>2]))continue;break m}break}if((0|g)<=2)break b;We=g}else w=0;if((0|(l=e[t+40>>2]))!=2)break p;oe=l=oe-208|0,f[0|l]=0,g=c[0|(m=n-1|0)],f[0|m]=32,n=Bs(t,n,l,200,0,-2147483648,0),f[0|m]=g,oe=l+208|0,n=!n|(32768&n)>>>15;break o}l=e[t+40>>2],We=g}n=(f[t+168|0]+1|0)<(We-((0|l)==(0|w))|0)}if(!n)break l;n=e[A+1820>>2]}if(c[0|n]!=39)break d;x=67108864,Ze=0}if(T=0,kr(t,A+992|0,0,F),n=e[A+1820>>2],(0|(l=c[0|n]))!=32)break A;F=0,w=0;break s}if(Ze=0,n=On(t,n,A+992|0,1&(ee|=(0|F)>0))+e[A+1820>>2]|0,e[A+1820>>2]=n,c[A+992|0]==21)break c;for(F=F+1|0,g=0;g=(l=g)+1|0,c[n+l|0]!=32;);x=67108864;continue}break}if(!c[A+992|0]|(0|l)==39||(f[n-1|0]=32,n=e[A+1820>>2]),m=Bs(t,n,A+1616|0,200,A+784|0,U,A+1832|0),(0|(n=c[A+1616|0]))==21){Qr(189088,A+1616|0),l=0;break e}if(!(n|c[A+784|0])&&(Hr(A+1408|0,e[A+1820>>2]),(0|Me)==1&&(ca(e[A+1408>>2])||gl(e[A+1408>>2])))){YA(t,e[A+1820>>2],A+1616|0,Ae)&&Qr(189088,A+1616|0),l=0;break e}e[A+172>>2]=f[e[A+1820>>2]-1|0];A:if(1024&m)for(ut=A+176|1,Ae=0,l=1,ee=0,F=0;;){if((We=131072&m)|!(1&l)||(f[A+1408|0]=0,!(n=Bs(t,e[A+1820>>2],A+1408|0,200,A+576|0,805306368|U,A+1832|0)))){2048&m&&(e[t+8184>>2]=1),f[e[A+1820>>2]-1|0]=e[A+172>>2];d:{l:{o:{p:if(We){if(f[A+176|0]=0,l=e[A+1820>>2],n=1,w=63&m){if(Ce=1&m,F=w-1|0,g=0,(0|w)!=1)for(xt=w-Ce|0,w=0;T=l,e[A+1820>>2]=l+1,f[0|(mt=(A+176|0)+n|0)]=(0|g)!=(0|F)?c[0|l]:0,l=l+2|0,e[A+1820>>2]=l,f[mt+1|0]=(0|F)!=(1|g)?c[T+1|0]:0,g=g+2|0,n=n+2|0,(0|xt)!=(0|(w=w+2|0)););Ce&&(w=l+1|0,e[A+1820>>2]=w,f[(A+176|0)+n|0]=(0|g)!=(0|F)?c[0|l]:0,n=n+1|0,l=w)}f[(A+176|0)+n|0]=0}else{if(l=e[A+1820>>2],!(w=15&m))break o;if(n=0,g=w,T=3&m)for(;l=l+1|0,e[A+1820>>2]=l,(192&c[0|l])==128||(g=g-1|0,(0|T)!=(0|(n=n+1|0))););if(w>>>0<4)break p;for(;;)if(l=l+1|0,e[A+1820>>2]=l,(192&c[0|l])!=128){for(;l=l+1|0,e[A+1820>>2]=l,(192&c[0|l])==128;);for(;l=l+1|0,e[A+1820>>2]=l,(192&c[0|l])==128;);for(;l=l+1|0,e[A+1820>>2]=l,(192&c[0|l])==128;);if(n=(0|g)>4,g=g-4|0,!n)break}}if(n=l-1|0,e[A+172>>2]=f[0|n],f[0|n]=32,n=U|=8388608,!We)break l;if(ua(A+576|0,A+784|0,12),e[A+1852>>2]=ut,n=Qr(A+1200|0,l=A+1616|0),ba(t,A+1852|0,l,A+1832|0,0,s)&&Qr(n,A+1616|0),!(32&c[A+1833|0]))break d;f[0|n]=0,YA(t,e[A+1852>>2],n,1);break d}n=l-1|0,e[A+172>>2]=f[0|n],f[0|n]=32,n=8388608|U}U=n,wn(A+1200|0,A+784|0)}if(f[A+784|0]=0,w=1,n=ba(t,A+1820|0,A+1616|0,A+1824|0,1024,s),e[A+1832>>2]||(l=e[A+1828>>2],e[A+1832>>2]=e[A+1824>>2],e[A+1836>>2]=l,w=ee),n){T=0,F=m;break n}if(T=Bs(t,e[A+1820>>2],A+1616|0,200,A+784|0,8404992&U,A+1832|0),l=1,F=m,ee=w,c[A+1616|0]==21){f[e[A+1820>>2]-1|0]=e[A+172>>2],Qr(189088,A+1616|0),l=0;break e}}else l=A+416|0,qn(t,e[A+1820>>2],n,l),T=Bs(t,e[A+1820>>2],A+1616|0,200,A+784|0,268435456|U,A+1832|0),Jr(e[A+1820>>2],l,_r(l)),1024&T||(Qr(A+1616|0,A+1408|0),l=Qr(A+784|0,A+576|0),8&c[188788]&&(Tr(w=l,l=A+576|0),m=e[47195],e[A+48>>2]=l,wa(m,85205,A+48|0)),T=n),l=0;if(n=(g=1024&T)>>>10|0,Ae>>>0>48)break A;if(Ae=Ae+1|0,m=T,!g)break}else T=m,F=0,ee=0,n=0;if(n|!T)break i;for(m=Qr(A+1408|0,A+1616|0),g=qn(t,e[A+1820>>2],T,A+416|0),w=ee,l=T;;){A:{if(f[A+1616|0]=0,c[A+1200|0]){if(f[e[A+1820>>2]-1|0]=e[A+172>>2],n=ba(t,A+1840|0,A+1616|0,A+1824|0,g,s),f[e[A+1820>>2]-1|0]=32,c[A+1616|0]==21){t=A+416|0,Jr(e[A+1820>>2],t,_r(t)),Qr(189088,A+1616|0),l=0;break e}if(e[A+1832>>2]||(ee=e[A+1828>>2],e[A+1832>>2]=e[A+1824>>2],e[A+1836>>2]=ee),n){f[A+1200|0]=0;break A}w=e[A+1824>>2]?1:w}if(n=ba(t,A+1820|0,A+1616|0,A+1824|0,g,s),c[A+1616|0]==21){t=A+416|0,Jr(e[A+1820>>2],t,_r(t)),Qr(189088,A+1616|0),l=0;break e}if(e[A+1832>>2]||(ee=e[A+1828>>2],e[A+1832>>2]=e[A+1824>>2],e[A+1836>>2]=ee),!n)if(16384&l)Qr(A+1616|0,m);else{U|=g<<11&8192|l<<9&134217728;d:if(524288&l){if(ee=Qr(A+576|0,n=A+784|0),l=Bs(t,e[A+1820>>2],A+1616|0,200,n,U,A+1832|0),wn(n,ee),n=0,!l){l=0;break d}if(1024&l)break d;n=1,g=qn(t,e[A+1820>>2],l,0)}else l=0,Bs(t,e[A+1820>>2],A+1616|0,200,0,U,A+1832|0),n=0;if(c[A+1616|0]==21){Qr(189088,A+1616|0),t=A+416|0,Jr(e[A+1820>>2],t,_r(t)),f[e[A+1820>>2]-1|0]=e[A+172>>2],l=0;break e}if(n)continue}}break}65536&T||(jA(t,A+1616|0,200,A+784|0),f[A+784|0]=0),n=A+416|0,Jr(e[A+1820>>2],n,_r(n));break n}Qr(189088,t=A+992|0),l=!Vn(1|t,84744,3)<<12;break e}T=0,w=ee}f[e[A+1820>>2]-1|0]=e[A+172>>2]}}if(n=e[A+164>>2],e[A+1852>>2]=8026656,e[A+1848>>2]=8022304,e[A+1844>>2]=7566112,4&U){s:{if((l=255&n)&&((0|l)==102||(St=sr,MA(n<<24>>24))))break s;St=br}Bs(t,St,189088,200,0,0,0)}for(n=0,l=A+1200|0,ee=c[A+784|0];;){s:{n:{i:switch(0|(m=c[0|l])){case 0:break s;case 6:case 7:break i;default:break n}n=m}l=l+1|0;continue}break}s:if(n|w){if(e[t+32>>2]|65536&F){for(g=0,Rr(t,A+1616|0,A+1832|0,3,0),l=A+1200|0;;){switch(c[0|l]){case 6:g&&(f[0|l]=5),g=1;default:l=l+1|0;continue;case 0:}break}e[A+24>>2]=A+1616,e[A+20>>2]=A+1200,e[A+16>>2]=A+992,ji(189088,200,85233,A+16|0),f[189287]=0,Rr(t,189088,A+1832|0,-1,0);break s}e[A+8>>2]=A+1616,e[A+4>>2]=A+1200,e[A>>2]=A+992,ji(189088,200,85233,A),f[189287]=0,Rr(t,189088,A+1832|0,-1,0)}else Rr(t,n=A+1616|0,A+1832|0,-1,!!(0|ee)<<1),e[A+40>>2]=n,e[A+36>>2]=A+1200,e[A+32>>2]=A+992,ji(189088,200,85233,A+32|0),f[189287]=0;c[A+784|0]&&(n=_r(189088),f[983+(A-n|0)|0]=0,Qr(n+189088|0,A+784|0)),16&(n=U|Ze)&&(e[A+1832>>2]=-268435457&e[A+1832>>2]);s:if(!(128&n)|!(16&c[t+14|0]))if(3072&n){if(Pt(t,6),!(2048&n))break s;e[A+1832>>2]=268435456|e[A+1832>>2]}else 16&c[j(e[33264],12)+s|0]&&(1536&(s=e[A+1832>>2])?Pt(t,4):2048&s&&Pt(t,3));else Pt(t,3);8192&T&&(e[t+8192>>2]=2,e[t+8184>>2]=2);s:{if(8&(s=e[A+1836>>2]))e[t+8184>>2]=0,e[t+8188>>2]=3,n=t+8196|0;else if(1&s)e[t+8192>>2]=0,e[t+8184>>2]=2,n=t+8196|0;else if(2&s)e[t+8192>>2]=2,e[t+8184>>2]=0,e[t+8188>>2]=0,n=t+8196|0;else{if(!(4&s))break s;e[t+8184>>2]=0,e[t+8192>>2]=0,e[t+8196>>2]=2,n=t+8188|0}e[n>>2]=0}!c[e[A+1820>>2]]|256&s||((0|(s=e[t+8184>>2]))>0&&(e[t+8184>>2]=s-1),(0|(s=e[t+8192>>2]))>0&&(e[t+8192>>2]=s-1),(0|(s=e[t+8196>>2]))>0&&(e[t+8196>>2]=s-1),(0|(s=e[t+8188>>2]))<=0||(e[t+8188>>2]=s-1)),(0|Me)!=1|e[t+212>>2]!=25966||!ls(e[A+168>>2])|e[A+168>>2]==105||(e[A+1832>>2]=16777216|e[A+1832>>2]);s:if(2&c[t+68|0]&&98304&(n=e[A+1832>>2])&&!((0|(s=_r(189088)-1|0))<=0))for(l=0;;){if(t=l+1|0,c[l+189088|0]==6){s=f[0|(t=t+189088|0)];n:{if(65536&n){if((0|gn(69))==(0|s)?(Me=gn(101),f[0|t]=Me):Me=c[0|t],g=111,(0|gn(79))==Me<<24>>24)break n;break s}if((0|gn(101))==(0|s)?(Me=gn(69),f[0|t]=Me):Me=c[0|t],g=79,(0|gn(111))!=Me<<24>>24)break s}f[0|t]=gn(g);break s}if((0|s)==(0|(l=t)))break}t=e[A+1832>>2],Jr(r,A+256|0,Rt),l=t|x;break e}if(l=0,f[A+1616|0]=0,YA(t,e[A+1840>>2],A+1616|0,n)){if(m=Qr(189088,A+1616|0),!mt){if(n=e[A+164>>2],e[A+1408>>2]=8026656,e[A+576>>2]=8022304,e[A+416>>2]=7566112,4&U){r=A+576|1,s=A+1408|1;t:{if((l=255&n)&&((0|l)==102||(ee=r,MA(n<<24>>24))))break t;ee=s}Bs(t,ee,m,200,0,0,0)}l=128&e[A+1832>>2]}}else l=((0|Me)>1)<<12}else f[189088]=0;return oe=A+1856|0,l}function Vt(t,r,s,n,A,l,g,m){var w,T,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0,Ds=0,ea=0,da=0,ma=0,Ia=0,Na=0,La=0,Ja=0,an=0,In=0,z=0,K=0,re=0,me=0,_e=0,at=0,yt=0,Ut=0,rr=0,pr=0,Nr=0;oe=w=oe-384|0,T=e[r>>2];e:{t:{s:{n:{if(A){if(c[0|A]!=7)break n;e[r>>2]=(n||1)+T;break s}e[l>>2]=0,e[r>>2]=T+1;break e}Ds=86135,an=268435456&g,In=134217728&g,z=8388608&g,K=16384&g,re=8192&g,ma=s-1|0,Ia=n-s|0,me=2&g,_e=128&g,at=g>>>31|0,yt=-2147483648&g,Na=w+96|1;n:for(;;)for(e[w+268>>2]=0,Me=(U=e[r>>2])+n|0,sr=-2,St=-6,s=A,br=yt,jr=0,ea=0,Rt=1,x=0,Ir=0,As=0;;){ee=U,We=x;i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{for(;ut=s,s=s+1|0,!((F=c[0|ut])>>>0>9);)switch(Ae=s,0|F){case 0:if(!(s=La)){La=0,s=86135;break N}for(;;){F=1;W:{E:switch(0|(x=c[0|s])){case 0:case 3:break V;case 5:break E;default:break W}F=2}s=(s+F|0)+(((0|x)==9)<<1)|0}case 1:if(As=1,!at)continue;break l;case 2:As=2;continue;case 4:La=s;continue;case 5:s=ut+2|0,x=e[t+320>>2];W:{if((U=c[ut+1|0])>>>0>=32){if(!(x>>>U-32&1))break W;break l}if(!(x>>>U&1))break l}Rt=Rt+1|0;continue;case 9:s=ut+3|0;continue;case 8:As=1,ea=1,br=0;break;case 3:break x}Ae=0,x=We,U=ee;W:switch(0|As){case 0:E:{_:{if((0|(x=c[0|Me]))!=(0|F)){if((0|x)!=69)break l;if((0|F)==101)break _;break l}if(Ae=0,(192&F)==128)break E}Ae=21}Me=Me+1|0,jr=jr+1|0;break i;case 1:break I;case 2:break W;default:break C}if(e[w+264>>2]=e[w+268>>2],!c[Me-1|0])break l;St=(0|(x=St+6|0))>=19?19:x,xt=Me+1|0,mt=Hr(w+268|0,Me),Ze=c[0|Me],Ae=20,x=We;W:{E:switch(F-11|0){case 6:s=ut+2|0,x=e[w+268>>2],U=f[ut+1|0];_:if(F=e[604+(((U=((0|U)<65?191:-65)+U|0)<<2)+t|0)>>2])x=!!(0|Ua(F,x));else{if((0|U)>7)break l;T:{if((0|(F=e[t+600>>2]))>0){if((x=x-F|0)-1>>>0<255)break T;break l}if((F=x-192|0)>>>0<=413){x=c[344+(c[F+94240|0]+t|0)|0]&1<<U;break _}if(x>>>0>255)break l}x=c[344+(t+x|0)|0]&1<<U}if(!x)break l;Me=Me+mt|0,Ae=((0|U)==2?19:20)-St|0;break i;case 7:if(s=ut+2|0,x=f[ut+1|0],!(x=e[4788+((((0|x)<65?191:-65)+x<<2)+t|0)>>2]))break l;_:for(;;){if((0|(Ae=c[0|x]))==7)break l;if((0|Ae)==126){Ae=20-St|0;break i}T:if(Ze){if(Ce=Me,F=x,(0|Ae)==(0|Ze))for(;;){if((0|(Ae=c[0|(F=F+1|0)]))!=(0|(x=c[0|(Ce=Ce+1|0)])))break T;if(!x)break}}else F=x,Ce=Me;if(Ae){for(;;)if(U=c[0|F],F=x=F+1|0,!U)continue _}break}if((0|(x=Ce-Me|0))<0)break l;Me=x+Me|0,Ae=20-St|0;break i;case 14:F=e[w+268>>2];_:{T:if(x=e[t+604>>2])x=!!(0|Ua(x,F));else{F:{if((0|(x=e[t+600>>2]))>0){if((Ce=F-x|0)-1>>>0<255)break F;break _}if((x=F-192|0)>>>0<=413){x=1&f[344+(c[x+94240|0]+t|0)|0];break T}if(Ce=F,F>>>0>255)break c}x=1&f[344+(t+Ce|0)|0]}if(x)break l;F=e[w+268>>2]}if(!In)break c;if((0|F)==32)break l;break c;case 4:if((x=e[w+268>>2])-48>>>0<10|x-2406>>>0<10)break c;if(!c[t+170|0])break l;Ae=20-St|0;break i;case 5:if(So(e[w+268>>2]))break l;break A;case 0:if(e[w+268>>2]==e[w+264>>2])break A;break l;case 17:s=ut+2|0,x=32768,Ae=0;_:{T:switch((F=c[ut+1|0])-1|0){case 0:break C;case 1:break T;default:break _}if(Ae=1,x=We,!z)break C;break l}if((0|(x=240&F))==16){if(Ae=23,x=We,m>>>(15&F)&16384)break C;break l}if((0|F)!=3&(0|x)!=32||(Jr(x=w+96|0,ma,U=1+(e[r>>2]+(jr+Ia|0)|0)|0),f[0|(x=x+U|0)]=32,f[x+1|0]=0,e[33265]=0,e[33266]=0,e[w+16>>2]=Na,ba(t,w+16|0,w+272|0,133060,0,0),Ae=23,!((0|F)!=3|(0|(Ce=e[33265]))>=0|16384&e[33266])))break i;if(x=We,U=ee,Ce>>>(15&F)&16384)break C;break l;case 34:_:{if(x=Ze-32|0){if((0|x)==13)break _;break l}if(!K)break l}Ce=22-St|0;break d;case 10:if(x=1,c[0|s]==21)break W;break o;case 18:if((0|(Ce=e[w+268>>2]))!=32)for(F=Me+mt|0;;){_:{T:if(x=e[t+632>>2])x=!!(0|Ua(x,Ce));else{F:{if((0|(x=e[t+600>>2]))>0){if((Ce=Ce-x|0)-1>>>0<255)break F;break _}if((x=Ce-192|0)>>>0<=413){x=128&c[344+(c[x+94240|0]+t|0)|0];break T}if(Ce>>>0>255)break _}x=128&c[344+(t+Ce|0)|0]}if(x)break l}if(F=Hr(w+268|0,F)+F|0,(0|(Ce=e[w+268>>2]))==32)break}Ce=19-St|0;break d;case 49:break p;case 2:break b;case 3:break m;case 1:break C;case 13:break h;case 12:break E;default:break M}Hr(w+272|0,s),mt=-1;E:if((0|(x=e[w+272>>2]))!=(0|(F=e[w+268>>2])))if(-33&F)for(;;){Ze=Me,mt=-1;_:if((0|x)==18&&(x=f[ut+2|0],Ae=e[4788+((((0|x)<65?191:-65)+x<<2)+t|0)>>2])){for(;;){if((0|(U=c[0|Ae]))==7)break _;if((0|U)==126){mt=0;break _}T:if((0|(Me=c[0|Ze]))==(0|U)){if(x=Ze,F=Ae,Me)for(;;){if((0|(U=c[0|(F=F+1|0)]))!=(0|(Ae=c[0|(x=x+1|0)])))break T;if(!Ae)break}}else F=Ae,x=Ze;if(!U){x=x-Ze|0;break}for(;x=c[0|F],F=Ae=F+1|0,x;);}mt=x}if(U=Hr(w+268|0,Ze),(0|(x=e[w+272>>2]))==(0|(F=e[w+268>>2]))|!(-33&F))break E;if(Me=U+Ze|0,(0|mt)!=-1)break}else Ze=Me;else Ze=Me;Me=(0|x)==(0|F)||(0|mt)>=0?Ze:xt,Ae=0;break i}for(;x=x+1|0,c[0|(s=s+1|0)]==21;);break o}s=s+1|0}Ae=ut}if(!(c[ee-1|0]!=32&ea|br||((0|(F=ea?Rt+4|0:Rt))>=(0|da)&&(Ut=Ir,rr=We,da=F,pr=jr,Ds=s),!(8&e[47197])|an|(0|F)<=0))){for(Tr(s,ut=w+272|0),xt=e[47195],U=w+16|0,s=0,Ze=0,br=0,Ir=0,oe=Me=oe-496|0,f[Me+80|0]=0,(0|n)>0?(Jr(Me+288|0,T,n),We=n):We=0,f[We+(x=Me+288|0)|0]=0,ee=_r(x)+x|0,mt=(0|g)<0;;){if(Ce=c[0|A],We=A,A=A+1|0,Ce>>>0>9)for(;;){x:{N:{V:{W:{E:{_:switch((x=255&Ce)-14|0){case 4:break V;case 3:break W;case 0:break E;case 14:break _;default:break N}if(We=We+2|0,Ce=32,!mt&(0|(A=c[0|A]))==1)break x;f[0|ee]=36,Qr(x=ee+1|0,A=Po(128960,A)),ee=_r(A)+x|0;break x}x=c[We+2|0],Ce=c[0|A],e[Me+36>>2]=127&c[We+3|0],e[Me+32>>2]=4&x?80:83,mr(Me+48|0,85131,Me+32|0),1&x&&(A=_r(A=Me+48|0)+A|0,f[0|A]=101,f[A+1|0]=0),2&(A=127&x)&&(x=_r(x=Me+48|0)+x|0,f[0|x]=105,f[x+1|0]=0),4&A&&(x=_r(x=Me+48|0)+x|0,f[0|x]=112,f[x+1|0]=0),8&A&&(x=_r(x=Me+48|0)+x|0,f[0|x]=118,f[x+1|0]=0),16&A&&(x=_r(x=Me+48|0)+x|0,f[0|x]=100,f[x+1|0]=0),32&A&&(x=_r(x=Me+48|0)+x|0,f[0|x]=102,f[x+1|0]=0),A>>>0>=64&&(A=_r(A=Me+48|0)+A|0,f[0|A]=113,f[A+1|0]=0),1&Ce&&(A=_r(A=Me+48|0)+A|0,f[0|A]=116,f[A+1|0]=0),We=We+4|0,ee=Qr(ee,A=Me+48|0)+_r(A)|0,Ce=32;break x}We=We+2|0,Ce=c[f[0|A]+93871|0];break x}A=f[0|A],f[0|ee]=76,x=((A=A+((0|A)<65?191:-65)|0)>>>0)/10|0,f[ee+1|0]=x+48,Ce=A-j(x,10)|48,(0|Ir)==1&&(f[0|ee]=Ce,Ce=76),We=We+2|0,ee=ee+2|0;break x}Ce=x>>>0<=31?c[x+93904|0]:(0|x)==32?95:Ce,We=A}if(f[0|ee]=Ce,A=We+1|0,ee=ee+1|0,!((Ce=c[0|We])>>>0>=10))break}x=1;x:switch(0|Ce){case 1:x=s;case 8:f[0|ee]=0,ee=Me+80|0,s=x,Ir=1;continue;case 2:f[0|ee]=0,We=_r(x=Me+288|0)+x|0,ee=c[84899]|c[84900]<<8,f[0|We]=ee,f[We+1|0]=ee>>>8,Ir=2,f[We+2|0]=c[84901],ee=_r(x)+x|0;continue;case 5:Ze=f[0|A],A=We+2|0;continue;case 9:br=(c[0|A]+j(c[We+2|0],255)|0)-256|0,A=We+3|0;continue;case 0:case 3:break x;default:continue}break}if(f[0|ee]=0,ee=U,(0|br)>0&&(e[Me+16>>2]=br,mr(U,85581,Me+16|0),ee=U+7|0),(0|Ze)>0&&(e[Me>>2]=Ze,mr(ee,85694,Me),ee=_r(ee)+ee|0),1&((0|(A=_r(Me+80|0)))>0|s)){1&s&&(f[0|ee]=95,ee=ee+1|0);x:if(!((0|(We=A-1|0))<0|ee>>>0>=U>>>0))for(;;){if(f[0|ee]=c[(Me+80|0)+We|0],ee=ee+1|0,(0|We)<=0)break x;if(We=We-1|0,!(ee>>>0<U>>>0))break}f[0|ee]=41,f[ee+1|0]=32,ee=ee+2|0}f[0|ee]=0,f[(s=Me+288|0)+((U+3|0)-ee|0)|0]=0,wn(ee,s),(0|(s=_r(U)))<=7&&(Yt(s+U|0,32,8-s|0),s=8),f[s+U|0]=0,oe=Me+496|0,e[w+4>>2]=U,e[w>>2]=(0|n)>1?F+35|0:F,e[w+8>>2]=ut,wa(xt,89088,w)}s=Ae;break l}if(!c[0|ee])break l;sr=(0|(x=sr+2|0))>=19?19:x,Hr(w+264|0,ee),x=na(w+268|0,U=ee-1|0),Ze=c[0|U],xt=U;I:{x:{N:{V:{W:{E:switch(F-10|0){case 13:if(x=(0|(Ur=c[0|s]))==(0|(F=c[0|ee])),mt=-1,(0|F)==32|(0|F)==(0|Ur))break V;if(F)break W;break N;case 7:s=ut+2|0,Ae=e[w+268>>2],ee=f[ut+1|0];_:if(F=e[604+(((ee=((0|ee)<65?191:-65)+ee|0)<<2)+t|0)>>2])F=!!(0|Ua(F,Ae));else{if((0|ee)>7)break l;T:{if((0|(F=e[t+600>>2]))>0){if((Ae=Ae-F|0)-1>>>0<255)break T;break l}if((F=Ae-192|0)>>>0<=413){F=c[344+(c[F+94240|0]+t|0)|0]&1<<ee;break _}if(Ae>>>0>255)break l}F=c[344+(t+Ae|0)|0]&1<<ee}if(!F)break l;U=1+(U-x|0)|0,Ae=((0|ee)==2?19:20)-sr|0;break I;case 8:if(s=ut+2|0,x=f[ut+1|0],!(x=e[4788+((((0|x)<65?191:-65)+x<<2)+t|0)>>2]))break l;_:{for(;;){if((0|(Ze=c[0|x]))==7)break l;if((0|Ze)==126){mt=0;break _}F=U;T:{F:{if((0|(ut=(mt=_r(x))-1|0))>0)for(F=ee-mt|0,Ae=0,Ce=U;;){if(!c[0|(Ce=Ce-1|0)])break F;if((0|ut)==(0|(Ae=Ae+1|0)))break}X:if(!((0|(Ae=c[0|F]))!=(0|Ze)|!Ae))for(;;){if((0|(Ze=c[0|(x=x+1|0)]))!=(0|(Ae=c[0|(F=F+1|0)])))break X;if(!Ae)break}if(!Ze)break T}for(F=x;Ae=c[0|F],F=x=F+1|0,Ae;);continue}break}if((0|mt)<0)break l}Ae=20-St|0,U=1+(U-mt|0)|0;break I;case 15:F=e[w+268>>2];_:{T:if(ee=e[t+604>>2])ee=!!(0|Ua(ee,F));else{F:{if((0|(ee=e[t+600>>2]))>0){if((F=F-ee|0)-1>>>0<255)break F;break _}if((ee=F-192|0)>>>0<=413){ee=1&f[344+(c[ee+94240|0]+t|0)|0];break T}if(F>>>0>255)break _}ee=1&f[344+(t+F|0)|0]}if(ee)break l}Ae=20-sr|0,U=1+(U-x|0)|0;break I;case 1:if(e[w+268>>2]!=e[w+264>>2])break l;Ae=21-sr|0,U=1+(U-x|0)|0;break I;case 5:if(!((ee=e[w+268>>2])-48>>>0<10|ee-2406>>>0<10))break l;Ae=21-sr|0,U=1+(U-x|0)|0;break I;case 6:if(So(e[w+268>>2]))break l;Ae=21-St|0,U=1+(U-x|0)|0;break I;case 18:if(s=ut+2|0,!((0|(F=c[ut+1|0]))==3|(240&F)==32)||(Jr(x=w+96|0,ma,U=1+(e[r>>2]+(jr+Ia|0)|0)|0),f[0|(x=x+U|0)]=32,f[x+1|0]=0,e[33265]=0,e[33266]=0,e[w+16>>2]=Na,ba(t,w+16|0,w+272|0,133060,0,0),Ae=23,!((0|F)!=3|(0|(Ce=e[33265]))>=0|16384&e[33266])))break i;if(x=We,U=ee,Ce>>>(15&F)&16384)break C;break l;case 11:if(F=1,c[0|s]==21)for(;F=F+1|0,c[0|(s=s+1|0)]==21;);if(e[t+8208>>2]<(0|F))break l;Ae=18+(F-sr|0)|0;break I;case 0:if(Ae=19,x=We,U=ee,e[t+8212>>2]>0)break C;break l;case 19:if(Ae=3,(0|(Ce=e[w+268>>2]))==32)break I;for(F=1+(U-x|0)|0;;){_:{T:if(x=e[t+632>>2])x=!!(0|Ua(x,Ce));else{F:{if((0|(x=e[t+600>>2]))>0){if((Ce=Ce-x|0)-1>>>0<255)break F;break _}if((x=Ce-192|0)>>>0<=413){x=128&c[344+(c[x+94240|0]+t|0)|0];break T}if(Ce>>>0>255)break _}x=128&c[344+(t+Ce|0)|0]}if(x)break l}if(F=F-na(w+268|0,F-1|0)|0,(0|(Ce=e[w+268>>2]))==32)break}break I;case 16:if(Ae=1,x=We,U=ee,e[t+8184>>2])break C;break l;case 9:if(Ae=1,x=We,U=ee,me)break C;break l;case 36:for(;;){if(Ae=50,x=We,!(ee=(255&Ze)-32|0))break l;if((0|ee)==14)break C;Ze=c[0|(xt=xt-1|0)]}case 35:break E;default:break x}E:{if(x=Ze-32|0){if((0|x)==13)break E;break l}if(!_e)break l}Ae=22-St|0;break I}W:{for(;;){mt=-1,Ce=ee,ee=ee-1|0;E:if((0|Ur)==18&&(x=f[ut+2|0],Ae=e[4788+((((0|x)<65?191:-65)+x<<2)+t|0)>>2]))for(Nr=Ce+1|0;;){if((0|(xt=c[0|Ae]))==7){mt=-1;break E}if((0|xt)==126){mt=0;break E}F=Ce;_:{if((0|(Ja=(mt=_r(Ae))-1|0))>0)for(F=Nr-mt|0,Ze=0,x=Ce;;){if(!c[0|(x=x-1|0)])break _;if((0|Ja)==(0|(Ze=Ze+1|0)))break}T:if(!((0|(x=c[0|F]))!=(0|xt)|!x))for(;;){if((0|(xt=c[0|(Ae=Ae+1|0)]))!=(0|(x=c[0|(F=F+1|0)])))break T;if(!x)break}if(!xt)break E}for(F=Ae;x=c[0|F],F=Ae=F+1|0,x;);}if(x=(0|(F=c[0|ee]))==(0|Ur),(0|F)==32|(0|F)==(0|Ur))break W;if(!F){ee=Ce;break N}if((0|mt)!=-1)break}ee=Ce;break N}ee=Ce}U=x?ee:U}Ae=0,U=(0|mt)<0?U:ee+1|0;break I}if((0|F)!=(0|Ze))break l;Ae=4,(0|F)!=32&&(Ae=(192&F)!=128?21-sr|0:0)}x=We;break C}if((0|F)!=(0|Ze))break l;Ce=(192&F)!=128?21-St|0:0;break d}if(Ae=1,re)break l}Rt=Ae+Rt|0;continue}if(x=f[ut+1|0],We=c[ut+3|0],U=c[ut+2|0],1&!(e[t+8208>>2]|4&U)&f[t+84|0])break l;s=ut+4|0,Ce=0,We=127&We|(127&U)<<8|x<<16;break d}b:if(!(xt>>>0<=(F=e[r>>2]+n|0)>>>0)){for(;;){if(c[0|F]!=101){if(x=F>>>0<Me>>>0,F=F+1|0,x)continue;break b}break}Ce=0,Ir=F;break d}Ce=0;break d}Ae=-20;break i}if(Ze=0,(0|(F=e[w+268>>2]))!=32)for(Ce=Me+mt|0,Ae=0;;){if(!Ae){o:{p:if(U=e[t+632>>2])F=!!(0|Ua(U,F));else{b:{if((0|(U=e[t+600>>2]))>0){if((F=F-U|0)-1>>>0<255)break b;break o}if((U=F-192|0)>>>0<=413){F=128&c[344+(c[U+94240|0]+t|0)|0];break p}if(F>>>0>255)break o}F=128&c[344+(t+F|0)|0]}F&&(Ze=Ze+1|0)}F=e[w+268>>2]}o:if(U=e[t+632>>2])Ae=!!(0|Ua(U,F));else{p:{if((0|(U=e[t+600>>2]))>0){if(Ae=0,(F=F-U|0)-1>>>0<255)break p;break o}if((U=F-192|0)>>>0<=413){Ae=128&c[344+(c[U+94240|0]+t|0)|0];break o}if(Ae=0,F>>>0>255)break o}Ae=128&c[344+(t+F|0)|0]}if(Ce=Hr(w+268|0,Ce)+Ce|0,(0|(F=e[w+268>>2]))==32)break}if(!((0|x)>(0|Ze))){Ce=18+(x-St|0)|0;break d}}for(;x=c[0|s],s=A=s+1|0,x;);if(c[0|A]!=7)continue n;if(t=n+pr|0,e[r>>2]=e[r>>2]+(t||1),da)break t;break s}x=We,Me=xt,U=ee,Rt=Ce+Rt|0;continue}Me=Me+mt|0,Ae=21-St|0;break i}Me=Me+mt|0,Ae=20-St|0}x=We,U=ee,Rt=Ae+Rt|0}}Ds=86135}e[l+12>>2]=Ut,e[l+8>>2]=rr,e[l+4>>2]=Ds,e[l>>2]=da}oe=w+384|0}function Xt(t,r){var s,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0,Ds=0,ea=0,da=0;oe=s=oe-1168|0,e[s+928>>2]=0,e[s+932>>2]=0,e[s+920>>2]=0,e[s+924>>2]=0,e[s+912>>2]=0,e[s+916>>2]=0,e[s+904>>2]=0,e[s+908>>2]=0,e[s+896>>2]=0,e[s+900>>2]=0;e:{t:{if(t){if(c[0|t]|8&r)break t;break e}if(!(8&r))break e}if(ua(s+1088|0,t,40),16&r){if((0|bi(Qr(s+704|0,t)))<=0)break e;Ce=8&r}else(Ce=8&r)|c[s+1088|0]||(I[s+1088>>1]=c[85055]|c[85056]<<8,f[s+1090|0]=c[85057]),e[s+496>>2]=137584,e[s+500>>2]=47,e[s+504>>2]=47,mr(n=s+512|0,85286,s+496|0),e[s+484>>2]=s+1088,e[s+480>>2]=n,mr(n=s+704|0,85425,s+480|0),(0|bi(n))>0||(e[s+468>>2]=47,e[s+472>>2]=47,e[s+464>>2]=137584,mr(n=s+512|0,85648,s+464|0),e[s+452>>2]=s+1088,e[s+448>>2]=n,mr(s+704|0,85425,s+448|0));if(A=Ce?86012:85055,!(Me=bn(s+704|0,85712))){if(n=0,3&r)break e;A=(0|ho(n=s+1088|0))<0?A:n}if((Ae=2&r)||(n=e[47192])&&(ZA(n),e[47192]=0),ut=Qr(s+992|0,A),Ze=Qr(s+944|0,A),Ae?((n=yi(200992,43))&&(f[0|n]=0),e[s+432>>2]=t+3,mr(t=s+704|0,86030,s+432|0),wn(200992,t)):(e[32972]=199592,ua(200992,t,40),f[201088]=0,f[201040]=0,e[50299]=200992,e[50298]=201088,e[50297]=201040),ks(Ae),Me){for(xt=e[30450],St=s+548|0,Rt=s+544|0,sr=s+540|0,br=s+536|0,Ir=s+532|0,jr=s+528|0,Ur=12|(t=s+512|0),As=8|t,Ds=4|t;Wr(s+704|0,190,Me);){t=s+704|0;t:{if(c[s+704|0]!=35){s:if(!((0|(t=_r(s+704|0)-1|0))<=0))for(;;){if(!((0|(A=f[0|(n=(s+704|0)+t|0)]))==32|A-9>>>0<5))break s;if(f[0|n]=0,!((0|(t=t-1|0))>0))break}if(!(t=qs(s+704|0)))break t}f[0|t]=0}t=s+704|0;t:if(n=c[s+704|0])for(;;){if((0|(n=n<<24>>24))==32|n-9>>>0<5)break t;if(!(n=c[0|(t=t+1|0)]))break}if(f[0|t]=0,c[s+704|0])if(t=t+1|0,n=Oi(129744,s+704|0)){l=0,oe=A=oe-416|0;t:if(g=e[47192]){switch(n-19|0){case 16:if(e[A+32>>2]=A+412,(0|Jt(t,84249,A+32|0))!=1)break t;e[g+324>>2]=e[A+412>>2];break t;case 8:Kl(t,g+320|0,27);break t;case 2:if(e[A+48>>2]=188784,Jt(t,84249,A+48|0),!(t=c[188784]))break t;e[g+152>>2]=t;break t;case 11:if(c[0|t]){for(m=e[30450];;)if(n=t,t=t+1|0,!((0|(l=f[0|n]))==32|l-9>>>0<5)){for(l=ao(n),e[A+412>>2]=l,(0|l)>0&&(l>>>0<=31?e[g+104>>2]=e[g+104>>2]|1<<l:l>>>0<=63?e[g+108>>2]=e[g+108>>2]|1<<l-32:(e[A+64>>2]=l,wa(m,84700,A- -64|0)),n=t);n=(t=n)+1|0,(l=f[0|t])-48>>>0<10|(32|l)-97>>>0<26;);if(!l)break}}8&(t=e[g+104>>2])&&(e[g+124>>2]=46,e[g+128>>2]=44),4&t&&(e[g+124>>2]=0);break t;default:if((65280&n)!=256)break t;e[A+16>>2]=24+(g+((255&n)<<2)|0),Jt(t,84249,A+16|0);break t;case 1:e[A+144>>2]=g,e[A+148>>2]=g+4,Jt(t,85642,A+144|0);break t;case 3:if(n=0,Yt(l=A+160|0,0,240),e[A+132>>2]=A+360,e[A+128>>2]=A+320,e[A+124>>2]=A+280,e[A+120>>2]=A+240,e[A+116>>2]=A+200,e[A+112>>2]=l,l=Jt(t,85037,A+112|0),e[A+412>>2]=l,e[g+152>>2]=0,(0|l)<=0)break t;for(x=e[30450];;){s:if(Pa(m=(A+160|0)+j(n,40)|0,85301)){n:{if((0|(T=e[34454]))>0)for(ee=e[34455],t=0;;){if(!Pa(m,ee+j(t,68)|0))break n;if((0|T)==(0|(t=t+1|0)))break}e[A+96>>2]=m,wa(x,85562,A+96|0),l=e[A+412>>2];break s}f[156+(n+g|0)|0]=t}if(!((0|l)>(0|(n=n+1|0))))break}break t;case 9:e[A+88>>2]=g+20,e[A+84>>2]=g+16,e[A+80>>2]=g+8,Jt(t,84778,A+80|0);break t;case 10:Kl(t,g+12|0,29);break t;case 5:if((0|(x=UA(t,A+160|0)))<=0)break t;if(n=0,t=0,x>>>0>=4)for(ee=-4&x,m=g+304|0;T=A+160|0,I[m+(t<<1)>>1]=e[T+(t<<2)>>2],I[m+((w=1|t)<<1)>>1]=e[T+(w<<2)>>2],I[m+((w=2|t)<<1)>>1]=e[T+(w<<2)>>2],I[m+((w=3|t)<<1)>>1]=e[T+(w<<2)>>2],t=t+4|0,(0|ee)!=(0|(l=l+4|0)););if(!(l=3&x))break t;for(;I[304+(g+(t<<1)|0)>>1]=e[(A+160|0)+(t<<2)>>2],t=t+1|0,(0|l)!=(0|(n=n+1|0)););break t;case 6:if((0|(x=UA(t,A+160|0)))<=0)break t;if(n=0,t=0,x>>>0>=4)for(ee=-4&x,m=g+296|0;T=A+160|0,f[t+m|0]=e[T+(t<<2)>>2],f[(w=1|t)+m|0]=e[T+(w<<2)>>2],f[(w=2|t)+m|0]=e[T+(w<<2)>>2],f[(w=3|t)+m|0]=e[T+(w<<2)>>2],t=t+4|0,(0|ee)!=(0|(l=l+4|0)););if(!(l=3&x))break t;for(;f[296+(t+g|0)|0]=e[(A+160|0)+(t<<2)>>2],t=t+1|0,(0|l)!=(0|(n=n+1|0)););break t;case 7:if((0|(x=UA(t,A+160|0)))<=0)break t;if(n=0,t=0,x>>>0>=4)for(ee=-4&x,m=g+304|0;w=T=m+(t<<1)|0,F=P[T>>1],T=A+160|0,I[w>>1]=F+P[T+(t<<2)>>1],I[(F=m+((w=1|t)<<1)|0)>>1]=P[F>>1]+P[T+(w<<2)>>1],I[(F=m+((w=2|t)<<1)|0)>>1]=P[F>>1]+P[T+(w<<2)>>1],I[(F=m+((w=3|t)<<1)|0)>>1]=P[F>>1]+P[T+(w<<2)>>1],t=t+4|0,(0|ee)!=(0|(l=l+4|0)););if(!(l=3&x))break t;for(;I[304+(m=g+(t<<1)|0)>>1]=P[m+304>>1]+P[(A+160|0)+(t<<2)>>1],t=t+1|0,(0|l)!=(0|(n=n+1|0)););break t;case 4:f[g+169|0]=1;break t;case 0:}f[g+208|0]=1}else e[A>>2]=Po(129568,n),wa(e[30450],89101,A);oe=A+416|0}else{switch(Oi(131904,s+704|0)-1|0){case 1:if(Ae||(f[s+1040|0]=0,e[s+512>>2]=5,e[s+32>>2]=s+1040,e[s+36>>2]=s+512,Jt(t,86237,s+32|0),e[s+1040>>2]==1769103734&e[s+1044>>2]==7630433))continue;if((t=_r(s+1040|0)+2|0)>>>0<99-We>>>0&&(f[0|(n=We+201088|0)]=e[s+512>>2],Qr(n+1|0,s+1040|0),We=t+We|0),!ea){if(t=0,(n=m=s+1040|0)||(n=e[57150])){if(t=86875,e[24+(A=oe-32|0)>>2]=0,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A+8>>2]=0,e[A+12>>2]=0,e[A>>2]=0,e[A+4>>2]=0,g=0,l=c[86875])if(c[86876]){for(;e[(g=A+(l>>>3&28)|0)>>2]=e[g>>2]|1<<l,l=c[t+1|0],t=t+1|0,l;);t:if(l=c[0|(t=n)])for(;;){if(!(e[A+(l>>>3&28)>>2]>>>l&1))break t;if(l=c[t+1|0],t=t+1|0,!l)break}g=t-n|0}else{for(t=n;A=t,t=t+1|0,c[0|A]==(0|l););g=A-n|0}if(c[0|(t=g+n|0)]){n=86875,oe=l=oe-32|0,A=f[86875];t:if(c[86876]&&A){if(Yt(l,0,32),A=c[86875])for(;e[(g=l+(A>>>3&28)|0)>>2]=e[g>>2]|1<<A,A=c[n+1|0],n=n+1|0,A;);if(n=t,A=c[0|t])for(;;){if(e[l+(A>>>3&28)>>2]>>>A&1)break t;if(A=c[n+1|0],n=n+1|0,!A)break}}else n=uo(t,A);oe=l+32|0,c[0|(n=(n-t|0)+t|0)]?(e[57150]=n+1,f[0|n]=0):e[57150]=0}else e[57150]=0,t=0}n=Qr(ut,t),Qr(Ze,t),ho(Qr(s+896|0,t)),e[47192]=ze(n),ua(e[32972]+40|0,m,20)}ea=1;continue;case 0:if(Ae)continue;for(;n=t,t=t+1|0,(0|(A=f[0|n]))==32|A-9>>>0<5;);ua(201040,n,40);continue;case 2:e[s+1152>>2]=0,n=s+512|0,e[s+48>>2]=n,e[s+52>>2]=s+1152,Jt(t,86237,s+48|0),f[201200]=Oi(132112,n),f[201201]=e[s+1152>>2];continue;case 4:e[s+64>>2]=Ze,Jt(t,86939,s- -64|0);continue;case 3:e[s+80>>2]=s+896,Jt(t,86939,s+80|0);continue;case 8:if(e[s+1152>>2]=100,e[s+1164>>2]=100,e[s+1148>>2]=100,e[s+112>>2]=s+1144,e[s+1144>>2]=0,e[s+96>>2]=s+512,e[s+100>>2]=s+1152,e[s+104>>2]=s+1164,e[s+108>>2]=s+1148,(0|Jt(t,91156,s+96|0))<2||(t=e[s+512>>2])>>>0>8||((0|(n=e[s+1152>>2]))>=0&&(A=e[32972]+(t<<1)|0,n=ge(U=2.56001*+(0|n))<2147483648?~~U:-2147483648,I[A+236>>1]=n,I[A+164>>1]=n),(0|(n=e[s+1164>>2]))>=0&&(A=e[32972]+(t<<1)|0,n=ge(U=2.56001*+(0|n))<2147483648?~~U:-2147483648,I[A+254>>1]=n,I[A+182>>1]=n),(0|(A=e[s+1148>>2]))<0?n=e[32972]:(m=(n=e[32972])+(t<<1)|0,A=ge(U=2.56001*+(0|A))<2147483648?~~U:-2147483648,I[m+200>>1]=A),I[218+((t<<1)+n|0)>>1]=e[s+1144>>2],t))continue;I[n+200>>1]=(0|j(I[n+200>>1],105))/100;continue;case 9:if(e[s+132>>2]=s+696,e[s+128>>2]=s+700,(0|Jt(t,87106,s+128|0))!=2)continue;if(t=e[32972],n=e[s+700>>2],e[t+64>>2]=(n<<12)-36864,e[t+68>>2]=j(e[s+696>>2]-n|0,108),ge(U=256*(+(n-82|0)/82*.25+1))<2147483648){e[t+116>>2]=~~U;continue}e[t+116>>2]=-2147483648;continue;case 35:da||ho(s+896|0),e[s+1164>>2]=0,f[s+1156|0]=c[91267],e[s+1152>>2]=c[91263]|c[91264]<<8|c[91265]<<16|c[91266]<<24,e[s+144>>2]=s+1164,e[s+148>>2]=s+512,e[s+152>>2]=s+1152,(0|Jt(t,91302,s+144|0))<2|e[49848]>59||(t=jo(s+512|0))&&(f[j(e[49848],3)+199408|0]=t,t=jo(s+1152|0),n=e[49848],A=j(n,3)+199408|0,f[A+1|0]=t,e[49848]=n+1,f[A+2|0]=e[s+1164>>2]),da=1;continue;case 10:e[s+1140>>2]=0,n=e[32972],e[n+100>>2]=0,e[s+164>>2]=n+100,e[s+160>>2]=n+96,Jt(t,87106,s+160|0);continue;case 11:if(e[s+176>>2]=s+1140,(0|Jt(t,87268,s+176|0))!=1)continue;e[e[32972]+88>>2]=e[s+1140>>2]<<5;continue;case 12:if(e[s+192>>2]=s+1140,(0|Jt(t,87268,s+192|0))!=1)continue;e[e[32972]+92>>2]=e[s+1140>>2];continue;case 13:if(e[s+208>>2]=s+1140,(0|Jt(t,87268,s+208|0))!=1)continue;n=e[32972],(0|(t=e[s+1140>>2]))>=5&&(e[n+108>>2]=1,e[s+1140>>2]=4,t=4),e[n+104>>2]=t+1;continue;case 14:for(e[s+552>>2]=-1,e[s+556>>2]=-1,e[s+544>>2]=-1,e[s+548>>2]=-1,e[s+536>>2]=-1,e[s+540>>2]=-1,e[s+528>>2]=-1,e[s+532>>2]=-1,e[s+240>>2]=jr,e[s+244>>2]=Ir,e[s+248>>2]=br,e[s+252>>2]=sr,e[s+256>>2]=Rt,e[s+260>>2]=St,e[s+520>>2]=-1,e[s+524>>2]=-1,e[s+512>>2]=-1,e[s+516>>2]=-1,e[s+228>>2]=Ds,e[s+232>>2]=As,e[s+236>>2]=Ur,e[s+224>>2]=s+512,Jt(t,84222,s+224|0),ee=e[32972],t=0,l=e[s+516>>2],A=0;;){if(n=A,g=l,m=t,(0|(A=e[(l=(t<<=2)+(s+512|0)|0)>>2]))==-1&&(A=8e3,e[l>>2]=8e3,m&&(e[(s+512|0)+(4|t)>>2]=e[508+(t+s|0)>>2])),l=e[(s+512|0)+(4|t)>>2],!((0|n)>=(0|(A=(0|A)/8|0))||(0|(T=A-n|0))<=0||(x=n+1|0,t=n,1&T&&(f[344+(n+ee|0)|0]=(0|g)>=255?255:g,t=x),(0|A)==(0|x))))for(x=l-g|0;F=ee+344|0,w=g+((0|j(x,t-n|0))/(0|T)|0)|0,f[F+t|0]=(0|w)>=255?255:w,w=g+((0|j(x,(mt=t+1|0)-n|0))/(0|T)|0)|0,f[F+mt|0]=(0|w)>=255?255:w,(0|A)!=(0|(t=t+2|0)););if(t=m+2|0,!(m>>>0<10))break}continue;case 15:if(e[s+272>>2]=s+1140,(0|Jt(t,87268,s+272|0))!=1)continue;e[e[32972]+112>>2]=(e[s+1140>>2]<<6)/100;continue;case 16:n=e[32972],e[(A=n+300|0)>>2]=0,e[A+4>>2]=0,e[(l=n+292|0)>>2]=0,e[l+4>>2]=0,e[(g=n+284|0)>>2]=0,e[g+4>>2]=0,e[(m=n+276|0)>>2]=0,e[m+4>>2]=0,e[s+316>>2]=n+304,e[s+312>>2]=A,e[s+308>>2]=n+296,e[s+304>>2]=l,e[s+300>>2]=n+288,e[s+296>>2]=g,e[s+292>>2]=n+280,e[s+288>>2]=m,n=Jt(t,84553,s+288|0),t=e[32972],e[t+272>>2]=n,e[t+276>>2]=0-e[t+276>>2],e[t+284>>2]=0-e[t+284>>2],e[t+292>>2]=0-e[t+292>>2],e[t+300>>2]=0-e[t+300>>2];continue;case 17:n=e[32972],e[(A=n+336|0)>>2]=0,e[A+4>>2]=0,e[(l=n+328|0)>>2]=0,e[l+4>>2]=0,e[(g=n+320|0)>>2]=0,e[g+4>>2]=0,e[(m=n+312|0)>>2]=0,e[m+4>>2]=0,e[s+348>>2]=n+340,e[s+344>>2]=A,e[s+340>>2]=n+332,e[s+336>>2]=l,e[s+332>>2]=n+324,e[s+328>>2]=g,e[s+324>>2]=n+316,e[s+320>>2]=m,t=Jt(t,84553,s+320|0),e[e[32972]+308>>2]=t;continue;case 36:n=e[32972],e[s+352>>2]=n+120,e[s+356>>2]=n+124,e[s+1140>>2]=Jt(t,87106,s+352|0);continue;case 33:e[s+368>>2]=e[32972]+84,Jt(t,87268,s+368|0),gi(3);continue;case 31:n=e[32972],e[(A=n+156|0)>>2]=0,e[A+4>>2]=0,e[(l=n+148|0)>>2]=0,e[l+4>>2]=0,e[(g=n+140|0)>>2]=0,e[g+4>>2]=0,e[(m=n+132|0)>>2]=0,e[m+4>>2]=0,e[s+412>>2]=n+160,e[s+408>>2]=A,e[s+404>>2]=n+152,e[s+400>>2]=l,e[s+396>>2]=n+144,e[s+392>>2]=g,e[s+388>>2]=n+136,e[s+384>>2]=m,Jt(t,84553,s+384|0),t=e[32972],e[t+152>>2]=e[t+152>>2]-40;continue;case 32:e[s+416>>2]=145740,Jt(t,87268,s+416|0),gi(3);continue;case 6:case 7:continue}e[s+16>>2]=s+704,wa(xt,87359,s+16|0)}}fn(Me)}t:{if((t=e[47192])|Ae){if(Ae)break t}else t=ze(ut),e[47192]=t;s:{if(!Ce){if((0|(t=ho(s+896|0)))<0&&(e[s>>2]=s+896,wa(e[30450],87567,s),t=0),e[e[32972]+60>>2]=t,n=e[47192],e[n+292>>2]=t,vn(n,Ze,4&r),c[132848])break s;ZA(e[47192]),n=0;break e}e[e[32972]+60>>2]=0,e[t+292>>2]=0}f[We+201088|0]=0}n=e[32972]}return oe=s+1168|0,n}function Jt(t,r,s){var n,A,l,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0;oe=l=oe-16|0,e[l+12>>2]=s,oe=g=oe-144|0,n=Yt(g,0,144),e[n+76>>2]=-1,e[n+44>>2]=t,e[n+32>>2]=18,e[n+84>>2]=t,g=r,St=s,t=0,oe=A=oe-304|0;e:{t:{s:if(e[n+4>>2]||(uA(n),e[n+4>>2])){if(!(r=c[0|g]))break e;n:{i:{c:{A:{for(;;){d:{l:if((0|(r&=255))==32|r-9>>>0<5){for(;r=g,g=g+1|0,(0|(s=c[r+1|0]))==32|s-9>>>0<5;);for(ei(n,0,0);(0|(s=e[n+4>>2]))==e[n+104>>2]?s=it(n):(e[n+4>>2]=s+1,s=c[0|s]),(0|s)==32|s-9>>>0<5;);g=e[n+4>>2],(0|(s=e[n+116>>2]))>0|(0|s)>=0&&(g=g-1|0,e[n+4>>2]=g),g=s=g-e[n+44>>2]|0,x=We+e[n+124>>2]|0,x=(m=s>>31)+((s=Ae+e[n+120>>2]|0)>>>0<Ae>>>0?x+1|0:x)|0,We=(Ae=s+g|0)>>>0<s>>>0?x+1|0:x}else{o:{p:{b:{if(c[0|g]==37){if((0|(r=c[g+1|0]))==42)break b;if((0|r)!=37)break p}if(ei(n,0,0),c[0|g]!=37)(0|(r=e[n+4>>2]))==e[n+104>>2]?r=it(n):(e[n+4>>2]=r+1,r=c[0|r]);else{for(;(0|(r=e[n+4>>2]))==e[n+104>>2]?r=it(n):(e[n+4>>2]=r+1,r=c[0|r]),(0|r)==32|r-9>>>0<5;);g=g+1|0}if(c[0|g]!=(0|r)){if((0|(s=e[n+116>>2]))>0|(0|s)>=0&&(e[n+4>>2]=e[n+4>>2]-1),(0|r)>=0||(w=0,Rt))break e;break s}T=(m=r=e[n+4>>2]-e[n+44>>2]|0)>>31,r=We+e[n+124>>2]|0,w=((s=Ae+e[n+120>>2]|0)>>>0<Ae>>>0?r+1|0:r)+T|0,We=(Ae=s+m|0)>>>0<s>>>0?w+1|0:w,r=g;break l}F=0,r=g+2|0;break o}c[g+2|0]!=36|r-48>>>0>=10?(F=e[St>>2],St=St+4|0,r=g+1|0):(r=c[g+1|0]-48|0,e[12+(s=oe-16|0)>>2]=St,r=(r>>>0>1?(r<<2)-4|0:0)+St|0,e[s+8>>2]=r+4,F=e[r>>2],r=g+3|0)}if(U=0,g=0,c[0|r]-48>>>0<10)for(;g=(c[0|r]+j(g,10)|0)-48|0,s=c[r+1|0],r=r+1|0,s-48>>>0<10;);(0|(Ce=c[0|r]))==109&&(ee=0,U=!!(0|F),Ce=c[r+1|0],t=0,r=r+1|0),r=(s=r)+1|0,m=3,w=U;o:{p:switch(Ce-65|0){case 39:m=s+2|0,r=(s=c[s+1|0]==104)?m:r,m=s?-2:-1;break o;case 43:m=s+2|0,r=(s=c[s+1|0]==108)?m:r,m=s?3:1;break o;case 51:case 57:m=1;break o;case 11:m=2;break o;case 41:break o;case 0:case 2:case 4:case 5:case 6:case 18:case 23:case 26:case 32:case 34:case 35:case 36:case 37:case 38:case 40:case 45:case 46:case 47:case 50:case 52:case 55:break p;default:break n}m=0,r=s}w=m,mt=(m=(47&(s=c[0|r]))==3)?1:w;o:if((0|(ut=m?32|s:s))!=91){p:{if((0|ut)!=110){if((0|ut)!=99)break p;g=(0|g)<=1?1:g;break o}hA(F,mt,Ae,We);break l}for(ei(n,0,0);(0|(s=e[n+4>>2]))==e[n+104>>2]?s=it(n):(e[n+4>>2]=s+1,s=c[0|s]),(0|s)==32|s-9>>>0<5;);s=e[n+4>>2],(0|(m=e[n+116>>2]))>0|(0|m)>=0&&(s=s-1|0,e[n+4>>2]=s),m=s=s-e[n+44>>2]|0,x=We+e[n+124>>2]|0,We=(w=s>>31)+((s=Ae+e[n+120>>2]|0)>>>0<Ae>>>0?x+1|0:x)|0,We=(Ae=s+m|0)>>>0<s>>>0?We+1|0:We}if(Me=g,ei(n,g,Ze=g>>31),(0|(s=e[n+4>>2]))==e[n+104>>2]){if((0|it(n))<0)break i}else e[n+4>>2]=s+1;(0|(s=e[n+116>>2]))>0|(0|s)>=0&&(e[n+4>>2]=e[n+4>>2]-1),s=16;o:{p:{b:{m:{switch(ut-88|0){default:if((s=ut-65|0)>>>0>6|!(1<<s&113))break o;case 9:case 13:case 14:case 15:if(It(A+8|0,n,mt,0),s=e[n+4>>2]-e[n+44>>2]|0,e[n+120>>2]!=(0-s|0)|e[n+124>>2]!=(0-((s>>31)+!!(0|s)|0)|0))break b;break c;case 3:case 11:case 27:if((16|ut)==115){if(Yt(A+32|0,-1,257),f[A+32|0]=0,(0|ut)!=115)break p;f[A+65|0]=0,f[A+46|0]=0,I[A+42>>1]=0,I[A+44>>1]=0;break p}Yt(A+32|0,T=(0|(m=c[r+1|0]))==94,257),f[A+32|0]=0,s=T?r+2|0:r+1|0;C:{h:{M:{if((0|(r=c[(T?2:1)+r|0]))!=45){if((0|r)==93)break M;m=(0|m)!=94,r=s;break C}m=(0|m)!=94,f[A+78|0]=m;break h}m=(0|m)!=94,f[A+126|0]=m}r=s+1|0}for(;;){if((0|(s=c[0|r]))==45){if(s=45,!(!(T=c[r+1|0])|(0|T)==93)){if(w=r+1|0,T>>>0<=(r=c[r-1|0])>>>0)s=T;else for(;f[(r=r+1|0)+(A+32|0)|0]=m,(s=c[0|w])>>>0>r>>>0;);r=w}}else{if(!s)break i;if((0|s)==93)break p}f[33+(s+A|0)|0]=m,r=r+1|0}case 23:s=8;break m;case 12:case 29:s=10;break m;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 22:case 25:case 26:case 28:case 30:case 31:break o;case 0:case 24:case 32:break m;case 17:}s=0}T=0,x=0,m=0,w=0,Ce=0,oe=xt=oe-16|0;m:if((0|s)!=1&s>>>0<=36){for(;(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),(0|g)==32|g-9>>>0<5;);C:{h:switch(g-43|0){case 0:case 2:break h;default:break C}Ce=(0|g)==45?-1:0,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g])}C:{h:{M:{I:{if(!(!!(0|s)&(0|s)!=16|(0|g)!=48)){if((0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),(-33&g)==88){if(s=16,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),c[g+121329|0]<16)break M;(0|(s=e[n+116>>2]))>0|(0|s)>=0&&(e[n+4>>2]=e[n+4>>2]-1),ei(n,0,0);break m}if(s)break I;s=8;break M}if(!((s=s||10)>>>0>c[g+121329|0])){(0|(s=e[n+116>>2]))>0|(0|s)>=0&&(e[n+4>>2]=e[n+4>>2]-1),ei(n,0,0),e[56798]=28;break m}}if((0|s)==10){if((m=g-48|0)>>>0<=9){for(s=0;w=(s=j(s,10)+m|0)>>>0<429496729,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),w&(m=g-48|0)>>>0<=9;);T=s}I:if(!(m>>>0>9)){for(s=ds(T,0,10,0),w=H;;){if(x=w,w=(0|(x=(T=s+m|0)>>>0<m>>>0?x+1|0:x))==429496729&T>>>0>=2576980378|x>>>0>429496729,(0|(s=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=s+1,g=c[0|s]),w|(m=g-48|0)>>>0>9)break I;if(s=ds(T,x,10,0),!((0|(w=H))==-1&~m>>>0>=s>>>0|(0|w)!=-1))break}s=10;break h}if(s=10,m>>>0<=9)break h;break C}}if(s-1&s){if((w=c[g+121329|0])>>>0<s>>>0){for(;T=(m=j(s,m)+w|0)>>>0<119304647,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),T&(w=c[g+121329|0])>>>0<s>>>0;);T=m}if(s>>>0<=w>>>0)break h;for(;;){if(m=ds(T,x,s,0),(0|(Me=H))==-1&~(w&=255)>>>0<m>>>0||(x=Me,x=(T=m+w|0)>>>0<w>>>0?x+1|0:x,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),s>>>0<=(w=c[g+121329|0])>>>0))break h;if(dn(xt,s,0,0,0,T,x,0,0),e[xt+8>>2]|e[xt+12>>2])break}}else{if(Me=f[84400+(j(s,23)>>>5&7)|0],(m=c[g+121329|0])>>>0<s>>>0){for(;T=(w=w<<Me|m)>>>0<134217728,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),T&(m=c[g+121329|0])>>>0<s>>>0;);T=w}if(!(s>>>0<=m>>>0||(Ze=31&Me,(63&Me)>>>0>=32?(w=0,Ze=-1>>>Ze|0):Ze=(w=-1>>>Ze|0)|(1<<Ze)-1<<32-Ze,!w&T>>>0>Ze>>>0)))for(;;){if(sr=255&m,m=T,g=31&Me,(63&Me)>>>0>=32?(x=m<<g,g=0):(x=(1<<g)-1&m>>>32-g|x<<g,g=m<<g),T=sr|g,(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),s>>>0<=(m=c[g+121329|0])>>>0)break h;if(!((0|w)==(0|x)&T>>>0<=Ze>>>0|w>>>0>x>>>0))break}}}if(!(c[g+121329|0]>=s>>>0)){for(;(0|(g=e[n+4>>2]))==e[n+104>>2]?g=it(n):(e[n+4>>2]=g+1,g=c[0|g]),c[g+121329|0]<s>>>0;);e[56798]=68,Ce=0,T=-1,x=-1}}(0|(s=e[n+116>>2]))>0|(0|s)>=0&&(e[n+4>>2]=e[n+4>>2]-1),T=(s=T^Ce)-Ce|0,x=((g=Ce>>31)^x)-((s>>>0<Ce>>>0)+g|0)|0}else e[56798]=28;if(oe=xt+16|0,s=e[n+4>>2]-e[n+44>>2]|0,e[n+120>>2]==(0-s|0)&e[n+124>>2]==(0-((s>>31)+!!(0|s)|0)|0))break c;if(!(!F|(0|ut)!=112)){e[F>>2]=T;break o}hA(F,mt,T,x);break o}if(!F)break o;g=e[A+16>>2],s=e[A+20>>2],m=e[A+8>>2],U=e[A+12>>2];b:switch(0|mt){case 0:oe=x=oe-32|0;m:if(0|(w=(T=2147483647&s)-1065418752|0)>>>0<(Me=T-1082064896|0)>>>0){if(T=(33554431&s)<<7|g>>>25,Me=w=0,!(!w&(0|(g&=33554431))==16777216?!(m|U):!w&g>>>0<16777216)){w=T+1073741825|0;break m}if(w=T+1073741824|0,16777216^g|m|U|Me)break m;w=(1&T)+w|0}else(!g&(0|T)==2147418112?!(m|U):T>>>0<2147418112)?(w=2139095040,T>>>0>1082064895||(w=0,(T=T>>>16|0)>>>0<16145||(la(x+16|0,m,U,g,w=65535&s|65536,T-16129|0),Ma(x,m,U,g,w,16257-T|0),g=e[x+8>>2],w=(33554431&e[x+12>>2])<<7|g>>>25,T=e[x>>2]|!!(e[x+16>>2]|e[x+24>>2]|e[x+20>>2]|e[x+28>>2]),U=e[x+4>>2],(!(m=0)&(0|(g&=33554431))==16777216?!(T|U):!m&g>>>0<16777216)?16777216^g|T|m|U||(w=(1&w)+w|0):w=w+1|0))):w=4194303&((33554431&s)<<7|g>>>25)|2143289344;oe=x+32|0,e[F>>2]=-2147483648&s|w;break o;case 1:D[F>>3]=zi(m,U,g,s);break o;case 2:break b;default:break o}e[F>>2]=m,e[F+4>>2]=U,e[F+8>>2]=g,e[F+12>>2]=s;break o}m=(xt=(0|ut)!=99)?31:g+1|0;p:if((0|mt)!=1){if(U){if(g=0,!(s=wr(m)))break A;for(;;){for(t=s;;){if((0|(s=e[n+4>>2]))==e[n+104>>2]?s=it(n):(e[n+4>>2]=s+1,s=c[0|s]),!c[33+(s+A|0)|0]){m=0,ee=t;break p}if(f[t+g|0]=s,(0|m)==(0|(g=g+1|0)))break}if(w=1,!(s=Fa(t,m=m<<1|1)))break}ee=t,t=0;break n}if(g=0,F)for(;;){if((0|(t=e[n+4>>2]))==e[n+104>>2]?t=it(n):(e[n+4>>2]=t+1,t=c[0|t]),!c[33+(t+A|0)|0]){m=0,ee=t=F;break p}f[g+F|0]=t,g=g+1|0}for(;(0|(t=e[n+4>>2]))==e[n+104>>2]?t=it(n):(e[n+4>>2]=t+1,t=c[0|t]),c[33+(t+A|0)|0];);t=0,ee=0,m=0}else{if(s=F,U&&!(s=wr(m<<2)))break A;for(e[A+296>>2]=0,e[A+300>>2]=0,g=0;;){t=s;b:{for(;;){if((0|(s=e[n+4>>2]))==e[n+104>>2]?s=it(n):(e[n+4>>2]=s+1,s=c[0|s]),!c[33+(s+A|0)|0])break b;f[A+27|0]=s,T=A+28|0,s=e[(w=(s=A+296|0)||228604)>>2];m:{C:{h:{M:{if(!(ee=A+27|0)){if(s)break M;s=0;break m}if(!s){if((0|(x=(s=c[0|ee])<<24>>24))>=0){T&&(e[T>>2]=s),s=!!(0|x);break m}if(!e[e[56841]>>2]){if(s=1,!T)break h;e[T>>2]=57343&x,s=1;break m}if((s=s-194|0)>>>0>50)break M;s=e[124752+(s<<2)>>2];break C}if(Ce=1,!(((mt=(x=c[0|ee])>>>3|0)-16|(s>>26)+mt)>>>0>7))for(;;){if(Ce=Ce-1|0,(0|(s=x-128|s<<6))>=0){e[w>>2]=0,T&&(e[T>>2]=s),s=1-Ce|0;break m}if(!Ce)break C;if((192&(x=c[0|(ee=ee+1|0)]))!=128)break}}e[w>>2]=0,e[56798]=25,s=-1}break m}e[w>>2]=s,s=-2}if((0|s)!=-2){if(ee=0,(0|s)==-1)break i;if(t&&(e[(g<<2)+t>>2]=e[A+28>>2],g=g+1|0),!(!U|(0|g)!=(0|m)))break}}if(w=1,s=Fa(t,(m=m<<1|1)<<2))continue;break n}break}if(ee=0,m=t,A+296|0&&e[A+296>>2])break i}if(s=e[n+4>>2],(0|(T=e[n+116>>2]))>0|(0|T)>=0&&(s=s-1|0,e[n+4>>2]=s),s=(T=s-e[n+44>>2]|0)+e[n+120>>2]|0,x=e[n+124>>2]+(T>>31)|0,!((x=s>>>0<T>>>0?x+1|0:x)|s)|!(xt|(0|s)==(0|Me)&(0|x)==(0|Ze)))break d;U&&(e[F>>2]=t),(0|ut)!=99&&(m&&(e[(g<<2)+m>>2]=0),ee?f[g+ee|0]=0:ee=0),t=m}g=s=e[n+4>>2]-e[n+44>>2]|0,w=We+e[n+124>>2]|0,We=(m=s>>31)+((s=Ae+e[n+120>>2]|0)>>>0<Ae>>>0?w+1|0:w)|0,We=(Ae=s+g|0)>>>0<s>>>0?We+1|0:We,Rt=!!(0|F)+Rt|0}if(g=r+1|0,r=c[r+1|0])continue;break e}break}t=m;break c}w=1,ee=0,t=0;break n}w=U;break t}w=U}if(Rt)break t}Rt=-1}w&&(Zt(ee),Zt(t))}return oe=A+304|0,oe=n+144|0,oe=l+16|0,Rt}function wr(t){var r,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0;oe=r=oe-16|0;e:{t:{s:{n:{i:{c:{A:{d:{l:{if((t|=0)>>>0<=244){if(3&(s=(m=e[57152])>>>(n=(w=t>>>0<11?16:t+11&-8)>>>3|0)|0)){s=228648+(t=(n=n+(1&~s)|0)<<3)|0,A=e[t+228656>>2],(0|s)!=(0|(t=e[A+8>>2]))?(e[t+12>>2]=s,e[s+8>>2]=t):e[57152]=Cn(-2,n)&m,t=A+8|0,s=n<<3,e[A+4>>2]=3|s,e[4+(s=s+A|0)>>2]=1|e[s+4>>2];break e}if((F=e[57154])>>>0>=w>>>0)break l;if(s){s=228648+(t=(A=Fo(0-(t=(0-(t=2<<n)|t)&s<<n)&t))<<3)|0,l=e[t+228656>>2],(0|s)!=(0|(t=e[l+8>>2]))?(e[t+12>>2]=s,e[s+8>>2]=t):(m=Cn(-2,A)&m,e[57152]=m),e[l+4>>2]=3|w,A=(t=A<<3)-w|0,e[4+(n=l+w|0)>>2]=1|A,e[t+l>>2]=A,F&&(s=228648+(-8&F)|0,g=e[57157],(t=1<<(F>>>3))&m?t=e[s+8>>2]:(e[57152]=t|m,t=s),e[s+8>>2]=g,e[t+12>>2]=g,e[g+12>>2]=s,e[g+8>>2]=t),t=l+8|0,e[57157]=n,e[57154]=A;break e}if(!(x=e[57153]))break l;for(n=e[228912+(Fo(0-x&x)<<2)>>2],g=(-8&e[n+4>>2])-w|0,s=n;(t=e[s+16>>2])||(t=e[s+20>>2]);)g=(A=(s=(-8&e[t+4>>2])-w|0)>>>0<g>>>0)?s:g,n=A?t:n,s=t;if(T=e[n+24>>2],(0|(A=e[n+12>>2]))!=(0|n)){t=e[n+8>>2],e[t+12>>2]=A,e[A+8>>2]=t;break t}if(!(t=e[(s=n+20|0)>>2])){if(!(t=e[n+16>>2]))break d;s=n+16|0}for(;l=s,A=t,(t=e[(s=t+20|0)>>2])||(s=A+16|0,t=e[A+16>>2]););e[l>>2]=0;break t}if(w=-1,!(t>>>0>4294967231)&&(w=-8&(t=t+11|0),x=e[57153])){g=0-w|0,m=0,w>>>0<256||(m=31,w>>>0>16777215||(m=62+((w>>>38-(t=ke(t>>>8|0))&1)-(t<<1)|0)|0));o:{p:{if(s=e[228912+(m<<2)>>2])for(t=0,n=w<<((0|m)!=31?25-(m>>>1|0):0);;){if(!((l=(-8&e[s+4>>2])-w|0)>>>0>=g>>>0||(A=s,g=l,l))){g=0,t=s;break p}if(l=e[s+20>>2],s=e[16+((n>>>29&4)+s|0)>>2],t=l?(0|l)==(0|s)?t:l:t,n<<=1,!s)break}else t=0;if(!(t|A)){if(A=0,!(t=(0-(t=2<<m)|t)&x))break l;t=e[228912+(Fo(t&0-t)<<2)>>2]}if(!t)break o}for(;g=(n=(s=(-8&e[t+4>>2])-w|0)>>>0<g>>>0)?s:g,A=n?t:A,t=(s=e[t+16>>2])||e[t+20>>2];);}if(!(!A|e[57154]-w>>>0<=g>>>0)){if(m=e[A+24>>2],(0|A)!=(0|(n=e[A+12>>2]))){t=e[A+8>>2],e[t+12>>2]=n,e[n+8>>2]=t;break s}if(!(t=e[(s=A+20|0)>>2])){if(!(t=e[A+16>>2]))break A;s=A+16|0}for(;l=s,n=t,(t=e[(s=t+20|0)>>2])||(s=n+16|0,t=e[n+16>>2]););e[l>>2]=0;break s}}}if((t=e[57154])>>>0>=w>>>0){A=e[57157],(s=t-w|0)>>>0>=16?(e[4+(n=A+w|0)>>2]=1|s,e[t+A>>2]=s,e[A+4>>2]=3|w):(e[A+4>>2]=3|t,e[4+(t=t+A|0)>>2]=1|e[t+4>>2],n=0,s=0),e[57154]=s,e[57157]=n,t=A+8|0;break e}if((T=e[57155])>>>0>w>>>0){s=T-w|0,e[57155]=s,t=(n=e[57158])+w|0,e[57158]=t,e[t+4>>2]=1|s,e[n+4>>2]=3|w,t=n+8|0;break e}if(t=0,x=w+47|0,e[57270]?n=e[57272]:(e[57273]=-1,e[57274]=-1,e[57271]=4096,e[57272]=4096,e[57270]=r+12&-16^1431655768,e[57275]=0,e[57263]=0,n=4096),(s=(l=x+n|0)&(g=0-n|0))>>>0<=w>>>0||(A=e[57262])&&A>>>0<(m=(n=e[57260])+s|0)>>>0|n>>>0>=m>>>0)break e;l:{if(!(4&c[229052])){o:{p:{b:{m:{if(A=e[57158])for(t=229056;;){if((n=e[t>>2])>>>0<=A>>>0&A>>>0<n+e[t+4>>2]>>>0)break m;if(!(t=e[t+8>>2]))break}if((0|(n=bo(0)))==-1||(m=s,(t=(A=e[57271])-1|0)&n&&(m=(s-n|0)+(t+n&0-A)|0),m>>>0<=w>>>0)||(A=e[57262])&&A>>>0<(g=(t=e[57260])+m|0)>>>0|t>>>0>=g>>>0)break o;if((0|n)!=(0|(t=bo(m))))break b;break l}if((0|(n=bo(m=g&l-T)))==(e[t>>2]+e[t+4>>2]|0))break p;t=n}if((0|t)==-1)break o;if(w+48>>>0<=m>>>0){n=t;break l}if((0|bo(n=(n=e[57272])+(x-m|0)&0-n))==-1)break o;m=n+m|0,n=t;break l}if((0|n)!=-1)break l}e[57263]=4|e[57263]}if((0|(n=bo(s)))==-1|(0|(t=bo(0)))==-1|t>>>0<=n>>>0||(m=t-n|0)>>>0<=w+40>>>0)break n}t=e[57260]+m|0,e[57260]=t,t>>>0>J[57261]&&(e[57261]=t);l:{if(l=e[57158]){for(t=229056;;){if(((A=e[t>>2])+(s=e[t+4>>2])|0)==(0|n))break l;if(!(t=e[t+8>>2]))break}break c}for((t=e[57156])>>>0<=n>>>0&&t||(e[57156]=n),t=0,e[57265]=m,e[57264]=n,e[57160]=-1,e[57161]=e[57270],e[57267]=0;s=228648+(A=t<<3)|0,e[A+228656>>2]=s,e[A+228660>>2]=s,(0|(t=t+1|0))!=32;);s=(A=m-40|0)-(t=n+8&7?-8-n&7:0)|0,e[57155]=s,t=t+n|0,e[57158]=t,e[t+4>>2]=1|s,e[4+(n+A|0)>>2]=40,e[57159]=e[57274];break i}if(8&c[t+12|0]|A>>>0>l>>>0|n>>>0<=l>>>0)break c;e[t+4>>2]=s+m,n=(t=l+8&7?-8-l&7:0)+l|0,e[57158]=n,t=(s=e[57155]+m|0)-t|0,e[57155]=t,e[n+4>>2]=1|t,e[4+(s+l|0)>>2]=40,e[57159]=e[57274];break i}A=0;break t}n=0;break s}J[57156]>n>>>0&&(e[57156]=n),s=n+m|0,t=229056;c:{A:{d:{l:{o:{p:{for(;;){if((0|s)!=e[t>>2]){if(t=e[t+8>>2])continue;break p}break}if(!(8&c[t+12|0]))break o}for(t=229056;;){if((s=e[t>>2])>>>0<=l>>>0&&(g=s+e[t+4>>2]|0)>>>0>l>>>0)break l;t=e[t+8>>2]}}if(e[t>>2]=n,e[t+4>>2]=e[t+4>>2]+m,e[4+(x=(n+8&7?-8-n&7:0)+n|0)>>2]=3|w,t=(m=s+(s+8&7?-8-s&7:0)|0)-(T=w+x|0)|0,(0|l)==(0|m)){e[57158]=T,t=e[57155]+t|0,e[57155]=t,e[T+4>>2]=1|t;break A}if(e[57157]==(0|m)){e[57157]=T,t=e[57154]+t|0,e[57154]=t,e[T+4>>2]=1|t,e[t+T>>2]=t;break A}if((3&(g=e[m+4>>2]))==1){l=-8&g;o:if(g>>>0<=255){if(A=e[m+8>>2],s=g>>>3|0,(0|(n=e[m+12>>2]))==(0|A)){e[57152]=e[57152]&Cn(-2,s);break o}e[A+12>>2]=n,e[n+8>>2]=A}else{if(w=e[m+24>>2],(0|m)==(0|(n=e[m+12>>2])))if((s=e[(g=m+20|0)>>2])||(s=e[(g=m+16|0)>>2])){for(;A=g,(s=e[(g=(n=s)+20|0)>>2])||(g=n+16|0,s=e[n+16>>2]););e[A>>2]=0}else n=0;else s=e[m+8>>2],e[s+12>>2]=n,e[n+8>>2]=s;if(w){A=e[m+28>>2];p:{if(e[(s=228912+(A<<2)|0)>>2]==(0|m)){if(e[s>>2]=n,n)break p;e[57153]=e[57153]&Cn(-2,A);break o}if(e[w+(e[w+16>>2]==(0|m)?16:20)>>2]=n,!n)break o}e[n+24>>2]=w,(s=e[m+16>>2])&&(e[n+16>>2]=s,e[s+24>>2]=n),(s=e[m+20>>2])&&(e[n+20>>2]=s,e[s+24>>2]=n)}}g=e[4+(m=l+m|0)>>2],t=t+l|0}if(e[m+4>>2]=-2&g,e[T+4>>2]=1|t,e[t+T>>2]=t,t>>>0<=255){s=228648+(-8&t)|0,(n=e[57152])&(t=1<<(t>>>3))?t=e[s+8>>2]:(e[57152]=t|n,t=s),e[s+8>>2]=T,e[t+12>>2]=T,e[T+12>>2]=s,e[T+8>>2]=t;break A}if(g=31,t>>>0<=16777215&&(g=62+((t>>>38-(s=ke(t>>>8|0))&1)-(s<<1)|0)|0),e[T+28>>2]=g,e[T+16>>2]=0,e[T+20>>2]=0,s=228912+(g<<2)|0,(A=e[57153])&(n=1<<g)){for(g=t<<((0|g)!=31?25-(g>>>1|0):0),n=e[s>>2];;){if(s=n,(-8&e[n+4>>2])==(0|t))break d;if(n=g>>>29|0,g<<=1,!(n=e[16+(A=(4&n)+s|0)>>2]))break}e[A+16>>2]=T}else e[57153]=n|A,e[s>>2]=T;e[T+24>>2]=s,e[T+12>>2]=T,e[T+8>>2]=T;break A}for(s=(A=m-40|0)-(t=n+8&7?-8-n&7:0)|0,e[57155]=s,t=t+n|0,e[57158]=t,e[t+4>>2]=1|s,e[4+(n+A|0)>>2]=40,e[57159]=e[57274],e[(A=(t=(g+(g-39&7?39-g&7:0)|0)-47|0)>>>0<l+16>>>0?l:t)+4>>2]=27,t=e[57267],e[A+16>>2]=e[57266],e[A+20>>2]=t,t=e[57265],e[A+8>>2]=e[57264],e[A+12>>2]=t,e[57266]=A+8,e[57265]=m,e[57264]=n,e[57267]=0,t=A+24|0;e[t+4>>2]=7,s=t+8|0,t=t+4|0,s>>>0<g>>>0;);if((0|A)==(0|l))break i;if(e[A+4>>2]=-2&e[A+4>>2],g=A-l|0,e[l+4>>2]=1|g,e[A>>2]=g,g>>>0<=255){s=228648+(-8&g)|0,(n=e[57152])&(t=1<<(g>>>3))?t=e[s+8>>2]:(e[57152]=t|n,t=s),e[s+8>>2]=l,e[t+12>>2]=l,e[l+12>>2]=s,e[l+8>>2]=t;break i}if(t=31,g>>>0<=16777215&&(t=62+((g>>>38-(t=ke(g>>>8|0))&1)-(t<<1)|0)|0),e[l+28>>2]=t,e[l+16>>2]=0,e[l+20>>2]=0,s=228912+(t<<2)|0,(A=e[57153])&(n=1<<t)){for(t=g<<((0|t)!=31?25-(t>>>1|0):0),A=e[s>>2];;){if((0|g)==(-8&e[(s=A)+4>>2]))break c;if(n=t>>>29|0,t<<=1,!(A=e[16+(n=(4&n)+s|0)>>2]))break}e[n+16>>2]=l}else e[57153]=n|A,e[s>>2]=l;e[l+24>>2]=s,e[l+12>>2]=l,e[l+8>>2]=l;break i}t=e[s+8>>2],e[t+12>>2]=T,e[s+8>>2]=T,e[T+24>>2]=0,e[T+12>>2]=s,e[T+8>>2]=t}t=x+8|0;break e}t=e[s+8>>2],e[t+12>>2]=l,e[s+8>>2]=l,e[l+24>>2]=0,e[l+12>>2]=s,e[l+8>>2]=t}if(!((t=e[57155])>>>0<=w>>>0)){s=t-w|0,e[57155]=s,t=(n=e[57158])+w|0,e[57158]=t,e[t+4>>2]=1|s,e[n+4>>2]=3|w,t=n+8|0;break e}}e[56798]=48,t=0;break e}s:if(m){s=e[A+28>>2];n:{if(e[(t=228912+(s<<2)|0)>>2]==(0|A)){if(e[t>>2]=n,n)break n;x=Cn(-2,s)&x,e[57153]=x;break s}if(e[m+(e[m+16>>2]==(0|A)?16:20)>>2]=n,!n)break s}e[n+24>>2]=m,(t=e[A+16>>2])&&(e[n+16>>2]=t,e[t+24>>2]=n),(t=e[A+20>>2])&&(e[n+20>>2]=t,e[t+24>>2]=n)}s:if(g>>>0<=15)t=g+w|0,e[A+4>>2]=3|t,e[4+(t=t+A|0)>>2]=1|e[t+4>>2];else if(e[A+4>>2]=3|w,e[4+(l=A+w|0)>>2]=1|g,e[l+g>>2]=g,g>>>0<=255)s=228648+(-8&g)|0,(n=e[57152])&(t=1<<(g>>>3))?t=e[s+8>>2]:(e[57152]=t|n,t=s),e[s+8>>2]=l,e[t+12>>2]=l,e[l+12>>2]=s,e[l+8>>2]=t;else{t=31,g>>>0<=16777215&&(t=62+((g>>>38-(t=ke(g>>>8|0))&1)-(t<<1)|0)|0),e[l+28>>2]=t,e[l+16>>2]=0,e[l+20>>2]=0,s=228912+(t<<2)|0;n:{if((n=1<<t)&x){for(t=g<<((0|t)!=31?25-(t>>>1|0):0),w=e[s>>2];;){if((-8&e[(s=w)+4>>2])==(0|g))break n;if(n=t>>>29|0,t<<=1,!(w=e[16+(n=(4&n)+s|0)>>2]))break}e[n+16>>2]=l}else e[57153]=n|x,e[s>>2]=l;e[l+24>>2]=s,e[l+12>>2]=l,e[l+8>>2]=l;break s}t=e[s+8>>2],e[t+12>>2]=l,e[s+8>>2]=l,e[l+24>>2]=0,e[l+12>>2]=s,e[l+8>>2]=t}t=A+8|0;break e}t:if(T){s=e[n+28>>2];s:{if(e[(t=228912+(s<<2)|0)>>2]==(0|n)){if(e[t>>2]=A,A)break s;e[57153]=Cn(-2,s)&x;break t}if(e[T+(e[T+16>>2]==(0|n)?16:20)>>2]=A,!A)break t}e[A+24>>2]=T,(t=e[n+16>>2])&&(e[A+16>>2]=t,e[t+24>>2]=A),(t=e[n+20>>2])&&(e[A+20>>2]=t,e[t+24>>2]=A)}g>>>0<=15?(t=g+w|0,e[n+4>>2]=3|t,e[4+(t=t+n|0)>>2]=1|e[t+4>>2]):(e[n+4>>2]=3|w,e[4+(A=n+w|0)>>2]=1|g,e[A+g>>2]=g,F&&(s=228648+(-8&F)|0,l=e[57157],(t=1<<(F>>>3))&m?t=e[s+8>>2]:(e[57152]=t|m,t=s),e[s+8>>2]=l,e[t+12>>2]=l,e[l+12>>2]=s,e[l+8>>2]=t),e[57157]=A,e[57154]=g),t=n+8|0}return oe=r+16|0,0|t}function Rr(t,r,s,n,A){var l,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0;oe=l=oe-544|0,Yt(l+320|0,0,100),Yt(l+208|0,0,100),T=s?e[s>>2]:T,Ae=e[t+12>>2],x=e[36115];e:{t:{s:{n:{for(;;){if(g=(0|(g=c[r+m|0]))>=(0|x)?13:g,f[l+m|0]=g,!g){g=m;break n}if(w=(0|x)<=(0|(w=c[(g=1|m)+r|0]))?13:w,f[g+l|0]=w,!w)break n;if((0|(m=m+2|0))==200)break}m=198,Me=c[l+199|0];break s}if(!g)break t;Me=c[l+(m=g-1|0)|0],(0|g)!=1&&(m=g-2|0)}if(mt=8&T,e[l+536>>2]=(mt>>>3|0?3:7)&T,T=c[l+m|0],x=1,U=(0|(F=di(t,l,l+432|0,l+540|0,l+536|0,1)))>=0?F:0,Ze=c[0|l])for(m=l,g=Ze;g=e[144464+((255&g)<<2)>>2],c[g+11|0]==2&&(1048576&(g=e[g+4>>2])||(w=(2097152&g)>>>21|0,w|=g=c[e[144464+(c[0|(ee=m+1|0)]<<2)>>2]+10|0]==12,f[(l+208|0)+x|0]=w,Ce=e[144464+(c[(g?2:1)+m|0]<<2)>>2],w=c[Ce+11|0]-10>>>0<4294967289|!(32&c[Ce+6|0])&c[e[144464+(c[(g?3:2)+m|0]<<2)>>2]+11|0]==2?w:w?2:1,m=g?ee:m,f[(l+320|0)+x|0]=w,x=x+1|0)),g=c[0|(m=m+1|0)];);m=s=s?U:F;s:{n:{i:{c:{A:{d:{l:{o:{p:{b:{m:{C:switch(e[t+8>>2]-1|0){case 11:if((0|(s=e[l+540>>2]))<2)break p;if(m=1,U=1&(g=s-1|0),(0|s)!=2)break m;x=0;break b;case 8:if((0|(g=e[l+540>>2]))<2)break n;if(x=3&(w=g-1|0),m=1,g-2>>>0>=3)for(U=-4&w,w=0;T=f[0|(g=(l+432|0)+m|0)],f[0|g]=(0|T)<0?4:T,T=f[g+1|0],f[g+1|0]=(0|T)<0?4:T,T=f[g+2|0],f[g+2|0]=(0|T)<0?4:T,T=g,g=f[g+3|0],f[T+3|0]=(0|g)<0?4:g,m=m+4|0,(0|U)!=(0|(w=w+4|0)););if(!x)break n;for(g=0;w=f[0|(T=(l+432|0)+m|0)],f[0|T]=(0|w)<0?4:w,m=m+1|0,(0|x)!=(0|(g=g+1|0)););break n;case 7:if(!c[l+322|0]|f[l+321|0]>0)break n;case 0:if(e[l+536>>2]|e[l+540>>2]<3)break n;if(e[l+536>>2]=2,m=4,s)break s;f[l+434|0]=4;break s;case 1:if(e[l+536>>2])break s;h:{M:{if((0|(x=e[l+540>>2]))>=3){s=x-2|0,e[l+536>>2]=s,m=s;I:if(512&Ae&&(g=e[144464+(Me<<2)>>2],(0|(w=c[g+11|0]))!=2)){m=e[g>>2],g=l;x:{N:{if((0|(U=e[t+212>>2]))!=26977){if((0|U)!=24942)break N;switch(m-110|0){case 0:case 5:if(m=s,c[e[144464+(T<<2)>>2]+11|0]==2)break I}m=x-1|0;break x}if((0|m)==115&&(m=s,c[e[144464+(T<<2)>>2]+11|0]==2))break I;m=x-1|0;break x}N:{V:{if((0|m)==115){if(m=s,(0|(w=c[e[144464+(T<<2)>>2]+11|0]))!=8)break V;break I}if((0|w)!=8)break N;w=c[e[144464+(T<<2)>>2]+11|0]}if(m=s,(255&w)==2)break I}m=x-1|0}e[g+536>>2]=m}if(524288&Ae&&(f[(g=x-1|0)+(x=l+208|0)|0]<=f[s+x|0]||(e[l+536>>2]=g,m=g)),c[(l+432|0)+m|0]>1){g=m;break h}if(g=2,s=m-1|0,m>>>0>=2)break M;e[l+536>>2]=m+1;break h}s=1}g=s,e[l+536>>2]=g}if(m=4,f[0|(s=(l+432|0)+g|0)]>=0||f[(g=(l+432|0)+g|0)-1|0]>=4&f[g+1|0]>3)break s;f[0|s]=4;break s;case 2:if(e[l+536>>2])break s;for(s=(m=e[l+540>>2])-1|0,s&=s>>31;;){if((0|(m=m-1|0))<=0)break i;if(!(f[0|(g=(l+432|0)+m|0)]>=0))break}e[l+536>>2]=m,m=4,f[0|g]=4;break s;case 3:if(e[l+536>>2])break n;if(g=(0|(m=e[l+540>>2]-3|0))<=1?1:m,e[l+536>>2]=g,m=4,s)break s;f[g+(l+432|0)|0]=4;break s;case 4:if(e[l+536>>2])break s;if(g=(s=e[l+540>>2])-3|0,e[l+536>>2]=g,(0|s)<=15){h:{switch(c[e[144464+(Me<<2)>>2]+11|0]-2|0){case 0:g=f[s+94176|0];break h;case 2:g=f[s+94192|0];break h}g=f[s+94160|0]}e[l+536>>2]=g}m=4,f[(l+432|0)+g|0]=4;break s;case 5:if(e[l+536>>2])break s;if(x=-1,w=0,!((0|(s=(g=e[l+540>>2])-1|0))<2)){if(m=1,ee=1&g,(0|g)!=3)for(Ce=(-2&g)-4|0,g=0;f[(l+432|0)+m|0]<0&&(w=(T=(0|(U=f[(l+320|0)+m|0]))<(0|x))?w:m,x=T?x:U),f[(T=m+1|0)+(l+432|0)|0]<0&&(w=(U=(0|(ut=f[T+(l+320|0)|0]))<(0|x))?w:T,x=U?x:ut),m=m+2|0,T=(0|g)!=(0|Ce),g=g+2|0,T;);!ee|f[(l+432|0)+m|0]>=0||(x=(g=(0|(T=f[(l+320|0)+m|0]))<(0|x))?x:T,w=g?w:m)}e[l+536>>2]=w,c[s+(l+320|0)|0]!=2|(0|x)>1?(0|x)>0||(w=1,e[l+536>>2]=1):(e[l+536>>2]=s,w=s),m=4,f[(l+432|0)+w|0]=4;break s;case 14:break c;case 12:break A;case 6:break C;default:break s}if(e[l+536>>2])break s;x=(s=e[l+540>>2])-1|0,e[l+536>>2]=x;C:if(!((0|s)<2))for(m=1;;){if(c[(l+432|0)+m|0]==1){x=m-1|0,e[l+536>>2]=x;break C}if((0|s)==(0|(m=m+1|0)))break}m=4,f[(l+432|0)+x|0]=4;break s}for(ee=-2&g,x=0,w=0;g=c[0|(Ce=(T=l+432|0)+m|0)],We=Ce,ut=f[(Ce=l+208|0)+m|0]>0,f[0|We]=ut||(0|g)==4?3:g,xt=(0|(T=c[0|(We=(g=m+1|0)+T|0)]))==4?3:T,T=f[g+Ce|0]>0,f[0|We]=T?3:xt,x=T?g:ut?m:x,m=m+2|0,(0|ee)!=(0|(w=w+2|0)););}if(U&&(T=(0|(g=c[0|(w=(l+432|0)+m|0)]))==4?3:g,g=f[(l+208|0)+m|0]>0,f[0|w]=g?3:T,x=g?m:x),g=e[l+536>>2])break d;if((0|x)>0){e[l+536>>2]=x,g=x;break d}if((0|s)<6)break o;g=s-3|0;break l}if(g=e[l+536>>2])break d}g=s-1|0}e[l+536>>2]=g}m=4,f[(l+432|0)+g|0]=4;break s}if(e[l+536>>2])break s;g=1,e[l+536>>2]=1,c[l+209|0]|e[l+540>>2]<3|f[l+210|0]<=0||(g=2,e[l+536>>2]=2),m=4,f[l+432|g]=4;break s}if(e[l+536>>2]||(0|(g=e[l+540>>2]))<3)break n;if(Yt(l+432|1,0,g-1|0),e[l+536>>2]=2,s||(f[l+434|0]=4),m=4,g>>>0<4)break s;f[431+(g+l|0)|0]=3;break s}e[l+536>>2]=s,m=4;break s}m=s}!(256&Ae)|2&A||(0|(s=e[l+540>>2]))<3|(0|F)>2||c[0|(g=(s=s+(l+432|0)|0)-1|0)]!=4|c[e[144464+(Me<<2)>>2]+11|0]!=2||(f[0|g]=1,f[s-2|0]=4);s:{n:{if(mt)F=e[l+540>>2];else{if(s=f[l+433|0],!(!(4096&Ae)|(0|(F=e[l+540>>2]))!=3)){if((0|s)==4){f[l+434|0]=3;break n}if(c[l+434|0]==4){f[l+433|0]=3;break n}}if(!(!(8192&Ae)|(0|s)>=0|(0|F)<4|f[l+434|0]<4)){f[l+433|0]=3;break n}}if(w=0,(0|F)<2)break s}for(x=(0|m)<4?4:3,Ce=128&Ae,ut=64&Ae,We=32&Ae,U=F-1|0,xt=16&Ae,St=!(32768&Ae),Me=0,T=0,m=1;;){n:{i:if((0|(g=f[0|(ee=(l+432|0)+m|0)]))>=0)w=x;else{w=3;c:{A:if(!(!(!xt|(0|x)>3)&(0|m)==(0|U))){if(!(1&(Me|St)))break c;if(!(f[431+(l+m|0)|0]>1)){if((0|(g=f[(s=m+1|0)+(l+432|0)|0]))>=2){if((0|x)!=4||(w=4,g>>>0>=3))break A}else if(!(!We|(0|x)!=3)){x=3;break n}if(!ut|m>>>0<2||(w=c[(l+320|0)+m|0]))break c;if((0|U)>(0|(g=m))){for(;;){if(f[(l+320|0)+g|0]>0)break n;if((0|U)==(0|(g=g+1|0)))break}if(w)break c}if(f[s+(l+320|0)|0]<=0)break c;break n}w=x}g=c[0|ee];break i}f[0|ee]=x,Me=1,w=3,g=x}i:{if(g<<24>>24>=4){if(s=T||m,!T|!Ce)break i;f[0|ee]=3}x=w;break n}x=w,T=s}if(w=1,(0|F)==(0|(m=m+1|0)))break}}if(n=!mt|(0|n)>=0?n:e[((0|F)<3?16:20)+t>>2],x=0,g=0,w){if(Me=3&(s=F-1|0),w=0,F-2>>>0<3)m=1;else for(mt=-4&s,m=1,T=0;g=(s=(0|(g=(ee=(0|(g=(U=(0|(g=(F=(0|(U=f[(s=l+432|0)+m|0]))<(0|g))?g:U))>(0|(ee=f[(Ce=m+1|0)+s|0])))?g:ee))>(0|(We=f[(ut=m+2|0)+s|0])))?g:We))>(0|(xt=f[(We=m+3|0)+s|0])))?g:xt,x=s?ee?U?F?x:m:Ce:ut:We,m=m+4|0,(0|mt)!=(0|(T=T+4|0)););if(Me)for(;g=(s=(0|(T=f[(l+432|0)+m|0]))<(0|g))?g:T,x=s?x:m,m=m+1|0,(0|Me)!=(0|(w=w+1|0)););}if((0|n)<0?n=g:(0|n)<=(0|g)&(0|g)>4||(f[(l+432|0)+x|0]=n),Me=r+197|0,F=1,!(1&A)&&(s=e[144464+(Ze<<2)>>2])){if(g=l,!((0|(w=c[s+11|0]))!=1&(0|Ze)!=15))for(;s=c[0|(g=g+1|0)],(0|(w=c[e[144464+(s<<2)>>2]+11|0]))==1|(0|s)==15;);!(48&(s=e[t+4>>2]))|(0|w)!=2||(f[0|r]=(32&s)>>>5|0&&f[l+433|0]>3?11:23,r=r+1|0)}s:if(!(r>>>0>=Me>>>0))for(U=65536&Ae,ee=2&Ae,mt=4&Ae,m=l;;){if(!(g=c[0|m]))break s;if(A=m,m=m+1|0,s=e[144464+(g<<2)>>2]){n:{i:{switch(c[s+11|0]){case 0:e[t+8200>>2]=0;break n;case 2:if(!(16&c[s+6|0]))break i}if(c[0|m]!=20)break n}if((0|(Ze=e[l+540>>2]))<(0|F))break e;T=f[0|(Ae=(l+432|0)+F|0)],e[t+8200>>2]=T;i:{c:{if(!((0|(s=T))>1)){if(w=Ze-1|0,!(!mt|(0|F)<2|(0|n)<2)&&(s=0,(0|w)==(0|F)))break c;if(s=1,!((0|F)==1|ee|(Ze-2|0)==(0|F)&f[w+(l+432|0)|0]<2|(0|w)==(0|F)||f[431+(l+F|0)|0]>=0&&(s=T,U))){s=0,f[0|Ae]=0;break c}}if(s&&(0|s)<2)break i}f[0|r]=c[s+94151|0],r=r+1|0,T=f[0|Ae]}w=(0|n)>(0|T),c[0|m]==12&&1&(Ze=e[t+28>>2])&&(m=(16&Ze?(0|x)!=(0|F):(0|s)<4)?A+2|0:m),n=w?n:T,F=F+1|0}if((0|g)!=1&&(f[0|r]=g,r=r+1|0),!(r>>>0<Me>>>0))break}}f[0|r]=0}return void(oe=l+544|0)}be(86136,86634,1353,94208),V()}function $s(t,r,s,n,A,l,g,m,w){var T,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0,Ds=0,ea=0,da=0,ma=0,Ia=0,Na=0,La=0,Ja=0,an=0,In=0;oe=T=oe-336|0,ee=m,Ce=65535&w,Ae=n,U=65535&A,mt=-2147483648&(A^w);e:{if(!((Ze=w>>>16&32767)-32767>>>0>4294934529&(Me=A>>>16&32767)-32767>>>0>=4294934530)){if(!(!n&(0|(x=2147483647&A))==2147418112?!(r|s):x>>>0<2147418112)){We=n,mt=32768|A;break e}if(!(!m&(0|(A=2147483647&w))==2147418112?!(l|g):A>>>0<2147418112)){We=m,mt=32768|w,r=l,s=g;break e}if(!(r|n|2147418112^x|s)){if(!(l|m|2147418112^A|g)){r=0,s=0,mt=2147450880;break e}mt|=2147418112,r=0,s=0;break e}if(!(l|m|2147418112^A|g)){r=0,s=0;break e}if(!(r|n|s|x)){We=(r=!(l|m|A|g))?0:We,mt=r?2147450880:mt,r=0,s=0;break e}if(!(l|m|A|g)){mt|=2147418112,r=0,s=0;break e}(0|x)==65535|x>>>0<65535&&(w=n=!(U|Ae),x=n?r:Ae,m=n<<=6,la(T+320|0,r,s,Ae,U,(n=n+((0|(w=ke(w?s:U)))==32?ke(x)+32|0:w)|0)-15|0),xt=16-n|0,Ae=e[T+328>>2],U=e[T+332>>2],s=e[T+324>>2],r=e[T+320>>2]),A>>>0>65535||(m=n=!(ee|Ce),w=n?l:ee,A=n<<=6,la(T+304|0,l,g,ee,Ce,(n=n+((0|(m=ke(m?g:Ce)))==32?ke(w)+32|0:m)|0)-15|0),xt=(n+xt|0)-16|0,ee=e[T+312>>2],Ce=e[T+316>>2],l=e[T+304>>2],g=e[T+308>>2])}if(Ir=A=65536|Ce,jr=ee,x=A<<15|(n=ee)>>>17,dn(T+288|0,n=A=n<<15|g>>>17,m=x,0,0,w=0-n|0,x=1963258675-(x+!!(0|n)|0)|0,0,0),dn(T+272|0,0-(n=e[T+296>>2])|0,0-(e[T+300>>2]+!!(0|n)|0)|0,0,0,w,x,0,0),dn(T+256|0,w=(n=e[T+280>>2])<<1|e[T+276>>2]>>>31,n=e[T+284>>2]<<1|n>>>31,0,0,A,m,0,0),dn(T+240|0,w,n,0,0,0-(x=e[T+264>>2])|0,0-(e[T+268>>2]+!!(0|x)|0)|0,0,0),dn(T+224|0,x=(w=e[T+248>>2])<<1|e[T+244>>2]>>>31,n=e[T+252>>2]<<1|w>>>31,0,0,A,m,0,0),dn(T+208|0,x,n,0,0,0-(w=e[T+232>>2])|0,0-(e[T+236>>2]+!!(0|w)|0)|0,0,0),dn(T+192|0,w=(n=e[T+216>>2])<<1|e[T+212>>2]>>>31,n=e[T+220>>2]<<1|n>>>31,0,0,A,m,0,0),dn(T+176|0,w,n,0,0,0-(x=e[T+200>>2])|0,0-(e[T+204>>2]+!!(0|x)|0)|0,0,0),dn(T+160|0,w=A,n=m,0,0,m=(ee=(A=e[T+184>>2])<<1|e[T+180>>2]>>>31)-1|0,A=(e[T+188>>2]<<1|A>>>31)-!ee|0,0,0),dn(T+144|0,l<<15,g<<15|l>>>17,0,0,n=m,A,0,0),ut=T+112|0,sr=e[T+168>>2],m=e[T+172>>2],F=(ee=e[T+160>>2])+(w=e[T+152>>2])|0,x=(Ce=e[T+164>>2])+e[T+156>>2]|0,w=x=w>>>0>F>>>0?x+1|0:x,x=(x=(0|Ce)==(0|x)&F>>>0<ee>>>0|x>>>0<Ce>>>0)>>>0>(Ce=x+sr|0)>>>0?m+1|0:m,dn(ut,n,A,0,0,0-(m=(ee=!w&F>>>0>1|!!(0|w))+Ce|0)|0,0-(!!(0|m)+(x=ee>>>0>m>>>0?x+1|0:x)|0)|0,0,0),dn(T+128|0,1-F|0,0-((F>>>0>1)+w|0)|0,0,0,n,A,0,0),ma=(Me-Ze|0)+xt|0,ut=A=e[T+116>>2],ee=(n=e[T+112>>2])<<1,Me=x=A<<1|n>>>31,n=x,br=m=e[T+140>>2],n=n+(x=m<<1|(A=e[T+136>>2])>>>31)|0,A=n=(m=(w=A<<1|e[T+132>>2]>>>31)+ee|0)>>>0<w>>>0?n+1|0:n,Rt=n=n-(m>>>0<13927)|0,sr=n,Ia=x=65536|U,Na=Ae,Ja=(n=Ae)<<1,an=x=x<<1|n>>>31,As=x,Ds=n=ds(Rt,F=0,x,0),St=x=H,xt=r<<1,Ze=n=s<<1|r>>>31,Ce=x=0,Rt=(0|A)==(0|Rt)&(w=m-13927|0)>>>0<m>>>0|A>>>0>Rt>>>0,A=(0|A)==(0|Me)&m>>>0<ee>>>0|A>>>0<Me>>>0,n=e[T+120>>2],x=m=e[T+124>>2]<<1|n>>>31,x=(n=(F=br>>>31|0)+(n=n<<1|ut>>>31)|0)>>>0<F>>>0?x+1|0:x,F=(m=n)>>>0>(n=n+A|0)>>>0?x+1|0:x,F=(A=n)>>>0>(n=n+Rt|0)>>>0?F+1|0:F,A=n-1|0,x=ds(Ze,Ce,Rt=F-!n|0,Me=0),m=H+St|0,ut=(0|St)==(0|(m=(n=x+Ds|0)>>>0<x>>>0?m+1|0:m))&n>>>0<Ds>>>0|m>>>0<St>>>0,br=A,A=ds(A,x=0,Ur=(La=s>>>31|0)|Ae<<1,St=0),x=H+m|0,F=0,ee=x=A>>>0>(Ae=A+n|0)>>>0?x+1|0:x,F=(A=n=(0|x)==(0|m)&n>>>0>Ae>>>0|m>>>0>x>>>0)>>>0>(n=n+ut|0)>>>0?1:F,A=ds(As,Ce,Rt,Me),x=H+F|0,ut=n=A+n|0,n=n>>>0<A>>>0?x+1|0:x,A=ds(As,Ce,br,St),U=H,m=A,A=ds(Ur,St,Rt,Me),x=H+U|0,A=x=A>>>0>(F=m+A|0)>>>0?x+1|0:x,n=n+(x=(0|U)==(0|x)&m>>>0>F>>>0|x>>>0<U>>>0)|0,ut=U=ut+A|0,U=n=U>>>0<A>>>0?n+1|0:n,x=F+ee|0,A=x=(n=(A=0)+Ae|0)>>>0<A>>>0?x+1|0:x,m=(0|x)==(0|ee)&n>>>0<Ae>>>0|x>>>0<ee>>>0,x=U,F=m,ea=m=m+ut|0,F=x=F>>>0>m>>>0?x+1|0:x,ut=n,U=n,Ae=A,Ds=w,n=ds(w,0,Ur,St),m=H,A=n,w=ds(sr,We,Ze,We),x=H+m|0,w=(0|m)==(0|(x=(n=n+w|0)>>>0<w>>>0?x+1|0:x))&n>>>0<A>>>0|m>>>0>x>>>0,m=x,A=ds(br,St,da=-2&xt,0),x=H+x|0,A=x=A>>>0>(ee=A+n|0)>>>0?x+1|0:x,n=(0|x)==(0|m)&n>>>0>ee>>>0|m>>>0>x>>>0,m=0,n=((w=n+w|0)>>>0<n>>>0?1:m)+Ae|0,x=F,w=n=(U=w+U|0)>>>0<w>>>0?n+1|0:n,m=n=(0|n)==(0|Ae)&U>>>0<ut>>>0|n>>>0<Ae>>>0,In=n=n+ea|0,ut=x=m>>>0>n>>>0?x+1|0:x,n=ds(As,Ce,Ds,We),ea=H,As=n,m=ds(Rt,Me,da,We),x=H+ea|0,Ae=n=n+m|0,F=n+(Ce=ds(sr,We,Ur,St))|0,n=(m=n>>>0<m>>>0?x+1|0:x)+H|0,n=F>>>0<Ce>>>0?n+1|0:n,Me=F,Ce=F+(x=ds(Ze,We,br,St))|0,F=H+n|0,Ur=(0|n)==(0|(F=x>>>0>Ce>>>0?F+1|0:F))&Ce>>>0<Me>>>0|n>>>0>F>>>0,x=((n=(n=(n=(0|n)==(0|m)&Ae>>>0>Me>>>0|n>>>0<m>>>0)+(x=(0|m)==(0|ea)&Ae>>>0<As>>>0|m>>>0<ea>>>0)|0)+Ur|0)|(br=0))+w|0,Ae=x=(m=F)>>>0>(Me=m+U|0)>>>0?x+1|0:x,n=(0|w)==(0|x)&U>>>0>Me>>>0|w>>>0>x>>>0,x=ut,m=n,br=n=n+In|0,w=x=m>>>0>n>>>0?x+1|0:x,n=ds(sr,We,da,We),sr=H,U=n,m=ds(Ze,We,Ds,We),x=H+sr|0,m=(0|(x=(n=n+m|0)>>>0<m>>>0?x+1|0:x))==(0|sr)&n>>>0<U>>>0|x>>>0<sr>>>0,U=x,n=x+ee|0,x=(m|(ut=0))+A|0,U=(0|A)==(0|(x=n>>>0<U>>>0?x+1|0:x))&n>>>0<ee>>>0|A>>>0>x>>>0,F=(m=x)+(x=Ce)|0,x=0,x=((A=n=(0|m)==(0|(F=(ee=(Ce=0)+n|0)>>>0<Ce>>>0?F+1|0:F))&n>>>0>ee>>>0|m>>>0>F>>>0)>>>0>(n=n+U|0)>>>0?1:x)+Ae|0,F=w,A=x=(A=n)>>>0>(n=n+Me|0)>>>0?x+1|0:x,w=F=(w=m=(0|Ae)==(0|x)&n>>>0<Me>>>0|x>>>0<Ae>>>0)>>>0>(m=m+br|0)>>>0?F+1|0:F,(0|F)==131071|F>>>0<131071?(Na=Ja|La,Ia=St|an,dn(T+80|0,n,A,m,w,l,g,jr,Ir),Ce=F=e[T+84>>2],x=r<<17,Ae=(s=(ee=0)-(U=e[T+88>>2])|0)-(F=!!(F|(r=e[T+80>>2])))|0,U=(x-(e[T+92>>2]+(U>>>0>ee>>>0)|0)|0)-(s>>>0<F>>>0)|0,ee=0-r|0,Ce=0-(!!(0|r)+Ce|0)|0,r=ma+16382|0):(dn(T+96|0,n=(1&A)<<31|n>>>1,A=m<<31|A>>>1,m=(1&w)<<31|m>>>1,w=w>>>1|0,l,g,jr,Ir),Ze=Ae=e[T+100>>2],Ae=(ee=0-(xt=e[T+104>>2])|0)-(U=!!(Ae|(F=e[T+96>>2])))|0,U=((r<<16)-(e[T+108>>2]+(Ce>>>0<xt>>>0)|0)|0)-(U>>>0>ee>>>0)|0,ee=0-F|0,Ce=0-(!!(0|F)+Ze|0)|0,xt=r,Ze=s,r=ma+16383|0),(0|r)>=32767)mt|=2147418112,r=0,s=0;else{if((0|r)>0)F=U<<1|Ae>>>31,Ae=Ae<<1|Ce>>>31,U=F,xt=m,Ze=65535&w|r<<16,F=Ce<<1|ee>>>31,w=ee<<1;else{if((0|r)<=-113){r=0,s=0;break e}Ma(T- -64|0,n,A,m,w,1-r|0),la(T+48|0,xt,Ze,Na,Ia,r+112|0),dn(T+32|0,l,g,jr,Ir,n=e[T+64>>2],A=e[T+68>>2],xt=e[T+72>>2],Ze=e[T+76>>2]),r=e[T+40>>2],ee=(s=e[T+56>>2])-(Ae=r<<1|(F=e[T+36>>2])>>>31)|0,U=e[T+60>>2]-((e[T+44>>2]<<1|r>>>31)+(s>>>0<Ae>>>0)|0)|0,x=(r=e[T+32>>2])<<1,Ae=ee-(r=(0|(m=F<<1|r>>>31))==(0|(w=e[T+52>>2]))&x>>>0>(s=e[T+48>>2])>>>0|m>>>0>w>>>0)|0,U=U-(r>>>0>ee>>>0)|0,F=w-((s>>>0<x>>>0)+m|0)|0,w=s-x|0}r=w,dn(T+16|0,l,g,jr,Ir,3,0,0,0),dn(T,l,g,jr,Ir,5,0,0,0),m=F+(s=0)|0,m=w>>>0>(r=r+(x=1&n)|0)>>>0?m+1|0:m,w=r,g=(0|g)==(0|m)&r>>>0>l>>>0|g>>>0<m>>>0,F=U,r=(0|s)==(0|m)&r>>>0<x>>>0|s>>>0>m>>>0,x=A,s=x=(s=r=(r=(0|(F=r>>>0>(l=r+Ae|0)>>>0?F+1|0:F))==(0|Ir))&(0|l)==(0|jr)?g:r&l>>>0>jr>>>0|F>>>0>Ir>>>0)>>>0>(r=r+n|0)>>>0?x+1|0:x,n=(0|A)==(0|x)&r>>>0<n>>>0|A>>>0>x>>>0,x=Ze,x=(A=n)>>>0>(n=n+xt|0)>>>0?x+1|0:x,g=n,U=(0|(A=e[T+20>>2]))==(0|m)&J[T+16>>2]<w>>>0|A>>>0<m>>>0,A=e[T+28>>2],A=x>>>0<2147418112&((0|(n=e[T+24>>2]))==(0|l)&(0|A)==(0|F)?U:(0|A)==(0|F)&n>>>0<l>>>0|A>>>0<F>>>0),n=s,x=(s=r=(0|s)==(0|(n=(U=A)>>>0>(A=r+A|0)>>>0?n+1|0:n))&r>>>0>A>>>0|s>>>0>n>>>0)>>>0>(r=r+g|0)>>>0?x+1|0:x,g=r,m=(0|(s=e[T+4>>2]))==(0|m)&J[T>>2]<w>>>0|s>>>0<m>>>0,s=e[T+12>>2],s=F=(s=r=x>>>0<2147418112&((0|(r=e[T+8>>2]))==(0|l)&(0|s)==(0|F)?m:(0|s)==(0|F)&r>>>0<l>>>0|s>>>0<F>>>0))>>>0>(r=r+A|0)>>>0?n+1|0:n,A=(0|n)==(0|F)&r>>>0<A>>>0|n>>>0>F>>>0,n=x,l=A,We|=A=A+g|0,mt|=n=l>>>0>A>>>0?n+1|0:n}}e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=We,e[t+12>>2]=mt,oe=T+336|0}function os(t,r,s,n,A){var l,g,m,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0;if(oe=g=oe-80|0,m=e[s+8>>2],!A|!P[s+4>>1]||(e[A+8>>2]=0),l=Yt(n,0,152),e[l+44>>2]=c[m+14|0],e[l+40>>2]=c[m+15|0],n=P[m+8>>1]){for(n=e[34459]+(n<<1)|0,We=256&r,Ze=s+32|0,xt=s-32|0,St=s- -64|0,Rt=s+96|0,sr=s+-64|0,br=s-28|0,Ir=1&r,jr=s-24|0,ut=e[30450];;){w=15&(U=(r=P[n>>1])>>>8|0);e:{t:{s:{n:{i:{c:{A:{d:{l:{o:{p:{b:switch(0|(x=r>>>12|0)){case 10:break A;case 9:break d;case 6:break l;case 2:case 3:break o;case 1:break p;case 0:break b;case 11:case 12:case 13:case 14:case 15:break c;default:break i}T=255&r;b:{m:{C:switch(0|w){case 13:if(T)break m;w=n,r=0;break b;case 0:switch(w=n,T-1|0){case 1:break e;case 0:break t}e[g+20>>2]=XA(g+75|0,e[m>>2]),e[g+16>>2]=r,wa(ut,85851,g+16|0);break e;case 5:if(c[e[144464+(c[s+34|0]<<2)>>2]+11|0]!=2)break e;e[l+20>>2]=T;break e;case 12:break C;default:break n}e[l+44>>2]=e[l+44>>2]+(r<<24>>31&-256|T);break e}f[l+132|0]=c[n+3|0],w=n+2|0,f[l+133|0]=c[0|w],r=2,T>>>0<3||(f[l+134|0]=c[n+5|0],w=n+4|0,f[l+135|0]=c[0|w],r=4,T>>>0<5||(f[l+136|0]=c[n+7|0],w=n+6|0,f[l+137|0]=c[0|w],r=6,T>>>0<7||(f[l+138|0]=c[n+9|0],w=n+8|0,f[l+139|0]=c[0|w],r=8,T>>>0<9||(f[l+140|0]=c[n+11|0],w=n+10|0,f[l+141|0]=c[0|w],r=10,T>>>0<11||(f[l+142|0]=c[n+13|0],w=n+12|0,f[l+143|0]=c[0|w],r=12,T>>>0<13||(f[l+144|0]=c[n+15|0],w=n+14|0,f[l+145|0]=c[0|w],r=14,T>>>0<15||(f[l+146|0]=c[n+17|0],w=n+16|0,f[l+147|0]=c[0|w],r=16)))))))}f[132+(r+l|0)|0]=0,T=Ae;break t}if(!t|w>>>0>7||(x=s,c[e[144464+(c[s+2|0]<<2)>>2]+11|0]!=2&&(x=Ze,c[e[144464+(c[s+34|0]<<2)>>2]+11|0]!=2))||!(1&(w=e[t+56>>2]))&&16&c[0|s])break e;T=15&c[x+3|0],T=2&w&&c[x+6|0]<=T>>>0?4:T;p:{b:{m:{C:switch((w=7&U)-3|0){case 1:break b;case 0:break C;default:break m}if(T>>>0>3)break p;break e}if(e[102832+(w<<2)>>2]>(0|T))break p;break e}if(c[x+6|0]>T>>>0)break e}e[l+8>>2]=255&r,T=1;break s}if((57344&r)==8192){for(Ur=e[32972],U=1,mt=0;;){F=255&r,w=(ee=4095&r)>>>8|0;o:if(ee>>>0<=3583){(0|(T=(w>>>0)%7|0))==6&&(T=P[n+2>>1]),Me=0,w=s;p:{b:{m:switch(0|T){case 6:if(x=0,P[s+36>>1]|P[s+68>>1])break o;case 3:w=St;break b;case 9:if(x=0,P[s+36>>1]|P[s+68>>1])break o;if(w=Rt,!P[s+100>>1])break p;break o;case 7:if(x=0,P[s+36>>1])break o;for(T=1;;){if(c[e[144464+(c[2+(w=(T<<5)+s|0)|0]<<2)>>2]+11|0]==2)break b;if(P[4+(((T=T+1|0)<<5)+s|0)>>1])break}break o;case 5:if(x=0,P[s+4>>1])break o;case 0:Me=1,w=xt;break b;case 4:if(x=0,P[s+36>>1])break o;case 2:w=Ze;break b;case 8:if(x=0,!A)break o;if(Me=1,e[(w=A)+8>>2])break p;break o;case 10:break m;default:break b}if(x=0,P[s+4>>1]|P[br>>1])break o;Me=1,w=sr;break p}b:switch(0|T){case 0:case 5:break b;default:break p}w=(c[w+2|0]==1?-32:0)+w|0}if(We?(T=e[144464+(c[w+2|0]<<2)>>2],e[w+8>>2]=T):T=e[w+8>>2],ee>>>0<=1791){if(x=1,e[e[144464+(F<<2)>>2]>>2]==e[T>>2])break o;if(!(!Me|c[T+11|0]!=2)){x=(0|F)==c[T+13|0];break o}x=(0|F)==c[T+12|0];break o}F=31&ee,x=0;p:switch(ee>>>5&7){case 0:x=(0|F)==c[T+11|0];break o;case 1:x=(0|F)==(15&P[T+6>>1]);break o;case 2:x=e[T+4>>2]>>>F&1;break o;case 4:break p;default:break o}p:switch(0|F){case 0:case 1:case 2:case 3:case 4:if(c[e[144464+(c[w+2|0]<<2)>>2]+11|0]!=2){if(c[e[144464+(c[w+34|0]<<2)>>2]+11|0]!=2)break o;w=w+32|0}T=15&c[w+3|0],T=!t|!(2&c[t+56|0])?T:c[w+6|0]<=T>>>0?4:T;b:{switch(F-3|0){case 1:x=c[w+6|0]<=T>>>0;break o;case 0:if(x=1,T>>>0<=3)break b;break o}if(x=1,e[102832+(F<<2)>>2]>(0|T))break o}x=0;break o;case 17:if(!c[T+11|0]){x=1;break o}x=(32&c[s+1|0])>>>5|0;break o;case 18:x=P[w+4>>1]!=0;break o;case 19:if(x=1,P[w+36>>1])break o;x=!c[e[w+40>>2]+11|0];break o;case 9:if(P[w+4>>1])break o;for(;;){if(x=!!(0|(T=12&c[w-29|0])),T)break o;if(P[4+(w=w-32|0)>>1])break}break o;case 10:x=c[T+11|0]!=2;break o;case 11:for(;;){if(x=!!(0|(T=P[w+36>>1])),T)break o;if(T=w,w=w+32|0,c[e[T+40>>2]+11|0]==2)break}break o;case 12:if(x=1,(254&c[T+11|0])==2)break o;x=(16&c[T+4|0])>>>4|0;break o;case 13:for(;x=(c[e[w+8>>2]+11|0]==2)+x|0,T=P[w+4>>1],w=w-32|0,!T;);x=(0|x)==1;break o;case 14:for(;x=(c[e[w+8>>2]+11|0]==2)+x|0,T=P[w+4>>1],w=w-32|0,!T;);x=(0|x)==2;break o;case 16:break p;default:break o}x=(16&c[0|w])>>>4|0}else if(x=0,(0|w)==15){p:switch(F-1|0){case 0:x=Ir;break o;case 1:break p;default:break o}x=e[Ur+132>>2]!=0}o:if(1970>>>(w=(T=65535&r)>>>12|0)&1)w=f[w+102848|0];else{switch(0|w){case 0:if(w=1,(3840&T)!=3328)break o;w=1+(1+(255&T)>>>1|0)|0;break o;case 6:w=(T>>>9&7)-5>>>0<2?12:1;break o;case 2:case 3:w=(0|(w=3840&T))==3328||(0|w)==1536?2:1;break o}w=4,(T=P[n+4>>1])>>>0>61439||(w=(0|T)==2?3:2)}if(n=((w=P[(n=(w<<1)+n|0)>>1]==3)<<1)+n|0,w^=x,U=mt?w|U:w&U,mt=4096&r,(57344&(r=P[n>>1]))!=8192)break}if(!(1&U))if((63488&r)!=26624){o:if(1970>>>(w=r>>>12|0)&1)w=f[w+102848|0];else{switch(0|w){case 0:if(w=1,(3840&r)!=3328)break o;w=1+(1+(255&r)>>>1|0)|0;break o;case 6:w=(r>>>9&7)-5>>>0<2?12:1;break o;case 2:case 3:w=(0|(r&=3840))==3328||(0|r)==1536?2:1;break o}w=4,(r=P[n+4>>1])>>>0>61439||(w=(0|r)==2?3:2)}n=(((65024&P[(r=(w<<1)+n|0)>>1])==24576)<<1)+r|0}else n=((255&r)<<1)+n|0}w=n-2|0,T=Ae;break t}l:switch(w>>>1|0){case 0:n=(((255&r)<<1)+n|0)-2|0;break e;case 5:e[l>>2]=2|e[l>>2],((r=c[e[s+40>>2]+12|0])-28&255)>>>0<=5&&(w=P[4+(r=((r<<2)+n|0)-112|0)>>1],r=P[r+2>>1],e[l+96>>2]=r>>>4<<24>>24,e[l+76>>2]=(15&r)<<18|w<<2),n=n+24|0;break e;case 6:break l;default:break e}((r=c[e[jr>>2]+13|0])-28&255)>>>0<=5&&(w=P[4+(r=((r<<2)+n|0)-112|0)>>1],r=P[r+2>>1],e[l+100>>2]=r>>>4<<24>>24,e[l+80>>2]=(15&r)<<18|w<<2),n=n+24|0;break e}r=P[(n=n+2|0)>>1]|r<<16&983040;d:switch(w-1|0){case 0:if((0|Ce)>9)break e;e[(g+32|0)+(Ce<<2)>>2]=n,n=(e[34459]+(r<<1)|0)-2|0,Ce=Ce+1|0;break e;case 1:e[l+124>>2]=r;break e;case 2:break d;default:break e}e[l+128>>2]=r;break e}e[108+(w=(((0|w)!=1)<<3)+l|0)>>2]=P[n+2>>1]|(255&r)<<16,r=P[n+4>>1]<<16,n=n+6|0,e[w+112>>2]=r|P[n>>1];break e}if(T=P[(w=n+2|0)>>1],ee=r>>>4|0,e[88+(U=((F=x-11|0)<<2)+l|0)>>2]=255&ee,e[U+68>>2]=r<<18&3932160|T<<2,(0|(n=P[n+4>>1]))==2){n=w;break e}if(T=r>>>0<=53247?n>>>0>61439?2:1:Ae-((0|F)==4)|0,x-13>>>0>1)break t;e[U+88>>2]=ee<<24>>24;break t}e[g+4>>2]=XA(g+75|0,e[m>>2]),e[g>>2]=r,wa(ut,85851,g);break e}e[4+((w<<2)+l|0)>>2]=T,T=We&&(0|w)==1?1:Ae}w=n}(0|T)!=1|(0|Ce)<=0?(n=w,Ae=T):(n=e[(g+32|0)+((Ce=Ce-1|0)<<2)>>2],Ae=0)}if(n=n+2|0,(0|Ae)==1)break}!A|c[s+17|0]!=2||(t=e[s+4>>2],e[A>>2]=e[s>>2],e[A+4>>2]=t,t=e[s+28>>2],e[A+24>>2]=e[s+24>>2],e[A+28>>2]=t,t=e[s+20>>2],e[A+16>>2]=e[s+16>>2],e[A+20>>2]=t,t=e[s+12>>2],e[A+8>>2]=e[s+8>>2],e[A+12>>2]=t),f[s+23|0]=e[l+44>>2],(t=e[l+68>>2])?(e[s+24>>2]=t,t=l+88|0):(e[s+24>>2]=e[l+72>>2],t=l+92|0),e[s+28>>2]=e[t>>2]}oe=g+80|0}function Ks(t,r,s,n,A,l){var g,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0;oe=g=oe-848|0;e:if(!(!e[t+104>>2]|8&c[A+2|0]|e[47202]==193)){for(e[n>>2]=0,e[33272]=0,e[33274]=l,f[g+192|0]=0,e[33273]=g+192;x=(l=x)+1|0,f[0|(Ze=r+l|0)]-48>>>0<10;);e[56798]=0,St=g+188|0,U=-2147483648,oe=We=oe-16|0;t:if(m=c[0|r]){F=r;s:{for(;;){if(!((0|(m=m<<24>>24))==32|m-9>>>0<5))break s;if(m=c[F+1|0],F=F+1|0,!m)break}break t}s:switch((m=c[0|F])-43|0){case 0:case 2:break s;default:break t}Ce=(0|m)==45?-1:0,F=F+1|0}else F=r;for(;m=-48,(((ee=f[0|F])-48&255)>>>0<10||(m=-87,(ee-97&255)>>>0<26||(m=-55,!((ee-65&255)>>>0>25))))&&!((0|(ee=m+ee|0))>=10);)dn(We,10,0,0,0,Ae,Me,0,0),m=1,e[We+8>>2]|e[We+12>>2]||(mt=ds(Ae,Me,10,0),(0|(xt=H))==-1&~ee>>>0<mt>>>0||(m=xt,Me=(Ae=ee+mt|0)>>>0<ee>>>0?m+1|0:m,ut=1,m=T)),F=F+1|0,T=m;St&&(e[St>>2]=ut?F:r);t:{s:{if(T)e[56798]=68,Ae=-2147483648,Me=0;else if(!Me&Ae>>>0<2147483648)break s;if(!Ce){e[56798]=68,U=2147483647;break t}if(!(!Me&Ae>>>0<=2147483648)){e[56798]=68;break t}}U=(Ce^Ae)-Ce|0}if(oe=We+16|0,Ce=U,!(e[56798]|e[g+188>>2]==(0|r))){t:{s:{n:{if(!(!((0|(ee=64&c[t+109|0]?4:3))!=(0|l)|e[t+124>>2]!=f[r-2|0])&f[r-3|0]-48>>>0<10)){i:{if(e[t+124>>2]!=32){if(!(16&c[t+105|0]))break n;if((0|l)==3)break i;break n}if((0|l)!=3)break n}if(4&c[A+2|0]|f[r-2|0]-48>>>0>=10)break n}f[133104]=0,f[g+288|0]=0,Rt=1;break s}if(f[133104]=0,e[33275]=0,f[g+288|0]=0,sr=1,ut=0,c[0|r]==48)break t}ut=Ys(t,r,Ze,A,0)}c[0|Ze]!=46|f[r+x|0]-48>>>0<10|1&f[A+13|0]|f[Ze+2|0]-48>>>0<10||(f[0|Ze]=0);t:if(!ut||(mt=1,e[t+212>>2]==26741)){if(U=g+256|0,e[g+844>>2]=U,w=x,64&c[A+1|0]&&(f[g+256|0]=45,U=g+256|1,e[g+844>>2]=U,w=l+2|0),F=c[r+w|0]){for(;!((255&F)==32|(0|w)>28)&&(m=e[g+844>>2],e[g+844>>2]=m+1,f[0|m]=F,F=c[(w=w+1|0)+r|0]););U=e[g+844>>2]}if(f[0|U]=0,mt=1,m=f[g+256|0]){if(!(T=e[t+136>>2])||Pa(g+256|0,T)){if(m-48>>>0<10||(e[g+176>>2]=g+256,mr(m=g+800|0,88653,g+176|0),!vr(t,m,133104)))break t;e[n>>2]=128|e[n>>2],e[g+160>>2]=g+256,mr(m=g+800|0,88773,g+160|0),vr(t,m,133116),mt=0}ut=2}}St=e[A>>2],f[g+352|0]=0,f[g+624|0]=0;t:{s:{n:if(!(!sr|c[0|r]!=48||(0|(m=f[r+1|0]))==32|(0|m)==e[t+128>>2])){i:{if((0|l)==2){if(c[r+3|0]!=58|f[r+5|0]-48>>>0>=10||!((0|(m=f[r+7|0]))==32|m-9>>>0<5))break i;break n}if((0|l)>3)break s}if(c[0|r]==48&&!((0|(m=l-1|0))<=0))for(w=0;;){if(vr(t,88875,_r(T=g+288|0)+T|0),c[(w=w+1|0)+r|0]!=48)break n;if(!((0|m)>(0|w)))break}}n:{i:{if(!((0|(m=f[0|Ze]))==32&&16&c[t+105|0])){if(xt=2,Ae=l+2|0,(0|m)==e[t+124>>2])break i;Me=1,U=0,m=0;break n}xt=1,Ae=l+2|0}if(4&c[A+14|0])U=1,m=0,Me=1;else for(m=0,F=1,w=l,Me=1;;){T=m,m=F,F=(We=w+xt|0)+r|0,w=0;i:{for(;;){if(U=1,!(f[w+F|0]-48>>>0>=10)){if((0|ee)!=(0|(w=w+1|0)))continue;break i}break}m=T;break n}if(f[F+ee|0]-48>>>0<10){m=T;break n}if(w=0,f[F-1|0]-48>>>0<10){m=T;break n}i:{for(;;){if(c[(w+We|0)+r|0]==48){if((0|ee)!=(0|(w=w+1|0)))continue;break i}break}Me=0}if((0|(T=f[(w=ee+We|0)+r|0]))!=e[t+124>>2]&(!(16&c[t+105|0])|(0|T)!=32))break n;if(Ae=w+2|0,4&c[2+(j(F=m+1|0,12)+A|0)|0])break}}w=!Ce;n:if(!(!Me|!(64&c[1+(j(m,12)+A|0)|0])|e[t+212>>2]!=26741)){i:switch(c[0|(T=r+Ae|0)]-97|0){case 0:case 4:break i;default:break n}i:{c:{A:{d:switch((F=c[T+1|0])-116|0){case 6:break n;case 1:case 2:case 3:case 4:case 5:break c;case 0:break d;default:break A}if(c[T+2|0]!=116)break i;break n}if((0|F)==32)break n}if(!(!!((0|Ce)%1e3|0)&(0|m)!=1)&&(0|F)==108)break n}e[33274]=1|e[33274]}Ae=32768&St,w&=Rt;n:if(e[t+128>>2]!=f[0|Ze]|f[r+x|0]-48>>>0>=10){i:{if(!w){if(w=0,T=1,!((0|m)>0&U))break i;Ce=(x=Dn(t,Ce,m,Me,g+624|0))?0:Ce,w=!!(0|x),F=0;break n}w=1,Ce=0,e[33275]==1&&(e[g+144>>2]=m+1,mr(x=g+800|0,89026,g+144|0),vr(t,x,g+688|0)||(e[g+128>>2]=m,mr(x=g+800|0,89026,g+128|0),vr(t,x,g+624|0)))}T=1,F=0}else vr(t,88882,g+624|0),T=0,F=256;U=Ae?2:ut;n:{if(m|c[g+624|0]|c[0|Ze]!=46){if(m)break n}else vr(t,89192,g+624|0);if(e[g+844>>2]=r,f[r+1|0]-48>>>0<10)for(;x=e[g+844>>2],e[g+844>>2]=x+1,f[x+2|0]-48>>>0<10;);if(f[e[g+844>>2]-1|0]-48>>>0>=10||(e[g+416>>2]=e[g+844>>2]-1,ba(t,g+416|0,g+192|0,n,4,A)&&(e[33272]=2)),c[g+192|0]|c[e[g+844>>2]]==48||ba(t,g+844|0,g+192|0,n,4,A)&&(e[33272]=1),sr){if(!U&T&&(e[g+112>>2]=Ce,mr(A=g+800|0,89214,g+112|0),vr(t,A,s)))break t;if(1&f[t+110|0]){for(x=r;(32|c[0|x])!=32;)x=x+1|0;e[g+416>>2]=x,c[x+1|0]==37&&(vr(t,89328,s),A=_r(s),f[e[g+416>>2]+1|0]=32,s=s+A|0)}}}aa(t,Ce,g+416|0,w,m,U|F|Rt),!(2&c[t+109|0])|(0|m)<=0?(e[g+60>>2]=15,e[g- -64>>2]=g+624,e[g+56>>2]=g+416,e[g+52>>2]=g+352,e[g+48>>2]=g+288,mr(s,89415,g+48|0)):(e[g+88>>2]=15,e[g+96>>2]=g+416,e[g+92>>2]=g+352,e[g+84>>2]=g+624,e[g+80>>2]=g+288,mr(s,89346,g+80|0));n:if(!T)for(;;){for(l=l+1|0,T=0;T=(x=T)+1|0,f[(m=l+x|0)+r|0]-48>>>0<10;);A=2;i:{c:{A:{d:{l:{o:switch((T=57344&e[t+104>>2])-8192>>>13|0){case 6:break c;case 2:break A;case 0:case 4:case 5:break d;case 1:break l;case 3:break o;default:break i}A=5}if((0|(T=c[0|(w=r+l|0)]))==48)for(;vr(t,88875,m=g+688|0),wn(s,m),x=x-1|0,(0|(T=c[0|(w=(l=l+1|0)+r|0)]))==48;);if((0|A)<(0|x)|(T<<24>>24)-48>>>0>=10)break i;A=g+688|0,aa(t,ao(w),A,0,0,0),wn(s,A),l=l+x|0;break i}if(aa(t,ao(A=r+l|0),g+416|0,0,0,0),!((0|T)==8192&c[0|A]!=48)){if(e[g+16>>2]=x,mr(A=g+800|0,89508,g+16|0),!vr(t,A,g+688|0))break i;wn((0|T)==49152?s:g+416|0,g+688|0)}wn(s,g+416|0),l=m;break i}if((0|x)>4||c[0|(A=r+l|0)]==48)break i;aa(t,l=ao(A),A=g+688|0,0,0,0),wn(s,A),l=m;break i}if(!((0|x)<=1))for(;;){if(e[g+32>>2]=f[r+l|0],mr(A=g+800|0,89575,g+32|0),!vr(t,A,g+688|0))break i;if(wn(s,g+688|0),l=l+1|0,!((0|(x=x-1|0))>1))break}}i:if(!((T=c[0|(x=r+l|0)])-48>>>0>=10||_r(s)>>>0>=190))for(;;){if(A=g+688|0,en(t,f[0|x]-48|0,0,2,A),m=_r(s),e[g>>2]=15,e[g+4>>2]=A,mr(s+m|0,89594,g),(T=c[0|(x=(l=l+1|0)+r|0)])-48>>>0>=10)break i;if(!(_r(s)>>>0<=189))break}if(vr(t,89678,g+688|0)&&wn(s,g+688|0),e[t+128>>2]!=(0|T)|f[1+(r+l|0)|0]-48>>>0>=10)break n;vr(t,88882,A=g+688|0),wn(s,A)}if(!(A=c[0|s])|(0|A)==21||(A=Hr(g+184|0,r=1+(r+l|0)|0),l=e[g+184>>2],!(2&c[t+106|0])|(0|l)!=32||(Hr(g+184|0,r+A|0),l=e[g+184>>2]),ls(l)|Me||(t=_r(s)+s|0,f[0|t]=11,f[t+1|0]=0)),e[n>>2]=-2147483648|e[n>>2],e[33275]=e[33275]-1,w=1,mt)break e;e[33264]=1;break e}e[n>>2]=-129&e[n>>2],w=0;break e}w=1}}return oe=g+848|0,w}function ts(t,r,s,n){var A,l,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0;if(oe=A=oe-416|0,ut=P[s+8>>1],Ae=c[s+10|0],64&(l=e[s>>2])){for(e[s>>2]=-65&l,f[199388]=1,w=e[47202],U=e[49846],x=e[47352],F=e[47351],T=e[47350];;){g=(m=e[198304+(F<<2)>>2])>>8;e:{t:switch((31&m)-9|0){case 0:w=g;break e;case 4:U=g;break e;case 3:break t;default:break e}x=m>>>0>=256?g+x|0:0}if(!(!(128&m)&(0|T)>(0|(F=F+1|0))))break}e[47352]=x,e[47351]=F,e[49846]=U,e[47202]=w}U=0;e:if(!((0|(g=e[49572]))>997)){if(1048576&l||!c[0|r])c[199388]&&(e[49572]=g+1,f[199388]=0,e[(t=190288+(g<<3)|0)>>2]=983042,e[t+4>>2]=0),f[189088]=0;else if(!((0|g)>990)){(0|(g=e[t+8224>>2]))>0&&(e[t+8224>>2]=g-1),w=512&l?n:n+4|0,x=(240&e[47202])==16,(We=2&l)&&((0|(m=e[47200]))<3||(0|(g=e[47350]))>243||(c[199388]&&(e[(F=198300+(g<<2)|0)>>2]=-129&e[F>>2]),e[47350]=g+1,f[199388]=1,mt=(0|m)==3?20:m,e[198304+(g<<2)>>2]=mt<<8|193)),T=x?w:n;t:{s:{if(!(8&l)){for(;n=c[(g=ee)+r|0],f[g+(A+240|0)|0]=n,223&n&&(ee=g+1|0,g>>>0<160););if(f[A+66|0]=0,ee=A- -64|2,U=pe(e[47192],r,s,ee),e[A+412>>2]=U,!(4096&U))break s;Jr(r,A+240|0,g);break e}n:if(Vn(r,87276,3))Fi(r,189088,A+240|0);else{if(F=0,223&(g=c[0|(ee=r+3|0)]))for(;f[(A+240|0)+F|0]=zs(g<<24>>24),F=F+1|0,223&(g=c[0|(ee=ee+1|0)]););f[(n=A+240|0)+F|0]=0,g=0;i:if(!((0|(s=e[34461]))<=0)){for(;;){if(!Pa(n,j(g,44)+137856|0)){e[34457]=g;break i}if((0|s)==(0|(g=g+1|0)))break}g=s}if((0|(s=(0|s)==(0|g)?-1:g))<=0)break n;Mn(s),f[189090]=0,f[189089]=s,f[189088]=21}U=-2147483648,e[A+412>>2]=-2147483648,n=-1;break t}if(!(!(8388608&U)|8&c[s+12|0])){for(oe=x=oe-208|0,F=e[t+60>>2],m=r;n=m,m=m+1|0,c[0|n]!=32;);Hr(x+204|0,m);s:if(ls(e[x+204>>2])){w=Qr(x,189088),m=(!(256&F)|(Me=_t(t,m,s+12|0,0))>>>15)&!(67108864&Me)&c[189088]!=21;n:{i:{if(512&F){if(!(m&!(16&c[s+12|0])))break i;break n}if(m)break n}Qr(189088,w);break s}if(f[0|n]=45,e[s>>2]=-2&e[s>>2],U=0,m=189088,Ce=_t(e[47192],r,s,0),e[A+412>>2]=Ce,!((0|F)<=0)&&(w=c[189088])){for(;U=(c[e[144464+(w<<2)>>2]+11|0]==2)+U|0,w=c[0|(m=m+1|0)];);if(!((31&F)>=(0|U))){f[0|n]=32,e[A+412>>2]=_t(e[47192],r,s,0);break s}}e[A+412>>2]=128|(Ce||Me),e[33264]=1}oe=x+208|0}if(n=-1,c[189088]==21){if(F=Qr(A+16|0,132848),x=e[A+412>>2],m=Jr(r,A+240|0,g),w=A- -64|1,(0|(n=cA(c[189089]?189089:87315,188772,189296)))<0||(e[s>>2]=4194304|e[s>>2],c[A+66|0]?(I[A+64>>1]=8192,x=_t(e[47193],w,s,0)):x=pe(e[47193],m,s,ee)),c[189088]==21&&(g=Jr(m,A+240|0,g),(0|(n=cA(c[189089]?189089:87315,188772,189296)))<0||(e[s>>2]=4194304|e[s>>2],c[A+66|0]?(I[A+64>>1]=8192,x=_t(e[47193],w,s,0)):x=pe(e[47193],g,s,ee)),U=4096,c[189088]==21))break e;e[A+412>>2]=x,(0|n)>=0||(f[189090]=0,I[94544]=3341,(0|n)==-1&&(Qr(132848,F),Mn(e[e[32972]+60>>2]),n=e[e[32972]+60>>2]))}U=e[A+412>>2],128&l||(T=268435456&U&&(0|T)<=1?1:T,!(256&U)|528&l|e[t+8224>>2]|2&c[s-11|0]||(e[t+8224>>2]=3,T=(0|T)<=4?4:T)),T=(0|T)<=0&&e[49846]>2?1:T}if(s=c[199388],!((0|T)<=0|(0|(ee=e[49572]))>990)){e[49572]=ee+1,m=1&s,s=0,I[(g=190288+(ee<<3)|0)>>1]=m?2:0,f[g+7|0]=0,f[g+3|0]=0,m=T>>>0>1,f[g+2|0]=m?9:11,I[g+4>>1]=0,e[t+8236>>2]=0;t:if(!(!(g=m?T-2|0:0)|(0|(ee=e[49572]))>990))for(w=t+8236|0;;){if(e[49572]=ee+1,I[(m=190288+(ee<<3)|0)>>1]=0,f[m+7|0]=0,f[m+3|0]=0,x=g>>>0>1,f[m+2|0]=x?9:11,I[m+4>>1]=0,e[w>>2]=0,ee=e[49572],(0|(g=x?g-2|0:0))<=0)break t;if(!((0|ee)<991))break}e[t+8228>>2]=0,e[t+8232>>2]=0}f[199388]=1&s,!We|e[47200]!=1||(e[49572]=ee+2,f[199388]=0,I[(g=190288+(ee<<3)|0)>>1]=1&s?2:0,f[g+7|0]=0,I[g+2>>1]=10,I[g+4>>1]=0,I[g+12>>1]=0,e[g+8>>2]=1179648,f[g+15|0]=0,1&l&&ca(f[r+1|0])&&(s=c[199388],f[199388]=0,r=e[49572],e[49572]=r+2,I[(r=190288+(r<<3)|0)>>1]=s?2:0,f[r+7|0]=0,I[r+2>>1]=10,I[r+4>>1]=0,I[r+12>>1]=0,e[r+8>>2]=1179648,f[r+15|0]=0)),g=Ae>>>0<31;t:if(!((0|n)<0))if(r=e[49572],s=c[190290+((T=r-1|0)<<3)|0],c[189088]!=9|c[189089]!=21)(0|s)!=21&&(m=c[199388],f[199388]=0,f[7+(s=190288+(r<<3)|0)|0]=0,I[s+2>>1]=21,I[s+4>>1]=0,I[s>>1]=m?2:0,T=r),e[49572]=T+1,f[190295+(T<<3)|0]=n;else{if((0|s)!=21)break t;e[49572]=T}r=2047&ut,s=(g?Ae:31)<<11,x=(xt=128&l)?c[e[144464+(c[189088]<<2)>>2]+11|0]?189088:189089:189088,(T=c[0|x])|!(1&f[199388])||(T=23,f[0|x]=23,f[x+1|0]=0),St=r|s,w=e[49572];t:if(T)if((0|w)>994)r=0;else for(br=((-1610612736&U)==-2147483648)<<4,ut=St+1|0,Ir=t+8233|0,r=0,m=1,Me=0,Rt=1,Ae=-1,We=-1,g=0;;){F=x+1|0;s:{if((0|(Ce=255&T))!=255){if(s=e[144464+(Ce<<2)>>2])break s;e[A>>2]=Ce,oe=s=oe-16|0,e[s+12>>2]=A,Xi(132552,87474,A),oe=s+16|0,w=e[49572]}if(!(T=c[0|F]))break t;if(x=F,(0|w)<995)continue;break t}s:if((0|(Ze=255&T))!=21)if((0|(x=c[s+11|0]))!=1){switch(s=ut,Ze-12|0){case 8:f[3+(s=190288+((Ae=w-1|0)<<3)|0)|0]=m,I[s>>1]=4|P[s>>1],s=g;break s;case 0:I[(s=190280+(w<<3)|0)>>1]=8|P[s>>1],s=g;break s;case 10:U|=16384,e[A+412>>2]=U,s=g;break s;case 3:break s}Ce=c[199388],f[199388]=0,f[7+(s=190288+(Ze=w<<3)|0)|0]=0,f[s+2|0]=T,I[s+4>>1]=g,g=(Ce?2:0)|br,I[s>>1]=g,(0|x)==2?((0|m)>=4&&(f[189076]=1),(0|Ae)<0||(0|(r=w-1|0))!=(0|Ae)&&(f[190291+(r<<3)|0]=m),I[s>>1]=4|g,sr=(r=(0|m)>(0|We))?w:sr,We=r?m:We,g=1,Me&&(f[s+7|0]=Me),Ae=w,Me=0,r=m):(!Rt|!(64&c[0|Ir])||(I[s>>1]=8|g),g=m),w=w+1|0,e[49572]=w,f[Ze+190291|0]=r,s=0,Rt=0,m=g}else{if(!P[s+8>>1]){m=c[s+14|0],s=g;break s}if((0|Ae)<0){s=g,Me=Ce;break s}f[190295+(Ae<<3)|0]=T,s=g}else e[(s=190288+(w<<3)|0)>>2]=1376256,I[s+4>>1]=0,f[s+7|0]=c[x+1|0],e[49572]=w+1,Mn(c[x+1|0]),F=x+2|0,w=e[49572],s=g;if(!(T=c[0|F]))break t;if(x=F,g=s,!((0|w)<995))break}else r=0;131072&l&&(s=w+1|0,e[49572]=s,m=c[199388],f[199388]=0,f[7+(g=190288+(w<<3)|0)|0]=0,I[g+2>>1]=27,I[g+4>>1]=0,I[g>>1]=m?2:0,w=s),xt||(I[190292+(ee<<3)>>1]=St),e[t+8228>>2]=0,c[e[144464+(c[190282+(w<<3)|0]<<2)>>2]+11|0]!=2|(0|r)<4||(e[t+8228>>2]=1),(0|n)>=0&&(Qr(132848,A+16|0),Mn(e[e[32972]+60>>2]),s=c[199388],f[199388]=0,n=e[49572],I[(r=190288+(n<<3)|0)>>1]=s?2:0,I[r+2>>1]=21,I[r+4>>1]=0,f[r+7|0]=e[e[32972]+60>>2],w=n+1|0,e[49572]=w),(0|mt)>0&&(f[199388]=0,e[49572]=w+1,e[(r=190288+(w<<3)|0)>>2]=655362,s=e[47350],e[47350]=s+1,f[r+7|0]=0,I[r+4>>1]=0,e[198304+(s<<2)>>2]=mt<<8|225),1024&U&&(I[(r=190288+(sr<<3)|0)>>1]=64|P[r>>1]),e[t+8232>>2]=U}}return oe=A+416|0,U}function zn(t,r,s,n,A){var l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0;e:if(r){if(We=A<<4,g=(r=e[33268])+s|0,!((0|r)<=0||(l=c[0|(w=We+129360|0)],F=c[w+1|0]-l<<8,F=(0|r)!=1?(0|F)/(0|r)|0:F,(0|s)>=(0|g))))for(U=F>>>0>255,Ce=F>>>8|0,l<<=8,w=0-F>>>8|0,mt=(0|F)<=0,r=s;mt?(T=(x=(x=(0|(m=(0|(m=e[101024+(f[j(r,6)+t|0]<<2)>>2]))<(0|w)?w:m))>=18?18:m)+(m=(0|(m=(0|(l=l+F|0))/256|0))>0?m:0)|0)>>>0>=254?254:x,m=m>>>0>=254?254:m):(m=j(r,6)+t|0,f[m+2|0]=U|c[m+2|0],m=(x=(0|(m=(0|l)/256|0))>0?m:0)>>>0>=254?254:x,T=(x=x+Ce|0)>>>0>=254?254:x,l=l+F|0),x=j(r,6)+t|0,f[x+5|0]=m,f[x+4|0]=T,(0|g)!=(0|(r=r+1|0)););if(2&c[188785]?(w=e[33271],e[33270]=w):w=e[33270],Ce=(U=c[3+(l=129360+(r=A<<4)|0)|0])-(m=c[l+2|0])<<8,mt=e[l+4>>2],(0|s)>0?(St=101056,Ze=5,x=(0|Ce)/(c[r+129368|0]-1|0)|0):(St=e[12+(r=r+129360|0)>>2],Ze=c[r+10|0],x=0),(0|g)<(0|w)){for(F=(0|s)<=0,Me=((r=Ce>>31)^Ce)-r|0,ee=129360+(A<<4)|0,m<<=8,xt=U<<8,U=0;;){t:{if(T=j(g,6)+t|0,!(!(1&F)&(0|(l=f[0|T]))<4)){s=0,r=g;s:if(1&((0|l)==5|F)){for(;(0|(x=f[j(r,6)+t|0]))<=6&&(s=((0|x)>3)+s|0,(0|w)!=(0|(r=r+1|0))););if(Ae=0,(0|(ut=(0|(r=c[ee+8|0]))>(0|s)?s:r))<2){x=0,U=m;break s}x=(0|Ce)/(ut-1|0)|0,U=m}else(0|ut)>0?U=x+U|0:(U=xt+(j(Me,f[Ae+St|0])>>6)|0,(0|Ze)>(0|(Ae=Ae+1|0))||(St=e[ee+12>>2],Ae=0));if(ut=ut-1|0,!((0|l)<4)){f[0|T]=6,s=(r=(0|(r=(0|U)/256|0))>0?r:0)+(((s=(l=e[mt+(l<<2)>>2])>>31)^l)-s|0)|0;break t}}(0|l)!=3?(r=(0|U)/256|0,(63&c[T-6|0])>>>0>=3?(s=(l=e[mt+(l<<2)>>2])>>31,s=(r=(0|(r=r-f[ee+9|0]|0))>0?r:0)+((s^l)-s|0)|0):s=(r=(0|r)>0?r:0)+(((s=(l=e[mt+(l<<2)>>2])>>31)^l)-s|0)|0):s=(r=(0|(r=(0|U)/256|0))>0?r:0)+(((s=(l=e[mt+12>>2])>>31)^l)-s|0)|0}if(f[T+5|0]=r>>>0>=254?254:r,F=0,r=(0|s)>0?s:0,f[T+4|0]=r>>>0>=254?254:r,f[T+2|0]=c[T+2|0]|l>>>31,(0|w)==(0|(g=g+1|0)))break}g=w}if(!(c[133068]||((268435455&A)==3&&(r=j(g,6)+t|0,f[r+2|0]=2|c[r+2|0]),e[33269]?(r=c[5+(l=100768+(A<<4)|0)|0],m=l+3|0,s=c[l+4|0]-r|0):(r=c[2+(s=100768+(A<<4)|0)|0],m=We+100768|0,s=c[s+1|0]-r|0),l=j(g,6)+t|0,f[l+5|0]=r>>>0>=254?254:r,f[l+2|0]=c[l+2|0]|s>>>31,r=(x=r)+(((r=s>>31)^s)-r|0)|0,f[l+4|0]=r>>>0>=254?254:r,s=j(w,6)+t|0,f[s+1|0]=c[0|m],r=g+1|0,c[0|s]==4&&(f[0|s]=6),(0|(s=n-r|0))<=0||(A=c[12+(g=100768+(A<<4)|0)|0],g=c[g+13|0]-A<<8,g=(0|s)!=1?(0|g)/(0|s)|0:g,(0|r)>=(0|n)))))for(x=g>>>0>255,F=g>>>8|0,s=A<<8,A=0-g>>>8|0,U=(0|g)<=0;U?(m=(w=(m=(0|(l=(0|A)>(0|(l=e[101024+(f[j(r,6)+t|0]<<2)>>2]))?A:l))>=18?18:l)+(l=(0|(l=(0|(s=s+g|0))/256|0))>0?l:0)|0)>>>0>=254?254:w,w=l>>>0>=254?254:l):(l=j(r,6)+t|0,f[l+2|0]=x|c[l+2|0],w=(l=(0|(l=(0|s)/256|0))>0?l:0)>>>0>=254?254:l,m=(l=l+F|0)>>>0>=254?254:l,s=s+g|0),l=j(r,6)+t|0,f[l+5|0]=w,f[l+4|0]=m,(0|n)!=(0|(r=r+1|0)););}else{if(r=(Ze=e[34455])+j(A,68)|0,g=c[r+24|0],w=c[r+25|0],l=(r=e[33268])+s|0,!((0|r)<=0||(T=w-g<<8,T=(0|r)!=1?(0|T)/(0|r)|0:T,(0|s)>=(0|l))))for(x=T>>>0>255,F=T>>>8|0,r=g<<8,w=0-T>>>8|0,U=(0|T)<=0;U?(g=(g=(Ce=(0|(g=(0|(g=e[101024+(f[j(s,6)+t|0]<<2)>>2]))<(0|w)?w:g))>=18?18:g)+(m=(0|(g=(0|(r=r+T|0))/256|0))>0?g:0)|0)>>>0>=254?254:g,m=m>>>0>=254?254:m):(g=j(s,6)+t|0,f[g+2|0]=x|c[g+2|0],m=(g=(0|(g=(0|r)/256|0))>0?g:0)>>>0>=254?254:g,g=(g=g+F|0)>>>0>=254?254:g,r=r+T|0),Ce=j(s,6)+t|0,f[Ce+5|0]=m,f[Ce+4|0]=g,(0|l)!=(0|(s=s+1|0)););2&c[188785]?(s=e[33271],e[33270]=s):s=e[33270],w=s,r=Ze+j(A,68)|0;t:if((0|(F=c[r+33|0]))!=255)for(;;){if((0|(w=w-1|0))<(0|l)){w=s;break t}if(!(f[j(w,6)+t|0]<4))break}if((0|s)>(0|l)){for(Ir=((g=(sr=(U=c[r+32|0])-(T=c[0|(m=r+31|0)])<<8)>>31)^sr)-g|0,xt=(0|(r=c[0|(x=r+30|0)]))==255,Ce=F<<8,mt=T<<8,jr=U<<8,We=Ze+j(A,68)|0,Ur=(0|r)!=255,U=0,F=0,r=1,T=0;;){t:{if(ee=j(l,6)+t|0,!(!(1&r)&(0|(Me=f[0|ee]))<4)){s:if(1&((0|Me)==5|r)){n:if(Ur){if(Rt=1,r=0,g=x,!((0|w)<=(0|(T=l+1|0)))){for(;;){if(g=x,(0|(F=f[j(T,6)+t|0]))>6)break n;if(r=((0|F)>3)+r|0,(0|w)==(0|(T=T+1|0)))break}g=x}}else{if(r=0,T=l,g=m,(0|w)<=(0|l))break n;for(;;){if(g=m,(0|(F=f[j(T,6)+t|0]))>6)break n;if(r=((0|F)>3)+r|0,(0|w)==(0|(T=T+1|0)))break}g=m}if(F=c[0|g]<<8,br=0,(0|(T=(0|r)<(0|(g=c[We+34|0]))?r:g))<2){St=0;break s}St=(0|sr)/(T-1|0)|0}else(0|l)!=(0|w)?Rt?(xt=1,T=T+1|0,Rt=0,F=mt):(0|T)>0?(F=F+St|0,Rt=0):(Rt=0,F=(j(f[16+(We+br|0)|0],Ir)>>6)+jr|0,br=(0|(r=br+1|0))<c[We+35|0]?r:0):(xt=2,F=Ce);if(T=T-1|0,!((0|Me)<4)){r=g=l+1|0;s:if(!((0|s)<=(0|l)))for(;;){if(f[j(r,6)+t|0]>1)break s;if(!((0|s)>=(0|(r=r+1|0))))break}f[0|ee]=6,f[ee+1|0]=c[We+26|0],U=0,Ae=c[We+27|0],l=(0|(l=(0|F)/256|0))>0?l:0,f[ee+5|0]=l>>>0>=254?254:l,l=l+Ae|0,f[ee+4|0]=l>>>0>=254?254:l,ut=r-g|0;break t}}if((0|Me)>=2){r=g=l+1|0;s:if(!((0|s)<=(0|l)))for(;;){if(f[j(r,6)+t|0]>1)break s;if(!((0|s)>=(0|(r=r+1|0))))break}U=0,l=(0|(l=(0|F)/256|0))>0?l:0,f[ee+5|0]=l>>>0>=254?254:l,Ae=e[100976+(Me<<2)>>2],f[ee+2|0]=c[ee+2|0]|Ae>>>31,l=(0|(l=(Me=l)+(((l=Ae>>31)^Ae)-l|0)|0))>0?l:0,f[ee+4|0]=l>>>0>=254?254:l,ut=r-g|0}else(0|ut)<=1?(Ae=f[36+(We+xt|0)|0],r=0):(Ae=f[36+(r=We+xt|0)|0],r=(f[r+39|0]-Ae|0)/(ut-1|0)|0),g=e[100976+(Me<<2)>>2],f[ee+2|0]=c[ee+2|0]|g>>>31,r=(0|(r=(((0|F)/256|0)+Ae|0)+j(r,U)|0))>0?r:0,f[ee+5|0]=r>>>0>=254?254:r,r=(0|(r=r+(((Me=g)^(g>>=31))-g|0)|0))>0?r:0,f[ee+4|0]=r>>>0>=254?254:r,U=U+1|0,g=l+1|0}if(r=0,(0|s)==(0|(l=g)))break}l=s}if(c[133068]||(g=j(l,6)+t|0,e[33269]?(m=Ze+j(A,68)|0,r=c[m+47|0],w=c[m+46|0]-r|0,m=m+45|0):(m=Ze+j(A,68)|0,r=c[m+44|0],w=c[m+43|0]-r|0,m=m+42|0),m=c[0|m],x=(((x=w>>31)^w)-x|0)+r|0,f[g+4|0]=x>>>0>=254?254:x,f[g+5|0]=r>>>0>=254?254:r,r=j(l,6)+t|0,f[r+2|0]=c[r+2|0]|w>>>31,s=j(s,6)+t|0,f[s+1|0]=m,r=l+1|0,c[0|s]==4&&(f[0|s]=6),(0|(s=n-r|0))<=0)||(g=Ze+j(A,68)|0,A=c[g+48|0],g=c[g+49|0]-A<<8,g=(0|s)!=1?(0|g)/(0|s)|0:g,(0|r)>=(0|n)))break e;for(x=g>>>0>255,F=g>>>8|0,s=A<<8,A=0-g>>>8|0,U=(0|g)<=0;U?(m=(w=(m=(0|(l=(0|A)>(0|(l=e[101024+(f[j(r,6)+t|0]<<2)>>2]))?A:l))>=18?18:l)+(l=(0|(l=(0|(s=s+g|0))/256|0))>0?l:0)|0)>>>0>=254?254:w,w=l>>>0>=254?254:l):(l=j(r,6)+t|0,f[l+2|0]=x|c[l+2|0],w=(l=(0|(l=(0|s)/256|0))>0?l:0)>>>0>=254?254:l,m=(l=l+F|0)>>>0>=254?254:l,s=s+g|0),l=j(r,6)+t|0,f[l+5|0]=w,f[l+4|0]=m,(0|n)!=(0|(r=r+1|0)););}}function Va(){var t,r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0;if((0|(t=e[36455]))!=(0|(w=e[36454]))){e:if(!((0|(ee=e[36427]))<0|(0|w)==(0|ee))){s=F=e[8+(216192+((T=ee)<<4)|0)>>2];t:{for(;;){if((n=e[(g=216192+((T=(0|(n=T-1|0))<0?169:n)<<4)|0)>>2])-5>>>0<2)break t;s:{if((0|n)<=4){if(e[g+12>>2]!=(0|s))break t;if(n=P[g+4>>1],e[g+12>>2]=F,s=e[g+8>>2],16&(r=P[s>>1]))break s;for(Ce=32&r?(j(n,12)>>>0)/10|0:n,A=0,n=s,m=0;;){r=P[s>>1];n:if(!(m>>>0<3&&8&r)){if(r=r<<16>>16,(0|(Ae=(x=I[2+((U=m<<1)+s|0)>>1])-(l=I[2+(U=F+U|0)>>1])|0))>(0|(x=(0|j(Ce,(0|j(e[200944+(m<<2)>>2],(0|Ae)>0?x+(l<<1)|0:(x<<1)+l|0))/3e3|0))/256|0)))A||((0|r)<0?n=s:(n=0,r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,(r=177888+(A=r<<6)|0)&&(n=P[s+4>>1]|P[s+6>>1]<<16,l=P[s>>1]|P[s+2>>1]<<16,I[r>>1]=l,I[r+2>>1]=l>>>16,I[r+4>>1]=n,I[r+6>>1]=n>>>16,n=P[s+60>>1]|P[s+62>>1]<<16,l=P[s+56>>1]|P[s+58>>1]<<16,I[r+56>>1]=l,I[r+58>>1]=l>>>16,I[r+60>>1]=n,I[r+62>>1]=n>>>16,n=P[s+52>>1]|P[s+54>>1]<<16,l=P[s+48>>1]|P[s+50>>1]<<16,I[r+48>>1]=l,I[r+50>>1]=l>>>16,I[r+52>>1]=n,I[r+54>>1]=n>>>16,n=P[s+44>>1]|P[s+46>>1]<<16,l=P[s+40>>1]|P[s+42>>1]<<16,I[r+40>>1]=l,I[r+42>>1]=l>>>16,I[r+44>>1]=n,I[r+46>>1]=n>>>16,n=P[s+36>>1]|P[s+38>>1]<<16,l=P[s+32>>1]|P[s+34>>1]<<16,I[r+32>>1]=l,I[r+34>>1]=l>>>16,I[r+36>>1]=n,I[r+38>>1]=n>>>16,n=P[s+28>>1]|P[s+30>>1]<<16,l=P[s+24>>1]|P[s+26>>1]<<16,I[r+24>>1]=l,I[r+26>>1]=l>>>16,I[r+28>>1]=n,I[r+30>>1]=n>>>16,n=P[s+20>>1]|P[s+22>>1]<<16,l=P[s+16>>1]|P[s+18>>1]<<16,I[r+16>>1]=l,I[r+18>>1]=l>>>16,I[r+20>>1]=n,I[r+22>>1]=n>>>16,n=P[s+12>>1]|P[s+14>>1]<<16,l=P[s+8>>1]|P[s+10>>1]<<16,I[r+8>>1]=l,I[r+10>>1]=l>>>16,I[r+12>>1]=n,I[r+14>>1]=n>>>16,f[A+177904|0]=0,I[r>>1]=32768|P[r>>1],n=r))),r=x+P[U+2>>1]|0;else{if((0-x|0)<=(0|Ae))break n;A||((0|r)<0?n=s:(n=0,r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,(r=177888+(A=r<<6)|0)&&(n=P[s+4>>1]|P[s+6>>1]<<16,l=P[s>>1]|P[s+2>>1]<<16,I[r>>1]=l,I[r+2>>1]=l>>>16,I[r+4>>1]=n,I[r+6>>1]=n>>>16,n=P[s+60>>1]|P[s+62>>1]<<16,l=P[s+56>>1]|P[s+58>>1]<<16,I[r+56>>1]=l,I[r+58>>1]=l>>>16,I[r+60>>1]=n,I[r+62>>1]=n>>>16,n=P[s+52>>1]|P[s+54>>1]<<16,l=P[s+48>>1]|P[s+50>>1]<<16,I[r+48>>1]=l,I[r+50>>1]=l>>>16,I[r+52>>1]=n,I[r+54>>1]=n>>>16,n=P[s+44>>1]|P[s+46>>1]<<16,l=P[s+40>>1]|P[s+42>>1]<<16,I[r+40>>1]=l,I[r+42>>1]=l>>>16,I[r+44>>1]=n,I[r+46>>1]=n>>>16,n=P[s+36>>1]|P[s+38>>1]<<16,l=P[s+32>>1]|P[s+34>>1]<<16,I[r+32>>1]=l,I[r+34>>1]=l>>>16,I[r+36>>1]=n,I[r+38>>1]=n>>>16,n=P[s+28>>1]|P[s+30>>1]<<16,l=P[s+24>>1]|P[s+26>>1]<<16,I[r+24>>1]=l,I[r+26>>1]=l>>>16,I[r+28>>1]=n,I[r+30>>1]=n>>>16,n=P[s+20>>1]|P[s+22>>1]<<16,l=P[s+16>>1]|P[s+18>>1]<<16,I[r+16>>1]=l,I[r+18>>1]=l>>>16,I[r+20>>1]=n,I[r+22>>1]=n>>>16,n=P[s+12>>1]|P[s+14>>1]<<16,l=P[s+8>>1]|P[s+10>>1]<<16,I[r+8>>1]=l,I[r+10>>1]=l>>>16,I[r+12>>1]=n,I[r+14>>1]=n>>>16,f[A+177904|0]=0,I[r>>1]=32768|P[r>>1],n=r))),r=P[U+2>>1]-x|0}A=1,I[2+((m<<1)+n|0)>>1]=r,e[g+8>>2]=n}if((0|(m=m+1|0))==6)break}F=n}if((0|w)!=(0|T))continue;break t}break}F=s}for(n=0;;){if((s=e[(T=216192+(ee<<4)|0)>>2])-5>>>0<2)break e;if((0|s)<=4){if(s=e[T+8>>2],r=P[T+4>>1],n){if((0|s)!=(0|n))break e;e[T+8>>2]=F}else F=s;if(16&(n=P[F>>1]))break e;for(U=32&n?(j(r,6)>>>0)/5|0:r,A=0,s=n=e[T+12>>2],m=0;;){t:{s:if((0|(w=(g=I[2+((r=m<<1)+n|0)>>1])-(r=I[2+(x=r+F|0)>>1])|0))>(0|(g=(0|j(U,(0|j(e[200944+(m<<2)>>2],(0|w)>0?g+(r<<1)|0:(g<<1)+r|0))/3e3|0))/256|0))){if(!A){if(I[n>>1]<0){s=n,r=r+g|0;break s}s=(0|(s=e[44469]+1|0))<=169?s:0,e[44469]=s,A=P[n+20>>1]|P[n+22>>1]<<16,r=16+(s=177888+(s<<6)|0)|0,w=P[n+16>>1]|P[n+18>>1]<<16,I[r>>1]=w,I[r+2>>1]=w>>>16,I[r+4>>1]=A,I[r+6>>1]=A>>>16,r=P[n+4>>1]|P[n+6>>1]<<16,A=P[n>>1]|P[n+2>>1]<<16,I[s>>1]=A,I[s+2>>1]=A>>>16,I[s+4>>1]=r,I[s+6>>1]=r>>>16,r=P[n+12>>1]|P[n+14>>1]<<16,A=P[n+8>>1]|P[n+10>>1]<<16,I[s+8>>1]=A,I[s+10>>1]=A>>>16,I[s+12>>1]=r,I[s+14>>1]=r>>>16,r=P[n+28>>1]|P[n+30>>1]<<16,A=P[n+24>>1]|P[n+26>>1]<<16,I[s+24>>1]=A,I[s+26>>1]=A>>>16,I[s+28>>1]=r,I[s+30>>1]=r>>>16,r=P[n+36>>1]|P[n+38>>1]<<16,A=P[n+32>>1]|P[n+34>>1]<<16,I[s+32>>1]=A,I[s+34>>1]=A>>>16,I[s+36>>1]=r,I[s+38>>1]=r>>>16,r=P[n+44>>1]|P[n+46>>1]<<16,A=P[n+40>>1]|P[n+42>>1]<<16,I[s+40>>1]=A,I[s+42>>1]=A>>>16,I[s+44>>1]=r,I[s+46>>1]=r>>>16,r=P[n+52>>1]|P[n+54>>1]<<16,A=P[n+48>>1]|P[n+50>>1]<<16,I[s+48>>1]=A,I[s+50>>1]=A>>>16,I[s+52>>1]=r,I[s+54>>1]=r>>>16,r=P[n+60>>1]|P[n+62>>1]<<16,A=P[n+56>>1]|P[n+58>>1]<<16,I[s+56>>1]=A,I[s+58>>1]=A>>>16,I[s+60>>1]=r,I[s+62>>1]=r>>>16,f[s+16|0]=0,I[s>>1]=32768|P[s>>1],r=P[x+2>>1]}r=r+g|0}else{if((0|w)>=(0-g|0))break t;A||(I[n>>1]<0?s=n:(s=(0|(s=e[44469]+1|0))<=169?s:0,e[44469]=s,A=P[n+20>>1]|P[n+22>>1]<<16,r=16+(s=177888+(s<<6)|0)|0,w=P[n+16>>1]|P[n+18>>1]<<16,I[r>>1]=w,I[r+2>>1]=w>>>16,I[r+4>>1]=A,I[r+6>>1]=A>>>16,r=P[n+4>>1]|P[n+6>>1]<<16,A=P[n>>1]|P[n+2>>1]<<16,I[s>>1]=A,I[s+2>>1]=A>>>16,I[s+4>>1]=r,I[s+6>>1]=r>>>16,r=P[n+12>>1]|P[n+14>>1]<<16,A=P[n+8>>1]|P[n+10>>1]<<16,I[s+8>>1]=A,I[s+10>>1]=A>>>16,I[s+12>>1]=r,I[s+14>>1]=r>>>16,r=P[n+28>>1]|P[n+30>>1]<<16,A=P[n+24>>1]|P[n+26>>1]<<16,I[s+24>>1]=A,I[s+26>>1]=A>>>16,I[s+28>>1]=r,I[s+30>>1]=r>>>16,r=P[n+36>>1]|P[n+38>>1]<<16,A=P[n+32>>1]|P[n+34>>1]<<16,I[s+32>>1]=A,I[s+34>>1]=A>>>16,I[s+36>>1]=r,I[s+38>>1]=r>>>16,r=P[n+44>>1]|P[n+46>>1]<<16,A=P[n+40>>1]|P[n+42>>1]<<16,I[s+40>>1]=A,I[s+42>>1]=A>>>16,I[s+44>>1]=r,I[s+46>>1]=r>>>16,r=P[n+52>>1]|P[n+54>>1]<<16,A=P[n+48>>1]|P[n+50>>1]<<16,I[s+48>>1]=A,I[s+50>>1]=A>>>16,I[s+52>>1]=r,I[s+54>>1]=r>>>16,r=P[n+60>>1]|P[n+62>>1]<<16,A=P[n+56>>1]|P[n+58>>1]<<16,I[s+56>>1]=A,I[s+58>>1]=A>>>16,I[s+60>>1]=r,I[s+62>>1]=r>>>16,f[s+16|0]=0,I[s>>1]=32768|P[s>>1],r=P[x+2>>1])),r=r-g|0}A=1,I[2+((m<<1)+s|0)>>1]=r,e[T+12>>2]=s}if((0|(m=m+1|0))==6)break}F=s}if((0|t)==(0|(ee=(0|(s=ee+1|0))<=169?s:0)))break}}e[36454]=t}}function Wa(t,r){var s,n,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0;oe=s=oe-48|0,N(+t),l=0|M(1),A=0|M(0),n=l;e:{t:{s:{if((w=2147483647&l)>>>0<=1074752122){if((1048575&l)==598523)break s;if(w>>>0<=1073928572){if((0|n)>0|(0|n)>=0){m=(t+=-1.5707963267341256)+-6077100506506192e-26,D[r>>3]=m,D[r+8>>3]=t-m-6077100506506192e-26,l=1;break e}m=(t+=1.5707963267341256)+6077100506506192e-26,D[r>>3]=m,D[r+8>>3]=t-m+6077100506506192e-26,l=-1;break e}if((0|n)>0|(0|n)>=0){m=(t+=-3.1415926534682512)+-12154201013012384e-26,D[r>>3]=m,D[r+8>>3]=t-m-12154201013012384e-26,l=2;break e}m=(t+=3.1415926534682512)+12154201013012384e-26,D[r>>3]=m,D[r+8>>3]=t-m+12154201013012384e-26,l=-2;break e}if(w>>>0<=1075594811){if(w>>>0<=1075183036){if((0|w)==1074977148)break s;if((0|n)>0|(0|n)>=0){m=(t+=-4.712388980202377)+-18231301519518578e-26,D[r>>3]=m,D[r+8>>3]=t-m-18231301519518578e-26,l=3;break e}m=(t+=4.712388980202377)+18231301519518578e-26,D[r>>3]=m,D[r+8>>3]=t-m+18231301519518578e-26,l=-3;break e}if((0|w)==1075388923)break s;if((0|n)>0|(0|n)>=0){m=(t+=-6.2831853069365025)+-2430840202602477e-25,D[r>>3]=m,D[r+8>>3]=t-m-2430840202602477e-25,l=4;break e}m=(t+=6.2831853069365025)+2430840202602477e-25,D[r>>3]=m,D[r+8>>3]=t-m+2430840202602477e-25,l=-4;break e}if(w>>>0>1094263290)break t}A=(mt=(m=t+-1.5707963267341256*(F=.6366197723675814*t+6755399441055744-6755399441055744))-(ee=6077100506506192e-26*F))<-.7853981633974483,l=ge(F)<2147483648?~~F:-2147483648,A?(l=l-1|0,ee=6077100506506192e-26*(F+=-1),m=t+-1.5707963267341256*F):mt>.7853981633974483&&(l=l+1|0,ee=6077100506506192e-26*(F+=1),m=t+-1.5707963267341256*F),t=m-ee,D[r>>3]=t,N(+t),A=0|M(1),M(0),((g=w>>>20|0)-(A>>>20&2047)|0)<17||(ee=m,t=(m-=t=6077100506303966e-26*F)-(ee=20222662487959506e-37*F-(ee-m-t)),D[r>>3]=t,N(+t),A=0|M(1),M(0),(g-(A>>>20&2047)|0)<50||(ee=m,t=(m-=t=20222662487111665e-37*F)-(ee=84784276603689e-45*F-(ee-m-t)),D[r>>3]=t)),D[r+8>>3]=m-t-ee;break e}if(w>>>0>=2146435072)t-=t,D[r>>3]=t,D[r+8>>3]=t,l=0;else{for(B(0,0|A),B(1,1048575&n|1096810496),t=+S(),l=0,A=1;g=(s+16|0)+(l<<3)|0,m=+(0|(l=ge(t)<2147483648?~~t:-2147483648)),D[g>>3]=m,t=16777216*(t-m),l=1,g=A,A=0,g;);for(D[s+32>>3]=t,l=2;l=(A=l)-1|0,D[(s+16|0)+(A<<3)>>3]==0;);if(xt=s+16|0,g=0,oe=T=oe-560|0,w=j(ut=(0|(w=((l=(w>>>20|0)-1046|0)-3|0)/24|0))>0?w:0,-24)+l|0,((Ae=e[28105])+(x=(We=A+1|0)-1|0)|0)>=0)for(l=Ae+We|0,A=ut-x|0;D[(T+320|0)+(g<<3)>>3]=(0|A)<0?0:+e[112432+(A<<2)>>2],A=A+1|0,(0|l)!=(0|(g=g+1|0)););for(Me=w-24|0,l=0,g=(0|Ae)>0?Ae:0,Ce=(0|We)<=0;;){if(Ce)t=0;else for(U=l+x|0,A=0,t=0;t=D[(A<<3)+xt>>3]*D[(T+320|0)+(U-A<<3)>>3]+t,(0|We)!=(0|(A=A+1|0)););if(D[(l<<3)+T>>3]=t,A=(0|l)==(0|g),l=l+1|0,A)break}br=47-w|0,St=48-w|0,Ir=w-25|0,l=Ae;t:{for(;;){if(t=D[(l<<3)+T>>3],A=0,g=l,!(U=(0|l)<=0))for(;Ce=(T+480|0)+(A<<2)|0,x=ge(m=5960464477539063e-23*t)<2147483648?~~m:-2147483648,x=ge(t=-16777216*(m=+(0|x))+t)<2147483648?~~t:-2147483648,e[Ce>>2]=x,t=D[((g=g-1|0)<<3)+T>>3]+m,(0|l)!=(0|(A=A+1|0)););t=po(t,Me),t+=-8*Ne(.125*t),t-=+(0|(Ce=ge(t)<2147483648?~~t:-2147483648));s:{n:{i:{if(Rt=(0|Me)<=0){if(Me)break i;x=e[476+((l<<2)+T|0)>>2]>>23}else Ze=g=(l<<2)+T|0,g=(x=e[g+476>>2])-((A=x>>St)<<St)|0,e[Ze+476>>2]=g,Ce=A+Ce|0,x=g>>br;if((0|x)<=0)break s;break n}if(x=2,!(t>=.5)){x=0;break s}}if(A=0,g=0,!U)for(;sr=e[(Ze=(T+480|0)+(A<<2)|0)>>2],U=16777215,g||(U=16777216,sr)?(e[Ze>>2]=U-sr,g=1):g=0,(0|l)!=(0|(A=A+1|0)););n:if(!Rt){A=8388607;i:switch(0|Ir){case 1:A=4194303;break;case 0:break i;default:break n}e[476+(U=(l<<2)+T|0)>>2]=e[U+476>>2]&A}Ce=Ce+1|0,(0|x)==2&&(t=1-t,x=2,g&&(t-=po(1,Me)))}if(t!=0)break;if(g=0,!((0|Ae)>=(0|(A=l)))){for(;g=e[(T+480|0)+((A=A-1|0)<<2)>>2]|g,(0|A)>(0|Ae););if(g){for(w=Me;w=w-24|0,!e[(T+480|0)+((l=l-1|0)<<2)>>2];);break t}}for(A=1;g=A,A=A+1|0,!e[(T+480|0)+(Ae-g<<2)>>2];);for(g=l+g|0;;){if(x=l+We|0,l=l+1|0,D[(T+320|0)+(x<<3)>>3]=e[112432+(ut+l<<2)>>2],A=0,t=0,(0|We)>0)for(;t=D[(A<<3)+xt>>3]*D[(T+320|0)+(x-A<<3)>>3]+t,(0|We)!=(0|(A=A+1|0)););if(D[(l<<3)+T>>3]=t,!((0|l)<(0|g)))break}l=g}(t=po(t,24-w|0))>=16777216?(Me=(T+480|0)+(l<<2)|0,A=ge(m=5960464477539063e-23*t)<2147483648?~~m:-2147483648,g=ge(t=-16777216*+(0|A)+t)<2147483648?~~t:-2147483648,e[Me>>2]=g,l=l+1|0):(A=ge(t)<2147483648?~~t:-2147483648,w=Me),e[(T+480|0)+(l<<2)>>2]=A}if(t=po(1,w),!((0|l)<0)){for(A=l;g=A,D[(A<<3)+T>>3]=t*+e[(T+480|0)+(A<<2)>>2],A=A-1|0,t*=5960464477539063e-23,g;);if(U=0,!((0|l)<0))for(w=(0|Ae)>0?Ae:0,g=l;;){for(Me=w>>>0<U>>>0?w:U,Ae=l-g|0,A=0,t=0;t=D[115200+(A<<3)>>3]*D[(A+g<<3)+T>>3]+t,We=(0|A)!=(0|Me),A=A+1|0,We;);if(D[(T+160|0)+(Ae<<3)>>3]=t,g=g-1|0,A=(0|l)!=(0|U),U=U+1|0,!A)break}}if(t=0,(0|l)>=0)for(A=l;g=A,A=A-1|0,t+=D[(T+160|0)+(g<<3)>>3],g;);if(D[s>>3]=x?-t:t,t=D[T+160>>3]-t,A=1,(0|l)>0)for(;t+=D[(T+160|0)+(A<<3)>>3],g=(0|A)!=(0|l),A=A+1|0,g;);D[s+8>>3]=x?-t:t,oe=T+560|0,l=7&Ce,t=D[s>>3],(0|n)<0?(D[r>>3]=-t,D[r+8>>3]=-D[s+8>>3],l=0-l|0):(D[r>>3]=t,D[r+8>>3]=D[s+8>>3])}}return oe=s+48|0,l}function Pr(){var t=0,r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0,Ds=0,ea=0,da=0,ma=0,Ia=0,Na=0,La=0,Ja=0,an=0,In=0,z=0,K=0,re=0,me=0,_e=0,at=0;e[55925]=0,t=e[56772],e[56772]=t+1,s=e[55961],U=e[55922],Ae=Eo(39.89822670059037*(r=+(0|t))),T=Eo(22.30530784048753*r),r=+(0|U)/50*(+(0|s)/100)*(Eo(14.765485471872028*r)+(Ae+T))*10,t=ge(r)<2147483648?~~r:-2147483648,e[56607]=t+e[56607];e:if(!(e[55923]<=0)){for(;;){for(s=ds(e[33209],0,1103515245,0),t=H,t=EA(s=s+12345|0,t=s>>>0<12345?t+1|0:t),e[33209]=t,t=8191+((t>>>0)%16383|0)|0,e[55929]=t,As=+(0|t),r=.75*D[28387]+As,D[28387]=r,Ds=(0|(t=e[55924]))>(0|(St=e[55928]))?.5*r:r,Ia=(A=.033*+e[56652])>0?1-A:1,s=e[56650]<<2,br=(0|(sr=e[55921]))==1&&(0|s)>263?263:s,Na=111136+((ea=e[56651])<<1)|0,La=111136+((Ir=e[56658])<<1)|0,Ja=(0|Ir)>0,da=e[55918],an=j(da,40),In=e[55925],z=D[27967],ma=e[56607],r=D[27979],Me=D[27969],m=D[27970],jr=e[56780],ut=e[56654],F=D[27976],ee=D[27972],We=D[28388],Ze=D[28389],U=e[55927],n=D[28383],x=e[55926],mt=e[55956],K=D[27975],T=D[28131],l=D[28130],g=D[28123],Ce=D[28121],w=D[28122],Rt=D[28120],xt=D[28119],re=D[28129],me=D[28128],_e=D[28127],at=$n(0*D[27968]),Ur=0;;){Ae=l;t:{s:switch(sr-1|0){case 0:We=0,l=Ce*g,g=w,w=n=l+(xt*(We=(0|t)<=2?D[111312+(t<<3)>>3]:We)+Rt*g);break t;case 1:if(n=0,(0|t)>=(0|U)){Ze=0;break t}l=D[27965]-D[27966],D[27965]=l,n=.028*(Ze=l+Ze);break t;case 2:if(!x){mt=100,n=0;break t}mt=100,s=ge(l=+(0|t)/+(0|x)*100)<2147483648?~~l:-2147483648,n=+I[110928+((0|s)%100<<1)>>1],n=r*((+I[110928+((s+1|0)%100<<1)>>1]-n)*(l-+(0|s))+n);break t;case 3:break s;default:break t}x?(mt=256,s=ge(l=+(0|t)/+(0|x)*256)<2147483648?~~l:-2147483648,n=+I[111344+((0|s)%256<<1)>>1],n=r*((+I[111344+((s+1|0)%256<<1)>>1]-n)*(l-+(0|s))+n)):(mt=256,n=0)}if((0|t)>=(0|x)&&((0|ma)>0?(t=(0|an)/(0|ma)|0,F=0,ee=0,ee=Ir>>>0<=87?.001*+I[La>>1]:ee,F=ea>>>0<=87?.001*+I[Na>>1]*.1:F,St=t>>Ja,U=(0|(s=(x=(t-1|0)<=(0|br))?t-2|0:br))<=40?40:s,l=+I[111776+((U=x||(0|s)<40?U:br)<<1)>>1],D[27966]=l,Ce=l,l=+(0|U),D[27965]=Ce*l*.333,ut=(0|(s=t-U|0))>(0|ut)?ut:s,jr=0-(s=(0|jr)<0?0-ut|0:ut)|0,xt=(l*=.00833)*l,xt*=1-(Rt=(Ce=(l=Cs(z*+((0|da)/(0|U)|0)))*at)+Ce)-(Ce=l*-l),t=(0|(x=t+s|0))!=4):(e[55930]=0,e[55931]=0,e[55932]=0,e[55933]=0,St=4,F=0,ee=0,x=4,t=0),m=(t|=!In)?A:m,Me=t?Ia:Me,t=0),t=t+1|0,l=n=re*T+(_e*n+me*Ae),T=Ae,(0|(Ur=Ur+1|0))==4)break}if(e[55926]=x,e[55956]=mt,e[55924]=t,D[28383]=n,e[55927]=U,D[28389]=Ze,D[28388]=We,D[27972]=ee,D[27976]=F,e[55928]=St,e[56654]=ut,e[56780]=jr,D[27970]=m,D[27969]=Me,D[28122]=w,D[28120]=Rt,D[28119]=xt,D[28123]=g,D[28121]=Ce,D[28131]=T,D[28130]=n,(0|sr)==5&&(n=6e3*((r=+(0|t)/+(0|x))+r+-1),D[28383]=n),r=n*Me+D[28384]*m,D[28383]=r,D[28384]=r,(0|t)<(0|U)&&(r=F*As+r,D[28383]=r),m=Ds*D[27974],Ae=r*D[27973]+m,T=0,e[55916]!=2&&(T=D[27987],w=D[27986],D[27987]=w,r=m+r*ee,D[27986]=r,m=D[28059],g=D[28058],D[28059]=g,r=m*D[28057]+(D[28055]*(T*D[27985]+(D[27983]*r+w*D[27984]))+g*D[28056]),D[28058]=r,T=D[28049],m=D[28051],w=D[28048],g=D[28047],A=D[28050],D[28051]=A,r=T*m+(g*r+w*A),D[28050]=r,T=D[28043],m=D[28041],w=D[28040],g=D[28039],A=D[28042],D[28043]=A,r=m*T+(g*r+w*A),D[28042]=r,T=D[28035],m=D[28033],w=D[28032],g=D[28031],A=D[28034],D[28035]=A,r=m*T+(g*r+w*A),D[28034]=r,T=D[28027],m=D[28025],w=D[28024],g=D[28023],A=D[28026],D[28027]=A,r=m*T+(g*r+w*A),D[28026]=r,T=D[28019],m=D[28017],w=D[28016],g=D[28015],A=D[28018],D[28019]=A,r=m*T+(g*r+w*A),D[28018]=r,T=D[28011],m=D[28009],w=D[28008],g=D[28007],A=D[28010],D[28011]=A,r=m*T+(g*r+w*A),D[28010]=r,T=D[28003],m=D[28001],w=D[28e3],g=D[27999],A=D[28002],D[28003]=A,r=m*T+(g*r+w*A),D[28002]=r,T=D[27995],m=D[27993],w=D[27992],g=D[27991],A=D[27994],D[27995]=A,T=m*T+(g*r+w*A),D[27994]=T),r=D[28385],D[28385]=Ae,m=D[28075],w=D[28074],D[28075]=w,g=D[28067],A=D[28066],D[28067]=A,m=m*D[28073]+(D[28071]*Ae+w*D[28072]),D[28074]=m,w=g*D[28065]+(D[28063]*Ae+A*D[28064]),D[28066]=w,g=D[28081],A=D[28083],l=D[28079],n=D[28080],F=D[28082],D[28083]=F,Ae=g*A+(l*(r=K*Ds+Ae-r)+n*F),D[28082]=Ae,g=D[28091],A=D[28089],l=D[28087],n=D[28088],F=D[28090],D[28091]=F,g=A*g+(l*r+n*F),D[28090]=g,A=D[28099],l=D[28097],n=D[28095],F=D[28096],ee=D[28098],D[28099]=ee,A=l*A+(n*r+F*ee),D[28098]=A,l=D[28107],n=D[28105],F=D[28103],ee=D[28104],Me=D[28106],D[28107]=Me,l=n*l+(F*r+ee*Me),D[28106]=l,n=D[28115],F=D[28113],ee=D[28111],Me=D[28112],We=D[28114],D[28115]=We,n=F*n+(ee*r+Me*We),D[28114]=n,F=D[28139],ee=D[28137],Me=D[28136],We=D[28135],Ze=D[27971],Ce=D[28138],D[28139]=Ce,r=ee*F+(We*(r*Ze-(n-(l-(A-(g-(Ae-(T+m+w)))))))+Me*Ce),D[28138]=r,r=D[27977]*(r*+e[50779]),n=+(0|(t=ge(r)<2147483648?~~r:-2147483648)),(0|(t=e[50776]))<e[50773]&&(x=t+1|0,s=e[50772],(U=e[50774])?(e[50776]=x,t=j(U,f[t+s|0])):(U=c[t+s|0],s=f[s+x|0],e[50776]=t+2,t=U|s<<8),n+=+((0|j(e[50775],(0|j(t,e[50780]))/1024|0))/40|0)),(0|(t=e[55962]))<=63&&(e[55962]=t+1,n=n*+(0|t)*.015625),(0|(t=e[55963]))<=0||(t=t-1|0,e[55963]=t,n=n*+(0|t)*.015625,t||(e[55962]=0)),s=(t=e[51293])+1|0,e[51293]=s,x=j(I[205184+(t<<1)>>1],e[50755])>>8,t=ge(n)<2147483648?~~n:-2147483648,(0|s)>=5500&&(e[51293]=0),s=e[51290],e[51290]=s+1,t=(0|(t=(0|(t=t+x|0))<=-32768?-32768:t))>=32767?32767:t,f[0|s]=t,s=e[51290],e[51290]=s+1,f[0|s]=t>>>8,x=(s=e[51292])+1|0,e[51292]=x,I[205184+(s<<1)>>1]=t,(0|x)>=5500&&(e[51292]=0),x=1,e[56606]=e[56606]+1,J[54046]<e[51290]+2>>>0)break e;if(t=e[55925]+1|0,e[55925]=t,!((0|t)<e[55923]))break}x=0}return x}function Sr(t,r,s,n,A,l,g){var m,w,T,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0;oe=m=oe-80|0,e[m+76>>2]=r,T=m+55|0,w=m+56|0;e:{t:{s:{n:{i:for(;;){if(U=r,(2147483647^We)<(0|x))break n;We=x+We|0;c:{A:{d:{if(F=c[0|(x=U)])for(;;){l:{o:if(r=255&F){if((0|r)!=37)break l;for(F=x;;){if(c[F+1|0]!=37){r=F;break o}if(x=x+1|0,Ae=c[F+2|0],F=r=F+2|0,(0|Ae)!=37)break}}else r=x;if((0|(x=x-U|0))>(0|(sr=2147483647^We)))break n;if(t&&sn(t,U,x),x)continue i;e[m+76>>2]=r,x=r+1|0,Ze=-1,c[r+2|0]!=36|f[r+1|0]-48>>>0>=10||(Ze=f[r+1|0]-48|0,xt=1,x=r+3|0),e[m+76>>2]=x,Ce=0;o:if((r=(F=f[0|x])-32|0)>>>0>31)Me=x;else if(Me=x,75913&(r=1<<r))for(;;){if(Me=x+1|0,e[m+76>>2]=Me,Ce|=r,(r=(F=f[x+1|0])-32|0)>>>0>=32)break o;if(x=Me,!(75913&(r=1<<r)))break}o:if((0|F)!=42){if((0|(ut=fA(m+76|0)))<0)break n;F=e[m+76>>2]}else{if(c[Me+2|0]!=36|f[Me+1|0]-48>>>0>=10){if(xt)break d;if(F=Me+1|0,!t){e[m+76>>2]=F,xt=0,ut=0;break o}r=e[s>>2],e[s>>2]=r+4,xt=0,r=e[r>>2]}else e[((f[Me+1|0]<<2)+A|0)-192>>2]=10,F=Me+3|0,xt=1,r=e[((f[Me+1|0]<<3)+n|0)-384>>2];if(e[m+76>>2]=F,ut=r,(0|r)>=0)break o;ut=0-ut|0,Ce|=8192}if(x=0,ee=-1,c[0|F]==46)if(c[F+1|0]!=42)e[m+76>>2]=F+1,ee=fA(m+76|0),r=e[m+76>>2],Rt=1;else{if(c[F+3|0]!=36|f[F+2|0]-48>>>0>=10){if(xt)break d;r=F+2|0,ee=0,t&&(F=e[s>>2],e[s>>2]=F+4,ee=e[F>>2])}else e[((f[F+2|0]<<2)+A|0)-192>>2]=10,r=F+4|0,ee=e[((f[F+2|0]<<3)+n|0)-384>>2];e[m+76>>2]=r,Rt=~ee>>>31|0}else r=F,Rt=0;for(;;){if(mt=x,Me=28,Ae=r,(x=f[0|r])-123>>>0<4294967238)break s;if(r=Ae+1|0,!((x=c[123983+(x+j(mt,58)|0)|0])-1>>>0<8))break}e[m+76>>2]=r;o:{p:{if((0|x)!=27){if(!x)break s;if((0|Ze)>=0){e[(Ze<<2)+A>>2]=x,x=e[4+(F=(Ze<<3)+n|0)>>2],e[m+64>>2]=e[F>>2],e[m+68>>2]=x;break p}if(!t)break c;Ht(m- -64|0,x,s,g);break o}if((0|Ze)>=0)break s}if(x=0,!t)continue i}F=-65537&Ce,Ce=8192&Ce?F:Ce,Ze=0,St=84065,Me=w;o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{W:{E:{_:{T:{switch(x=f[0|Ae],(x=mt&&(15&x)==3?-33&x:x)-88|0){case 11:break o;case 9:case 13:case 14:case 15:break p;case 27:break M;case 12:case 17:break N;case 23:break V;case 0:case 32:break W;case 24:break E;case 22:break _;case 29:break T;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 25:case 26:case 28:case 30:case 31:break A}switch(x-65|0){case 0:case 4:case 5:case 6:break p;case 2:break C;case 1:case 3:break A}if((0|x)==83)break h;break A}F=e[m+64>>2],Ae=e[m+68>>2],St=84065;break x}x=0;_:switch(255&mt){case 0:case 1:case 6:e[e[m+64>>2]>>2]=We;continue i;case 2:U=e[m+64>>2],e[U>>2]=We,e[U+4>>2]=We>>31;continue i;case 3:I[e[m+64>>2]>>1]=We;continue i;case 4:f[e[m+64>>2]]=We;continue i;case 7:break _;default:continue i}U=e[m+64>>2],e[U>>2]=We,e[U+4>>2]=We>>31;continue i}ee=ee>>>0<=8?8:ee,Ce|=8,x=120}if(U=w,br=32&x,(F=e[m+64>>2])|(Ae=e[m+68>>2]))for(;f[0|(U=U-1|0)]=br|c[124512+(15&F)|0],Ir=!Ae&F>>>0>15|!!(0|Ae),mt=Ae,Ae=Ae>>>4|0,F=(15&mt)<<28|F>>>4,Ir;);if(!(e[m+64>>2]|e[m+68>>2])|!(8&Ce))break I;St=84065+(x>>>4|0)|0,Ze=2;break I}if(x=w,Ae=U=e[m+68>>2],U|(F=e[m+64>>2]))for(;f[0|(x=x-1|0)]=7&F|48,mt=!Ae&F>>>0>7|!!(0|Ae),Ae=(U=Ae)>>>3|0,F=(7&U)<<29|F>>>3,mt;);if(U=x,!(8&Ce))break I;ee=(0|(x=w-U|0))<(0|ee)?ee:x+1|0;break I}F=e[m+64>>2],Ae=x=e[m+68>>2],(0|x)<0?(Ae=U=0-(Ae+!!(0|F)|0)|0,F=0-F|0,e[m+64>>2]=F,e[m+68>>2]=U,Ze=1,St=84065):2048&Ce?(Ze=1,St=84066):St=(Ze=1&Ce)?84067:84065}U=Yi(F,Ae,w)}if((0|ee)<0&&Rt)break n;if(Ce=Rt?-65537&Ce:Ce,!(ee|!!((x=e[m+64>>2])|(F=e[m+68>>2])))){U=w,ee=0;break A}ee=(0|(x=!(x|F)+(w-U|0)|0))<(0|ee)?ee:x;break A}if(Me=(x=(x=hi(U=(x=e[m+64>>2])||84639,0,Ae=ee>>>0>=2147483647?2147483647:ee))?x-U|0:Ae)+U|0,(0|ee)>=0){Ce=F,ee=x;break A}if(Ce=F,ee=x,c[0|Me])break n;break A}if(ee){F=e[m+64>>2];break m}x=0,xn(t,32,ut,0,Ce);break b}e[m+12>>2]=0,e[m+8>>2]=e[m+64>>2],F=m+8|0,e[m+64>>2]=F,ee=-1}x=0;m:{for(;;){if(!(U=e[F>>2]))break m;if(!((U=(0|(Ae=RA(m+4|0,U)))<0)|Ae>>>0>ee-x>>>0)){if(F=F+4|0,ee>>>0>(x=x+Ae|0)>>>0)continue;break m}break}if(U)break t}if(Me=61,(0|x)<0)break s;if(xn(t,32,ut,x,Ce),x)for(Me=0,F=e[m+64>>2];;){if(!(U=e[F>>2])||(Me=(U=RA(m+4|0,U))+Me|0)>>>0>x>>>0)break b;if(sn(t,m+4|0,U),F=F+4|0,!(x>>>0>Me>>>0))break}else x=0}xn(t,32,ut,x,8192^Ce),x=(0|x)<(0|ut)?ut:x;continue i}if((0|ee)<0&&Rt)break n;if(Me=61,(0|(x=0|rs[0|l](t,D[m+64>>3],ut,ee,Ce,x)))>=0)continue i;break s}f[m+55|0]=e[m+64>>2],ee=1,U=T,Ce=F;break A}F=c[x+1|0],x=x+1|0}if(t)break e;if(!xt)break c;for(x=1;;){if(t=e[(x<<2)+A>>2]){if(Ht((x<<3)+n|0,t,s,g),We=1,(0|(x=x+1|0))!=10)continue;break e}break}if(We=1,x>>>0>=10)break e;for(;;){if(e[(x<<2)+A>>2])break d;if((0|(x=x+1|0))==10)break}break e}Me=28;break s}if((0|(F=(0|ee)>(0|(Ae=Me-U|0))?ee:Ae))>(2147483647^Ze))break n;if(Me=61,(0|sr)<(0|(x=(0|(ee=F+Ze|0))<(0|ut)?ut:ee)))break s;xn(t,32,x,ee,Ce),sn(t,St,Ze),xn(t,48,x,ee,65536^Ce),xn(t,48,F,Ae,0),sn(t,U,Ae),xn(t,32,x,ee,8192^Ce);continue}break}We=0;break e}Me=61}e[56798]=Me}We=-1}return oe=m+80|0,We}function Kt(t,r,s,n,A,l,g,m,w){var T,x,F,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0,Ds=0,ea=0,da=0,ma=0,Ia=0,Na=0,La=0,Ja=0,an=0,In=0,z=0,K=0,re=0;oe=T=oe-96|0,St=65535&w,Me=-2147483648&(A^w),jr=Ze=65535&A;e:{if(!((x=w>>>16&32767)-32767>>>0>4294934529&(F=A>>>16&32767)-32767>>>0>=4294934530)){if(U=n,!(!n&(0|(ut=mt=2147483647&A))==2147418112?!(r|s):ut>>>0<2147418112)){Ae=n,Me=32768|A;break e}if(!(!(A=m)&(0|(We=mt=2147483647&w))==2147418112?!(l|g):We>>>0<2147418112)){Ae=m,Me=32768|w,r=l,s=g;break e}if(!(r|U|2147418112^ut|s)){if(!(A|l|g|We)){Me=2147450880,r=0,s=0;break e}Me|=2147418112,r=0,s=0;break e}if(!(A|l|2147418112^We|g)){if(A=r|U,n=s|ut,r=0,s=0,!(n|A)){Me=2147450880;break e}Me|=2147418112;break e}if(!(r|U|s|ut)){r=0,s=0;break e}if(!(A|l|g|We)){r=0,s=0;break e}(0|ut)==65535|ut>>>0<65535&&(mt=(U=!(n|Ze))<<6,A=ke(w=U?r:n)+32|0,la(T+80|0,r,s,n,Ze,(w=mt+((0|(w=ke(U?s:Ze)))==32?A:w)|0)-15|0),xt=16-w|0,n=e[T+88>>2],jr=e[T+92>>2],s=e[T+84>>2],r=e[T+80>>2]),We>>>0>65535||(Ze=(w=!(m|St))<<6,U=ke(A=w?l:m)+32|0,la(T- -64|0,l,g,m,St,(A=Ze+((0|(A=ke(w?g:St)))==32?U:A)|0)-15|0),xt=16+(xt-A|0)|0,m=e[T+72>>2],St=e[T+76>>2],l=e[T+64>>2],g=e[T+68>>2])}if(A=l,l=g<<15|l>>>17,Ja=s,mt=ds(Rt=-32768&(w=A<<15),A=0,s,0),Ir=A=H,an=l,ut=r,r=ds(l,0,r,0),l=H+A|0,s=r>>>0>(w=r+mt|0)>>>0?l+1|0:l,U=0,r=ds(ut,ee,Rt,ee),A=(l=w)+H|0,Ze=A=r>>>0>(We=U+r|0)>>>0?A+1|0:A,In=(0|l)==(0|A)&U>>>0>We>>>0|A>>>0<l>>>0,z=n,sr=ds(Rt,ee,n,0),K=H,r=ds(Ja,ee,an,ee),U=H+K|0,U=r>>>0>(br=r+sr|0)>>>0?U+1|0:U,r=St<<15|m>>>17,n=ds(Ur=m<<15|g>>>17,0,ut,ee),l=H+U|0,Ds=l=n>>>0>(As=n+br|0)>>>0?l+1|0:l,l=(n=(0|s)==(0|Ir)&w>>>0<mt>>>0|s>>>0<Ir>>>0)+l|0,St=l=s>>>0>(ea=s+As|0)>>>0?l+1|0:l,g=ea,s=l,jr=ds(Rt,ee,da=65536|jr,Ce),re=H,n=ds(z,Ae,an,ee),A=H+re|0,w=A=n>>>0>(ma=n+jr|0)>>>0?A+1|0:A,r=ds(Ia=-2147483648|r,0,ut,ee),l=H+A|0,l=r>>>0>(Na=r+ma|0)>>>0?l+1|0:l,r=ds(Ur,Ae,Ja,ee),La=l,l=l+H|0,mt=r>>>0>(Ir=r+Na|0)>>>0?l+1|0:l,A=s+Ir|0,l=Rt=(r=0)>>>0>(ut=r+g|0)>>>0?A+1|0:A,s=(r=ut+In|0)>>>0<ut>>>0?l+1|0:l,xt=((F+x|0)+xt|0)-16383|0,n=ds(Ia,Ae,Ja,ee),m=H,A=ds(da,Ae,an,ee),l=H+m|0,Ce=(0|m)==(0|(l=A>>>0>(g=A+n|0)>>>0?l+1|0:l))&n>>>0>g>>>0|l>>>0<m>>>0,m=l,A=ds(Ur,Ae,z,Ae),l=H+l|0,A=l=(n=A+g|0)>>>0<A>>>0?l+1|0:l,g=(0|l)==(0|m)&n>>>0<g>>>0|l>>>0<m>>>0,l=0,l=(m=g)>>>0>(g=g+Ce|0)>>>0?1:l,m=g,g=ds(Ia,Ae,da,Ae),l=H+l|0,In=m=m+g|0,g=g>>>0>m>>>0?l+1|0:l,m=n,ee=A,A=(0|U)==(0|K)&sr>>>0>br>>>0|U>>>0<K>>>0,l=0,A=((Ce=U=(0|U)==(0|Ds)&br>>>0>As>>>0|U>>>0>Ds>>>0)>>>0>(U=A+U|0)>>>0?1:l)+ee|0,l=g,Ce=A=(n=n+U|0)>>>0<U>>>0?A+1|0:A,sr=n,A=n=(0|A)==(0|ee)&n>>>0<m>>>0|A>>>0<ee>>>0,U=n=n+In|0,g=l=A>>>0>n>>>0?l+1|0:l,A=ds(Ur,Ae,da,Ae),ee=H,n=ds(Ia,Ae,z,Ae),l=H+ee|0,n=l=n>>>0>(m=n+A|0)>>>0?l+1|0:l,A=(l=(0|ee)==(0|l)&A>>>0>m>>>0|l>>>0<ee>>>0)+g|0,g=A=n>>>0>(br=n+U|0)>>>0?A+1|0:A,l=m+Ce|0,A=l=(n=(A=0)+sr|0)>>>0<A>>>0?l+1|0:l,m=(0|Ce)==(0|l)&n>>>0<sr>>>0|l>>>0<Ce>>>0,l=g,l=(g=m+(ee=br)|0)>>>0<m>>>0?l+1|0:l,sr=g,m=n,U=A,A=(n=(n=(n=(0|w)==(0|re)&jr>>>0>ma>>>0|w>>>0<re>>>0)+(w=(0|w)==(0|La)&ma>>>0>Na>>>0|w>>>0>La>>>0)|0)+(A=(0|mt)==(0|La)&Ir>>>0<Na>>>0|mt>>>0<La>>>0)|0)+U|0,l=g=l,U=g=(m=(0|(A=(n=w=(Ce=mt)+m|0)>>>0<Ce>>>0?A+1|0:A))==(0|U)&m>>>0>n>>>0|A>>>0<U>>>0)+sr|0,g=l=m>>>0>g>>>0?l+1|0:l,m=n,l=0,w=A,A=A+((ee=Ce=(0|St)==(0|Rt)&ut>>>0<ea>>>0|St>>>0>Rt>>>0)>>>0>(Ce=Ce+((0|St)==(0|Ds)&As>>>0>ea>>>0|St>>>0<Ds>>>0)|0)>>>0?1:l)|0,l=g,w=l=(g=m=(0|(A=(n=n+Ce|0)>>>0<Ce>>>0?A+1|0:A))==(0|w)&n>>>0<m>>>0|A>>>0<w>>>0)>>>0>(m=m+U|0)>>>0?l+1|0:l,65536&l?xt=xt+1|0:(U=Ze>>>31|0,l=w<<1|m>>>31,m=m<<1|A>>>31,w=l,l=A<<1|n>>>31,n=n<<1|s>>>31,A=l,l=Ze<<1|We>>>31,We<<=1,Ze=l,l=s<<1|r>>>31,r=r<<1|U,s=l|(g=0)),(0|xt)>=32767)Me|=2147418112,r=0,s=0;else{t:{if((0|xt)<=0){if((g=1-xt|0)>>>0<=127){la(T+48|0,We,Ze,r,s,l=xt+127|0),la(T+32|0,n,A,m,w,l),Ma(T+16|0,We,Ze,r,s,g),Ma(T,n,A,m,w,g),We=e[T+32>>2]|e[T+16>>2]|!!(e[T+48>>2]|e[T+56>>2]|e[T+52>>2]|e[T+60>>2]),Ze=e[T+36>>2]|e[T+20>>2],r=e[T+40>>2]|e[T+24>>2],s=e[T+44>>2]|e[T+28>>2],n=e[T>>2],A=e[T+4>>2],g=e[T+8>>2],l=e[T+12>>2];break t}r=0,s=0;break e}g=m,l=65535&w|xt<<16}Ae|=g,Me|=l,(!r&(0|s)==-2147483648?!(We|Ze):(0|s)>0|(0|s)>=0)?r|We|-2147483648^s|Ze?(r=n,s=A):(U=Me,Me=(n=(0|(l=A))==(0|(s=(s=r=1&n)>>>0>(r=r+n|0)>>>0?l+1|0:l))&r>>>0<n>>>0|s>>>0<l>>>0)>>>0>(Ae=n+Ae|0)>>>0?U+1|0:U):(n=(0|A)==(0|(s=(r=n+1|0)?A:A+1|0))&r>>>0<n>>>0|s>>>0<A>>>0,A=Me,Me=(Ae=n+Ae|0)>>>0<n>>>0?A+1|0:A)}}e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=Ae,e[t+12>>2]=Me,oe=T+96|0}function Bs(t,r,s,n,A,l,g){var m,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0;oe=m=oe-480|0,e[m+476>>2]=0,e[m+456>>2]=0,e[m+460>>2]=0,e[m+448>>2]=0,e[m+452>>2]=0,e[m+440>>2]=0,e[m+444>>2]=0,e[m+432>>2]=0,e[m+436>>2]=0,w=0;e:if(e[t+684>>2]){for(Ae=g?e[g>>2]:Ae;x=c[r+w|0],f[(m+112|0)+w|0]=x,T=w+1|0,x&&(x=w>>>0<158,w=T,x););if(f[T+(m+112|0)|0]=0,!((We=268435456&l)|!(8&e[47197]))){T=0;t:if(223&(x=c[0|r]))for(w=0;;){if(f[(m+272|0)+w|0]=x,!(223&(x=c[(T=w+1|0)+r|0])))break t;if(F=w>>>0<118,w=T,!F)break}f[(w=m+272|0)+T|0]=0,e[m+48>>2]=w,wa(e[47195],(0|l)>=0?87019:86877,m+48|0)}e[m+464>>2]=r,e[t+8208>>2]=0,e[t+8212>>2]=0,A&&(f[0|A]=0);t:{s:if(223&(w=c[0|r]))for(Ze=536870912&l,ut=4096&l,mt=m+105|0,T=r,x=0;;){F=Hr(m+476|0,T),Me=!!(0|ca(e[m+476>>2]))+Me|0,ee=c[7668+(w=(U=255&w)+t|0)|0];n:if(!((Ce=e[m+476>>2])-48>>>0<10|Ce-2406>>>0<10)|(Me?c[t+170|0]:0)){i:if((x=e[m+476>>2]-e[t+600>>2]|0)>>>0>127||!(x=e[6192+((x<<2)+t|0)>>2])){if(ee){for(Ce=5168+((U<<2)+t|0)|0,ee=ee+(w=c[w+7924|0])|0,xt=U|c[T+1|0]<<8,x=0;e[7184+(T=(w<<2)+t|0)>>2]==(0|xt)&&(e[m+472>>2]=e[m+464>>2],Vt(t,m+472|0,r,2,e[T+6704>>2],m+432|0,l,Ae),(0|(T=e[m+432>>2]))>0&&(T=T+35|0,e[m+432>>2]=T),x=1,Vt(t,m+464|0,r,1,e[Ce>>2],m+448|0,l,Ae),e[m+448>>2]>(0|T)||(T=e[m+444>>2],e[m+456>>2]=e[m+440>>2],e[m+460>>2]=T,T=e[m+436>>2],e[m+448>>2]=e[m+432>>2],e[m+452>>2]=T,e[m+464>>2]=e[m+472>>2])),ee>>>0>(w=w+1|0)>>>0;);if(x)break i}c:{A:{if(!(w=e[5168+((U<<2)+t|0)>>2])){if(Vt(t,m+464|0,r,0,e[t+5168>>2],m+448|0,l,Ae),e[m+448>>2])break c;if(16&c[188808])break A;if(x=Hr(m+468|0,U=(T=e[m+464>>2])-1|0),w=e[m+468>>2],!(e[t+600>>2]<=0|(0|w)>577)){if(So(w)){e[m+32>>2]=21,mr(s,87049,m+32|0);break t}w=e[m+468>>2]}if((0|w)==57384&&((0|(ee=e[t+92>>2]))<=e[47352]||(e[47352]=ee)),lo(w)&&((0|(w=e[t+72>>2]))<=e[47352]||(e[47352]=w)),!((ee=(w=e[m+468>>2])-192|0)>>>0>413)&&(ee=c[ee+94240|0])&&(x=x-1|0,!(c[T-2|0]==32&c[x+T|0]==32))){for(e[m+472>>2]=U,f[0|U]=ee;F=c[(w=T)+x|0],f[0|w]=F,T=w+1|0,(0|F)!=32;);if((0|x)>0&&Yt(w,32,x),e[t+24>>2]&&!((0|Zo(94222,e[m+468>>2]))<=0)){e[m+464>>2]=U,x=0;break n}x=0,f[0|s]=0,e[m+464>>2]=r,e[t+8208>>2]=0,e[t+8212>>2]=0;break n}if(!(w=Ln(w))||(0|(T=e[w+4>>2]))==e[t+600>>2])break A;if((0|T)==e[t+188>>2]){e[m+4>>2]=Ao(m- -64|0,e[t+192>>2]),e[m>>2]=21,mr(s,87218,m);break t}if(!(4&c[w+16|0]))break A;e[m+20>>2]=Ao(m- -64|0,e[w+12>>2]),e[m+16>>2]=21,mr(s,87218,m+16|0);break t}if(Vt(t,m+464|0,r,1,w,m+448|0,l,Ae),e[m+448>>2])break c}A:if(!((w=e[m+476>>2])-768>>>0<112)){if(ca(w)){if(f[(F+e[m+464>>2]|0)-1|0]<33&(0|Me)<=1)break A;if(f[0|s]=0,!g)break s;e[g>>2]=4096|e[g>>2];break s}nr(t,e[m+476>>2],-1,m+272|0,0),c[m+272|0]&&(e[m+448>>2]=1,e[m+452>>2]=m+272)}e[m+464>>2]=(F+e[m+464>>2]|0)-1;break i}e[t+288>>2]=0}else Vt(t,m+464|0,r,F,x,m+448|0,l,Ae);if(T=(w=e[m+452>>2])||86135,e[m+452>>2]=T,x=0,!(e[m+448>>2]<=0)){if(w=1|e[m+456>>2],(0|l)<0)break e;if(!(c[0|T]!=21|ut)){Qr(s,T);break t}if(!(!(8&e[47197])|We))i:if(w=e[47195],(0|(F=e[w+76>>2]))>=0&(!F|e[56823]!=(-1073741825&F)))U=e[(F=w+76|0)>>2],e[F>>2]=U||1073741823,e[w+80>>2]==10||(0|(U=e[w+20>>2]))==e[w+16>>2]?fl(w):(e[w+20>>2]=U+1,f[0|U]=10),e[F>>2]=0;else{if(e[w+80>>2]!=10&&(0|(F=e[w+20>>2]))!=e[w+16>>2]){e[w+20>>2]=F+1,f[0|F]=10;break i}fl(w)}if(F=-32769&(w=e[m+456>>2]),e[m+456>>2]=F,!(!A|!F|(1024&w?Ze:0))){t=e[m+464>>2],Qr(A,T),w=F|(St=(s=t)-Jr(r,t=m+112|0,_r(t))|0,(1151&w)==1024?St:0);break e}(w=e[m+460>>2])&&(f[0|w]=69),jA(t,s,n,T)}}else f[m+104|0]=95,Jr(mt,T,F),w=1,f[105+(m+F|0)|0]=0,vr(t,m+104|0,m- -64|0),x-1>>>0<=4294967293&&(w=_r(w=m- -64|0)+w|0,f[0|w]=11,f[w+1|0]=0,w=0),jA(t,s,n,m- -64|0),e[m+464>>2]=T+F,x=w;if(T=e[m+464>>2],!(223&(w=c[0|T])))break}Jr(r,t=m+112|0,_r(t))}w=0}return oe=m+480|0,w}function $a(t,r){var s,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0;oe=s=oe-2976|0,e[r>>2]=1,n=e[t+20>>2],e[(m=s+2960|0)>>2]=e[t+16>>2],e[m+4>>2]=n,n=e[t+12>>2],e[(m=s+2952|0)>>2]=e[t+8>>2],e[m+4>>2]=n,n=e[t+4>>2],e[s+2944>>2]=e[t>>2],e[s+2948>>2]=n,e[50303]||Ar();e:if(t=e[s+2948>>2],c[0|t]&&t||((t=e[s+2944>>2])||(t=(t=e[s+2952>>2])||85055,e[s+2944>>2]=t),ua(n=s+80|0,t,60),fo(n,0),!(l=ha(201216,n))||(e[s+2948>>2]=e[l+4>>2]+1,c[s+2958|0]|c[s+2956|0]|c[s+2957|0]))){Me=s+1536|0,oe=Ae=oe-336|0;t:if(!(!(t=e[4+(Ce=s+2944|0)>>2])|!c[0|t])){if((0|(We=_r(t)))>=0){for(n=We>>>0>=79?79:We,x=1;t=zs(f[e[Ce+4>>2]+A|0]),f[(Ae+256|0)+A|0]=t,x=((255&t)==45)+x|0,t=(0|n)!=(0|A),A=A+1|0,t;);if((0|x)!=1)break t}x=1}if((0|(F=e[50303]))<=0)e[Me>>2]=0,t=0;else{for(m=(0|x)>=0;;){T=e[201216+(mt<<2)>>2];t:if(Vn(e[T+8>>2],88032,3)){if((t=e[Ce+4>>2])&&Vn(t,91687,3)){if(m){t=100;s:if(x){if(n=0,A=e[T+4>>2],!(Ze=c[0|A])){if(!Vn(Ae+256|0,90013,9))break s;break t}for(;;){for(xt=1,w=A+1|0,ut=1,St=0,A=0;(0|A)<(0|We)&&(0|(t=f[(Ae+256|0)+A|0]))!=45||(t=0),St=((U=(0|(ee=c[A+w|0]))==45)&!!(0|(ut=(U?0:ee)<<24>>24==(0|t)?ut:0)))+St|0,A=A+1|0,xt=U+xt|0,ee;);if(A=A+w|0,(U=ut+St|0)&&(n=(0|(t=j((w=(0|(t=x-U|0))<=0?5:5-t|0)-((0|(t=xt-U|0))>0?t:0)|0,100)-(Ze<<24>>24<<1)|0))>(0|n)?t:n),!(Ze=c[0|A]))break}if(!(t=n))break t}(n=e[Ce>>2])&&(t=Pa(n,e[T>>2])?Pa(n,e[T+8>>2])?t:t+400|0:t+500|0),((A=c[Ce+12|0])-1&255)>>>0>1||((n=c[T+12|0])-1&255)>>>0>1||(t=(0|n)!=(0|A)?t-50|0:t+50|0),A=c[Ce+13|0],t=c[T+12|0]!=2|A>>>0>12?t:c[T+13|0]>12?t+5|0:t,(n=c[T+13|0])&&((n=((A?j(A,100):3e3)>>>0)/(n>>>0)|0)>>>0<=99&&(n=1e4/(n>>>0)|0),t=(w=t)+((t=5-(((n-100&65535)>>>0)/10|0)|0)>>31&t)|0,t=A?t+10|0:t),t=(0|t)<=1?1:t}else{if(Vn(e[T+8>>2],Ae+256|0,We))break t;t=100}e[Me+(g<<2)>>2]=T,e[T+16>>2]=t}else e[Me+(g<<2)>>2]=T;g=g+1|0}if((0|F)==(0|(mt=mt+1|0)))break}e[Me+(g<<2)>>2]=0,t=0,g&&(Nn(Me,g,8),t=g)}if(oe=Ae+336|0,x=t,t||(e[r>>2]=0,t=ha(201216,85055),e[s+1536>>2]=t,x=!!(0|t)),r=c[s+2957|0],m=2,(0|(t=c[s+2956|0]))!=2&&(m=2,(r-1&255)>>>0<12||(sr=(0|t)!=1,m=(0|t)==1)),F=(g=e[132136+(m<<2)>>2])+(ee=r>>>0<60)|0,t=0,(0|x)>0)for(n=0;;){l=e[(s+1536|0)+(Rt<<2)>>2];t:{s:{n:{if(sr){if(ee||(r=0,n))break s}else{if(r=c[l+12|0],n|ee)break n;r=(0|r)!=(0|m)}if(A=0,r|c[l+13|0]<60)break t;break s}if((0|r)!=(0|m)){A=n;break t}}e[(s+80|0)+(n<<2)>>2]=l,A=n+1|0}t:if(c[l+15|0]){if(U=0,r=t,n=A,!((0|t)>11))for(;;){if((A=c[0|F])||(F=g,A=c[0|g]),t=e[l+12>>2],w=j(r,24)+202624|0,e[w+8>>2]=e[l+8>>2],e[w+12>>2]=t,t=e[l+4>>2],e[w>>2]=e[l>>2],e[w+4>>2]=t,t=e[l+20>>2],e[w+16>>2]=e[l+16>>2],e[w+20>>2]=t,f[w+14|0]=A,e[(s+80|0)+(n<<2)>>2]=w,F=F+1|0,n=n+1|0,t=r+1|0,(U=U+1|0)>>>0>=c[l+15|0])break t;if(A=(0|r)<11,r=t,!A)break}}else n=A;if((0|(Rt=Rt+1|0))==(0|x))break}else{if(!l)break e;n=0}t:if(!(!(A=c[0|F])|(0|t)>=12))for(;;){if(r=e[l+12>>2],g=j(t,24)+202624|0,e[g+8>>2]=e[l+8>>2],e[g+12>>2]=r,r=e[l+4>>2],e[g>>2]=e[l>>2],e[g+4>>2]=r,r=e[l+20>>2],e[g+16>>2]=e[l+16>>2],e[g+20>>2]=r,f[g+14|0]=A,e[(s+80|0)+(n<<2)>>2]=g,n=n+1|0,!(A=c[0|(F=F+1|0)]))break t;if(r=(0|t)<11,t=t+1|0,!r)break}n?(t=e[(s+80|0)+(c[s+2958|0]%(0|n)<<2)>>2],(r=c[t+14|0])?(f[202976]=0,e[s+48>>2]=47,mr(s+2971|0,91351,s+48|0),f[s+2971|0]=0,r>>>0<=9?(e[s+20>>2]=r,e[s+16>>2]=s+2971,mr(202976,91378,s+16|0)):(e[s+36>>2]=r-10,e[s+32>>2]=s+2971,mr(202976,91503,s+32|0)),t=e[t+8>>2],e[s+4>>2]=202976,e[s>>2]=t,t=202912,mr(202912,87760,s)):t=e[t+8>>2]):t=0}else{if(t=e[l+8>>2],!c[202976])break e;e[s+64>>2]=t,e[s+68>>2]=202976,t=202912,mr(202912,87760,s- -64|0)}return oe=s+2976|0,t}function en(t,r,s,n,A){var l,g,m=0,w=0,T=0,x=0,F=0,U=0,ee=0;oe=l=oe-464|0,f[l+432|0]=0,f[l+368|0]=0,f[l+304|0]=0,f[l+292|0]=0,F=(0|r)/10|0,m=e[33273];e:{if(!(g=2&n)|e[33272]!=2){ee=32&n?113:111,x=1&n,U=r-j(F,10)|0;t:{s:{n:{i:{c:{A:{d:{l:if(c[0|m])m=0;else{o:{if(8&n){if(e[l+288>>2]=r,mr(w=l+452|0,91198,l+288|0),m=vr(t,w,l+304|0)){w=0;break l}e[l+272>>2]=r,mr(w=l+452|0,91314,l+272|0),m=vr(t,w,l+304|0),w=0}else{if(!x)break o;if(T=Qr(l+432|0,133104),4&n){if(e[l+260>>2]=ee,e[l+256>>2]=r,mr(w=l+452|0,91324,l+256|0),m=vr(t,w,l+304|0),c[133116]&&m)break d;if(w=m,m)break l}e[l+244>>2]=ee,e[l+240>>2]=r,mr(w=l+452|0,91384,l+240|0),w=m=vr(t,w,l+304|0)}if(m)break l}o:{if(g){if(!(1&f[133096]))break o;e[l+208>>2]=r,mr(m=l+452|0,91498,l+208|0),m=vr(t,m,l+304|0)}else T=e[t+108>>2],e[l+224>>2]=r,mr(m=l+452|0,(0|s)>=2?91700:(262144&T)>>>18|0?91534:91700,l+224|0),m=vr(t,m,l+304|0);if(m)break l}!x|!(32&c[t+109|0])?(e[l+192>>2]=r,mr(m=l+452|0,91766,l+192|0),m=vr(t,m,l+304|0)):m=0}if(!(16&n)|(0|r)>9)break c;m=w;break A}if(Qr(T,133116),!(16&n)|(0|r)>9)break i}vr(t,88875,l+368|0);break s}if(!m)break n;m=w}f[l+368|0]=0;break s}n:if(x&&(e[l+180>>2]=ee,e[l+176>>2]=F,mr(m=l+452|0,91846,l+176|0),vr(t,m,l+368|0))){if(w=1,!U|!(16&c[t+109|0]))break n;wn(l+368|0,133104)}else w||(e[l+160>>2]=F,mr(w=l+452|0,512&n?91936:92016,l+160|0),vr(t,w,l+368|0),w=0);if(m=U,c[l+368|0]||(m=U,16&c[t+106|0]&&(e[l+144>>2]=254&F,mr(m=l+452|0,92016,l+144|0),vr(t,m,l+368|0),m=(0|r)%20|0)),f[l+304|0]=0,F=m,(0|m)<=0)m=w;else{if(g&&(m=e[33273],c[0|m])){Qr(l+304|0,m),f[l+432|0]=0,T=x;break t}if(T=0,8&n&&(e[l+128>>2]=F,mr(n=l+452|0,91314,l+128|0),T=vr(t,n,l+304|0)),!x|16&c[t+104|0]||(e[l+116>>2]=ee,e[l+112>>2]=F,mr(n=l+452|0,91384,l+112|0),w=(T=vr(t,n,l+304|0))?1:w),m=w,!T){n:{if(!g|!(1&e[33274])){if(!(16&c[t+104|0])&&g)break n;w=e[t+108>>2],e[l+96>>2]=F,mr(n=l+452|0,(0|s)>=2?91700:(262144&w)>>>18|0?91534:91700,l+96|0),s=vr(t,n,l+304|0)}else e[l+80>>2]=F,mr(s=l+452|0,91498,l+80|0),s=vr(t,s,l+304|0);if(s)break s}e[l+64>>2]=F,mr(s=l+452|0,91766,l- -64|0),vr(t,s,l+304|0)}}}T=x,c[l+432|0]|m|!x||((0|r)<20|(16&c[t+104|0]?0:U)||(vr(t,92162,l+432|0),T=1,!c[l+432|0]))&&(vr(t,92205,l+432|0),T=1)}if(!(!(s=f[l+304|0])|!(48&(r=e[t+104>>2]))|!c[l+368|0])){if(vr(t,90824,l+292|0),!T|!(8&c[t+109|0])||(f[l+292|0]=0),16&c[t+104|0]){e[l+28>>2]=l+432,e[l+24>>2]=l+368,e[l+20>>2]=l+292,e[l+16>>2]=l+304,mr(A,91059,l+16|0),n=1;break e}e[l+12>>2]=l+432,e[l+8>>2]=l+304,e[l+4>>2]=l+292,e[l>>2]=l+368,mr(A,91059,l),n=1;break e}512&r&&(!s|(0|(r=_r(l+368|0)-1|0))<0||(m=c[e[144464+(f[0|(r=r+(l+368|0)|0)]<<2)>>2]+11|0]!=2,(0|(n=c[e[144464+(s<<2)>>2]+11|0]))==1&&(n=c[e[144464+(f[l+305|0]<<2)>>2]+11|0]),m|(255&n)!=2||(f[0|r]=0))),!(8&c[t+110|0])|!c[l+432|0]?(e[l+56>>2]=l+432,e[l+52>>2]=l+304,e[l+48>>2]=l+368,mr(A,92282,l+48|0)):(e[l+36>>2]=l+304,e[l+32>>2]=l+368,(0|(r=mr(A,90368,l+32|0)))>0&&(r=c[e[144464+(c[(s=r-1|0)+A|0]<<2)>>2]+11|0]==2?s:r),Qr(r+A|0,l+432|0))}else Qr(A,m);n=0}e:if(268435456&(t=e[t+104>>2])){if((0|_r(A))<=0)break e;for(r=0,t=0;c[0|(s=t+A|0)]==6&&(r&&(f[0|s]=5),r=1),t=t+1|0,(0|_r(A))>(0|t););}else if(256&t&&(r=0,!((0|(t=(x=_r(A))-1|0))<0))){if(t)for(U=-2&x,m=0;c[0|(w=t+A|0)]==6?(s=1,r&&(f[0|w]=5)):s=r,c[0|(w=w-1|0)]==6?(r=1,s&&(f[0|w]=5)):r=s,t=t-2|0,(0|U)!=(0|(m=m+2|0)););1&x&&(!r|c[0|(t=t+A|0)]!=6||(f[0|t]=5))}return oe=l+464|0,n}function On(t,r,s,n){var A,l,g=0,m=0,w=0,T=0,x=0,F=0,U=0;if(oe=A=oe-352|0,f[A+304|0]=0,f[A+224|0]=0,f[A+64|0]=0,w=e[e[47192]+292>>2],U=Hr(A+348|0,r),(1048320&(g=e[A+348>>2]))==57344&&(g&=255,e[A+348>>2]=g),2&n&&Pi(g)&&vr(t,85437,A+304|0),g=Io(e[A+348>>2],t),e[A+348>>2]=g,F=1&n,nr(t,g,f[0|(l=r+U|0)],A+224|0,F),!(r=c[A+224|0])){e:if((r=gl(e[A+348>>2]))&&(e[A+348>>2]=16383&r,4&n)){switch(1073741823&(r>>=14)){case 0:case 3:break e}vr(t,r=e[131232+(r<<2)>>2],A+304|0),c[A+304|0]||(f[A+306|0]=yo(84744),x=r,r=A+304|3,vr(e[47194],x,r),c[A+307|0]&&(I[A+304>>1]=5385,r=_r(r)+(A+304|0)|0,f[r+5|0]=0,f[r+4|0]=w,f[r+3|0]=21))}nr(t,e[A+348>>2],f[0|l],A+224|0,F),r=c[A+224|0]}e:{t:{if(r&=255){if((0|r)!=21)break t;Qr(s,A+224|0),U=0;break e}if(r=1632,!((0|(g=e[A+348>>2]))<1632)){for(T=103360;;){if((0|g)>=(r+10|0)){if(!(r=e[(T=T+4|0)>>2]))break t;if((0|r)<=(0|g))continue;break t}break}(0|(r=48+(g-r|0)|0))<=0||nr(t,r,0,A+224|0,F)}}t:{s:{n:{i:{if(r=Ln(e[A+348>>2])){if(g=e[r+4>>2],!r|1&(T=e[r+16>>2])||(m=e[47192],e[m+600>>2]==(0|g)|e[m+188>>2]==(0|g)|e[m+184>>2]==(0|g)||(f[A+144|0]=0,vr(m,e[r>>2],A- -64|0)?(0|(m=e[47192]))!=(0|t)&&(w=e[t+292>>2],Qr(A+144|0,A- -64|0),f[A+66|0]=e[m+292>>2]):(f[A+66|0]=yo(84744),vr(e[47194],e[r>>2],A+144|0)),c[A+144|0]&&(I[A+64>>1]=5385,Qr(3|(m=A- -64|0),x=A+144|0),m=_r(x)+m|0,f[m+5|0]=0,f[m+4|0]=w,f[m+3|0]=21))),c[A+224|0])break t;if(!g||(w=e[47192],e[w+188>>2]!=(0|g)))break i;r=e[w+192>>2];break s}if(c[A+224|0])break t;T=0,g=0;break n}if((r=e[r+12>>2])&&!(2&T))break s}r=25966}if((e[t+212>>2]==(0|r)&(0|r)!=27503||(f[A+226|0]=yo(Ao(A+47|0,r)),(r=e[47194])&&((0|(w=e[A+348>>2]))>55215||(0|(m=w-44032|0))<0?nr(r,w,f[0|l],A+224|3,F):(f[A+52|0]=32,r=x=A+53|0,w-50500>>>0>=588&&(r=Xa(4352+((m>>>0)/588|0)|0,x)+x|0),Xa(4449+(((w=(m>>>0)/28|0)>>>0)%21|0)|0,r),Xa(4519+(m-j(w,28)|0)|0,r+3|0),f[r+6|0]=32,f[r+7|0]=0,f[A+227|0]=0,r=A+224|3,Bs(e[47194],x,r,77,0,0,0),Rr(e[47194],r,0,-1,0)),r=A+224|3,c[A+227|0]==21&&(f[A+226|0]=yo(A+224|4),nr(e[47194],e[A+348>>2],f[0|l],r,F)),Mn(e[e[32972]+60>>2]),c[A+227|0]&&(I[A+224>>1]=5385,r=_r(r)+(A+224|0)|0,f[r+3|0]=21,F=e[t+292>>2],f[r+5|0]=0,f[r+4|0]=F)),!c[A+224|0]))&&(16&T||(ls(e[A+348>>2])&&vr(e[47192],85683,A+224|0),c[A+224|0]||(Za(e[A+348>>2])||vr(e[47192],85778,A+224|0),c[A+224|0]||Fi(85992,A+224|0,0))),!(8&T)||4&n)){if(r=e[A+348>>2],(0|g)!=10240?(e[A+32>>2]=r,mr(A+52|0,86013,A+32|0)):(g=A+52|0,1&r&&(f[A+52|0]=49,g=A+53|0),2&r&&(f[0|g]=50,g=g+1|0),4&r&&(f[0|g]=51,g=g+1|0,r=e[A+348>>2]),8&r&&(f[0|g]=52,g=g+1|0,r=e[A+348>>2]),16&r&&(f[0|g]=53,g=g+1|0,r=e[A+348>>2]),32&r&&(f[0|g]=54,g=g+1|0,r=e[A+348>>2]),64&r&&(f[0|g]=55,g=g+1|0,r=e[A+348>>2]),128&r&&(f[0|g]=56,g=g+1|0),f[0|g]=0),r=A+224|0,T=c[A+52|0])for(g=A+52|0;r=_r(r)+r|0,f[0|r]=23,r=r+1|0,nr(e[47192],T<<24>>24,0,r,1),(n=c[0|r])&&(0|n)!=21||(0|(n=f[0|g]))<97||Fi(e[130860+((255&n)<<2)>>2],r,0),T=c[0|(g=g+1|0)];);r=_r(r)+r|0,f[0|r]=9,f[r+1|0]=0}}r=_r(s),2&c[t+144|0]?(e[A+16>>2]=255,e[A+28>>2]=A+304,e[A+24>>2]=A+224,e[A+20>>2]=A- -64,mr(A+144|0,86210,A+16|0)):(e[A>>2]=255,e[A+12>>2]=A+224,e[A+8>>2]=A+304,e[A+4>>2]=A- -64,mr(A+144|0,86210,A)),_r(A+144|0)+r>>>0>199||Qr(r+s|0,A+144|0)}return oe=A+352|0,U}function Pn(t,r,s,n,A,l,g){var m,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0,br=0,Ir=0,jr=0,Ur=0,As=0;oe=m=oe-528|0,We=g?e[g>>2]:0,Rt=e[A+4>>2];e:{t:{if(e[t+220>>2]>0){ua(T=m+352|0,r,160),oe=ee=oe-176|0,Ce=1-(Ae=e[t+220>>2])|0,Me=e[t+224>>2],Ze=e[t+216>>2],F=T;s:{n:{for(;;){if(ut=Hr(ee+172|0,F),w=e[ee+172>>2]){if((0|w)<(0|Ae)|(0|w)>(0|Ze))break n;if(Me){if((0|(w=f[Me+(w-Ae|0)|0]))<=0)break n}else w=w+Ce|0;if(F=F+ut|0,f[U+ee|0]=w,w=160,(0|(U=U+1|0))!=160)continue}else w=U;break}if(Me=0,f[w+ee|0]=0,Ce=f[0|ee],e[ee+172>>2]=Ce,Ce){for(sr=2+(Ze-Ae|0)|0,Ae=w=ee;;){Ze=w+1|0;i:{if((ut=e[t+8180>>2])&&(U=0,!((0|(F=I[ut>>1]))>(0|(xt=(f[0|Ze]<<8)+Ce|0)))))for(;;){if((0|F)==(0|xt)){Ce=U+sr|0,e[ee+172>>2]=Ce,w=w+2|0;break i}if(!((0|xt)>=(0|(F=I[ut+((U=U+1|0)<<1)>>1]))))break}w=Ze}if(mt=63&Ce|mt<<6,(0|(U=Me+6|0))<8?Me=U:(Me=Me-2|0,f[0|Ae]=mt>>Me,Ae=Ae+1|0),Ce=f[0|w],e[ee+172>>2]=Ce,!Ce)break}(0|Me)<=0||(f[0|Ae]=mt<<8-Me,Ae=Ae+1|0)}else Ae=ee;f[0|Ae]=0,Jr(T,ee,w=Ae-ee|0),Ae=64|w;break s}Ae=_r(T)}oe=ee+176|0,ee=T}else Ae=_r(r),ee=r;if(T=c[0|ee]){for(w=0,U=ee;x=1023&(x=(x<<3)+T|0)^x>>>8,w=w+1|0,T=c[0|(U=U+1|0)];);w=w+x&1023}else w=0;if(x=e[692+((w<<2)+t|0)>>2]){if(w=c[0|x])break t;w=0;break e}if(w=0,!A)break e;e[A>>2]=0;break e}for(ut=1073741824&Rt,xt=2048&l,Rt=512&We,sr=65536&We,br=1&We,Ir=2&We,We=8&l,jr=1024&l,Ze=4&l,Ur=63&Ae,As=t+8233|0;;){l=(255&w)+x|0;t:{s:if((127&(w=c[x+1|0]))==(0|Ae)&&!Vn(ee,x+2|0,Ur)){x=2+((63&w)+x|0)|0;n:{if(w<<24>>24<0)Me=0,f[0|n]=0;else{if((0|(Me=_r(x)))>=160)break n;Qr(n,x),x=1+(x+Me|0)|0}if(T=0,l>>>0<=x>>>0)w=s,F=0;else{U=0,F=0;i:{for(;;){x=(w=x)+1|0;c:if((w=c[0|w])>>>0>=100){if(Ce=e[t+320>>2],w>>>0>=132){U|=Ce>>>w-132&1;break c}U|=!(Ce>>>w-100&1)}else{if(w>>>0>=81){Ce=w-80|0,mt=l-x|0;A:if(g)for(w=0;;){if(St=j(w,12)+g|0,!c[St+10|0])break A;if(U=!!(12&c[St+1|0])|U,St=(0|w)!=(0|Ce),w=w+1|0,!St)break}if(KA(s,x,mt)|1&U)break s;e[33264]=Ce,w=s+mt|0,F|=128,x=l;break i}w>>>0>=65?(F=15&w|-16&F,F=12&~w?F:512|F):w>>>0>=32?T|=1<<w-32:F|=1<<w}if(!(l>>>0>x>>>0))break}if(w=s,1&U)break t}if(65536&T&&!Ze||jr&&49152&T)break t}if(Ze&&(16384&T||!We&&32768&T)||(Ir?0:512&T)|(br?0:1024&T)|(sr?0:33554432&F)||!(!(131072&T)|J[e[47192]+8204>>2]<=w>>>0|ut)|(Rt?0:262144&T)|(8&c[e[47192]+8242|0]?0:8192&T)||16&T&&(!e[t+8184>>2]&(!We|!e[t+8192>>2])||!(!We|e[t+212>>2]!=25966)&&2097152&e[t+8232>>2])||(e[t+8188>>2]?0:64&T)|(!e[t+8196>>2]|xt?32&T:0)||!(!(65536&F)|e[t+212>>2]!=26741|128&c[0|As])|(e[47192]!=(0|t)?524288&T:0))break t;i:{c:{A:{if(!A){if(!Me)break A;break i}if(e[A+4>>2]=T,e[A>>2]=1073741824|F,Me)break c}if(w=0,!(8&c[188788]))break e;oA(A,t=m+272|0),e[m>>2]=r,e[m+4>>2]=t,wa(e[47195],89330,m);break e}e[A>>2]=-1073741824|F}if(8&c[188788]&&(Tr(n,m- -64|0),c[e[47192]+172|0]==(F>>>29&1)&&(!g|!(128&F)?(e[m+48>>2]=r,wa(e[47195],89426,m+48|0)):(Jr(t=m+352|0,n=s,s=w-s|0),f[351+(s+m|0)|0]=0,e[m+32>>2]=r,e[m+36>>2]=t,wa(e[47195],89397,m+32|0)),oA(A,t=m+272|0),r=e[47195],e[m+16>>2]=m- -64,e[m+20>>2]=t,wa(r,89534,m+16|0))),c[Hr(m- -64|0,ee)+ee|0]|!A||ca(e[m+64>>2]))break e;e[A>>2]=134217728|e[A>>2];break e}be(89236,86634,2467,94846),V()}x=l}if(!(w=c[0|x]))break}w=0}return oe=m+528|0,w}function Dn(t,r,s,n,A){var l,g=0,m=0;oe=l=oe-304|0,f[l+278|0]=0;e:{if((0|r)>0&&(1&n&&(2&n&&(e[l+164>>2]=s,e[l+160>>2]=r,mr(g=l+290|0,89701,l+160|0),g=vr(t,g,l+224|0))||1&f[133096]&&(e[l+148>>2]=s,e[l+144>>2]=r,mr(g=l+290|0,89757,l+144|0),g=vr(t,g,l+224|0))||(e[l+132>>2]=s,e[l+128>>2]=r,mr(g=l+290|0,89894,l+128|0),g=vr(t,g,l+224|0)))||(e[l+116>>2]=s,e[l+112>>2]=r,mr(g=l+290|0,89974,l+112|0),g=vr(t,g,l+224|0))))break e;if((0|(m=(0|r)%100|0))>=20&&vr(t,90022,l+278|0),1&n){if(2&n){g=m-11|0;t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(g>>>0<9)break s;if(n=90418,(0|(g=(0|r)%10|0))==1)break t;if(g-2>>>0>=3)break s;n=90453;break t;case 1:if(r-2>>>0>=3)break s;n=90453;break t;case 2:if(g>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;n=90453;break t;case 3:if(n=90508,g>>>0<9)break t;n=(n=(0|r)%10|0)?(0|n)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(g>>>0<9)){if(n=90537,(0|(g=(0|r)%10|0))==1)break t;if(!(g-2>>>0>=3)){n=90453;break t}}}n=90586}if(e[l+100>>2]=s,e[l+96>>2]=n,mr(n=l+290|0,90058,l+96|0),g=0,vr(t,n,l+224|0))break e}if(n=m-11|0,1&f[133096]){t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(n>>>0<9)break s;if(g=90418,(0|(m=(0|r)%10|0))==1)break t;if(m-2>>>0>=3)break s;g=90453;break t;case 1:if(r-2>>>0>=3)break s;g=90453;break t;case 2:if(n>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;g=90453;break t;case 3:if(g=90508,n>>>0<9)break t;g=(g=(0|r)%10|0)?(0|g)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(n>>>0<9)){if(g=90537,(0|(m=(0|r)%10|0))==1)break t;if(!(m-2>>>0>=3)){g=90453;break t}}}g=90586}if(e[l+84>>2]=s,e[l+80>>2]=g,mr(m=l+290|0,90110,l+80|0),g=0,vr(t,m,l+224|0))break e}t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(n>>>0<9)break s;if(g=90418,(0|(m=(0|r)%10|0))==1)break t;if(m-2>>>0>=3)break s;g=90453;break t;case 1:if(r-2>>>0>=3)break s;g=90453;break t;case 2:if(n>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;g=90453;break t;case 3:if(g=90508,n>>>0<9)break t;g=(g=(0|r)%10|0)?(0|g)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(n>>>0<9)){if(g=90537,(0|(m=(0|r)%10|0))==1)break t;if(!(m-2>>>0>=3)){g=90453;break t}}}g=90586}if(e[l+68>>2]=s,e[l+64>>2]=g,mr(m=l+290|0,90139,l- -64|0),g=0,vr(t,m,l+224|0))break e}else n=m-11|0;t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(n>>>0<9)break s;if(g=90418,(0|(n=(0|r)%10|0))==1)break t;if(n-2>>>0>=3)break s;g=90453;break t;case 1:if(r-2>>>0>=3)break s;g=90453;break t;case 2:if(n>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;g=90453;break t;case 3:if(g=90508,n>>>0<9)break t;g=(n=(0|r)%10|0)?(0|n)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(n>>>0<9)){if(g=90537,(0|(n=(0|r)%10|0))==1)break t;if(!(n-2>>>0>=3)){g=90453;break t}}}g=90586}e[l+52>>2]=s,e[l+48>>2]=g,mr(n=l+290|0,90218,l+48|0),g=0,vr(t,n,l+224|0)||((0|s)<4||(e[l+32>>2]=s-1,mr(n=l+290|0,89026,l+32|0),vr(t,n,l+176|0)||(vr(t,90273,l+224|0),e[33275]=3)),c[l+224|0]||(e[l+16>>2]=r,mr(n=l+290|0,90303,l+16|0),(g=vr(t,n,l+224|0))||vr(t,90347,l+224|0),e[33275]=2))}return e[l+4>>2]=l+224,e[l>>2]=l+278,mr(A,90368,l),oe=l+304|0,!((0|r)!=1|(0|s)!=1)&&(r=1,32&c[t+106|0])||(r=g),r}function qn(t,r,s,n){var A,l=0,g=0,m=0,w=0,T=0,x=0,F=0;oe=A=oe+-64|0,I[A+48>>1]=0,e[A+40>>2]=0,e[A+44>>2]=0,e[A+32>>2]=0,e[A+36>>2]=0,e[A+24>>2]=0,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A+8>>2]=0,e[A+12>>2]=0,e[A>>2]=0,e[A+4>>2]=0,l=r;e:{for(;;){t:{s:{if((0|(g=c[0|l]))!=69){if((0|g)!=32)break s;if(n&&(f[Jr(g=n,r,n=(0|(n=l-r|0))>=159?159:n)+n|0]=0),n=63&s)break t;break e}f[0|l]=101}l=l+1|0;continue}break}if(1&s){t:if((l=l-1|0)>>>0<r>>>0)g=n;else for(g=n;;){if((192&c[0|l])!=128)break t;if(g=g+1|0,!((l=l-1|0)>>>0>=r>>>0))break}m=n-1|0}else m=n,g=n;if((0|n)!=1)for(;;){n=m;t:if(!((l=l-1|0)>>>0<r>>>0))for(;;){if((192&c[0|l])!=128)break t;if(g=g+1|0,!((l=l-1|0)>>>0>=r>>>0))break}t:if(!((l=l-1|0)>>>0<r>>>0))for(;;){if((192&c[0|l])!=128)break t;if(g=g+1|0,!((l=l-1|0)>>>0>=r>>>0))break}if(m=n-2|0,!((0|n)>2))break}if((0|g)<=0)m=0;else{if(w=3&(m=(n=(r=g-1|0)>>>0>=48?48:r)+1|0),r=0,g=0,n>>>0>=3)for(F=-4&m,n=0;T=l+g|0,f[g+A|0]=c[0|T],f[0|T]=32,T=(x=1|g)+l|0,f[A+x|0]=c[0|T],f[0|T]=32,T=(x=2|g)+l|0,f[A+x|0]=c[0|T],f[0|T]=32,T=(x=3|g)+l|0,f[A+x|0]=c[0|T],f[0|T]=32,g=g+4|0,(0|F)!=(0|(n=n+4|0)););if(w)for(;n=l+g|0,f[g+A|0]=c[0|n],f[0|n]=32,g=g+1|0,(0|w)!=(0|(r=r+1|0)););}}if(f[A+m|0]=0,w=65520&s,!(512&s)|c[0|(n=l-1|0)]!=105||(f[0|n]=121),g=4|w,256&s){e:{t:{s:{if((0|(r=e[t+212>>2]))!=25966){if((0|r)!=28268)break s;if(f[0|n]<0||128&(r=f[0|(m=l-2|0)]))break e;if(w=e[t+632>>2])r=!!(0|Ua(w,r));else{if((0|(w=e[t+600>>2]))>0&&(r=r-w|0)-1>>>0>254)break e;r=128&c[344+(t+r|0)|0]}if(!r)break e;if(r=f[0|n],w=e[t+612>>2])r=!!(0|Ua(w,r));else{n:{if((0|(w=e[t+600>>2]))>0){if((r=r-w|0)-1>>>0<255)break n;break e}if((0|r)<0)break e}r=4&c[344+(t+r|0)|0]}if(!r)break e;r=f[l-3|0];n:{if(w=e[t+632>>2])r=!!(0|Ua(w,r));else{i:{if((0|(w=e[t+600>>2]))>0){if((r=r-w|0)-1>>>0<255)break i;break n}if((0|r)<0)break n}r=128&c[344+(t+r|0)|0]}if(r)break e}f[0|l]=c[0|n],f[0|n]=c[0|m],f[l+1|0]=32;break e}if(m=f[l-2|0],r=e[t+632>>2])r=!!(0|Ua(r,m));else{n:{if((0|(r=e[t+600>>2]))>0){if((m=m-r|0)-1>>>0<255)break n;break t}if((0|m)<0)break t}r=128&c[344+(t+m|0)|0]}if(!r)break t;if(m=f[0|n],r=e[t+608>>2])r=!!(0|Ua(r,m));else{if((0|(r=e[t+600>>2]))>0){if((m=m-r|0)-1>>>0>=255)break t}else if((0|m)<0)break t;r=2&c[344+(t+m|0)|0]}if(!r)break t;g=Vn(87771,l-3|0,3)?20|w:g;break e}g=e[t+204>>2]?20|w:g;break e}(c[0|n]==99||(m=c[1+(r=l-2|0)|0]<<8,(c[0|r]|m)==29554|(m|c[0|r])==29289||(c[0|(r=l-2|0)]|c[r+1|0]<<8)==29301||!Vn(88115,l-3|0,3)||(c[0|(r=l-2|0)]|c[r+1|0]<<8)==29550|c[0|n]==117||!Vn(88384,l-5|0,5)||(c[0|(r=l-4|0)]|c[r+1|0]<<8|c[r+2|0]<<16|c[r+3|0]<<24)==1735287154||(c[0|r]|c[r+1|0]<<8|c[r+2|0]<<16|c[r+3|0]<<24)==1735549292))&&(g=20|w)}16&g&&(Xa(e[t+204>>2],l),8&c[188788]&&xA(88683,6,e[47195]))}return e[t+8184>>2]|!(2048&s)||(e[t+8184>>2]=1),P[A>>1]!=115&&Vn(A,88850,3)||(g|=8),oe=A- -64|0,c[0|A]==39?65531&g:g}function sa(t,r,s,n,A,l,g,m,w){var T,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0;oe=T=oe-112|0,x=2147483647&w;e:{if(U=!(r|s),(n|(F=2147483647&A)?F-2147418112>>>0<2147549184:U)||!(!m&(0|(Ae=x-2147418112|0))==-2147418112?l|g:(0|Ae)==-2147418112&!!(0|m)|Ae>>>0>2147549184)){if(!(!n&(0|F)==2147418112?U:F>>>0<2147418112)){m=n,w=32768|A,l=r,g=s;break e}if(!(!m&(0|x)==2147418112?!(l|g):x>>>0<2147418112)){w|=32768;break e}if(!(r|n|2147418112^F|s)){ee=n,m=(n=!(r^l|n^m|s^g|A^w^-2147483648))?0:ee,w=n?2147450880:A,l=n?0:r,g=n?0:s;break e}if(!(l|m|2147418112^x|g))break e;if(!(r|n|s|F)){if(l|m|g|x)break e;l&=r,g&=s,m&=n,w&=A;break e}if(!(l|m|g|x)){l=r,g=s,m=n,w=A;break e}}F=(U=We=(ee=(0|x)==(0|F))&(0|n)==(0|m)?(0|s)==(0|g)&r>>>0<l>>>0|s>>>0<g>>>0:ee&n>>>0<m>>>0|x>>>0>F>>>0)?l:r,Ae=U?g:s,Ze=ee=U?w:A,U=U?m:n,Me=65535&ee,n=We?n:m,ut=A=We?A:w,ee=A>>>16&32767,(Ce=Ze>>>16&32767)||(w=A=!(U|Me),x=A?F:U,m=A<<=6,la(T+96|0,F,Ae,U,Me,(A=A+((0|(w=ke(w?Ae:Me)))==32?ke(x)+32|0:w)|0)-15|0),U=e[T+104>>2],Me=e[T+108>>2],Ae=e[T+100>>2],Ce=16-A|0,F=e[T+96>>2]),l=We?r:l,g=We?s:g,m=n,w=65535&ut,ee||(A=r=!(m|w),x=r?l:m,s=r<<=6,la(T+80|0,l,g,m,w,(r=r+((0|(A=ke(A?g:w)))==32?ke(x)+32|0:A)|0)-15|0),ee=16-r|0,m=e[T+88>>2],w=e[T+92>>2],g=e[T+84>>2],l=e[T+80>>2]),s=w<<3|m>>>29,r=m<<3|g>>>29,s|=524288,m=U<<3|Ae>>>29,w=Me<<3|U>>>29,We=Ze^ut,A=g<<3|l>>>29,n=l<<3,(0|ee)!=(0|Ce)&&((l=Ce-ee|0)>>>0>127?(r=0,s=0,A=0,n=1):(la(T- -64|0,n,A,r,s,128-l|0),Ma(T+48|0,n,A,r,s,l),r=e[T+56>>2],s=e[T+60>>2],A=e[T+52>>2],n=e[T+48>>2]|!!(e[T+64>>2]|e[T+72>>2]|e[T+68>>2]|e[T+76>>2]))),U=n,x=A,ee=m,Me=524288|w,A=Ae<<3|F>>>29,Ae=F<<3,F=A;t:if((0|We)<0){if(l=0,g=0,m=0,w=0,!(U^Ae|r^ee|x^F|s^Me))break e;if(n=Ae-U|0,A=F-((U>>>0>Ae>>>0)+x|0)|0,m=(l=ee-r|0)-(g=(0|x)==(0|F)&U>>>0>Ae>>>0|x>>>0>F>>>0)|0,w=r=(Me-((r>>>0>ee>>>0)+s|0)|0)-(l>>>0<g>>>0)|0,r>>>0>524287)break t;l=r=!(m|w),g=r?n:m,s=r<<=6,la(T+32|0,n,A,m,w,r=(r=r+((0|(l=ke(l?A:w)))==32?ke(g)+32|0:l)|0)-12|0),Ce=Ce-r|0,m=e[T+40>>2],w=e[T+44>>2],n=e[T+32>>2],A=e[T+36>>2]}else A=x+F|0,l=(0|x)==(0|(A=(n=U+Ae|0)>>>0<Ae>>>0?A+1|0:A))&n>>>0<U>>>0|A>>>0<x>>>0,x=s+Me|0,x=(r=r+ee|0)>>>0<ee>>>0?x+1|0:x,1048576&(w=(m=r+l|0)>>>0<r>>>0?x+1|0:x)&&(n=1&U|(1&A)<<31|n>>>1,A=m<<31|A>>>1,Ce=Ce+1|0,m=(1&w)<<31|m>>>1,w=w>>>1|0);if(s=0,F=-2147483648&Ze,(0|Ce)>=32767)m=s,w=2147418112|F,l=0,g=0;else if(ee=0,(0|Ce)>0?ee=Ce:(la(T+16|0,n,A,m,w,Ce+127|0),Ma(T,n,A,m,w,1-Ce|0),n=e[T>>2]|!!(e[T+16>>2]|e[T+24>>2]|e[T+20>>2]|e[T+28>>2]),A=e[T+4>>2],m=e[T+8>>2],w=e[T+12>>2]),Ae=7&n,n=(0|(r=m<<29|A>>>3))==(0|(g=(n=(7&A)<<29|n>>>3)>>>0>(l=(Ae>>>0>4)+n|0)>>>0?r+1|0:r))&n>>>0>l>>>0|r>>>0>g>>>0,r=s|(7&w)<<29|m>>>3,w=F|w>>>3&65535|ee<<16,w=r>>>0>(m=n+r|0)>>>0?w+1|0:w,(0|Ae)!=4){if(!Ae)break e}else x=g+(r=0)|0,w=(r=(0|r)==(0|(g=(n=l)>>>0>(l=l+(s=1&l)|0)>>>0?x+1|0:x))&s>>>0>l>>>0|r>>>0>g>>>0)>>>0>(m=r+m|0)>>>0?w+1|0:w}e[t>>2]=l,e[t+4>>2]=g,e[t+8>>2]=m,e[t+12>>2]=w,oe=T+112|0}function Zt(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0;e:if(t|=0){l=(n=t-8|0)+(t=-8&(r=e[t-4>>2]))|0;t:if(!(1&r)){if(!(3&r)||(n=n-(r=e[n>>2])|0)>>>0<J[57156])break e;if(t=t+r|0,e[57157]==(0|n)){if(!(3&~(r=e[l+4>>2])))return e[57154]=t,e[l+4>>2]=-2&r,e[n+4>>2]=1|t,void(e[t+n>>2]=t)}else{if(r>>>0<=255){if(A=e[n+8>>2],r=r>>>3|0,(0|(s=e[n+12>>2]))==(0|A)){e[57152]=e[57152]&Cn(-2,r);break t}e[A+12>>2]=s,e[s+8>>2]=A;break t}if(m=e[n+24>>2],(0|n)==(0|(r=e[n+12>>2])))if((s=e[(A=n+20|0)>>2])||(s=e[(A=n+16|0)>>2])){for(;g=A,(s=e[(A=(r=s)+20|0)>>2])||(A=r+16|0,s=e[r+16>>2]););e[g>>2]=0}else r=0;else s=e[n+8>>2],e[s+12>>2]=r,e[r+8>>2]=s;if(!m)break t;A=e[n+28>>2];s:{if(e[(s=228912+(A<<2)|0)>>2]==(0|n)){if(e[s>>2]=r,r)break s;e[57153]=e[57153]&Cn(-2,A);break t}if(e[m+(e[m+16>>2]==(0|n)?16:20)>>2]=r,!r)break t}if(e[r+24>>2]=m,(s=e[n+16>>2])&&(e[r+16>>2]=s,e[s+24>>2]=r),!(s=e[n+20>>2]))break t;e[r+20>>2]=s,e[s+24>>2]=r}}if(!(n>>>0>=l>>>0)&&1&(r=e[l+4>>2])){t:{if(!(2&r)){if(e[57158]==(0|l)){if(e[57158]=n,t=e[57155]+t|0,e[57155]=t,e[n+4>>2]=1|t,e[57157]!=(0|n))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|l))return e[57157]=n,t=e[57154]+t|0,e[57154]=t,e[n+4>>2]=1|t,void(e[t+n>>2]=t);t=(-8&r)+t|0;s:if(r>>>0<=255){if(A=e[l+8>>2],r=r>>>3|0,(0|(s=e[l+12>>2]))==(0|A)){e[57152]=e[57152]&Cn(-2,r);break s}e[A+12>>2]=s,e[s+8>>2]=A}else{if(m=e[l+24>>2],(0|l)==(0|(r=e[l+12>>2])))if((s=e[(A=l+20|0)>>2])||(s=e[(A=l+16|0)>>2])){for(;g=A,(s=e[(A=(r=s)+20|0)>>2])||(A=r+16|0,s=e[r+16>>2]););e[g>>2]=0}else r=0;else s=e[l+8>>2],e[s+12>>2]=r,e[r+8>>2]=s;if(m){A=e[l+28>>2];n:{if(e[(s=228912+(A<<2)|0)>>2]==(0|l)){if(e[s>>2]=r,r)break n;e[57153]=e[57153]&Cn(-2,A);break s}if(e[m+(e[m+16>>2]==(0|l)?16:20)>>2]=r,!r)break s}e[r+24>>2]=m,(s=e[l+16>>2])&&(e[r+16>>2]=s,e[s+24>>2]=r),(s=e[l+20>>2])&&(e[r+20>>2]=s,e[s+24>>2]=r)}}if(e[n+4>>2]=1|t,e[t+n>>2]=t,e[57157]!=(0|n))break t;return void(e[57154]=t)}e[l+4>>2]=-2&r,e[n+4>>2]=1|t,e[t+n>>2]=t}if(t>>>0<=255)return r=228648+(-8&t)|0,(s=e[57152])&(t=1<<(t>>>3))?t=e[r+8>>2]:(e[57152]=t|s,t=r),e[r+8>>2]=n,e[t+12>>2]=n,e[n+12>>2]=r,void(e[n+8>>2]=t);A=31,t>>>0<=16777215&&(A=62+((t>>>38-(r=ke(t>>>8|0))&1)-(r<<1)|0)|0),e[n+28>>2]=A,e[n+16>>2]=0,e[n+20>>2]=0,g=228912+(A<<2)|0;t:{s:{if((s=e[57153])&(r=1<<A)){for(A=t<<((0|A)!=31?25-(A>>>1|0):0),r=e[g>>2];;){if(s=r,(-8&e[r+4>>2])==(0|t))break s;if(r=A>>>29|0,A<<=1,!(r=e[16+(g=s+(4&r)|0)>>2]))break}e[g+16>>2]=n,e[n+24>>2]=s}else e[57153]=r|s,e[g>>2]=n,e[n+24>>2]=g;e[n+12>>2]=n,e[n+8>>2]=n;break t}t=e[s+8>>2],e[t+12>>2]=n,e[s+8>>2]=n,e[n+24>>2]=0,e[n+12>>2]=s,e[n+8>>2]=t}t=e[57160]-1|0,e[57160]=t||-1}}}function Br(t,r,s){var n,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0;oe=n=oe-176|0;e:{if(32&r)ee=s-((0|s)>1)|0;else{l=Ms(t,93302);t:{s:{n:{if((0|r)!=2){if(l)break n;r=0;break e}if(ee=s+1|0,F=56+(Ae=j(s,76)+133152|0)|0,U=Ms(t,89360),g=Ms(t,93318),m=Ms(t,93426),w=Ms(t,93499),l)break s;break t}ee=s+1|0,F=56+(Ae=j(s,76)+133152|0)|0,w=0}for(t=0,T=(0|(A=e[l-4>>2]))!=34?(0|A)==39?A:0:A,Ce=j(s,76)+133208|0;;){if(A=t,!(t=e[l>>2]))break t;s:{if(!T){if((0|t)==32|t-9>>>0<5)break t;if((0|t)!=47)break s;break t}if((0|A)!=92&&(0|t)==(0|T))break t}if(l=l+4|0,!((0|(x=Xa(t,x+Ce|0)+x|0))<16))break}}T=0,f[x+F|0]=0,x=j(s,76)+133168|0,l=0;t:if(U)for(t=0,F=(0|(A=e[U-4>>2]))!=34?(0|A)==39?A:0:A;;){if(A=t,!(t=e[U>>2]))break t;s:{if(!F){if((0|t)==32|t-9>>>0<5)break t;if((0|t)!=47)break s;break t}if((0|A)!=92&&(0|t)==(0|F))break t}if(U=U+4|0,!((0|(l=Xa(t,l+x|0)+l|0))<36))break}if(f[l+x|0]=0,!(!g|e[g>>2]-48>>>0>=10)){for(;T=(e[g>>2]+j(T,10)|0)-48|0,e[(g=g+4|0)>>2]-48>>>0<10;);(0|T)<=0||(T=T-1|0)}if(A=j(s,76)+133152|0,e[A+4>>2]=T,t=0,l=0,!(!m|e[m>>2]-48>>>0>=10))for(;l=(e[m>>2]+j(l,10)|0)-48|0,e[(m=m+4|0)>>2]-48>>>0<10;);e[A+12>>2]=l,l=j(s,76)+133152|0;t:{s:if(w){for(;s=f[t+93099|0],(A=e[(t<<2)+w>>2])&&(t=t+1|0,(0|s)==(0|A)););n:{i:switch(A-34|0){case 0:case 5:break i;default:break n}if(!s){t=0;break t}}for(t=0;s=f[t+93116|0],(A=e[(t<<2)+w>>2])&&(t=t+1|0,(0|s)==(0|A)););n:{i:switch(A-34|0){case 0:case 5:break i;default:break n}if(!s){t=1;break t}}for(t=0;s=f[t+93197|0],(A=e[(t<<2)+w>>2])&&(t=t+1|0,(0|s)==(0|A)););n:switch(A-34|0){case 0:case 5:break n;default:break s}if(!s){t=2;break t}}t=3}e[l+8>>2]=e[131156+(t<<3)>>2],e[Ae>>2]=r}if(Qr(137776,133168),s=Qr(n+96|0,133208),f[n+157|0]=e[33291],f[n+156|0]=e[33290],t=e[33289],e[n+152>>2]=0,f[n+158|0]=t,(0|ee)>0)for(g=0;;){if(m=1,r=j(g,76)+133152|0,c[0|(t=r+16|0)]&&ha(0,t)&&(Qr(137776,t),m=0,f[0|s]=0,f[n+158|0]=0,I[n+156>>1]=0),c[0|(t=r+56|0)]){w=Qr(s,t),A=e[33679];t:if(c[0|(t=A)])for(;;){if(!Pa(t=t+1|0,w)){Qr(w,A+1|0);break t}if(t=1+(_r(t)+t|0)|0,!c[0|t])break}m&&(f[137776]=0)}if((t=e[r+8>>2])&&(f[n+156|0]=t),(t=e[r+12>>2])&&(f[n+157|0]=t),(t=e[r+4>>2])&&(f[n+158|0]=t),(0|ee)==(0|(g=g+1|0)))break}e[n+148>>2]=s,e[n+144>>2]=137776,(t=$a(n+144|0,n+172|0))?yi(t,43)||(r=c[n+156|0],!c[134672]|((0|r)!=c[134724]?r:0)||(e[n>>2]=t,e[n+4>>2]=134672,mr(r=n+16|0,93533,n),t=137776,ua(137776,r,40))):t=92003,r=0,Pa(t,134784)&&(Qr(134784,t),r=131072)}return oe=n+176|0,r}function zr(t,r){var s,n=0,A=0,l=0,g=0,m=0;s=t+r|0;e:{t:if(!(1&(n=e[t+4>>2]))){if(!(3&n))break e;r=(n=e[t>>2])+r|0;s:{if((0|(t=t-n|0))!=e[57157]){if(n>>>0<=255){if(l=e[t+8>>2],n=n>>>3|0,(0|(A=e[t+12>>2]))!=(0|l))break s;e[57152]=e[57152]&Cn(-2,n);break t}if(m=e[t+24>>2],(0|(n=e[t+12>>2]))==(0|t))if((A=e[(l=t+20|0)>>2])||(A=e[(l=t+16|0)>>2])){for(;g=l,(A=e[(l=(n=A)+20|0)>>2])||(l=n+16|0,A=e[n+16>>2]););e[g>>2]=0}else n=0;else A=e[t+8>>2],e[A+12>>2]=n,e[n+8>>2]=A;if(!m)break t;l=e[t+28>>2];n:{if(e[(A=228912+(l<<2)|0)>>2]==(0|t)){if(e[A>>2]=n,n)break n;e[57153]=e[57153]&Cn(-2,l);break t}if(e[m+(e[m+16>>2]==(0|t)?16:20)>>2]=n,!n)break t}if(e[n+24>>2]=m,(A=e[t+16>>2])&&(e[n+16>>2]=A,e[A+24>>2]=n),!(A=e[t+20>>2]))break t;e[n+20>>2]=A,e[A+24>>2]=n;break t}if(3&~(n=e[s+4>>2]))break t;return e[57154]=r,e[s+4>>2]=-2&n,e[t+4>>2]=1|r,void(e[s>>2]=r)}e[l+12>>2]=A,e[A+8>>2]=l}t:{if(!(2&(n=e[s+4>>2]))){if(e[57158]==(0|s)){if(e[57158]=t,r=e[57155]+r|0,e[57155]=r,e[t+4>>2]=1|r,e[57157]!=(0|t))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|s))return e[57157]=t,r=e[57154]+r|0,e[57154]=r,e[t+4>>2]=1|r,void(e[t+r>>2]=r);r=(-8&n)+r|0;s:if(n>>>0<=255){if(l=e[s+8>>2],n=n>>>3|0,(0|(A=e[s+12>>2]))==(0|l)){e[57152]=e[57152]&Cn(-2,n);break s}e[l+12>>2]=A,e[A+8>>2]=l}else{if(m=e[s+24>>2],(0|s)==(0|(n=e[s+12>>2])))if((l=e[(A=s+20|0)>>2])||(l=e[(A=s+16|0)>>2])){for(;g=A,(l=e[(A=(n=l)+20|0)>>2])||(A=n+16|0,l=e[n+16>>2]););e[g>>2]=0}else n=0;else A=e[s+8>>2],e[A+12>>2]=n,e[n+8>>2]=A;if(m){l=e[s+28>>2];n:{if(e[(A=228912+(l<<2)|0)>>2]==(0|s)){if(e[A>>2]=n,n)break n;e[57153]=e[57153]&Cn(-2,l);break s}if(e[m+(e[m+16>>2]==(0|s)?16:20)>>2]=n,!n)break s}e[n+24>>2]=m,(A=e[s+16>>2])&&(e[n+16>>2]=A,e[A+24>>2]=n),(A=e[s+20>>2])&&(e[n+20>>2]=A,e[A+24>>2]=n)}}if(e[t+4>>2]=1|r,e[t+r>>2]=r,e[57157]!=(0|t))break t;return void(e[57154]=r)}e[s+4>>2]=-2&n,e[t+4>>2]=1|r,e[t+r>>2]=r}if(r>>>0<=255)return n=228648+(-8&r)|0,(A=e[57152])&(r=1<<(r>>>3))?r=e[n+8>>2]:(e[57152]=r|A,r=n),e[n+8>>2]=t,e[r+12>>2]=t,e[t+12>>2]=n,void(e[t+8>>2]=r);l=31,r>>>0<=16777215&&(l=62+((r>>>38-(n=ke(r>>>8|0))&1)-(n<<1)|0)|0),e[t+28>>2]=l,e[t+16>>2]=0,e[t+20>>2]=0,g=228912+(l<<2)|0;t:{if((A=e[57153])&(n=1<<l)){for(l=r<<((0|l)!=31?25-(l>>>1|0):0),n=e[g>>2];;){if(A=n,(-8&e[n+4>>2])==(0|r))break t;if(n=l>>>29|0,l<<=1,!(n=e[16+(g=A+(4&n)|0)>>2]))break}e[g+16>>2]=t,e[t+24>>2]=A}else e[57153]=n|A,e[g>>2]=t,e[t+24>>2]=g;return e[t+12>>2]=t,void(e[t+8>>2]=t)}r=e[A+8>>2],e[r+12>>2]=t,e[A+8>>2]=t,e[t+24>>2]=0,e[t+12>>2]=A,e[t+8>>2]=r}}function qs(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0;if(!(r=f[88105]))return t;if(t=yi(t,r)){if(!c[88106])return t;if(c[t+1|0]){if(!c[88107]){A=!!(0|(s=c[t+1|0]));e:if(s&&(0|(r=s|c[0|t]<<8))!=(0|(m=c[88106]|c[88105]<<8)))for(s=t+1|0;;){if(A=!!(0|(n=c[(t=s)+1|0])),!n)break e;if(s=t+1|0,(0|m)==(0|(r=n|r<<8&65280)))break}return A?t:0}if(c[t+2|0]){if(!c[88108]){s=t+2|0,A=!!(0|(r=c[t+2|0]));e:if(r&&(0|(r=c[t+1|0]<<16|c[0|t]<<24|r<<8))!=(0|(m=c[88106]<<16|c[88105]<<24|c[88107]<<8)))for(;;){if(t=s+1|0,A=!!(0|(n=c[s+1|0])),!n)break e;if(s=t,(0|m)==(0|(r=(r|n)<<8)))break}else t=s;return A?t-2|0:0}if(c[t+3|0]){if(!c[88109]){s=t+3|0,A=!!(0|(r=c[t+3|0]));e:if(r&&(0|(r=r|c[t+1|0]<<16|c[0|t]<<24|c[t+2|0]<<8))!=(0|(m=(t=c[88105]|c[88106]<<8|c[88107]<<16|c[88108]<<24)<<24|(65280&t)<<8|t>>>8&65280|t>>>24)))for(;;){if(t=s+1|0,A=!!(0|(n=c[s+1|0])),!n)break e;if(s=t,(0|m)==(0|(r=n|r<<8)))break}else t=s;return A?t-3|0:0}m=t,oe=w=oe-1056|0,e[(t=w+1048|0)>>2]=0,e[t+4>>2]=0,e[(t=w+1040|0)>>2]=0,e[t+4>>2]=0,e[w+1032>>2]=0,e[w+1036>>2]=0,e[w+1024>>2]=0,e[w+1028>>2]=0;e:{t:{s:{n:{if(r=c[88105]){for(;;){if(!c[l+m|0])break t;if(l=l+1|0,e[((255&r)<<2)+w>>2]=l,e[(t=(w+1024|0)+(r>>>3&28)|0)>>2]=e[t>>2]|1<<r,!(r=c[l+88105|0]))break}if(t=1,T=-1,l>>>0>1)break n}else T=-1,t=1;g=-1,s=1;break s}for(n=1,r=1;;){n:if((0|(g=c[88105+(r+T|0)|0]))!=(0|(A=c[t+88105|0])))A>>>0<g>>>0?(n=t-T|0,s=t,r=1):(T=s,s=s+1|0,n=1,r=1);else{if((0|r)==(0|n)){s=s+n|0,r=1;break n}r=r+1|0}if(!(l>>>0>(t=s+r|0)>>>0))break}if(s=1,g=-1,l>>>0<=1)t=n;else{for(t=0,A=1,r=1;;){n:if((0|(F=c[88105+(r+g|0)|0]))!=(0|(x=c[s+88105|0])))x>>>0>F>>>0?(A=s-g|0,t=s,r=1):(g=t,t=t+1|0,A=1,r=1);else{if((0|r)==(0|A)){t=t+A|0,r=1;break n}r=r+1|0}if(!(l>>>0>(s=t+r|0)>>>0))break}t=n,s=A}}for(r=t,Vn(88105,(n=(t=g+1>>>0>T+1>>>0)?s:r)+88105|0,F=(x=t?g:T)+1|0)?(n=((t=~x+l|0)>>>0<x>>>0?x:t)+1|0,A=0):A=l-n|0,ee=l-1|0,U=63|l,g=0,t=m;;){if(!(m-t>>>0>=l>>>0))if(s=hi(m,0,U)){if(m=s,s-t>>>0<l>>>0)break t}else m=m+U|0;s=c[t+ee|0],r=l;s:{if(e[(w+1024|0)+(s>>>3&28)>>2]>>>s&1)if((0|(s=e[(s<<2)+w>>2]))==(0|l)){n:{if(T=c[(s=(r=F)>>>0>g>>>0?r:g)+88105|0])for(;;){if(c[t+s|0]!=(255&T))break n;if(!(T=c[88105+(s=s+1|0)|0]))break}for(;;){if(r>>>0<=g>>>0)break e;if(c[88105+(r=r-1|0)|0]!=c[t+r|0])break}r=n,g=A;break s}r=s-x|0}else r=(s=l-s|0)>>>0>g>>>0?s:g;g=0}t=t+r|0}}t=0}oe=w+1056|0,s=t}}}}return s}function aa(t,r,s,n,A,l){var g,m,w,T,x=0,F=0,U=0;if(oe=g=oe-560|0,f[g+448|0]=0,f[g+144|0]=0,f[g+120|0]=0,w=34&l,m=r-j(F=(0|r)/100|0,100)|0,1&(T=64&c[t+106|0]?(0|r)>999|l:0)|(0|r)>99){e:{t:{s:{if(!(!w|m)){if(!vr(t,90606,g+304|0))break s;break e}if(m)break t}if(vr(t,90691,g+304|0))break e}vr(t,90725,g+304|0)}x=l,(0|r)<1e3||(x=l,!(8&c[t+105|0])|r-2e3>>>0<4294967196&&(f[g+208|0]=0,Dn(t,x=(F>>>0)/10|0,n=16384&e[t+108>>2]?0:A+1|0,!((r>>>0)%1e3|0)|w,g+272|0)||en(t,x,A,e[t+212>>2]==28012?520:(0|n)<4?(e[t+108>>2]>>>n&1)<<3:0,g+208|0),2&c[t+109|0]?(e[g+108>>2]=15,e[g+100>>2]=15,e[g+104>>2]=g+208,e[g+96>>2]=g+272,mr(g+144|0,90761,g+96|0)):(e[g+92>>2]=15,e[g+84>>2]=15,e[g+88>>2]=g+272,e[g+80>>2]=g+208,mr(g+144|0,90761,g+80|0)),n=1,1&(!!(0|(F=F-j(x,10)|0))|T)||(f[g+304|0]=0),x=1|l)),f[g+208|0]=0;e:if(!(~T&(0|F)<=0))if(!(4&c[t+106|0])|!(1&x|c[g+144|0])||vr(t,90824,g+120|0),!w|(16&c[t+109|0]?0:m)||(e[g+64>>2]=F,mr(n=g+548|0,90875,g- -64|0),U=vr(t,n,g+208|0),!(4096&e[t+108>>2])|(0|m)<=0||wn(g+208|0,133104)),n=1,1&(~T|!!(0|F))){t:{s:{n:{i:{if(!(131072&e[t+108>>2])||1&x|(0|F)!=1){if(m|U||(e[g+48>>2]=F,mr(n=g+548|0,90985,g+48|0),U=vr(t,n,g+208|0)),U||(e[g+32>>2]=F,mr(n=g+548|0,91027,g+32|0),vr(t,n,g+208|0)))break i;if((0|F)!=1)break s;break n}if(!U)break n}f[g+304|0]=0;break t}if(n=1,4&c[t+105|0])break e}en(t,F,A,0,g+208|0)}n=1}else vr(t,88875,g+208|0);e[g+28>>2]=g+304,e[g+24>>2]=g+208,e[g+20>>2]=g+120,e[g+16>>2]=g+144,mr(g+448|0,91059,g+16|0)}else x=l;f[g+132|0]=0;e:{t:{if((0|m)>0)16&c[t+109|0]&&2&x||(!(1&x)|A&&(0|r)<=100||!(64&(n=e[t+104>>2]))&(!(8388608&n)|m>>>0>9)||vr(t,90824,g+132|0),!(1&x|c[g+144|0])|!(524288&e[t+104>>2])|F||vr(t,90824,g+132|0)),f[g+336|0]=0;else if(f[g+336|0]=0,!m&n)break t;if(A?(l=e[t+108>>2],r=(0|A)<4?(l>>>A&1)<<3:0):(n=w?3:2,r=32&l|((0|r)<100?1&x?n:4|n:n),l=e[t+108>>2]),r=(0|A)==1&&e[t+212>>2]==28012?520|r:r,1048576&l&&(n=16|r,r=(0|F)>0||1&x?n:r),!en(t,m,A,256&x|r,g+336|0)|!(128&c[t+104|0]))break e;f[g+132|0]=0;break e}c[133104]&&((0|(t=_r(g+448|0)))<=0||c[447+(t=t+g|0)|0]==10&&(f[t+447|0]=0),Qr(g+336|0,133104))}e[g+8>>2]=15,e[g+12>>2]=g+336,e[g+4>>2]=g+132,e[g>>2]=g+448,mr(s,91101,g),oe=g+560|0}function ks(t){var r,s,n,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0;for(A=e[32972],e[A+64>>2]=290816,e[A+68>>2]=4104,e[A+96>>2]=0,e[A+100>>2]=0,e[A+120>>2]=90,e[A+124>>2]=100,e[A+112>>2]=64,e[A+116>>2]=256,e[A+104>>2]=5,e[A+108>>2]=0,e[A+84>>2]=100,e[A+88>>2]=64,l=e[50754],e[A+132>>2]=0,e[A+136>>2]=0,e[A+128>>2]=l,e[A+140>>2]=0,e[A+144>>2]=0,e[A+148>>2]=0,e[A+152>>2]=0,e[A+156>>2]=0,e[A+160>>2]=0,e[36435]=450,e[A+92>>2]=2,e[50870]=0,e[50871]=0,e[50872]=0,e[50873]=0,e[50880]=0,e[50881]=0,e[50882]=0,e[50883]=0,e[50890]=0,e[50891]=0,e[50892]=0,e[50893]=0,g=-3.141592653589793/+e[50754],D[25429]=g,w=-2*g,D[25430]=w,r=(g=Cs(200*g))*-g,D[25434]=r,D[25439]=r,D[25444]=r,g=(w=g*$n(2e3*w))+w,D[25433]=g,D[25438]=g,D[25443]=g,w=1-g-r,D[25432]=w,D[25437]=w,D[25442]=w,e[50902]=0,e[50903]=0,e[50900]=0,e[50901]=0,D[25449]=r,D[25448]=g,e[50912]=0,e[50913]=0,D[25447]=w,e[50910]=0,e[50911]=0,D[25454]=r,D[25453]=g,e[50922]=0,e[50923]=0,D[25452]=w,e[50920]=0,e[50921]=0,D[25459]=r,D[25458]=g,e[50932]=0,e[50933]=0,D[25457]=w,e[50930]=0,e[50931]=0,D[25464]=r,D[25463]=g,D[25462]=w,e[50942]=0,e[50943]=0,e[50940]=0,e[50941]=0,D[25469]=r,D[25468]=g,D[25467]=w,e[50952]=0,e[50953]=0,e[50950]=0,e[50951]=0,D[25474]=r,D[25473]=g,D[25472]=w,s=e[32972],l=0;I[236+(T=(l<<1)+s|0)>>1]=256,I[T+164>>1]=256,A=c[l+105376|0]<<1,I[T+254>>1]=A,I[T+182>>1]=A,I[T+200>>1]=c[l+105385|0]<<1,e[308+(A=(m=l<<2)+s|0)>>2]=e[m+105408>>2],e[A+272>>2]=0,I[T+218>>1]=0,e[m+200944>>2]=(0|j(e[m+105456>>2],22050))/e[50754],(0|(l=l+1|0))!=9;);for(ee=e[32961],l=0,n=s+344|0;;){if(A=x,F=ee,T=l,(0|(x=e[(l=131840+(m=l<<2)|0)>>2]))==-1&&(x=8e3,e[l>>2]=8e3,T&&(e[131840+(4|m)>>2]=e[m+131836>>2])),ee=e[131840+(4|m)>>2],!((0|A)>=(0|(x=(0|x)/8|0))||(0|(U=x-A|0))<=0||(m=A+1|0,l=A,1&U&&(f[344+(A+s|0)|0]=(0|F)>=255?255:F,l=m),(0|m)==(0|x))))for(Ae=ee-F|0;m=((0|j(l-A|0,Ae))/(0|U)|0)+F|0,f[l+n|0]=(0|m)>=255?255:m,Ce=((0|j((m=l+1|0)-A|0,Ae))/(0|U)|0)+F|0,f[m+n|0]=(0|Ce)>=255?255:Ce,(0|x)!=(0|(l=l+2|0)););if(l=T+2|0,!(T>>>0<10))break}l=e[32972],e[l+80>>2]=232,e[l+72>>2]=256,e[l+76>>2]=238,t||(e[49848]=0),I[l+200>>1]=(0|j(I[l+200>>1],105))/100}function vn(t,r,s){var n,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0;oe=n=oe-288|0,(0|r)!=132848&&Gs(132848,r,40),(0|(A=t+228|0))!=(0|r)&&Gs(A,r,40),e[n+88>>2]=r,e[n+84>>2]=47,e[n+80>>2]=137584,mr(A=n+96|0,84089,n+80|0),l=bi(A),(A=e[t+688>>2])&&(Zt(A),e[t+688>>2]=0),A=bn(n+96|0,84577);e:if((0|l)>0&&A)if(s=wr(l),e[t+688>>2]=s,s)if(T=lA(s,l,A),fn(A),T>>>0<=1032)e[n+16>>2]=n+96,wa(e[30450],85164,n+16|0),s=2;else if(A=e[t+688>>2],s=e[A+4>>2],!((0|(l=e[A>>2]))!=1024|(0|s)<=0)&(0|s)<134217729){A=s+A|0,e[t+684>>2]=A,F=Yt(t+5168|0,0,1024),Yt(t+7664|0,0,260),Yt(t+7924|0,255,256),Yt(t+4788|0,0,380),Yt(t+6192|0,0,512);t:if((0|(s=c[0|A]))!=7)for(;;){if((0|(l=255&s))!=6){if(!l)break t;l=e[t+684>>2],e[n+72>>2]=s<<24>>24,e[n+64>>2]=132848,e[n+68>>2]=A-l,wa(e[30450],88950,n- -64|0);break}s:{n:{i:{c:{A:switch((l=c[0|(s=A+1|0)])-18|0){case 0:break c;case 2:break A;default:break i}for(s=4+(-4&s)|0,e[t+180>>2]=s;s=(A=s)+1|0,!tA(A););for(;l=c[0|A],s=A,A=A+1|0,(0|l)!=7;);break s}if(s=A+3|0,(0|(A=((0|(A=f[A+2|0]))<65?191:-65)+A|0))>94)break n;e[4788+((A<<2)+t|0)>>2]=s;break n}switch(s=1+((m=_r(s))+s|0)|0,0|m){case 1:e[5168+((l<<2)+t|0)>>2]=s;break n;case 0:e[F>>2]=s;break n}m=c[A+2|0],(0|l)!=1?(A=e[t+7664>>2],c[0|(x=7924+(g=t+l|0)|0)]==255&&(f[0|x]=A),f[0|(g=g+7668|0)]=c[0|g]+1,e[6704+(g=(A<<2)+t|0)>>2]=s,e[t+7664>>2]=A+1,e[g+7184>>2]=l|m<<8):e[6188+((m<<2)+t|0)>>2]=s}if(c[0|s]!=7)for(;s=1+(_r(s)+s|0)|0,c[0|s]!=7;);}s=c[0|(A=s+1|0)]}for(A=e[t+688>>2]+8|0;;){for(e[692+((s=w<<2)+t|0)>>2]=A;l=c[0|A];)A=A+l|0;for(A=A+1|0,e[692+((4|s)+t|0)>>2]=A;s=c[0|A];)A=s+A|0;if(A=A+1|0,(0|(w=w+2|0))==1024)break}s=0,(0|(t=e[t+324>>2]))<=0|t>>>0<=T>>>0||(e[n+48>>2]=r,wa(e[30450],85519,n+48|0))}else e[n+40>>2]=s,e[n+36>>2]=l,e[n+32>>2]=n+96,wa(e[30450],85349,n+32|0),s=2;else fn(A),s=3;else{if(s||(e[n>>2]=n+96,wa(e[30450],84963,n)),s=1,!A)break e;fn(A)}return oe=n+288|0,s}function Qn(t){var r,s=0,n=0;for(r=Yt(t+344|0,0,256),f[t+364|0]=1,f[t+356|0]=1,f[t+357|0]=1,f[t+358|0]=1,f[t+359|0]=1,f[t+360|0]=1,f[t+361|0]=1,f[t+362|0]=1,f[t+363|0]=1,f[t+348|0]=1,f[t+349|0]=1,f[t+350|0]=1,f[t+351|0]=1,f[t+352|0]=1,f[t+353|0]=1,f[t+354|0]=1,f[t+355|0]=1,f[t+431|0]=3,f[t+429|0]=3,f[t+430|0]=3,f[t+406|0]=3,f[t+407|0]=3,f[t+408|0]=3,f[t+409|0]=3,f[t+410|0]=3,f[t+411|0]=3,f[t+412|0]=3,f[t+413|0]=3,f[t+414|0]=3,f[t+415|0]=3,f[t+416|0]=3,f[t+417|0]=3,f[t+418|0]=3,f[t+419|0]=3,f[t+420|0]=3,f[t+421|0]=3,f[t+440|0]=3,f[t+441|0]=3,f[t+442|0]=3,f[t+443|0]=3,n=21;f[344+(s=t+n|0)|0]=4|c[s+344|0],(0|(s=n+1|0))!=58;)f[0|(s=s+r|0)]=4|c[0|s],f[2+(s=n+r|0)|0]=4|c[s+2|0],f[s+3|0]=4|c[s+3|0],n=n+4|0;f[t+346|0]=4|c[t+346|0],f[t+347|0]=4|c[t+347|0],f[t+432|0]=4|c[t+432|0],f[t+433|0]=4|c[t+433|0],f[t+434|0]=4|c[t+434|0],f[t+435|0]=4|c[t+435|0],f[t+436|0]=4|c[t+436|0],f[t+437|0]=4|c[t+437|0],f[t+438|0]=4|c[t+438|0],f[t+439|0]=4|c[t+439|0],f[t+467|0]=4|c[t+467|0],f[t+468|0]=4|c[t+468|0],f[t+470|0]=4|c[t+470|0],f[t+471|0]=4|c[t+471|0],f[t+348|0]=64|c[t+348|0],f[t+349|0]=64|c[t+349|0],f[t+350|0]=64|c[t+350|0],f[t+351|0]=64|c[t+351|0],f[t+352|0]=64|c[t+352|0],f[t+353|0]=64|c[t+353|0],f[t+354|0]=64|c[t+354|0],f[t+355|0]=64|c[t+355|0],f[t+356|0]=64|c[t+356|0],f[t+357|0]=64|c[t+357|0],f[t+358|0]=64|c[t+358|0],f[t+359|0]=64|c[t+359|0],f[t+360|0]=64|c[t+360|0],f[t+361|0]=64|c[t+361|0],f[t+362|0]=64|c[t+362|0],f[t+363|0]=64|c[t+363|0],f[t+364|0]=64|c[t+364|0],f[t+406|0]=64|c[t+406|0],f[t+407|0]=64|c[t+407|0],f[t+408|0]=64|c[t+408|0],f[t+409|0]=64|c[t+409|0],f[t+410|0]=64|c[t+410|0],f[t+411|0]=64|c[t+411|0],f[t+412|0]=64|c[t+412|0],f[t+413|0]=64|c[t+413|0],f[t+414|0]=64|c[t+414|0],f[t+415|0]=64|c[t+415|0],f[t+416|0]=64|c[t+416|0],f[t+417|0]=64|c[t+417|0],f[t+418|0]=64|c[t+418|0],f[t+419|0]=64|c[t+419|0],f[t+420|0]=64|c[t+420|0],f[t+440|0]=64|c[t+440|0],f[t+441|0]=64|c[t+441|0],f[t+429|0]=64|c[t+429|0],f[t+430|0]=64|c[t+430|0],f[t+431|0]=64|c[t+431|0],f[t+442|0]=64|c[t+442|0],f[t+443|0]=64|c[t+443|0],e[t+40>>2]=1,e[t+204>>2]=e[t+600>>2]+77}function Sn(t,r,s,n,A,l,g,m,w){var T,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0;oe=T=oe-128|0;e:{t:{if(qt(l,g,m,w,0,0,0,0)){F=65535&w;s:n:{if((0|(ee=w>>>16&32767))!=32767){if(x=4,ee)break n;x=l|m|g|F?3:2;break s}x=!(l|m|g|F)}if((0|(Ae=32767&(Ze=A>>>16|0)))!=32767&&x)break t}Kt(T+16|0,r,s,n,A,l,g,m,w),$s(T,r=e[T+16>>2],n=e[T+20>>2],A=e[T+24>>2],s=e[T+28>>2],r,n,A,s),n=e[T+8>>2],A=e[T+12>>2],m=e[T>>2],w=e[T+4>>2];break e}if(ee=m,(0|qt(r,s,x=n,Ce=2147483647&A,l,g,m,U=2147483647&w))<=0){if(qt(r,s,x,Ce,l,g,ee,U)){m=r,w=s;break e}Kt(T+112|0,r,s,n,A,0,0,0,0),n=e[T+120>>2],A=e[T+124>>2],m=e[T+112>>2],w=e[T+116>>2]}else{if(Me=w>>>16&32767,Ae?(w=s,m=r):(Kt(T+96|0,r,s,x,Ce,0,0,0,1081540608),x=e[T+104>>2],Ce=m=e[T+108>>2],Ae=(m>>>16|0)-120|0,w=e[T+100>>2],m=e[T+96>>2]),Me||(Kt(T+80|0,l,g,ee,U,0,0,0,1081540608),ee=e[T+88>>2],U=l=e[T+92>>2],Me=(l>>>16|0)-120|0,g=e[T+84>>2],l=e[T+80>>2]),We=ee,ut=65535&U|65536,Ce=65535&Ce|65536,(0|Ae)>(0|Me)){for(;;){if(ee=(U=x-We|0)-(F=(0|g)==(0|w)&l>>>0>m>>>0|g>>>0>w>>>0)|0,(0|(F=(Ce-((x>>>0<We>>>0)+ut|0)|0)-(F>>>0>U>>>0)|0))>0|(0|F)>=0){if(x=m,!((m=m-l|0)|ee|(w=w-((l>>>0>x>>>0)+g|0)|0)|F)){Kt(T+32|0,r,s,n,A,0,0,0,0),n=e[T+40>>2],A=e[T+44>>2],m=e[T+32>>2],w=e[T+36>>2];break e}F=F<<1|ee>>>31,x=ee<<1|w>>>31}else F=Ce<<1|x>>>31,x=x<<1|w>>>31;if(Ce=F,F=w<<1|m>>>31,m<<=1,w=F,!((0|(Ae=Ae-1|0))>(0|Me)))break}Ae=Me}if(ee=(U=x-We|0)-(F=(0|g)==(0|w)&l>>>0>m>>>0|g>>>0>w>>>0)|0,U=F=(Ce-((x>>>0<We>>>0)+ut|0)|0)-(F>>>0>U>>>0)|0,(0|F)<0)ee=x,U=Ce;else if(x=m,!((m=m-l|0)|ee|(w=w-((l>>>0>x>>>0)+g|0)|0)|U)){Kt(T+48|0,r,s,n,A,0,0,0,0),n=e[T+56>>2],A=e[T+60>>2],m=e[T+48>>2],w=e[T+52>>2];break e}if((0|U)==65535|U>>>0<65535)for(;r=w>>>31|0,Ae=Ae-1|0,Ce=w<<1|m>>>31,m<<=1,w=Ce,s=r,r=U<<1|ee>>>31,ee=s|ee<<1,U=r,r>>>0<65536;);r=32768&Ze,(0|Ae)<=0?(Kt(T- -64|0,m,w,ee,65535&U|(r|Ae+120)<<16,0,0,0,1065811968),n=e[T+72>>2],A=e[T+76>>2],m=e[T+64>>2],w=e[T+68>>2]):(n=ee,A=65535&U|(r|Ae)<<16)}}e[t>>2]=m,e[t+4>>2]=w,e[t+8>>2]=n,e[t+12>>2]=A,oe=T+128|0}function ci(t,r,s){var n,A,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0;if(oe=n=oe-1040|0,(0|(g=Uo(t,589824,0)))>=0&&((l=bA(1,2072))?e[l+8>>2]=g:(At(0|g),l=0)),A=l,l){e:if(l=ul(A))for(ee=e[30450],U=(n+96|0)+r|0;;){if((0|(g=e[50303]))>=348){e[n+4>>2]=350,e[n>>2]=g+1,wa(ee,91860,n);break e}if(c[l+19|0]!=46)if(e[n+88>>2]=l+19,e[n+84>>2]=47,e[n+80>>2]=t,mr(l=n+96|0,91924,n+80|0),(0|(l=bi(l)))!=-31){if(!((0|l)<=0)&&(F=bn(n+96|0,85712))){m=0,f[n+832|0]=0,f[n+752|0]=0,e[n+360>>2]=0,e[n+356>>2]=4,T=0;t:for(;;){for(x=299-T|0;Wr(n+912|0,120,F);){l=n+912|0;s:{if(c[n+912|0]!=35){n:if(!((0|(l=_r(n+912|0)-1|0))<=0))for(;;){if(!((0|(g=f[0|(w=(n+912|0)+l|0)]))==32|g-9>>>0<5))break n;if(f[0|w]=0,!((0|(l=l-1|0))>0))break}if(!(l=qs(n+912|0)))break s}f[0|l]=0}l=n+912|0;s:if(g=c[n+912|0])for(;;){if(Za(g<<24>>24))break s;if(!(g=c[0|(l=l+1|0)]))break}if(f[0|l]=0,c[n+912|0]){l=l+1|0;s:switch(Oi(131904,n+912|0)-1|0){case 0:for(;g=l,l=l+1|0,(0|(w=f[0|g]))==32|w-9>>>0<5;);ua(n+832|0,g,80);continue;case 1:if(f[n+672|0]=0,e[n+364>>2]=5,g=n+672|0,e[n+16>>2]=g,e[n+20>>2]=n+364,Jt(l,86237,n+16|0),(g=_r(g)+2|0)>>>0>=x>>>0)continue;f[0|(l=(n+368|0)+T|0)]=e[n+364>>2],Qr(l+1|0,n+672|0),m=m+1|0,T=g+T|0;continue t;case 2:if(e[n+52>>2]=n+360,e[n+48>>2]=n+752,Jt(l,86237,n+48|0),!s)continue;e[n+32>>2]=U,wa(ee,92042,n+32|0);continue;case 5:break s;default:continue}e[n+64>>2]=n+356,Jt(l,87268,n- -64|0)}}break}f[(n+368|0)+T|0]=0,g=Oi(132112,n+752|0),m?(w=_r(U)+T|0,x=Jr((m=bA(28+(_r(n+832|0)+w|0)|0,1))+24|0,n+368|0,l=T+1|0),e[m+4>>2]=x,l=Qr(l+x|0,U),e[m>>2]=l,e[m+8>>2]=l,c[n+832|0]&&(e[m>>2]=Qr(2+(w+x|0)|0,n+832|0)),l=e[n+360>>2],f[m+14|0]=0,f[m+12|0]=g,f[m+13|0]=l,f[m+15|0]=e[n+356>>2],fn(F),l=e[50303],e[50303]=l+1,e[201216+(l<<2)>>2]=m):fn(F)}}else ci(n+96|0,r,s);if(!(l=ul(A)))break}JA(e[A+8>>2]),Zt(A)}oe=n+1040|0}function ui(t,r){var s,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0;oe=s=oe-352|0;e:if(t||(t=e[136284+(r<<4)>>2])){c[0|t]!=47&&(e[s+12>>2]=t,e[s+4>>2]=47,e[s+8>>2]=47,e[s>>2]=137584,mr(t=s+16|0,84114,s)),f[s+240|0]=0;t:{s:{if(n=bn(t,84577)){if((0|kA(n,20))==-1)break t;if(l=eA(n),A=eA(n),m=eA(n),!((0|l)!=65537|(0|A)!=e[50754])&(0|m)==A<<1)break s;fn(n),I[s+256>>1]=c[84864]|c[84865]<<8,t=c[84852]|c[84853]<<8|c[84854]<<16|c[84855]<<24,e[s+240>>2]=c[84848]|c[84849]<<8|c[84850]<<16|c[84851]<<24,e[s+244>>2]=t,t=c[84860]|c[84861]<<8|c[84862]<<16|c[84863]<<24,e[s+248>>2]=c[84856]|c[84857]<<8|c[84858]<<16|c[84859]<<24,e[s+252>>2]=t,oe=l=oe-16|0;n:{if((n=_r(t=s+240|0))>>>0>=6&&!Vn(m=(t+n|0)-6|0,84274,6)){for(T=100;;){for(w=0,oe=n=oe-16|0,c[227196]||(f[227197]=Le(),f[227196]=1),F=+ie(),ge(g=F/1e3)<9223372036854776e3?(x=ge(g)>=1?~~(g>0?Ee(Ne(23283064365386963e-26*g),4294967295):Xe(23283064365386963e-26*(g-+(~~g>>>0>>>0))))>>>0:0,A=~~g>>>0):(x=-2147483648,A=0),e[n>>2]=A,e[n+4>>2]=x,g=1e3*(F-(+(ds(A,x,1e3,0)>>>0)+4294967296*+(0|H)))*1e3,A=ge(g)<2147483648?~~g:-2147483648,e[n+8>>2]=A,A=m+(n>>>4|0)^j(e[n+8>>2],65537);f[m+w|0]=65+(15&A|A<<1&32),A=A>>>5|0,(0|(w=w+1|0))!=6;);if(oe=n+16|0,e[l>>2]=384,(0|(n=Uo(t,194,l)))>=0)break n;if(T=T-1|0,e[56798]!=20||!T)break}Jr(m,84274,6)}else e[56798]=28;n=-1}oe=l+16|0,(0|n)<0||JA(n)}if(!(n=bn(t,84577))){t=Vi(0,e[56798],t);break e}}if((0|(l=bi(t)))<0){fn(n),t=Vi(0,0-l|0,t);break e}if((0|kA(n,0))==-1){r=e[56798],fn(n),t=Vi(0,r,t);break e}if(!(A=Fa(e[(m=136280+(r<<4)|0)>>2],l))){fn(n),t=48;break e}if((0|lA(A,l,n))!=(0|l)){r=e[56798],fn(n),c[s+240|0]&&yA(s+240|0),Zt(A),t=Vi(0,r,t);break e}fn(n),c[s+240|0]&&yA(s+240|0),e[136276+(r<<4)>>2]=(c[A+40|0]|c[A+41|0]<<8|c[A+42|0]<<16|c[A+43|0]<<24)/2,e[m>>2]=A,t=0;break e}r=e[56798],fn(n),t=Vi(0,r,t)}else t=28;return oe=s+352|0,t}function di(t,r,s,n,A,l){var g,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0;for(f[0|s]=1,g=1&l,ut=1,Ce=-1,Me=-1,x=1,l=r;;){mt=Ze-2|0,We=F,ee=Me;e:{t:{for(;;){if(!(U=c[0|l])){Me=ee,F=We;break e}if(l=l+1|0,Ae=e[144464+(U<<2)>>2]){s:{if((0|(m=c[Ae+11|0]))!=1){if(16&c[Ae+6|0]|(0|m)!=2)break s;f[0|(F=s+x|0)]=Ce,m=(0|Ce)<4|(0|ee)>(0|Ce),!(2&c[Ae+4|0])|!g|(0|Ce)>=0||(f[0|F]=1),F=m?We:x,Me=m?ee:Ce,Ce=-1,x=x+1|0;break t}if(!P[Ae+8>>1]){m=0,T=x;n:if((0|U)!=8)m=c[Ae+14|0],e[A>>2]&&m>>>0>=4||(ee=(0|m)<(0|ee)?ee:m,Ce=m);else{for(;;){if(U=m,T=T-1|0,e[A>>2]|(0|T)<=0||(0|(Ae=f[0|(w=s+T|0)]))>3)break n;if(m=U+1|0,!(Ae>>>0<2))break}if(f[0|w]=4,We=(0|ee)<4?T:We,ee=(0|ee)<=4?4:ee,T>>>0<2)break n;if(Ae=3&(T=~U+Ze|0),m=1,mt-U>>>0>=3)for(U=-4&T,T=0;c[0|(w=s+m|0)]==4&&(f[0|w]=3),c[w+1|0]==4&&(f[w+1|0]=3),c[w+2|0]==4&&(f[w+2|0]=3),c[w+3|0]==4&&(f[w+3|0]=3),m=m+4|0,(0|U)!=(0|(T=T+4|0)););if(w=0,!Ae)break n;for(;c[0|(U=s+m|0)]==4&&(f[0|U]=3),m=m+1|0,(0|Ae)!=(0|(w=w+1|0)););}if(ut)continue;break e}}break}}Me=ee,F=We,(0|U)==20&&(f[s+x|0]=g&&(0|Ce)<0?1:Ce,x=x+1|0)}if(f[0|r]=U,Ze=x-1|0,r=r+1|0,ut=(0|x)<99)continue}break}f[s+x|0]=1,f[0|r]=0;e:if((0|(r=e[A>>2]))>0)Me=4,(0|r)>=(0|x)&&(e[A>>2]=Ze,r=Ze),f[r+s|0]=4,F=e[A>>2];else if((0|Me)==5&&(Me=4,!((0|x)<2))){if(l=1,ee=1&(r=x-1|0),(0|x)!=2)for(We=-2&r,T=0;;){w=4;t:{s:{n:switch(c[0|(r=(m=l)+s|0)]-4|0){case 1:break s;case 0:break n;default:break t}w=2&c[t+14|0]?1:3,m=F}f[0|r]=w,F=m}w=4;t:{s:{n:switch(c[0|(r=(m=l+1|0)+s|0)]-4|0){case 1:break s;case 0:break n;default:break t}w=2&c[t+14|0]?1:3,m=F}f[0|r]=w,F=m}if(l=l+2|0,(0|We)==(0|(T=T+2|0)))break}if(ee){w=4;t:{s:switch(c[0|(r=s+l|0)]-4|0){case 1:break t;case 0:break s;default:break e}w=2&c[t+14|0]?1:3,l=F}f[0|r]=w,F=l}}return e[A>>2]=F,e[n>>2]=x,Me}function Fa(t,r){var s,n,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0;if(!t)return wr(r);if(r>>>0>=4294967232)return e[56798]=48,0;s=r>>>0<11?16:r+11&-8,g=-8&(n=e[4+(m=t-8|0)>>2]);e:if(3&n){w=g+m|0;t:if(g>>>0>=s>>>0){if((l=g-s|0)>>>0<16)break t;e[m+4>>2]=1&n|s|2,e[4+(A=m+s|0)>>2]=3|l,e[w+4>>2]=1|e[w+4>>2],zr(A,l)}else if(e[57158]!=(0|w))if(e[57157]!=(0|w)){if(2&(l=e[w+4>>2])||(x=g+(-8&l)|0)>>>0<s>>>0)break e;U=x-s|0;s:if(l>>>0<=255){if(g=e[w+8>>2],A=l>>>3|0,(0|(l=e[w+12>>2]))==(0|g)){e[57152]=e[57152]&Cn(-2,A);break s}e[g+12>>2]=l,e[l+8>>2]=g}else{if(F=e[w+24>>2],(0|(T=e[w+12>>2]))==(0|w))if((A=e[(g=w+20|0)>>2])||(A=e[(g=w+16|0)>>2])){for(;l=g,T=A,(A=e[(g=A+20|0)>>2])||(g=T+16|0,A=e[T+16>>2]););e[l>>2]=0}else T=0;else A=e[w+8>>2],e[A+12>>2]=T,e[T+8>>2]=A;if(F){l=e[w+28>>2];n:{if(e[(A=228912+(l<<2)|0)>>2]==(0|w)){if(e[A>>2]=T,T)break n;e[57153]=e[57153]&Cn(-2,l);break s}if(e[(e[F+16>>2]==(0|w)?16:20)+F>>2]=T,!T)break s}e[T+24>>2]=F,(A=e[w+16>>2])&&(e[T+16>>2]=A,e[A+24>>2]=T),(A=e[w+20>>2])&&(e[T+20>>2]=A,e[A+24>>2]=T)}}U>>>0<=15?(e[m+4>>2]=1&n|x|2,e[4+(A=m+x|0)>>2]=1|e[A+4>>2]):(e[m+4>>2]=1&n|s|2,e[4+(l=m+s|0)>>2]=3|U,e[4+(A=m+x|0)>>2]=1|e[A+4>>2],zr(l,U))}else{if((l=g+e[57154]|0)>>>0<s>>>0)break e;(A=l-s|0)>>>0>=16?(e[m+4>>2]=1&n|s|2,e[4+(g=m+s|0)>>2]=1|A,e[(l=l+m|0)>>2]=A,e[l+4>>2]=-2&e[l+4>>2]):(e[m+4>>2]=l|1&n|2,e[4+(A=l+m|0)>>2]=1|e[A+4>>2],A=0,g=0),e[57157]=g,e[57154]=A}else{if((g=g+e[57155]|0)>>>0<=s>>>0)break e;e[m+4>>2]=1&n|s|2,A=g-s|0,e[4+(l=m+s|0)>>2]=1|A,e[57155]=A,e[57158]=l}A=m}else{if(s>>>0<256||g>>>0>=s+4>>>0&&(A=m,g-s>>>0<=e[57272]<<1>>>0))break e;A=0}return A?A+8|0:(m=wr(r))?(Jr(m,t,r>>>0>(A=(3&(A=e[t-4>>2])?-4:-8)+(-8&A)|0)>>>0?A:r),Zt(t),m):0}function ai(){var t,r,s=0,n=0;return t=Wn(12),e[t>>2]=22050,r=Wn(432),e[(n=r)+4>>2]=0,e[n+8>>2]=0,e[n>>2]=132304,e[n+32>>2]=0,e[n+12>>2]=0,e[n+16>>2]=0,e[n+20>>2]=0,e[n+24>>2]=0,Yt(n+40|0,0,376),e[n+420>>2]=0,e[n+424>>2]=-1,f[n+416|0]=1,s=Yt(Wn(408),0,408),e[n+28>>2]=s,f[s+8|0]=1,e[t+4>>2]=n,s=Wn(1096),e[s+8>>2]=22050,e[s+4>>2]=22050,e[s>>2]=132352,e[s+64>>2]=22050,e[s+56>>2]=0,e[s+60>>2]=0,e[s+32>>2]=0,e[s+36>>2]=0,e[s+24>>2]=22050,e[s+16>>2]=0,e[s+20>>2]=0,e[s+40>>2]=0,e[s+44>>2]=0,f[s+48|0]=0,e[s+128>>2]=0,e[s+132>>2]=0,I[s+96>>1]=0,e[s+72>>2]=22050,e[s+136>>2]=0,e[s+140>>2]=0,I[s+168>>1]=0,e[s+144>>2]=22050,e[s+200>>2]=0,e[s+204>>2]=0,e[s+208>>2]=0,e[s+212>>2]=0,e[s+216>>2]=22050,I[s+240>>1]=0,e[s+280>>2]=0,e[s+284>>2]=0,e[s+272>>2]=0,e[s+276>>2]=0,e[s+288>>2]=22050,I[s+312>>1]=0,e[s+344>>2]=0,e[s+348>>2]=0,e[s+352>>2]=0,e[s+356>>2]=0,e[s+360>>2]=22050,I[s+384>>1]=0,e[s+416>>2]=0,e[s+420>>2]=0,e[s+424>>2]=0,e[s+428>>2]=0,e[s+432>>2]=22050,I[s+456>>1]=0,e[s+488>>2]=0,e[s+492>>2]=0,e[s+496>>2]=0,e[s+500>>2]=0,e[s+504>>2]=22050,I[s+528>>1]=1,e[s+560>>2]=0,e[s+564>>2]=0,e[s+568>>2]=0,e[s+572>>2]=0,I[s+600>>1]=0,e[s+576>>2]=22050,e[s+640>>2]=0,e[s+644>>2]=0,e[s+632>>2]=0,e[s+636>>2]=0,I[s+680>>1]=0,e[s+656>>2]=22050,e[s+648>>2]=22050,e[s+720>>2]=0,e[s+724>>2]=0,e[s+712>>2]=0,e[s+716>>2]=0,I[s+752>>1]=0,e[s+728>>2]=22050,e[s+792>>2]=0,e[s+796>>2]=0,e[s+784>>2]=0,e[s+788>>2]=0,I[s+824>>1]=0,e[s+800>>2]=22050,e[s+864>>2]=0,e[s+868>>2]=0,e[s+856>>2]=0,e[s+860>>2]=0,e[s+872>>2]=22050,I[s+896>>1]=0,e[s+936>>2]=0,e[s+940>>2]=0,e[s+928>>2]=0,e[s+932>>2]=0,I[s+968>>1]=0,e[s+944>>2]=22050,e[s+1008>>2]=0,e[s+1012>>2]=0,e[s+1e3>>2]=0,e[s+1004>>2]=0,I[s+1040>>1]=0,e[s+1016>>2]=22050,e[s+1088>>2]=0,e[(n=s+1080|0)>>2]=0,e[n+4>>2]=0,e[(n=s+1072|0)>>2]=0,e[n+4>>2]=0,e[t+8>>2]=s,rs[e[e[s>>2]+4>>2]](s,r),t}function fi(t,r,s){var n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0;e:if(F=e[50759]){if(n=e[50980],A=j(n,80)+222176|0,(0|(w=(0|(A=(0|(A=(e[A+12>>2]+e[A>>2]|0)/(0|t)|0))<(0|(x=((0|j(e[50754],19))/40<<16)/(0|t)|0))?A:x))>=399?399:A))>=0&&(Yt(r,0,4+(w<<2)|0),n=e[50980]),(0|n)>=0)for(U=e[50801];;){if(l=j(g,80)+222176|0,e[l+4>>2]&&(m=e[l>>2])){if(ee=m+e[l+12>>2]|0,n=1+((m-e[l+8>>2]|0)/(0|t)|0)|0,(0|m)>(0|(n=j(A=(0|n)<=1?1:n,t))))for(;e[(T=(A<<2)+r|0)>>2]=e[T>>2]+j(e[l+4>>2],c[((m-n|0)/(e[l+8>>2]>>8)|0)+U|0]),A=A+1|0,(0|m)>(0|(n=t+n|0)););if(!((0|n)>=(0|ee)))for(;e[(T=(A<<2)+r|0)>>2]=e[T>>2]+j(e[l+4>>2],c[((n-m|0)/(e[l+12>>2]>>8)|0)+U|0]),A=A+1|0,(0|ee)>(0|(n=t+n|0)););}if(!((0|(g=g+1|0))<=e[50980]))break}if(A=1,!((0|(l=65536e3/(0|t)|0))<=0||(0|(n=j(e[55565],10)))<=0))for(l=(0|n)/(0|l)|0;e[(m=(A<<2)+r|0)>>2]=e[m>>2]+n,A=A+1|0,(0|(n=n-l|0))>0;);if((0|g)<=8)for(;A=203216+(n=g<<2)|0,l=j(g,80)+222176|0,m=e[l+4>>2]>>14,e[A>>2]=(0|j(j(m,m),5))/2,s?n=e[n+203264>>2]:(m=n+203264|0,n=e[l>>2]/(0|t)|0,e[m>>2]=n),(0|n)>=(0|x)&&(e[A>>2]=0),(0|(g=g+1|0))!=9;);if(A=0,(0|w)>=0)for(n=0;l=e[(g=(n<<2)+r|0)>>2]>>15,l=j(l,l)>>8,e[g>>2]=l,(0|A)<=524287999&&(e[g>>2]=j(l,c[344+((A>>19)+F|0)|0])>>13),A=t+A|0,g=(0|n)!=(0|w),n=n+1|0,g;);if(e[r+4>>2]=(0|j(e[r+4>>2],c[203300]?6:10))/8,1&s)for(t=e[50826],n=1;;){if(e[203312+(s=n<<2)>>2]=e[r+s>>2]-e[t+s>>2]>>3,(0|(s=n+1|0))==30)break e;e[203312+(s<<=2)>>2]=e[r+s>>2]-e[t+s>>2]>>3,n=n+2|0}}else w=1;return w}function Ri(t,r,s,n){var A,l=0,g=0;oe=A=oe-176|0,f[0|t]=0,I[A+80>>1]=24320,e[A+104>>2]=0,e[A+108>>2]=0,f[82+(Xa(s,l=A+80|2)+A|0)|0]=0;e:{t:{if(!n){if(n=A+80|1,e[A+12>>2]=n,ba(r,A+12|0,A+16|0,A+104|0,0,0)||(e[A+12>>2]=l,ba(r,A+12|0,A+16|0,A+104|0,0,0)||(f[A+81|0]=32,Bs(r,l,A+16|0,60,0,0,0))),(s=c[A+16|0])&&(0|s)!=21)break t;s:{if(e[r+212>>2]!=25966){if(cA(85719,188772,189296),f[A+81|0]=95,e[A+12>>2]=n,ba(e[47193],A+12|0,A+16|0,A+104|0,0,0)||(e[A+12>>2]=l,ba(e[47193],A+12|0,A+16|0,A+104|0,0,0)),c[A+16|0])break s;Mn(e[e[32972]+60>>2]),s=c[A+16|0]}if(255&s)break t;r=c[87124]|c[87125]<<8|c[87126]<<16|c[87127]<<24,s=c[87120]|c[87121]<<8|c[87122]<<16|c[87123]<<24,f[0|t]=s,f[t+1|0]=s>>>8,f[t+2|0]=s>>>16,f[t+3|0]=s>>>24,f[t+4|0]=r,f[t+5|0]=r>>>8,f[t+6|0]=r>>>16,f[t+7|0]=r>>>24,f[t+16|0]=c[87136],r=c[87132]|c[87133]<<8|c[87134]<<16|c[87135]<<24,s=c[87128]|c[87129]<<8|c[87130]<<16|c[87131]<<24,f[t+8|0]=s,f[t+9|0]=s>>>8,f[t+10|0]=s>>>16,f[t+11|0]=s>>>24,f[t+12|0]=r,f[t+13|0]=r>>>8,f[t+14|0]=r>>>16,f[t+15|0]=r>>>24;break e}n=A+16|0,l=A+104|0,oe=s=oe-112|0,(g=e[47193])?(Rr(g,n,l,-1,0),Tr(l=n,n=s+48|0),r=e[r+212>>2],f[s+43|0]=r>>>24,f[0|(g=(l=s+43|0)+(r>>>0>16777215)|0)]=r>>>16,f[0|(g=g+!!(16711680&r)|0)]=r>>>8,f[0|(g=g+!!(65280&r)|0)]=r,f[g+!!(255&r)|0]=0,e[s+16>>2]=85719,e[s+24>>2]=l,e[s+20>>2]=n,mr(t,85662,s+16|0)):(Rr(r,n,l,-1,0),Tr(n,r=s+48|0),e[s>>2]=r,mr(t,85451,s)),oe=s+112|0,Mn(e[e[32972]+60>>2]);break e}if(e[A+12>>2]=l,ba(r,A+12|0,A+16|0,A+104|0,0,0),!c[A+16|0])break e}Rr(s=r,r=A+16|0,A+104|0,-1,0),Tr(s=r,r=A+112|0),e[A>>2]=r,mr(t,85451,A)}return oe=A+176|0,t}function Xn(t,r){var s,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0;if(oe=s=oe-112|0,e[s+72>>2]=-1,e[(n=s- -64|0)>>2]=-1,e[n+4>>2]=-1,e[s+56>>2]=-1,e[s+60>>2]=-1,e[s+48>>2]=-1,e[s+52>>2]=-1,e[s+40>>2]=-1,e[s+44>>2]=-1,e[s+32>>2]=-1,e[s+36>>2]=-1,e[s+24>>2]=-1,e[s+28>>2]=-1,e[s+16>>2]=-1,e[s+20>>2]=-1,(0|r)>0){for(l=e[s+72>>2],g=e[s+68>>2],m=e[s+64>>2],w=e[s+60>>2],T=e[s+56>>2],x=e[s+52>>2],F=e[s+48>>2],U=e[s+44>>2],ee=e[s+40>>2],Ae=e[s+36>>2],Ce=e[s+32>>2],Me=e[s+28>>2],We=e[s+24>>2],Ze=e[s+20>>2],ut=e[s+16>>2];A=l,l=(0|(l=e[60+(n=134912+(mt<<6)|0)>>2]))<0?A:l,A=g,g=(0|(g=e[n+56>>2]))<0?A:g,A=m,m=(0|(m=e[n+52>>2]))<0?A:m,A=w,w=(0|(w=e[n+48>>2]))<0?A:w,A=T,T=(0|(T=e[n+44>>2]))<0?A:T,A=x,x=(0|(x=e[n+40>>2]))<0?A:x,A=F,F=(0|(F=e[n+36>>2]))<0?A:F,A=U,U=(0|(U=e[n+32>>2]))<0?A:U,A=ee,ee=(0|(ee=e[n+28>>2]))<0?A:ee,A=Ae,Ae=(0|(Ae=e[n+24>>2]))<0?A:Ae,A=Ce,Ce=(0|(Ce=e[n+20>>2]))<0?A:Ce,A=Me,Me=(0|(Me=e[n+16>>2]))<0?A:Me,A=We,We=(0|(We=e[n+12>>2]))<0?A:We,A=Ze,Ze=(0|(Ze=e[n+8>>2]))<0?A:Ze,ut=(0|(n=e[n+4>>2]))<0?ut:n,(0|(mt=mt+1|0))!=(0|r););e[s+72>>2]=l,e[s+68>>2]=g,e[s+64>>2]=m,e[s+60>>2]=w,e[s+56>>2]=T,e[s+52>>2]=x,e[s+48>>2]=F,e[s+44>>2]=U,e[s+40>>2]=ee,e[s+36>>2]=Ae,e[s+32>>2]=Ce,e[s+28>>2]=Me,e[s+24>>2]=We,e[s+20>>2]=Ze,e[s+16>>2]=ut}for(r=0;;){if((0|(n=e[(l=r<<2)+(s+16|0)>>2]))!=e[(l=l+134848|0)>>2]){f[s+80|0]=0;e:{t:switch(r-1|0){case 4:e[47201]=n-1;break e;case 5:e[47200]=n;break e;case 0:case 1:case 2:case 3:case 11:break t;default:break e}e[s+4>>2]=n,e[s>>2]=1,e[s+8>>2]=f[r+102812|0],mr(s+80|0,91942,s)}e[l>>2]=n,n=s+80|0,Qr(e[t>>2]+189424|0,n),e[t>>2]=e[t>>2]+_r(n)}if((0|(r=r+1|0))==15)break}oe=s+112|0}function Zn(t){var r,s,n,A=0,l=0,g=0,m=0;for(A=17,e[t+328>>2]=17,e[t+224>>2]=0,e[t+216>>2]=1105,e[t+220>>2]=1072,e[t+600>>2]=1056,e[t+8180>>2]=105296,g=Yt(t+344|0,0,256),f[t+393|0]=1,f[t+365|0]=1,f[t+360|0]=1,f[t+545|0]=1,f[t+529|0]=1,f[t+391|0]=1,f[t+379|0]=1,f[t+374|0]=1,f[t+489|0]=1,f[t+487|0]=1,f[t+398|0]=1,f[t+387|0]=1,f[t+388|0]=2,f[t+389|0]=1,f[t+390|0]=1,f[t+385|0]=2,f[t+383|0]=2,f[t+368|0]=1,f[t+369|0]=2,l=104224;f[0|(A=A+g|0)]=4|c[0|A],A=g+c[l+1|0]|0,f[0|A]=4|c[0|A],A=g+c[l+2|0]|0,f[0|A]=4|c[0|A],A=c[0|(l=l+3|0)],(0|l)!=104251;);f[t+386|0]=8|c[t+386|0],f[t+382|0]=8|c[t+382|0],f[t+384|0]=8|c[t+384|0],f[t+369|0]=16|c[t+369|0],f[t+370|0]=16|c[t+370|0],f[t+371|0]=16|c[t+371|0],l=c[t+361|0],g=c[t+362|0],A=c[t+363|0],m=c[t+364|0],r=c[t+366|0],s=c[t+367|0],f[t+372|0]=16|c[t+372|0],f[t+373|0]=16|c[t+373|0],f[t+375|0]=16|c[t+375|0],f[t+376|0]=16|c[t+376|0],f[t+377|0]=16|c[t+377|0],f[t+378|0]=16|c[t+378|0],f[t+380|0]=16|c[t+380|0],f[t+381|0]=16|c[t+381|0],f[t+383|0]=16|c[t+383|0],f[t+385|0]=16|c[t+385|0],n=c[t+388|0],f[t+367|0]=48|s,f[t+366|0]=40|r,f[t+364|0]=48|m,f[t+363|0]=48|A,f[t+362|0]=48|g,f[t+361|0]=48|l,f[t+388|0]=80|n,l=c[t+390|0],g=c[t+391|0],A=c[t+393|0],f[t+360|0]=128|c[t+360|0],m=c[t+365|0],f[t+393|0]=192|A,f[t+365|0]=128|m,f[t+368|0]=128|c[t+368|0],f[t+374|0]=128|c[t+374|0],f[t+379|0]=128|c[t+379|0],f[t+387|0]=128|c[t+387|0],A=c[t+389|0],f[t+391|0]=192|g,f[t+390|0]=192|l,f[t+389|0]=128|A,f[t+529|0]=128|c[t+529|0],f[t+545|0]=128|c[t+545|0],f[t+489|0]=128|c[t+489|0],f[t+487|0]=128|c[t+487|0],f[t+398|0]=128|c[t+398|0]}function ba(t,r,s,n,A,l){var g,m=0,w=0,T=0,x=0,F=0,U=0;oe=g=oe-192|0,m=F=e[r>>2];e:{t:{for(;w=1,(0|(T=f[0|m]))>=0||(w=2,T>>>0<4294967264||(w=T>>>0<4294967280?3:4)),!(c[0|(T=w+m|0)]!=32|c[T+1|0]!=46);){if(x-160>>>0<4294967135)break t;Jr((U=g+32|0)+x|0,m,w),f[(w=w+x|0)+U|0]=46,m=T+3|0,x=w+1|0}if(x){for(w=0;T=w,w=w+1|0,223&c[m+T|0];);if(!(1+(U=T+x|0)>>>0>160)&&(Jr((w=g+32|0)+x|0,m,T),f[w+U|0]=0,Pn(t,w,m,s,n,A,l))){e[n>>2]=128|e[n>>2],e[33264]=x,t=1;break e}}}for(m=0;;){if(F=(w=F)+1|0,223&(w=c[0|w]))if(!m|(0|w)!=46|f[31+(m+g|0)|0]-48>>>0>=10){if(f[(g+32|0)+m|0]=w,w=159,(0|(m=m+1|0))!=159)continue}else w=m;else w=m;break}f[(m=g+32|0)+w|0]=0,m=Pn(t,m,F,s,n,A,l);t:if(8&c[n+3|0]){if(!Pa(s,T=t+268|0)){if(T=e[t+288>>2]+1|0,e[t+288>>2]=T,(0|T)<4)break t;f[0|s]=0;break t}ua(T,s,20),e[t+288>>2]=1}else e[t+288>>2]=0;t:{if(!m){if(m=0,8&c[n+5|0]&&(T=Hr(g+28|0,m=g+32|c[g+32|0]==95),Qt(t,e[g+28>>2],s),m=m+T|0),!(w>>>0<2|m)){if(f[0|s]=0,!(16&A&&c[0|(m=31+(w+g|0)|0)]==101)&&(!(4096&A)||c[0|(m=(w=(g+32|0)+w|0)-1|0)]!=c[w-2|0]))break t;f[0|m]=0,m=Pn(t,g+32|0,F,s,n,A,l)}if(!m)break t}if(x=e[n>>2],c[t+172|0]&&(x^=536870912,e[n>>2]=x),t=1,!(536870912&x))break e;2&A&&(I[66448]=8192,e[g+16>>2]=s,mr(132898,87470,g+16|0),t=e[r>>2],e[r>>2]=132898,8&c[188788]&&(Jr(r=g+32|0,n=t,t=m-t|0),f[t+r|0]=0,e[g+4>>2]=132898,t=e[47195],e[g>>2]=r,wa(t,87652,g)))}f[0|s]=0,t=0}return oe=g+192|0,t}function Gi(t,r){var s=0,n=0,A=0;s=31&t;e:{t:{s:{if((0|(t&=96))==96)t=-1;else{if((0|t)!=64)break s;t=1}if(s>>>0>=15)break e;r=e[203136+(s<<2)>>2]+j(t,r)|0;break t}if(s>>>0>=15)break e}t=e[105616+(n=s<<2)>>2],e[n+203136>>2]=(0|r)>=0?(0|t)>(0|r)?r:t:0}e:{t:{s:{n:{i:switch(s-1|0){case 5:if(!(t=e[50759]))break t;e[54728]=e[50982],r=e[50979],s=e[50978],Yt(205184,0,11e3),e[51293]=0,r=(s=(A=(0|(n=e[50789]))>0)?130:(0|s)>=5499?5499:s)?A?n:(0|r)>=100?100:r:0,e[50755]=r,s=(0|j(s,e[50754]))/1e3|0,e[51292]=s,e[54729]=(0|r)>20?s<<1:r?s:0,e[33037]=(0|j(500-r|0,(0|j(c[e[50797]+105596|0],(0|j(e[50787],55))/100|0))/16|0))/500;break n;case 0:break i;case 2:case 12:break e;case 4:break s;default:break t}if(!(t=e[50759]))break t}return r=256,(0|(s=(0|(s=e[50785]))>=101?101:s))>=51&&(r=256+(((j(s,25)-1250&65535)>>>0)/50|0)|0),I[t+164>>1]=(0|j(I[t+236>>1],r))/256,I[t+166>>1]=(0|j(I[t+238>>1],r))/256,I[t+168>>1]=(0|j(I[t+240>>1],r))/256,I[t+170>>1]=(0|j(I[t+242>>1],r))/256,I[t+172>>1]=(0|j(I[t+244>>1],r))/256,I[t+174>>1]=(0|j(I[t+246>>1],r))/256,t=e[50790],I[102e3]=(0|j(I[102036],j(t,-3)+256|0))/256,void(I[101999]=(0|j(I[102035],j(t,-6)+256|0))/256)}e[50759]&&(e[54728]=e[50982],t=e[50979],r=e[50978],Yt(205184,0,11e3),e[51293]=0,t=(r=(n=(0|(s=e[50789]))>0)?130:(0|r)>=5499?5499:r)?n?s:(0|t)>=100?100:t:0,e[50755]=t,r=(0|j(r,e[50754]))/1e3|0,e[51292]=r,e[54729]=(0|t)>20?r<<1:t?r:0,e[33037]=(0|j(500-t|0,(0|j(c[e[50797]+105596|0],(0|j(e[50787],55))/100|0))/16|0))/500)}return}e[33037]=(0|j(c[e[50797]+105596|0],(0|j(e[50787],55))/100|0))/16}function Fi(t,r,s){var n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0;s&&(e[s>>2]=0);e:{t:if(!((0|(n=f[0|t]))<0)){for(;;){if((0|(l=255&n))==32|l-9>>>0<5){if((0|(n=f[0|(t=t+1|0)]))>=0)continue;break t}break}if(!(255&n))break e}for(;;){if((0|(n=w=255&n))==32|n-9>>>0<5)break e;if((0|w)!=124||(0|(n=c[0|(l=t+1|0)]))==124){t:{if((0|(F=e[36115]))>=2){for(n=1,l=-1,T=0;;){s:if(!(!(x=e[144464+(n<<2)>>2])|c[x+11|0]==15)){m=e[x>>2];n:{i:{if(w>>>0>=33){if(U=0,g=0,(255&m)==(0|w)&&(g=1,(A=c[t+1|0])>>>0<33|(0|A)!=(m>>>8&255)||(g=2,(A=c[t+2|0])>>>0<33|(0|A)!=(m>>>16&255)||(g=(A=(A=c[t+3|0])>>>0>32&(0|A)==(m>>>24|0))?4:3,U=0-A|0))),(0|l)>=(0|g))break s;if(A=4,!(1&U))break i;break n}if(g=0,(0|l)>=0)break s}if(m>>>((A=g)<<3)&255)break s}T=c[x+10|0],l=A}if((0|F)==(0|(n=n+1|0)))break}if(T)break t}return s&&Hr(s,t),void(f[0|r]=0)}f[0|r]=T,t=((0|l)<=1?1:l)+t|0,r=l=r+1|0;t:if((0|T)==21){s:if((0|(A=c[0|t]))==32|A-9>>>0<5)n=l;else if(n=l,A)for(;;){if(f[0|n]=zs(A),n=n+1|0,(0|(A=c[0|(t=t+1|0)]))==32|A-9>>>0<5)break s;if(!A)break}if(f[0|n]=0,!A){if(r=n,Pa(l,85593))break t;return void(f[0|l]=0)}f[0|n]=124,r=n+1|0}n=c[0|t]}else t=l;if(!(255&n))break}}f[0|r]=0}function Jn(t,r){var s=0,n=0,A=0,l=0,g=0;e:{t:{s:{n:{i:switch((0|(s=e[t+4>>2]))==e[t+104>>2]?s=it(t):(e[t+4>>2]=s+1,s=c[0|s]),s-43|0){case 0:case 2:break i;default:break n}if(l=(0|s)==45,g=!r,(0|(s=e[t+4>>2]))==e[t+104>>2]?s=it(t):(e[t+4>>2]=s+1,s=c[0|s]),g|(r=s-58|0)>>>0>4294967285)break s;if(e[t+116>>2]<0)break t;e[t+4>>2]=e[t+4>>2]-1;break t}r=s-58|0}if(!(r>>>0<4294967286)){if((r=s-48|0)>>>0<10){for(;A=(0|(n=(n=j(n,10)+s|0)-48|0))<214748364,(0|(r=e[t+4>>2]))==e[t+104>>2]?s=it(t):(e[t+4>>2]=r+1,s=c[0|r]),A&(r=s-48|0)>>>0<=9;);A=n>>31}s:if(!(r>>>0>=10))for(;;){if(r=(n=ds(n,A,10,0))+s|0,s=H,s=r>>>0<n>>>0?s+1|0:s,n=r-48|0,A=s-(r>>>0<48)|0,(0|(r=e[t+4>>2]))==e[t+104>>2]?s=it(t):(e[t+4>>2]=r+1,s=c[0|r]),(r=s-48|0)>>>0>9)break s;if(!(n>>>0<2061584302&(0|A)<=21474836|(0|A)<21474836))break}if(r>>>0<10)for(;(0|(r=e[t+4>>2]))==e[t+104>>2]?r=it(t):(e[t+4>>2]=r+1,r=c[0|r]),r-48>>>0<10;);(0|(r=e[t+116>>2]))>0|(0|r)>=0&&(e[t+4>>2]=e[t+4>>2]-1),t=n,n=l?0-t|0:t,A=l?0-(!!(0|t)+A|0)|0:A;break e}}if(A=-2147483648,!(e[t+116>>2]<0))return e[t+4>>2]=e[t+4>>2]-1,H=-2147483648,0}return H=A,n}function gi(t){var r=0,s=0,n=0,A=0;if(e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,r=e[203136+((0|t)==2?32:8)>>2],n=e[32972],(0|(s=e[n+84>>2]))>0&&(r=(0|j(r,s))/100|0),s=(0|r)>=359?359:r,s=(0|(r=(0|r)>=450?450:r))>399?6:(0|r)>379?7:c[((0|s)<=80?80:s)+101856|0],1&t&&(e[32526]=(0|j(s,e[n+72>>2]))/256,e[32527]=(0|j(s,e[n+76>>2]))/256,e[32528]=(0|j(s,e[n+80>>2]))/256,s>>>0>7||(A=s-1|0,e[32528]=A,e[32526]=s,e[32527]=A)),2&t){t=e[n+72>>2];e:{t:{s:{n:{i:{c:{A:{d:{if((0|r)>=351)n=r-350|0,e[36432]=85-(((255&n)>>>0)/3|0)&255,n=60-(n>>>3|0)|0;else{if((0|r)<251)break d;n=r-250|0,e[36432]=110-(n>>>2|0),n=110-(n>>>1|0)|0}if(e[36433]=n,t=(0|j(t,s))/256|0,e[36431]=110+((0|j(t,150))/128|0),r>>>0<=349)break A;if(s=r-350|0,e[36431]=c[s+102224|0],r>>>0<390)break i;if(e[36434]=450+((r+112<<24>>24)/-2<<24>>24),r>>>0<441)break c;e[36434]=860-r,t=12;break t}t=(0|j(t,s))/256|0,e[36431]=(0|r)>=170?110+((0|j(t,150))/128|0)|0:128+((t<<7)/130|0)|0}t=(t<<8)/115|0;break t}if(t=12,r>>>0>430)break t;if(t=13,r>>>0<=400)break n;break t}if(t=(t<<8)/115|0,e[36428]=t,r>>>0<375)break s}t=14;break t}if((0|r)<351)break e;t=c[s+102336|0]}e[36428]=t}e[36429]=(0|t)<=16?16:t}}function tn(t,r,s){var n,A,l,g;n=.000244140625*+e[50767],D[s>>3]=n,D[s+40>>3]=.015625*+e[t+112>>2],D[s+48>>3]=.015625*+e[t+276>>2],D[s+56>>3]=.00390625*+(0|j(I[t+166>>1],I[r+4>>1]))+ +I[t+220>>1],D[s+64>>3]=.00390625*+(0|j(I[t+168>>1],I[r+6>>1]))+ +I[t+222>>1],D[s+72>>3]=.00390625*+(0|j(I[t+170>>1],I[r+8>>1]))+ +I[t+224>>1],D[s+80>>3]=.00390625*+(0|j(I[t+172>>1],I[r+10>>1]))+ +I[t+226>>1],D[s+88>>3]=.00390625*+(0|j(I[t+174>>1],I[r+12>>1]))+ +I[t+228>>1],A=I[t+230>>1],l=I[t+176>>1],g=I[r+14>>1],e[s+112>>2]=0,e[s+116>>2]=1080623104,e[s+104>>2]=0,e[s+108>>2]=1081032704,D[s+96>>3]=.00390625*+(0|j(l,g))+ +(0|A),c[r+40|0]?(e[s+184>>2]=0,e[s+188>>2]=1072693248,D[s+104>>3]=c[r+40|0]<<1):(e[s+184>>2]=0,e[s+188>>2]=0),D[s+120>>3]=.00390625*+I[t+202>>1]*+(c[r+35|0]<<1),D[s+128>>3]=.00390625*+I[t+204>>1]*+(c[r+36|0]<<1),D[s+136>>3]=.00390625*+I[t+206>>1]*+(c[r+37|0]<<1),r=c[r+38|0],t=I[t+208>>1],e[s+176>>2]=0,e[s+180>>2]=1079574528,e[s+160>>2]=0,e[s+164>>2]=1083129856,e[s+152>>2]=0,e[s+156>>2]=1083129856,e[s+352>>2]=0,e[s+356>>2]=1072693248,e[s+168>>2]=0,e[s+172>>2]=1079574528,D[s+144>>3]=.00390625*+(0|t)*+(r<<1),t=e[50779],D[s+368>>3]=n,D[s+360>>3]=+(0|t)/100*3}function Ei(t){var r=0;ne(t,Rn(t));e:{t:{s:{n:{i:{c:{A:{d:{l:{o:{if((0|(t=-1048576&H))<268435455|(0|t)<=268435455){p:{b:{if((0|t)<33554431|(0|t)<=33554431){if((0|t)<8388607|(0|t)<=8388607){if(r=524328,!0&(0|t)==-2147483648)break e;if(0|(0|t)!=-2143289344)break t;return 557096}if(!0&(0|t)==8388608)break b;if(0|(0|t)!=16777216)break t;return 524358}if((0|t)>71303167)break p;if(!0&(0|t)==33554432)break s;if(0|(0|t)!=67108864)break t}return 266270}if(!0&(0|t)==71303168)break o;if(!0&(0|t)==134217728)break n;if(0|(0|t)!=138412032)break t;return 294942}if((0|t)<542113791|(0|t)<=542113791){if((0|t)<536870911|(0|t)<=536870911){if(!0&(0|t)==268435456)break i;if(0|(0|t)!=272629760)break t;return 299028}if(!0&(0|t)==536870912)break A;if(!0&(0|t)==538968064)break c;if(0|(0|t)!=541065216)break t;return 569389}if((0|t)<1075838975|(0|t)<=1075838975){if(!0&(0|t)==542113792)break o;if(0|(0|t)!=1073741824)break t;return 532520}if(!0&(0|t)==1075838976)break d;if(!0&(0|t)==1077936128)break l;if(0|(0|t)!=1078984704)break t}return 299038}return 565288}return 1581096}return 536621}return 1585197}return 266260}return 262174}return 2396190}r=16384}return r}function pi(t,r,s,n,A,l){var g,m,w=0,T=0,x=0,F=0;if(m=8388607&t,T=e[34456],w=c[0|(t=m+T|0)]|c[t+1|0]<<8){g=!(x=c[t+2|0]),t=e[36434]<<g,(0|s)<=0?s=w:(s=(0|j(e[50754],s))/1e3<<g,t=(0|t)<(0|(F=(0|j(s,t))/(0|w)|0))?F:t),A=(0|A)>0?(0|j(s,A))/256|0:s,s=(0|j(A,e[36431]))/256|0,s=(0|t)<(0|(s=(4&n)>>>2|0&&(0|s)>(0|A)?A:s))?s:t,x||(w=w>>>1|0,s=(0|s)/2|0);e:if(!((0|l)<0)){if(n=m+4|0,256&r)t=e[50758],e[36439]=t,e[(r=216192+(t<<4)|0)>>2]=7,e[r+8>>2]=n+T,e[r+4>>2]=w<<16|s,l=x|l<<8;else{if(t=e[50758],e[36439]=t,e[(t=216192+(t<<4)|0)>>2]=6,l=x|l<<8,e[t+12>>2]=l,e[t+8>>2]=n+T,T=t,t=j(r=w>>>2|0,3),A=(0|s)>(0|w),e[T+4>>2]=A?t:s,T=e[50758]+1|0,e[50758]=(0|T)<=169?T:0,(0|t)<(0|(s=A?s-t|0:0)))for(A=r<<1,x=n+(x?r:A)|0;r=e[50758],e[36439]=r,e[(r=216192+(r<<4)|0)>>2]=6,e[r+4>>2]=A,e[r+12>>2]=l,e[r+8>>2]=x+e[34456],r=e[50758]+1|0,e[50758]=(0|r)<=169?r:0,(0|t)<(0|(s=s-A|0)););if((0|s)<=0)break e;t=e[50758],e[36439]=t,e[(r=216192+(t<<4)|0)>>2]=6,e[r+4>>2]=s,e[r+8>>2]=e[34456]+(n+(w-s<<g)|0)}e[12+(216192+(t<<4)|0)>>2]=l,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}}}function Jr(t,r,s){var n,A=0,l=0;if(s>>>0>=512)return lt(0|t,0|r,0|s),t;n=t+s|0;e:if(3&(t^r))if(n>>>0<4)s=t;else if((A=n-4|0)>>>0<t>>>0)s=t;else for(s=t;f[0|s]=c[0|r],f[s+1|0]=c[r+1|0],f[s+2|0]=c[r+2|0],f[s+3|0]=c[r+3|0],r=r+4|0,A>>>0>=(s=s+4|0)>>>0;);else{t:if(3&t)if(s)for(s=t;;){if(f[0|s]=c[0|r],r=r+1|0,!(3&(s=s+1|0)))break t;if(!(s>>>0<n>>>0))break}else s=t;else s=t;if(!((A=-4&n)>>>0<64||(l=A+-64|0)>>>0<s>>>0))for(;e[s>>2]=e[r>>2],e[s+4>>2]=e[r+4>>2],e[s+8>>2]=e[r+8>>2],e[s+12>>2]=e[r+12>>2],e[s+16>>2]=e[r+16>>2],e[s+20>>2]=e[r+20>>2],e[s+24>>2]=e[r+24>>2],e[s+28>>2]=e[r+28>>2],e[s+32>>2]=e[r+32>>2],e[s+36>>2]=e[r+36>>2],e[s+40>>2]=e[r+40>>2],e[s+44>>2]=e[r+44>>2],e[s+48>>2]=e[r+48>>2],e[s+52>>2]=e[r+52>>2],e[s+56>>2]=e[r+56>>2],e[s+60>>2]=e[r+60>>2],r=r- -64|0,l>>>0>=(s=s- -64|0)>>>0;);if(s>>>0>=A>>>0)break e;for(;e[s>>2]=e[r>>2],r=r+4|0,A>>>0>(s=s+4|0)>>>0;);}if(s>>>0<n>>>0)for(;f[0|s]=c[0|r],r=r+1|0,(0|n)!=(0|(s=s+1|0)););return t}function Cs(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0;N(+t),r=0|M(1),M(0);e:{if((n=(r=r>>>20&2047)-969|0)>>>0<63)w=r;else{if((0|n)<0)return t+1;if(!(r>>>0<1033)){if(N(+t),n=0|M(1),s=0,!(0|M(0))&(0|n)==-1048576)break e;return r>>>0>=2047?t+1:(0|n)<0?(D[8+(r=oe-16|0)>>3]=12882297539194267e-247,12882297539194267e-247*D[r+8>>3]):(D[8+(r=oe-16|0)>>3]=3105036184601418e216,3105036184601418e216*D[r+8>>3])}}if(s=D[14409],l=(s=(t=(s=(A=D[14408]*t+s)-s)*D[14411]+(s*D[14410]+t))*t)*s*(t*D[14415]+D[14414]),s*=t*D[14413]+D[14412],N(+A),M(1),m=0|M(0),t=l+(s+(D[115376+(n=m<<4&2032)>>3]+t)),g=e[(n=n+115384|0)>>2],r=(m<<13)+(r=e[n+4>>2])|0,r=(n=(n=g)+(g=0)|0)>>>0<g>>>0?r+1|0:r,!w)return-2147483648&m?(B(0,0|n),B(1,r+1071644672|0),(t=(A=(s=+S())*t)+s)<1&&(e[8+(r=oe-16|0)>>2]=0,e[r+12>>2]=1048576,D[r+8>>3]=22250738585072014e-324*D[r+8>>3],t=(t=(l=t+1)+(A+(s-t)+(t+(1-l)))+-1)==0?0:t),t*=22250738585072014e-324):(B(0,0|n),B(1,r-1058013184|0),t=5486124068793689e288*((s=+S())*t+s)),t;B(0,0|n),B(1,0|r),s=(s=+S())*t+s}return s}function bn(t,r){var s,n=0,A=0,l=0,g=0;oe=s=oe-16|0;e:{if(yi(84270,f[0|r])){if(A=2,yi(r,43)||(A=c[0|r]!=114),A=yi(r,120)?128|A:A,l=A=yi(r,101)?524288|A:A,g=64|A,l=(0|(A=c[0|r]))==114?l:g,l=(0|A)==119?512|l:l,e[s>>2]=438,e[s+4>>2]=0,(t=0|ue(-100,0|t,32768|((0|A)==97?1024|l:l),0|s))>>>0>=4294963201&&(e[56798]=0-t,t=-1),(0|t)<0)break e;oe=A=oe-32|0;t:{s:{if(yi(84270,f[0|r])){if(n=wr(1176))break s}else e[56798]=28;r=0;break t}Yt(n,0,144),yi(r,43)||(e[n>>2]=c[0|r]==114?8:4),c[0|r]==97?(1024&(r=0|ye(0|t,3,0))||(r|=1024,e[A+16>>2]=r,e[A+20>>2]=r>>31,ye(0|t,4,A+16|0)),r=128|e[n>>2],e[n>>2]=r):r=e[n>>2],e[n+80>>2]=-1,e[n+48>>2]=1024,e[n+60>>2]=t,e[n+44>>2]=n+152,8&r||(e[A>>2]=A+24,e[A+4>>2]=0,0|Ye(0|t,21523,0|A)||(e[n+80>>2]=10)),e[n+40>>2]=10,e[n+36>>2]=11,e[n+32>>2]=12,e[n+12>>2]=13,c[227205]||(e[n+76>>2]=-1),e[n+56>>2]=e[56816],(r=e[56816])&&(e[r+52>>2]=n),e[56816]=n,r=n}if(oe=A+32|0,n=r)break e;At(0|t)}else e[56798]=28;n=0}return oe=s+16|0,n}function Nn(t,r,s){var n,A=0,l=0,g=0,m=0,w=0;if(g=t,oe=n=oe-208|0,e[n+8>>2]=1,e[n+12>>2]=0,m=r<<2){for(e[n+16>>2]=4,e[n+20>>2]=4,r=4,A=4,l=2;t=r,r=(A+4|0)+r|0,e[(n+16|0)+(l<<2)>>2]=r,l=l+1|0,A=t,r>>>0<m>>>0;);if((t=(g+m|0)-4|0)>>>0<=g>>>0)l=0,r=1,t=0;else{for(l=1,r=1;3&~l?(J[(n+16|0)+((A=r-1|0)<<2)>>2]>=t-g>>>0?Fs(g,s,n+8|0,r,0,n+16|0):Vo(g,s,r,n+16|0),(0|r)!=1?(Jo(n+8|0,A),r=1):(Jo(n+8|0,1),r=0)):(Vo(g,s,r,n+16|0),Do(n+8|0,2),r=r+2|0),l=1|(A=e[n+8>>2]),e[n+8>>2]=l,t>>>0>(g=g+4|0)>>>0;);l=A>>>0>1,t=e[n+12>>2]!=0}if(Fs(g,s,n+8|0,r,0,n+16|0),l|(0|r)!=1|t)for(;(0|r)<=1?(Do(A=n+8|0,t=Is(A)),l=e[n+8>>2],t=t+r|0):(Jo(A=n+8|0,2),e[n+8>>2]=7^e[n+8>>2],Do(A,1),Fs((w=g-4|0)-e[(m=n+16|0)+((t=r-2|0)<<2)>>2]|0,s,A,r-1|0,1,m),Jo(A,1),l=1|e[n+8>>2],e[n+8>>2]=l,Fs(w,s,A,t,1,m)),r=t,g=g-4|0,e[n+12>>2]|(0|r)!=1|(0|l)!=1;);}oe=n+208|0}function zi(t,r,s,n){var A,l=0,g=0,m=0;oe=A=oe-32|0,m=l=2147483647&n,g=l-1006698496|0;e:if(0|(l=l-1140785152|0)>>>0>g>>>0){if(l=s<<4|r>>>28,s=n<<4|s>>>28,(0|(r&=268435455))==134217728&!!(0|t)|r>>>0>134217728){g=s+1073741824|0,g=(l=l+1|0)?g:g+1|0;break e}if(g=s+1073741824|0,t|(0|r)!=134217728)break e;g=(t=1&l)>>>0>(l=t+l|0)>>>0?g+1|0:g}else(!s&(0|m)==2147418112?!(t|r):m>>>0<2147418112)?(l=0,g=2146435072,m>>>0>1140785151||(g=0,(m=m>>>16|0)>>>0<15249||(la(A+16|0,t,r,s,l=65535&n|65536,m-15233|0),Ma(A,t,r,s,l,15361-m|0),l=(r=e[A+8>>2])<<4,r=e[A+12>>2]<<4|r>>>28,s=e[A>>2],m=g=e[A+4>>2],l|=g>>>28,g=r,(0|(t=268435455&m))==134217728&!!(0|(r=s|!!(e[A+16>>2]|e[A+24>>2]|e[A+20>>2]|e[A+28>>2])))|t>>>0>134217728?g=(l=l+1|0)?g:g+1|0:r|(0|t)!=134217728||(g=(t=l)>>>0>(l=l+(1&l)|0)>>>0?g+1|0:g)))):(l=s<<4|r>>>28,g=524287&(t=n<<4|s>>>28)|2146959360);return oe=A+32|0,B(0,0|l),B(1,-2147483648&n|g),+S()}function Bi(t){var r,s=0,n=0,A=0,l=0,g=0;if(N(+t),g=0|M(1),A=0|M(0),(0|(l=g>>>20&2047))==2047)return(t*=1)/t;if(!(n=A<<1)&(0|(s=g<<1|A>>>31))==2145386496|s>>>0<2145386496)return!n&(0|s)==2145386496?0*t:t;if(l)s=1048575&g|1048576;else{if(l=0,n=A<<12,(0|(s=g<<12|A>>>20))>0|(0|s)>=0)for(;l=l-1|0,s=s<<1|n>>>31,n<<=1,(0|s)>0|(0|s)>=0;);n=31&(s=1-l|0),(63&s)>>>0>=32?(s=A<<n,A=0):(s=(1<<n)-1&A>>>32-n|g<<n,A<<=n)}if(n=A,(0|l)>1023){for(;;){if(!((0|(A=s+-1048576|0))<0||(s=A)|n))return 0*t;if(s=s<<1|n>>>31,n<<=1,!((0|(l=l-1|0))>1023))break}l=1023}if(!((0|(A=s+-1048576|0))<0||(s=A)|n))return 0*t;if((0|s)==1048575|s>>>0<1048575)for(;l=l-1|0,A=s>>>0<524288,s=s<<1|n>>>31,n<<=1,A;);return r=-2147483648&g,(0|l)>0?s=s+-1048576|l<<20:(A=1-l|0,g=s,l=n,n=31&A,(63&A)>>>0>=32?(s=0,n=g>>>n|0):(s=g>>>n|0,n=((1<<n)-1&g)<<32-n|l>>>n)),B(0,0|n),B(1,s|r),+S()}function rn(t,r,s,n,A){var l,g=0,m=0;oe=l=oe-160|0;e:{t:{s:{n:switch((g=c[r+10|0])-15|0){case 6:break s;case 0:break n;default:break t}f[0|t]=0;break e}e[l>>2]=j(c[s+7|0],44)+137856,mr(t,86002,l),t=_r(t)+t|0;break e}if(n){if(f[l+140|0]=0,s?os(0,0,s,l+8|0,0):Ho(g,l+8|0),s=l+140|0,g=c[l+140|0]){if((0|g)==32){f[0|t]=0;break e}224&(g=g<<24>>24)||(A&&(e[A>>2]=g),s=l+141|0)}if(!((0|(A=_r(s)))<=0)){t=Qr(t,s)+A|0,f[0|t]=0;break e}}A=0;t:if(!(!(s=255&(g=e[r>>2]))|(0|s)==47)){if(n){if((0|(m=255&g))==95)break t;s:{n:{if((0|m)==35){if(m=3,c[r+11|0]!=2)break n;break t}if((m=s-32|0)>>>0>95)break s}s=P[93952+(m<<1)>>1]}A=Xa(s,t)}else f[0|t]=g,A=1;for(;;){if(!(s=255&(g>>=8))|(0|s)==47)break t;if(n){if((0|s)==35&c[r+11|0]==2)break t;if(s-48>>>0<10)continue;(m=s-32|0)>>>0<=95&&(s=P[93952+(m<<1)>>1]),A=Xa(s,t+A|0)+A|0}else f[t+A|0]=g,A=A+1|0}}f[0|(t=t+A|0)]=0}return oe=l+160|0,t}function Ln(t){var r,s=0;r=t,s=131280;e:{t:{if(!((0|t)<=1023||(s=131300,t>>>0<1328||(s=131320,t>>>0<1424||(s=131340,t>>>0<1536||(s=131360,t>>>0<1792||(s=131380,t>>>0<1872||(s=131400,t>>>0<2432||(s=131420,t>>>0<2560||(s=131440,t>>>0<2688||(s=131460,t>>>0<2816||(s=131480,t>>>0<2944||(s=131500,t>>>0<3072||(s=131520,t>>>0<3200||(s=131540,t>>>0<3328||(s=131560,t>>>0<3456||(s=131580,t>>>0<3584||(s=131600,t>>>0<3712||(s=131620,t>>>0<3840||(s=131640,t>>>0<4096||(s=131660,t>>>0<4256||(s=131680,t>>>0<4352||(s=131700,t>>>0<4608||(s=131720,t>>>0<5024||(s=131740,t>>>0<10496||(s=131760,t>>>0<12544||(s=131780,t>>>0<40960))))))))))))))))))))))))))){if(t>>>0>=55296)break t;s=131800}if((0|r)>=P[(t=s)+8>>1])break e}t=0}return t}function Qt(t,r,s){var n,A=0,l=0,g=0,m=0;oe=n=oe-208|0,f[n+80|0]=0;e:{if((A=r-224|0)>>>0<=158)r=101072+(A<<1)|0;else{if((r=r-592|0)>>>0>88)break e;r=101392+(r<<1)|0}if(r=P[r>>1]){if(g=r<<16>>16,m=(A=63&r)>>>0>37?A+59|0:I[101584+(A<<1)>>1],A=r>>>6|0,(0|g)<0)A=59+(63&A)|0,r=r>>>12&7;else{if(!(l=31&A))break e;A=0,r=r>>>11&15}(l=vr(t,e[129920+(l<<3)>>2],n+112|0))&&gA(t,m,n+176|0)&&(r&&4096&vr(t,e[129920+(r<<3)>>2],n+80|0)&&(s=_r(r=Qr(s,n+80|0)),f[n+80|0]=0,s=r+s|0),A?(gA(r=t,A,t=n+144|0),e[n+68>>2]=n+80,e[n- -64>>2]=t,e[n+60>>2]=6,e[n+52>>2]=23,e[n+56>>2]=n+176,e[n+48>>2]=n+112,mr(s,84101,n+48|0)):(0|g)<0?Qr(s,n+176|0):1&e[t+144>>2]|4096&l?(e[n+36>>2]=23,e[n+40>>2]=6,e[n+44>>2]=n+176,e[n+32>>2]=n+112,mr(s,84430,n+32|0)):(e[n+16>>2]=23,e[n+8>>2]=23,e[n>>2]=4,e[n+12>>2]=n+112,e[n+4>>2]=n+176,mr(s,84802,n)))}}oe=n+208|0}function Be(){qo(),e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56244]=0,e[56245]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0}function ot(t,r){var s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0;e:{if((0|(l=e[t+4>>2]))==e[t>>2])if((g=e[t+8>>2])>>>0<(s=e[t+12>>2])>>>0)s=(A=(1+(s-g>>2)|0)/2<<2)+g|0,(0|l)!=(0|g)&&(kt(s=s-(n=g-l|0)|0,l,n),l=e[t+8>>2]),e[t+4>>2]=s,e[t+8>>2]=A+l;else{if((n=(0|s)==(0|l)?1:s-l>>1)>>>0>=1073741824)break e;if(x=(w=Wn(s=n<<2))+s|0,m=s=(n+3&-4)+w|0,(0|l)!=(0|g)){if(F=-4&(g=g-l|0),A=s,n=l,g=1+((T=g-4|0)>>>2|0)&7)for(m=0;e[A>>2]=e[n>>2],n=n+4|0,A=A+4|0,(0|g)!=(0|(m=m+1|0)););if(m=s+F|0,!(T>>>0<28))for(;e[A>>2]=e[n>>2],e[A+4>>2]=e[n+4>>2],e[A+8>>2]=e[n+8>>2],e[A+12>>2]=e[n+12>>2],e[A+16>>2]=e[n+16>>2],e[A+20>>2]=e[n+20>>2],e[A+24>>2]=e[n+24>>2],e[A+28>>2]=e[n+28>>2],n=n+32|0,(0|m)!=(0|(A=A+32|0)););}e[t+12>>2]=x,e[t+8>>2]=m,e[t+4>>2]=s,e[t>>2]=w,l&&(Zt(l),s=e[t+4>>2])}else s=l;return e[s-4>>2]=e[r>>2],void(e[t+4>>2]=e[t+4>>2]-4)}$o(),V()}function bt(t,r,s){var n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0;e:{t:{s:{n:{i:{c:{A:{d:{l:{if(r){if(!s)break l;break d}return zt=(r=t)-j(t=(t>>>0)/(s>>>0)|0,s)|0,ve=0,H=0,t}if(!t)break A;break c}if(!((n=s-1|0)&s))break i;l=0-(g=(ke(s)+33|0)-ke(r)|0)|0;break s}return zt=0,ve=r-j(t=(r>>>0)/0|0,0)|0,H=0,t}if((n=32-ke(r)|0)>>>0<31)break n;break t}if(zt=t&n,ve=0,(0|s)==1)break e;return s=31&(n=Fo(s)),(63&n)>>>0>=32?t=r>>>s|0:(A=r>>>s|0,t=((1<<s)-1&r)<<32-s|t>>>s),H=A,t}g=n+1|0,l=63-n|0}if(n=31&(A=63&g),A>>>0>=32?(A=0,m=r>>>n|0):(A=r>>>n|0,m=((1<<n)-1&r)<<32-n|t>>>n),n=31&(l&=63),l>>>0>=32?(r=t<<n,t=0):(r=(1<<n)-1&t>>>32-n|r<<n,t<<=n),g)for(x=(0|(n=s-1|0))==-1?-1:0;w=A<<1|m>>>31,m=(A=m<<1|r>>>31)-(T=s&(l=x-(w+(A>>>0>n>>>0)|0)>>31))|0,A=w-(A>>>0<T>>>0)|0,r=r<<1|t>>>31,t=F|t<<1,F=w=1&l,g=g-1|0;);return zt=m,ve=A,H=r<<1|t>>>31,w|t<<1}zt=t,ve=r,t=0,r=0}return H=r,t}function Tt(t,r){var s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0;e:{if((0|(s=e[t+8>>2]))==e[t+12>>2])if((n=e[t+4>>2])>>>0>(g=e[t>>2])>>>0)A=kt((l=(1+(n-g>>2)|0)/-2<<2)+n|0,n,s=s-n|0)+s|0,e[t+8>>2]=A,e[t+4>>2]=l+e[t+4>>2];else{if((l=(0|s)==(0|g)?1:s-g>>1)>>>0>=1073741824)break e;if(x=(m=Wn(A=l<<2))+A|0,A=l=(-4&l)+m|0,(0|s)!=(0|n)){if(F=-4&(s=s-n|0),T=1+((w=s-4|0)>>>2|0)&7)for(A=0,s=l;e[s>>2]=e[n>>2],n=n+4|0,s=s+4|0,(0|T)!=(0|(A=A+1|0)););else s=l;if(A=l+F|0,!(w>>>0<28))for(;e[s>>2]=e[n>>2],e[s+4>>2]=e[n+4>>2],e[s+8>>2]=e[n+8>>2],e[s+12>>2]=e[n+12>>2],e[s+16>>2]=e[n+16>>2],e[s+20>>2]=e[n+20>>2],e[s+24>>2]=e[n+24>>2],e[s+28>>2]=e[n+28>>2],n=n+32|0,(0|A)!=(0|(s=s+32|0)););}e[t+12>>2]=x,e[t+8>>2]=A,e[t+4>>2]=l,e[t>>2]=m,g&&(Zt(g),A=e[t+8>>2])}else A=s;return e[A>>2]=e[r>>2],void(e[t+8>>2]=e[t+8>>2]+4)}$o(),V()}function Pt(t,r){var s,n=0,A=0,l=0,g=0,m=0;A=189088,oe=s=oe-320|0,e[s+312>>2]=0,l=di(t,g=Qr(s+112|0,189088),s,s+316|0,s+312|0,0),n=e[s+316>>2];e:if((0|r)<=3){if((0|n)<2)break e;if(l=3&(r=n-1|0),t=1,n-2>>>0>=3)for(m=-4&r,r=0;f[0|(n=t+s|0)]>=4&&(f[0|n]=3),f[1+(n=t+s|0)|0]>=4&&(f[n+1|0]=3),f[n+2|0]>=4&&(f[n+2|0]=3),f[n+3|0]>=4&&(f[n+3|0]=3),t=t+4|0,(0|m)!=(0|(r=r+4|0)););if(!l)break e;for(r=0;f[0|(n=t+s|0)]>=4&&(f[0|n]=3),t=t+1|0,(0|l)!=(0|(r=r+1|0)););}else if(t=1,!((0|n)<=1)){for(;;){if((0|l)>f[0|(m=t+s|0)]){if((0|n)!=(0|(t=t+1|0)))continue;break e}break}f[0|m]=r}if(t=c[0|g])for(r=1;n=e[144464+((255&t)<<2)>>2],c[n+11|0]!=2|16&c[n+6|0]||(l=255&(n=f[r+s|0]),(0|n)<2&&l||(f[0|A]=c[l+94151|0],A=A+1|0,t=c[0|g]),r=r+1|0),f[0|A]=t,A=A+1|0,t=c[0|(g=g+1|0)];);f[0|A]=0,oe=s+320|0}function st(t){var r=0,s=0,n=0,A=0,l=0,g=0;s=r=e[(t|=0)>>2],e[t>>2]=r+1;e:{t:{s:{n:{i:{c:{A:switch(((l=c[0|r])>>>4|0)-8|0){case 0:case 1:case 2:case 3:break t;case 7:break i;case 6:break c;case 4:case 5:break A;default:break e}if((n=r+2|0)>>>0>=(A=e[t+4>>2])>>>0)break n;if(e[t>>2]=n,(192&(s=c[s+1|0]))!=128)break s;return 63&s|l<<6&1984}if((n=r+3|0)>>>0>=(A=e[t+4>>2])>>>0)break n;if(s=r+2|0,e[t>>2]=s,(192&(r=c[r+1|0]))!=128){n=s;break s}if(e[t>>2]=n,(192&(s=c[0|s]))!=128)break s;return 63&s|(63&r|l<<6&960)<<6}if(!((A=e[t+4>>2])>>>0<=(s=r+4|0)>>>0)){if(n=r+2|0,e[t>>2]=n,(192&(A=c[r+1|0]))!=128||(n=r+3|0,e[t>>2]=n,(192&(g=c[r+2|0]))!=128)||(e[t>>2]=s,r=c[0|n],n=s,(192&r)!=128))break s;return 0|((t=63&r|g<<6&4032|(63&A|l<<6&960)<<12)>>>0>=1114112?65533:t)}}e[t>>2]=A;break t}e[t>>2]=n-1}l=65533}return 0|l}function pe(t,r,s,n){var A,l,g=0,m=0,w=0,T=0,x=0,F=0;if(oe=A=oe-432|0,!(!n|!(536870912&(l=_t(t,r,s,n))))&&(I[A+48>>1]=8192,n=Qr(A+48|2,n),c[0|n])){for(w=A+224|0,g=1,T=200;;){if(Hr(A+44|0,n),r=Pi(e[A+44>>2]),m=e[s>>2],r?(e[s>>2]=2|m,Xa(zs(e[A+44>>2]),n)):e[s>>2]=-3&m,F=e[33264],_t(t,n,s,0),1&g?(e[A+16>>2]=189088,m=ji(w,T,84130,A+16|0)):(e[A+32>>2]=15,e[A+36>>2]=189088,m=ji(w,T,84434,A+32|0)),g=(r=e[33264])+1|0,e[33264]=g,r>>>0<=2147483646){for(;;)if(r=n,n=n+1|0,(0|(x=f[0|r]))==32|x-9>>>0<5){for(;r=(n=r)+1|0,(0|(x=f[0|n]))==32|x-9>>>0<5;);if(g=g-1|0,e[33264]=g,!((0|g)>0))break}}if(w=w+m|0,e[33264]=F,!(c[0|n]&&(g=0,(0|(T=T-m|0))>1)))break}(A+224|0)!=(0|w)&&(e[A>>2]=A+224,ji(189088,200,84130,A))}return oe=A+432|0,l}function he(t,r,s,n,A,l,g,m){var w,T;w=e[32972],T=e[w+116>>2],I[t+8>>1]=P[t+8>>1]+l,l=32&m?0-l|0:l,I[t+10>>1]=l+P[t+10>>1],I[t+12>>1]=l+P[t+12>>1],n=(0|n)>(0|(l=((l=(0|j(r,T))/256|0)-(r=I[t+6>>1])|0)/2|0))?l:n,I[t+6>>1]=((0|s)<(0|n)?n:s)+r;e:{t:switch(A-1|0){case 0:r=(0|(r=235-(s=I[t+4>>1])|0))<=-100?-100:r,I[t+4>>1]=((0|r)>=-60?-60:r)+s;break e;case 1:r=(0|(r=(0|(r=235-(s=I[t+4>>1])|0))<=-300?-300:r))>=-150?-150:r,I[t+4>>1]=r+s,I[t+2>>1]=r+P[t+2>>1];break e;case 2:break t;default:break e}r=(0|(r=(0|(r=100-(s=I[t+4>>1])|0))<=-400?-400:r))>-300?-400:r,I[t+4>>1]=r+s,I[t+2>>1]=r+P[t+2>>1]}e[w+132>>2]||(f[t+20|0]=(j(c[t+20|0],g)>>>0)/100,f[t+21|0]=(j(c[t+21|0],g)>>>0)/100,f[t+22|0]=(j(c[t+22|0],g)>>>0)/100,f[t+23|0]=(j(c[t+23|0],g)>>>0)/100,f[t+24|0]=(j(c[t+24|0],g)>>>0)/100,f[t+25|0]=(j(c[t+25|0],g)>>>0)/100)}function qe(t){var r,s=0,n=0,A=0,l=0;oe=r=oe-48|0;e:{if(t){c[0|t]||(t=no(84285),c[0|t]&&t||(t=no(121696),c[0|t]&&t||(t=no(84614),c[0|t]&&t||(t=84891))));t:{for(;;){if(!(!(n=c[t+s|0])|(0|n)==47)){if(A=23,(0|(s=s+1|0))!=23)continue;break t}break}A=s}n=84891;t:{s:{if(s=c[0|t],(c[t+A|0]|(0|s)==46||(n=t,(0|s)==67))&&!c[n+1|0]||!Pa(n,84891)||!Pa(n,85136)){if(s=121652,c[n+1|0]==46)break s;t=0;break t}if(s=e[56851])for(;;){if(!Pa(n,s+8|0))break s;if(!(s=e[s+32>>2]))break}(t=wr(36))&&(s=e[30414],e[t>>2]=e[30413],e[t+4>>2]=s,Jr(s=t+8|0,n,A),f[s+A|0]=0,e[t+32>>2]=e[56851],e[56851]=t),s=t||121652}t=s}if((0|t)==-1)break e;e[56809]=t}else t=e[56809];l=t?t+8|0:84309}return oe=r+48|0,l}function it(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0;w=!!((r=e[t+112>>2])|(n=e[t+116>>2])),A=r,g=r=(l=e[t+4>>2])-(m=e[t+44>>2])|0,s=r+e[t+120>>2]|0,r=e[t+124>>2]+(r>>31)|0;e:{if(!(((0|(r=s>>>0<g>>>0?r+1|0:r))>=(0|n)&s>>>0>=A>>>0|(0|r)>(0|n))&w)){if((0|(w=Xo(t)))>=0)break e;l=e[t+4>>2],m=e[t+44>>2]}return e[t+112>>2]=-1,e[t+116>>2]=-1,e[t+104>>2]=l,n=(g=s)+(s=m-l|0)|0,r=(s>>31)+r|0,e[t+120>>2]=n,e[t+124>>2]=s>>>0>n>>>0?r+1|0:r,-1}return r=(n=s+1|0)?r:r+1|0,l=e[t+4>>2],m=e[t+8>>2],g=A=e[t+116>>2],A|(s=e[t+112>>2])&&(A=s-n|0,(0|(s=g-(r+(s>>>0<n>>>0)|0)|0))>=(0|(g=(T=m-l|0)>>31))&A>>>0>=T>>>0|(0|s)>(0|g)||(m=A+l|0)),e[t+104>>2]=m,n=(A=(s=e[t+44>>2])-l|0)+n|0,r=(A>>31)+r|0,e[t+120>>2]=n,e[t+124>>2]=n>>>0<A>>>0?r+1|0:r,s>>>0>=l>>>0&&(f[l-1|0]=w),w}function kt(t,r,s){var n=0,A=0;e:if((0|t)!=(0|r)){if(r-(A=t+s|0)>>>0<=0-(s<<1)>>>0)return Jr(t,r,s);if(n=3&(t^r),t>>>0<r>>>0){if(n)n=t;else{if(3&t)for(n=t;;){if(!s)break e;if(f[0|n]=c[0|r],r=r+1|0,s=s-1|0,!(3&(n=n+1|0)))break}else n=t;if(!(s>>>0<=3))for(;e[n>>2]=e[r>>2],r=r+4|0,n=n+4|0,(s=s-4|0)>>>0>3;);}if(s)for(;f[0|n]=c[0|r],n=n+1|0,r=r+1|0,s=s-1|0;);}else{if(!n){if(3&A)for(;;){if(!s)break e;if(f[0|(n=(s=s-1|0)+t|0)]=c[r+s|0],!(3&n))break}if(!(s>>>0<=3))for(;e[(s=s-4|0)+t>>2]=e[r+s>>2],s>>>0>3;);}if(!s)break e;for(;f[(s=s-1|0)+t|0]=c[r+s|0],s;);}}return t}function Ht(t,r,s,n){switch(r-9|0){case 0:return r=e[s>>2],e[s>>2]=r+4,void(e[t>>2]=e[r>>2]);case 6:return r=e[s>>2],e[s>>2]=r+4,r=I[r>>1],e[t>>2]=r,void(e[t+4>>2]=r>>31);case 7:return r=e[s>>2],e[s>>2]=r+4,e[t>>2]=P[r>>1],void(e[t+4>>2]=0);case 8:return r=e[s>>2],e[s>>2]=r+4,r=f[0|r],e[t>>2]=r,void(e[t+4>>2]=r>>31);case 9:return r=e[s>>2],e[s>>2]=r+4,e[t>>2]=c[0|r],void(e[t+4>>2]=0);case 16:return r=e[s>>2]+7&-8,e[s>>2]=r+8,void(D[t>>3]=D[r>>3]);case 17:rs[0|n](t,s);default:return;case 1:case 4:case 14:return r=e[s>>2],e[s>>2]=r+4,r=e[r>>2],e[t>>2]=r,void(e[t+4>>2]=r>>31);case 2:case 5:case 11:case 15:return r=e[s>>2],e[s>>2]=r+4,e[t>>2]=e[r>>2],void(e[t+4>>2]=0);case 3:case 10:case 12:case 13:}r=e[s>>2]+7&-8,e[s>>2]=r+8,s=e[r+4>>2],e[t>>2]=e[r>>2],e[t+4>>2]=s}function ir(t,r,s,n,A,l){var g;oe=g=oe-80|0;e:if((0|l)>=16384){if(Kt(g+32|0,r,s,n,A,0,0,0,2147352576),n=e[g+40>>2],A=e[g+44>>2],r=e[g+32>>2],s=e[g+36>>2],l>>>0<32767){l=l-16383|0;break e}Kt(g+16|0,r,s,n,A,0,0,0,2147352576),l=((0|l)>=49149?49149:l)-32766|0,n=e[g+24>>2],A=e[g+28>>2],r=e[g+16>>2],s=e[g+20>>2]}else(0|l)>-16383||(Kt(g- -64|0,r,s,n,A,0,0,0,7471104),n=e[g+72>>2],A=e[g+76>>2],r=e[g+64>>2],s=e[g+68>>2],l>>>0>4294934644?l=l+16269|0:(Kt(g+48|0,r,s,n,A,0,0,0,7471104),l=((0|l)<=-48920?-48920:l)+32538|0,n=e[g+56>>2],A=e[g+60>>2],r=e[g+48>>2],s=e[g+52>>2]));Kt(g,r,s,n,A,0,0,0,l+16383<<16),r=e[g+12>>2],e[t+8>>2]=e[g+8>>2],e[t+12>>2]=r,r=e[g+4>>2],e[t>>2]=e[g>>2],e[t+4>>2]=r,oe=g+80|0}function fr(t,r){var s,n,A=0;oe=s=oe+-64|0,A=e[t>>2],n=e[A-4>>2],A=e[A-8>>2],e[s+32>>2]=0,e[s+36>>2]=0,e[s+40>>2]=0,e[s+44>>2]=0,e[s+48>>2]=0,e[s+52>>2]=0,f[s+55|0]=0,f[s+56|0]=0,f[s+57|0]=0,f[s+58|0]=0,f[s+59|0]=0,f[s+60|0]=0,f[s+61|0]=0,f[s+62|0]=0,e[s+24>>2]=0,e[s+28>>2]=0,e[s+20>>2]=0,e[s+16>>2]=125084,e[s+12>>2]=t,e[s+8>>2]=r,t=t+A|0,A=0;e:if(wi(n,r,0))e[s+56>>2]=1,rs[e[e[n>>2]+20>>2]](n,s+8|0,t,t,1,0),A=e[s+32>>2]==1?t:0;else{rs[e[e[n>>2]+24>>2]](n,s+8|0,t,1,0);t:switch(e[s+44>>2]){case 0:A=e[s+48>>2]==1&&e[s+36>>2]==1&&e[s+40>>2]==1?e[s+28>>2]:0;break e;case 1:break t;default:break e}e[s+32>>2]!=1&&e[s+48>>2]|e[s+36>>2]!=1|e[s+40>>2]!=1||(A=e[s+24>>2])}return oe=s- -64|0,A}function nr(t,r,s,n,A){var l,g,m=0;oe=l=oe-80|0,I[l+72>>1]=0,e[l+64>>2]=0,e[l+68>>2]=0,f[0|n]=0,m=Xa(r,g=2|(m=l- -64|0))+m|0,f[m+2|0]=32;e:if((0|s)!=-1)r>>>0>=33&&!Za(r)?(f[m+3|0]=(0|s)==32?32:31,f[l+65|0]=95,vr(t,l- -64|1,l+16|0)||(f[l+65|0]=32,vr(t,g,l+16|0)||Bs(t,g,l+16|0,40,0,268435456,0)),c[l+16|0]||Qt(t,r,l+16|0),r=Qr(n,l+16|0),!(s=c[0|r])|(0|s)==21||(e[l+56>>2]=0,e[l+60>>2]=0,Rr(t,r,l+56|0,-1,1&A))):(e[l>>2]=r,mr(r=l- -64|1,85485,l),vr(t,r,n));else{if(vr(t,g,n)||(f[l+65|0]=95,vr(t,l- -64|1,l+16|0)|e[t+212>>2]==25966))break e;yo(85055),vr(e[47194],g,l+16|0)&&(f[0|n]=21,f[n+1|0]=0),Mn(e[e[32972]+60>>2])}oe=l+80|0}function Yt(t,r,s){var n=0,A=0,l=0,g=0;if(s&&(f[0|t]=r,f[(n=t+s|0)-1|0]=r,!(s>>>0<3||(f[t+2|0]=r,f[t+1|0]=r,f[n-3|0]=r,f[n-2|0]=r,s>>>0<7||(f[t+3|0]=r,f[n-4|0]=r,s>>>0<9||(A=(n=0-t&3)+t|0,r=j(255&r,16843009),e[A>>2]=r,e[(s=(n=s-n&-4)+A|0)-4>>2]=r,n>>>0<9||(e[A+8>>2]=r,e[A+4>>2]=r,e[s-8>>2]=r,e[s-12>>2]=r,n>>>0<25||(e[A+24>>2]=r,e[A+20>>2]=r,e[A+16>>2]=r,e[A+12>>2]=r,e[s-16>>2]=r,e[s-20>>2]=r,e[s-24>>2]=r,e[s-28>>2]=r,(s=n-(g=4&A|24)|0)>>>0<32))))))))for(n=ds(r,0,1,1),l=H,r=A+g|0;e[r+24>>2]=n,e[r+28>>2]=l,e[r+16>>2]=n,e[r+20>>2]=l,e[r+8>>2]=n,e[r+12>>2]=l,e[r>>2]=n,e[r+4>>2]=l,r=r+32|0,(s=s-32|0)>>>0>31;);return t}function Ar(){var t,r=0,s=0,n=0,A=0,l=0;if(oe=t=oe-208|0,(0|(n=e[50303]))>0)for(;(A=e[(s=201216+(r<<2)|0)>>2])&&(Zt(A),e[s>>2]=0),(0|n)!=(0|(r=r+1|0)););if(e[50303]=0,e[t+16>>2]=137584,e[t+20>>2]=47,mr(r=t+32|0,87827,t+16|0),ci(r,_r(r)+1|0,0),e[t+4>>2]=47,e[t>>2]=137584,mr(r,87933,t),ci(r,_r(r)+1|0,1),r=e[50303],e[201216+(s=r<<2)>>2]=0,s=Fa(n=e[50741],s+4|0)){if(e[50741]=s,Nn(201216,r,7),n=e[50741],s=0,r=e[50304])for(A=0;l=e[r+4>>2],c[0|l]&&Pa(l+1|0,86589)&&Vn(e[r+8>>2],88032,3)&&(e[(s<<2)+n>>2]=r,s=s+1|0),r=e[201216+((A=A+1|0)<<2)>>2];);e[(s<<2)+n>>2]=0}return oe=t+208|0,n}function Wr(t,r,s){var n=0,A=0,l=0,g=0;if(l=r-1|0,(0|r)>=2){r=t;e:{for(;;){t:{s:{if((0|(n=e[s+4>>2]))!=(0|(A=e[s+8>>2]))){if((g=hi(n,10,A-n|0))?A=1+(g-(n=e[s+4>>2])|0)|0:(n=e[s+4>>2],A=e[s+8>>2]-n|0),Jr(r,n,n=A>>>0<l>>>0?A:l),A=n+e[s+4>>2]|0,e[s+4>>2]=A,r=r+n|0,g||!(l=l-n|0))break t;if((0|A)!=e[s+8>>2]){e[s+4>>2]=A+1,n=c[0|A];break s}}if(!((0|(n=Xo(s)))>=0)){if(n=0,(0|t)==(0|r))break e;if(16&c[0|s])break t;break e}}if(f[0|r]=n,r=r+1|0,(255&n)!=10&&(l=l-1|0))continue}break}t?(f[0|r]=0,n=t):n=0}}else if(r=e[s+72>>2],e[s+72>>2]=r-1|r,!l)return f[0|t]=0,t;return n}function xs(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0;if(r=j(t,44),(0|(t=e[r+137896>>2]))>0&&xs(t-1|0),t=e[36115],!((0|(r=e[36+(s=r+137856|0)>>2]))<=0)){if(A=e[s+32>>2],m=1&r,(0|r)!=1)for(w=-2&r,s=0;r=c[10+(l=(n=s<<4)+A|0)|0],e[144464+(r<<2)>>2]=l,(0|t)>=(0|r)?r=t:Yt(144464+((t=t+1|0)<<2)|0,0,r-t<<2),t=c[10+(n=(16|n)+A|0)|0],e[144464+(t<<2)>>2]=n,(0|t)<=(0|r)?t=r:Yt(144464+((r=r+1|0)<<2)|0,0,t-r<<2),s=s+2|0,(0|w)!=(0|(g=g+2|0)););else s=0;m&&(r=c[10+(s=(s<<4)+A|0)|0],e[144464+(r<<2)>>2]=s,(0|t)>=(0|r)||(Yt(144464+((t=t+1|0)<<2)|0,0,r-t<<2),t=r))}e[36115]=t}function Ys(t,r,s,n,A){var l,g=0,m=0,w=0;oe=l=oe-16|0;e:if(1&f[t+106|0]&&(g=c[0|s],!(!(1&f[n+2|0])&(0|g)!=46||256&(w=e[n+12>>2])|!(!(2&w)||A)||(Hr(l+12|0,(0|g)!=46?s:s+2|0),!(g=c[0|s])|!c[s+1|0])))){if(!(!(w=e[l+12>>2])|2&c[n+2|0])){if(!ca(w))break e;g=c[0|s]}(0|g)==46&&(f[0|s]=32),m=2,e[t+212>>2]!=26741|A||(s=ca(e[l+12>>2])?pe(t,s+2|0,0,0):0,128&c[t+8233|0]&&(!(!(A=e[l+12>>2])|2&c[n+2|0])&A-48>>>0>=10||(m=0)),m=32768&s?0:m,131072&s&&(m=163840&e[t+8232>>2]?34:c[r-2|0]!=45?m:0))}return oe=l+16|0,m}function as(t,r,s,n,A){var l,g=0,m=0;if(oe=l=oe-208|0,e[l+204>>2]=s,Yt(s=l+160|0,0,40),e[l+200>>2]=e[l+204>>2],(0|Sr(0,r,l+200|0,l+80|0,s,n,A))<0)A=-1;else{e[t+76>>2],g=e[t>>2],e[t+72>>2]<=0&&(e[t>>2]=-33&g);e:{t:{if(e[t+48>>2]){if(e[t+16>>2])break t}else e[t+48>>2]=80,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,m=e[t+44>>2],e[t+44>>2]=l;if(s=-1,mo(t))break e}s=Sr(t,r,l+200|0,l+80|0,l+160|0,n,A)}m&&(rs[e[t+36>>2]](t,0,0),e[t+48>>2]=0,e[t+44>>2]=m,e[t+28>>2]=0,r=e[t+20>>2],e[t+16>>2]=0,e[t+20>>2]=0,s=r?s:-1),r=t,t=e[t>>2],e[r>>2]=t|32&g,A=32&t?-1:s}return oe=l+208|0,A}function kr(t,r,s,n){var A,l=0,g=0,m=0,w=0,T=0,x=0,F=0;if(oe=A=oe-208|0,g=c[0|r])for(;f[l+A|0]=g,w=((255&g)==6&(0|m)!=21)+w|0,m=g<<24>>24,g=c[(l=l+1|0)+r|0];);if(f[l+A|0]=0,l=c[0|A])for(x=w-2|0,m=0,F=(0|n)<2,g=0;;){e:{t:if((255&l)!=6|F|(0|g)==21){if((0|(n=255&l))==255){if(!T|(0|s)<2)break e;n=s>>>0>2?11:(0|m)%3|0?23:11}g=n,n=m}else{if(l=m+1|0,c[t+169|0]){g=(0|l)>1?5:6,n=l;break t}if(g=6,n=w,(0|l)==(0|w))break t;g=(0|l)%3|0||(0|m)==(0|x)?5:6,n=l}m=n,f[0|r]=g,r=r+1|0}if(!(l=c[(T=T+1|0)+A|0]))break}(0|s)>=2&&(f[0|r]=11,r=r+1|0),f[0|r]=0,oe=A+208|0}function Ns(t,r){var s=0;s=0,t&&(s=e[50754],s=(t=(t=(0|j(e[145712+(r?12:((0|t)>199)<<2)>>2],t))/256|0)>>>0>(r=e[36430])>>>0?t:r)>>>0<=89999?(j(t,s)>>>0)/1e3|0:(j(t,(0|s)/25|0)>>>0)/40|0),(0|(t=e[36440]))<=0||(0|(r=e[36424]))<0||(e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Va(),e[36427]=-1,t=216192+(e[50758]<<4)|0,e[t>>2]=5,e[t+4>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,e[36426]=0,e[36438]&&(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}function qt(t,r,s,n,A,l,g,m){var w,T=0,x=0,F=0;T=1,w=x=2147483647&n;e:if(!((F=(0|x)==2147418112)&!s?t|r:F&!!(0|s)|x>>>0>2147418112)&&!((F=(0|(x=2147483647&m))==2147418112)&!g?A|l:F&!!(0|g)|x>>>0>2147418112)){if(!(t|A|s|g|r|l|x|w))return 0;if((0|(T=n&m))>0|(0|T)>=0){if(T=-1,(0|s)==(0|g)&(0|n)==(0|m)?(0|r)==(0|l)&t>>>0<A>>>0|r>>>0<l>>>0:s>>>0<g>>>0&(0|n)<=(0|m)|(0|n)<(0|m))break e;return!!(t^A|s^g|r^l|n^m)}T=-1,((0|s)==(0|g)&(0|n)==(0|m)?(0|r)==(0|l)&t>>>0>A>>>0|r>>>0>l>>>0:s>>>0>g>>>0&(0|n)>=(0|m)|(0|n)>(0|m))||(T=!!(t^A|s^g|r^l|n^m))}return T}function Tr(t,r){var s=0,n=0,A=0,l=0;for(s=c[85836]|c[85837]<<8,f[0|r]=s,f[r+1|0]=s>>>8,f[r+2|0]=c[85838];;)if(A=c[0|t],t=s=t+1|0,(0|A)!=255){if(!A)break;if(!(n=e[144464+(A<<2)>>2]))continue;if(c[n+11|0]==1&&(l=c[n+14|0],!(P[n+8>>1]|l>>>0>4))){if(l>>>0<2)continue;f[0|r]=c[l+93943|0],r=r+1|0;continue}if(255&(t=e[n>>2]))for(;f[0|r]=t,r=r+1|0,n=65280&t,t=t>>>8|0,n;);if(t=s,(0|A)!=21||(32|(s=f[0|t]))-97>>>0>=26)continue;for(;f[0|r]=s,r=r+1|0,(32|(s=f[0|(t=t+1|0)]))-97>>>0<26;);}f[0|r]=0}function ha(t,r){var s,n,A=0,l=0,g=0;oe=s=oe-112|0,t||(e[50303]||Ar(),t=201216),ua(A=s+16|0,r,40),e[s>>2]=47,e[s+4>>2]=A,mr(r=s- -64|0,87599,s),n=_r(r),g=-1;e:{t:{s:{if(l=e[t>>2]){r=0,A=-1;n:{for(;;){if(AA(s+16|0,e[l>>2])){if(AA(s+16|0,l=e[l+8>>2])?g=AA(s- -64|0,l+(_r(l)-n|0)|0)?g:r:A=r,l=e[((r=r+1|0)<<2)+t>>2])continue;break n}break}if((0|r)>=0)break t;r=(0|A)<0?g:A;break s}if((0|(r=A))>=0)break s}r=g}if(A=0,(0|r)<0)break e}A=e[(r<<2)+t>>2]}return oe=s+112|0,A}function xa(t,r){var s,n,A=0,l=0,g=0,m=0,w=0;oe=s=oe-16|0,N(+r),n=0|M(1),l=0|M(0),(0|(g=(A=2147483647&n)-1048576|0))==2145386495|g>>>0<2145386495?(m=l<<28,g=A>>>4|0,A=(15&A)<<28|l>>>4,l=g+1006632960|0):(0|A)==2146435072|A>>>0>2146435072?(m=l<<28,A=(15&n)<<28|l>>>4,l=n>>>4|2147418112):A|l?(la(s,l,g=A,0,0,(A=A?ke(A):ke(l)+32|0)+49|0),w=e[s>>2],m=e[s+4>>2],g=15372-A<<16,A=e[s+8>>2],l=g|65536^e[s+12>>2]):(A=0,l=0),e[t>>2]=w,e[t+4>>2]=m,e[t+8>>2]=A,e[t+12>>2]=-2147483648&n|l,oe=s+16|0}function Gs(t,r,s){var n=0,A=0;e:{t:{s:{if(!(3&((A=t)^r))){n=!!(0|s);n:if(!(!(3&r)|!s))for(;;){if(n=c[0|r],f[0|A]=n,!n)break e;if(A=A+1|0,n=!!(0|(s=s-1|0)),!(3&(r=r+1|0)))break n;if(!s)break}if(!n)break t;if(!c[0|r])break e;if(!(s>>>0<4))for(;;){if(~(n=e[r>>2])&n-16843009&-2139062144)break s;if(e[A>>2]=n,A=A+4|0,r=r+4|0,!((s=s-4|0)>>>0>3))break}}if(!s)break t}for(;;){if(n=c[0|r],f[0|A]=n,!n)break e;if(A=A+1|0,r=r+1|0,!(s=s-1|0))break}}s=0}return Yt(A,0,s),t}function Fs(t,r,s,n,A,l){var g,m=0,w=0,T=0;oe=g=oe-240|0,m=e[s>>2],e[g+232>>2]=m,s=e[s+4>>2],e[g>>2]=t,e[g+236>>2]=s,T=1;e:{t:{s:{if(s|(0|m)!=1){for(m=t;;){if((0|qi(s=m-e[(w=(n<<2)+l|0)>>2]|0,t,r))<=0){s=m;break s}n:{if(!((0|n)<2|A)&&(A=e[w-8>>2],(0|qi(w=m-4|0,s,r))>=0||(0|qi(w-A|0,s,r))>=0))break n;if(e[(T<<2)+g>>2]=s,Do(m=g+232|0,A=Is(m)),T=T+1|0,n=n+A|0,A=0,m=s,e[g+236>>2]|e[g+232>>2]!=1)continue;break t}break}s=m;break t}s=t}if(A)break e}Ti(g,T),Vo(s,r,n,l)}oe=g+240|0}function Ls(t,r){var s=0;e[4+(134912+(s=t<<2)|0)>>2]=r,e[s+136192>>2]=r,s=28;e:{t:{s:switch(t-1|0){case 0:e[50792]=r,e[50786]=r,gi(3);break t;case 1:e[50787]=r,e[33037]=(0|j(c[e[50797]+105596|0],(0|j(e[50787],55))/100|0))/16;break t;case 2:t=(0|r)>=99?99:r,e[50785]=(0|t)>0?t:0;break t;case 3:e[50788]=(0|r)>=99?99:r;break t;case 12:e[47268]=r;break t;case 6:e[47205]=r;break t;case 9:break t;case 8:break s;default:break e}(t=255&r)&&(e[e[47192]+152>>2]=t),e[47196]=r}s=0}return s}function Ms(t,r){var s=0,n=0,A=0;e:if(e[t>>2])for(;;){if(Za(e[t-4>>2])){if(n=0,(0|(s=f[0|r]))==e[t>>2])for(;(0|(s=f[(n=n+1|0)+r|0]))==e[(t=t+4|0)>>2];);if(!s){for(;r=t,t=t+4|0,Za(e[r>>2]););for(A=r+((e[r>>2]==61)<<2)|0;A=(t=A)+4|0,Za(e[t>>2]););switch((r=e[t>>2])-34|0){case 0:case 5:break e}return Za(r)||e[t>>2]==47?102808:t}}if(!e[(t=t+4|0)>>2])break}return A}function fa(t,r,s,n){var A,l,g=0,m=0,w=0;return!c[t+25|0]|D[t+8>>3]!=s|D[t+16>>3]!=n?(D[t+16>>3]=n,D[t+8>>3]=s,n=(g=Cs(-3.141592653589793/(m=+e[t>>2])*n))*-g,D[t+48>>3]=n,g*=$n(-6.283185307179586/m*s),g+=g,D[t+40>>3]=g,m=1-g-n,D[t+32>>3]=m,!(w=c[t+24|0])|s==0||(m=1/m,D[t+32>>3]=m,n*=s=-m,D[t+48>>3]=n,g*=s,D[t+40>>3]=g,w=1)):(w=c[t+24|0],n=D[t+48>>3],g=D[t+40>>3],m=D[t+32>>3]),f[t+25|0]=1,s=D[t+64>>3],A=D[t+56>>3],D[t+64>>3]=A,l=r,r=n*s+(m*r+g*A),D[t+56>>3]=w?l:r,r}function Ba(t,r,s,n,A){var l,g=0,m=0,w=0,T=0;if((l=e[34388])&&!((0|(m=e[34436]))>=(e[34393]-2|0))){if(e[34436]=m+1,g=j(m,36)+l|0,e[g>>2]=t,e[g+4>>2]=e[34437],T=e[34438],e[g+12>>2]=r>>>24,e[g+8>>2]=16777215&r,e[g+24>>2]=T,r=e[50754],A=e[34439]+((A-e[34392]|0)/2|0)|0,e[g+20>>2]=A,r=ge(w=1e3*+(0|A)/+(0|r))<2147483648?~~w:-2147483648,e[g+16>>2]=r,t-3>>>0<=1)return void(e[28+(j(m,36)+l|0)>>2]=e[33282]+s);r=28+(j(m,36)+l|0)|0,e[r>>2]=s,(0|t)==7&&(e[r+4>>2]=n)}}function Ma(t,r,s,n,A,l){var g=0,m=0,w=0,T=0;64&l?(r=31&(s=l+-64|0),(63&s)>>>0>=32?(s=0,r=A>>>r|0):(s=A>>>r|0,r=((1<<r)-1&A)<<32-r|n>>>r),n=0,A=0):l&&(w=n,g=31&(m=64-l|0),(63&m)>>>0>=32?(m=w<<g,T=0):(m=(1<<g)-1&w>>>32-g|A<<g,T=w<<g),w=r,r=31&l,(63&l)>>>0>=32?(g=0,r=s>>>r|0):(g=s>>>r|0,r=((1<<r)-1&s)<<32-r|w>>>r),r|=T,s=g|m,g=n,n=31&l,(63&l)>>>0>=32?(m=0,n=A>>>n|0):(m=A>>>n|0,n=((1<<n)-1&A)<<32-n|g>>>n),A=m),e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=n,e[t+12>>2]=A}function Ca(t){var r=0,s=0;if(!t){if(e[33174]&&(r=Ca(e[33174])),e[33136]&&(r=Ca(e[33136])|r),t=e[56816])for(;e[t+20>>2]!=e[t+28>>2]&&(r=Ca(t)|r),t=e[t+56>>2];);return r}return e[t+76>>2],e[t+20>>2]==e[t+28>>2]||(rs[e[t+36>>2]](t,0,0),e[t+20>>2])?((0|(r=e[t+8>>2]))!=(0|(s=e[t+4>>2]))&&(r=s-r|0,rs[e[t+40>>2]](t,r,r>>31,1)),r=0,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t+4>>2]=0,e[t+8>>2]=0):r=-1,r}function na(t,r){var s=0,n=0,A=0,l=0,g=0;if((192&(s=c[0|r]))==128)for(;(192&(s=c[0|(r=r-1|0)]))==128;);e:if(128&(s=s<<24>>24)){if(n=1,(0|(A=224&s))!=192)if((240&s)!=224){if(n=3,(248&s)!=240){s&=255,n=0;break e}}else n=2,g=1;s=c[n+93846|0]&s,(l=c[r+1|0])?(s=63&l|s<<6,(0|A)!=192&&((A=c[r+2|0])?(s=63&A|s<<6,g||((r=c[r+3|0])?s=63&r|s<<6:n=2)):n=1)):n=0}return e[t>>2]=s,n+1|0}function za(t,r,s,n){var A,l=0,g=0;return oe=A=oe-224|0,t?(e[A>>2]=137584,e[A+4>>2]=47,e[A+8>>2]=r,mr(r=A+16|0,85430,A),(0|(l=bi(r)))<0?r=Vi(n,0-l|0,A+16|0):(r=bn(A+16|0,85659))?((g=e[t>>2])&&Zt(g),l?(g=wr(l),e[t>>2]=g,g?(0|lA(g,l,r))==(0|l)?(fn(r),r=0,s&&(e[s>>2]=l)):(s=e[56798],fn(r),Zt(e[t>>2]),e[t>>2]=0,r=Vi(n,s,A+16|0)):(fn(r),r=48)):(r=0,e[t>>2]=0)):r=Vi(n,e[56798],A+16|0)):r=28,oe=A+224|0,r}function Hr(t,r){var s=0,n=0,A=0,l=0,g=0;if((192&(s=c[0|r]))==128)for(;(192&(s=c[0|(r=r+1|0)]))==128;);e:if(128&(s=s<<24>>24)){if(n=1,(0|(A=224&s))!=192)if((240&s)!=224){if(n=3,(248&s)!=240){s&=255,n=0;break e}}else n=2,g=1;s=c[n+93846|0]&s,(l=c[r+1|0])?(s=63&l|s<<6,(0|A)!=192&&((A=c[r+2|0])?(s=63&A|s<<6,g||((r=c[r+3|0])?s=63&r|s<<6:n=2)):n=1)):n=0}return e[t>>2]=s,n+1|0}function la(t,r,s,n,A,l){var g=0,m=0,w=0;64&l?(n=r,r=31&(A=l+-64|0),(63&A)>>>0>=32?(A=n<<r,n=0):(A=(1<<r)-1&n>>>32-r|s<<r,n<<=r),r=0,s=0):l&&(g=n,n=31&l,(63&l)>>>0>=32?(m=g<<n,w=0):(m=(1<<n)-1&g>>>32-n|A<<n,w=g<<n),g=r,n=31&(A=64-l|0),(63&A)>>>0>=32?(A=0,r=s>>>n|0):(A=s>>>n|0,r=((1<<n)-1&s)<<32-n|g>>>n),n=w|r,A|=m,r=31&l,(63&l)>>>0>=32?(m=g<<r,r=0):(m=(1<<r)-1&g>>>32-r|s<<r,r=g<<r),s=m),e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=n,e[t+12>>2]=A}function Rn(t){var r=0;return t>>>0<=55295?r=c[e[125552+(t>>>6&67108860)>>2]+(255&t)|0]:(r=4,t>>>0<57344||(t>>>0<63488?r=3:t>>>0<=195327?r=c[e[126416+(t-63488>>>6&67108860)>>2]+(255&t)|0]:(r=2,t>>>0<917504||(t>>>0<=918015?r=c[e[128476+(t-917504>>>6&67108860)>>2]+(255&t)|0]:t>>>0<983040||(t>>>0<1048574?r=3:t>>>0<1048576||(r=3,t>>>0<1114110||(r=t>>>0<1114112?2:5))))))),255&r}function Mo(t,r){var s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0;if(!((0|(s=e[33709]))<=0)){if(A=(0|t)>31?t-32|0:t,t=0,s>>>0>=4)for(x=-4&s;m=2|t,w=1|t,n=e[134912+((g=3|t)<<6)>>2]==(0|A)?g:e[134912+(m<<6)>>2]==(0|A)?m:e[134912+(w<<6)>>2]==(0|A)?w:e[134912+(t<<6)>>2]==(0|A)?t:n,t=t+4|0,(0|x)!=(0|(l=l+4|0)););if(l=3&s)for(;n=e[134912+(t<<6)>>2]==(0|A)?t:n,t=t+1|0,(0|l)!=(0|(T=T+1|0)););(0|n)<=0||(e[33709]=n,s=n)}Xn(r,s)}function ol(t){var r,s=0,n=0,A=0;for(oe=r=oe-96|0,ua(r,t,60),fo(r,1);A=zs(f[0|(n=r+s|0)]),f[0|n]=A,s=s+1|0,255&A;);e[r+92>>2]=0,e[r+84>>2]=0,e[r+88>>2]=0,e[r+76>>2]=0,e[r+80>>2]=0,e[r+72>>2]=t;e:{t:{s:{if(Xt(r,1)){if(c[202976])break s;break t}if(e[50303]||Ar(),s=268437247,!(t=ha(201216,r))||!Xt(e[t+8>>2],0))break e;if(!c[202976])break t}Xt(202976,2)}wA(e[32972]),e[r+76>>2]=e[32972]+40,Ro(r+72|0,202976),s=0}return oe=r+96|0,s}function RA(t,r){if(!t)return 0;e:{t:{if(t){if(r>>>0<=127)break t;if(e[e[56841]>>2]){if(r>>>0<=2047){f[t+1|0]=63&r|128,f[0|t]=r>>>6|192,t=2;break e}if(!((-8192&r)!=57344&r>>>0>=55296)){f[t+2|0]=63&r|128,f[0|t]=r>>>12|224,f[t+1|0]=r>>>6&63|128,t=3;break e}if(r-65536>>>0<=1048575){f[t+3|0]=63&r|128,f[0|t]=r>>>18|240,f[t+2|0]=r>>>6&63|128,f[t+1|0]=r>>>12&63|128,t=4;break e}}else if((-128&r)==57216)break t;e[56798]=25,t=-1}else t=1;break e}f[0|t]=r,t=1}return t}function Al(t){var r=0,s=0,n=0,A=0;if(e[t+20>>2]=0,(n=(s=e[t+8>>2])-(r=e[t+4>>2])|0)>>>0>=9)for(;Zt(e[r>>2]),r=e[t+4>>2]+4|0,e[t+4>>2]=r,(n=(s=e[t+8>>2])-r|0)>>>0>8;);switch(A=512,(n>>>2|0)-1|0){case 1:A=1024;case 0:e[t+16>>2]=A}if((0|r)!=(0|s)){for(;Zt(e[r>>2]),(0|s)!=(0|(r=r+4|0)););(0|(r=e[t+8>>2]))!=(0|(s=e[t+4>>2]))&&(e[t+8>>2]=r+(3+(s-r|0)&-4))}(t=e[t>>2])&&Zt(t)}function hi(t,r,s){var n=0,A=0;n=!!(0|s);e:{t:{s:if(!(!(3&t)|!s))for(A=255&r;;){if((0|A)==c[0|t])break t;if(n=!!(0|(s=s-1|0)),!(3&(t=t+1|0)))break s;if(!s)break}if(!n)break e;if(!(c[0|t]==(255&r)|s>>>0<4))for(n=j(255&r,16843009);;){if(~(A=n^e[t>>2])&A-16843009&-2139062144)break t;if(t=t+4|0,!((s=s-4|0)>>>0>3))break}if(!s)break e}for(r&=255;;){if((0|r)==c[0|t])return t;if(t=t+1|0,!(s=s-1|0))break}}return 0}function uo(t,r){var s=0,n=0;e:{if(n=255&r){if(3&t)for(;;){if(!(s=c[0|t])|(0|s)==(255&r))break e;if(!(3&(t=t+1|0)))break}t:if(!(~(s=e[t>>2])&s-16843009&-2139062144))for(n=j(n,16843009);;){if(~(s^=n)&s-16843009&-2139062144)break t;if(s=e[t+4>>2],t=t+4|0,s-16843009&~s&-2139062144)break}for(;(n=c[0|(s=t)])&&(t=s+1|0,(0|n)!=(255&r)););return s}return _r(t)+t|0}return t}function ll(t,r,s,n,A){var l,g=0,m=0;m=-1;e:if(!(((g=(0|(l=2147483647&n))==2147418112)&!s?t|r:g&!!(0|s)|l>>>0>2147418112)||(g=2147483647&A)>>>0>2147418112&(0|g)!=2147418112)){if(!(t|s|g|l|r))return 0;if((0|(g=n&A))>0|(0|g)>=0){if((!!(0|s)|(0|n)!=(0|A))&(0|n)<(0|A))break e;return!!(t|s|n^A|r)}(!s&(0|n)==(0|A)?t|r:!!(0|s)&(0|n)>=(0|A)|(0|n)>(0|A))||(m=!!(t|s|n^A|r))}return m}function fo(t,r){var s,n=0;oe=s=oe+-64|0,f[202976]=0,e[s+48>>2]=47,mr(s+59|0,91351,s+48|0),r||(f[s+59|0]=0);e:{t:{if(t&&(t=yi(t,43))){if(f[0|t]=0,f[0|(t=t+1|0)]-48>>>0>=10)break t;n=ao(t)}if((0|n)<=0)break e;if(n>>>0<=9){e[s+4>>2]=n,e[s>>2]=s+59,mr(202976,91378,s);break e}e[s+20>>2]=n-10,e[s+16>>2]=s+59,mr(202976,91503,s+16|0);break e}e[s+36>>2]=t,e[s+32>>2]=s+59,mr(202976,85425,s+32|0)}oe=s- -64|0}function ni(t){var r,s=0,n=0,A=0;oe=r=oe-80|0,s=$a(t,r+12|0),e[r+12>>2]?(ua(n=r+16|0,s,60),s=0,fo(n,1),!Xt(n,0)|!c[202976]||Xt(202976,2),wA(e[32972]),Ro(t,86012)):s=268437247,oe=r+80|0;e:{t:{s:{n:{if((0|s)<=268437502){if(!s)break e;if((0|s)==268436479)break t;if((0|s)!=268437247)break n;return 2}if((0|s)==268437503|(0|s)==268437759)break s;if((0|s)==268439295)break e}return-1}return 2}A=1}return A}function dn(t,r,s,n,A,l,g,m,w){var T,x,F;w=ds(r,s,m,w),m=H,A=ds(n,A,l,g),n=H+m|0,m=A>>>0>(w=A+w|0)>>>0?n+1|0:n,T=g,x=s,g=(s=ds(g,A=0,s,n=0))+w|0,w=H+m|0,F=g,s=s>>>0>g>>>0?w+1|0:w,g=ds(l,0,r,0),m=H,n=ds(l,w=0,x,n),l=H+w|0,l=n>>>0>(m=m+n|0)>>>0?l+1|0:l,n=s,l=l>>>0>(w=l+F|0)>>>0?n+1|0:n,s=ds(r,0,T,A)+m|0,A=H,m=(A=s>>>0<m>>>0?A+1|0:A)+w|0,w=l,e[t+8>>2]=m,e[t+12>>2]=A>>>0>m>>>0?w+1|0:w,e[t>>2]=g,e[t+4>>2]=s}function Qr(t,r){var s=0,n=0;e:{if(3&((n=t)^r))s=c[0|r];else{if(3&r)for(;;){if(s=c[0|r],f[0|n]=s,!s)break e;if(n=n+1|0,!(3&(r=r+1|0)))break}if(!(~(s=e[r>>2])&s-16843009&-2139062144))for(;e[n>>2]=s,s=e[r+4>>2],n=n+4|0,r=r+4|0,!(s-16843009&~s&-2139062144););}if(f[0|n]=s,255&s)for(;s=c[r+1|0],f[n+1|0]=s,n=n+1|0,r=r+1|0,s;);}return t}function $n(t){var r,s=0,n=0;oe=r=oe-16|0,N(+t),n=0|M(1),M(0);e:if((n&=2147483647)>>>0<=1072243195){if(s=1,n>>>0<1044816030)break e;s=To(t,0)}else if(s=t-t,!(n>>>0>=2146435072)){switch(3&Wa(t,r)){case 0:s=To(D[r>>3],D[r+8>>3]);break e;case 1:s=-io(D[r>>3],D[r+8>>3],1);break e;case 2:s=-To(D[r>>3],D[r+8>>3]);break e}s=io(D[r>>3],D[r+8>>3],1)}return oe=r+16|0,s}function jA(t,r,s,n){var A=0,l=0,g=0;if(!((_r(n)+_r(r)|0)>=(0|s))){for(g=e[36115],s=n;A=c[0|s];)if(s=s+1|0,!((0|A)>=(0|g))){e:{t:switch(A=e[144464+(A<<2)>>2],c[A+11|0]-1|0){case 1:break e;case 0:break t;default:continue}l=c[A+14|0]<4|l;continue}1&(c[A+4|0]>>>1|l)||(e[t+8212>>2]=e[t+8212>>2]+1),e[t+8208>>2]=e[t+8208>>2]+1,l=0}r&&wn(r,n)}}function Eo(t){var r,s=0;oe=r=oe-16|0,N(+t),s=0|M(1),M(0);e:if((s&=2147483647)>>>0<=1072243195){if(s>>>0<1045430272)break e;t=io(t,0,0)}else if(s>>>0>=2146435072)t-=t;else{switch(3&Wa(t,r)){case 0:t=io(D[r>>3],D[r+8>>3],1);break e;case 1:t=To(D[r>>3],D[r+8>>3]);break e;case 2:t=-io(D[r>>3],D[r+8>>3],1);break e}t=-To(D[r>>3],D[r+8>>3])}return oe=r+16|0,t}function VA(t){var r=0;e[t+296>>2]=303173648,e[t+300>>2]=370677780,r=e[26341],e[t+304>>2]=e[26340],e[t+308>>2]=r,r=e[26343],e[t+312>>2]=e[26342],e[t+316>>2]=r,Zn(t),e[t+56>>2]=2,e[t+36>>2]=3,e[t+40>>2]=1074,f[t+168|0]=5,e[t+132>>2]=32,e[t+104>>2]=1032,e[t+108>>2]=66,e[t+8>>2]=5,e[t+12>>2]=32,f[t+365|0]=64|c[t+365|0],f[t+368|0]=64|c[t+368|0],f[t+396|0]=64|c[t+396|0],f[t+399|0]=64|c[t+399|0]}function WA(t,r,s){var n=0,A=0,l=0;e:{if(!(n=e[s+16>>2])){if(mo(s))break e;n=e[s+16>>2]}if(n-(l=e[s+20>>2])>>>0<r>>>0)return 0|rs[e[s+36>>2]](s,t,r);t:if(e[s+80>>2]<0)n=0;else{for(A=r;;){if(!(n=A)){n=0;break t}if(c[(A=n-1|0)+t|0]==10)break}if((A=0|rs[e[s+36>>2]](s,t,n))>>>0<n>>>0)break e;t=t+n|0,r=r-n|0,l=e[s+20>>2]}Jr(l,t,r),e[s+20>>2]=e[s+20>>2]+r,A=r+n|0}return A}function cl(t){var r,s=0,n=0;e:{if((0|(r=e[34064]))>0)for(;;){if((n=e[136284+(s<<4)>>2])&&!Pa(t,n)){if(e[136276+(s<<4)>>2])return s;if(n=-1,ui(0,s))break e;return s}if((0|r)==(0|(s=s+1|0)))break}n=-1,ui(t,r)||(s=Fa(e[12+(136272+(e[34064]<<4)|0)>>2],_r(t)+1|0),n=e[34064],e[12+(136272+(n<<4)|0)>>2]=s,Qr(s,t),e[34064]=n+1)}return n}function oA(t,r){var s,n=0,A=0,l=0,g=0;for(oe=s=oe-16|0,f[0|r]=0,(n=15&e[t>>2])&&(r=(A=_r(r=Qr(r,Po(128496,64|n))))+r|0),n=8;;){e:{t:{if(n>>>0<=29){if(e[t>>2]>>>n&1)break t;break e}if(!(e[t+4>>2]>>>n-32&1)|n>>>0<32)break e}(0|(A=(g=_r(l=Po(128496,n))+1|0)+A|0))>=80||(e[s>>2]=l,mr(r,84439,s),r=r+g|0)}if((0|(n=n+1|0))==64)break}oe=s+16|0}function Kl(t,r,s){var n,A=0,l=0,g=0;if(oe=n=oe-16|0,c[0|t]){for(g=e[30450];;)if(l=t,t=t+1|0,!((0|(A=f[0|l]))==32|A-9>>>0<5)){for((0|(A=ao(l)))>0&&((0|A)<32?e[r>>2]=e[r>>2]|1<<A:(l=Po(129568,s),e[n+4>>2]=A,e[n>>2]=l,wa(g,84902,n)),l=t);l=(t=l)+1|0,(A=f[0|t])-48>>>0<10|(32|A)-97>>>0<26;);if(!A)break}}oe=n+16|0}function ii(t,r,s){var n=0,A=0,l=0,g=0;e:if(r&&!((0|(A=s-4|0))<=0))for(l=(0|(s=e[r-4>>2]))!=34?(0|s)==39?s:0:s,s=0;;){if(g=s,!(s=e[r>>2]))break e;t:{if(!l){if((0|s)==32|s-9>>>0<5)break e;if((0|s)!=47)break t;break e}if((0|g)!=92&&(0|s)==(0|l))break e}if(r=r+4|0,!((0|A)>(0|(n=Xa(s,t+n|0)+n|0))))break}return f[t+n|0]=0,n}function ca(t){var r=0;e:if(!ls(t)){r=0;t:if(!(t>>>0<768)){if(t-2305>>>0<=1270){if((124&t)>>>0<100)break e;if(r=1,Zo(93850,t))break t;return t-3450>>>0<6}if((0|t)==1541|t-1456>>>0<19|(0|t)==1648||(0|(r=-256&t))==10240|(0|r)==4352|t-3904>>>0<125|t>>>0<880)break e;r=1,t-1611>>>0<20||(r=t-12353>>>0<30400)}return r}return 1}function Ro(t,r){var s=0;t?((s=e[t+4>>2])&&Qr(133208,s),(s=e[t>>2])&&ua(133168,s,40),e[33289]=c[t+14|0],e[33291]=c[t+13|0],e[33290]=c[t+12|0],ua(134672,c[0|r]!=33|c[r+1|0]!=118?r:(c[r+2|0]==47?3:0)+r|0,40),t=e[50298],e[33678]=e[50297],e[33679]=t,t=e[50302],e[33682]=e[50301],e[33683]=t,t=e[50300],e[33680]=e[50299],e[33681]=t):Yt(133152,0,76)}function go(t,r,s,n){f[t+53|0]=1;e:if(e[t+4>>2]==(0|s)){f[t+52|0]=1;t:{if(!(s=e[t+16>>2])){if(e[t+36>>2]=1,e[t+24>>2]=n,e[t+16>>2]=r,(0|n)!=1)break e;if(e[t+48>>2]==1)break t;break e}if((0|r)==(0|s)){if((0|(s=e[t+24>>2]))==2&&(e[t+24>>2]=n,s=n),e[t+48>>2]!=1)break e;if((0|s)==1)break t;break e}e[t+36>>2]=e[t+36>>2]+1}f[t+54|0]=1}}function jn(t,r){var s=0,n=0,A=0,l=0,g=0;e:if(s=e[r>>2])for(;;){n=0;t:if(t){for(;g=f[n+s|0],(A=e[(n<<2)+t>>2])&&(n=n+1|0,(0|g)==(0|A)););s:switch(A-34|0){case 0:case 5:break s;default:break t}if(!g)break e}if(!(s=e[((l=l+1|0)<<3)+r>>2]))break}return e[4+((l<<3)+r|0)>>2]}function po(t,r){e:if((0|r)>=1024){if(t*=898846567431158e293,r>>>0<2047){r=r-1023|0;break e}t*=898846567431158e293,r=((0|r)>=3069?3069:r)-2046|0}else(0|r)>-1023||(t*=2004168360008973e-307,r>>>0>4294965304?r=r+969|0:(t*=2004168360008973e-307,r=((0|r)<=-2960?-2960:r)+1938|0));return B(0,0),B(1,r+1023<<20),t*+S()}function ji(t,r,s,n){var A,l,g,m=0;return oe=l=oe-16|0,e[l+12>>2]=n,oe=A=oe-160|0,g=r?t:A+158|0,e[A+144>>2]=g,m=-1,t=r-1|0,e[A+148>>2]=t>>>0<=r>>>0?t:0,t=Yt(A,0,144),e[t+76>>2]=-1,e[t+36>>2]=17,e[t+80>>2]=-1,e[t+44>>2]=t+159,e[t+84>>2]=t+144,(0|r)<0?e[56798]=61:(f[0|g]=0,m=as(t,s,n,15,16)),oe=t+160|0,oe=l+16|0,m}function AA(t,r){var s=0,n=0,A=0;e:if(s=c[0|t])for(;;){if(!(n=c[0|r])){A=s;break e}if((0|s)!=(0|n)&&(0|(n=s-65>>>0<26?32|s:s))!=(0|((s=c[0|r])-65>>>0<26?32|s:s))){A=c[0|t];break e}if(r=r+1|0,s=c[t+1|0],t=t+1|0,!s)break}return(A=(t=255&A)-65>>>0<26?32|t:t)-((t=c[0|r])-65>>>0<26?32|t:t)|0}function lA(t,r,s){var n=0,A=0;if(n=e[s+72>>2],e[s+72>>2]=n-1|n,(0|(n=e[s+4>>2]))==(0|(A=e[s+8>>2]))?n=r:(Jr(t,n,n=r>>>0>(n=A-n|0)>>>0?n:r),e[s+4>>2]=n+e[s+4>>2],t=t+n|0,n=r-n|0),n)for(;;){if(uA(s)||!(A=0|rs[e[s+32>>2]](s,t,n)))return r-n|0;if(t=t+A|0,!(n=n-A|0))break}return r}function ao(t){for(var r=0,s=0,n=0,A=0;t=(r=t)+1|0,(0|(s=f[0|r]))==32|s-9>>>0<5;);e:{t:{s:switch((s=f[0|r])-43|0){case 0:break t;case 2:break s;default:break e}A=1}s=f[0|t],r=t}if(s-48>>>0<10)for(;n=48+(j(n,10)-f[0|r]|0)|0,t=f[r+1|0],r=r+1|0,t-48>>>0<10;);return A?n:0-n|0}function UA(t,r){var s,n,A,l=0;return oe=s=oe-32|0,e[r>>2]=0,e[r+4>>2]=0,e[(l=n=r+24|0)>>2]=0,e[l+4>>2]=0,e[(l=A=r+16|0)>>2]=0,e[l+4>>2]=0,e[(l=r+8|0)>>2]=0,e[l+4>>2]=0,e[s+28>>2]=r+28,e[s+24>>2]=n,e[s+20>>2]=r+20,e[s+16>>2]=A,e[s+12>>2]=r+12,e[s+8>>2]=l,e[s+4>>2]=r+4,e[s>>2]=r,t=Jt(t,84553,s),oe=s+32|0,t}function jo(t){var r=0,s=0,n=0;if((r=c[0|t])&&((s=c[t+1|0])?(s=r|s<<8,(r=c[t+2|0])&&(s|=r<<16,(t=c[t+3|0])&&(s|=t<<24))):s=r),(0|(r=e[36115]))>0)for(t=0;;){if(!(!(n=e[144464+(t<<2)>>2])|e[n>>2]!=(0|s)))return c[n+10|0];if((0|r)==(0|(t=t+1|0)))break}return 0}function Vo(t,r,s,n){var A,l=0,g=0,m=0,w=0,T=0;oe=A=oe-240|0,e[A>>2]=t,m=1;e:if(!((0|s)<2))for(l=t;;){if((0|qi(t,g=(l=l-4|0)-e[((w=s-2|0)<<2)+n>>2]|0,r))>=0&&(0|qi(t,l,r))>=0)break e;if(T=g,l=(g=(0|qi(g,l,r))>=0)?T:l,e[(m<<2)+A>>2]=l,m=m+1|0,!((0|(s=g?s-1|0:w))>1))break}Ti(A,m),oe=A+240|0}function mr(t,r,s){var n,A,l,g=0;return oe=A=oe-16|0,e[A+12>>2]=s,oe=n=oe-160|0,Jr(l=n+8|0,124528,144),e[n+52>>2]=t,e[n+28>>2]=t,g=(g=-2-t|0)>>>0>2147483647?2147483647:g,e[n+56>>2]=g,t=t+g|0,e[n+36>>2]=t,e[n+24>>2]=t,t=Xi(l,r,s),g&&(r=e[n+28>>2],f[r-((0|r)==e[n+24>>2])|0]=0),oe=n+160|0,oe=A+16|0,t}function Ti(t,r){var s,n=0,A=0,l=0,g=0,m=0;if(n=4,oe=s=oe-256|0,(0|r)>=2)for(e[(m=(r<<2)+t|0)>>2]=s;;){for(l=n>>>0>=256?256:n,Jr(e[m>>2],e[t>>2],l),A=0;g=(A<<2)+t|0,A=A+1|0,Jr(e[g>>2],e[(A<<2)+t>>2],l),e[g>>2]=e[g>>2]+l,(0|r)!=(0|A););if(!(n=n-l|0))break}oe=s+256|0}function vr(t,r,s){var n,A=0;return oe=n=oe-96|0,e[n+88>>2]=0,e[n+92>>2]=1073741824,e[n+84>>2]=r,r=ba(t,n+84|0,s,n+88|0,2,0),536870912&(A=e[n+88>>2])?(r=e[47202],e[47202]=0,f[n+2|0]=32,I[n>>1]=8192,ua(A=3|n,e[n+84>>2],77),t=pe(t,A,0,0),Qr(s,189088),e[47202]=r):t=r?A:0,oe=n+96|0,t}function cA(t,r,s){var n=0,A=0,l=0;A=ho(t),n=e[r>>2];e:{t:if((0|A)>=0){if(n){if(!Pa(t,s))break t;(l=e[n+688>>2])&&Zt(l),Zt(n),e[r>>2]=0}e[r>>2]=ze(t),t=Qr(s,t),vn(s=e[r>>2],s+228|0,0)&&(Mn(e[e[32972]+60>>2]),f[0|t]=0,A=-1),n=e[r>>2],e[n+292>>2]=A}else if(!n)break e;f[n+268|0]=0}return A}function HA(t){var r=0,s=0;return(0|(r=e[t+76>>2]))>=0&(!r|e[56823]!=(-1073741825&r))?(s=e[(r=t+76|0)>>2],e[r>>2]=s||1073741823,(0|(s=e[t+4>>2]))==e[t+8>>2]?t=Xo(t):(e[t+4>>2]=s+1,t=c[0|s]),e[r>>2]=0,t):(0|(r=e[t+4>>2]))!=e[t+8>>2]?(e[t+4>>2]=r+1,c[0|r]):Xo(t)}function Vn(t,r,s){var n=0,A=0;e:{t:{if(s>>>0>=4){if(3&(t|r))break t;for(;;){if(e[t>>2]!=e[r>>2])break t;if(r=r+4|0,t=t+4|0,!((s=s-4|0)>>>0>3))break}}if(!s)break e}for(;;){if((0|(n=c[0|t]))==(0|(A=c[0|r]))){if(r=r+1|0,t=t+1|0,s=s-1|0)continue;break e}break}return n-A|0}return 0}function mi(t,r){var s,n=0,A=0,l=0;oe=s=oe-16|0,r?(la(s,A=((n=r>>31)^r)-n|0,0,0,0,(n=ke(A))+81|0),A=0+e[s+8>>2]|0,n=(65536^e[s+12>>2])+(16414-n<<16)|0,l=-2147483648&r|(n=A>>>0<l>>>0?n+1|0:n),n=e[s+4>>2],r=e[s>>2]):r=0,e[t>>2]=r,e[t+4>>2]=n,e[t+8>>2]=A,e[t+12>>2]=l,oe=s+16|0}function no(t){var r,s=0,n=0,A=0;if((0|(s=uo(t,61)))==(0|t))return 0;e:if(!c[(r=s-t|0)+t|0]&&(s=e[56800])&&(n=e[s>>2])){for(;;){if(KA(t,n,r)||(n=e[s>>2]+r|0,c[0|n]!=61)){if(n=e[s+4>>2],s=s+4|0,n)continue;break e}break}A=n+1|0}return A}function ho(t){var r=0,s=0;e:if(!((0|(s=e[34461]))<=0)){for(;;){if(!Pa(t,j(r,44)+137856|0)){e[34457]=r;break e}if((0|s)==(0|(r=r+1|0)))break}return-1}return(t=(0|r)==(0|s))?-1:((0|(t=t?-1:r))!=e[36114]&&(e[36115]=0,xs(t),e[36114]=t,e[36115]=e[36115]+1),r)}function YA(t,r,s,n){var A=0,l=0;e:if((32|c[0|r])!=32){if(A=((0|n)>2)<<1,l=On(t,r,s,A=(0|n)>1?4|A:A),c[0|s]!=21)for(A|=1,r=r+l|0,l=1;;){if((32|c[0|r])==32)break e;if(r=On(t,r,s,A)+r|0,l=l+1|0,c[0|s]==21)break}return Qr(189088,s),0}return kr(t,s,n,l),r}function Xa(t,r){var s,n=0,A=0,l=0;if(t>>>0<=127)return f[0|r]=t,1;if(t>>>0>=1114112)return f[0|r]=32,1;for(n=j(s=t>>>0<2048?1:t>>>0<65536?2:3,6),f[0|r]=c[s+93842|0]|t>>>n;n=n-6|0,f[(A=A+1|0)+r|0]=t>>>n&63|128,(0|(l=l+1|0))!=(0|s););return s+1|0}function ul(t){var r=0,s=0;e:{if((0|(r=e[t+12>>2]))>=e[t+16>>2]){if(r=0,(0|(s=0|Qe(e[t+8>>2],t+24|0,2048)))<=0){if(!s|(0|s)==-44)break e;return e[56798]=0-s,0}e[t+16>>2]=s}s=r,r=t+r|0,e[t+12>>2]=s+P[r+40>>1],s=e[r+36>>2],e[t>>2]=e[r+32>>2],e[t+4>>2]=s,r=r+24|0}return r}function dl(t,r){var s,n=0;if(n=e[t+632>>2])return!!(0|Ua(n,r));e:{t:{if((0|(s=e[t+600>>2]))>0){if(n=0,(r=r-s|0)-1>>>0<255)break t;break e}if((n=r-192|0)>>>0<=413)return 128&c[344+(c[n+94240|0]+t|0)|0];if(n=0,r>>>0>255)break e}n=128&c[344+(t+r|0)|0]}return n}function io(t,r,s){var n,A,l;return l=(n=t*t)*(n*n)*(158969099521155e-24*n-25050760253406863e-24)+(n*(27557313707070068e-22*n-.0001984126982985795)+.00833333333332249),A=n*t,s?t-(n*(.5*r-l*A)-r+.16666666666666632*A):A*(n*l-.16666666666666632)+t}function oo(t,r){var s,n=0,A=0,l=0;oe=s=oe-16|0,r?(la(s,n=r,0,0,0,(r=ke(r))+81|0),n=0+e[s+8>>2]|0,r=(65536^e[s+12>>2])+(16414-r<<16)|0,l=A>>>0>n>>>0?r+1|0:r,A=e[s+4>>2],r=e[s>>2]):r=0,e[t>>2]=r,e[t+4>>2]=A,e[t+8>>2]=n,e[t+12>>2]=l,oe=s+16|0}function fl(t){var r,s=0;oe=r=oe-16|0,f[r+15|0]=10;e:{if(!(s=e[t+16>>2])){if(mo(t))break e;s=e[t+16>>2]}(0|s)==(0|(s=e[t+20>>2]))|e[t+80>>2]==10?rs[e[t+36>>2]](t,r+15|0,1):(e[t+20>>2]=s+1,f[0|s]=10)}oe=r+16|0}function uA(t){var r,s=0;return s=e[t+72>>2],e[t+72>>2]=s-1|s,e[t+20>>2]!=e[t+28>>2]&&rs[e[t+36>>2]](t,0,0),e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,4&(s=e[t>>2])?(e[t>>2]=32|s,-1):(r=e[t+44>>2]+e[t+48>>2]|0,e[t+8>>2]=r,e[t+4>>2]=r,s<<27>>31)}function Bo(t){var r=0;e:{t:{s:{n:{if((0|(t=ol(t)))<=268437502){if(!t)break e;if((0|t)==268436479)break t;if((0|t)!=268437247)break n;return 2}if((0|t)==268437503|(0|t)==268437759)break s;if((0|t)==268439295)break e}return-1}return 2}r=1}return r}function _r(t){var r=0,s=0,n=0;e:{if(3&(r=t))for(;;){if(!c[0|r])break e;if(!(3&(r=r+1|0)))break}for(;s=r,r=r+4|0,!(~(n=e[s>>2])&n-16843009&-2139062144););for(;s=(r=s)+1|0,c[0|r];);}return r-t|0}function ei(t,r,s){var n,A=0,l=0,g=0;e[t+112>>2]=r,e[t+116>>2]=s,n=e[t+4>>2],A=e[t+44>>2]-n|0,e[t+120>>2]=A,e[t+124>>2]=A>>31,A=e[t+8>>2],r|s&&((0|s)>=(0|(g=(l=A-n|0)>>31))&r>>>0>=l>>>0|(0|s)>(0|g)||(A=r+n|0)),e[t+104>>2]=A}function dA(t,r){var s,n,A=0;if(N(+t),s=0|M(1),n=0|M(0),(0|(A=s>>>20&2047))!=2047){if(!A)return t==0?A=0:(t=dA(18446744073709552e3*t,r),A=e[r>>2]+-64|0),e[r>>2]=A,t;e[r>>2]=A-1022,B(0,0|n),B(1,-2146435073&s|1071644672),t=+S()}return t}function To(t,r){var s,n,A=0;return(n=1-(A=.5*(s=t*t)))+(1-n-A+(s*(s*(s*(2480158728947673e-20*s-.001388888888887411)+.0416666666666666)+(A=s*s)*A*(s*(-11359647557788195e-27*s+2087572321298175e-24)-27557314351390663e-23))-t*r))}function Yi(t,r,s){var n=0,A=0;if(r)for(;s=s-1|0,A=t,t=ko(t,r,10),n=H,f[0|s]=A-ds(t,n,10,0)|48,A=r>>>0>9,r=n,A;);if(t)for(;r=(t>>>0)/10|0,f[0|(s=s-1|0)]=t-j(r,10)|48,n=t>>>0>9,t=r,n;);return s}function Wo(t,r){var s=0,n=0,A=0;e:if(t){for(;A=f[r+s|0],(n=e[(s<<2)+t>>2])&&(s=s+1|0,(0|A)==(0|n)););t:switch(n-34|0){case 0:case 5:break t;default:break e}if(!A)return 0}return 1}function Uo(t,r,s){var n,A=0;return oe=n=oe-16|0,!(64&r)&&(A=0,4259840&~r)||(e[n+12>>2]=s+4,A=e[s>>2]),e[n>>2]=A,e[n+4>>2]=0,(t=0|ue(-100,0|t,32768|r,0|n))>>>0>=4294963201&&(e[56798]=0-t,t=-1),oe=n+16|0,t}function KA(t,r,s){var n=0,A=0,l=0;if(!s)return 0;e:if(n=c[0|t]){for(;;){if((A=c[0|r])&&!(!(s=s-1|0)|(0|n)!=(0|A))){if(r=r+1|0,n=c[t+1|0],t=t+1|0,n)continue;break e}break}l=n}return(255&l)-c[0|r]|0}function Ho(t,r){var s,n=0;oe=n=oe-128|0,n=Yt(n,0,128),f[n+98|0]=9,f[n+66|0]=9,f[n+34|0]=t,I[n+68>>1]=1,s=e[36125],e[n+104>>2]=s,e[n+72>>2]=s,e[n+40>>2]=e[144464+(t<<2)>>2],f[n+2|0]=9,e[n+8>>2]=s,os(0,0,n+32|0,r,0),oe=n+128|0}function fA(t){var r=0,s=0,n=0;if(f[e[t>>2]]-48>>>0>=10)return 0;for(;n=e[t>>2],s=-1,r>>>0<=214748364&&(s=(0|(s=f[0|n]-48|0))>(2147483647^(r=j(r,10)))?-1:s+r|0),e[t>>2]=n+1,r=s,f[n+1|0]-48>>>0<10;);return r}function qA(t,r){var s=0;if(!(!t|e[t>>2]-48>>>0>=10)){if(e[t>>2]-48>>>0<10)for(;s=(e[t>>2]+j(s,10)|0)-48|0,e[(t=t+4|0)>>2]-48>>>0<10;);(0|r)==1&&(s=(0|zs(e[t>>2]))==115?j(s,1e3):s)}return s}function Za(t){var r=0;r=1;e:{switch(0|Rn(t)){case 30:if(r=0,(0|t)==160|(0|t)==8199|(0|t)==8239)break e;return 1;case 0:if(t-9>>>0<5)return 1;if((0|t)==133)break e;break;case 28:case 29:break e}r=0}return r}function gA(t,r,s){var n,A=0;return oe=n=oe-16|0,f[n+6|0]=0,f[n+7|0]=95,A=Xa(A=r,r=n+8|0)+n|0,f[A+8|0]=32,f[A+9|0]=0,vr(t,n+7|0,s)||(f[n+7|0]=32,vr(t,r,s)||Bs(t,r,s,20,0,0,0)),oe=n+16|0,f[0|s]}function gl(t){var r=0,s=0;s=170;e:if(!((0|t)<170))for(;;){if((0|t)==(0|s))return P[101616+(r<<1|2)>>1];if((2147483646&(r=r+2|0))==124)break e;if(!((0|(s=P[101616+(r<<1)>>1]))<=(0|t)))break}return 0}function ds(t,r,s,n){var A,l,g,m,w=0,T=0;return m=j(w=s>>>16|0,T=t>>>16|0),w=(65535&(T=((g=j(A=65535&s,l=65535&t))>>>16|0)+j(T,A)|0))+j(w,l)|0,H=(j(r,s)+m|0)+j(t,n)+(T>>>16)+(w>>>16)|0,65535&g|w<<16}function zs(t){var r=0,s=0,n=0,A=0;for(r=2778;;){if((0|(s=e[1040+((n=(r+A|0)/2|0)<<4)>>2]))==(0|t))return(r=e[1048+(n<<4)>>2])||t;if(!((0|(A=(s=t>>>0>s>>>0)?n+1|0:A))<=(0|(r=s?r:n-1|0))))break}return t}function pA(t){var r=0,s=0,n=0,A=0;for(r=2778;;){if((0|(s=e[1040+((n=(r+A|0)/2|0)<<4)>>2]))==(0|t))return(r=e[1044+(n<<4)>>2])||t;if(!((0|(A=(s=t>>>0>s>>>0)?n+1|0:A))<=(0|(r=s?r:n-1|0))))break}return t}function bi(t){var r,s=0;return oe=r=oe-112|0,(t=0|He(0|t,0|r))>>>0>=4294963201&&(e[56798]=0-t,t=-1),s=0-e[56798]|0,t||(s=-31,(61440&e[r+12>>2])!=16384&&(s=e[r+40>>2])),oe=r+112|0,s}function gr(t,r,s){var n;if(!(n=e[t+16>>2]))return e[t+36>>2]=1,e[t+24>>2]=s,void(e[t+16>>2]=r);e:{if((0|r)==(0|n)){if(e[t+24>>2]!=2)break e;return void(e[t+24>>2]=s)}f[t+54|0]=1,e[t+24>>2]=2,e[t+36>>2]=e[t+36>>2]+1}}function xn(t,r,s,n,A){var l;if(oe=l=oe-256|0,!(73728&A|(0|s)<=(0|n))){if(Yt(l,255&r,(s=(n=s-n|0)>>>0<256)?n:256),!s)for(;sn(t,l,256),(n=n-256|0)>>>0>255;);sn(t,l,n)}oe=l+256|0}function Vi(t,r,s){var n=0;e:{if(t){if(n=e[t>>2]){Zt(e[n+4>>2]),n=e[t>>2];break e}if(n=wr(16),e[t>>2]=n,n)break e;r=48}return r}return e[n>>2]=0,e[n+4>>2]=Go(s),t=e[t>>2],e[t+8>>2]=0,e[t+12>>2]=0,r}function fn(t){var r=0,s=0;Ca(t),rs[e[t+12>>2]](t),1&f[0|t]||((r=e[t+52>>2])&&(e[r+56>>2]=e[t+56>>2]),(s=e[t+56>>2])&&(e[s+52>>2]=r),e[56816]==(0|t)&&(e[56816]=s),Zt(e[t+96>>2]),Zt(t))}function Pi(t){var r=0,s=0;r=1;e:{t:{s:{n:switch((s=Rn(t))-9|0){case 1:break e;case 6:case 18:break s;case 0:break n;default:break t}return(0|zs(t))!=(0|t)}return ne(t,s)>>>15&1}r=0}return r}function Ci(t){var r,s,n,A=0,l=0;if(n=_r(t)+1|0,A=e[33282],(0|(s=(r=e[33287])+n|0))>=e[33286]){if(!(A=Fa(A,l=s+1e3|0)))return-1;e[33286]=l,e[33282]=A}return Jr(A+r|0,t,n),e[33287]=s,r}function mo(t){var r=0;return r=e[t+72>>2],e[t+72>>2]=r-1|r,8&(r=e[t>>2])?(e[t>>2]=32|r,-1):(e[t+4>>2]=0,e[t+8>>2]=0,r=e[t+44>>2],e[t+28>>2]=r,e[t+20>>2]=r,e[t+16>>2]=r+e[t+48>>2],0)}function hA(t,r,s,n){e:if(t){t:switch(r+2|0){case 0:return void(f[0|t]=s);case 1:return void(I[t>>1]=s);case 2:case 3:return void(e[t>>2]=s);case 5:break t;default:break e}e[t>>2]=s,e[t+4>>2]=n}}function Yo(t,r,s,n,A,l,g,m,w){var T;oe=T=oe-16|0,sa(T,r,s,n,A,l,g,m,-2147483648^w),n=e[T>>2],s=e[T+4>>2],r=e[T+12>>2],e[t+8>>2]=e[T+8>>2],e[t+12>>2]=r,e[t>>2]=n,e[t+4>>2]=s,oe=T+16|0}function Pa(t,r){var s=0,n=0;e:if(!(!(s=c[0|t])|(0|s)!=(0|(n=c[0|r]))))for(;;){if(n=c[r+1|0],!(s=c[t+1|0]))break e;if(r=r+1|0,t=t+1|0,(0|s)!=(0|n))break}return s-n|0}function Po(t,r){var s=0,n=0,A=0;if(!(s=e[t>>2]))return 84399;if(e[t+4>>2]!=(0|r))for(;;){if(!(s=e[(n=t+8|0)>>2]))return 84399;if(A=t,t=n,e[A+12>>2]==(0|r))break}return s}function Ko(t,r,s){var n=0,A=0,l=0;e:if(s){for(;;){if(!(!(n=e[r>>2])|!(A=e[t>>2])|(0|n)!=(0|A))){if(r=r+4|0,t=t+4|0,s=s-1|0)continue;break e}break}l=A-n|0}return l}function gn(t){var r,s=0,n=0;if((0|(r=e[36115]))>0)for(;;){if(!(!(n=e[144464+(s<<2)>>2])|e[n>>2]!=(0|t)))return c[n+10|0];if((0|r)==(0|(s=s+1|0)))break}return 0}function bo(t){var r,s;return(t=(r=e[33175])+(s=t+7&-8)|0)>>>0<=r>>>0&&s||t>>>0>q.byteLength/65536<<16>>>0&&!(0|ct(0|t))?(e[56798]=48,-1):(e[33175]=t,r)}function fs(t){var r=0;e:if(!((r=Rn(t))>>>0>27)){if(!(1<<r&134259072)){if((0|r)==6)return 1;if((0|r)!=9)break e;return(0|pA(t))!=(0|t)}return ne(t,r)>>>14&1}return 0}function Ao(t,r){var s=0;return f[0|t]=r>>>24,f[0|(s=(r>>>0>16777215)+t|0)]=r>>>16,f[0|(s=s+!!(16711680&r)|0)]=r>>>8,f[0|(s=s+!!(65280&r)|0)]=r,f[s+!!(255&r)|0]=0,t}function mA(t,r){e:if((0|(t=Ls(t,r)))<=268437502){if(!t|(0|t)==268436479|(0|t)!=268437247)break e;return}}function Is(t){var r=0;return r=e[t>>2]-1|0,(r=f[121600+(j(0-r&r,124511785)>>>27|0)|0])||(t=e[t+4>>2],r=(t=f[121600+(j(0-t&t,124511785)>>>27|0)|0])?t+32|0:0),r}function Co(t){var r=0,s=0,n=0;e:{if(!((r=Rn(t))>>>0>27)){if(s=1,116672&(n=1<<r))break e;if(134227968&n)return ne(t,r)>>>10&1}s=0}return s}function ls(t){var r=0,s=0,n=0;e:{if(!((r=Rn(t))>>>0>27)){if(s=1,34752&(n=1<<r))break e;if(134227968&n)return ne(t,r)>>>10&1}s=0}return s}function qo(){var t,r=0;(t=e[56797])&&((r=e[t+8>>2])&&rs[e[e[r>>2]+12>>2]](r),(r=e[t+4>>2])&&rs[e[e[r>>2]+16>>2]](r),Zt(t)),e[56797]=0,e[56797]=ai()}function bA(t,r){var s=0;return t&&(s=ds(t,0,r,0),(t|r)>>>0<65536||(s=H?-1:s)),!(t=wr(s))|!(3&c[t-4|0])||Yt(t,0,s),t}function CA(t,r){var s,n;n=e[130128+(r-j(s=(0|r)/100|0,100)<<2)>>2],e[t+100>>2]=n,e[t+96>>2]=n,r+99>>>0>=199&&(e[t+100>>2]=e[130128+(s<<2)>>2])}function wA(t){var r=0;(r=wr(1344))&&(t=Jr(r,t,1344),r=216192+(e[50758]<<4)|0,e[r>>2]=11,e[r+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}function Oi(t,r){var s=0;e:if(s=e[t>>2])for(;;){if(r&&!Pa(r,s))break e;if(!(s=e[(t=t+8|0)>>2]))break}return e[t+4>>2]}function Xo(t){var r,s=0;return oe=r=oe-16|0,s=-1,uA(t)||(0|rs[e[t+32>>2]](t,r+15|0,1))==1&&(s=c[r+15|0]),oe=r+16|0,s}function Ua(t,r){var s=0,n=0;if(r){for(;n=t,(s=e[t>>2])&&(t=n+4|0,(0|r)!=(0|s)););return s?n:0}return(_A(t)<<2)+t|0}function Zo(t,r){var s=0,n=0;if(s=P[t>>1])for(;;){if(n=n+1|0,(0|r)==(0|s))return n;if(!(s=P[(n<<1)+t>>1]))break}return 0}function Jo(t,r){var s=0,n=0;r>>>0<=31?(n=e[t>>2],s=t+4|0):(r=r-32|0,s=t),s=e[s>>2],e[t>>2]=n<<r,e[t+4>>2]=s<<r|n>>>32-r}function Do(t,r){var s=0,n=0;s=e[t+4>>2],r>>>0<=31?n=e[t>>2]:(r=r-32|0,n=s,s=0),e[t+4>>2]=s>>>r,e[t>>2]=s<<32-r|n>>>r}function Wn(t){var r=0;t=t||1;e:{for(;;){if(r=wr(t))break e;if(!(r=e[57276]))break;rs[0|r]()}pt(),V()}return r}function So(t){return t>>>0<=131071?c[117424+(t>>>3&31|c[117424+(t>>>8|0)|0]<<5)|0]>>>(7&t)&1:t>>>0<196606}function IA(t,r,s,n,A,l,g,m,w){e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=n,e[t+12>>2]=65535&A|(w>>>16&32768|A>>>16&32767)<<16}function wi(t,r,s){return s?(0|t)==(0|r)?1:!Pa(e[t+4>>2],e[r+4>>2]):e[t+4>>2]==e[r+4>>2]}function yA(t){var r=0;(0|(r=0|Se(-100,0|t,0)))==-31&&(r=0|Re(0|t)),r>>>0>=4294963201&&(e[56798]=0-r)}function $o(){var t;t=wr(84)+80|0,e[t>>2]=125420,e[t>>2]=125380,e[t>>2]=125400,Mt(0|t,125512,9),V()}function eA(t){var r,s;return r=HA(t),s=HA(t),HA(t)<<16&16711680|s<<8&65280|255&r|HA(t)<<24}function wo(t){var r=0;return t?(r=1,t-9472>>>0<160|t-65529>>>0<7||(r=Za(t)),r):0}function kA(t,r){var s;return s=r>>31,e[t+76>>2],function(n,A,l){return e[n+20>>2]!=e[n+28>>2]&&(rs[e[n+36>>2]](n,0,0),!e[n+20>>2])||(e[n+28>>2]=0,e[n+16>>2]=0,e[n+20>>2]=0,rs[e[n+40>>2]](n,A,l,0),(0|H)<0)?-1:(e[n+4>>2]=0,e[n+8>>2]=0,e[n>>2]=-17&e[n>>2],0)}(t,r,s)}function _A(t){var r=0,s=0;for(s=t;s=(r=s)+4|0,e[r>>2];);return r-t>>2}function XA(t,r){return f[0|t]=r,f[t+4|0]=0,f[t+3|0]=r>>>24,f[t+2|0]=r>>>16,f[t+1|0]=r>>>8,t}function Cn(t,r){var s=0;return(-1>>>(s=31&r)&t)<<s|((s=t)&-1<<(t=0-r&31))>>>t}function Io(t,r){var s=0;return(0|t)==73&&(s=305,c[r+173|0])||(s=zs(t)),s}function Mn(t){e[36114]!=(0|t)&&(e[36115]=0,xs(t),e[36114]=t,e[36115]=e[36115]+1)}function vA(t){return t?e[34460]+t|0:(xA(85328,20,e[30450]),e[32320])}function Go(t){var r,s;return(s=wr(r=_r(t)+1|0))?Jr(s,t,r):0}function Ii(){var t;e[33287]=0,(t=e[33282])&&(Zt(t),e[33286]=0,e[33282]=0)}function wa(t,r,s){var n;oe=n=oe-16|0,e[n+12>>2]=s,Xi(t,r,s),oe=n+16|0}function xA(t,r,s){e[s+76>>2],t=WA(t,r,s)}function Ki(t,r){return r?t<<24|(65280&t)<<8|t>>>8&65280|t>>>24:t}function lo(t){return t-8212>>>0>=12?Zo(93856,t):1}function ZA(t){var r=0;t&&((r=e[t+688>>2])&&Zt(r),Zt(t))}function MA(t){return(0|t)<=127?yi(87712,t):0}function tA(t){return!(t=c[0|t]?1:Vn(t,t+1|0,3))}function JA(t){(t=(0|(t=0|At(0|t)))!=27?t:0)&&(e[56798]=t)}function qi(t,r,s){return t|=0,r|=0,0|rs[0|(s|=0)](t,r)}function yi(t,r){return t=uo(t,r),c[0|t]==(255&r)?t:0}function EA(t,r){return bt(t,r,2147483647),H=ve,zt}function Fo(t){return t?31-ke(t-1^t)|0:32}function sn(t,r,s){32&c[0|t]||WA(r,s,t)}function ua(t,r,s){f[(Gs(t,r,s)+s|0)-1|0]=0}function yo(t){return cA(t,188776,189328)}function BA(t,r){r|=0,e[8+(t|=0)>>2]=r}function Xi(t,r,s){return as(t,r,s,0,0)}function Zi(t){return e[12+(t|=0)>>2]}function Ji(t){return e[16+(t|=0)>>2]}function TA(t){return e[20+(t|=0)>>2]}function En(t){return e[8+(t|=0)>>2]}function PA(t){return e[4+(t|=0)>>2]}function DA(t){return e[(t|=0)>>2]}function ko(t,r,s){return bt(t,r,s)}function zo(t){(t|=0)&&Zt(t)}function wn(t,r){Qr(_r(t)+t|0,r)}function SA(t){return 0|t}function GA(t){return 0}function _o(t){Zt(t|=0)}function pl(t){}C(u=c,1024,""),C(u,45536,"HhYWFhgWFhYXExYaFhIWFg4ODg4ODg4ODg4WFhoaGhYWCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoXFhMZERkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBhcaExo="),C(u,45664,""),C(u,81428,"ggAAAAAAAAIAAAAAAAAAAgAAAAAAAAAC"),C(u,81475,"AgAAAAAAACAAAAAAAAAAIA=="),C(u,81506,"IA=="),C(u,81522,"IAAAAAAAAAAg"),C(u,81618,"IA=="),C(u,81634,"IA=="),C(u,81650,"IAAAAAAAAAAg"),C(u,81682,"IAAAAAAAAAAgAAAAAAAAACAAAAAAAIAAAAAAAAAAgA=="),C(u,81728,"gAAAAAAAAACAAAAAAAAAAIA="),C(u,81760,"gAAAAAAAAACA"),C(u,81904,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAU"),C(u,81961,"FAAAAAAAAAAU"),C(u,81985,"FAAAAAAAAAAE"),C(u,82009,"BAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),C(u,82097,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),C(u,82169,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAACA"),C(u,82224,"gAAAAAAAAACA"),C(u,82272,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(u,82353,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(u,82393,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAABAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(u,82625,"BAAAAAAAAAAE"),C(u,82649,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(u,83033,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),C(u,83097,"BAAAAAAAAAAE"),C(u,83121,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAQAAAEAAAAAFAAAAQAAAAgEAAABAAAAAQQAAAAAAAACBAAAAAAAAAgEAAAAAAAAAAQAAAAAAAAABAAAAQAAAAgEAAAAAAAAAQQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAAQA=="),C(u,83288,"QA=="),C(u,83303,"AkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAACEA="),C(u,83352,"QAAAAAAAABBAAAAQAAAAgAAg"),C(u,83379,"gAAAAABAAACQggAAIEAAAJAAAAAAAAAAgAAAAABAAACQggAAIEAAAJCCAAAgAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkAAAAEBAAACQAAAAYEAAAJCCAABgQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkIIAACBAAACQggAAIAAAAIAAAAAEAAAAAAAAAIAAAAAAAAAACAAAAAAAAAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAABEAAAAAAAAAIAAAAgIIAAAAAAACAgAAAAAAAAIAAAAAAAAAAgIYAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAgAAAAAAAAICAAAAAAAAAgJIAAACAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgIIAAAAAAACAhgAAAAAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgJIAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAhg=="),C(u,83999,""),C(u,93904,"ICAgICAgICAgICYlKyNTRFpBTCEgQD9KTktWP1RYP1dBQkNIRkdZPT0sLCcqICAAIAAhACIAsAIkACUA5gDIAigAKQB+AisAzAItAC4ALwBSAjEAMgBcAjQANQA2ADcAdQI5ANACsgI8AD0APgCUAlkCUQKyA+cA8ABbAkYAYgInAWoCXwJLAGsCcQJLAVQCpgNjAoACgwK4A4oCjAJTAccD+ACSAioDXABdAF4AXwBgAGEAYgBjAGQAZQBmAGECaABpAGoAawBsAG0AbgBvAHAAcQByAHMAdAB1AHYAdwB4AHkAegB7AHwAfQADA38APT0sLCcnAAMCBAUGBxoAAAAAAQECAwMEBQYHBwgJCgsAAAEBAgIDAwQFBgcHCAkKAAABAgMDAwQFBgcHBwgJClNldFdvcmRTdHJlc3MA5ADrAO8A9gD8AP8AAAAAAAAAYWFhYWFhYWNlZWVlaWlpaWRub29vb28Ab3V1dXV5dHNhYWFhYWFhY2VlZWVpaWlpZG5vb29vbwBvdXV1dXl0eWFhYWFhYWNjY2NjY2NjZGRkZGVlZWVlZWVlZWVnZ2dnZ2dnZ2hoaGhpaWlpaWlpaWlpaWlqamtra2xsbGxsbGxsbGxubm5ubm5ubm5vb29vb29vb3JycnJycnNzc3Nzc3NzdHR0dHR0dXV1dXV1dXV1dXV1d3d5eXl6enp6enpzYmJiYgAAb2NjZGRkZGRlZWVmZmdnaGlpa2tsbG1ubm9vb29vcHB5AABzc3R0dHR1dXV2eXl6enp6enp6AAAAd3R0dGtkZGRsbGxubm5hYWlpb291dXV1dXV1dXV1ZWFhYWFhYWdnZ2dra29vb296empkZGRnZ3d3bm5hYWFhb29hYWFhZWVlZWlpaWlvb29vcnJycnV1dXVzc3R0eXloaG5kb296emFhZWVvb29vb29vb3l5bG50amRxYWNjbHRzegAAYnV2ZWVqanFxcnJ5eWFhYWJvY2RkZWVlZWVl"),C(u,94846,"TG9va3VwRGljdDIAAAAAAAAAgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAoQCiAKMApAClAKYApwCoAKkAqgCrAKwArQCuAK8AsACxALIAswC0ALUAtgC3ALgAuQC6ALsAvAC9AL4AvwDAAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPANAA0QDSANMA1ADVANYA1wDYANkA2gDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wDwAPEA8gDzAPQA9QD2APcA+AD5APoA+wD8AP0A/gD/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAQB2AJBAaQAPQFaAacAqABgAV4BZAF5Aa0AfQF7AbAABQHbAkIBtAA+AVsBxwK4AGEBXwFlAXoB3QJ+AXwBVAHBAMIAAgHEADkBBgHHAAwByQAYAcsAGgHNAM4ADgEQAUMBRwHTANQAUAHWANcAWAFuAdoAcAHcAN0AYgHfAFUB4QDiAAMB5AA6AQcB5wANAekAGQHrABsB7QDuAA8BEQFEAUgB8wD0AFEB9gD3AFkBbwH6AHEB/AD9AGMB2QKAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAmAdgCowCkAP3/JAGnAKgAMAFeAR4BNAGtAP3/ewGwACcBsgCzALQAtQAlAbcAuAAxAV8BHwE1Ab0A/f98AcAAwQDCAP3/xAAKAQgBxwDIAMkAygDLAMwAzQDOAM8A/f/RANIA0wDUACAB1gDXABwB2QDaANsA3ABsAVwB3wDgAOEA4gD9/+QACwEJAecA6ADpAOoA6wDsAO0A7gDvAP3/8QDyAPMA9AAhAfYA9wAdAfkA+gD7APwAbQFdAdkCgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAE4AVYBpAAoATsBpwCoAGABEgEiAWYBrQB9Aa8AsAAFAdsCVwG0ACkBPAHHArgAYQETASMBZwFKAX4BSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgAqARABRQFMATYB1ADVANYA1wDYAHIB2gDbANwAaAFqAd8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4AKwERAUYBTQE3AfQA9QD2APcA+ABzAfoA+wD8AGkBawHZAoAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEEAgQDBAQEBQQGBAcECAQJBAoECwQMBK0ADgQPBBAEEQQSBBMEFAQVBBYEFwQYBBkEGgQbBBwEHQQeBB8EIAQhBCIEIwQkBCUEJgQnBCgEKQQqBCsELAQtBC4ELwQwBDEEMgQzBDQENQQ2BDcEOAQ5BDoEOwQ8BD0EPgQ/BEAEQQRCBEMERARFBEYERwRIBEkESgRLBEwETQROBE8EFiFRBFIEUwRUBFUEVgRXBFgEWQRaBFsEXASnAF4EXwSAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAD9//3//f+kAP3//f/9//3//f/9//3/DAatAP3//f/9//3//f/9//3//f/9//3//f/9//3/Gwb9//3//f8fBv3/IQYiBiMGJAYlBiYGJwYoBikGKgYrBiwGLQYuBi8GMAYxBjIGMwY0BjUGNgY3BjgGOQY6Bv3//f/9//3//f9ABkEGQgZDBkQGRQZGBkcGSAZJBkoGSwZMBk0GTgZPBlAGUQZSBv3//f/9//3//f/9//3//f/9//3//f/9//3/gACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAGCAZIKMArCCvIKYApwCoAKkAegOrAKwArQD9/xUgsACxALIAswCEA4UDhgO3AIgDiQOKA7sAjAO9AI4DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQP9/6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgP9/4AAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAP3/ogCjAKQApQCmAKcAqACpANcAqwCsAK0ArgCvALAAsQCyALMAtAC1ALYAtwC4ALkA9wC7ALwAvQC+AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f8XINAF0QXSBdMF1AXVBdYF1wXYBdkF2gXbBdwF3QXeBd8F4AXhBeIF4wXkBeUF5gXnBegF6QXqBf3//f8OIA8g/f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAChAKIAowCkAKUApgCnAKgAqQCqAKsArACtAK4ArwCwALEAsgCzALQAtQC2ALcAuAC5ALoAuwC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxwDIAMkAygDLAMwAzQDOAM8AHgHRANIA0wDUANUA1gDXANgA2QDaANsA3AAwAV4B3wDgAOEA4gDjAOQA5QDmAOcA6ADpAOoA6wDsAO0A7gDvAB8B8QDyAPMA9AD1APYA9wD4APkA+gD7APwAMQFfAf8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAESASIBKgEoATYBpwA7ARABYAFmAX0BrQBqAUoBsAAFARMBIwErASkBNwG3ADwBEQFhAWcBfgEVIGsBSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgDPANAARQFMAdMA1ADVANYAaAHYAHIB2gDbANwA3QDeAN8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4A7wDwAEYBTQHzAPQA9QD2AGkB+ABzAfoA+wD8AP0A/gA4AYAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEOAg4DDgQOBQ4GDgcOCA4JDgoOCw4MDg0ODg4PDhAOEQ4SDhMOFA4VDhYOFw4YDhkOGg4bDhwOHQ4eDh8OIA4hDiIOIw4kDiUOJg4nDigOKQ4qDisOLA4tDi4OLw4wDjEOMg4zDjQONQ42DjcOOA45DjoO/f/9//3//f8/DkAOQQ5CDkMORA5FDkYORw5IDkkOSg5LDkwOTQ5ODk8OUA5RDlIOUw5UDlUOVg5XDlgOWQ5aDlsO/f/9//3//f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAdIKIAowCkAB4gpgCnANgAqQBWAasArACtAK4AxgCwALEAsgCzABwgtQC2ALcA+AC5AFcBuwC8AL0AvgDmAAQBLgEAAQYBxADFABgBEgEMAckAeQEWASIBNgEqATsBYAFDAUUB0wBMAdUA1gDXAHIBQQFaAWoB3AB7AX0B3wAFAS8BAQEHAeQA5QAZARMBDQHpAHoBFwEjATcBKwE8AWEBRAFGAfMATQH1APYA9wBzAUIBWwFrAfwAfAF+ARkggACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAAh4DHqMACgELAQoepwCAHqkAgh4LHvIerQCuAHgBHh4fHiABIQFAHkEetgBWHoEeVx6DHmAe8x6EHoUeYR7AAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPAHQB0QDSANMA1ADVANYAah7YANkA2gDbANwA3QB2Ad8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wB1AfEA8gDzAPQA9QD2AGse+AD5APoA+wD8AP0AdwH/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAKEAogCjAKwgpQBgAacAYQGpAKoAqwCsAK0ArgCvALAAsQCyALMAfQG1ALYAtwB+AbkAugC7AFIBUwF4Ab8AwADBAMIAwwDEAMUAxgDHAMgAyQDKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA2ADZANoA2wDcAN0A3gDfAOAA4QDiAOMA5ADlAOYA5wDoAOkA6gDrAOwA7QDuAO8A8ADxAPIA8wD0APUA9gD3APgA+QD6APsA/AD9AP4A/wCAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAEAQUBQQGsIB4gYAGnAGEBqQAYAqsAeQGtAHoBewGwALEADAFCAX0BHSC2ALcAfgENARkCuwBSAVMBeAF8AcAAwQDCAAIBxAAGAcYAxwDIAMkAygDLAMwAzQDOAM8AEAFDAdIA0wDUAFAB1gBaAXAB2QDaANsA3AAYARoC3wDgAOEA4gADAeQABwHmAOcA6ADpAOoA6wDsAO0A7gDvABEBRAHyAPMA9ABRAfYAWwFxAfkA+gD7APwAGQEbAv8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAEFAUEBrCAeIGABpwBhAakAGAKrAHkBrQB6AXsBsACxAAwBQgF9AR0gtgC3AH4BDQEZArsAUgFTAXgBfAHAAMEAwgACAcQABgHGAMcAyADJAMoAywDMAM0AzgDPABABQwHSANMA1ABQAdYAWgFwAdkA2gDbANwAGAEaAt8A4ADhAOIAAwHkAAcB5gDnAOgA6QDqAOsA7ADtAO4A7wARAUQB8gDzAPQAUQH2AFsBcQH5APoA+wD8ABkBGwL/AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9/wEJAgkDCQUJBgkHCQgJCQkKCQsJDgkPCRAJDQkSCRMJFAkRCRUJFgkXCRgJGQkaCRsJHAkdCR4JHwkgCSEJIgkjCSQJJQkmCScJKAkpCSoJKwksCS0JLgkvCV8JMAkxCTIJMwk0CTUJNgk3CTgJOQkgAD4JPwlACUEJQglDCUYJRwlICUUJSglLCUwJSQlNCTwJZAn9//3//f/9//3/IAAwADEAMgAzADQANQA2ADcAOAA5AP3//f/9//3//f8CAAAAAAAAAAEAAAADAAAA//36+Pb08vDu7Oro5uTi4N7c2tjW1NLQzszKyMbEwsC+vLq4trSysK6sqqimpKKgnpyamJaUkpCOjIqIhoSCgH58enh2dHJwbmxqaGZkYmBeXFpYVlRSUE5MSkhGREJAPjw6ODY0MjAuLCooJiQiIB4cGhgWFBIQDgwKCAYEAgAAAgQGCAoMDhASFBYYGhweICIkJigqLC4wMjQ2ODo8PkBCREZISkxOUFJUVlhaXF5gYmRmaGpsbnBydHZ4enx+gIKEhoiKjI6QkpSWmJqcnqCipKaoqqyusLK0tri6vL7AwsTGyMrMztDS1NbY2tze4OLk5ujq7O7w8vT2+Pr9///06uDWzMO6saifl4+Hf3hxamNcVlBKRD85NC8rJiIeGhcTEA0LCAYEAgEAAAAAAAAAAQIDBAUHCAoMDhATFRcaHR8iJSgsLjAyNDY5Oz1AQkVHSkxPUVRXWl1fYmVoa25xdHh7foGFiIuPkpaZnaCkqKyvs7e7v8PHy8/T19vgz8zJxsPAvbm0sKunopyXkoyGgXt1b2ljXVdQSkQ+ODMtJyIcFxINCAQCAgEAAAAAAAEBAgMEBQcICgwNDxIUFhkbHiEkJyotMDQ2ODo8P0FDRkhLTVBSVVhaXWBjZmlsb3J1eHt+gYWIi4+SlpmdoKSorK+zt7u/w8fLz9PX2+D/+fTu6eTf2tXQy8bBvbizr6qmoZ2ZlZCMiISAfXl1cW5qZ2NgXVlWU1BNSkdEQT48OTc0Mi8tKygmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),C(u,99845,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4g0M7NzMrIx8XDwcC9u7i1s7CtqqejoJ2ZlpKPi4eEgHx4dHBtaWVhXVlVUU1KRkI+Ozc0MS8tKigmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),C(u,99973,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4gmJmZmpydn6Gkp6mssLO2ur7BxcnN0dTY3N/j5urt8PL19/n7/P3+/v////////79+/r49vPx7uzp5uTg3drX09DMyMTAvLi0sKyno5+alpGNiIR/e3ZybWllYFxYVFBMSERAPDk1Mi8rKCYjIB0aFxUSDw0KCAcFAwIBAAAAAAD+///////+/fz6+Pb08e7r6OXh3trW0s3JxL+6trCrpqGclpGLhoB7dW9qZF9ZVE9JRD86NTArJiIdGRURDQoHBAMBAAAAAAAAAAABAQIEBQcJCw0QEhUYGx4iJSktMTU6PkNITFFXW15iZWhrbnF0dnh7fH6AgYKDg4SEg4OCgXJycXFwb21samhmZGFfXFpXVFFOS0hFQj87ODUyLywpJiMgHRsYFhQSEA4MCwoJCAcHBwcHBgUFBQUFBQUFBQYHBwgJCgwNDxASFBYYGx0gIyYpLC8zNzs/Q0dMUVZbYGVqb3R5f4SJj5Wboaets7rAx87V3OPq8fX3+vz9/v///v79/fz7+/r6+fj49/f29vX09PPz8vLx8PDv7u7t7Ovq6uno5+bl5OPi4eDe3dzb2djW1dPS0M7My8nHxcPAvry5t7Wyr62qp6ShnpqXlJCNiYWBfXl1cW1oZGFeW1dUUU1KRkNAPDk1Mi4qJyMfHBgUEQ0LCQcFBAMCAQAAAAAAAAAAAQEBAgIDAwQEBQYGBwgICQoLDAwNDg8QERITFBYXGBkbHB0fICIjJSYoKSstLzAyNDY4Ojw+QEJER0lLTlBSVVdaXV9iZWdqbXBzdnl8f4KGiYyQk5aanaCjpqmsr7K1uLu+wcTHys3Q09bZ3N/i5Ofp7O7w8vT2+Pr7/X9/f4CBg4SHiYyPkpaZnaGlqq6yt7vAxcnN0tba3uLm6u3w8/X4+vv8/f7+/fz7+ff08Ozn4tzVzsa9tKmekoiCfXdybGZgWlROSUI8NzItKCQfGxgUEQ4MCQcGBQQEBAQFBggKDRAUGB0jKS83PkdQWmRwfIOFiIqMjo+RkpOTAEAIAEYSAAAAAAAAGAwAAARQEgZOFgAAAAAAACI0AAAEWBYGUhYAAAAAAAAiQAAAAFwIAFxQAAAAAAAATAgBAABWBABeQgAAAAAAACIKAAAAPgoAPhQAAAAAAAAcEAAABEQSBkQWAAAAAAAAHiwAAAZAEABCIAAAAAAAACASAAACRC4AKiAAAAAAAAAuOgAABE4YBkgWAAAAAAAAKjQAAARYIgBAIAAAAAAAAC5SAAAAOAwAOBQAAAAAAAAYDAAAAEYSAEYYAAAAAAAAIBQAAAkAAAAJAAAAEAAAABAAAAAQAAAAFwAAADcAAAAgAAAAACgYCAAKNCAUCgYmGA4EAAYAAAAHAAAACQAAAAkAAAAUAAAAFAAAABQAAAAZAAAA5iAUCA=="),C(u,101072,"ZgNmAWYCpgSmAiYEpoooAmoDagFqAqoCbgNuAW4CrgIpALMEdAN0AXQCtAS0AgAAdAR6A3oBegK6An4BOQC+AgAApgMAAKYBAADmAwAAaAEAAGgCAAAoAwAA6AEAAOkBAABpBAAAqgMAAKoBAAAqAwAA6gMAAOoBAABsAgAArAEAACwDAAAsAgAAbQIAAG0EAACuBAAArgMAAK4BAADuAwAALgAAAO6LAABvAgAAMAIwAAAAcQEAADECAADxAQAAMQMAAHEEAABzAQAAMwIAAPMBMwAAADMAAAC0AwAAtAEAAPQCAAC0igAAdwEAADcCAAD3AQAAeAEAAHgCAAA4AgAA+AEAADkCAAD5AQAAeQQAALoEAAC6AwAAugEAADoEAAD6AgAA+gMAAHwCAAB+AgAAAAB/AQAAPwMAAP8BOACmAAEAgQBnBQAAKAEpBWkF6gAAAEIFAADDAEMdAADvBGwFLABsAAQAAACtAG0FAADuBAUAbgCxBPEEMQXxj7IAAAByBQAAMwVzAPQEtJoAAAgAtwCOADcVAAA3BQAAzQB3ALcIOAUAAG8FyQAJAbkAOQX6BAoAewW7ALwAvgB+AD8FPwEAAAsBAADMAIwAAAAAAGcAAABsDW0ALwGwAHEAdgVMBEwc6Y8AAOnPOY4AADnO"),C(u,101586,"sQNZAlsCswO5A1MByQPGA4MCxQOSApQCfgJ8AgAAqgBhgLIAMoCzADOAuQAxgLoAb4CwAmiAsQJmgrICaoCzAnKAtAJ5grUCe4K2AoGCtwJ3gLgCeYDAApSCwQKVguACY4LhAmyA4gJzgOMCeIBwIDCAcSBpgHQgNIB1IDWAdiA2gHcgN4B4IDiAeSA5gHogK4B7IC2AfCA9gH0gKIB+ICmAfyBugIAgMECBIDFAgiAyQIMgM0CEIDRAhSA1QIYgNkCHIDdAiCA4QIkgOUCKICtAiyAtQIwgPUCNIChAjiApQJAgYUCRIGVAkiBvQJMgeECUIFlClSBoQJYga0CXIGxAmCBtQJkgbkCaIHBAmyBzQJwgdEAAAAAAaXhjbXZsZA=="),C(u,101888,"AQAAAAoAAABkAAAA6AMAAAUAAAAyAAAA9AEAAAAXCgkYExgY"),C(u,101936,"///////9+fXy7uvo5OHe2tjV0s/MycbEwb+8ure1s7CurKmopaOhn56bmZiWlJKRj42LiYiHhYOCgX9+fHt6eHd2dXNycXBvbm1ramloZ2ZlZGNiYWBfXl1cW1pZWVhXVlVUU1JSUVBQT05NTExLS0pJSEdHRkVFRENDQkJBQEA/Pj49PTw7Ozo6OTk4ODc2NjU1NDQ0MzIyMTEwMC8vLi4uLS0sLCwrKyopKCgoJycnJiYmJSUlJCQjIyMjIiIiISEhICAfHx8eHh4dHR0dHBwbGxsbGhoaGhkZGRgYGBgXFxcXFhYWFRUVFRQUFBQTExMSEhERERAQEBAQEA8PDw8ODg4NDQ0MDAwMCwsLCwoKCgkJCQgICAAAAAAAAAAAeHl4d3d2dnV0dHNycXBwb29ubWxrampoZ2dmZmZlZWNiYmFgYF9eXVtaW1pZWFZVVlVVVFJRUE9NTk5MTUtLSklHSEZFRUVDQUA/Pz89PTs7Ozo4OTo4NjU0NDU0NDIwLy8tLi0="),C(u,102336,"FhYWFhYWFhUVFRUUFBMTEhEQDw8PDw8PDwAAAAAAAABkeGRpZG5uZF9kaXhpbn2Ch3N9ZGl4S2RLaXhVS2RpeFVpX3N4ZF9kbnhfaWRzeGRkZGl4ZGlfc3huX2RpeGRpaXp9bmlkaXhkaWl6fW5pZGl4X2lkc3huZGRkeGRkZGRkZGRk"),C(u,102480,"ZJZkaW5zbm5uZGmWaW59h4xzh2RpllppWnqHZFpkaZZkaWR6h2RkZGmWZGlpc4duaWRplmRpaXqCeH1kaZZkaW56fXNuZGmWZGlpeod4aWRplmRpaXOHbmlkZGRkZGRkZGRkZA=="),C(u,102592,"bnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRuZG5ubmRubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubg=="),C(u,102708,"rwAAAGQAAAAyAAAAMg=="),C(u,102744,"ZA=="),C(u,102764,"MjIoRlpkZGRGboeWZGRLZHiWAAAAAAAABwAAAA4AAAAVAAAAKAAAAFAAAAAAAAAAAFNBUFIAQwAAAAAARgAAAAAAAAABAAAAAgAAAAQAAAAPAAAAAAEAAAEBAAEBAgQAAAAAAPMAEAEAAQABAAEAAQAB8ADwAPA="),C(u,102898,"QABaAG4AgACPAJwAqQC1AMAAygDUAN0A5gDvAPcAAAEHAQ8BFgEeASUBLAEyATkBQAFGAUwBUgFYAV4BZAFqAW8BdQF6AYABhQGKAY8BlAGZAZ4BowGoAa0BsgG2AbsBwAHEAckBzQHRAdYB2gHeAeMB5wHrAe8B8wH3AfsBAAIDAgcCCwIPAhMCFwIbAh8CIgImAioCLQIxAjUCOAI8AkACQwJHAkoCTgJRAlQCWAJbAl8CYgJlAmkCbAJvAnMCdgJ5AnwCgAKDAoYCiQKMAo8CkgKWApkCnAKfAqICpQKoAqsCrgKxArQCtwK6Ar0CwALCAsUCyALLAs4C0QLUAtYC2QLcAt8C4gLkAucC6gLtAu8C8gL1AvcC+gL9AgADAgMFAwcDCgMNAw8DEgMVAxcDGgMcAx8DIQMkAycDKQMsAy4DMQMzAzYDOAM7Az0DQANCA0QDRwNJA0wDTgNRA1MDVQNYA1oDXQNfA2EDZANmA2gDawNtA28DcgN0A3YDeQN7A30DgAOCA4QDhgMAAAGqAqytAwQFsLGys7S0tgYHCLkJCrwMDQ4PEBESYWJjZGVmZ2hpamtsbW5vcHFyc3R1"),C(u,103360,"YAYAAPAGAABmCQAA5gkAAGYKAADmCgAAZgsAAOYLAABmDAAA5gwAAGYNAABQDgAA0A4AACAPAABAEAAAkBA="),C(u,103440,"5gDmAOYA5gAAAAAA5gDmAL4AqgC+AMgAAAAAAL4A8AC+AL4A0gDSAAAAAADSANIAyADIANIA0gAAAAAA5gDmAOYA5gDwAPAAAAAAAAQBBAGqAIwA3ADcAAAAAAD6AA4BoACMAMgAjAAAAAAA8ACgALQAtADSANIAAAAAAOYA8ACqANwAtAC0AAAAAAD6AA4BlgCCAMgAyAAAAAAADgEOAbYAjADcANwAAAAAAPgAEwGbALQA0gDSAAAAAAAOASwBwwMAAAAAAABsAAAAAAAAAKAAkQCbAJYAAAAAAMgA9QAnAAAAtwAAAAAAAADCugAAyADIAMgAyAAAAAAA0gDmAAABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGgAAAAAAABscHR4fICEiIyQlJicoKSorAAAs"),C(u,103790,"LQAAAAAAAAAu"),C(u,103816,"Lw=="),C(u,103833,"MAAAAAAAMQ=="),C(u,103856,"Mg=="),C(u,103868,"MwAAAK0AAQBABgEADCAtAAAAAAC+AL4A0gDSAAAAAADmAPoAoACWAMgAyAAAAAAA+gAEAbkAwwDDAL4AAAAAANIA3AD6AMgA+gD6AAAAAAD6APoAMjM0Njk6PD0+P0BBQkNERkdJSktMTU5PUFFSU1RWAACWAIwAtAC0AAAAAADIAMgAbA=="),C(u,104016,"oADIALQAtAAAAAAA3ADwALQAoADIAMgAAAAAAPAA+gBjAAAAZgAAAGgAAABrAAAAcAAAAHQAAAB4AAAA/g=="),C(u,104096,"oACMAJYApQAAAAAA2gAxAZEAkQCqAKAAAAAAAEoBXgEuAAAALAAAACcAAADIAg=="),C(u,104160,"MTIzNTY3OTo7PD4/QEFCREVGR0hJSktMTU5PUFFSU1RW"),C(u,104208,"vgC0AOYA5gAAAAAA+gD6ABESExQWFxkaGxwdHyAhIiQlJicoKSosc3uDmwAAAAAAtAC0AL4AtAAAAAAA5gDwALQAtAC0AKAAAAAAAOYAtABABAAAMAQAADUEAAA4BAAAOQQAAD4EAABDBAAASwQAAE0EAABOBAAATwQAAFAEAABRBAAAVgQAAFcEAABdBAAAXgQ="),C(u,104368,"tACgAMgAyAAAAAAA3ADmAKAAhwDSANIAAAAAAAQBGAGgAIwAyADIAAAAAADcAOYAyADIAMgAyAAAAAAAyADIAKAAvgCvAK8AAAAAAMgA0gCqAHMA0gDwAAAAAAAEARgBqgCqALQAtAAAAAAA8AAEAZYAtADIAMgAAAAAANIA+gCWAJYAtAC0AAAAAAAsASwBoACHANwA3AAAAAAA+gAYAaAAqgDIAMgAAAAAAEABVAG0AKAA8ADwAAAAAAAEAQQBvgC0AMgA5gAAAAAA8AD6AJYAlgC0ALQA0gDmAOYA8ABhAAAA4AAAAOEAAACjHgAA4wAAAKEeAAADAQAAsR4AAK8eAACzHgAAtR4AALceAADiAAAApx4AAKUeAACpHgAAqx4AAK0eAABlAAAA6AAAAOkAAAC7HgAAvR4AALkeAADqAAAAwR4AAL8eAADDHgAAxR4AAMceAABpAAAA7AAAAO0AAADJHgAAKQEAAMseAABvAAAA8gAAAPMAAADPHgAA9QAAAM0eAAD0AAAA0x4AANEeAADVHgAA1x4AANkeAAChAQAA3R4AANseAADfHgAA4R4AAOMeAAB1AAAA+QAAAPoAAADnHgAAaQEAAOUeAACwAQAA6x4AAOkeAADtHgAA7x4AAPEeAAB5AAAA8x4AAP0AAAD3HgAA+R4AAPUe"),C(u,104896,"5gCWAOYA5gDmAAAA8AD6AAAAAAAnAAAAAAAAAAABAgM="),C(u,104945,"AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRo="),C(u,105072,"GxwdAAAeHyAhIiMkACUmAAAAACcAACgAKQAqACsAAAAAAAAsAC0ALgAAAAAALwAAADAAAAAAAAAAMQ=="),C(u,105170,"MgAz"),C(u,105195,"NAAAAAAANQA2"),C(u,105226,"NwA4ADkArQABAAwgAQ=="),C(u,105249,"AQIDAAQAAQIDAAQFBgIDAAQFBwEDAAQICQoDAAAICAoDAAALCwsLAAAMDAwMAAAMAQ4BEwEBAw8DDgYRBgMJAQsPCwEMCQwBDgYOCQ4ODg8OHA4DDxEPEg8PEBEQAREGEQkRDxETEiAS/38AAAAAlgCMANwA3AAAAAAABAEYAYKAeHRkZICAgIyAgKCrq4CAgA=="),C(u,105412,"yAAAAMgAAACQAQAAkAEAAJABAABYAgAAWAIAAFgC"),C(u,105456,"8AAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAAQIMAw0EDgULAAAAAQIDBAUGAAAAAAAACwwNDg=="),C(u,105540,"MgAAAK8AAABkAAAAMg=="),C(u,105568,"rw=="),C(u,105596,"EBAKEBY="),C(u,105620,"/38AANAHAAAsAQAAYwAAAGMAAABjAAAAAAAAANAH"),C(u,105668,"BA=="),C(u,105680,"QEFCQ0RFRkdISUpLTE1OT1BRUlNUVldYWVtcXV5gYWJkZWdoaWtsbm9xc3R2d3l7fH6AgoSFh4mLjY+Rk5WXmZueoKKkp6mrrrCztbi6vb/CxcfKzdDT1tnc3+Ll6Ozv8vb5/P7/"),C(u,105792,"//7+/v7+/v7+/v39/f38/Pz7+/v6+vn5+Pj39/b19fTz8/Lx7+3r6efl4+Hf3drY1dPQzcvIxcK/u7i1sq6rp6OgnJiUkIyIhH97d3JuaWRgXltYVlNRTkxKR0VCQD48OTc1MzEvLCooJiQiIB4dGxkXFRMSEA4MCwkHBgQDAQ=="),C(u,106064,"//7+/v7+/f38+/v6+fj39vX08vHv7uzq6efl4+Hf3NrY1dPRz83LycfFw8G/vbu5t7SysK2rqaakoZ+cmpeUko+MioeEgX57eHZzcGxpZmNgX11bWlhWVVNSUE9NTEpJSEZFRENCQD8+PTw7Ojk4Nzc2NTQ0MzIyMTAwLy8uLi4tLS0sLCwsLCwsKysrKywrKiopKCgnJiYlJCQjIyIhISAgHx4eHR0cHBsaGhkZGBgXFxYWFRUUFBMTEhISEREQEA8PDw4ODQ0NDAwLCwsKCgoJCQkICAgHBwcHBgYGBQUFBQQEBAQEAwMDAwICAgICAgEBAQEBAQ=="),C(u,106341,"RvIpAC8ALwBF8ikALwAuAEXyKAAuAC0ANPIoAC0tLAA08igAKysrADTyKAAqKioANPIoACkpKQA08igAAOf/zv+1/5z/g/9q/1H/N/8e/wX/7P7T/rr+of6I/m/+Vf48/iP+Cv7x/dj9v/2m/Y39dP1b/UL9Kf0Q/ff83vzF/Kz8k/x6/GH8SPwv/Bb8/fvk+8v7svuZ+4D7Z/tP+zb7HfsE++v60vq6+qH6iPpv+lf6Pvol+g369Pnb+cP5qvmR+Xn5YPlH+S/5Fvn++OX4zfi0+Jz4g/hr+FP4Ovgi+Ar48ffZ98H3qPeQ93j3YPdH9y/3F/f/9uf2z/a39p/2h/Zv9lf2P/Yn9g/29/Xf9cf1sPWY9YD1aPVR9Tn1IfUK9fL02/TD9Kz0lPR99GX0TvQ29B/0CPTw89nzwvOr85TzfPNl807zN/Mg8wnz8vLb8sTyrvKX8oDyafJS8jzyJfIO8vjx4fHL8bTxnvGH8XHxW/FE8S7xGPEB8evw1fC/8Knwk/B98GfwUfA78CXwEPD67+Tvzu+576Pvje9472LvTe847yLvDe/47uLuze647qPuju557mTuT+467iXuEO777eft0u297antlO2A7WvtV+1C7S7tGu0F7fHs3ezJ7LXsoeyN7HnsZexR7D3sKuwW7ALs7+vb68jrtOuh643reutn61TrQest6xrrB+v06uLqz+q86qnqluqE6nHqX+pM6jrqJ+oV6gPq8One6czpuumo6ZbphOly6WHpT+k96SzpGukI6ffo5ujU6MPosuig6I/ofuht6FzoS+g76CroGegI6Pjn5+fX58bntuel55Xnhed152XnVedF5zXnJecV5wXn9ubm5tfmx+a45qjmmeaK5nvma+Zc5k3mPuYw5iHmEuYD5vXl5uXY5cnlu+Wt5Z7lkOWC5XTlZuVY5UrlPOUv5SHlE+UG5fjk6+Te5NDkw+S25KnknOSP5ILkdeRo5FzkT+RD5DbkKuQd5BHkBeT54+3j4ePV48njveOx46XjmuOO44Pjd+Ns42HjVuNL4z/jNOMq4x/jFOMJ4//i9OLq4t/i1eLK4sDituKs4qLimOKO4oTie+Jx4mfiXuJU4kviQuI54i/iJuId4hTiDOID4vrh8eHp4eDh2OHQ4cfhv+G34a/hp+Gf4Zfhj+GI4YDheOFx4WrhYuFb4VThTeFG4T/hOOEx4SrhJOEd4RbhEOEK4QPh/eD34PHg6+Dl4N/g2eDU4M7gyeDD4L7guOCz4K7gqeCk4J/gmuCV4JHgjOCH4IPgfuB64HbgcuBu4GrgZuBi4F7gWuBX4FPgT+BM4EngReBC4D/gPOA54DbgM+Ax4C7gK+Ap4CfgJOAi4CDgHuAc4BrgGOAW4BTgEuAR4A/gDuAN4AvgCuAJ4AjgB+AG4AXgBeAE4APgA+AC4ALgAuAC4ALgAeAC4ALgAuAC4ALgA+AD4ATgBeAF4AbgB+AI4AngCuAL4A3gDuAP4BHgEuAU4BbgGOAa4BzgHuAg4CLgJOAn4CngK+Au4DHgM+A24DngPOA/4ELgReBJ4EzgT+BT4FfgWuBe4GLgZuBq4G7gcuB24HrgfuCD4IfgjOCR4JXgmuCf4KTgqeCu4LPguOC+4MPgyeDO4NTg2eDf4OXg6+Dx4Pfg/eAD4QrhEOEW4R3hJOEq4THhOOE/4UbhTeFU4VvhYuFq4XHheOGA4Yjhj+GX4Z/hp+Gv4bfhv+HH4dDh2OHg4enh8eH64QPiDOIU4h3iJuIv4jniQuJL4lTiXuJn4nHie+KE4o7imOKi4qzituLA4sri1eLf4uri9OL/4gnjFOMf4yrjNOM/40vjVuNh42zjd+OD447jmuOl47HjvePJ49Xj4ePt4/njBeQR5B3kKuQ25EPkT+Rc5GjkdeSC5I/knOSp5Lbkw+TQ5N7k6+T45AblE+Uh5S/lPOVK5VjlZuV05YLlkOWe5a3lu+XJ5djl5uX15QPmEuYh5jDmPuZN5lzma+Z75ormmeao5rjmx+bX5ubm9uYF5xXnJec150XnVedl53XnheeV56XntufG59fn5+f45wjoGegq6DvoS+hc6G3ofuiP6KDosujD6NTo5uj36AjpGuks6T3pT+lh6XLphOmW6ajpuunM6d7p8OkD6hXqJ+o66kzqX+px6oTqluqp6rzqz+ri6vTqB+sa6y3rQetU62freuuN66HrtOvI69vr7+sC7BbsKuw97FHsZex57I3soey17Mns3ezx7AXtGu0u7ULtV+1r7YDtlO2p7b3t0u3n7fvtEO4l7jruT+5k7nnuju6j7rjuze7i7vjuDe8i7zjvTe9i73jvje+j77nvzu/k7/rvEPAl8DvwUfBn8H3wk/Cp8L/w1fDr8AHxGPEu8UTxW/Fx8YfxnvG08cvx4fH48Q7yJfI88lLyafKA8pfyrvLE8tvy8vIJ8yDzN/NO82XzfPOU86vzwvPZ8/DzCPQf9Db0TvRl9H30lPSs9MP02/Ty9Ar1IfU59VH1aPWA9Zj1sPXH9d/19/UP9if2P/ZX9m/2h/af9rf2z/bn9v/2F/cv90f3YPd495D3qPfB99n38fcK+CL4OvhT+Gv4g/ic+LT4zfjl+P74Fvkv+Uf5YPl5+ZH5qvnD+dv59PkN+iX6PvpX+m/6iPqh+rr60vrr+gT7Hfs2+0/7Z/uA+5n7svvL++T7/fsW/C/8SPxh/Hr8k/ys/MX83vz3/BD9Kf1C/Vv9dP2N/ab9v/3Y/fH9Cv4j/jz+Vf5v/oj+of66/tP+7P4F/x7/N/9R/2r/g/+c/7X/zv/n/wAAGQAyAEsAZAB9AJYArwDJAOIA+wAUAS0BRgFfAXgBkQGrAcQB3QH2AQ8CKAJBAloCcwKMAqUCvgLXAvACCQMiAzsDVANtA4YDnwO4A9ED6gMDBBwENQROBGcEgASZBLEEygTjBPwEFQUuBUYFXwV4BZEFqQXCBdsF8wUMBiUGPQZWBm8GhwagBrkG0QbqBgIHGwczB0wHZAd9B5UHrQfGB94H9gcPCCcIPwhYCHAIiAigCLkI0QjpCAEJGQkxCUkJYQl5CZEJqQnBCdkJ8QkJCiEKOQpQCmgKgAqYCq8KxwrfCvYKDgslCz0LVAtsC4MLmwuyC8oL4Qv4CxAMJww+DFUMbAyEDJsMsgzJDOAM9wwODSUNPA1SDWkNgA2XDa4NxA3bDfINCA4fDjUOTA5iDnkOjw6lDrwO0g7oDv8OFQ8rD0EPVw9tD4MPmQ+vD8UP2w/wDwYQHBAyEEcQXRBzEIgQnhCzEMgQ3hDzEAgRHhEzEUgRXRFyEYcRnBGxEcYR2xHwEQUSGRIuEkMSVxJsEoASlRKpEr4S0hLmEvsSDxMjEzcTSxNfE3MThxObE68TwxPWE+oT/hMRFCUUOBRMFF8UcxSGFJkUrBS/FNMU5hT5FAwVHhUxFUQVVxVqFXwVjxWhFbQVxhXZFesV/RUQFiIWNBZGFlgWahZ8Fo4WnxaxFsMW1BbmFvgWCRcaFywXPRdOF2AXcReCF5MXpBe1F8UX1hfnF/gXCBgZGCkYOhhKGFsYaxh7GIsYmxirGLsYyxjbGOsY+xgKGRoZKRk5GUgZWBlnGXYZhRmVGaQZsxnCGdAZ3xnuGf0ZCxoaGigaNxpFGlMaYhpwGn4ajBqaGqgathrEGtEa3xrtGvoaCBsVGyIbMBs9G0obVxtkG3EbfhuLG5gbpBuxG70byhvWG+Mb7xv7GwccExwfHCscNxxDHE8cWxxmHHIcfRyJHJQcnxyqHLUcwRzMHNYc4RzsHPccAR0MHRYdIR0rHTYdQB1KHVQdXh1oHXIdfB2FHY8dmR2iHawdtR2+Hccd0R3aHeMd7B30Hf0dBh4PHhceIB4oHjAeOR5BHkkeUR5ZHmEeaR5xHngegB6IHo8elh6eHqUerB6zHroewR7IHs8e1h7cHuMe6h7wHvYe/R4DHwkfDx8VHxsfIR8nHywfMh83Hz0fQh9IH00fUh9XH1wfYR9mH2sfbx90H3kffR+CH4Yfih+OH5Iflh+aH54foh+mH6kfrR+xH7Qftx+7H74fwR/EH8cfyh/NH88f0h/VH9cf2R/cH94f4B/iH+Qf5h/oH+of7B/uH+8f8R/yH/Mf9R/2H/cf+B/5H/of+x/7H/wf/R/9H/4f/h/+H/4f/h//H/4f/h/+H/4f/h/9H/0f/B/7H/sf+h/5H/gf9x/2H/Uf8x/yH/Ef7x/uH+wf6h/oH+Yf5B/iH+Af3h/cH9kf1x/VH9Ifzx/NH8ofxx/EH8Efvh+7H7cftB+xH60fqR+mH6Ifnh+aH5Yfkh+OH4ofhh+CH30feR90H28fax9mH2EfXB9XH1IfTR9IH0IfPR83HzIfLB8nHyEfGx8VHw8fCR8DH/0e9h7wHuoe4x7cHtYezx7IHsEeuh6zHqwepR6eHpYejx6IHoAeeB5xHmkeYR5ZHlEeSR5BHjkeMB4oHiAeFx4PHgYe/R30Hewd4x3aHdEdxx2+HbUdrB2iHZkdjx2FHXwdch1oHV4dVB1KHUAdNh0rHSEdFh0MHQEd9xzsHOEc1hzMHMEctRyqHJ8clByJHH0cchxmHFscTxxDHDccKxwfHBMcBxz7G+8b4xvWG8obvRuxG6QbmBuLG34bcRtkG1cbShs9GzAbIhsVGwgb+hrtGt8a0RrEGrYaqBqaGowafhpwGmIaUxpFGjcaKBoaGgsa/RnuGd8Z0BnCGbMZpBmVGYUZdhlnGVgZSBk5GSkZGhkKGfsY6xjbGMsYuxirGJsYixh7GGsYWxhKGDoYKRgZGAgY+BfnF9YXxRe1F6QXkxeCF3EXYBdOFz0XLBcaFwkX+BbmFtQWwxaxFp8WjhZ8FmoWWBZGFjQWIhYQFv0V6xXZFcYVtBWhFY8VfBVqFVcVRBUxFR4VDBX5FOYU0xS/FKwUmRSGFHMUXxRMFDgUJRQRFP4T6hPWE8MTrxObE4cTcxNfE0sTNxMjEw8T+xLmEtISvhKpEpUSgBJsElcSQxIuEhkSBRLwEdsRxhGxEZwRhxFyEV0RSBEzER4RCBHzEN4QyBCzEJ4QiBBzEF0QRxAyEBwQBhDwD9sPxQ+vD5kPgw9tD1cPQQ8rDxUP/w7oDtIOvA6lDo8OeQ5iDkwONQ4fDggO8g3bDcQNrg2XDYANaQ1SDTwNJQ0ODfcM4AzJDLIMmwyEDGwMVQw+DCcMEAz4C+ELyguyC5sLgwtsC1QLPQslCw4L9grfCscKrwqYCoAKaApQCjkKIQoJCvEJ2QnBCakJkQl5CWEJSQkxCRkJAQnpCNEIuQigCIgIcAhYCD8IJwgPCPYH3gfGB60HlQd9B2QHTAczBxsHAgfqBtEGuQagBocGbwZWBj0GJQYMBvMF2wXCBakFkQV4BV8FRgUuBRUF/ATjBMoEsQSZBIAEZwROBDUEHAQDBOoD0QO4A58DhgNtA1QDOwMiAwkD8ALXAr4CpQKMAnMCWgJBAigCDwL2Ad0BxAGrAZEBeAFfAUYBLQEUAfsA4gDJAK8AlgB9AGQASwAyABkAMAAAADAAAABAAAAAUAAAAJAAAACgAAAAsAAAAMAAAACAm7XL3Ojt7Obczr+wo5iQjIuMj5KUlZKMg3hpWUk8MSopLTZEVml9j5+qsbKtpJaHeGlcU09PVV5reoiWoquwsa6ooJiRi4iJjZSdqLK7wMG9tKWSfGNKMh4OBQIFDx4wRFltf4yWnJ+fnZuZmZyhqbO/ytXc4N7YzLumj3dgSzouKCkvOkhZanqGkJSVkYmAdWtiXFpcYWl0gIqUmp6dmJCGfHFoYmBja3iIm6/C0t/m5+LXxrKchG9bS0A5Nzg9Q0pQVFZVUk1IQj8+QUlWZ3yTq8PZ6vb8+/Tn1cCqlIBxZF1aXGFocHd9f397dGthV05IRkhOWWZ1hJOfp6uqpJmLe2pbTkZDRU1aa3+SprjFz9PSzcS5raGWjomHh4qNkZKRjIR4aFVBLhwOBQEFDx80TWiBmrDBzdPT0Mi/taukn5ydoKWqrrGwq6OWh3ZjUUI2Ly0xOkhZa36OnKaqqaOYintsXVJKSEpQWmd1gi0AAAAmAAAALQAAAC0AAAA3AAAALQ=="),C(u,110928,"yv5w/hICZAHgAFkAFwD2/8b/8P/NAVcCGAK9AgIDXQLxAc0BMAKUAW4A4ACDAGgAn/+bABYBZv9z+6r94QJ9ALD9KQALAAn/9v9BAFwAUADQ/kcApwD//3oA6QChANX/FgHfAeUBlwEKAYoChgBQAOwARAAEAQ0BswA1AIwAEwElASgBaAABAZgANwG2AAcB9QB9ADoBjAAsAMsA5gAV/+L+FwBrAFwApf8mANABuwGwAGIA8Pxv9p346/vA+Ur6mPoT+0v8Jv0="),C(u,111162,"BgAHAAgACQAKAAsADQAOABAAEgAUABYAGQAcACAAIwAoAC0AMwA5AEAARwBQAFoAZQByAIAAjgCfALMAygDjAAABHAE+AWcBlQHHAQACOAJ+As8CcQOPAwAEcQT8BJ4FVgYfBwAI4Qj4CTsLrAw9DgAQwxHwE3cWWBl7HAAghSPfJ+4ssDL2OABArkekUIVbZmYzc/9/"),C(u,111324,"qMtoQQAAAACoy2jBAAAAAAAAAAAXCtQJkglQCQ8JzgiPCE8IEwjVB5oHYgcoB/MGvgaLBloGKwb9BdMFqQWBBVwFOAUWBfcE1wS7BKAEhgRuBFcEQQQtBBkEBwT1A+QD1APFA7YDqAOZA40DfwNxA2UDVwNLAz4DMgMkAxgDCwP+AvIC5ALYAssCvgKxAqQClwKLAn0CcgJkAlkCTAJAAjQCKAIcAhICBQL7AfAB5QHbAdABxgG7AbIBqAGeAZQBigGBAXcBbgFjAVsBUAFIAT0BNAErASABGAENAQQB+gDwAOcA3ADUAMgAwAC1AKwAoQCYAI4AhQB7AHEAaQBeAFYATABDADkAMQAnAB4AFgALAAQA+//y/+n/4P/X/87/xP+7/7L/qf+g/5X/jf+C/3r/cP9m/1z/Uv9J/z//Nf8r/yL/F/8O/wT/+v7x/uf+3f7T/sr+wP62/q3+o/6b/pD+h/59/nP+av5f/lb+TP5C/jj+Lf4j/hn+Df4D/vf97P3h/dX9yf29/bH9pf2Y/Yz9f/1z/Wb9Wf1M/T/9M/0k/Rn9Cv3//PH85fzY/Mz8vvyz/KT8mPyL/H78cfxi/FX8Rfw4/Cb8GfwG/Pb74vvQ+7r7pfuO+3b7XPtB+yT7Bvvl+sT6n/p5+lP6KPr++dD5oflw+Tz5CfnR+Jr4YPgm+Oj3q/ds9yz36/aq9mj2Jvbj9bAEdgRABA4E3wO0A4sDZQNBAx8DAAPiAsYCqwKSAnoCZAJOAjoCJwIVAgMC8wHjAdQBxgG4AasBnwGTAYcBfAFyAWgBXgFVAUwBQwE7ATMBLAEkAR0BFgEQAQkBAwH9APcA8gDtAOcA4gDdANkA1ADQAMwAxwDDAMAAvAC4ALQAsQCuAKoApwCkAKEAngCbAJkAlgCTAJEAjgCMAIkAhwCFAIMAgAB+AHwAegB4AHcAdQBzAHEAbwBuAGwAagBpAGcAZgBkAGMAYQBgAF8AXQBcAFsAWgBYAFcAVgBVAFQAUwBSAFAATwBOAE0ATABLAEsASgBJAEgARwBGAEUARABEAEMAQgBBAEAAQAA/AD4APQA9ADwAOwA7ADoAOQA5ADgAOAA3ADcANgA2ADUANQA0ADQAMwAzADIAMgAxADEAMAAwAC8ALwAuAC4ALQAtACwALAArACsAKgAqACkAKQApACkAKAAoACcAJwAmACYAJgAmACUAJQAkACQAJAAkACMAIwAjACMAIgAiACEAIQAhACEAIAAgACAAIAAfAB8AHwAfAB4AHgAeAB4AHQAdAB0AHQAcABwAHAAcABsAGwAxNkZyYW1lTWFuYWdlckltcGwAMTJGcmFtZU1hbmFnZXIAMjNTcGVlY2hXYXZlR2VuZXJhdG9ySW1wbAAxOVNwZWVjaFdhdmVHZW5lcmF0b3IAMTNXYXZlR2VuZXJhdG9y"),C(u,112416,"AwAAAAQAAAAEAAAABgAAAIP5ogBETm4A/CkVANFXJwDdNPUAYtvAADyZlQBBkEMAY1H+ALveqwC3YcUAOm4kANJNQgBJBuAACeouAByS0QDrHf4AKbEcAOg+pwD1NYIARLsuAJzphAC0JnAAQX5fANaROQBTgzkAnPQ5AItfhAAo+b0A+B87AN7/lwAPmAUAES/vAApaiwBtH20Az342AAnLJwBGT7cAnmY/AC3qXwC6J3UA5evHAD178QD3OQcAklKKAPtr6gAfsV8ACF2NADADVgB7/EYA8KtrACC8zwA29JoA46kdAF5hkQAIG+YAhZllAKAUXwCNQGgAgNj/ACdzTQAGBjEAylYVAMmocwB74mAAa4zAABnERwDNZ8MACejcAFmDKgCLdsQAphyWAESv3QAZV9EApT4FAAUH/wAzfj8AwjLoAJhP3gC7fTIAJj3DAB5r7wCf+F4ANR86AH/yygDxhx0AfJAhAGokfADVbvoAMC13ABU7QwC1FMYAwxmdAK3EwgAsTUEADABdAIZ9RgDjcS0Am8aaADNiAAC00nwAtKeXADdV1QDXPvYAoxAYAE12/ABknSoAcNerAGN8+AB6sFcAFxXnAMBJVgA71tkAp4Q4ACQjywDWincAWlQjAAAfuQDxChsAGc7fAJ8x/wBmHmoAmVdhAKz7RwB+f9gAImW3ADLoiQDmv2AA78TNAGw2CQBdP9QAFt7XAFg73gDem5IA0iIoACiG6ADiWE0AxsoyAAjjFgDgfcsAF8BQAPMdpwAY4FsALhM0AIMSYgCDSAEA9Y5bAK2wfwAe6fIASEpDABBn0wCq3dgArl9CAGphzgAKKKQA05m0AAam8gBcd38Ao8KDAGE8iACKc3gAr4xaAG/XvQAtpmMA9L/LAI2B7wAmwWcAVcpFAMrZNgAoqNIAwmGNABLJdwAEJhQAEkabAMRZxADIxUQATbKRAAAX8wDUQ60AKUnlAP3VEAAAvvwAHpTMAHDO7gATPvUA7PGAALPnwwDH+CgAkwWUAMFxPgAuCbMAC0XzAIgSnACrIHsALrWfAEeSwgB7Mi8ADFVtAHKnkABr5x8AMcuWAHkWSgBBeeIA9N+JAOiUlwDi5oQAmTGXAIjtawBfXzYAu/0OAEiatABnpGwAcXJCAI1dMgCfFbgAvOUJAI0xJQD3dDkAMAUcAA0MAQBLCGgALO5YAEeqkAB05wIAvdYkAPd9pgBuSHIAnxbvAI6UpgC0kfYA0VNRAM8K8gAgmDMA9Ut+ALJjaADdPl8AQF0DAIWJfwBVUikAN2TAAG3YEAAySDIAW0x1AE5x1ABFVG4ACwnBACr1aQAUZtUAJwedAF0EUAC0O9sA6nbFAIf5FwBJa30AHSe6AJZpKQDGzKwArRRUAJDiagCI2YkALHJQAASkvgB3B5QA8zBwAAD8JwDqcagAZsJJAGTgPQCX3YMAoz+XAEOU/QANhowAMUHeAJI5nQDdcIwAF7fnAAjfOwAVNysAXICgAFqAkwAQEZIAD+jYAGyArwDb/0sAOJAPAFkYdgBipRUAYcu7AMeJuQAQQL0A0vIEAEl1JwDrtvYA2yK7AAoUqgCJJi8AZIN2AAk7MwAOlBoAUTqqAB2jwgCv7a4AXCYSAG3CTQAtepwAwFaXAAM/gwAJ8PYAK0CMAG0xmQA5tAcADCAVANjDWwD1ksQAxq1LAE7KpQCnN80A5qk2AKuSlADdQmgAGWPeAHaM7wBoi1IA/Ns3AK6hqwDfFTEAAK6hAAz72gBkTWYA7QW3ACllMABXVr8AR/86AGr5uQB1vvMAKJPfAKuAMABmjPYABMsVAPoiBgDZ5B0APbOkAFcbjwA2zQkATkLpABO+pAAzI7UA8KoaAE9lqADSwaUACz8PAFt4zQAj+XYAe4sEAIkXcgDGplMAb27iAO/rAACbSlgAxNq3AKpmugB2z88A0QIdALHxLQCMmcEAw613AIZI2gD3XaAAxoD0AKzwLwDd7JoAP1y8ANDebQCQxx8AKtu2AKMlOgAAr5oArVOTALZXBAApLbQAS4B+ANoHpwB2qg4Ae1mhABYSKgDcty0A+uX9AInb/gCJvv0A5HZsAAap/AA+gHAAhW4VAP2H/wAoPgcAYWczACoYhgBNveoAs+evAI9tbgCVZzkAMb9bAITXSAAw3xYAxy1DACVhNQDJcM4AMMu4AL9s/QCkAKIABWzkAFrdoAAhb0cAYhLSALlchABwYUkAa1bgAJlSAQBQVTcAHtW3ADPxxAATbl8AXTDkAIUuqQAdssMAoTI2AAi3pADqsdQAFvchAI9p5AAn/3cADAOAAI1ALQBPzaAAIKWZALOi0wAvXQoAtPlCABHaywB9vtAAm9vBAKsXvQDKooEACGpcAC5VFwAnAFUAfxTwAOEHhgAUC2QAlkGNAIe+3gDa/SoAayW2AHuJNAAF8/4Aub+eAGhqTwBKKqgAT8RaAC34vADXWpgA9MeVAA1NjQAgOqYApFdfABQ/sQCAOJUAzCABAHHdhgDJ3rYAv2D1AE1lEQABB2sAjLCsALLA0ABRVUgAHvsOAJVywwCjBjsAwEA1AAbcewDgRcwATin6ANbKyADo80EAfGTeAJtk2ADZvjEApJfDAHdY1ABp48UA8NoTALo6PABGGEYAVXVfANK99QBuksYArC5dAA5E7QAcPkIAYcSHACn96QDn1vMAInzKAG+RNQAI4MUA/9eNAG5q4gCw/cYAkwjBAHxddABrrbIAzW6dAD5yewDGEWoA98+pAClz3wC1yboAtwBRAOKyDQB0uiQA5X1gAHTYigANFSwAgRgMAH5mlAABKRYAn3p2AP39vgBWRe8A2X42AOzZEwCLurkAxJf8ADGoJwDxbsMAlMU2ANioVgC0qLUAz8wOABKJLQBvVzQALFaJAJnO4wDWILkAa16qAD4qnAARX8wA/QtKAOH0+wCOO20A4oYsAOnUhAD8tKkA7+7RAC41yQAvOWEAOCFEABvZyACB/AoA+0pqAC8c2ABTtIQATpmMAFQizAAqVdwAwMbWAAsZlgAacLgAaZVkACZaYAA/Uu4AfxEPAPS1EQD8y/UANLwtADS87gDoXcwA3V5gAGeOmwCSM+8AyRe4AGFYmwDhV7wAUYPGANg+EADdcUgALRzdAK8YoQAhLEYAWfPXANl6mACeVMAAT4b6AFYG/ADlea4AiSI2ADitIgBnk9wAVeiqAIImOADK55sAUQ2kAJkzsQCp1w4AaQVIAGWy8AB/iKcAiEyXAPnRNgAhkrMAe4JKAJjPIQBAn9wA3EdVAOF0OgBn60IA/p3fAF7UXwB7Z6QAuqx6AFX2ogAriCMAQbpVAFluCAAhKoYAOUeDAInj5gDlntQASftAAP9W6QAcD8oAxVmKAJT6KwDTwcUAD8XPANtargBHxYYAhUNiACGGOwAseZQAEGGHACpMewCALBoAQ78SAIgmkAB4PIkAqMTkAOXbewDEOsIAJvTqAPdnigANkr8AZaMrAD2TsQC9fAsApFHcACfdYwBp4d0AmpQZAKgplQBozigACe20AESfIABOmMoAcIJjAH58IwAPuTIAp/WOABRW5wAh8QgAtZ0qAG9+TQClGVEAtfmrAILf1gCW3WEAFjYCAMQ6nwCDoqEAcu1tADmNegCCuKkAazJcAEYnWwAANO0A0gB3APz0VQABWU0A4HGA"),C(u,115203,"QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNf6CK2VHFWdAAAAAAAAAOEMAAPr+Qi52vzo7nrya9wy9vf3/////3z88VFVVVVXFP5ErF89VVaU/F9CkZxERgT8AAAAAAADIQu85+v5CLuY/JMSC/72/zj+19AzXCGusP8xQRtKrsoM/hDpOm+DXVT8="),C(u,115390,"8D9uv4gaTzubPDUz+6k99u8/XdzYnBNgcbxhgHc+muzvP9FmhxB6XpC8hX9u6BXj7z8T9mc1UtKMPHSFFdOw2e8/+o75I4DOi7ze9t0pa9DvP2HI5mFO92A8yJt1GEXH7z+Z0zNb5KOQPIPzxso+vu8/bXuDXaaalzwPiflsWLXvP/zv/ZIatY4890dyK5Ks7z/RnC9wPb4+PKLR0zLso+8/C26QiTQDarwb0/6vZpvvPw69LypSVpW8UVsS0AGT7z9V6k6M74BQvMwxbMC9iu8/FvTVuSPJkbzgLamumoLvP69VXOnj04A8UY6lyJh67z9Ik6XqFRuAvHtRfTy4cu8/PTLeVfAfj7zqjYw4+WrvP79TEz+MiYs8dctv61tj7z8m6xF2nNmWvNRcBITgW+8/YC86PvfsmjyquWgxh1TvP504hsuC54+8Hdn8IlBN7z+Nw6ZEQW+KPNaMYog7Ru8/fQTksAV6gDyW3H2RST/vP5SoqOP9jpY8OGJ1bno47z99SHTyGF6HPD+msk/OMe8/8ucfmCtHgDzdfOJlRSvvP14IcT97uJa8gWP14d8k7z8xqwlt4feCPOHeH/WdHu8/+r9vGpshPbyQ2drQfxjvP7QKDHKCN4s8CwPkpoUS7z+Py86JkhRuPFYvPqmvDO8/tquwTXVNgzwVtzEK/gbvP0x0rOIBQoY8MdhM/HAB7z9K+NNdOd2PPP8WZLII/O4/BFuOO4Cjhrzxn5JfxfbuP2hQS8ztSpK8y6k6N6fx7j+OLVEb+AeZvGbYBW2u7O4/0jaUPujRcbz3n+U02+fuPxUbzrMZGZm85agTwy3j7j9tTCqnSJ+FPCI0Ekym3u4/imkoemASk7wcgKwERdruP1uJF0iPp1i8Ki73IQrW7j8bmklnmyx8vJeoUNn10e4/EazCYO1jQzwtiWFgCM7uP+9kBjsJZpY8VwAd7UHK7j95A6Ha4cxuPNA8wbWixu4/MBIPP47/kzze09fwKsPuP7CvervOkHY8Jyo21dq/7j934FTrvR2TPA3d/ZmyvO4/jqNxADSUj7ynLJ12srnuP0mjk9zM3oe8QmbPotq27j9fOA+9xt54vIJPnVYrtO4/9lx77EYShrwPkl3KpLHuP47X/RgFNZM82ie1Nkev7j8Fm4ovt5h7PP3Hl9QSre4/CVQc4uFjkDwpVEjdB6vuP+rGGVCFxzQ8t0ZZiiap7j81wGQr5jKUPEghrRVvp+4/n3aZYUrkjLwJ3Ha54aXuP6hN7zvFM4y8hVU6sH6k7j+u6SuJeFOEvCDDzDRGo+4/WFhWeN3Ok7wlIlWCOKLuP2QZfoCqEFc8c6lM1FWh7j8oIl6/77OTvM07f2aeoO4/grk0h60Sary/2gt1EqDuP+6pbbjvZ2O8LxplPLKf7j9RiOBUPdyAvISUUfl9n+4/zz5afmQfeLx0X+zodZ/uP7B9i8BK7oa8dIGlSJqf7j+K5lUeMhmGvMlnQlbrn+4/09QJXsuckDw/Xd5PaaDuPx2lTbncMnu8hwHrcxSh7j9rwGdU/eyUPDLBMAHtoe4/VWzWq+HrZTxiTs8286LuP0LPsy/FoYi8Eho+VCek7j80NzvxtmmTvBPOTJmJpe4/Hv8ZOoRegLytxyNGGqfuP25XcthQ1JS87ZJEm9mo7j8Aig5bZ62QPJlmitnHqu4/tOrwwS+3jTzboCpC5azuP//nxZxgtmW8jES1FjKv7j9EX/NZg/Z7PDZ3FZmuse4/gz0epx8Jk7zG/5ELW7TuPykebIu4qV285cXNsDe37j9ZuZB8+SNsvA9SyMtEuu4/qvn0IkNDkrxQTt6fgr3uP0uOZtdsyoW8ugfKcPHA7j8nzpEr/K9xPJDwo4KRxO4/u3MK4TXSbTwjI+MZY8juP2MiYiIExYe8ZeVde2bM7j/VMeLjhhyLPDMtSuyb0O4/Fbu809G7kbxdJT6yA9XuP9Ix7pwxzJA8WLMwE57Z7j+zWnNuhGmEPL/9eVVr3u4/tJ2Ol83fgrx689O/a+PuP4czy5J3Gow8rdNamZ/o7j/62dFKj3uQvGa2jSkH7u4/uq7cVtnDVbz7FU+4ovPuP0D2pj0OpJC8OlnljXL57j80k6049NZovEde+/J2/+4/NYpYa+LukbxKBqEwsAXvP83dXwrX/3Q80sFLkB4M7z+smJL6+72RvAke11vCEu8/swyvMK5uczycUoXdmxnvP5T9n1wy4448etD/X6sg7z+sWQnRj+CEPEvRVy7xJ+8/ZxpOOK/NYzy15waUbS/vP2gZkmwsa2c8aZDv3CA37z/StcyDGIqAvPrDXVULP+8/b/r/P12tj7x8iQdKLUfvP0mpdTiuDZC88okNCIdP7z+nBz2mhaN0PIek+9wYWO8/DyJAIJ6RgryYg8kW42DvP6ySwdVQWo48hTLbA+Zp7z9LawGsWTqEPGC0AfMhc+8/Hz60ByHVgrxfm3szl3zvP8kNRzu5Kom8KaH1FEaG7z/TiDpgBLZ0PPY/i+cukO8/cXKdUezFgzyDTMf7UZrvP/CR048S94+82pCkoq+k7z99dCPimK6NvPFnji1Ir+8/CCCqQbzDjjwnWmHuG7rvPzLrqcOUK4Q8l7prNyvF7z/uhdExqWSKPEBFblt20O8/7eM75Lo3jrwUvpyt/dvvP53NkU07iXc82JCegcHn7z+JzGBBwQVTPPFxjyvC8+8/EhETFBUWFxgZGhscHR4fICERIiMkESUmJygpKissES0uLxAQMBAQEBAQEBAxMjMQNDUQEBERERERERERERERERERERERERERERERERE2ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERNxERERE4ETk6Ozw9PhERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEUBBEUJDREVGR0hJShFLTE1OT1BREFJTVFVWV1hZWltcXRBeX2AQERERYWJjEBAQEBAQEBAQEBERERFkEBAQEBAQEBAQEBAQEBAQERFlEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQERFmZxAQaGkREREREREREREREREREREREREREREREWoREWsQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEWxtEBAQEBAQEBAQbhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQb3BxchAQEBAQEBAQc3R1EBAQEBB2dxAQEBB4EBB5EBAQEBAQEBAQEBAQEBA="),C(u,117968,"//////////////////////////////////////////8AAAAAAAAAAP7//wf+//8HAAAAAAAEIAT//3////9//////////////////////////////////8P/AwAfUA=="),C(u,118072,"IAAAAAAA37xA1///+////////////7///////////////////////wP8///////////////////////////+////fwL//////wEAAAAA/7+2AP///4cHAAAA/wf//////////v/D////////////////7x/+4f+fAAD///////8A4P///////////////wMA//////8HMAT////8/x8AAP///wH/BwAAAAAAAP//3z8AAPD/+AP////////////v/9/h/8///v/vn/n///3F459ZgLDP/wMQ7of5///9bcOHGQJewP8/AO6/+////e3jvxsBAM//AB7un/n///3t458ZwLDP/wIA7Mc91hjH/8PHHYEAwP8AAO/f/f///f/j3x1gB8//AADv3/3///3v498dYEDP/wYA79/9/////+ffXfCAz/8A/Oz/f/z///svf4Bf/8D/DAD+/////3//Bz8g/wMAAAAA1vf//6///ztfIP/zAAAAAAEAAAD/AwAA//7///8f/v8D///+////HwAAAAAAAAAA////////f/n/A////////////z//////vyD///////f///////////89fz3//////z3/////PX89/3//////////Pf//////////BwAAAAD//wAA/////////////z8//v//////////////////////////////////////////////////////////n////v//B////////////8f/Af/fDwD//w8A//8PAP/fDQD////////P//8BgBD/AwAAAAD/A///////////////Af//////B///////////PwD///9//w//AcD/////Px8A//////8P////A/8DAAAAAP///w//////////f/7/HwD/A/8DgA=="),C(u,118768,"////////7//vD/8DAAAAAP//////8////////7//AwD///////9/AP/j//////8//wH//////+cAAAAAAN5vBP///////////////////////////////wAAAACA/x8A//8/P/////8/P/+q////P////////99f3B/PD/8f3B8="),C(u,118910,"AoAAAP8f"),C(u,118928,"hPwvPlC9//PgQwAA//////8B"),C(u,118982,"wP///////wMAAP//////f///////f/////////////////////8feAwA/////78g/////////4AAAP//fwB/f39/f39/f/////8AAAAAAIA="),C(u,119088,"4AAAAP4DPh/+////////////f+D+//////////////fg///////+/////////////38AAP///wcAAAAAAAD///////////////////////////////8/"),C(u,119184,"////////////////////////////////////////AAD//////////////////////x8AAAAAAAAAAP//////P/8f////DwAA//////9/8I///////////////////wAAAACA//z////////////////5////////fAAAAAAAgP+//////wAAAP///////w8A//////////8vAP8DAAD86P//////B/////8HAP///x/////////3/wCA/wP///9/////////fwD/P/8D//9//P////////9/BQAAOP//PAB+fn4Af3////////f/AP///////////////////wf/A///////////////////////////DwD//3/4//////8P/////////////////z//////////////////AwAAAAB/APjg//1/X9v/////////////////AwAAAPj///////////////8/AAD///////////z///////8AAAAAAP8P"),C(u,119582,"3/////////////////////8fAAD/A/7//wf+//8HwP////////////9//Pz8HAAAAAD/7///f///t/8//z8AAAAA////////////////////BwAAAAAAAAAA////////Hw=="),C(u,119712,"////H////////wEAAAAAAP////8A4P///wf//////wf///8//////w//PgAAAAAA/////////////////////////z//A/////8P/////w///////wD///////8P"),C(u,119824,"////////fwD//z8A/w=="),C(u,119856,"P/3/////v5H//z8A//9/AP///38AAAAAAAAAAP//NwD//z8A////AwAAAAAAAAAA/////////8AAAAAAAAAAAG/w7/7//z8AAAAAAP///x////8fAAAAAP/+//8fAAAA////////PwD//z8A//8HAP//Aw=="),C(u,119984,"////////////AQAAAAAAAP///////wcA////////BwD//////wD/Aw=="),C(u,120048,"////H4AA//8/"),C(u,120076,"//9/AP//////////PwAAAMD/AAD8////////AQAA////Af8D////////x/9wAP////9HAP//////////HgD/FwAAAAD///v///+fQAAAAAAAAAAAf73/v/8B/////////wH/A++f+f///e3jnxmB4A8="),C(u,120208,"//////////+7B/+DAAAAAP//////////swD/Aw=="),C(u,120256,"////////P38AAAA/AAAAAP////////9/EQD/AwAAAAD///////8/Af8DAAAAAAAA////5/8H/wM="),C(u,120336,"/////////wE="),C(u,120356,"////////////AwCA"),C(u,120388,"//z///////waAAAA////////538AAP///////////yAAAAAA/////////wH//f////9/fwEA/wMAAPz////8///+fw=="),C(u,120464,"f/v/////f7TLAP8Dv/3///9/ewH/Aw=="),C(u,120524,"//9/AP////////////////////////8D"),C(u,120560,"/////////////////38AAP///////////////////////////////w8="),C(u,120624,"//////9/"),C(u,120656,"//////////9/"),C(u,120688,"/////////wH///9//wM="),C(u,120714,"////PwAA////////AAAPAP8D+P//4P//"),C(u,120760,"//////////8="),C(u,120784,"////////////h/////////+A//8AAAAAAAAAAAsAAAD/////////////////////////////////////////AP///////////////////////////////////////wcA////fwAAAAAAAAcA8AD/////////////////////////////////////////////////////////////////D/////////////////8H/x//Af9D"),C(u,120976,"/////////////9///////////99k3v/r7/////////+/59/f////e1/8/f//////////////////////////////////////////////////////P/////3///f////3///f////3///f////3/////9/////f//98////////9////52wc="),C(u,121136,"//////8fgD//Qw=="),C(u,121192,"//////8P/wP///////////////////////////////8fAAAAAAAAAP//////////jwj/Aw=="),C(u,121264,"7////5b+9wqE6paqlvf3Xv/7/w/u+/8P"),C(u,121302,"////A////wP///8D"),C(u,121328,"/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8="),C(u,121601,"ARcCHRgTAx4bGQsUCAQNHxYcEhoKBwwVEQkGEAUPDt4SBJUAAAAA////////////////INsBABQAAABDLlVURi04"),C(u,121696,"TENfQ1RZUEUAAAAATENfTlVNRVJJQwAATENfVElNRQAAAAAATENfQ09MTEFURQAATENfTU9ORVRBUlkATENfTUVTU0FHRVM="),C(u,121776,"Qy5VVEYtOA=="),C(u,121800,"MAUCAE5vIGVycm9yIGluZm9ybWF0aW9uAElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE11bHRpaG9wIGF0dGVtcHRlZABSZXF1aXJlZCBrZXkgbm90IGF2YWlsYWJsZQBLZXkgaGFzIGV4cGlyZWQAS2V5IGhhcyBiZWVuIHJldm9rZWQAS2V5IHdhcyByZWplY3RlZCBieSBzZXJ2aWNl"),C(u,123730,"pQJbAPABtQWMBSUBgwYdA5QE/wDHAzEDCwa8AY8BfwPKBCsA2gavAEIDTgPcAQ4EFQChBg0BlAILAjgGZAK8Av8CXQPnBAsHzwLLBe8F2wXhAh4GRQKFAIICbANvBPEA8wMYBdkA2gNMBlQCewGdA70EAABRABUCuwCzA20A/wGFBC8F+QQ4AGUBRgGfALcGqAFzAlMB"),C(u,123928,"IQQAAAAAAAAAAC8C"),C(u,123960,"NQRHBFYE"),C(u,123982,"oAQ="),C(u,124002,"RgVgBW4FYQYAAM8BAAAAAAAAAADJBukG+QYeBzkHSQdeBw=="),C(u,124048,"GQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRk="),C(u,124129,"DgAAAAAAAAAAGQAKDRkZGQANAAACAAkOAAAACQAOAAAO"),C(u,124187,"DA=="),C(u,124199,"EwAAAAATAAAAAAkMAAAAAAAMAAAM"),C(u,124245,"EA=="),C(u,124257,"DwAAAAQPAAAAAAkQAAAAAAAQAAAQ"),C(u,124303,"Eg=="),C(u,124315,"EQAAAAARAAAAAAkSAAAAAAASAAASAAAaAAAAGhoa"),C(u,124370,"GgAAABoaGgAAAAAAAAk="),C(u,124419,"FA=="),C(u,124431,"FwAAAAAXAAAAAAkUAAAAAAAUAAAU"),C(u,124477,"Fg=="),C(u,124489,"FQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVG"),C(u,124564,"EQ=="),C(u,124604,"//////////8="),C(u,124672,"0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAACAADAAwAAwAQAAMAFAADABgAAwAcAAMAIAADACQAAwAoAAMALAADADAAAwA0AAMAOAADADwAAwBAAAMARAADAEgAAwBMAAMAUAADAFQAAwBYAAMAXAADAGAAAwBkAAMAaAADAGwAAwBwAAMAdAADAHgAAwB8AAMAAAACzAQAAwwIAAMMDAADDBAAAwwUAAMMGAADDBwAAwwgAAMMJAADDCgAAwwsAAMMMAADDDQAA0w4AAMMPAADDAAAMuwEADMMCAAzDAwAMwwQADNsAAAAAIAAAAAkAAAAKAAAADQAAAAsAAAAMAAAAhQAAAAAgAAABIAAAAiAAAAMgAAAEIAAABSAAAAYgAAAIIAAACSAAAAogAAAoIAAAKSAAAF8gAAAAMAAAAAAAAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAAGjpAQB46AEAZOoBAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAAGjpAQCo6AEAnOgBAE4xMF9fY3h4YWJpdjExN19fcGJhc2VfdHlwZV9pbmZvRQAAAGjpAQDY6AEAnOgBAE4xMF9fY3h4YWJpdjExOV9fcG9pbnRlcl90eXBlX2luZm9FAGjpAQAI6QEA/OgBAAAAAADM6AEAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAAAAAAsOkBABQAAAAcAAAAFgAAABcAAAAYAAAAHQAAAB4AAAAfAAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAAGjpAQCI6QEAzOgBAAAAAAAg6gEACQAAACAAAAAhAAAAAAAAAEjqAQAJAAAAIgAAACMAAAAAAAAACOoBAAkAAAAkAAAAJQAAAFN0OWV4Y2VwdGlvbgAAAABA6QEA+OkBAFN0OWJhZF9hbGxvYwAAAABo6QEAEOoBAAjqAQBTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAaOkBACzqAQAg6gEAU3Q5dHlwZV9pbmZvAAAAAEDpAQBU6gE="),C(u,125552,"wLEAAMCyAADAswAAwLQAAMC1AADAtgAAwLcAAMC4AADAuQAAwLoAAMC7AADAvAAAwL0AAMC+AADAvwAAwMAAAMDBAADAwgAAwMMAAMDEAADAxQAAwMIAAMDGAADAxwAAwMgAAMDJAADAygAAwMsAAMDMAADAzQAAwM4AAMDPAADA0AAAwNEAAMDSAADA0wAAwNQAAMDVAADA1gAAwNcAAMDYAADA2QAAwNIAAMDaAADA2wAAwNwAAMDdAADA3gAAwN8AAMDgAADA4QAAwNgAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA4gAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwOMAAMDkAADAwgAAwMIAAMDCAADA5QAAwMIAAMDmAADA5wAAwOgAAMDpAADA6gAAwOsAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA7AAAwO0AAMDCAADA7gAAwO8AAMDCAADA8AAAwPEAAMDyAADA8wAAwPQAAMD1AADA9gAAwPcAAMD4AADAwgAAwPkAAMD6AADA+wAAwPwAAMD9AADA/gAAwP8AAMAAAQDAAQEAwAIBAMADAQDABAEAwAUBAMAGAQDABwEAwAgBAMAJAQDACgEAwAsBAMAMAQDACwEAwA0BAMAOAQDADwEAwAsBAMDCAADAwgAAwMIAAMAQAQDAEQEAwBIBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMDCAADAwgAAwBMBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBQBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBUBAMAWAQDACwEAwAsBAMAXAQDAGAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAGQEAwMIAAMDCAADAGgEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAGwEAwBwBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMAdAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwB4BAMAfAQDAIAEAwCEBAMAiAQDAIwEAwCQBAMAlAQDA2AAAwNgAAMAmAQDACwEAwAsBAMALAQDACwEAwAsBAMAnAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwCgBAMApAQDACwEAwAsBAMAqAQDACwEAwCsBAMALAQDALAEAwC0BAMAuAQDALwEAwNgAAMDYAADAMAEAwDEBAMAyAQDAMwEAwDQBAMALAQDACwEAwAsBAMALAQDACwEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA1AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwDYBAMA3AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAOAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA5AQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMA6AQDAOwEAwDwB"),C(u,128496,"oVcBAEEAAADdVwEAQgAAACZYAQBDAAAAa1gBAEQAAADSWAEARQAAABNZAQBGAAAAfFkBAEcAAACEWQEASAAAADBaAQBJAAAAZ1oBAEoAAADuWgEASwAAAC5bAQBMAAAAcVsBAE0AAADZWwEATgAAAGtcAQBPAAAAh1wBAAgAAADcXAEACQAAAB9dAQAKAAAAZ10BAAsAAACVXQEADAAAAMpdAQANAAAAD14BAA4AAAAqXgEADwAAAIZeAQAPAAAAvV4BABAAAABDXwEAEQAAAH1fAQASAAAAq18BABMAAADZXwEAFAAAAAVgAQAVAAAAMGABABcAAABgYAEAGAAAAHlgAQAZAAAAtWABABsAAADdYAEAHAAAAPBgAQAdAAAAI2EBACAAAABEYQEAIQAAAG9hAQAiAAAAnWEBACMAAADRYQEAJAAAAPNhAQAlAAAAFWIBACYAAABZYgEAKAAAAH1iAQApAAAArmIBACoAAADoYgEAKwAAADVjAQAtAAAAb2MBAC4AAACnYwEALwAAAOZjAQAwAAAAeGQBADEAAACdZAEAMgAAAM9kAQAzAAAA/mQBAGQAAABgZQEAyAAAAN1lAQDJAAAAAAAAAP////8iZgEAAQAAAD5mAQACAAAABVUBAAMAAADNZgEAEQAAADRnAQASAAAAg2cBABMAAAD7ZwEAFAAAADtoAQAVAAAATGgBABYAAAB0aAEAEQAAALdoAQAhAAAAymgBACIAAAD+aAEAIwAAAEtpAQAkAAAAaWkBACUAAACfaQEAJgAAAOJpAQAhAAAAAAAAAP////8AAAAAAAAAACYAAAAAAAAAAQAAAJByAQABAAAAkHMBAAEAAACQdAEAAQAAAJB1AQABAAAAkHYBAAEAAACQdwEAAQAAAJB4AQABAAAAkHkBAAEAAACQegEAAQAAAJB7AQABAAAAkHwBAAEAAACQfQEAAQAAAJB+AQABAAAAkH8BAAEAAACQgAEAAQAAAJCBAQABAAAAkIIBAAUAAAAAAAAABg=="),C(u,129280,"oIMBAKCDAQAghAEAIIQBAKCEAQAghQEAoIUBACCGAQCghgEAoIYBACCHAQAghwEAoIcBAKCHAQAgiAEAIIgBAKCIAQCgiAEAIIkBACCJAQAuOU4ycIoBAAMHBQCQigEALjlOLnCKAQADBwUAkIoBAC45Ti5wigEAAwcFAJCKAQAuOVoycIoBAAMJBQCVigEALjlOMnCKAQADBwUAkIoBAC45SjdwigEABAcFAJqKAQAuOUo3cIoBAAQHBQCaigEALjlKN3CKAQAEBwUAmooBAC45TjJwigEAAwcFAJCKAQAuOU4ucIoBAAMHBQCQigEALjlOMnCKAQADBwUAkIoBACIpKSBwigEAAwcFAJqKAQAuOTcycIoBAAMHBQCaigEAo1MBABABAAAAVAEADAEAANJUAQARAQAAClUBACMAAAB/VQEAGwAAADRWAQAVAAAAxVYBAAABAAABVwEAAgEAAE1XAQADAQAAvVcBAAQBAAD7VwEABQEAAE5YAQATAAAAkVgBAB4AAADVWAEAFwAAAF9ZAQAaAAAAkVkBABkAAAD0WQEAGAAAADhaAQAdAAAAzloBABwAAAAPWwEAFgAAADdbAQAU"),C(u,129744,"Q1gBABABAACIWAEADAEAAPNYAQARAQAAM1kBACMAAACHWQEAGwAAAOBZAQAVAAAAQloBAAABAACcWgEAAgEAAABbAQADAQAAT1sBAAQBAACnWwEABQEAAEhcAQATAAAAc1wBAB4AAADEXAEAFwAAABVdAQAaAAAAXV0BABkAAACIXQEAGAAAANJdAQAdAAAABF4BABwAAAAvXgEAFgAAAF9eAQAU"),C(u,129920,"u08BAAEAAABcUAEAAAAAAM9QAQAAAAAAOFIBAAAAAABBUwEAAAAAAIFTAQAAAAAA+1MBAAAAAADnVAEAAAAAACVVAQAAAAAAiVUBAAAAAABUVgEAAAAAAPxWAQAAAAAADlcBAAAAAABIVwEAAAAAAKdXAQAAAAAA9lcBAAAAAAA3WAEAAAAAAKNYAQAAAAAA6FgBAAAAAAAuWQEAAAAAAH9ZAQAAAAAA61kBAAAAAAD/////g00BAIIAAAB5AAAAdg=="),C(u,130128,"4I8BAOCPAQBQkAEAwJABAMCQAQDAkAEAAQAAANQKAwCMCgMAROcC"),C(u,130176,"I0sBAAEAAAAAAAAA/////1dMAQABAAAA+0wBAAIAAADGTQEAAwAAAAAAAAD/////Vk4BAAAAAADSTgEAAQAAALJPAQACAAAAGFABABQAAAAAAAAA/////wAAAAAAAAAAt1ABABIAAABNUgEAFAAAAN5SAQAkAAAAhlMBAEAAAAARVAEAwQAAAAAAAAD/////q1QBAAEAAAAAAAAA/////1dMAQAAAAAAGVUBAAEAAACRVQEAAgAAAENWAQADAAAA31YBAAQAAAAgVwEABQAAAAAAAAD/////AAAAAAAAAABXTAEAAQAAAIlXAQACAAAAr1cBAAMAAADfVgEABAAAACBXAQAFAAAAAAAAAP////8AAAAAClgBADxYAQAYUAEAqFgB"),C(u,130480,"8l8BAAEAAAA5YAEAAgAAAFhgAQADAAAAgWABAAQAAACwYAEABQAAANNgAQAGAAAABWEBAAcAAAAqYQEACAAAAFFhAQAJAAAAdmEBAAoAAACQYQEACwAAAMNhAQAMAAAA+WEBAA0AAAAuYgEADgAAAE5iAQAPAAAAhmIBAA8AAADUYgEADwAAABljAQAPAAAAP2MBAA8AAACkYwEABwAAANpjAQAHAAAAO2QBAAcAAACEZAEABwAAAK9kAQAHAAAAw2QBAA4AAADnZAEADgAAAAplAQAQAAAA9GUBABAAAAArZgEAEAAAAN9WAQAQAAAAbmYBABAAAADBZgEAEA=="),C(u,130752,"f20BAD4AAACjbQEAPOAAAM1tAQAmAAAA1G0BACIAAAA6bgEAIAAAAHhuAQAnAAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAxWcBAAAAAAAJaAEAHgAAAEJoAQBBAAAAQ1YBAGQAAACGaAEAlgAAAKVoAQDmAAAAAAAAAP////9jZwEAZAAAAL5oAQA8AAAA6WgBAFAAAABDVgEAZAAAABJpAQB9AAAAUmkBAKAAAAAAAAAA/////wAAAAAAAAAAY2cBAGQAAACUaQEARgAAAN5pAQBVAAAAQ1YBAGQAAAAoagEAbgAAAGdqAQB4AAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAlGkBABQAAADeaQEAMgAAAENWAQBkAAAAKGoBAIwAAABnagEAtAAAAAAAAAD/////"),C(u,131076,"QP8BAAD/AQCA/wEAwP8B"),C(u,131104,"wmoBACDgAAALawEACeAAAEFrAQBf4AAAe2sBACI="),C(u,131152,"q2sBAAEAAAC8awEAAgAAAA1sAQAD"),C(u,131184,"+EwBAMJNAQBTTgEACU8BAOVPAQBkUAEA2lABAGdSAQDyUgEA1FMBAGFUAQ=="),C(u,131236,"iFIBADlTAQAAAAAAnlMBAGRUAQDwVAEAL1UBAJpVAQBQVgE="),C(u,131280,"Y1IBAIADAACAA/8DbGUAAAcAAAA0UwEAIAQAAAAELwUAAAAAAAAAAHNTAQAwBQAAMAWPBXloAAAEAAAAG1QBAJAFAACQBf8FAAAAAAAAAAC3VAEAAAYAAAAG/wYAAAAAAAAAACpVAQAABwAAAAdPBwAAAAAAAAAAllUBAAAJAAAACX8JaWgAAAQAAAA/VgEAgAkAAIAJ/wluYgAABAAAANZWAQAACgAAAAp/CmFwAAAEAAAAClcBAIAKAACACv8KdWcAAAQAAABfVwEAAAsAAAALfwsAAAAAAAAAAM5XAQCACwAAgAv/C2F0AAAEAAAAD1gBAAAMAAAADH8MZXQAAAAAAAAsWAEAgAwAAIAM/wxuawAABAAAAJ9YAQAADQAAAA1/DWxtAAAEAAAA5FgBAIANAACADf8NaXMAAAQAAAA8WQEAAA4AAAAOfw4AAAAAAAAAAJtZAQCADgAAgA7/DgAAAAAAAAAA8FkBAAAPAAAAD/8PAAAAAAAAAAA0WgEAABAAAAAQnxAAAAAAAAAAANlaAQCgEAAAoBD/EGFrAAAEAAAAGFsBAAARAAAAEf8Rb2sAAAQAAABKWwEAABIAAAASnxMAAAAAAAAAALlbAQAAKAAAACj/KAAAAAAQAAAAWlwBAEAwAABAMP8wAAAAAAgAAACDXAEAADEAAAAx/58AAAAACAAAABhbAQAApwAAAKf/129rAAAM"),C(u,131840,"WAIAAKoAAACwBAAAhwAAANAHAABuAAAAuAsAAG4AAAD/////"),C(u,131888,"qAsD"),C(u,131904,"mF4BAAEAAAA4XwEAAgAAAGFfAQADAAAAnV8BAAYAAADCXwEACQAAAPhfAQAKAAAAJ2ABAAQAAABNYAEABQAAAI1gAQAkAAAAq2ABAAsAAADVYAEADAAAAPZgAQANAAAAFmEBAA4AAABMYQEADwAAAGdhAQAQAAAAlmEBABEAAAC7YQEAEgAAAAJiAQAfAAAAG2IBACUAAABIYgEAIAAAAJJiAQAhAAAAzmIBACIAAADwYgEABwAAAC5jAQAI"),C(u,132112,"jmMBAAEAAAC8YwEAAgAAAAAAAAABAAAAFJwBACCcAQAsnAEAPAAAABo="),C(u,132163,"AgMFCAsOEhYbICUrMTc+RUxTWmJpcXmAiJCYn6autbzCyc/V2uDk6e3w9Pb5+/z9/f39/Pv59vTw7enk4NrVz8nCvLWupp+YkIiAeXFpYlpTTEU+NzErJSAbFhIOCwgFAwI="),C(u,132288,"QAAAAAABAAAAAAAA7AQCACcAAAAoAAAAKQAAACoAAAArAAAAQOkBAMO2AQBo6QEAsLYBAOQEAgAAAAAAJAUCACwAAAAtAAAALgAAAC8AAABA6QEAArcBAGjpAQDstgEAEAUCAGjpAQDStgEAGAUCAAU="),C(u,132412,"DQ=="),C(u,132436,"CwAAAAoAAADoeAM="),C(u,132460,"Ag=="),C(u,132476,"//////////8="),C(u,132544,"MAUCAAAAAAAF"),C(u,132564,"MA=="),C(u,132588,"CwAAADEAAAD4eAMAAAQ="),C(u,132612,"AQ=="),C(u,132628,"/////wo="),C(u,132696,"yAUCAAB/BA==");var Oo,rs=(Oo=[null,function(t){var r,s=0;return s=e[(t|=0)>>2],e[t>>2]=s+1,s=255&(r=f[0|s]),(0|r)<0&&(s=P[(e[t+12>>2]+(s<<1)|0)-256>>1]),0|s},GA,function(t){var r,s;return r=e[(t|=0)>>2],s=e[r>>2],e[t>>2]=r+4,0|s},function(t){var r=0,s=0;return r=e[(t|=0)>>2],(0|(s=st(t)))==65533&&(e[t>>2]=r+1,e[t+8>>2]=1,s=255&(r=f[0|r]),(0|r)>=0||(s=P[(e[t+12>>2]+(s<<1)|0)-256>>1])),0|s},st,function(t){var r,s,n=0;return(n=e[4+(t|=0)>>2])>>>0<=(s=(r=e[t>>2])+1|0)>>>0?(e[t>>2]=n,65533):(e[t>>2]=s,n=c[0|r],e[t>>2]=r+2,n|c[r+1|0]<<8)},function(t,r){var s,n,A;return r|=0,t=e[(t|=0)>>2],s=e[t+4>>2],n=e[r>>2],(r=Pa(s+1|0,(A=e[n+4>>2])+1|0))||(r=f[0|s]-f[0|A]|0)||(r=Pa(e[t>>2],e[n>>2])),0|r},function(t,r){var s;return t|=0,r=e[(r|=0)>>2],s=e[t>>2],(t=e[r+16>>2]-e[s+16>>2]|0)||(t=Pa(e[s>>2],e[r>>2])),0|t},SA,function(t,r,s,n){var A;return r|=0,s|=0,n|=0,oe=A=oe-16|0,(t=0|ft(e[60+(t|=0)>>2],0|r,0|s,255&n,A+8|0))?(e[56798]=t,t=-1):t=0,oe=A+16|0,H=t?-1:e[A+12>>2],0|(t?-1:e[A+8>>2])},function(t,r,s){r|=0,s|=0;var n,A=0,l=0,g=0,m=0,w=0,T=0;oe=n=oe-32|0,A=e[28+(t|=0)>>2],e[n+16>>2]=A,g=e[t+20>>2],e[n+28>>2]=s,e[n+24>>2]=r,r=g-A|0,e[n+20>>2]=r,g=r+s|0,w=2;e:{t:{r=n+16|0,(A=0|xe(e[t+60>>2],0|r,2,n+12|0))?(e[56798]=A,A=-1):A=0;s:{if(A)A=r;else for(;;){if((0|(l=e[n+12>>2]))==(0|g))break s;if((0|l)<0){A=r;break t}if(m=l-((T=(m=e[r+4>>2])>>>0<l>>>0)?m:0)|0,e[(A=(T<<3)+r|0)>>2]=m+e[A>>2],e[(r=(T?12:4)+r|0)>>2]=e[r>>2]-m,g=g-l|0,r=A,w=w-T|0,(l=0|xe(e[t+60>>2],0|r,0|w,n+12|0))?(e[56798]=l,l=-1):l=0,l)break}if((0|g)!=-1)break t}r=e[t+44>>2],e[t+28>>2]=r,e[t+20>>2]=r,e[t+16>>2]=r+e[t+48>>2],t=s;break e}e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t>>2]=32|e[t>>2],t=0,(0|w)!=2&&(t=s-e[A+4>>2]|0)}return oe=n+32|0,0|t},function(t,r,s){t|=0,r|=0,s|=0;var n,A=0,l=0,g=0;oe=n=oe-32|0,e[n+16>>2]=r,A=e[t+48>>2],e[n+20>>2]=s-!!(0|A),l=e[t+44>>2],e[n+28>>2]=A,e[n+24>>2]=l;e:{t:{if((A=0|Bt(e[t+60>>2],n+16|0,2,n+12|0))?(e[56798]=A,A=-1):A=0,A)r=32;else{if((0|(A=e[n+12>>2]))>0)break t;r=A?32:16}e[t>>2]=r|e[t>>2];break e}g=A,(l=e[n+20>>2])>>>0>=A>>>0||(A=e[t+44>>2],e[t+4>>2]=A,e[t+8>>2]=A+(g-l|0),e[t+48>>2]&&(e[t+4>>2]=A+1,f[(r+s|0)-1|0]=c[0|A]),g=s)}return oe=n+32|0,0|g},function(t){return 0|At(e[60+(t|=0)>>2])},qi,function(t,r,s,n,A,l){t|=0,r=+r,s|=0,n|=0,A|=0,l|=0;var g,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0,sr=0;oe=g=oe-560|0,e[g+44>>2]=0,N(+r),m=0|M(1),M(0),(0|m)<0?(Ze=1,Rt=84997,N(+(r=-r)),m=0|M(1),M(0)):2048&A?(Ze=1,Rt=85e3):(Rt=(Ze=1&A)?85003:84998,sr=!Ze);e:if(2146435072&~m){mt=g+16|0;t:{s:{n:{if(r=dA(r,g+44|0),(r+=r)!=0){if(m=e[g+44>>2],e[g+44>>2]=m-1,(0|(xt=32|l))!=97)break n;break t}if((0|(xt=32|l))==97)break t;F=e[g+44>>2],U=(0|n)<0?6:n;break s}F=m-29|0,e[g+44>>2]=F,r*=268435456,U=(0|n)<0?6:n}for(w=Me=(g+48|0)+((0|F)>=0?288:0)|0;n=r<4294967296&r>=0?~~r>>>0:0,e[w>>2]=n,w=w+4|0,(r=1e9*(r-+(n>>>0)))!=0;);if((0|F)<=0)n=F,m=w,T=Me;else for(T=Me,n=F;;){if(Ae=(0|n)>=29?29:n,!(T>>>0>(m=w-4|0)>>>0)){for(n=0;x=e[m>>2],St=n,n=31&Ae,(63&Ae)>>>0>=32?(ee=x<<n,n=0):(ee=(1<<n)-1&x>>>32-n,n=x<<n),x=ee+Ce|0,n=ko(St=St+n|0,n>>>0>St>>>0?x+1|0:x,1e9),e[m>>2]=St-ds(n,H,1e9,0),T>>>0<=(m=m-4|0)>>>0;);n&&(e[(T=T-4|0)>>2]=n)}for(;T>>>0<(m=w)>>>0&&!e[(w=m-4|0)>>2];);if(n=e[g+44>>2]-Ae|0,e[g+44>>2]=n,w=m,!((0|n)>0))break}if((0|n)<0)for(ut=1+((U+25>>>0)/9|0)|0,Ce=(0|xt)==102;;){if(ee=(0|(n=0-n|0))>=9?9:n,m>>>0<=T>>>0)w=e[T>>2];else{for(Ae=1e9>>>ee|0,x=~(-1<<ee),n=0,w=T;St=n,n=e[w>>2],e[w>>2]=St+(n>>>ee|0),n=j(Ae,n&x),(w=w+4|0)>>>0<m>>>0;);w=e[T>>2],n&&(e[m>>2]=n,m=m+4|0)}if(n=ee+e[g+44>>2]|0,e[g+44>>2]=n,T=(!w<<2)+T|0,m=m-(w=Ce?Me:T)>>2>(0|ut)?w+(ut<<2)|0:m,!((0|n)<0))break}if(n=0,!(m>>>0<=T>>>0||(n=j(Me-T>>2,9),w=10,(x=e[T>>2])>>>0<10)))for(;n=n+1|0,x>>>0>=(w=j(w,10))>>>0;);if((0|(w=(U-((0|xt)!=102?n:0)|0)-((0|xt)==103&!!(0|U))|0))<(j(m-Me>>2,9)-9|0)){if(F=((((0|F)<0?4:292)+g|0)+((x=(0|(Ae=w+9216|0))/9|0)<<2)|0)-4048|0,w=10,(0|(ee=Ae-j(x,9)|0))<=7)for(;w=j(w,10),(0|(ee=ee+1|0))!=8;);if(!(!(Ce=(Ae=e[F>>2])-j(w,ut=(Ae>>>0)/(w>>>0)|0)|0)&(0|(x=F+4|0))==(0|m))&&(!(1&ut)&&(r=9007199254740992,!(1&f[F-4|0])|(0|w)!=1e9|T>>>0>=F>>>0)||(r=9007199254740994),We=(0|m)==(0|x)?1:1.5,We=(x=w>>>1|0)>>>0>Ce>>>0?.5:(0|x)==(0|Ce)?We:1.5,c[0|Rt]!=45|sr||(We=-We,r=-r),x=Ae-Ce|0,e[F>>2]=x,r+We!=r)){if(n=w+x|0,e[F>>2]=n,n>>>0>=1e9)for(;e[F>>2]=0,(F=F-4|0)>>>0<T>>>0&&(e[(T=T-4|0)>>2]=0),n=e[F>>2]+1|0,e[F>>2]=n,n>>>0>999999999;);if(n=j(Me-T>>2,9),w=10,!((x=e[T>>2])>>>0<10))for(;n=n+1|0,x>>>0>=(w=j(w,10))>>>0;);}m=m>>>0>(w=F+4|0)>>>0?w:m}for(;x=m,!(Ae=m>>>0<=T>>>0)&&!e[(m=x-4|0)>>2];);if((0|xt)==103){if(U=((m=(0|(w=U||1))>(0|n)&(0|n)>-5)?~n:-1)+w|0,l=(m?-1:-2)+l|0,!(F=8&A)){if(m=-9,!Ae&&(F=e[x-4>>2])&&(ee=10,m=0,!((F>>>0)%10|0))){for(;w=m,m=m+1|0,!((F>>>0)%((ee=j(ee,10))>>>0)|0););m=~w}w=j(x-Me>>2,9),(-33&l)!=70?(F=0,U=(0|(m=(0|(m=((n+w|0)+m|0)-9|0))>0?m:0))>(0|U)?U:m):(F=0,U=(0|(m=(0|(m=(m+w|0)-9|0))>0?m:0))>(0|U)?U:m)}}else F=8&A;if(ee=-1,(0|((Ae=F|U)?2147483645:2147483646))<(0|U))break e;if(Ce=1+(!!(0|Ae)+U|0)|0,(0|(w=-33&l))!=70){if((mt-(m=Yi(((m=n>>31)^n)-m|0,0,mt))|0)<=1)for(;f[0|(m=m-1|0)]=48,(mt-m|0)<2;);if(f[0|(ut=m-2|0)]=l,f[m-1|0]=(0|n)<0?45:43,(0|(m=mt-ut|0))>(2147483647^Ce))break e}else{if((2147483647^Ce)<(0|n))break e;m=(0|n)>0?n:0}if((0|(n=m+Ce|0))>(2147483647^Ze))break e;xn(t,32,s,Ce=n+Ze|0,A),sn(t,Rt,Ze),xn(t,48,s,Ce,65536^A);s:{n:{i:{if((0|w)==70){for(n=8|(l=g+16|0),F=9|l,T=w=T>>>0>Me>>>0?Me:T;;){m=Yi(e[T>>2],0,F);c:if((0|w)==(0|T))(0|m)==(0|F)&&(f[g+24|0]=48,m=n);else{if(g+16>>>0>=m>>>0)break c;for(;f[0|(m=m-1|0)]=48,g+16>>>0<m>>>0;);}if(sn(t,m,F-m|0),!(Me>>>0>=(T=T+4|0)>>>0))break}if(Ae&&sn(t,85998,1),(0|U)<=0|T>>>0>=x>>>0)break i;for(;;){if((m=Yi(e[T>>2],0,F))>>>0>g+16>>>0)for(;f[0|(m=m-1|0)]=48,g+16>>>0<m>>>0;);if(sn(t,m,(0|U)>=9?9:U),m=U-9|0,x>>>0<=(T=T+4|0)>>>0)break n;if(n=(0|U)>9,U=m,!n)break}break n}c:if(!((0|U)<0))for(Me=T>>>0<x>>>0?x:T+4|0,n=8|(l=g+16|0),x=9|l,w=T;;){(0|x)==(0|(m=Yi(e[w>>2],0,x)))&&(f[g+24|0]=48,m=n);A:if((0|w)==(0|T))sn(t,m,1),m=m+1|0,F|U&&sn(t,85998,1);else{if(g+16>>>0>=m>>>0)break A;for(;f[0|(m=m-1|0)]=48,g+16>>>0<m>>>0;);}if(sn(t,m,(0|(l=x-m|0))>(0|U)?U:l),U=U-l|0,Me>>>0<=(w=w+4|0)>>>0)break c;if(!((0|U)>=0))break}xn(t,48,U+18|0,18,0),sn(t,ut,mt-ut|0);break s}m=U}xn(t,48,m+9|0,9,0)}xn(t,32,s,Ce,8192^A),ee=(0|s)<(0|Ce)?Ce:s;break e}if(F=(l<<26>>31&9)+Rt|0,!(n>>>0>11)){for(m=12-n|0,We=16;We*=16,m=m-1|0;);r=c[0|F]!=45?r+We-We:-(We+(-r-We))}for((0|mt)==(0|(m=Yi(((m=e[g+44>>2])^(w=m>>31))-w|0,0,mt)))&&(f[g+15|0]=48,m=g+15|0),Me=2|Ze,T=32&l,w=e[g+44>>2],f[0|(U=m-2|0)]=l+15,f[m-1|0]=(0|w)<0?45:43,m=8&A,w=g+16|0;l=w,x=ge(r)<2147483648?~~r:-2147483648,f[0|w]=T|c[x+124512|0],!((0|n)>0|m)&(r=16*(r-+(0|x)))==0|((w=l+1|0)-(g+16|0)|0)!=1||(f[l+1|0]=46,w=l+2|0),r!=0;);ee=-1,(2147483645-(l=(m=mt-U|0)+Me|0)|0)<(0|n)||(xn(t,32,s,l=(n=!n||((T=w-(g+16|0)|0)-2|0)>=(0|n)?T=w-(g+16|0)|0:n+2|0)+l|0,A),sn(t,F,Me),xn(t,48,s,l,65536^A),sn(t,g+16|0,T),xn(t,48,n-T|0,0,0),sn(t,U,m),xn(t,32,s,l,8192^A),ee=(0|s)<(0|l)?l:s)}else xn(t,32,s,m=Ze+3|0,-65537&A),sn(t,Rt,Ze),n=32&l,sn(t,r!=r?n?85596:85774:n?85247:85460,3),xn(t,32,s,m,8192^A),ee=(0|s)<(0|m)?m:s;return oe=g+560|0,0|ee},function(t,r){var s;t|=0,s=r|=0,r=e[r>>2]+7&-8,e[s>>2]=r+16,D[t>>3]=zi(e[r>>2],e[r+4>>2],e[r+8>>2],e[r+12>>2])},function(t,r,s){r|=0,s|=0;var n,A,l=0,g=0;return n=e[84+(t|=0)>>2],g=e[n+4>>2],A=e[t+28>>2],(l=(l=e[t+20>>2]-A|0)>>>0>g>>>0?g:l)&&(Jr(e[n>>2],A,l),e[n>>2]=l+e[n>>2],g=e[n+4>>2]-l|0,e[n+4>>2]=g),l=e[n>>2],(g=s>>>0>g>>>0?g:s)&&(Jr(l,r,g),l=g+e[n>>2]|0,e[n>>2]=l,e[n+4>>2]=e[n+4>>2]-g),f[0|l]=0,r=e[t+44>>2],e[t+28>>2]=r,e[t+20>>2]=r,0|s},function(t,r,s){s|=0;var n,A,l=0;return Jr(r|=0,n=e[84+(t|=0)>>2],s=s>>>0>(l=(A=hi(n,0,l=s+256|0))?A-n|0:l)>>>0?l:s),r=n+l|0,e[t+84>>2]=r,e[t+8>>2]=r,e[t+4>>2]=s+n,0|s},function(t,r,s){r|=0,s|=0;var n,A=0,l=0,g=0;A=e[84+(t|=0)>>2],n=e[A>>2]?A:84412,A=0;e:if(e[t+48>>2])for(;;){if(!(l=e[(A<<2)+n>>2]))break e;if(f[e[t+44>>2]+A|0]=(0|l)>=128?64:l,!((A=A+1|0)>>>0<J[t+48>>2]))break}return l=e[t+44>>2],e[t+4>>2]=l,e[t+84>>2]=(A<<2)+n,e[t+8>>2]=A+l,!s|!A||(e[t+4>>2]=l+1,f[0|r]=c[0|l],g=1),0|g},SA,_o,pl,pl,function(t,r,s){s|=0;var n,A=0;return oe=n=oe+-64|0,A=1,wi(t|=0,r|=0,0)||(A=0,r&&(A=0,(r=fr(r,125132))&&(Yt(4|(A=n+8|0),0,52),e[n+56>>2]=1,e[n+20>>2]=-1,e[n+16>>2]=t,e[n+8>>2]=r,rs[e[e[r>>2]+28>>2]](r,A,e[s>>2],1),(0|(t=e[n+32>>2]))==1&&(e[s>>2]=e[n+24>>2]),A=(0|t)==1))),oe=n- -64|0,0|A},function(t,r,s,n,A,l){s|=0,n|=0,A|=0,l|=0,wi(t|=0,e[8+(r|=0)>>2],l)&&go(r,s,n,A)},function(t,r,s,n,A){if(s|=0,n|=0,A|=0,wi(t|=0,e[8+(r|=0)>>2],A))e[r+28>>2]==1|e[r+4>>2]!=(0|s)||(e[r+28>>2]=n);else e:if(wi(t,e[r>>2],A)){if(!(e[r+16>>2]!=(0|s)&e[r+20>>2]!=(0|s))){if((0|n)!=1)break e;return void(e[r+32>>2]=1)}e[r+20>>2]=s,e[r+32>>2]=n,e[r+40>>2]=e[r+40>>2]+1,e[r+36>>2]!=1|e[r+24>>2]!=2||(f[r+54|0]=1),e[r+44>>2]=4}},function(t,r,s,n){s|=0,n|=0,wi(t|=0,e[8+(r|=0)>>2],0)&&gr(r,s,n)},_o,function(t,r,s,n,A,l){s|=0,n|=0,A|=0,l|=0,wi(t|=0,e[8+(r|=0)>>2],l)?go(r,s,n,A):(t=e[t+8>>2],rs[e[e[t>>2]+20>>2]](t,r,s,n,A,l))},function(t,r,s,n,A){if(s|=0,n|=0,A|=0,wi(t|=0,e[8+(r|=0)>>2],A))e[r+28>>2]==1|e[r+4>>2]!=(0|s)||(e[r+28>>2]=n);else e:{if(wi(t,e[r>>2],A)){if(!(e[r+16>>2]!=(0|s)&e[r+20>>2]!=(0|s))){if((0|n)!=1)break e;return void(e[r+32>>2]=1)}e[r+32>>2]=n;t:if(e[r+44>>2]!=4){if(I[r+52>>1]=0,t=e[t+8>>2],rs[e[e[t>>2]+20>>2]](t,r,s,s,1,A),c[r+53|0]){if(e[r+44>>2]=3,!c[r+52|0])break t;break e}e[r+44>>2]=4}if(e[r+20>>2]=s,e[r+40>>2]=e[r+40>>2]+1,e[r+36>>2]!=1|e[r+24>>2]!=2)break e;return void(f[r+54|0]=1)}t=e[t+8>>2],rs[e[e[t>>2]+24>>2]](t,r,s,n,A)}},function(t,r,s,n){s|=0,n|=0,wi(t|=0,e[8+(r|=0)>>2],0)?gr(r,s,n):(t=e[t+8>>2],rs[e[e[t>>2]+28>>2]](t,r,s,n))},_o,function(t){return 84787},_o,function(t){return 85058},_o,function(t){return 84147},function(t){var r;return r=t|=0,t=e[t>>2],e[r>>2]=t+1,0|((0|(t=f[0|t]))<0?65533:255&t)},function(t,r,s,n,A,l){t|=0,r|=0,s|=0,n|=0,A|=0,l|=0;var g,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0;if(g=Wn(408),e[g+4>>2]=n,e[g>>2]=s,r?(Jr(g+16|0,r,376),D[g+392>>3]=(D[r+368>>3]-D[r>>3])/+(s>>>0),r=0):r=1,e[g+400>>2]=A,f[g+8|0]=r,l){if(s=e[t+24>>2])for(r=e[t+20>>2],n=e[t+8>>2];(A=e[e[(r>>>8&16777212)+n>>2]+((1023&r)<<2)>>2])&&(Zt(A),s=e[t+24>>2],n=e[t+8>>2],r=e[t+20>>2]),r=r+1|0,e[t+20>>2]=r,s=s-1|0,e[t+24>>2]=s,r>>>0>=2048&&(Zt(e[n>>2]),n=e[t+8>>2]+4|0,e[t+8>>2]=n,r=e[t+20>>2]-1024|0,e[t+20>>2]=r,s=e[t+24>>2]),s;);r=e[t+28>>2],e[t+420>>2]=e[r>>2],(s=e[t+32>>2])&&(f[r+8|0]=c[s+8|0],Jr(r+16|0,t+40|0,376),(r=e[t+32>>2])&&Zt(r),e[t+32>>2]=0)}if(s=(n=e[t+24>>2])+e[t+20>>2]|0,A=e[t+12>>2],(0|s)==(0|((0|(r=e[t+8>>2]))!=(0|A)?(A-r<<8)-1:0))){oe=m=oe-32|0;e:{t:{s:{n:{if((r=e[16+(l=t+4|0)>>2])>>>0>=1024){if(e[l+16>>2]=r-1024,r=e[l+4>>2],U=e[r>>2],A=r+4|0,e[l+4>>2]=A,(0|(r=e[l+8>>2]))==e[l+12>>2])if((w=e[l>>2])>>>0<A>>>0)s=kt((n=(1+(A-w>>2)|0)/-2<<2)+A|0,A,r=r-A|0)+r|0,e[l+8>>2]=s,e[l+4>>2]=n+e[l+4>>2];else{if((s=(0|r)==(0|w)?1:r-w>>1)>>>0>=1073741824)break n;if(ee=(n=s<<2)+(T=Wn(n))|0,s=n=T+(-4&s)|0,(0|r)!=(0|A)){if(Ae=-4&(r=r-A|0),F=1+((x=r-4|0)>>>2|0)&7)for(s=0,r=n;e[r>>2]=e[A>>2],A=A+4|0,r=r+4|0,(0|F)!=(0|(s=s+1|0)););else r=n;if(s=n+Ae|0,!(x>>>0<28))for(;e[r>>2]=e[A>>2],e[r+4>>2]=e[A+4>>2],e[r+8>>2]=e[A+8>>2],e[r+12>>2]=e[A+12>>2],e[r+16>>2]=e[A+16>>2],e[r+20>>2]=e[A+20>>2],e[r+24>>2]=e[A+24>>2],e[r+28>>2]=e[A+28>>2],A=A+32|0,(0|s)!=(0|(r=r+32|0)););}e[l+12>>2]=ee,e[l+8>>2]=s,e[l+4>>2]=n,e[l>>2]=T,w&&(Zt(w),s=e[l+8>>2])}else s=r;e[s>>2]=U,e[l+8>>2]=e[l+8>>2]+4;break e}if((w=(A=e[l+8>>2])-e[l+4>>2]>>2)>>>0<(n=(r=e[l+12>>2])-(s=e[l>>2])|0)>>2>>>0){if((0|r)!=(0|A)){e[m+8>>2]=Wn(4096),Tt(l,m+8|0);break e}if(e[m+8>>2]=Wn(4096),ot(l,m+8|0),r=e[l+4>>2],U=e[r>>2],A=r+4|0,e[l+4>>2]=A,(0|(r=e[l+8>>2]))==e[l+12>>2])if((w=e[l>>2])>>>0<A>>>0)s=kt((n=(1+(A-w>>2)|0)/-2<<2)+A|0,A,r=r-A|0)+r|0,e[l+8>>2]=s,e[l+4>>2]=n+e[l+4>>2];else{if((s=(0|r)==(0|w)?1:r-w>>1)>>>0>=1073741824)break n;if(ee=(n=s<<2)+(T=Wn(n))|0,s=n=T+(-4&s)|0,(0|r)!=(0|A)){if(Ae=-4&(r=r-A|0),F=1+((x=r-4|0)>>>2|0)&7)for(s=0,r=n;e[r>>2]=e[A>>2],A=A+4|0,r=r+4|0,(0|F)!=(0|(s=s+1|0)););else r=n;if(s=n+Ae|0,!(x>>>0<28))for(;e[r>>2]=e[A>>2],e[r+4>>2]=e[A+4>>2],e[r+8>>2]=e[A+8>>2],e[r+12>>2]=e[A+12>>2],e[r+16>>2]=e[A+16>>2],e[r+20>>2]=e[A+20>>2],e[r+24>>2]=e[A+24>>2],e[r+28>>2]=e[A+28>>2],A=A+32|0,(0|s)!=(0|(r=r+32|0)););}e[l+12>>2]=ee,e[l+8>>2]=s,e[l+4>>2]=n,e[l>>2]=T,w&&(Zt(w),s=e[l+8>>2])}else s=r;e[s>>2]=U,e[l+8>>2]=e[l+8>>2]+4;break e}if(e[m+24>>2]=l+12,!((r=(0|r)==(0|s)?1:n>>1)>>>0>=1073741824)){if(r=Wn(s=r<<2),e[m+8>>2]=r,n=r+(w<<2)|0,e[m+16>>2]=n,e[m+20>>2]=r+s,e[m+12>>2]=n,e[m+4>>2]=Wn(4096),Tt(m+8|0,m+4|0),(0|(A=e[l+8>>2]))==e[l+4>>2]){r=A;break t}for(;ot(m+8|0,A=A-4|0),e[l+4>>2]!=(0|A););break s}}$o(),V()}r=e[l+8>>2]}s=e[l>>2],e[l>>2]=e[m+8>>2],e[m+8>>2]=s,e[l+4>>2]=e[m+12>>2],e[m+12>>2]=A,e[l+8>>2]=e[m+16>>2],e[m+16>>2]=r,n=e[l+12>>2],e[l+12>>2]=e[m+20>>2],e[m+20>>2]=n,(0|r)!=(0|A)&&(e[m+16>>2]=r+(3+(A-r|0)&-4)),s&&Zt(s)}oe=m+32|0,s=(n=e[t+24>>2])+e[t+20>>2]|0,r=e[t+8>>2]}e[e[r+(s>>>8&16777212)>>2]+((1023&s)<<2)>>2]=g,e[t+24>>2]=n+1},function(t){var r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0;s=e[420+(t|=0)>>2]+1|0,e[t+420>>2]=s;e:{if(r=e[t+32>>2]){if(s>>>0>(m=e[r+4>>2])>>>0){(s=e[t+28>>2])&&(Zt(s),r=e[t+32>>2]),e[t+32>>2]=0,e[t+28>>2]=r;break e}for(l=t+40|0,g=r+16|0,w=e[t+28>>2]+16|0,T=+(s>>>0)/+(m>>>0),r=0;;){if(n=D[(s=r<<3)+g>>3],A=D[s+w>>3],D[s+l>>3]=n==n?(n-A)*T+A:A,(0|(s=1|r))==47)break e;n=D[(s<<=3)+g>>3],A=D[s+w>>3],D[s+l>>3]=n==n?(n-A)*T+A:A,r=r+2|0}}if(r=e[t+28>>2],s>>>0>J[r>>2]){if(l=e[t+24>>2]){if(f[t+416|0]=0,g=e[t+8>>2],s=e[t+20>>2],r=e[e[g+(s>>>8&16777212)>>2]+((1023&s)<<2)>>2],e[t+32>>2]=r,e[t+24>>2]=l-1,s=s+1|0,e[t+20>>2]=s,s>>>0>=2048&&(Zt(e[g>>2]),e[t+8>>2]=e[t+8>>2]+4,e[t+20>>2]=e[t+20>>2]-1024,r=e[t+32>>2]),c[r+8|0])Jr(r+16|0,e[t+28>>2]+16|0,376),r=e[t+32>>2],e[r+368>>2]=0,e[r+372>>2]=0,n=D[t+40>>3],e[r+392>>2]=0,e[r+396>>2]=0,D[r+16>>3]=n;else if(s=e[t+28>>2],c[s+8|0]&&(Jr(s+16|0,r+16|0,376),r=e[t+28>>2],e[r+368>>2]=0,e[r+372>>2]=0,!(r=e[t+32>>2])))break e;(0|(s=e[r+400>>2]))!=-1&&(e[t+424>>2]=s),e[t+420>>2]=0,D[r+16>>3]=D[r+392>>3]*+J[r+4>>2]+D[r+16>>3];break e}f[t+416|0]=1}else n=D[r+392>>3]+D[t+40>>3],D[t+40>>3]=n,D[r+16>>3]=n}return 0|(c[t+416|0]?0:t+40)},function(t){return e[424+(t|=0)>>2]},function(t){var r=0;return e[(t|=0)>>2]=132304,(r=e[t+28>>2])&&Zt(r),(r=e[t+32>>2])&&Zt(r),Al(t+4|0),0|t},function(t){var r=0;e[(t|=0)>>2]=132304,(r=e[t+28>>2])&&Zt(r),(r=e[t+32>>2])&&Zt(r),Al(t+4|0),Zt(t)},function(t,r,s){r|=0,s|=0;var n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0;if(!e[1088+(t|=0)>>2])return 0;e:if(r){for(T=t+648|0,w=t- -64|0;;){if(n=e[t+1088>>2],!(n=0|rs[e[e[n>>2]+4>>2]](n)))break e;if(A=Bi(D[t+32>>3]+D[n+16>>3]/+e[t+24>>2]),D[t+32>>3]=A,A=Eo(6.283185307179586*A),A=Bi(D[t+16>>3]+D[n>>3]*(.06*A*D[n+8>>3]+1)/+e[t+8>>2]),D[t+16>>3]=A,m=ds(e[56848],e[56849],1284865837,1481765933),l=H,l=(m=m+1|0)?l:l+1|0,e[56848]=m,e[56849]=l,g=.75*D[t+40>>3]+ +(l>>>1|0)/2147483647,D[t+40>>3]=g,x=D[n+24>>3],l=A>=D[n+32>>3],f[t+48|0]=l,g=(U=x)*(x=.2*g),g=fa(w+512|0,fa(w+440|0,A=D[n+352>>3]*(x*D[n+48>>3]+D[n+40>>3]*(A+A+-1+(l?g:.01*g)))*.5,D[n+104>>3],D[n+168>>3]),D[n+112>>3],D[n+176>>3]),g=fa(w+8|0,fa(w+80|0,fa(w+152|0,fa(w+224|0,fa(w+296|0,fa(w+368|0,g==g?(g-A)*D[n+184>>3]+A:A,D[n+96>>3],D[n+160>>3]),D[n+88>>3],D[n+152>>3]),D[n+80>>3],D[n+144>>3]),D[n+72>>3],D[n+136>>3]),D[n+64>>3],D[n+128>>3]),D[n+56>>3],D[n+120>>3]),m=ds(e[56848],e[56849],1284865837,1481765933),l=H,l=(m=m+1|0)?l:l+1|0,e[56848]=m,e[56849]=l,A=.75*D[t+56>>3]+ +(l>>>1|0)/2147483647,D[t+56>>3]=A,l=(F<<1)+s|0,x=fa(T+8|0,A=D[n+352>>3]*(D[n+192>>3]*(.3*A))*.5,D[n+200>>3],D[n+248>>3]),ee=D[n+296>>3],Ae=fa(T+80|0,A,D[n+208>>3],D[n+256>>3]),Ce=D[n+304>>3],Me=fa(T+152|0,A,D[n+216>>3],D[n+264>>3]),We=D[n+312>>3],Ze=fa(T+224|0,A,D[n+224>>3],D[n+272>>3]),ut=D[n+320>>3],mt=fa(T+296|0,A,D[n+232>>3],D[n+280>>3]),xt=D[n+328>>3],U=g,g=(fa(T+368|0,A,D[n+240>>3],D[n+288>>3])-A)*D[n+336>>3]+(xt*(mt-A)+(ut*(Ze-A)+(We*(Me-A)+(Ce*(Ae-A)+(ee*(x-A)+0))))),A=(U+(A==A?(A-g)*D[n+344>>3]+g:g))*D[n+360>>3]*4e3,n=(0|(n=ge(A)<2147483648?~~A:-2147483648))>=32e3?32e3:n,I[l>>1]=(0|n)<=-32e3?-32e3:n,(0|(F=F+1|0))==(0|r))break}F=r}return 0|(r>>>0>F>>>0?F:r)},function(t,r){r|=0,e[1088+(t|=0)>>2]=r},SA,_o,GA,function(t,r,s,n){return H=0,0}],Oo.grow=function(t){var r=this.length;return this.length=this.length+t,r},Oo.set=function(t,r){this[t]=r},Oo.get=function(t){return this[t]},Oo);return{v:function(){var t,r=0;oe=t=oe-16|0,0|wt(t+12|0,t+8|0)||(r=wr(4+(e[t+12>>2]<<2)|0),e[56800]=r,r&&(!(r=wr(e[t+8>>2]))||(e[e[56800]+(e[t+12>>2]<<2)>>2]=0,0|ht(e[56800],0|r)))&&(e[56800]=0)),oe=t+16|0,e[56841]=227236,e[56823]=42},w:zo,x:DA,y:function(t,r){r|=0,e[(t|=0)>>2]=r},z:function(t,r){return r|=0,f[e[4+(t|=0)>>2]+r|0]},A:En,B:BA,C:function(t){return c[12+(t|=0)|0]},D:function(t,r){r|=0,f[12+(t|=0)|0]=r},E:function(t){return c[13+(t|=0)|0]},F:function(t,r){r|=0,f[13+(t|=0)|0]=r},G:function(t){return c[14+(t|=0)|0]},H:function(t,r){r|=0,f[14+(t|=0)|0]=r},I:function(t){return c[15+(t|=0)|0]},J:function(t,r){r|=0,f[15+(t|=0)|0]=r},K:Ji,L:function(t,r){r|=0,e[16+(t|=0)>>2]=r},M:TA,N:function(t,r){r|=0,e[20+(t|=0)>>2]=r},O:zo,P:DA,Q:PA,R:En,S:Zi,T:Ji,U:TA,V:function(t){return e[24+(t|=0)>>2]},W:zo,X:function(){var t,r=0,s=0,n=0,A=0,l=0,g=0,m=0,w=0,T=0,x=0,F=0,U=0,ee=0,Ae=0,Ce=0,Me=0,We=0,Ze=0,ut=0,mt=0,xt=0,St=0,Rt=0;if(t=Wn(20),e[t+16>>2]=0,e[t+8>>2]=175,e[t+12>>2]=50,!(r=e[33208])){oe=r=(oe=ut=oe-16|0)-80|0;e:{if((s=no(84292))&&(e[r+32>>2]=s,ji(137584,160,85959,r+32|0),(0|bi(137584))==-31||(e[r+16>>2]=s,ji(137584,160,86031,r+16|0),(0|bi(137584))==-31)))break e;(s=no(84619))&&(e[r>>2]=s,ji(137584,160,85959,r),(0|bi(137584))==-31)||(s=c[84826]|c[84827]<<8|c[84828]<<16|c[84829]<<24,e[34396]=c[84822]|c[84823]<<8|c[84824]<<16|c[84825]<<24,e[34397]=s,I[68804]=c[84846]|c[84847]<<8,s=c[84842]|c[84843]<<8|c[84844]<<16|c[84845]<<24,e[34400]=c[84838]|c[84839]<<8|c[84840]<<16|c[84841]<<24,e[34401]=s,s=c[84834]|c[84835]<<8|c[84836]<<16|c[84837]<<24,e[34398]=c[84830]|c[84831]<<8|c[84832]<<16|c[84833]<<24,e[34399]=s)}if(oe=r+80|0,e[ut+12>>2]=0,A=ut+12|0,oe=m=oe-16|0,e[m+12>>2]=22050,qe(85144)||qe(85315)||qe(85473)||qe(85698),F=m+12|0,oe=l=oe-16|0,e[l+12>>2]=0,!((r=za(137832,84262,0,A))||(r=za(137836,84420,0,A))||(r=za(137840,84813,0,A))||(r=za(137820,85016,l+12|0,A))))if(e[34454]=J[l+12>>2]/68,s=e[34460],e[34456]=s,s&&(0|(T=c[0|s]|c[s+1|0]<<8|c[s+2|0]<<16|c[s+3|0]<<24))==83969){if(U=c[s+4|0]|c[s+5|0]<<8|c[s+6|0]<<16|c[s+7|0]<<24,s=e[34458],Ae=c[0|s],e[34461]=Ae,Ae)for(r=s+4|0,T=0;n=j(T,44)+137856|0,A=c[0|r],e[n+36>>2]=A,e[n+40>>2]=c[r+1|0],g=c[r+8|0]|c[r+9|0]<<8|c[r+10|0]<<16|c[r+11|0]<<24,s=c[r+4|0]|c[r+5|0]<<8|c[r+6|0]<<16|c[r+7|0]<<24,f[0|n]=s,f[n+1|0]=s>>>8,f[n+2|0]=s>>>16,f[n+3|0]=s>>>24,f[n+4|0]=g,f[n+5|0]=g>>>8,f[n+6|0]=g>>>16,f[n+7|0]=g>>>24,g=c[r+16|0]|c[r+17|0]<<8|c[r+18|0]<<16|c[r+19|0]<<24,s=c[r+12|0]|c[r+13|0]<<8|c[r+14|0]<<16|c[r+15|0]<<24,f[n+8|0]=s,f[n+9|0]=s>>>8,f[n+10|0]=s>>>16,f[n+11|0]=s>>>24,f[n+12|0]=g,f[n+13|0]=g>>>8,f[n+14|0]=g>>>16,f[n+15|0]=g>>>24,g=c[r+24|0]|c[r+25|0]<<8|c[r+26|0]<<16|c[r+27|0]<<24,s=c[r+20|0]|c[r+21|0]<<8|c[r+22|0]<<16|c[r+23|0]<<24,f[n+16|0]=s,f[n+17|0]=s>>>8,f[n+18|0]=s>>>16,f[n+19|0]=s>>>24,f[n+20|0]=g,f[n+21|0]=g>>>8,f[n+22|0]=g>>>16,f[n+23|0]=g>>>24,g=c[r+32|0]|c[r+33|0]<<8|c[r+34|0]<<16|c[r+35|0]<<24,s=c[r+28|0]|c[r+29|0]<<8|c[r+30|0]<<16|c[r+31|0]<<24,f[n+24|0]=s,f[n+25|0]=s>>>8,f[n+26|0]=s>>>16,f[n+27|0]=s>>>24,f[n+28|0]=g,f[n+29|0]=g>>>8,f[n+30|0]=g>>>16,f[n+31|0]=g>>>24,s=r+36|0,e[n+32>>2]=s,r=s+(A<<4)|0,(0|Ae)!=(0|(T=T+1|0)););(0|Ae)<=e[34457]&&(e[34457]=0),r=0,F&&(e[F>>2]=U)}else e:{t:{if(A){if(s=e[A>>2]){Zt(e[s+4>>2]),r=e[A>>2];break t}if(r=wr(16),e[A>>2]=r,r)break t;r=48}else r=268436223;break e}e[r>>2]=1,e[r+4>>2]=Go(137584),s=e[A>>2],e[s+12>>2]=83969,e[s+8>>2]=T,r=268436223}if(oe=l+16|0,s=r,!r){if(F=e[m+12>>2],e[50754]=F,e[50759]=0,e[50760]=134217728/(0|F),e[50762]=0,e[50763]=0,e[50765]=2147483647,e[50781]=100,e[50779]=32,e[50761]=(F<<6)/(0|F),r=e[26385],e[50784]=e[26384],e[50785]=r,r=e[26387],e[50786]=e[26386],e[50787]=r,r=e[26389],e[50788]=e[26388],e[50789]=r,r=e[26391],e[50790]=e[26390],e[50791]=r,r=e[26393],e[50792]=e[26392],e[50793]=r,r=e[26395],e[50794]=e[26394],e[50795]=r,r=e[26397],e[50796]=e[26396],e[50797]=r,e[50798]=e[26398],U=(0|(r=(0|(A=j(F,60)))/12800|0))>=128?128:r,e[50799]=U,e[50800]=(0|U)/2,!((0|F)==22050|(0|A)<12800)){if(F=1&(r=(0|U)<=1?1:U),We=+(0|U),T=0,(0|U)>=2)for(U=2147483646&r,r=0;Ce=T+132160|0,w=127*(1-$n(6.283185307179586*+(0|T)/We)),ee=ge(w)<2147483648?~~w:-2147483648,f[0|Ce]=ee,Ce=132160+(A=1|T)|0,w=127*(1-$n(6.283185307179586*+(0|A)/We)),ee=ge(w)<2147483648?~~w:-2147483648,f[0|Ce]=ee,T=T+2|0,(0|U)!=(0|(r=r+2|0)););F&&(r=T+132160|0,w=127*(1-$n(6.283185307179586*+(0|T)/We)),Ce=ge(w)<2147483648?~~w:-2147483648,f[0|r]=Ce)}if(e[50801]=105792,e[56797]=ai(),e[55964]=38,e[55921]=1,e[55918]=22050,e[56606]=0,e[55960]=110928,e[55958]=0,e[55959]=1074266112,e[55956]=100,e[55922]=20,e[55923]=220,e[55916]=1,e[55917]=0,qo(),e[56244]=0,e[56245]=0,e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,We=-3.141592653589793/+(0|(r=e[55918])),D[27967]=We,A=(0|j(r,630))/1e4|0,e[55920]=A,r=(0|j(r,950))/1e4|0,e[55919]=r,w=-2*We,D[27968]=w,We=(St=Cs(We*+(0|A)))*-St,D[28129]=We,w=St*$n(w*+(0|r)),w+=w,D[28128]=w,D[28127]=1-w-We,e[55990]=0,e[55991]=0,e[55988]=0,e[55989]=0,e[56006]=0,e[56007]=0,e[56004]=0,e[56005]=0,e[56022]=0,e[56023]=0,e[56020]=0,e[56021]=0,e[56038]=0,e[56039]=0,e[56036]=0,e[56037]=0,e[56054]=0,e[56055]=0,e[56052]=0,e[56053]=0,e[56070]=0,e[56071]=0,e[56068]=0,e[56069]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0,e[56639]=59,e[56640]=59,e[56629]=0,e[56630]=59,e[56619]=89,e[56620]=160,e[56609]=280,e[56610]=688,e[56611]=1064,e[56621]=70,e[56631]=59,e[56612]=2806,e[56613]=3260,e[56622]=160,e[56623]=200,e[56632]=59,e[56633]=59,e[56641]=89,e[56642]=149,e[56643]=200,e[56644]=200,e[56634]=59,e[56635]=59,e[56624]=200,e[56625]=500,e[56614]=3700,e[56615]=6500,e[56645]=500,e[56646]=0,e[56616]=7e3,e[56626]=500,e[56636]=0,e[56647]=0,e[56637]=0,e[56627]=500,e[56617]=8e3,e[56669]=89,e[56648]=0,e[56638]=0,e[56628]=89,e[56618]=280,e[56657]=62,e[56655]=0,e[56656]=0,e[56653]=50,e[56654]=0,e[56651]=0,e[56652]=0,e[56649]=0,e[56650]=40,e[56607]=1e3,e[56608]=59,oe=l=oe-416|0,e[l+16>>2]=137584,e[l+20>>2]=47,e[l+24>>2]=85952,mr(r=l+240|0,85699,l+16|0),g=bn(r,86034)){if(Wr(l+240|0,170,g))for(F=5|(r=l+240|0),U=10|r;c[l+240|0]!=47&&(e[l+240>>2]!=1701736308?Vn(l+240|0,86614,9)||(e[l+4>>2]=l+32,e[l>>2]=l+239,(0|Jt(U,86829,l))==2&&(A=e[34064],e[(Ae=136272+(A<<4)|0)>>2]=f[l+239|0],r=Go(l+32|0),e[34064]=A+1,e[Ae+12>>2]=r,e[Ae+4>>2]=0)):(oe=r=oe-48|0,e[32960]=-1,e[32961]=-1,e[32970]=-1,e[32971]=-1,e[32968]=-1,e[32969]=-1,e[32966]=-1,e[32967]=-1,e[32964]=-1,e[32965]=-1,e[32962]=-1,e[32963]=-1,e[r+36>>2]=131876,e[r+32>>2]=131872,e[r+28>>2]=131868,e[r+24>>2]=131864,e[r+20>>2]=131860,e[r+16>>2]=131856,e[r+12>>2]=131852,e[r+8>>2]=131848,e[r+4>>2]=131844,e[r>>2]=131840,Jt(F,84222,r),oe=r+48|0)),Wr(l+240|0,170,g););fn(g)}oe=l+416|0,e[50297]=0,e[50298]=0,e[50301]=0,e[50302]=0,e[50299]=0,e[50300]=0,Ro(0,85698),e[36425]=0,e[36424]=0,e[36426]=0,e[36427]=-1,Ii(),ks(0),n=e[25690],e[34062]=n,x=e[25689],l=e[25688],e[34060]=l,e[34061]=x,Me=e[25687],g=e[25686],e[34058]=g,e[34059]=Me,Ze=e[25685],Ae=e[25684],e[34056]=Ae,e[34057]=Ze,mt=e[25683],F=e[25682],e[34054]=F,e[34055]=mt,xt=e[25681],U=e[25680],e[34052]=U,e[34053]=xt,ee=e[25679],A=e[25678],e[34050]=A,e[34051]=ee,Ce=e[25677],r=e[25676],e[34048]=r,e[34049]=Ce,e[33729]=r,e[33730]=Ce,e[33731]=A,e[33732]=ee,e[33733]=U,e[33734]=xt,e[33735]=F,e[33736]=mt,e[33737]=Ae,e[33738]=Ze,e[33739]=g,e[33740]=Me,e[33741]=l,e[33742]=x,e[33743]=n,Ls(1,175),Ls(2,100),Ls(6,e[47200]),Ls(5,e[47201]),Ls(7,0),e[47198]=0,e[47197]=0,w=+ie()/1e3,A=ds(r=ge(w)<9223372036854776e3?~~w>>>0:0,0,1103515245,0),r=H,r=(A=A+12345|0)>>>0<12345?r+1|0:r,e[33209]=EA(A,r)}if(oe=m+16|0,s){Ce=e[30450],mt=e[ut+12>>2],m=48+(x=oe-560|0)|0,oe=n=(oe=x)-16|0;e:{switch(0|Cn(s-268435967|0,24)){case 0:ua(m,84133,512);break e;case 1:ua(m,84580,512);break e;case 2:ua(m,84747,512);break e;case 3:ua(m,85084,512);break e;case 4:ua(m,85251,512);break e;case 5:ua(m,85380,512);break e;case 6:ua(m,85607,512);break e;case 7:ua(m,85722,512);break e;case 8:ua(m,85913,512);break e;case 9:ua(m,86046,512);break e;case 10:ua(m,86153,512);break e;case 11:ua(m,86678,512);break e;case 12:ua(m,86773,512);break e;case 14:ua(m,86958,512);break e;case 15:ua(m,87071,512);break e}if(1879048192&s)e[n>>2]=s,ji(m,512,87182,n);else{if(T=0,l=P[123728+((s>>>0<=153?s:0)<<1)>>1]+121804|0,s=e[e[56841]+20>>2]){xt=e[s+4>>2],Me=e[s>>2],Ze=e[Me>>2]+1794895138|0,ee=Ki(e[Me+8>>2],Ze),A=Ki(e[Me+12>>2],Ze),r=Ki(e[Me+16>>2],Ze);t:if(!(xt>>>2>>>0<=ee>>>0||3&(r|A)|(s=xt-(ee<<2)|0)>>>0<=A>>>0|r>>>0>=s>>>0))for(F=r>>>2|0,U=A>>>2|0;;){if(Ae=Ki(e[(s=((r=(A=(g=ee>>>1|0)+Rt|0)<<1)+U<<2)+Me|0)>>2],Ze),(s=Ki(e[s+4>>2],Ze))>>>0>=xt>>>0|Ae>>>0>=xt-s>>>0|c[(s+Ae|0)+Me|0])break t;if(!(s=Pa(l,s+Me|0))){if(r=Ki(e[(s=(r+F<<2)+Me|0)>>2],Ze),(s=Ki(e[s+4>>2],Ze))>>>0>=xt>>>0|r>>>0>=xt-s>>>0)break t;T=c[(r+s|0)+Me|0]?0:s+Me|0;break t}if((0|ee)==1)break t;ee=(s=(0|s)<0)?g:ee-g|0,Rt=s?Rt:A}}if((s=_r(r=T||l))>>>0>=512){Jr(m,r,511),f[m+511|0]=0;break e}Jr(m,r,s+1|0)}}oe=n+16|0;e:if(mt){t:switch(e[mt>>2]){case 0:e[x+16>>2]=e[mt+4>>2],e[x+20>>2]=x+48,wa(Ce,87384,x+16|0);break e;case 1:break t;default:break e}r=e[mt+12>>2],s=e[mt+8>>2],e[x+36>>2]=e[mt+4>>2],H=s,e[x+40>>2]=r,e[x+44>>2]=H,e[x+32>>2]=x+48,wa(Ce,87521,x+32|0)}else e[x>>2]=x+48,wa(Ce,87700,x);oe=x+560|0,(0|ut)!=-12&&(s=e[ut+12>>2])&&(Zt(e[s+4>>2]),Zt(e[ut+12>>2]),e[ut+12>>2]=0)}s=e[24806],e[34389]=0,e[32538]=s,s=(1e3+((s=j(e[50754],100))-((0|s)%1e3|0)|0)|0)/500|0,e[34390]=s,s=Fa(e[34391],s),e[34392]=s,s&&(e[34391]=s,e[34393]=40,(s=Fa(e[34388],1440))&&(e[34388]=s)),e[47198]=0,oe=ut+16|0,r=e[50754],e[33208]=r}return e[t+4>>2]=r,e[t>>2]=Ar(),0|t},Y:function(t,r,s){t|=0,r|=0,s|=0,e[34440]=s,mA(3,e[t+12>>2]),mA(1,e[t+8>>2]),(t=e[t+16>>2])?ni(t):Bo(1024),$e(r),e[34440]=0},Z:function(t,r,s){return t|=0,r|=0,s|=0,e[34440]=0,(t=bn(s,1032))?(e[47195]=t,e[47197]=130,t||(e[47195]=e[30450]),$e(r),e[47195]=0,e[47197]=0,e[47195]=e[30450],fn(t),0):-1},_:function(t){return 36},$:function(t,r,s){var n;return t|=0,r|=0,oe=n=oe-32|0,(s|=0)?(e[n+24>>2]=0,e[n+28>>2]=0,e[n+16>>2]=0,e[n+20>>2]=0,e[n+12>>2]=s,e[n+8>>2]=r,f[n+21|0]=0,r=ni(n+8|0)):r=Bo(r),e[t+16>>2]=201188,oe=n+32|0,0|r},aa:function(t,r,s,n){var A;return t|=0,r|=0,oe=A=oe-32|0,(s|=0)|(n|=0)?(e[A+24>>2]=0,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A+12>>2]=s,e[A+8>>2]=r,f[A+22|0]=0,f[A+20|0]=n,r=ni(A+8|0)):r=Bo(r),e[t+16>>2]=201188,oe=A+32|0,0|r},ba:function(t,r,s,n,A){var l;return t|=0,r|=0,oe=l=oe-32|0,(n|=0)|(A|=0)|(s|=0)?(e[l+24>>2]=0,e[l+28>>2]=0,e[l+16>>2]=0,e[l+20>>2]=0,e[l+12>>2]=s,e[l+8>>2]=r,f[l+21|0]=A,f[l+20|0]=n,r=ni(l+8|0)):r=Bo(r),e[t+16>>2]=201188,oe=l+32|0,0|r},ca:function(t,r,s,n,A,l){var g;return t|=0,r|=0,oe=g=oe-32|0,(n|=0)|(A|=0)|(l|=0)|(s|=0)?(e[g+24>>2]=0,e[g+28>>2]=0,e[g+16>>2]=0,e[g+20>>2]=0,e[g+12>>2]=s,e[g+8>>2]=r,f[g+22|0]=l,f[g+21|0]=A,f[g+20|0]=n,r=ni(g+8|0)):r=Bo(r),e[t+16>>2]=201188,oe=g+32|0,0|r},da:function(t,r){return r|=0,e[e[(t|=0)>>2]+(r<<2)>>2]},ea:function(t,r,s){r|=0,s|=0,e[e[(t|=0)>>2]+(r<<2)>>2]=s},fa:PA,ga:En,ha:BA,ia:Zi,ja:function(t,r){r|=0,e[12+(t|=0)>>2]=r},ka:zo,la:function(){return 0},ma:function(){return 1},na:function(){return 2},oa:function(){return 3},pa:function(){return 4},qa:function(){return 5},ra:function(){return 6},sa:function(){return 7},ta:function(){return 8},ua:rs,va:function(){return 227192},wa:Zt,xa:wr,ya:function(t){return(t|=0)?0|!!(0|fr(t,125228)):0}}}(a)}(o)},instantiate:function(i,o){return{then:function(a){var u=new yf.Module(i);a({instance:new yf.Instance(u,o)})}}},RuntimeError:Error};typeof yf!="object"&&x0("no native wasm support detected");var O1=!1;function ug(i,o){i||x0(o)}var No,kf,g2,Ra,Si,Q1,N1,L1=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function _f(i,o,a){for(var u=o+a,p=o;i[p]&&!(p>=u);)++p;if(p-o>16&&i.buffer&&L1)return L1.decode(i.subarray(o,p));for(var h="";o<p;){var C=i[o++];if(128&C){var y=63&i[o++];if((224&C)!=192){var k=63&i[o++];if((C=(240&C)==224?(15&C)<<12|y<<6|k:(7&C)<<18|y<<12|k<<6|63&i[o++])<65536)h+=String.fromCharCode(C);else{var _=C-65536;h+=String.fromCharCode(55296|_>>10,56320|1023&_)}}else h+=String.fromCharCode((31&C)<<6|y)}else h+=String.fromCharCode(C)}return h}function vf(i,o){return i?_f(kf,i,o):""}function dg(i,o,a,u){if(!(u>0))return 0;for(var p=a,h=a+u-1,C=0;C<i.length;++C){var y=i.charCodeAt(C);if(y>=55296&&y<=57343&&(y=65536+((1023&y)<<10)|1023&i.charCodeAt(++C)),y<=127){if(a>=h)break;o[a++]=y}else if(y<=2047){if(a+1>=h)break;o[a++]=192|y>>6,o[a++]=128|63&y}else if(y<=65535){if(a+2>=h)break;o[a++]=224|y>>12,o[a++]=128|y>>6&63,o[a++]=128|63&y}else{if(a+3>=h)break;o[a++]=240|y>>18,o[a++]=128|y>>12&63,o[a++]=128|y>>6&63,o[a++]=128|63&y}}return o[a]=0,a-p}function R1(i){for(var o=0,a=0;a<i.length;++a){var u=i.charCodeAt(a);u<=127?o++:u<=2047?o+=2:u>=55296&&u<=57343?(o+=4,++a):o+=3}return o}var v0,fg=Je.INITIAL_MEMORY||16777216;v0=(cg=Je.wasmMemory?Je.wasmMemory:new yf.Memory({initial:fg/65536,maximum:fg/65536})).buffer,Je.HEAP8=No=new Int8Array(v0),Je.HEAP16=g2=new Int16Array(v0),Je.HEAP32=Ra=new Int32Array(v0),Je.HEAPU8=kf=new Uint8Array(v0),Je.HEAPU16=new Uint16Array(v0),Je.HEAPU32=Si=new Uint32Array(v0),Je.HEAPF32=Q1=new Float32Array(v0),Je.HEAPF64=N1=new Float64Array(v0),fg=cg.buffer.byteLength;var j1=[],V1=[],W1=[],U1=!1;function H1(i){V1.unshift(i)}var Zs,Ai,vd=0,jf=null;function Y1(i){vd++,Je.monitorRunDependencies&&Je.monitorRunDependencies(vd)}function K1(i){if(vd--,Je.monitorRunDependencies&&Je.monitorRunDependencies(vd),vd==0&&jf){var o=jf;jf=null,o()}}function x0(i){throw Je.onAbort&&Je.onAbort(i),If(i="Aborted("+i+")"),O1=!0,i+=". Build with -sASSERTIONS for more info.",new yf.RuntimeError(i)}function e_(i){this.name="ExitStatus",this.message="Program terminated with exit("+i+")",this.status=i}function gg(i){for(;i.length>0;)i.shift()(Je)}function t_(i,o="i8"){switch(o.endsWith("*")&&(o="*"),o){case"i1":case"i8":return No[0|i];case"i16":return g2[i>>1];case"i32":case"i64":return Ra[i>>2];case"float":return Q1[i>>2];case"double":return N1[i>>3];case"*":return Si[i>>2];default:x0("invalid type for getValue: "+o)}return null}function r_(i){this.excPtr=i,this.ptr=i-24,this.set_type=function(o){Si[this.ptr+4>>2]=o},this.get_type=function(){return Si[this.ptr+4>>2]},this.set_destructor=function(o){Si[this.ptr+8>>2]=o},this.get_destructor=function(){return Si[this.ptr+8>>2]},this.set_refcount=function(o){Ra[this.ptr>>2]=o},this.set_caught=function(o){o=o?1:0,No[this.ptr+12|0]=o},this.get_caught=function(){return No[this.ptr+12|0]!=0},this.set_rethrown=function(o){o=o?1:0,No[this.ptr+13|0]=o},this.get_rethrown=function(){return No[this.ptr+13|0]!=0},this.init=function(o,a){this.set_adjusted_ptr(0),this.set_type(o),this.set_destructor(a),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var o=Ra[this.ptr>>2];Ra[this.ptr>>2]=o+1},this.release_ref=function(){var o=Ra[this.ptr>>2];return Ra[this.ptr>>2]=o-1,o===1},this.set_adjusted_ptr=function(o){Si[this.ptr+16>>2]=o},this.get_adjusted_ptr=function(){return Si[this.ptr+16>>2]},this.get_exception_ptr=function(){if(Zh(this.get_type()))return Si[this.excPtr>>2];var o=this.get_adjusted_ptr();return o!==0?o:this.excPtr}}var mn={isAbs:i=>i.charAt(0)==="/",splitPath:i=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(i).slice(1),normalizeArray:(i,o)=>{for(var a=0,u=i.length-1;u>=0;u--){var p=i[u];p==="."?i.splice(u,1):p===".."?(i.splice(u,1),a++):a&&(i.splice(u,1),a--)}if(o)for(;a;a--)i.unshift("..");return i},normalize:i=>{var o=mn.isAbs(i),a=i.substr(-1)==="/";return(i=mn.normalizeArray(i.split("/").filter(u=>!!u),!o).join("/"))||o||(i="."),i&&a&&(i+="/"),(o?"/":"")+i},dirname:i=>{var o=mn.splitPath(i),a=o[0],u=o[1];return a||u?(u&&(u=u.substr(0,u.length-1)),a+u):"."},basename:i=>{if(i==="/")return"/";var o=(i=(i=mn.normalize(i)).replace(/\/$/,"")).lastIndexOf("/");return o===-1?i:i.substr(o+1)},join:function(){var i=Array.prototype.slice.call(arguments);return mn.normalize(i.join("/"))},join2:(i,o)=>mn.normalize(i+"/"+o)},Rc={resolve:function(){for(var i="",o=!1,a=arguments.length-1;a>=-1&&!o;a--){var u=a>=0?arguments[a]:Oe.cwd();if(typeof u!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!u)return"";i=u+"/"+i,o=mn.isAbs(u)}return(o?"/":"")+(i=mn.normalizeArray(i.split("/").filter(p=>!!p),!o).join("/"))||"."},relative:(i,o)=>{function a(_){for(var v=0;v<_.length&&_[v]==="";v++);for(var M=_.length-1;M>=0&&_[M]==="";M--);return v>M?[]:_.slice(v,M-v+1)}i=Rc.resolve(i).substr(1),o=Rc.resolve(o).substr(1);for(var u=a(i.split("/")),p=a(o.split("/")),h=Math.min(u.length,p.length),C=h,y=0;y<h;y++)if(u[y]!==p[y]){C=y;break}var k=[];for(y=C;y<u.length;y++)k.push("..");return(k=k.concat(p.slice(C))).join("/")}};function q1(i,o,a){var u=R1(i)+1,p=new Array(u),h=dg(i,p,0,p.length);return o&&(p.length=h),p}var xd={ttys:[],init:function(){},shutdown:function(){},register:function(i,o){xd.ttys[i]={input:[],output:[],ops:o},Oe.registerDevice(i,xd.stream_ops)},stream_ops:{open:function(i){var o=xd.ttys[i.node.rdev];if(!o)throw new Oe.ErrnoError(43);i.tty=o,i.seekable=!1},close:function(i){i.tty.ops.fsync(i.tty)},fsync:function(i){i.tty.ops.fsync(i.tty)},read:function(i,o,a,u,p){if(!i.tty||!i.tty.ops.get_char)throw new Oe.ErrnoError(60);for(var h=0,C=0;C<u;C++){var y;try{y=i.tty.ops.get_char(i.tty)}catch{throw new Oe.ErrnoError(29)}if(y===void 0&&h===0)throw new Oe.ErrnoError(6);if(y==null)break;h++,o[a+C]=y}return h&&(i.node.timestamp=Date.now()),h},write:function(i,o,a,u,p){if(!i.tty||!i.tty.ops.put_char)throw new Oe.ErrnoError(60);try{for(var h=0;h<u;h++)i.tty.ops.put_char(i.tty,o[a+h])}catch{throw new Oe.ErrnoError(29)}return u&&(i.node.timestamp=Date.now()),h}},default_tty_ops:{put_char:function(i,o){o===null||o===10?(f2(_f(i.output,0)),i.output=[]):o!=0&&i.output.push(o)},fsync:function(i){i.output&&i.output.length>0&&(f2(_f(i.output,0)),i.output=[])}},default_tty1_ops:{put_char:function(i,o){o===null||o===10?(If(_f(i.output,0)),i.output=[]):o!=0&&i.output.push(o)},fsync:function(i){i.output&&i.output.length>0&&(If(_f(i.output,0)),i.output=[])}}};function X1(i){x0()}var ga={ops_table:null,mount:function(i){return ga.createNode(null,"/",16895,0)},createNode:function(i,o,a,u){if(Oe.isBlkdev(a)||Oe.isFIFO(a))throw new Oe.ErrnoError(63);ga.ops_table||(ga.ops_table={dir:{node:{getattr:ga.node_ops.getattr,setattr:ga.node_ops.setattr,lookup:ga.node_ops.lookup,mknod:ga.node_ops.mknod,rename:ga.node_ops.rename,unlink:ga.node_ops.unlink,rmdir:ga.node_ops.rmdir,readdir:ga.node_ops.readdir,symlink:ga.node_ops.symlink},stream:{llseek:ga.stream_ops.llseek}},file:{node:{getattr:ga.node_ops.getattr,setattr:ga.node_ops.setattr},stream:{llseek:ga.stream_ops.llseek,read:ga.stream_ops.read,write:ga.stream_ops.write,allocate:ga.stream_ops.allocate,mmap:ga.stream_ops.mmap,msync:ga.stream_ops.msync}},link:{node:{getattr:ga.node_ops.getattr,setattr:ga.node_ops.setattr,readlink:ga.node_ops.readlink},stream:{}},chrdev:{node:{getattr:ga.node_ops.getattr,setattr:ga.node_ops.setattr},stream:Oe.chrdev_stream_ops}});var p=Oe.createNode(i,o,a,u);return Oe.isDir(p.mode)?(p.node_ops=ga.ops_table.dir.node,p.stream_ops=ga.ops_table.dir.stream,p.contents={}):Oe.isFile(p.mode)?(p.node_ops=ga.ops_table.file.node,p.stream_ops=ga.ops_table.file.stream,p.usedBytes=0,p.contents=null):Oe.isLink(p.mode)?(p.node_ops=ga.ops_table.link.node,p.stream_ops=ga.ops_table.link.stream):Oe.isChrdev(p.mode)&&(p.node_ops=ga.ops_table.chrdev.node,p.stream_ops=ga.ops_table.chrdev.stream),p.timestamp=Date.now(),i&&(i.contents[o]=p,i.timestamp=p.timestamp),p},getFileDataAsTypedArray:function(i){return i.contents?i.contents.subarray?i.contents.subarray(0,i.usedBytes):new Uint8Array(i.contents):new Uint8Array(0)},expandFileStorage:function(i,o){var a=i.contents?i.contents.length:0;if(!(a>=o)){o=Math.max(o,a*(a<1048576?2:1.125)>>>0),a!=0&&(o=Math.max(o,256));var u=i.contents;i.contents=new Uint8Array(o),i.usedBytes>0&&i.contents.set(u.subarray(0,i.usedBytes),0)}},resizeFileStorage:function(i,o){if(i.usedBytes!=o)if(o==0)i.contents=null,i.usedBytes=0;else{var a=i.contents;i.contents=new Uint8Array(o),a&&i.contents.set(a.subarray(0,Math.min(o,i.usedBytes))),i.usedBytes=o}},node_ops:{getattr:function(i){var o={};return o.dev=Oe.isChrdev(i.mode)?i.id:1,o.ino=i.id,o.mode=i.mode,o.nlink=1,o.uid=0,o.gid=0,o.rdev=i.rdev,Oe.isDir(i.mode)?o.size=4096:Oe.isFile(i.mode)?o.size=i.usedBytes:Oe.isLink(i.mode)?o.size=i.link.length:o.size=0,o.atime=new Date(i.timestamp),o.mtime=new Date(i.timestamp),o.ctime=new Date(i.timestamp),o.blksize=4096,o.blocks=Math.ceil(o.size/o.blksize),o},setattr:function(i,o){o.mode!==void 0&&(i.mode=o.mode),o.timestamp!==void 0&&(i.timestamp=o.timestamp),o.size!==void 0&&ga.resizeFileStorage(i,o.size)},lookup:function(i,o){throw Oe.genericErrors[44]},mknod:function(i,o,a,u){return ga.createNode(i,o,a,u)},rename:function(i,o,a){if(Oe.isDir(i.mode)){var u;try{u=Oe.lookupNode(o,a)}catch{}if(u)for(var p in u.contents)throw new Oe.ErrnoError(55)}delete i.parent.contents[i.name],i.parent.timestamp=Date.now(),i.name=a,o.contents[a]=i,o.timestamp=i.parent.timestamp,i.parent=o},unlink:function(i,o){delete i.contents[o],i.timestamp=Date.now()},rmdir:function(i,o){var a=Oe.lookupNode(i,o);for(var u in a.contents)throw new Oe.ErrnoError(55);delete i.contents[o],i.timestamp=Date.now()},readdir:function(i){var o=[".",".."];for(var a in i.contents)i.contents.hasOwnProperty(a)&&o.push(a);return o},symlink:function(i,o,a){var u=ga.createNode(i,o,41471,0);return u.link=a,u},readlink:function(i){if(!Oe.isLink(i.mode))throw new Oe.ErrnoError(28);return i.link}},stream_ops:{read:function(i,o,a,u,p){var h=i.node.contents;if(p>=i.node.usedBytes)return 0;var C=Math.min(i.node.usedBytes-p,u);if(C>8&&h.subarray)o.set(h.subarray(p,p+C),a);else for(var y=0;y<C;y++)o[a+y]=h[p+y];return C},write:function(i,o,a,u,p,h){if(!u)return 0;var C=i.node;if(C.timestamp=Date.now(),o.subarray&&(!C.contents||C.contents.subarray)){if(h)return C.contents=o.subarray(a,a+u),C.usedBytes=u,u;if(C.usedBytes===0&&p===0)return C.contents=o.slice(a,a+u),C.usedBytes=u,u;if(p+u<=C.usedBytes)return C.contents.set(o.subarray(a,a+u),p),u}if(ga.expandFileStorage(C,p+u),C.contents.subarray&&o.subarray)C.contents.set(o.subarray(a,a+u),p);else for(var y=0;y<u;y++)C.contents[p+y]=o[a+y];return C.usedBytes=Math.max(C.usedBytes,p+u),u},llseek:function(i,o,a){var u=o;if(a===1?u+=i.position:a===2&&Oe.isFile(i.node.mode)&&(u+=i.node.usedBytes),u<0)throw new Oe.ErrnoError(28);return u},allocate:function(i,o,a){ga.expandFileStorage(i.node,o+a),i.node.usedBytes=Math.max(i.node.usedBytes,o+a)},mmap:function(i,o,a,u,p){if(!Oe.isFile(i.node.mode))throw new Oe.ErrnoError(43);var h,C,y=i.node.contents;if(2&p||y.buffer!==No.buffer){if((a>0||a+o<y.length)&&(y=y.subarray?y.subarray(a,a+o):Array.prototype.slice.call(y,a,a+o)),C=!0,!(h=X1()))throw new Oe.ErrnoError(48);No.set(y,h)}else C=!1,h=y.byteOffset;return{ptr:h,allocated:C}},msync:function(i,o,a,u,p){return ga.stream_ops.write(i,o,0,u,a,!1),0}}},Oe={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(i,o={})=>{if(!(i=Rc.resolve(i)))return{path:"",node:null};if((o=Object.assign({follow_mount:!0,recurse_count:0},o)).recurse_count>8)throw new Oe.ErrnoError(32);for(var a=i.split("/").filter(_=>!!_),u=Oe.root,p="/",h=0;h<a.length;h++){var C=h===a.length-1;if(C&&o.parent)break;if(u=Oe.lookupNode(u,a[h]),p=mn.join2(p,a[h]),Oe.isMountpoint(u)&&(!C||C&&o.follow_mount)&&(u=u.mounted.root),!C||o.follow)for(var y=0;Oe.isLink(u.mode);){var k=Oe.readlink(p);if(p=Rc.resolve(mn.dirname(p),k),u=Oe.lookupPath(p,{recurse_count:o.recurse_count+1}).node,y++>40)throw new Oe.ErrnoError(32)}}return{path:p,node:u}},getPath:i=>{for(var o;;){if(Oe.isRoot(i)){var a=i.mount.mountpoint;return o?a[a.length-1]!=="/"?a+"/"+o:a+o:a}o=o?i.name+"/"+o:i.name,i=i.parent}},hashName:(i,o)=>{for(var a=0,u=0;u<o.length;u++)a=(a<<5)-a+o.charCodeAt(u)|0;return(i+a>>>0)%Oe.nameTable.length},hashAddNode:i=>{var o=Oe.hashName(i.parent.id,i.name);i.name_next=Oe.nameTable[o],Oe.nameTable[o]=i},hashRemoveNode:i=>{var o=Oe.hashName(i.parent.id,i.name);if(Oe.nameTable[o]===i)Oe.nameTable[o]=i.name_next;else for(var a=Oe.nameTable[o];a;){if(a.name_next===i){a.name_next=i.name_next;break}a=a.name_next}},lookupNode:(i,o)=>{var a=Oe.mayLookup(i);if(a)throw new Oe.ErrnoError(a,i);for(var u=Oe.hashName(i.id,o),p=Oe.nameTable[u];p;p=p.name_next){var h=p.name;if(p.parent.id===i.id&&h===o)return p}return Oe.lookup(i,o)},createNode:(i,o,a,u)=>{var p=new Oe.FSNode(i,o,a,u);return Oe.hashAddNode(p),p},destroyNode:i=>{Oe.hashRemoveNode(i)},isRoot:i=>i===i.parent,isMountpoint:i=>!!i.mounted,isFile:i=>(61440&i)==32768,isDir:i=>(61440&i)==16384,isLink:i=>(61440&i)==40960,isChrdev:i=>(61440&i)==8192,isBlkdev:i=>(61440&i)==24576,isFIFO:i=>(61440&i)==4096,isSocket:i=>!(49152&~i),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:i=>{var o=Oe.flagModes[i];if(o===void 0)throw new Error("Unknown file open mode: "+i);return o},flagsToPermissionString:i=>{var o=["r","w","rw"][3&i];return 512&i&&(o+="w"),o},nodePermissions:(i,o)=>Oe.ignorePermissions||(!o.includes("r")||292&i.mode)&&(!o.includes("w")||146&i.mode)&&(!o.includes("x")||73&i.mode)?0:2,mayLookup:i=>Oe.nodePermissions(i,"x")||(i.node_ops.lookup?0:2),mayCreate:(i,o)=>{try{return Oe.lookupNode(i,o),20}catch{}return Oe.nodePermissions(i,"wx")},mayDelete:(i,o,a)=>{var u;try{u=Oe.lookupNode(i,o)}catch(h){return h.errno}var p=Oe.nodePermissions(i,"wx");if(p)return p;if(a){if(!Oe.isDir(u.mode))return 54;if(Oe.isRoot(u)||Oe.getPath(u)===Oe.cwd())return 10}else if(Oe.isDir(u.mode))return 31;return 0},mayOpen:(i,o)=>i?Oe.isLink(i.mode)?32:Oe.isDir(i.mode)&&(Oe.flagsToPermissionString(o)!=="r"||512&o)?31:Oe.nodePermissions(i,Oe.flagsToPermissionString(o)):44,MAX_OPEN_FDS:4096,nextfd:(i=0,o=Oe.MAX_OPEN_FDS)=>{for(var a=i;a<=o;a++)if(!Oe.streams[a])return a;throw new Oe.ErrnoError(33)},getStream:i=>Oe.streams[i],createStream:(i,o,a)=>{Oe.FSStream||(Oe.FSStream=function(){this.shared={}},Oe.FSStream.prototype={},Object.defineProperties(Oe.FSStream.prototype,{object:{get:function(){return this.node},set:function(p){this.node=p}},isRead:{get:function(){return(2097155&this.flags)!=1}},isWrite:{get:function(){return!!(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(p){this.shared.flags=p}},position:{get:function(){return this.shared.position},set:function(p){this.shared.position=p}}})),i=Object.assign(new Oe.FSStream,i);var u=Oe.nextfd(o,a);return i.fd=u,Oe.streams[u]=i,i},closeStream:i=>{Oe.streams[i]=null},chrdev_stream_ops:{open:i=>{var o=Oe.getDevice(i.node.rdev);i.stream_ops=o.stream_ops,i.stream_ops.open&&i.stream_ops.open(i)},llseek:()=>{throw new Oe.ErrnoError(70)}},major:i=>i>>8,minor:i=>255&i,makedev:(i,o)=>i<<8|o,registerDevice:(i,o)=>{Oe.devices[i]={stream_ops:o}},getDevice:i=>Oe.devices[i],getMounts:i=>{for(var o=[],a=[i];a.length;){var u=a.pop();o.push(u),a.push.apply(a,u.mounts)}return o},syncfs:(i,o)=>{typeof i=="function"&&(o=i,i=!1),Oe.syncFSRequests++,Oe.syncFSRequests>1&&If("warning: "+Oe.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var a=Oe.getMounts(Oe.root.mount),u=0;function p(C){return Oe.syncFSRequests--,o(C)}function h(C){if(C)return h.errored?void 0:(h.errored=!0,p(C));++u>=a.length&&p(null)}a.forEach(C=>{if(!C.type.syncfs)return h(null);C.type.syncfs(C,i,h)})},mount:(i,o,a)=>{var u,p=a==="/",h=!a;if(p&&Oe.root)throw new Oe.ErrnoError(10);if(!p&&!h){var C=Oe.lookupPath(a,{follow_mount:!1});if(a=C.path,u=C.node,Oe.isMountpoint(u))throw new Oe.ErrnoError(10);if(!Oe.isDir(u.mode))throw new Oe.ErrnoError(54)}var y={type:i,opts:o,mountpoint:a,mounts:[]},k=i.mount(y);return k.mount=y,y.root=k,p?Oe.root=k:u&&(u.mounted=y,u.mount&&u.mount.mounts.push(y)),k},unmount:i=>{var o=Oe.lookupPath(i,{follow_mount:!1});if(!Oe.isMountpoint(o.node))throw new Oe.ErrnoError(28);var a=o.node,u=a.mounted,p=Oe.getMounts(u);Object.keys(Oe.nameTable).forEach(C=>{for(var y=Oe.nameTable[C];y;){var k=y.name_next;p.includes(y.mount)&&Oe.destroyNode(y),y=k}}),a.mounted=null;var h=a.mount.mounts.indexOf(u);a.mount.mounts.splice(h,1)},lookup:(i,o)=>i.node_ops.lookup(i,o),mknod:(i,o,a)=>{var u=Oe.lookupPath(i,{parent:!0}).node,p=mn.basename(i);if(!p||p==="."||p==="..")throw new Oe.ErrnoError(28);var h=Oe.mayCreate(u,p);if(h)throw new Oe.ErrnoError(h);if(!u.node_ops.mknod)throw new Oe.ErrnoError(63);return u.node_ops.mknod(u,p,o,a)},create:(i,o)=>(o=o!==void 0?o:438,o&=4095,o|=32768,Oe.mknod(i,o,0)),mkdir:(i,o)=>(o=o!==void 0?o:511,o&=1023,o|=16384,Oe.mknod(i,o,0)),mkdirTree:(i,o)=>{for(var a=i.split("/"),u="",p=0;p<a.length;++p)if(a[p]){u+="/"+a[p];try{Oe.mkdir(u,o)}catch(h){if(h.errno!=20)throw h}}},mkdev:(i,o,a)=>(a===void 0&&(a=o,o=438),o|=8192,Oe.mknod(i,o,a)),symlink:(i,o)=>{if(!Rc.resolve(i))throw new Oe.ErrnoError(44);var a=Oe.lookupPath(o,{parent:!0}).node;if(!a)throw new Oe.ErrnoError(44);var u=mn.basename(o),p=Oe.mayCreate(a,u);if(p)throw new Oe.ErrnoError(p);if(!a.node_ops.symlink)throw new Oe.ErrnoError(63);return a.node_ops.symlink(a,u,i)},rename:(i,o)=>{var a,u,p=mn.dirname(i),h=mn.dirname(o),C=mn.basename(i),y=mn.basename(o);if(a=Oe.lookupPath(i,{parent:!0}).node,u=Oe.lookupPath(o,{parent:!0}).node,!a||!u)throw new Oe.ErrnoError(44);if(a.mount!==u.mount)throw new Oe.ErrnoError(75);var k,_=Oe.lookupNode(a,C),v=Rc.relative(i,h);if(v.charAt(0)!==".")throw new Oe.ErrnoError(28);if((v=Rc.relative(o,p)).charAt(0)!==".")throw new Oe.ErrnoError(55);try{k=Oe.lookupNode(u,y)}catch{}if(_!==k){var M=Oe.isDir(_.mode),B=Oe.mayDelete(a,C,M);if(B)throw new Oe.ErrnoError(B);if(B=k?Oe.mayDelete(u,y,M):Oe.mayCreate(u,y))throw new Oe.ErrnoError(B);if(!a.node_ops.rename)throw new Oe.ErrnoError(63);if(Oe.isMountpoint(_)||k&&Oe.isMountpoint(k))throw new Oe.ErrnoError(10);if(u!==a&&(B=Oe.nodePermissions(a,"w")))throw new Oe.ErrnoError(B);Oe.hashRemoveNode(_);try{a.node_ops.rename(_,u,y)}catch(S){throw S}finally{Oe.hashAddNode(_)}}},rmdir:i=>{var o=Oe.lookupPath(i,{parent:!0}).node,a=mn.basename(i),u=Oe.lookupNode(o,a),p=Oe.mayDelete(o,a,!0);if(p)throw new Oe.ErrnoError(p);if(!o.node_ops.rmdir)throw new Oe.ErrnoError(63);if(Oe.isMountpoint(u))throw new Oe.ErrnoError(10);o.node_ops.rmdir(o,a),Oe.destroyNode(u)},readdir:i=>{var o=Oe.lookupPath(i,{follow:!0}).node;if(!o.node_ops.readdir)throw new Oe.ErrnoError(54);return o.node_ops.readdir(o)},unlink:i=>{var o=Oe.lookupPath(i,{parent:!0}).node;if(!o)throw new Oe.ErrnoError(44);var a=mn.basename(i),u=Oe.lookupNode(o,a),p=Oe.mayDelete(o,a,!1);if(p)throw new Oe.ErrnoError(p);if(!o.node_ops.unlink)throw new Oe.ErrnoError(63);if(Oe.isMountpoint(u))throw new Oe.ErrnoError(10);o.node_ops.unlink(o,a),Oe.destroyNode(u)},readlink:i=>{var o=Oe.lookupPath(i).node;if(!o)throw new Oe.ErrnoError(44);if(!o.node_ops.readlink)throw new Oe.ErrnoError(28);return Rc.resolve(Oe.getPath(o.parent),o.node_ops.readlink(o))},stat:(i,o)=>{var a=Oe.lookupPath(i,{follow:!o}).node;if(!a)throw new Oe.ErrnoError(44);if(!a.node_ops.getattr)throw new Oe.ErrnoError(63);return a.node_ops.getattr(a)},lstat:i=>Oe.stat(i,!0),chmod:(i,o,a)=>{var u;if(!(u=typeof i=="string"?Oe.lookupPath(i,{follow:!a}).node:i).node_ops.setattr)throw new Oe.ErrnoError(63);u.node_ops.setattr(u,{mode:4095&o|-4096&u.mode,timestamp:Date.now()})},lchmod:(i,o)=>{Oe.chmod(i,o,!0)},fchmod:(i,o)=>{var a=Oe.getStream(i);if(!a)throw new Oe.ErrnoError(8);Oe.chmod(a.node,o)},chown:(i,o,a,u)=>{var p;if(!(p=typeof i=="string"?Oe.lookupPath(i,{follow:!u}).node:i).node_ops.setattr)throw new Oe.ErrnoError(63);p.node_ops.setattr(p,{timestamp:Date.now()})},lchown:(i,o,a)=>{Oe.chown(i,o,a,!0)},fchown:(i,o,a)=>{var u=Oe.getStream(i);if(!u)throw new Oe.ErrnoError(8);Oe.chown(u.node,o,a)},truncate:(i,o)=>{if(o<0)throw new Oe.ErrnoError(28);var a;if(!(a=typeof i=="string"?Oe.lookupPath(i,{follow:!0}).node:i).node_ops.setattr)throw new Oe.ErrnoError(63);if(Oe.isDir(a.mode))throw new Oe.ErrnoError(31);if(!Oe.isFile(a.mode))throw new Oe.ErrnoError(28);var u=Oe.nodePermissions(a,"w");if(u)throw new Oe.ErrnoError(u);a.node_ops.setattr(a,{size:o,timestamp:Date.now()})},ftruncate:(i,o)=>{var a=Oe.getStream(i);if(!a)throw new Oe.ErrnoError(8);if(!(2097155&a.flags))throw new Oe.ErrnoError(28);Oe.truncate(a.node,o)},utime:(i,o,a)=>{var u=Oe.lookupPath(i,{follow:!0}).node;u.node_ops.setattr(u,{timestamp:Math.max(o,a)})},open:(i,o,a)=>{if(i==="")throw new Oe.ErrnoError(44);var u;if(a=a===void 0?438:a,a=64&(o=typeof o=="string"?Oe.modeStringToFlags(o):o)?4095&a|32768:0,typeof i=="object")u=i;else{i=mn.normalize(i);try{u=Oe.lookupPath(i,{follow:!(131072&o)}).node}catch{}}var p=!1;if(64&o)if(u){if(128&o)throw new Oe.ErrnoError(20)}else u=Oe.mknod(i,a,0),p=!0;if(!u)throw new Oe.ErrnoError(44);if(Oe.isChrdev(u.mode)&&(o&=-513),65536&o&&!Oe.isDir(u.mode))throw new Oe.ErrnoError(54);if(!p){var h=Oe.mayOpen(u,o);if(h)throw new Oe.ErrnoError(h)}512&o&&!p&&Oe.truncate(u,0),o&=-131713;var C=Oe.createStream({node:u,path:Oe.getPath(u),flags:o,seekable:!0,position:0,stream_ops:u.stream_ops,ungotten:[],error:!1});return C.stream_ops.open&&C.stream_ops.open(C),!Je.logReadFiles||1&o||(Oe.readFiles||(Oe.readFiles={}),i in Oe.readFiles||(Oe.readFiles[i]=1)),C},close:i=>{if(Oe.isClosed(i))throw new Oe.ErrnoError(8);i.getdents&&(i.getdents=null);try{i.stream_ops.close&&i.stream_ops.close(i)}catch(o){throw o}finally{Oe.closeStream(i.fd)}i.fd=null},isClosed:i=>i.fd===null,llseek:(i,o,a)=>{if(Oe.isClosed(i))throw new Oe.ErrnoError(8);if(!i.seekable||!i.stream_ops.llseek)throw new Oe.ErrnoError(70);if(a!=0&&a!=1&&a!=2)throw new Oe.ErrnoError(28);return i.position=i.stream_ops.llseek(i,o,a),i.ungotten=[],i.position},read:(i,o,a,u,p)=>{if(u<0||p<0)throw new Oe.ErrnoError(28);if(Oe.isClosed(i))throw new Oe.ErrnoError(8);if((2097155&i.flags)==1)throw new Oe.ErrnoError(8);if(Oe.isDir(i.node.mode))throw new Oe.ErrnoError(31);if(!i.stream_ops.read)throw new Oe.ErrnoError(28);var h=p!==void 0;if(h){if(!i.seekable)throw new Oe.ErrnoError(70)}else p=i.position;var C=i.stream_ops.read(i,o,a,u,p);return h||(i.position+=C),C},write:(i,o,a,u,p,h)=>{if(u<0||p<0)throw new Oe.ErrnoError(28);if(Oe.isClosed(i))throw new Oe.ErrnoError(8);if(!(2097155&i.flags))throw new Oe.ErrnoError(8);if(Oe.isDir(i.node.mode))throw new Oe.ErrnoError(31);if(!i.stream_ops.write)throw new Oe.ErrnoError(28);i.seekable&&1024&i.flags&&Oe.llseek(i,0,2);var C=p!==void 0;if(C){if(!i.seekable)throw new Oe.ErrnoError(70)}else p=i.position;var y=i.stream_ops.write(i,o,a,u,p,h);return C||(i.position+=y),y},allocate:(i,o,a)=>{if(Oe.isClosed(i))throw new Oe.ErrnoError(8);if(o<0||a<=0)throw new Oe.ErrnoError(28);if(!(2097155&i.flags))throw new Oe.ErrnoError(8);if(!Oe.isFile(i.node.mode)&&!Oe.isDir(i.node.mode))throw new Oe.ErrnoError(43);if(!i.stream_ops.allocate)throw new Oe.ErrnoError(138);i.stream_ops.allocate(i,o,a)},mmap:(i,o,a,u,p)=>{if(2&u&&!(2&p)&&(2097155&i.flags)!=2)throw new Oe.ErrnoError(2);if((2097155&i.flags)==1)throw new Oe.ErrnoError(2);if(!i.stream_ops.mmap)throw new Oe.ErrnoError(43);return i.stream_ops.mmap(i,o,a,u,p)},msync:(i,o,a,u,p)=>i.stream_ops.msync?i.stream_ops.msync(i,o,a,u,p):0,munmap:i=>0,ioctl:(i,o,a)=>{if(!i.stream_ops.ioctl)throw new Oe.ErrnoError(59);return i.stream_ops.ioctl(i,o,a)},readFile:(i,o={})=>{if(o.flags=o.flags||0,o.encoding=o.encoding||"binary",o.encoding!=="utf8"&&o.encoding!=="binary")throw new Error('Invalid encoding type "'+o.encoding+'"');var a,u=Oe.open(i,o.flags),p=Oe.stat(i).size,h=new Uint8Array(p);return Oe.read(u,h,0,p,0),o.encoding==="utf8"?a=_f(h,0):o.encoding==="binary"&&(a=h),Oe.close(u),a},writeFile:(i,o,a={})=>{a.flags=a.flags||577;var u=Oe.open(i,a.flags,a.mode);if(typeof o=="string"){var p=new Uint8Array(R1(o)+1),h=dg(o,p,0,p.length);Oe.write(u,p,0,h,void 0,a.canOwn)}else{if(!ArrayBuffer.isView(o))throw new Error("Unsupported data type");Oe.write(u,o,0,o.byteLength,void 0,a.canOwn)}Oe.close(u)},cwd:()=>Oe.currentPath,chdir:i=>{var o=Oe.lookupPath(i,{follow:!0});if(o.node===null)throw new Oe.ErrnoError(44);if(!Oe.isDir(o.node.mode))throw new Oe.ErrnoError(54);var a=Oe.nodePermissions(o.node,"x");if(a)throw new Oe.ErrnoError(a);Oe.currentPath=o.path},createDefaultDirectories:()=>{Oe.mkdir("/tmp"),Oe.mkdir("/home"),Oe.mkdir("/home/web_user")},createDefaultDevices:()=>{Oe.mkdir("/dev"),Oe.registerDevice(Oe.makedev(1,3),{read:()=>0,write:(i,o,a,u,p)=>u}),Oe.mkdev("/dev/null",Oe.makedev(1,3)),xd.register(Oe.makedev(5,0),xd.default_tty_ops),xd.register(Oe.makedev(6,0),xd.default_tty1_ops),Oe.mkdev("/dev/tty",Oe.makedev(5,0)),Oe.mkdev("/dev/tty1",Oe.makedev(6,0)),Oe.mkdir("/dev/shm"),Oe.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{Oe.mkdir("/proc");var i=Oe.mkdir("/proc/self");Oe.mkdir("/proc/self/fd"),Oe.mount({mount:()=>{var o=Oe.createNode(i,"fd",16895,73);return o.node_ops={lookup:(a,u)=>{var p=+u,h=Oe.getStream(p);if(!h)throw new Oe.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>h.path}};return C.parent=C,C}},o}},{},"/proc/self/fd")},createStandardStreams:()=>{Je.stdin?Oe.createDevice("/dev","stdin",Je.stdin):Oe.symlink("/dev/tty","/dev/stdin"),Je.stdout?Oe.createDevice("/dev","stdout",null,Je.stdout):Oe.symlink("/dev/tty","/dev/stdout"),Je.stderr?Oe.createDevice("/dev","stderr",null,Je.stderr):Oe.symlink("/dev/tty1","/dev/stderr"),Oe.open("/dev/stdin",0),Oe.open("/dev/stdout",1),Oe.open("/dev/stderr",1)},ensureErrnoError:()=>{Oe.ErrnoError||(Oe.ErrnoError=function(i,o){this.node=o,this.setErrno=function(a){this.errno=a},this.setErrno(i),this.message="FS error"},Oe.ErrnoError.prototype=new Error,Oe.ErrnoError.prototype.constructor=Oe.ErrnoError,[44].forEach(i=>{Oe.genericErrors[i]=new Oe.ErrnoError(i),Oe.genericErrors[i].stack="<generic error, no stack>"}))},staticInit:()=>{Oe.ensureErrnoError(),Oe.nameTable=new Array(4096),Oe.mount(ga,{},"/"),Oe.createDefaultDirectories(),Oe.createDefaultDevices(),Oe.createSpecialDirectories(),Oe.filesystems={MEMFS:ga}},init:(i,o,a)=>{Oe.init.initialized=!0,Oe.ensureErrnoError(),Je.stdin=i||Je.stdin,Je.stdout=o||Je.stdout,Je.stderr=a||Je.stderr,Oe.createStandardStreams()},quit:()=>{Oe.init.initialized=!1;for(var i=0;i<Oe.streams.length;i++){var o=Oe.streams[i];o&&Oe.close(o)}},getMode:(i,o)=>{var a=0;return i&&(a|=365),o&&(a|=146),a},findObject:(i,o)=>{var a=Oe.analyzePath(i,o);return a.exists?a.object:null},analyzePath:(i,o)=>{try{i=(u=Oe.lookupPath(i,{follow:!o})).path}catch{}var a={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var u=Oe.lookupPath(i,{parent:!0});a.parentExists=!0,a.parentPath=u.path,a.parentObject=u.node,a.name=mn.basename(i),u=Oe.lookupPath(i,{follow:!o}),a.exists=!0,a.path=u.path,a.object=u.node,a.name=u.node.name,a.isRoot=u.path==="/"}catch(p){a.error=p.errno}return a},createPath:(i,o,a,u)=>{i=typeof i=="string"?i:Oe.getPath(i);for(var p=o.split("/").reverse();p.length;){var h=p.pop();if(h){var C=mn.join2(i,h);try{Oe.mkdir(C)}catch{}i=C}}return C},createFile:(i,o,a,u,p)=>{var h=mn.join2(typeof i=="string"?i:Oe.getPath(i),o),C=Oe.getMode(u,p);return Oe.create(h,C)},createDataFile:(i,o,a,u,p,h)=>{var C=o;i&&(i=typeof i=="string"?i:Oe.getPath(i),C=o?mn.join2(i,o):i);var y=Oe.getMode(u,p),k=Oe.create(C,y);if(a){if(typeof a=="string"){for(var _=new Array(a.length),v=0,M=a.length;v<M;++v)_[v]=a.charCodeAt(v);a=_}Oe.chmod(k,146|y);var B=Oe.open(k,577);Oe.write(B,a,0,a.length,0,h),Oe.close(B),Oe.chmod(k,y)}return k},createDevice:(i,o,a,u)=>{var p=mn.join2(typeof i=="string"?i:Oe.getPath(i),o),h=Oe.getMode(!!a,!!u);Oe.createDevice.major||(Oe.createDevice.major=64);var C=Oe.makedev(Oe.createDevice.major++,0);return Oe.registerDevice(C,{open:y=>{y.seekable=!1},close:y=>{u&&u.buffer&&u.buffer.length&&u(10)},read:(y,k,_,v,M)=>{for(var B=0,S=0;S<v;S++){var N;try{N=a()}catch{throw new Oe.ErrnoError(29)}if(N===void 0&&B===0)throw new Oe.ErrnoError(6);if(N==null)break;B++,k[_+S]=N}return B&&(y.node.timestamp=Date.now()),B},write:(y,k,_,v,M)=>{for(var B=0;B<v;B++)try{u(k[_+B])}catch{throw new Oe.ErrnoError(29)}return v&&(y.node.timestamp=Date.now()),B}}),Oe.mkdev(p,h,C)},forceLoadFile:i=>{if(i.isDevice||i.isFolder||i.link||i.contents)return!0;throw typeof XMLHttpRequest<"u"?new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."):new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile:(i,o,a,u,p)=>{function h(){this.lengthKnown=!1,this.chunks=[]}if(h.prototype.get=function(M){if(!(M>this.length-1||M<0)){var B=M%this.chunkSize,S=M/this.chunkSize|0;return this.getter(S)[B]}},h.prototype.setDataGetter=function(M){this.getter=M},h.prototype.cacheLength=function(){var M=new XMLHttpRequest;if(M.open("HEAD",a,!1),M.send(null),!(M.status>=200&&M.status<300||M.status===304))throw new Error("Couldn't load "+a+". Status: "+M.status);var B,S=Number(M.getResponseHeader("Content-length")),N=(B=M.getResponseHeader("Accept-Ranges"))&&B==="bytes",V=(B=M.getResponseHeader("Content-Encoding"))&&B==="gzip",Z=1048576;N||(Z=S);var O=this;O.setDataGetter(Q=>{var q=Q*Z,f=(Q+1)*Z-1;if(f=Math.min(f,S-1),O.chunks[Q]===void 0&&(O.chunks[Q]=((I,e)=>{if(I>e)throw new Error("invalid range ("+I+", "+e+") or no bytes requested!");if(e>S-1)throw new Error("only "+S+" bytes available! programmer error!");var c=new XMLHttpRequest;if(c.open("GET",a,!1),S!==Z&&c.setRequestHeader("Range","bytes="+I+"-"+e),c.responseType="arraybuffer",c.overrideMimeType&&c.overrideMimeType("text/plain; charset=x-user-defined"),c.send(null),!(c.status>=200&&c.status<300||c.status===304))throw new Error("Couldn't load "+a+". Status: "+c.status);return c.response!==void 0?new Uint8Array(c.response||[]):q1(c.responseText||"",!0)})(q,f)),O.chunks[Q]===void 0)throw new Error("doXHR failed!");return O.chunks[Q]}),!V&&S||(Z=S=1,S=this.getter(0).length,Z=S,f2("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=S,this._chunkSize=Z,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!$k)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var C=new h;Object.defineProperties(C,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var y={isDevice:!1,contents:C}}else y={isDevice:!1,url:a};var k=Oe.createFile(i,o,y,u,p);y.contents?k.contents=y.contents:y.url&&(k.contents=null,k.url=y.url),Object.defineProperties(k,{usedBytes:{get:function(){return this.contents.length}}});var _={};function v(M,B,S,N,V){var Z=M.node.contents;if(V>=Z.length)return 0;var O=Math.min(Z.length-V,N);if(Z.slice)for(var Q=0;Q<O;Q++)B[S+Q]=Z[V+Q];else for(Q=0;Q<O;Q++)B[S+Q]=Z.get(V+Q);return O}return Object.keys(k.stream_ops).forEach(M=>{var B=k.stream_ops[M];_[M]=function(){return Oe.forceLoadFile(k),B.apply(null,arguments)}}),_.read=(M,B,S,N,V)=>(Oe.forceLoadFile(k),v(M,B,S,N,V)),_.mmap=(M,B,S,N,V)=>{Oe.forceLoadFile(k);var Z=X1();if(!Z)throw new Oe.ErrnoError(48);return v(M,No,Z,B,S),{ptr:Z,allocated:!0}},k.stream_ops=_,k},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(i,o,a)=>{o=o||(()=>{}),a=a||(()=>{});var u=Oe.indexedDB();try{var p=u.open(Oe.DB_NAME(),Oe.DB_VERSION)}catch(h){return a(h)}p.onupgradeneeded=()=>{f2("creating db"),p.result.createObjectStore(Oe.DB_STORE_NAME)},p.onsuccess=()=>{var h=p.result.transaction([Oe.DB_STORE_NAME],"readwrite"),C=h.objectStore(Oe.DB_STORE_NAME),y=0,k=0,_=i.length;function v(){k==0?o():a()}i.forEach(M=>{var B=C.put(Oe.analyzePath(M).object.contents,M);B.onsuccess=()=>{++y+k==_&&v()},B.onerror=()=>{k++,y+k==_&&v()}}),h.onerror=a},p.onerror=a},loadFilesFromDB:(i,o,a)=>{o=o||(()=>{}),a=a||(()=>{});var u=Oe.indexedDB();try{var p=u.open(Oe.DB_NAME(),Oe.DB_VERSION)}catch(h){return a(h)}p.onupgradeneeded=a,p.onsuccess=()=>{var h=p.result;try{var C=h.transaction([Oe.DB_STORE_NAME],"readonly")}catch(B){return void a(B)}var y=C.objectStore(Oe.DB_STORE_NAME),k=0,_=0,v=i.length;function M(){_==0?o():a()}i.forEach(B=>{var S=y.get(B);S.onsuccess=()=>{Oe.analyzePath(B).exists&&Oe.unlink(B),Oe.createDataFile(mn.dirname(B),mn.basename(B),S.result,!0,!0,!0),++k+_==v&&M()},S.onerror=()=>{_++,k+_==v&&M()}}),C.onerror=a},p.onerror=a}},Yn={DEFAULT_POLLMASK:5,calculateAt:function(i,o,a){if(mn.isAbs(o))return o;var u;if(u=i===-100?Oe.cwd():Yn.getStreamFromFD(i).path,o.length==0){if(!a)throw new Oe.ErrnoError(44);return u}return mn.join2(u,o)},doStat:function(i,o,a){try{var u=i(o)}catch(y){if(y&&y.node&&mn.normalize(o)!==mn.normalize(Oe.getPath(y.node)))return-54;throw y}Ra[a>>2]=u.dev,Ra[a+8>>2]=u.ino,Ra[a+12>>2]=u.mode,Si[a+16>>2]=u.nlink,Ra[a+20>>2]=u.uid,Ra[a+24>>2]=u.gid,Ra[a+28>>2]=u.rdev,Ai=[u.size>>>0,(Zs=u.size,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[a+40>>2]=Ai[0],Ra[a+44>>2]=Ai[1],Ra[a+48>>2]=4096,Ra[a+52>>2]=u.blocks;var p=u.atime.getTime(),h=u.mtime.getTime(),C=u.ctime.getTime();return Ai=[Math.floor(p/1e3)>>>0,(Zs=Math.floor(p/1e3),+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[a+56>>2]=Ai[0],Ra[a+60>>2]=Ai[1],Si[a+64>>2]=p%1e3*1e3,Ai=[Math.floor(h/1e3)>>>0,(Zs=Math.floor(h/1e3),+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[a+72>>2]=Ai[0],Ra[a+76>>2]=Ai[1],Si[a+80>>2]=h%1e3*1e3,Ai=[Math.floor(C/1e3)>>>0,(Zs=Math.floor(C/1e3),+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[a+88>>2]=Ai[0],Ra[a+92>>2]=Ai[1],Si[a+96>>2]=C%1e3*1e3,Ai=[u.ino>>>0,(Zs=u.ino,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[a+104>>2]=Ai[0],Ra[a+108>>2]=Ai[1],0},doMsync:function(i,o,a,u,p){if(!Oe.isFile(o.node.mode))throw new Oe.ErrnoError(43);if(2&u)return 0;var h=kf.slice(i,i+a);Oe.msync(o,h,p,a,u)},varargs:void 0,get:function(){return Yn.varargs+=4,Ra[Yn.varargs-4>>2]},getStr:function(i){return vf(i)},getStreamFromFD:function(i){var o=Oe.getStream(i);if(!o)throw new Oe.ErrnoError(8);return o}},pg={};function Vf(){if(!Vf.strings){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:lg||"./this.program"};for(var o in pg)pg[o]===void 0?delete i[o]:i[o]=pg[o];var a=[];for(var o in i)a.push(o+"="+i[o]);Vf.strings=a}return Vf.strings}var Z1=function(i,o,a,u){i||(i=this),this.parent=i,this.mount=i.mount,this.mounted=null,this.id=Oe.nextInode++,this.name=o,this.mode=a,this.node_ops={},this.stream_ops={},this.rdev=u};Object.defineProperties(Z1.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(i){i?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(i){i?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return Oe.isDir(this.mode)}},isDevice:{get:function(){return Oe.isChrdev(this.mode)}}}),Oe.FSNode=Z1,Oe.staticInit(),Je.FS_createPath=Oe.createPath,Je.FS_createDataFile=Oe.createDataFile,Je.FS_unlink=Oe.unlink,Je.FS_createLazyFile=Oe.createLazyFile,Je.FS_createDevice=Oe.createDevice;var s_={g:function(i,o,a,u){x0("Assertion failed: "+vf(i)+", at: "+[o?vf(o):"unknown filename",a,u?vf(u):"unknown function"])},u:function(i,o,a){throw new r_(i).init(o,a),i},d:function(i,o,a){Yn.varargs=a;try{var u=Yn.getStreamFromFD(i);switch(o){case 0:return(p=Yn.get())<0?-28:Oe.createStream(u,p).fd;case 1:case 2:case 6:case 7:return 0;case 3:return u.flags;case 4:var p=Yn.get();return u.flags|=p,0;case 5:return p=Yn.get(),g2[p+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return Ra[Xh()>>2]=28,-1}}catch(h){if(Oe===void 0||!(h instanceof Oe.ErrnoError))throw h;return-h.errno}},q:function(i,o,a){try{var u=Yn.getStreamFromFD(i);u.getdents||(u.getdents=Oe.readdir(u.path));for(var p=280,h=0,C=Oe.llseek(u,0,1),y=Math.floor(C/p);y<u.getdents.length&&h+p<=a;){var k,_,v=u.getdents[y];if(v===".")k=u.node.id,_=4;else if(v==="..")k=Oe.lookupPath(u.path,{parent:!0}).node.id,_=4;else{var M=Oe.lookupNode(u.node,v);k=M.id,_=Oe.isChrdev(M.mode)?2:Oe.isDir(M.mode)?4:Oe.isLink(M.mode)?10:8}Ai=[k>>>0,(Zs=k,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[o+h>>2]=Ai[0],Ra[o+h+4>>2]=Ai[1],Ai=[(y+1)*p>>>0,(Zs=(y+1)*p,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[o+h+8>>2]=Ai[0],Ra[o+h+12>>2]=Ai[1],g2[o+h+16>>1]=280,No[o+h+18|0]=_,dg(v,kf,o+h+19,256),h+=p,y+=1}return Oe.llseek(u,y*p,0),h}catch(B){if(Oe===void 0||!(B instanceof Oe.ErrnoError))throw B;return-B.errno}},h:function(i,o,a){Yn.varargs=a;try{var u=Yn.getStreamFromFD(i);switch(o){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return u.tty?0:-59;case 21519:if(!u.tty)return-59;var p=Yn.get();return Ra[p>>2]=0,0;case 21520:return u.tty?-28:-59;case 21531:return p=Yn.get(),Oe.ioctl(u,o,p);default:return-28}}catch(h){if(Oe===void 0||!(h instanceof Oe.ErrnoError))throw h;return-h.errno}},e:function(i,o,a,u){Yn.varargs=u;try{o=Yn.getStr(o),o=Yn.calculateAt(i,o);var p=u?Yn.get():0;return Oe.open(o,a,p).fd}catch(h){if(Oe===void 0||!(h instanceof Oe.ErrnoError))throw h;return-h.errno}},o:function(i){try{return i=Yn.getStr(i),Oe.rmdir(i),0}catch(o){if(Oe===void 0||!(o instanceof Oe.ErrnoError))throw o;return-o.errno}},n:function(i,o){try{return i=Yn.getStr(i),Yn.doStat(Oe.stat,i,o)}catch(a){if(Oe===void 0||!(a instanceof Oe.ErrnoError))throw a;return-a.errno}},p:function(i,o,a){try{return o=Yn.getStr(o),o=Yn.calculateAt(i,o),a===0?Oe.unlink(o):a===512?Oe.rmdir(o):x0("Invalid flags passed to unlinkat"),0}catch(u){if(Oe===void 0||!(u instanceof Oe.ErrnoError))throw u;return-u.errno}},i:function(){return!0},l:function(){x0("")},f:function(){return Date.now()},j:function(i,o,a){kf.copyWithin(i,o,o+a)},m:function(i){kf.length,x0("OOM")},r:function(i,o){var a=0;return Vf().forEach(function(u,p){var h=o+a;Si[i+4*p>>2]=h,function(C,y){for(var k=0;k<C.length;++k)No[0|y++]=C.charCodeAt(k);No[0|y]=0}(u,h),a+=u.length+1}),0},s:function(i,o){var a=Vf();Si[i>>2]=a.length;var u=0;return a.forEach(function(p){u+=p.length+1}),Si[o>>2]=u,0},b:function(i){try{var o=Yn.getStreamFromFD(i);return Oe.close(o),0}catch(a){if(Oe===void 0||!(a instanceof Oe.ErrnoError))throw a;return a.errno}},t:function(i,o,a,u){try{var p=function(h,C,y){for(var k=0,_=0;_<y;_++){var v=Si[C>>2],M=Si[C+4>>2];C+=8;var B=Oe.read(h,No,v,M,void 0);if(B<0)return-1;if(k+=B,B<M)break}return k}(Yn.getStreamFromFD(i),o,a);return Si[u>>2]=p,0}catch(h){if(Oe===void 0||!(h instanceof Oe.ErrnoError))throw h;return h.errno}},k:function(i,o,a,u,p){try{var h=(k=a)+2097152>>>0<4194305-!!(y=o)?(y>>>0)+4294967296*k:NaN;if(isNaN(h))return 61;var C=Yn.getStreamFromFD(i);return Oe.llseek(C,h,u),Ai=[C.position>>>0,(Zs=C.position,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Ra[p>>2]=Ai[0],Ra[p+4>>2]=Ai[1],C.getdents&&h===0&&u===0&&(C.getdents=null),0}catch(_){if(Oe===void 0||!(_ instanceof Oe.ErrnoError))throw _;return _.errno}var y,k},c:function(i,o,a,u){try{var p=function(h,C,y){for(var k=0,_=0;_<y;_++){var v=Si[C>>2],M=Si[C+4>>2];C+=8;var B=Oe.write(h,No,v,M,void 0);if(B<0)return-1;k+=B}return k}(Yn.getStreamFromFD(i),o,a);return Si[u>>2]=p,0}catch(h){if(Oe===void 0||!(h instanceof Oe.ErrnoError))throw h;return h.errno}},a:cg};(function(){var i,o={a:s_};function a(u,p){var h=u.exports;Je.asm=h,Je.asm.ua,H1(Je.asm.v),K1()}if(Y1(),Je.instantiateWasm)try{return Je.instantiateWasm(o,a)}catch(u){return If("Module.instantiateWasm callback failed with error: "+u),!1}i=function(u){a(u.instance)},async function(){return[]}().then(function(u){return yf.instantiate(u,o)}).then(function(u){return u}).then(i,function(u){If("failed to asynchronously prepare wasm: "+u),x0(u)})})(),Je.___wasm_call_ctors=function(){return(Je.___wasm_call_ctors=Je.asm.v).apply(null,arguments)};var J1=Je._emscripten_bind_VoidPtr___destroy___0=function(){return(J1=Je._emscripten_bind_VoidPtr___destroy___0=Je.asm.w).apply(null,arguments)},$1=Je._emscripten_bind_espeak_VOICE_get_name_0=function(){return($1=Je._emscripten_bind_espeak_VOICE_get_name_0=Je.asm.x).apply(null,arguments)},eh=Je._emscripten_bind_espeak_VOICE_set_name_1=function(){return(eh=Je._emscripten_bind_espeak_VOICE_set_name_1=Je.asm.y).apply(null,arguments)},th=Je._emscripten_bind_espeak_VOICE_get_languages_1=function(){return(th=Je._emscripten_bind_espeak_VOICE_get_languages_1=Je.asm.z).apply(null,arguments)},rh=Je._emscripten_bind_espeak_VOICE_get_identifier_0=function(){return(rh=Je._emscripten_bind_espeak_VOICE_get_identifier_0=Je.asm.A).apply(null,arguments)},sh=Je._emscripten_bind_espeak_VOICE_set_identifier_1=function(){return(sh=Je._emscripten_bind_espeak_VOICE_set_identifier_1=Je.asm.B).apply(null,arguments)},ah=Je._emscripten_bind_espeak_VOICE_get_gender_0=function(){return(ah=Je._emscripten_bind_espeak_VOICE_get_gender_0=Je.asm.C).apply(null,arguments)},nh=Je._emscripten_bind_espeak_VOICE_set_gender_1=function(){return(nh=Je._emscripten_bind_espeak_VOICE_set_gender_1=Je.asm.D).apply(null,arguments)},ih=Je._emscripten_bind_espeak_VOICE_get_age_0=function(){return(ih=Je._emscripten_bind_espeak_VOICE_get_age_0=Je.asm.E).apply(null,arguments)},oh=Je._emscripten_bind_espeak_VOICE_set_age_1=function(){return(oh=Je._emscripten_bind_espeak_VOICE_set_age_1=Je.asm.F).apply(null,arguments)},Ah=Je._emscripten_bind_espeak_VOICE_get_variant_0=function(){return(Ah=Je._emscripten_bind_espeak_VOICE_get_variant_0=Je.asm.G).apply(null,arguments)},lh=Je._emscripten_bind_espeak_VOICE_set_variant_1=function(){return(lh=Je._emscripten_bind_espeak_VOICE_set_variant_1=Je.asm.H).apply(null,arguments)},ch=Je._emscripten_bind_espeak_VOICE_get_xx1_0=function(){return(ch=Je._emscripten_bind_espeak_VOICE_get_xx1_0=Je.asm.I).apply(null,arguments)},uh=Je._emscripten_bind_espeak_VOICE_set_xx1_1=function(){return(uh=Je._emscripten_bind_espeak_VOICE_set_xx1_1=Je.asm.J).apply(null,arguments)},dh=Je._emscripten_bind_espeak_VOICE_get_score_0=function(){return(dh=Je._emscripten_bind_espeak_VOICE_get_score_0=Je.asm.K).apply(null,arguments)},fh=Je._emscripten_bind_espeak_VOICE_set_score_1=function(){return(fh=Je._emscripten_bind_espeak_VOICE_set_score_1=Je.asm.L).apply(null,arguments)},gh=Je._emscripten_bind_espeak_VOICE_get_spare_0=function(){return(gh=Je._emscripten_bind_espeak_VOICE_get_spare_0=Je.asm.M).apply(null,arguments)},ph=Je._emscripten_bind_espeak_VOICE_set_spare_1=function(){return(ph=Je._emscripten_bind_espeak_VOICE_set_spare_1=Je.asm.N).apply(null,arguments)},hh=Je._emscripten_bind_espeak_VOICE___destroy___0=function(){return(hh=Je._emscripten_bind_espeak_VOICE___destroy___0=Je.asm.O).apply(null,arguments)},mh=Je._emscripten_bind_espeak_EVENT_get_type_0=function(){return(mh=Je._emscripten_bind_espeak_EVENT_get_type_0=Je.asm.P).apply(null,arguments)},bh=Je._emscripten_bind_espeak_EVENT_get_unique_identifier_0=function(){return(bh=Je._emscripten_bind_espeak_EVENT_get_unique_identifier_0=Je.asm.Q).apply(null,arguments)},Ch=Je._emscripten_bind_espeak_EVENT_get_text_position_0=function(){return(Ch=Je._emscripten_bind_espeak_EVENT_get_text_position_0=Je.asm.R).apply(null,arguments)},wh=Je._emscripten_bind_espeak_EVENT_get_length_0=function(){return(wh=Je._emscripten_bind_espeak_EVENT_get_length_0=Je.asm.S).apply(null,arguments)},Ih=Je._emscripten_bind_espeak_EVENT_get_audio_position_0=function(){return(Ih=Je._emscripten_bind_espeak_EVENT_get_audio_position_0=Je.asm.T).apply(null,arguments)},yh=Je._emscripten_bind_espeak_EVENT_get_sample_0=function(){return(yh=Je._emscripten_bind_espeak_EVENT_get_sample_0=Je.asm.U).apply(null,arguments)},kh=Je._emscripten_bind_espeak_EVENT_get_user_data_0=function(){return(kh=Je._emscripten_bind_espeak_EVENT_get_user_data_0=Je.asm.V).apply(null,arguments)},_h=Je._emscripten_bind_espeak_EVENT___destroy___0=function(){return(_h=Je._emscripten_bind_espeak_EVENT___destroy___0=Je.asm.W).apply(null,arguments)},vh=Je._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=function(){return(vh=Je._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=Je.asm.X).apply(null,arguments)},xh=Je._emscripten_bind_eSpeakNGWorker_synth__2=function(){return(xh=Je._emscripten_bind_eSpeakNGWorker_synth__2=Je.asm.Y).apply(null,arguments)},Mh=Je._emscripten_bind_eSpeakNGWorker_synth_ipa__2=function(){return(Mh=Je._emscripten_bind_eSpeakNGWorker_synth_ipa__2=Je.asm.Z).apply(null,arguments)},Eh=Je._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=function(){return(Eh=Je._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=Je.asm._).apply(null,arguments)},Bh=Je._emscripten_bind_eSpeakNGWorker_set_voice_2=function(){return(Bh=Je._emscripten_bind_eSpeakNGWorker_set_voice_2=Je.asm.$).apply(null,arguments)},Th=Je._emscripten_bind_eSpeakNGWorker_set_voice_3=function(){return(Th=Je._emscripten_bind_eSpeakNGWorker_set_voice_3=Je.asm.aa).apply(null,arguments)},Ph=Je._emscripten_bind_eSpeakNGWorker_set_voice_4=function(){return(Ph=Je._emscripten_bind_eSpeakNGWorker_set_voice_4=Je.asm.ba).apply(null,arguments)},Dh=Je._emscripten_bind_eSpeakNGWorker_set_voice_5=function(){return(Dh=Je._emscripten_bind_eSpeakNGWorker_set_voice_5=Je.asm.ca).apply(null,arguments)},Sh=Je._emscripten_bind_eSpeakNGWorker_get_voices_1=function(){return(Sh=Je._emscripten_bind_eSpeakNGWorker_get_voices_1=Je.asm.da).apply(null,arguments)},Gh=Je._emscripten_bind_eSpeakNGWorker_set_voices_2=function(){return(Gh=Je._emscripten_bind_eSpeakNGWorker_set_voices_2=Je.asm.ea).apply(null,arguments)},Fh=Je._emscripten_bind_eSpeakNGWorker_get_samplerate_0=function(){return(Fh=Je._emscripten_bind_eSpeakNGWorker_get_samplerate_0=Je.asm.fa).apply(null,arguments)},zh=Je._emscripten_bind_eSpeakNGWorker_get_rate_0=function(){return(zh=Je._emscripten_bind_eSpeakNGWorker_get_rate_0=Je.asm.ga).apply(null,arguments)},Oh=Je._emscripten_bind_eSpeakNGWorker_set_rate_1=function(){return(Oh=Je._emscripten_bind_eSpeakNGWorker_set_rate_1=Je.asm.ha).apply(null,arguments)},Qh=Je._emscripten_bind_eSpeakNGWorker_get_pitch_0=function(){return(Qh=Je._emscripten_bind_eSpeakNGWorker_get_pitch_0=Je.asm.ia).apply(null,arguments)},Nh=Je._emscripten_bind_eSpeakNGWorker_set_pitch_1=function(){return(Nh=Je._emscripten_bind_eSpeakNGWorker_set_pitch_1=Je.asm.ja).apply(null,arguments)},Lh=Je._emscripten_bind_eSpeakNGWorker___destroy___0=function(){return(Lh=Je._emscripten_bind_eSpeakNGWorker___destroy___0=Je.asm.ka).apply(null,arguments)},Rh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=function(){return(Rh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=Je.asm.la).apply(null,arguments)},jh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=function(){return(jh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=Je.asm.ma).apply(null,arguments)},Vh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=function(){return(Vh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=Je.asm.na).apply(null,arguments)},Wh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=function(){return(Wh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=Je.asm.oa).apply(null,arguments)},Uh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=function(){return(Uh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=Je.asm.pa).apply(null,arguments)},Hh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=function(){return(Hh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=Je.asm.qa).apply(null,arguments)},Yh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=function(){return(Yh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=Je.asm.ra).apply(null,arguments)},Kh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=function(){return(Kh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=Je.asm.sa).apply(null,arguments)},qh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=function(){return(qh=Je._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=Je.asm.ta).apply(null,arguments)},Xh=Je.___errno_location=function(){return(Xh=Je.___errno_location=Je.asm.va).apply(null,arguments)};Je._free=function(){return(Je._free=Je.asm.wa).apply(null,arguments)},Je._malloc=function(){return(Je._malloc=Je.asm.xa).apply(null,arguments)};var p2,Zh=Je.___cxa_is_pointer_type=function(){return(Zh=Je.___cxa_is_pointer_type=Je.asm.ya).apply(null,arguments)};function Jh(i){function o(){p2||(p2=!0,Je.calledRun=!0,O1||(U1=!0,Je.noFSInit||Oe.init.initialized||Oe.init(),Oe.ignorePermissions=!1,gg(V1),Je.onRuntimeInitialized&&Je.onRuntimeInitialized(),function(){if(Je.postRun)for(typeof Je.postRun=="function"&&(Je.postRun=[Je.postRun]);Je.postRun.length;)a=Je.postRun.shift(),W1.unshift(a);var a;gg(W1)}()))}vd>0||(function(){if(Je.preRun)for(typeof Je.preRun=="function"&&(Je.preRun=[Je.preRun]);Je.preRun.length;)a=Je.preRun.shift(),j1.unshift(a);var a;gg(j1)}(),vd>0||(Je.setStatus?(Je.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Je.setStatus("")},1),o()},1)):o()))}if(Je.___start_em_js=132724,Je.___stop_em_js=132822,Je.addRunDependency=Y1,Je.removeRunDependency=K1,Je.FS_createPath=Oe.createPath,Je.FS_createDataFile=Oe.createDataFile,Je.FS_createLazyFile=Oe.createLazyFile,Je.FS_createDevice=Oe.createDevice,Je.FS_unlink=Oe.unlink,jf=function i(){p2||Jh(),p2||(jf=i)},Je.preInit)for(typeof Je.preInit=="function"&&(Je.preInit=[Je.preInit]);Je.preInit.length>0;)Je.preInit.pop()();function NA(){}function h2(i){return(i||NA).__cache__}function xf(i,o){var a=h2(o),u=a[i];return u||((u=Object.create((o||NA).prototype)).ptr=i,a[i]=u)}Jh(),NA.prototype=Object.create(NA.prototype),NA.prototype.constructor=NA,NA.prototype.__class__=NA,NA.__cache__={},Je.WrapperObject=NA,Je.getCache=h2,Je.wrapPointer=xf,Je.castObject=function(i,o){return xf(i.ptr,o)},Je.NULL=xf(0),Je.destroy=function(i){if(!i.__destroy__)throw"Error: Cannot destroy object. (Did you create it yourself?)";i.__destroy__(),delete h2(i.__class__)[i.ptr]},Je.compare=function(i,o){return i.ptr===o.ptr},Je.getPointer=function(i){return i.ptr},Je.getClass=function(i){return i.__class__};var cn={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(cn.needed){for(var i=0;i<cn.temps.length;i++)Je._free(cn.temps[i]);cn.temps.length=0,Je._free(cn.buffer),cn.buffer=0,cn.size+=cn.needed,cn.needed=0}cn.buffer||(cn.size+=128,cn.buffer=Je._malloc(cn.size),ug(cn.buffer)),cn.pos=0},alloc:function(i,o){ug(cn.buffer);var a,u=o.BYTES_PER_ELEMENT,p=i.length*u;return p=p+7&-8,cn.pos+p>=cn.size?(ug(p>0),cn.needed+=p,a=Je._malloc(p),cn.temps.push(a)):(a=cn.buffer+cn.pos,cn.pos+=p),a},copy:function(i,o,a){switch(a>>>=0,o.BYTES_PER_ELEMENT){case 2:a>>>=1;break;case 4:a>>>=2;break;case 8:a>>>=3}for(var u=0;u<i.length;u++)o[a+u]=i[u]}};function Md(i){if(typeof i=="string"){var o=q1(i),a=cn.alloc(o,No);return cn.copy(o,No,a),a}return i}function M0(){throw"cannot construct a VoidPtr, no constructor in IDL"}function is(){throw"cannot construct a espeak_VOICE, no constructor in IDL"}function va(){throw"cannot construct a espeak_EVENT, no constructor in IDL"}function ra(){this.ptr=vh(),h2(ra)[this.ptr]=this}M0.prototype=Object.create(NA.prototype),M0.prototype.constructor=M0,M0.prototype.__class__=M0,M0.__cache__={},Je.VoidPtr=M0,M0.prototype.__destroy__=M0.prototype.__destroy__=function(){var i=this.ptr;J1(i)},is.prototype=Object.create(NA.prototype),is.prototype.constructor=is,is.prototype.__class__=is,is.__cache__={},Je.espeak_VOICE=is,is.prototype.get_name=is.prototype.get_name=function(){var i=this.ptr;return vf($1(i))},is.prototype.set_name=is.prototype.set_name=function(i){var o=this.ptr;cn.prepare(),i=i&&typeof i=="object"?i.ptr:Md(i),eh(o,i)},Object.defineProperty(is.prototype,"name",{get:is.prototype.get_name,set:is.prototype.set_name}),is.prototype.get_languages=is.prototype.get_languages=function(i){var o=this.ptr;return i&&typeof i=="object"&&(i=i.ptr),th(o,i)},Object.defineProperty(is.prototype,"languages",{get:is.prototype.get_languages}),is.prototype.get_identifier=is.prototype.get_identifier=function(){var i=this.ptr;return vf(rh(i))},is.prototype.set_identifier=is.prototype.set_identifier=function(i){var o=this.ptr;cn.prepare(),i=i&&typeof i=="object"?i.ptr:Md(i),sh(o,i)},Object.defineProperty(is.prototype,"identifier",{get:is.prototype.get_identifier,set:is.prototype.set_identifier}),is.prototype.get_gender=is.prototype.get_gender=function(){var i=this.ptr;return ah(i)},is.prototype.set_gender=is.prototype.set_gender=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),nh(o,i)},Object.defineProperty(is.prototype,"gender",{get:is.prototype.get_gender,set:is.prototype.set_gender}),is.prototype.get_age=is.prototype.get_age=function(){var i=this.ptr;return ih(i)},is.prototype.set_age=is.prototype.set_age=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),oh(o,i)},Object.defineProperty(is.prototype,"age",{get:is.prototype.get_age,set:is.prototype.set_age}),is.prototype.get_variant=is.prototype.get_variant=function(){var i=this.ptr;return Ah(i)},is.prototype.set_variant=is.prototype.set_variant=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),lh(o,i)},Object.defineProperty(is.prototype,"variant",{get:is.prototype.get_variant,set:is.prototype.set_variant}),is.prototype.get_xx1=is.prototype.get_xx1=function(){var i=this.ptr;return ch(i)},is.prototype.set_xx1=is.prototype.set_xx1=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),uh(o,i)},Object.defineProperty(is.prototype,"xx1",{get:is.prototype.get_xx1,set:is.prototype.set_xx1}),is.prototype.get_score=is.prototype.get_score=function(){var i=this.ptr;return dh(i)},is.prototype.set_score=is.prototype.set_score=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),fh(o,i)},Object.defineProperty(is.prototype,"score",{get:is.prototype.get_score,set:is.prototype.set_score}),is.prototype.get_spare=is.prototype.get_spare=function(){var i=this.ptr;return gh(i)},is.prototype.set_spare=is.prototype.set_spare=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),ph(o,i)},Object.defineProperty(is.prototype,"spare",{get:is.prototype.get_spare,set:is.prototype.set_spare}),is.prototype.__destroy__=is.prototype.__destroy__=function(){var i=this.ptr;hh(i)},va.prototype=Object.create(NA.prototype),va.prototype.constructor=va,va.prototype.__class__=va,va.__cache__={},Je.espeak_EVENT=va,va.prototype.get_type=va.prototype.get_type=function(){var i=this.ptr;return mh(i)},Object.defineProperty(va.prototype,"type",{get:va.prototype.get_type}),va.prototype.get_unique_identifier=va.prototype.get_unique_identifier=function(){var i=this.ptr;return bh(i)},Object.defineProperty(va.prototype,"unique_identifier",{get:va.prototype.get_unique_identifier}),va.prototype.get_text_position=va.prototype.get_text_position=function(){var i=this.ptr;return Ch(i)},Object.defineProperty(va.prototype,"text_position",{get:va.prototype.get_text_position}),va.prototype.get_length=va.prototype.get_length=function(){var i=this.ptr;return wh(i)},Object.defineProperty(va.prototype,"length",{get:va.prototype.get_length}),va.prototype.get_audio_position=va.prototype.get_audio_position=function(){var i=this.ptr;return Ih(i)},Object.defineProperty(va.prototype,"audio_position",{get:va.prototype.get_audio_position}),va.prototype.get_sample=va.prototype.get_sample=function(){var i=this.ptr;return yh(i)},Object.defineProperty(va.prototype,"sample",{get:va.prototype.get_sample}),va.prototype.get_user_data=va.prototype.get_user_data=function(){var i=this.ptr;return kh(i)},Object.defineProperty(va.prototype,"user_data",{get:va.prototype.get_user_data}),va.prototype.__destroy__=va.prototype.__destroy__=function(){var i=this.ptr;_h(i)},ra.prototype=Object.create(NA.prototype),ra.prototype.constructor=ra,ra.prototype.__class__=ra,ra.__cache__={},Je.eSpeakNGWorker=ra,ra.prototype.synth_=ra.prototype.synth_=function(i,o){var a=this.ptr;cn.prepare(),i=i&&typeof i=="object"?i.ptr:Md(i),o&&typeof o=="object"&&(o=o.ptr),xh(a,i,o)},ra.prototype.synth_ipa_=ra.prototype.synth_ipa_=function(i,o){var a=this.ptr;return cn.prepare(),i=i&&typeof i=="object"?i.ptr:Md(i),o=o&&typeof o=="object"?o.ptr:Md(o),Mh(a,i,o)},ra.prototype.getSizeOfEventStruct_=ra.prototype.getSizeOfEventStruct_=function(){var i=this.ptr;return Eh(i)},ra.prototype.set_voice=ra.prototype.set_voice=function(i,o,a,u,p){var h=this.ptr;return cn.prepare(),i=i&&typeof i=="object"?i.ptr:Md(i),o=o&&typeof o=="object"?o.ptr:Md(o),a&&typeof a=="object"&&(a=a.ptr),u&&typeof u=="object"&&(u=u.ptr),p&&typeof p=="object"&&(p=p.ptr),a===void 0?Bh(h,i,o):u===void 0?Th(h,i,o,a):p===void 0?Ph(h,i,o,a,u):Dh(h,i,o,a,u,p)},ra.prototype.get_voices=ra.prototype.get_voices=function(i){var o=this.ptr;return i&&typeof i=="object"&&(i=i.ptr),xf(Sh(o,i),is)},ra.prototype.set_voices=ra.prototype.set_voices=function(i,o){var a=this.ptr;cn.prepare(),i&&typeof i=="object"&&(i=i.ptr),o&&typeof o=="object"&&(o=o.ptr),Gh(a,i,o)},Object.defineProperty(ra.prototype,"voices",{get:ra.prototype.get_voices,set:ra.prototype.set_voices}),ra.prototype.get_samplerate=ra.prototype.get_samplerate=function(){var i=this.ptr;return Fh(i)},Object.defineProperty(ra.prototype,"samplerate",{get:ra.prototype.get_samplerate}),ra.prototype.get_rate=ra.prototype.get_rate=function(){var i=this.ptr;return zh(i)},ra.prototype.set_rate=ra.prototype.set_rate=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),Oh(o,i)},Object.defineProperty(ra.prototype,"rate",{get:ra.prototype.get_rate,set:ra.prototype.set_rate}),ra.prototype.get_pitch=ra.prototype.get_pitch=function(){var i=this.ptr;return Qh(i)},ra.prototype.set_pitch=ra.prototype.set_pitch=function(i){var o=this.ptr;i&&typeof i=="object"&&(i=i.ptr),Nh(o,i)},Object.defineProperty(ra.prototype,"pitch",{get:ra.prototype.get_pitch,set:ra.prototype.set_pitch}),ra.prototype.__destroy__=ra.prototype.__destroy__=function(){var i=this.ptr;Lh(i)},function(){function i(){Je.espeakEVENT_LIST_TERMINATED=Rh(),Je.espeakEVENT_WORD=jh(),Je.espeakEVENT_SENTENCE=Vh(),Je.espeakEVENT_MARK=Wh(),Je.espeakEVENT_PLAY=Uh(),Je.espeakEVENT_END=Hh(),Je.espeakEVENT_MSG_TERMINATED=Yh(),Je.espeakEVENT_PHONEME=Kh(),Je.espeakEVENT_SAMPLERATE=qh()}U1?i():H1(i)}(),ra.prototype.list_voices=function(){for(var i,o=[],a=this.get_voices(i=0);a.ptr!=0;a=this.get_voices(++i)){let y=function(k){for(var _="",v=k,M=a.get_languages(v++);M!=0;)_+=String.fromCharCode(M),M=a.get_languages(v++);return _};for(var u={name:a.get_name(),identifier:a.get_identifier(),languages:[]},p=0,h=a.get_languages(p);h!=0;){var C={priority:h,name:y(++p)};u.languages.push(C),p+=C.name.length+1,h=a.get_languages(p)}o.push(u)}return o};var a_=["list_terminated","word","sentence","mark","play","end","msg_terminated","phoneme","samplerate"];ra.prototype.synthesize=function(i,o){var a=this.getSizeOfEventStruct_(),u=addFunction(function(p,h,C){for(var y=new Float32Array(2*h),k=0;k<h;k++)y[2*k]=Math.max(-1,Math.min(1,t_(p+2*k,"i16")/32768)),y[2*k+1]=y[2*k];var _=[];for(p=C,ev=xf(p,va);ev.get_type()!=Je.espeakEVENT_LIST_TERMINATED;ev=xf(p+=a,va))_.push({type:a_[ev.get_type()],text_position:ev.get_text_position(),word_length:ev.get_length(),audio_position:ev.get_audio_position()});return o(y,_)?1:0});this.synth_(i,u),removeFunction(u)},ra.prototype.synthesize_ipa=function(i,o){var a="espeak-ng-ipa-tmp-"+Math.random().toString().substring(2),u="",p=this.synth_ipa_(i,a);return p==0&&(u=Oe.readFile(a,{encoding:"utf8"})),Oe.unlink(a),{code:p,ipa:u}};const $h=new Promise(i=>{Je.calledRun?i(new Je.eSpeakNGWorker):Je.onRuntimeInitialized=()=>i(new Je.eSpeakNGWorker)}),n_=["en"],i_=$h.then(i=>{const o=i.list_voices().map(({name:u,identifier:p,languages:h})=>({name:u,identifier:p,languages:h.filter(C=>n_.includes(C.name.split("-")[0]))})).filter(u=>u.languages.length>0),a=new Set;for(const u of o){a.add(u.identifier);for(const p of u.languages)a.add(p.name)}return{voices:o,identifiers:a}});function o_(i){if(i.includes("."))return i;if(i.includes(":")){let[h,C]=i.split(":").map(Number);return C===0?`${h} o'clock`:C<10?`${h} oh ${C}`:`${h} ${C}`}let o=parseInt(i.slice(0,4),10);if(o<1100||o%1e3<10)return i;let a=i.slice(0,2),u=parseInt(i.slice(2,4),10),p=i.endsWith("s")?"s":"";if(o%1e3>=100&&o%1e3<=999){if(u===0)return`${a} hundred${p}`;if(u<10)return`${a} oh ${u}${p}`}return`${a} ${u}${p}`}function A_(i){const o=i[0]==="$"?"dollar":"pound";if(isNaN(Number(i.slice(1))))return`${i.slice(1)} ${o}s`;if(!i.includes(".")){let h=i.slice(1)==="1"?"":"s";return`${i.slice(1)} ${o}${h}`}const[a,u]=i.slice(1).split("."),p=parseInt(u.padEnd(2,"0"),10);return`${a} ${o}${a==="1"?"":"s"} and ${p} ${i[0]==="$"?p===1?"cent":"cents":p===1?"penny":"pence"}`}function l_(i){let[o,a]=i.split(".");return`${o} point ${a.split("").join(" ")}`}const c_=new RegExp(`(\\s*[${em=';:,.!?¡¿—…"«»“”(){}[]',em.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}]+\\s*)+`,"g");var em;async function tm(i,o="a",a=!0){a&&(i=function(y){return y.replace(/[‘’]/g,"'").replace(/«/g,"“").replace(/»/g,"”").replace(/[“”]/g,'"').replace(/\(/g,"«").replace(/\)/g,"»").replace(/、/g,", ").replace(/。/g,". ").replace(/！/g,"! ").replace(/，/g,", ").replace(/：/g,": ").replace(/；/g,"; ").replace(/？/g,"? ").replace(/[^\S \n]/g," ").replace(/  +/," ").replace(new RegExp("(?<=\\n) +(?=\\n)","g"),"").replace(/\bD[Rr]\.(?= [A-Z])/g,"Doctor").replace(/\b(?:Mr\.|MR\.(?= [A-Z]))/g,"Mister").replace(/\b(?:Ms\.|MS\.(?= [A-Z]))/g,"Miss").replace(/\b(?:Mrs\.|MRS\.(?= [A-Z]))/g,"Mrs").replace(/\betc\.(?! [A-Z])/gi,"etc").replace(/\b(y)eah?\b/gi,"$1e'a").replace(new RegExp("\\d*\\.\\d+|\\b\\d{4}s?\\b|(?<!:)\\b(?:[1-9]|1[0-2]):[0-5]\\d\\b(?!:)","g"),o_).replace(new RegExp("(?<=\\d),(?=\\d)","g"),"").replace(/[$£]\d+(?:\.\d+)?(?: hundred| thousand| (?:[bm]|tr)illion)*\b|[$£]\d+\.\d\d?\b/gi,A_).replace(/\d*\.\d+/g,l_).replace(new RegExp("(?<=\\d)-(?=\\d)","g")," to ").replace(new RegExp("(?<=\\d)S","g")," S").replace(new RegExp("(?<=[BCDFGHJ-NP-TV-Z])'?s\\b","g"),"'S").replace(new RegExp("(?<=X')S\\b","g"),"s").replace(/(?:[A-Za-z]\.){2,} [a-z]/g,k=>k.replace(/\./g,"-")).replace(new RegExp("(?<=[A-Z])\\.(?=[A-Z])","gi"),"-").trim()}(i));const u=function(y,k){const _=[];let v=0;for(const M of y.matchAll(k)){const B=M[0];v<M.index&&_.push({match:!1,text:y.slice(v,M.index)}),B.length>0&&_.push({match:!0,text:B}),v=M.index+B.length}return v<y.length&&_.push({match:!1,text:y.slice(v)}),_}(i,c_),p=o==="a"?"en-us":"en";let C=(await Promise.all(u.map(async({match:y,text:k})=>y?k:(await(async(_,v="en-us")=>{var S;const M=await $h,{identifiers:B}=await i_;if(!B.has(v))throw new Error(`Invalid language identifier: "${v}". Should be one of: ${Array.from(B).toSorted().join(", ")}.`);return M.set_voice(v),((S=M.synthesize_ipa(_).ipa)==null?void 0:S.split(`
`).filter(N=>N.length>0))??[]})(k,p)).join(" ")))).join("").replace(/kəkˈoːɹoʊ/g,"kˈoʊkəɹoʊ").replace(/kəkˈɔːɹəʊ/g,"kˈəʊkəɹəʊ").replace(/ʲ/g,"j").replace(/r/g,"ɹ").replace(/x/g,"k").replace(/ɬ/g,"l").replace(new RegExp("(?<=[a-zɹː])(?=hˈʌndɹɪd)","g")," ").replace(/ z(?=[;:,.!?¡¿—…"«»“” ]|$)/g,"z");return o==="a"&&(C=C.replace(new RegExp("(?<=nˈaɪn)ti(?!ː)","g"),"di")),C.trim()}function hg(i,o=!0){return".!?…。？！".includes(i)||o&&i===`
`}function u_(i){return`"')]}」』`.includes(i)}function d_(i,o){let a=o;for(;a<i.length&&!/\s/.test(i[a]);)++a;return i.substring(o,a)}const f_=new Set(["mr","mrs","ms","dr","prof","sr","jr","sgt","col","gen","rep","sen","gov","lt","maj","capt","st","mt","etc","co","inc","ltd","dept","vs","p","pg","jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","sun","mon","tu","tue","tues","wed","th","thu","thur","thurs","fri","sat"]);function g_(i){return i=i.replace(/['’]s$/i,"").replace(/\.+$/,""),f_.has(i.toLowerCase())}const rm=new Map([[")","("],["]","["],["}","{"],["》","《"],["〉","〈"],["›","‹"],["»","«"],["〉","〈"],["」","「"],["』","『"],["〕","〔"],["】","【"]]),p_=new Set(rm.values());function h_(i,o,a,u){if(i==='"'||i==="'")return i==="'"&&a>0&&a<u.length-1&&/[A-Za-z]/.test(u[a-1])&&/[A-Za-z]/.test(u[a+1])?void 0:void(o.length&&o.at(-1)===i?o.pop():o.push(i));if(p_.has(i))return void o.push(i);const p=rm.get(i);p&&o.length&&o.at(-1)===p&&o.pop()}class m2{constructor(){this._buffer="",this._sentences=[],this._resolver=null,this._closed=!1}push(...o){for(const a of o)this._buffer+=a,this._process()}close(){if(this._closed)throw new Error("Stream is already closed.");this._closed=!0,this.flush()}flush(){const o=this._buffer.trim();o.length>0&&this._sentences.push(o),this._buffer="",this._resolve()}_resolve(){this._resolver&&(this._resolver(),this._resolver=null)}_process(){let o=0;const a=this._buffer,u=a.length;let p=0,h=[];const C=y=>{let k=y;for(;k+1<u&&hg(a[k+1],!1);)++k;for(;k+1<u&&u_(a[k+1]);)++k;let _=k+1;for(;_<u&&/\s/.test(a[_]);)++_;return{end:k,nextNonSpace:_}};for(;p<u;){const y=a[p];if(h_(y,h,p,a),h.length===0&&hg(y)){const k=a.slice(o,p);if(/(^|\n)\d+$/.test(k)){++p;continue}const{end:_,nextNonSpace:v}=C(p);if(p===v-1&&y!==`
`){++p;continue}if(v===u)break;let M=p-1;for(;M>=0&&/\S/.test(a[M]);)M--;M=Math.max(o,M+1);const B=d_(a,M);if(!B){++p;continue}if((/https?[,:]\/\//.test(B)||B.includes("@"))&&!hg(B.at(-1))){p=M+B.length;continue}if(g_(B)){++p;continue}if(/^([A-Za-z]\.)+$/.test(B)&&v<u&&/[A-Z]/.test(a[v])){++p;continue}if(y==="."&&v<u&&/[a-z]/.test(a[v])){++p;continue}const S=a.substring(o,_+1).trim();if(S==="..."||S==="…"){++p;continue}S&&this._sentences.push(S),p=o=_+1}else++p}this._buffer=a.substring(o),this._sentences.length>0&&this._resolve()}async*[Symbol.asyncIterator](){if(this._resolver)throw new Error("Another iterator is already active.");for(;;)if(this._sentences.length>0)yield this._sentences.shift();else{if(this._closed)break;await new Promise(o=>{this._resolver=o})}}[Symbol.iterator](){this.flush();const o=this._sentences[Symbol.iterator]();return this._sentences=[],o}get sentences(){return this._sentences}}var Wf={};const Uf=Object.freeze({af_heart:{name:"Heart",language:"en-us",gender:"Female",traits:"❤️",targetQuality:"A",overallGrade:"A"},af_alloy:{name:"Alloy",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_aoede:{name:"Aoede",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_bella:{name:"Bella",language:"en-us",gender:"Female",traits:"🔥",targetQuality:"A",overallGrade:"A-"},af_jessica:{name:"Jessica",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_kore:{name:"Kore",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_nicole:{name:"Nicole",language:"en-us",gender:"Female",traits:"🎧",targetQuality:"B",overallGrade:"B-"},af_nova:{name:"Nova",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_river:{name:"River",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_sarah:{name:"Sarah",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_sky:{name:"Sky",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C-"},am_adam:{name:"Adam",language:"en-us",gender:"Male",targetQuality:"D",overallGrade:"F+"},am_echo:{name:"Echo",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_eric:{name:"Eric",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_fenrir:{name:"Fenrir",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_liam:{name:"Liam",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_michael:{name:"Michael",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_onyx:{name:"Onyx",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_puck:{name:"Puck",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_santa:{name:"Santa",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D-"},bf_emma:{name:"Emma",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"B",overallGrade:"B-"},bf_isabella:{name:"Isabella",language:"en-gb",gender:"Female",targetQuality:"B",overallGrade:"C"},bm_george:{name:"George",language:"en-gb",gender:"Male",targetQuality:"B",overallGrade:"C"},bm_lewis:{name:"Lewis",language:"en-gb",gender:"Male",targetQuality:"C",overallGrade:"D+"},bf_alice:{name:"Alice",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bf_lily:{name:"Lily",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bm_daniel:{name:"Daniel",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"},bm_fable:{name:"Fable",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"B",overallGrade:"C"}}),mg=new Map;async function m_(i){if(mg.has(i))return mg.get(i);const o=new Float32Array(await async function(a){if(Wf!=null&&Wf.readFile){const y=typeof __dirname<"u"?__dirname:void 0,k=Wf.resolve(y,`../voices/${a}.bin`),{buffer:_}=await Wf.readFile(k);return _}const u=`https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/voices/${a}.bin`;let p;try{p=await caches.open("kokoro-voices");const y=await p.match(u);if(y)return await y.arrayBuffer()}catch(y){console.warn("Unable to open cache",y)}const h=await fetch(u),C=await h.arrayBuffer();if(p)try{await p.put(u,new Response(C,{headers:h.headers}))}catch(y){console.warn("Unable to cache file",y)}return C}(i));return mg.set(i,o),o}class bg{constructor(o,a){this.model=o,this.tokenizer=a}static async from_pretrained(o,{dtype:a="fp32",device:u=null,progress_callback:p=null}={}){const h=Jk.from_pretrained(o,{progress_callback:p,dtype:a,device:u}),C=Xk.from_pretrained(o,{progress_callback:p}),y=await Promise.all([h,C]);return new bg(...y)}get voices(){return Uf}list_voices(){console.table(Uf)}_validate_voice(o){if(!Uf.hasOwnProperty(o))throw console.error(`Voice "${o}" not found. Available voices:`),console.table(Uf),new Error(`Voice "${o}" not found. Should be one of: ${Object.keys(Uf).join(", ")}.`);return o.at(0)}async generate(o,{voice:a="af_heart",speed:u=1}={}){const p=this._validate_voice(a),h=await tm(o,p),{input_ids:C}=this.tokenizer(h,{truncation:!0});return this.generate_from_ids(C,{voice:a,speed:u})}async generate_from_ids(o,{voice:a="af_heart",speed:u=1}={}){const p=256*Math.min(Math.max(o.dims.at(-1)-2,0),509),h=(await m_(a)).slice(p,p+256),C={input_ids:o,style:new G1("float32",h,[1,256]),speed:new G1("float32",[u],[1])},{waveform:y}=await this.model(C);return new Zk(y.data,24e3)}async*stream(o,{voice:a="af_heart",speed:u=1,split_pattern:p=null}={}){const h=this._validate_voice(a);let C;if(o instanceof m2)C=o;else{if(typeof o!="string")throw new Error("Invalid input type. Expected string or TextSplitterStream.");{C=new m2;const y=p?o.split(p).map(k=>k.trim()).filter(k=>k.length>0):[o];C.push(...y)}}for await(const y of C){const k=await tm(y,h),{input_ids:_}=this.tokenizer(k,{truncation:!0}),v=await this.generate_from_ids(_,{voice:a,speed:u});yield{text:y,phonemes:k,audio:v}}}}const b2=new Map,Ed=[],b_=(i,o,a)=>{if(o&&typeof o.init=="function"&&typeof o.createInferenceSessionHandler=="function"){const u=b2.get(i);if(u===void 0)b2.set(i,{backend:o,priority:a});else{if(u.priority>a)return;if(u.priority===a&&u.backend!==o)throw new Error(`cannot register backend "${i}" using priority ${a}`)}if(a>=0){const p=Ed.indexOf(i);p!==-1&&Ed.splice(p,1);for(let h=0;h<Ed.length;h++)if(b2.get(Ed[h]).priority<=a){Ed.splice(h,0,i);return}Ed.push(i)}return}throw new TypeError("not a valid backend")},C_=async i=>{const o=b2.get(i);if(!o)return"backend not found.";if(o.initialized)return o.backend;if(o.aborted)return o.error;{const a=!!o.initPromise;try{return a||(o.initPromise=o.backend.init(i)),await o.initPromise,o.initialized=!0,o.backend}catch(u){return a||(o.error=`${u}`,o.aborted=!0),o.error}finally{delete o.initPromise}}},sm=async i=>{const o=i.executionProviders||[],a=o.map(k=>typeof k=="string"?k:k.name),u=a.length===0?Ed:a;let p;const h=[],C=new Set;for(const k of u){const _=await C_(k);typeof _=="string"?h.push({name:k,err:_}):(p||(p=_),p===_&&C.add(k))}if(!p)throw new Error(`no available backend found. ERR: ${h.map(k=>`[${k.name}] ${k.err}`).join(", ")}`);for(const{name:k,err:_}of h)a.includes(k)&&console.warn(`removing requested execution provider "${k}" from session options because it is not available: ${_}`);const y=o.filter(k=>C.has(typeof k=="string"?k:k.name));return[p,new Proxy(i,{get:(k,_)=>_==="executionProviders"?y:Reflect.get(k,_)})]},w_="1.20.1";let am="warning";const Ql={wasm:{},webgl:{},webgpu:{},versions:{common:w_},set logLevel(i){if(i!==void 0){if(typeof i!="string"||["verbose","info","warning","error","fatal"].indexOf(i)===-1)throw new Error(`Unsupported logging level: ${i}`);am=i}},get logLevel(){return am}};Object.defineProperty(Ql,"logLevel",{enumerable:!0});const I_=Ql,y_=(i,o)=>{const a=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);a.width=i.dims[3],a.height=i.dims[2];const u=a.getContext("2d");if(u!=null){let p,h;(o==null?void 0:o.tensorLayout)!==void 0&&o.tensorLayout==="NHWC"?(p=i.dims[2],h=i.dims[3]):(p=i.dims[3],h=i.dims[2]);const C=(o==null?void 0:o.format)!==void 0?o.format:"RGB",y=o==null?void 0:o.norm;let k,_;y===void 0||y.mean===void 0?k=[255,255,255,255]:typeof y.mean=="number"?k=[y.mean,y.mean,y.mean,y.mean]:(k=[y.mean[0],y.mean[1],y.mean[2],0],y.mean[3]!==void 0&&(k[3]=y.mean[3])),y===void 0||y.bias===void 0?_=[0,0,0,0]:typeof y.bias=="number"?_=[y.bias,y.bias,y.bias,y.bias]:(_=[y.bias[0],y.bias[1],y.bias[2],0],y.bias[3]!==void 0&&(_[3]=y.bias[3]));const v=h*p;let M=0,B=v,S=v*2,N=-1;C==="RGBA"?(M=0,B=v,S=v*2,N=v*3):C==="RGB"?(M=0,B=v,S=v*2):C==="RBG"&&(M=0,S=v,B=v*2);for(let V=0;V<h;V++)for(let Z=0;Z<p;Z++){const O=(i.data[M++]-_[0])*k[0],Q=(i.data[B++]-_[1])*k[1],q=(i.data[S++]-_[2])*k[2],f=N===-1?255:(i.data[N++]-_[3])*k[3];u.fillStyle="rgba("+O+","+Q+","+q+","+f+")",u.fillRect(Z,V,1,1)}if("toDataURL"in a)return a.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},k_=(i,o)=>{const a=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let u;if(a!=null){let p,h,C;(o==null?void 0:o.tensorLayout)!==void 0&&o.tensorLayout==="NHWC"?(p=i.dims[2],h=i.dims[1],C=i.dims[3]):(p=i.dims[3],h=i.dims[2],C=i.dims[1]);const y=o!==void 0&&o.format!==void 0?o.format:"RGB",k=o==null?void 0:o.norm;let _,v;k===void 0||k.mean===void 0?_=[255,255,255,255]:typeof k.mean=="number"?_=[k.mean,k.mean,k.mean,k.mean]:(_=[k.mean[0],k.mean[1],k.mean[2],255],k.mean[3]!==void 0&&(_[3]=k.mean[3])),k===void 0||k.bias===void 0?v=[0,0,0,0]:typeof k.bias=="number"?v=[k.bias,k.bias,k.bias,k.bias]:(v=[k.bias[0],k.bias[1],k.bias[2],0],k.bias[3]!==void 0&&(v[3]=k.bias[3]));const M=h*p;if(o!==void 0&&(o.format!==void 0&&C===4&&o.format!=="RGBA"||C===3&&o.format!=="RGB"&&o.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const B=4;let S=0,N=1,V=2,Z=3,O=0,Q=M,q=M*2,f=-1;y==="RGBA"?(O=0,Q=M,q=M*2,f=M*3):y==="RGB"?(O=0,Q=M,q=M*2):y==="RBG"&&(O=0,q=M,Q=M*2),u=a.createImageData(p,h);for(let I=0;I<h*p;S+=B,N+=B,V+=B,Z+=B,I++)u.data[S]=(i.data[O++]-v[0])*_[0],u.data[N]=(i.data[Q++]-v[1])*_[1],u.data[V]=(i.data[q++]-v[2])*_[2],u.data[Z]=f===-1?255:(i.data[f++]-v[3])*_[3]}else throw new Error("Can not access image data");return u},Cg=(i,o)=>{if(i===void 0)throw new Error("Image buffer must be defined");if(o.height===void 0||o.width===void 0)throw new Error("Image height and width must be defined");if(o.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:a,width:u}=o,p=o.norm??{mean:255,bias:0};let h,C;typeof p.mean=="number"?h=[p.mean,p.mean,p.mean,p.mean]:h=[p.mean[0],p.mean[1],p.mean[2],p.mean[3]??255],typeof p.bias=="number"?C=[p.bias,p.bias,p.bias,p.bias]:C=[p.bias[0],p.bias[1],p.bias[2],p.bias[3]??0];const y=o.format!==void 0?o.format:"RGBA",k=o.tensorFormat!==void 0&&o.tensorFormat!==void 0?o.tensorFormat:"RGB",_=a*u,v=k==="RGBA"?new Float32Array(_*4):new Float32Array(_*3);let M=4,B=0,S=1,N=2,V=3,Z=0,O=_,Q=_*2,q=-1;y==="RGB"&&(M=3,B=0,S=1,N=2,V=-1),k==="RGBA"?q=_*3:k==="RBG"?(Z=0,Q=_,O=_*2):k==="BGR"&&(Q=0,O=_,Z=_*2);for(let I=0;I<_;I++,B+=M,N+=M,S+=M,V+=M)v[Z++]=(i[B]+C[0])/h[0],v[O++]=(i[S]+C[1])/h[1],v[Q++]=(i[N]+C[2])/h[2],q!==-1&&V!==-1&&(v[q++]=(i[V]+C[3])/h[3]);return k==="RGBA"?new vl("float32",v,[1,4,a,u]):new vl("float32",v,[1,3,a,u])},__=async(i,o)=>{const a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,u=typeof ImageData<"u"&&i instanceof ImageData,p=typeof ImageBitmap<"u"&&i instanceof ImageBitmap,h=typeof i=="string";let C,y=o??{};const k=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},_=v=>typeof HTMLCanvasElement<"u"&&v instanceof HTMLCanvasElement||v instanceof OffscreenCanvas?v.getContext("2d"):null;if(a){const v=k();v.width=i.width,v.height=i.height;const M=_(v);if(M!=null){let B=i.height,S=i.width;if(o!==void 0&&o.resizedHeight!==void 0&&o.resizedWidth!==void 0&&(B=o.resizedHeight,S=o.resizedWidth),o!==void 0){if(y=o,o.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");y.tensorFormat="RGBA",y.height=B,y.width=S}else y.tensorFormat="RGBA",y.height=B,y.width=S;M.drawImage(i,0,0),C=M.getImageData(0,0,S,B).data}else throw new Error("Can not access image data")}else if(u){let v,M;if(o!==void 0&&o.resizedWidth!==void 0&&o.resizedHeight!==void 0?(v=o.resizedHeight,M=o.resizedWidth):(v=i.height,M=i.width),o!==void 0&&(y=o),y.format="RGBA",y.height=v,y.width=M,o!==void 0){const B=k();B.width=M,B.height=v;const S=_(B);if(S!=null)S.putImageData(i,0,0),C=S.getImageData(0,0,M,v).data;else throw new Error("Can not access image data")}else C=i.data}else if(p){if(o===void 0)throw new Error("Please provide image config with format for Imagebitmap");const v=k();v.width=i.width,v.height=i.height;const M=_(v);if(M!=null){const B=i.height,S=i.width;return M.drawImage(i,0,0,S,B),C=M.getImageData(0,0,S,B).data,y.height=B,y.width=S,Cg(C,y)}else throw new Error("Can not access image data")}else{if(h)return new Promise((v,M)=>{const B=k(),S=_(B);if(!i||!S)return M();const N=new Image;N.crossOrigin="Anonymous",N.src=i,N.onload=()=>{B.width=N.width,B.height=N.height,S.drawImage(N,0,0,B.width,B.height);const V=S.getImageData(0,0,B.width,B.height);y.height=B.height,y.width=B.width,v(Cg(V.data,y))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(C!==void 0)return Cg(C,y);throw new Error("Input data provided is not supported - aborted tensor creation")},v_=(i,o)=>{const{width:a,height:u,download:p,dispose:h}=o,C=[1,u,a,4];return new vl({location:"texture",type:"float32",texture:i,dims:C,download:p,dispose:h})},x_=(i,o)=>{const{dataType:a,dims:u,download:p,dispose:h}=o;return new vl({location:"gpu-buffer",type:a??"float32",gpuBuffer:i,dims:u,download:p,dispose:h})},M_=(i,o)=>{const{dataType:a,dims:u,download:p,dispose:h}=o;return new vl({location:"ml-tensor",type:a??"float32",mlTensor:i,dims:u,download:p,dispose:h})},E_=(i,o,a)=>new vl({location:"cpu-pinned",type:i,data:o,dims:a??[o.length]}),Mf=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),C2=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let nm=!1;const B_=()=>{if(!nm){nm=!0;const i=typeof BigInt64Array<"u"&&BigInt64Array.from,o=typeof BigUint64Array<"u"&&BigUint64Array.from,a=typeof Float16Array<"u"&&Float16Array.from;i&&(Mf.set("int64",BigInt64Array),C2.set(BigInt64Array,"int64")),o&&(Mf.set("uint64",BigUint64Array),C2.set(BigUint64Array,"uint64")),a?(Mf.set("float16",Float16Array),C2.set(Float16Array,"float16")):Mf.set("float16",Uint16Array)}},T_=i=>{let o=1;for(let a=0;a<i.length;a++){const u=i[a];if(typeof u!="number"||!Number.isSafeInteger(u))throw new TypeError(`dims[${a}] must be an integer, got: ${u}`);if(u<0)throw new RangeError(`dims[${a}] must be a non-negative integer, got: ${u}`);o*=u}return o},P_=(i,o)=>{switch(i.location){case"cpu":return new vl(i.type,i.data,o);case"cpu-pinned":return new vl({location:"cpu-pinned",data:i.data,type:i.type,dims:o});case"texture":return new vl({location:"texture",texture:i.texture,type:i.type,dims:o});case"gpu-buffer":return new vl({location:"gpu-buffer",gpuBuffer:i.gpuBuffer,type:i.type,dims:o});case"ml-tensor":return new vl({location:"ml-tensor",mlTensor:i.mlTensor,type:i.type,dims:o});default:throw new Error(`tensorReshape: tensor location ${i.location} is not supported`)}};let vl=class{constructor(o,a,u){B_();let p,h;if(typeof o=="object"&&"location"in o)switch(this.dataLocation=o.location,p=o.type,h=o.dims,o.location){case"cpu-pinned":{const y=Mf.get(p);if(!y)throw new TypeError(`unsupported type "${p}" to create tensor from pinned buffer`);if(!(o.data instanceof y))throw new TypeError(`buffer should be of type ${y.name}`);this.cpuData=o.data;break}case"texture":{if(p!=="float32")throw new TypeError(`unsupported type "${p}" to create tensor from texture`);this.gpuTextureData=o.texture,this.downloader=o.download,this.disposer=o.dispose;break}case"gpu-buffer":{if(p!=="float32"&&p!=="float16"&&p!=="int32"&&p!=="int64"&&p!=="uint32"&&p!=="uint8"&&p!=="bool"&&p!=="uint4"&&p!=="int4")throw new TypeError(`unsupported type "${p}" to create tensor from gpu buffer`);this.gpuBufferData=o.gpuBuffer,this.downloader=o.download,this.disposer=o.dispose;break}case"ml-tensor":{if(p!=="float32"&&p!=="float16"&&p!=="int32"&&p!=="int64"&&p!=="uint32"&&p!=="uint64"&&p!=="int8"&&p!=="uint8"&&p!=="bool")throw new TypeError(`unsupported type "${p}" to create tensor from MLTensor`);this.mlTensorData=o.mlTensor,this.downloader=o.download,this.disposer=o.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let y,k;if(typeof o=="string")if(p=o,k=u,o==="string"){if(!Array.isArray(a))throw new TypeError("A string tensor's data must be a string array.");y=a}else{const _=Mf.get(o);if(_===void 0)throw new TypeError(`Unsupported tensor type: ${o}.`);if(Array.isArray(a)){if(o==="float16"&&_===Uint16Array||o==="uint4"||o==="int4")throw new TypeError(`Creating a ${o} tensor from number array is not supported. Please use ${_.name} as data.`);o==="uint64"||o==="int64"?y=_.from(a,BigInt):y=_.from(a)}else if(a instanceof _)y=a;else if(a instanceof Uint8ClampedArray)if(o==="uint8")y=Uint8Array.from(a);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${p} tensor's data must be type of ${_}`)}else if(k=a,Array.isArray(o)){if(o.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const _=typeof o[0];if(_==="string")p="string",y=o;else if(_==="boolean")p="bool",y=Uint8Array.from(o);else throw new TypeError(`Invalid element type of data array: ${_}.`)}else if(o instanceof Uint8ClampedArray)p="uint8",y=Uint8Array.from(o);else{const _=C2.get(o.constructor);if(_===void 0)throw new TypeError(`Unsupported type for tensor data: ${o.constructor}.`);p=_,y=o}if(k===void 0)k=[y.length];else if(!Array.isArray(k))throw new TypeError("A tensor's dims must be a number array");h=k,this.cpuData=y,this.dataLocation="cpu"}const C=T_(h);if(this.cpuData&&C!==this.cpuData.length&&!((p==="uint4"||p==="int4")&&Math.ceil(C/2)===this.cpuData.length))throw new Error(`Tensor's size(${C}) does not match data length(${this.cpuData.length}).`);this.type=p,this.dims=h,this.size=C}static async fromImage(o,a){return __(o,a)}static fromTexture(o,a){return v_(o,a)}static fromGpuBuffer(o,a){return x_(o,a)}static fromMLTensor(o,a){return M_(o,a)}static fromPinnedBuffer(o,a,u){return E_(o,a,u)}toDataURL(o){return y_(this,o)}toImageData(o){return k_(this,o)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(o){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const a=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=a,o&&this.disposer&&(this.disposer(),this.disposer=void 0),a}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(o){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return P_(this,o)}};const Nl=vl,im=(i,o)=>{(typeof Ql.trace>"u"?!Ql.wasm.trace:!Ql.trace)||console.timeStamp(`${i}::ORT::${o}`)},om=(i,o)=>{var p;const a=((p=new Error().stack)==null?void 0:p.split(/\r\n|\r|\n/g))||[];let u=!1;for(let h=0;h<a.length;h++){if(u&&!a[h].includes("TRACE_FUNC")){let C=`FUNC_${i}::${a[h].trim().split(" ")[1]}`;o&&(C+=`::${o}`),im("CPU",C);return}a[h].includes("TRACE_FUNC")&&(u=!0)}},wg=i=>{(typeof Ql.trace>"u"?!Ql.wasm.trace:!Ql.trace)||om("BEGIN",i)},Ig=i=>{(typeof Ql.trace>"u"?!Ql.wasm.trace:!Ql.trace)||om("END",i)},D_=class Hk{constructor(o){this.handler=o}async run(o,a,u){wg();const p={};let h={};if(typeof o!="object"||o===null||o instanceof Nl||Array.isArray(o))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let C=!0;if(typeof a=="object"){if(a===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(a instanceof Nl)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(a)){if(a.length===0)throw new TypeError("'fetches' cannot be an empty array.");C=!1;for(const _ of a){if(typeof _!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(_)===-1)throw new RangeError(`'fetches' contains invalid output name: ${_}.`);p[_]=null}if(typeof u=="object"&&u!==null)h=u;else if(typeof u<"u")throw new TypeError("'options' must be an object.")}else{let _=!1;const v=Object.getOwnPropertyNames(a);for(const M of this.outputNames)if(v.indexOf(M)!==-1){const B=a[M];(B===null||B instanceof Nl)&&(_=!0,C=!1,p[M]=B)}if(_){if(typeof u=="object"&&u!==null)h=u;else if(typeof u<"u")throw new TypeError("'options' must be an object.")}else h=a}}else if(typeof a<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const _ of this.inputNames)if(typeof o[_]>"u")throw new Error(`input '${_}' is missing in 'feeds'.`);if(C)for(const _ of this.outputNames)p[_]=null;const y=await this.handler.run(o,p,h),k={};for(const _ in y)if(Object.hasOwnProperty.call(y,_)){const v=y[_];v instanceof Nl?k[_]=v:k[_]=new Nl(v.type,v.data,v.dims)}return Ig(),k}async release(){return this.handler.dispose()}static async create(o,a,u,p){wg();let h,C={};if(typeof o=="string"){if(h=o,typeof a=="object"&&a!==null)C=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(o instanceof Uint8Array){if(h=o,typeof a=="object"&&a!==null)C=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(o instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&o instanceof SharedArrayBuffer){const v=o;let M=0,B=o.byteLength;if(typeof a=="object"&&a!==null)C=a;else if(typeof a=="number"){if(M=a,!Number.isSafeInteger(M))throw new RangeError("'byteOffset' must be an integer.");if(M<0||M>=v.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${v.byteLength}).`);if(B=o.byteLength-M,typeof u=="number"){if(B=u,!Number.isSafeInteger(B))throw new RangeError("'byteLength' must be an integer.");if(B<=0||M+B>v.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${v.byteLength-M}].`);if(typeof p=="object"&&p!==null)C=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else if(typeof u<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof a<"u")throw new TypeError("'options' must be an object.");h=new Uint8Array(v,M,B)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[y,k]=await sm(C),_=await y.createInferenceSessionHandler(h,k);return Ig(),new Hk(_)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}},S_="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";var G_=Object.freeze({__proto__:null,InferenceSession:D_,TRACE:im,TRACE_FUNC_BEGIN:wg,TRACE_FUNC_END:Ig,Tensor:Nl,TrainingSession:class Yk{constructor(o,a,u){this.handler=o,this.hasOptimizerModel=a,this.hasEvalModel=u}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(o,a){const u=o.evalModel||"",p=o.optimizerModel||"",h=a||{},[C,y]=await sm(h);if(C.createTrainingSessionHandler){const k=await C.createTrainingSessionHandler(o.checkpointState,o.trainModel,u,p,y);return new Yk(k,!!o.optimizerModel,!!o.evalModel)}else throw new Error(S_)}typeNarrowingForRunStep(o,a,u,p,h){const C={};let y={};if(typeof u!="object"||u===null||u instanceof Nl||Array.isArray(u))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let k=!0;if(typeof p=="object"){if(p===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(p instanceof Nl)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(p)){if(p.length===0)throw new TypeError("'fetches' cannot be an empty array.");k=!1;for(const _ of p){if(typeof _!="string")throw new TypeError("'fetches' must be a string array or an object.");if(a.indexOf(_)===-1)throw new RangeError(`'fetches' contains invalid output name: ${_}.`);C[_]=null}if(typeof h=="object"&&h!==null)y=h;else if(typeof h<"u")throw new TypeError("'options' must be an object.")}else{let _=!1;const v=Object.getOwnPropertyNames(p);for(const M of a)if(v.indexOf(M)!==-1){const B=p[M];(B===null||B instanceof Nl)&&(_=!0,k=!1,C[M]=B)}if(_){if(typeof h=="object"&&h!==null)y=h;else if(typeof h<"u")throw new TypeError("'options' must be an object.")}else y=p}}else if(typeof p<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const _ of o)if(typeof u[_]>"u")throw new Error(`input '${_}' is missing in 'feeds'.`);if(k)for(const _ of a)C[_]=null;return[C,y]}convertHandlerReturnTypeToMapOfTensors(o){const a={};for(const u in o)if(Object.hasOwnProperty.call(o,u)){const p=o[u];p instanceof Nl?a[u]=p:a[u]=new Nl(p.type,p.data,p.dims)}return a}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(o,a,u){const[p,h]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,o,a,u),C=await this.handler.runTrainStep(o,p,h);return this.convertHandlerReturnTypeToMapOfTensors(C)}async runOptimizerStep(o){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(o||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(o,a,u){if(this.hasEvalModel){const[p,h]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,o,a,u),C=await this.handler.runEvalStep(o,p,h);return this.convertHandlerReturnTypeToMapOfTensors(C)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(o=!0){return this.handler.getParametersSize(o)}async loadParametersBuffer(o,a=!0){const u=await this.getParametersSize(a);if(o.length!==4*u)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(o,a)}async getContiguousParameters(o=!0){return this.handler.getContiguousParameters(o)}async release(){return this.handler.dispose()}},env:I_,registerBackend:b_});/*!
 * ONNX Runtime Web v1.22.0-dev.20250306-ccf8fdd9ea
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var yg=Object.defineProperty,F_=Object.getOwnPropertyDescriptor,z_=Object.getOwnPropertyNames,O_=Object.prototype.hasOwnProperty,Q_=(i=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(i,{get:(o,a)=>(typeof require<"u"?require:o)[a]}):i)(function(i){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+i+'" is not supported')}),xr=(i,o)=>()=>(i&&(o=i(i=0)),o),Hf=(i,o)=>{for(var a in o)yg(i,a,{get:o[a],enumerable:!0})},N_=(i,o,a,u)=>{if(o&&typeof o=="object"||typeof o=="function")for(let p of z_(o))!O_.call(i,p)&&p!==a&&yg(i,p,{get:()=>o[p],enumerable:!(u=F_(o,p))||u.enumerable});return i},w2=i=>N_(yg({},"__esModule",{value:!0}),i),Yf,jc,Bd,Am,lm,cm=xr(()=>{Yf=new Map,jc=[],Bd=(i,o,a)=>{if(o&&typeof o.init=="function"&&typeof o.createInferenceSessionHandler=="function"){let u=Yf.get(i);if(u===void 0)Yf.set(i,{backend:o,priority:a});else{if(u.priority>a)return;if(u.priority===a&&u.backend!==o)throw new Error(`cannot register backend "${i}" using priority ${a}`)}if(a>=0){let p=jc.indexOf(i);p!==-1&&jc.splice(p,1);for(let h=0;h<jc.length;h++)if(Yf.get(jc[h]).priority<=a){jc.splice(h,0,i);return}jc.push(i)}return}throw new TypeError("not a valid backend")},Am=async i=>{let o=Yf.get(i);if(!o)return"backend not found.";if(o.initialized)return o.backend;if(o.aborted)return o.error;{let a=!!o.initPromise;try{return a||(o.initPromise=o.backend.init(i)),await o.initPromise,o.initialized=!0,o.backend}catch(u){return a||(o.error=`${u}`,o.aborted=!0),o.error}finally{delete o.initPromise}}},lm=async i=>{let o=i.executionProviders||[],a=o.map(k=>typeof k=="string"?k:k.name),u=a.length===0?jc:a,p,h=[],C=new Set;for(let k of u){let _=await Am(k);typeof _=="string"?h.push({name:k,err:_}):(p||(p=_),p===_&&C.add(k))}if(!p)throw new Error(`no available backend found. ERR: ${h.map(k=>`[${k.name}] ${k.err}`).join(", ")}`);for(let{name:k,err:_}of h)a.includes(k)&&console.warn(`removing requested execution provider "${k}" from session options because it is not available: ${_}`);let y=o.filter(k=>C.has(typeof k=="string"?k:k.name));return[p,new Proxy(i,{get:(k,_)=>_==="executionProviders"?y:Reflect.get(k,_)})]}}),L_=xr(()=>{cm()}),um,R_=xr(()=>{um="1.22.0-dev.20250306-aafa8d170a"}),kg,xl,dm=xr(()=>{R_(),kg="warning",xl={wasm:{},webgl:{},webgpu:{},versions:{common:um},set logLevel(i){if(i!==void 0){if(typeof i!="string"||["verbose","info","warning","error","fatal"].indexOf(i)===-1)throw new Error(`Unsupported logging level: ${i}`);kg=i}},get logLevel(){return kg}},Object.defineProperty(xl,"logLevel",{enumerable:!0})}),Kn,j_=xr(()=>{dm(),Kn=xl}),fm,gm,V_=xr(()=>{fm=(i,o)=>{let a=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);a.width=i.dims[3],a.height=i.dims[2];let u=a.getContext("2d");if(u!=null){let p,h;(o==null?void 0:o.tensorLayout)!==void 0&&o.tensorLayout==="NHWC"?(p=i.dims[2],h=i.dims[3]):(p=i.dims[3],h=i.dims[2]);let C=(o==null?void 0:o.format)!==void 0?o.format:"RGB",y=o==null?void 0:o.norm,k,_;y===void 0||y.mean===void 0?k=[255,255,255,255]:typeof y.mean=="number"?k=[y.mean,y.mean,y.mean,y.mean]:(k=[y.mean[0],y.mean[1],y.mean[2],0],y.mean[3]!==void 0&&(k[3]=y.mean[3])),y===void 0||y.bias===void 0?_=[0,0,0,0]:typeof y.bias=="number"?_=[y.bias,y.bias,y.bias,y.bias]:(_=[y.bias[0],y.bias[1],y.bias[2],0],y.bias[3]!==void 0&&(_[3]=y.bias[3]));let v=h*p,M=0,B=v,S=v*2,N=-1;C==="RGBA"?(M=0,B=v,S=v*2,N=v*3):C==="RGB"?(M=0,B=v,S=v*2):C==="RBG"&&(M=0,S=v,B=v*2);for(let V=0;V<h;V++)for(let Z=0;Z<p;Z++){let O=(i.data[M++]-_[0])*k[0],Q=(i.data[B++]-_[1])*k[1],q=(i.data[S++]-_[2])*k[2],f=N===-1?255:(i.data[N++]-_[3])*k[3];u.fillStyle="rgba("+O+","+Q+","+q+","+f+")",u.fillRect(Z,V,1,1)}if("toDataURL"in a)return a.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},gm=(i,o)=>{let a=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),u;if(a!=null){let p,h,C;(o==null?void 0:o.tensorLayout)!==void 0&&o.tensorLayout==="NHWC"?(p=i.dims[2],h=i.dims[1],C=i.dims[3]):(p=i.dims[3],h=i.dims[2],C=i.dims[1]);let y=o!==void 0&&o.format!==void 0?o.format:"RGB",k=o==null?void 0:o.norm,_,v;k===void 0||k.mean===void 0?_=[255,255,255,255]:typeof k.mean=="number"?_=[k.mean,k.mean,k.mean,k.mean]:(_=[k.mean[0],k.mean[1],k.mean[2],255],k.mean[3]!==void 0&&(_[3]=k.mean[3])),k===void 0||k.bias===void 0?v=[0,0,0,0]:typeof k.bias=="number"?v=[k.bias,k.bias,k.bias,k.bias]:(v=[k.bias[0],k.bias[1],k.bias[2],0],k.bias[3]!==void 0&&(v[3]=k.bias[3]));let M=h*p;if(o!==void 0&&(o.format!==void 0&&C===4&&o.format!=="RGBA"||C===3&&o.format!=="RGB"&&o.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let B=4,S=0,N=1,V=2,Z=3,O=0,Q=M,q=M*2,f=-1;y==="RGBA"?(O=0,Q=M,q=M*2,f=M*3):y==="RGB"?(O=0,Q=M,q=M*2):y==="RBG"&&(O=0,q=M,Q=M*2),u=a.createImageData(p,h);for(let I=0;I<h*p;S+=B,N+=B,V+=B,Z+=B,I++)u.data[S]=(i.data[O++]-v[0])*_[0],u.data[N]=(i.data[Q++]-v[1])*_[1],u.data[V]=(i.data[q++]-v[2])*_[2],u.data[Z]=f===-1?255:(i.data[f++]-v[3])*_[3]}else throw new Error("Can not access image data");return u}}),I2,pm,hm,mm,bm,Cm,W_=xr(()=>{vg(),I2=(i,o)=>{if(i===void 0)throw new Error("Image buffer must be defined");if(o.height===void 0||o.width===void 0)throw new Error("Image height and width must be defined");if(o.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:a,width:u}=o,p=o.norm??{mean:255,bias:0},h,C;typeof p.mean=="number"?h=[p.mean,p.mean,p.mean,p.mean]:h=[p.mean[0],p.mean[1],p.mean[2],p.mean[3]??255],typeof p.bias=="number"?C=[p.bias,p.bias,p.bias,p.bias]:C=[p.bias[0],p.bias[1],p.bias[2],p.bias[3]??0];let y=o.format!==void 0?o.format:"RGBA",k=o.tensorFormat!==void 0&&o.tensorFormat!==void 0?o.tensorFormat:"RGB",_=a*u,v=k==="RGBA"?new Float32Array(_*4):new Float32Array(_*3),M=4,B=0,S=1,N=2,V=3,Z=0,O=_,Q=_*2,q=-1;y==="RGB"&&(M=3,B=0,S=1,N=2,V=-1),k==="RGBA"?q=_*3:k==="RBG"?(Z=0,Q=_,O=_*2):k==="BGR"&&(Q=0,O=_,Z=_*2);for(let f=0;f<_;f++,B+=M,N+=M,S+=M,V+=M)v[Z++]=(i[B]+C[0])/h[0],v[O++]=(i[S]+C[1])/h[1],v[Q++]=(i[N]+C[2])/h[2],q!==-1&&V!==-1&&(v[q++]=(i[V]+C[3])/h[3]);return k==="RGBA"?new al("float32",v,[1,4,a,u]):new al("float32",v,[1,3,a,u])},pm=async(i,o)=>{let a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,u=typeof ImageData<"u"&&i instanceof ImageData,p=typeof ImageBitmap<"u"&&i instanceof ImageBitmap,h=typeof i=="string",C,y=o??{},k=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},_=v=>typeof HTMLCanvasElement<"u"&&v instanceof HTMLCanvasElement||v instanceof OffscreenCanvas?v.getContext("2d"):null;if(a){let v=k();v.width=i.width,v.height=i.height;let M=_(v);if(M!=null){let B=i.height,S=i.width;if(o!==void 0&&o.resizedHeight!==void 0&&o.resizedWidth!==void 0&&(B=o.resizedHeight,S=o.resizedWidth),o!==void 0){if(y=o,o.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");y.tensorFormat="RGBA",y.height=B,y.width=S}else y.tensorFormat="RGBA",y.height=B,y.width=S;M.drawImage(i,0,0),C=M.getImageData(0,0,S,B).data}else throw new Error("Can not access image data")}else if(u){let v,M;if(o!==void 0&&o.resizedWidth!==void 0&&o.resizedHeight!==void 0?(v=o.resizedHeight,M=o.resizedWidth):(v=i.height,M=i.width),o!==void 0&&(y=o),y.format="RGBA",y.height=v,y.width=M,o!==void 0){let B=k();B.width=M,B.height=v;let S=_(B);if(S!=null)S.putImageData(i,0,0),C=S.getImageData(0,0,M,v).data;else throw new Error("Can not access image data")}else C=i.data}else if(p){if(o===void 0)throw new Error("Please provide image config with format for Imagebitmap");let v=k();v.width=i.width,v.height=i.height;let M=_(v);if(M!=null){let B=i.height,S=i.width;return M.drawImage(i,0,0,S,B),C=M.getImageData(0,0,S,B).data,y.height=B,y.width=S,I2(C,y)}else throw new Error("Can not access image data")}else{if(h)return new Promise((v,M)=>{let B=k(),S=_(B);if(!i||!S)return M();let N=new Image;N.crossOrigin="Anonymous",N.src=i,N.onload=()=>{B.width=N.width,B.height=N.height,S.drawImage(N,0,0,B.width,B.height);let V=S.getImageData(0,0,B.width,B.height);y.height=B.height,y.width=B.width,v(I2(V.data,y))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(C!==void 0)return I2(C,y);throw new Error("Input data provided is not supported - aborted tensor creation")},hm=(i,o)=>{let{width:a,height:u,download:p,dispose:h}=o,C=[1,u,a,4];return new al({location:"texture",type:"float32",texture:i,dims:C,download:p,dispose:h})},mm=(i,o)=>{let{dataType:a,dims:u,download:p,dispose:h}=o;return new al({location:"gpu-buffer",type:a??"float32",gpuBuffer:i,dims:u,download:p,dispose:h})},bm=(i,o)=>{let{dataType:a,dims:u,download:p,dispose:h}=o;return new al({location:"ml-tensor",type:a??"float32",mlTensor:i,dims:u,download:p,dispose:h})},Cm=(i,o,a)=>new al({location:"cpu-pinned",type:i,data:o,dims:a??[o.length]})}),Td,Kf,_g,wm,U_=xr(()=>{Td=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Kf=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),_g=!1,wm=()=>{if(!_g){_g=!0;let i=typeof BigInt64Array<"u"&&BigInt64Array.from,o=typeof BigUint64Array<"u"&&BigUint64Array.from,a=globalThis.Float16Array,u=typeof a<"u"&&a.from;i&&(Td.set("int64",BigInt64Array),Kf.set(BigInt64Array,"int64")),o&&(Td.set("uint64",BigUint64Array),Kf.set(BigUint64Array,"uint64")),u?(Td.set("float16",a),Kf.set(a,"float16")):Td.set("float16",Uint16Array)}}}),Im,ym,H_=xr(()=>{vg(),Im=i=>{let o=1;for(let a=0;a<i.length;a++){let u=i[a];if(typeof u!="number"||!Number.isSafeInteger(u))throw new TypeError(`dims[${a}] must be an integer, got: ${u}`);if(u<0)throw new RangeError(`dims[${a}] must be a non-negative integer, got: ${u}`);o*=u}return o},ym=(i,o)=>{switch(i.location){case"cpu":return new al(i.type,i.data,o);case"cpu-pinned":return new al({location:"cpu-pinned",data:i.data,type:i.type,dims:o});case"texture":return new al({location:"texture",texture:i.texture,type:i.type,dims:o});case"gpu-buffer":return new al({location:"gpu-buffer",gpuBuffer:i.gpuBuffer,type:i.type,dims:o});case"ml-tensor":return new al({location:"ml-tensor",mlTensor:i.mlTensor,type:i.type,dims:o});default:throw new Error(`tensorReshape: tensor location ${i.location} is not supported`)}}}),al,vg=xr(()=>{V_(),W_(),U_(),H_(),al=class{constructor(i,o,a){wm();let u,p;if(typeof i=="object"&&"location"in i)switch(this.dataLocation=i.location,u=i.type,p=i.dims,i.location){case"cpu-pinned":{let C=Td.get(u);if(!C)throw new TypeError(`unsupported type "${u}" to create tensor from pinned buffer`);if(!(i.data instanceof C))throw new TypeError(`buffer should be of type ${C.name}`);this.cpuData=i.data;break}case"texture":{if(u!=="float32")throw new TypeError(`unsupported type "${u}" to create tensor from texture`);this.gpuTextureData=i.texture,this.downloader=i.download,this.disposer=i.dispose;break}case"gpu-buffer":{if(u!=="float32"&&u!=="float16"&&u!=="int32"&&u!=="int64"&&u!=="uint32"&&u!=="uint8"&&u!=="bool"&&u!=="uint4"&&u!=="int4")throw new TypeError(`unsupported type "${u}" to create tensor from gpu buffer`);this.gpuBufferData=i.gpuBuffer,this.downloader=i.download,this.disposer=i.dispose;break}case"ml-tensor":{if(u!=="float32"&&u!=="float16"&&u!=="int32"&&u!=="int64"&&u!=="uint32"&&u!=="uint64"&&u!=="int8"&&u!=="uint8"&&u!=="bool"&&u!=="uint4"&&u!=="int4")throw new TypeError(`unsupported type "${u}" to create tensor from MLTensor`);this.mlTensorData=i.mlTensor,this.downloader=i.download,this.disposer=i.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let C,y;if(typeof i=="string")if(u=i,y=a,i==="string"){if(!Array.isArray(o))throw new TypeError("A string tensor's data must be a string array.");C=o}else{let k=Td.get(i);if(k===void 0)throw new TypeError(`Unsupported tensor type: ${i}.`);if(Array.isArray(o)){if(i==="float16"&&k===Uint16Array||i==="uint4"||i==="int4")throw new TypeError(`Creating a ${i} tensor from number array is not supported. Please use ${k.name} as data.`);i==="uint64"||i==="int64"?C=k.from(o,BigInt):C=k.from(o)}else if(o instanceof k)C=o;else if(o instanceof Uint8ClampedArray)if(i==="uint8")C=Uint8Array.from(o);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(i==="float16"&&o instanceof Uint16Array&&k!==Uint16Array)C=new globalThis.Float16Array(o.buffer,o.byteOffset,o.length);else throw new TypeError(`A ${u} tensor's data must be type of ${k}`)}else if(y=o,Array.isArray(i)){if(i.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let k=typeof i[0];if(k==="string")u="string",C=i;else if(k==="boolean")u="bool",C=Uint8Array.from(i);else throw new TypeError(`Invalid element type of data array: ${k}.`)}else if(i instanceof Uint8ClampedArray)u="uint8",C=Uint8Array.from(i);else{let k=Kf.get(i.constructor);if(k===void 0)throw new TypeError(`Unsupported type for tensor data: ${i.constructor}.`);u=k,C=i}if(y===void 0)y=[C.length];else if(!Array.isArray(y))throw new TypeError("A tensor's dims must be a number array");p=y,this.cpuData=C,this.dataLocation="cpu"}let h=Im(p);if(this.cpuData&&h!==this.cpuData.length&&!((u==="uint4"||u==="int4")&&Math.ceil(h/2)===this.cpuData.length))throw new Error(`Tensor's size(${h}) does not match data length(${this.cpuData.length}).`);this.type=u,this.dims=p,this.size=h}static async fromImage(i,o){return pm(i,o)}static fromTexture(i,o){return hm(i,o)}static fromGpuBuffer(i,o){return mm(i,o)}static fromMLTensor(i,o){return bm(i,o)}static fromPinnedBuffer(i,o,a){return Cm(i,o,a)}toDataURL(i){return fm(this,i)}toImageData(i){return gm(this,i)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(i){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let o=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=o,i&&this.disposer&&(this.disposer(),this.disposer=void 0),o}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(i){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ym(this,i)}}}),Ll,km=xr(()=>{vg(),Ll=al}),qf,xg,Rl,Ml,_m=xr(()=>{dm(),qf=(i,o)=>{(typeof xl.trace>"u"?!xl.wasm.trace:!xl.trace)||console.timeStamp(`${i}::ORT::${o}`)},xg=(i,o)=>{var p;let a=((p=new Error().stack)==null?void 0:p.split(/\r\n|\r|\n/g))||[],u=!1;for(let h=0;h<a.length;h++){if(u&&!a[h].includes("TRACE_FUNC")){let C=`FUNC_${i}::${a[h].trim().split(" ")[1]}`;o&&(C+=`::${o}`),qf("CPU",C);return}a[h].includes("TRACE_FUNC")&&(u=!0)}},Rl=i=>{(typeof xl.trace>"u"?!xl.wasm.trace:!xl.trace)||xg("BEGIN",i)},Ml=i=>{(typeof xl.trace>"u"?!xl.wasm.trace:!xl.trace)||xg("END",i)}}),vm,Y_=xr(()=>{cm(),km(),_m(),vm=class Kk{constructor(o){this.handler=o}async run(o,a,u){Rl();let p={},h={};if(typeof o!="object"||o===null||o instanceof Ll||Array.isArray(o))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let C=!0;if(typeof a=="object"){if(a===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(a instanceof Ll)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(a)){if(a.length===0)throw new TypeError("'fetches' cannot be an empty array.");C=!1;for(let _ of a){if(typeof _!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(_)===-1)throw new RangeError(`'fetches' contains invalid output name: ${_}.`);p[_]=null}if(typeof u=="object"&&u!==null)h=u;else if(typeof u<"u")throw new TypeError("'options' must be an object.")}else{let _=!1,v=Object.getOwnPropertyNames(a);for(let M of this.outputNames)if(v.indexOf(M)!==-1){let B=a[M];(B===null||B instanceof Ll)&&(_=!0,C=!1,p[M]=B)}if(_){if(typeof u=="object"&&u!==null)h=u;else if(typeof u<"u")throw new TypeError("'options' must be an object.")}else h=a}}else if(typeof a<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let _ of this.inputNames)if(typeof o[_]>"u")throw new Error(`input '${_}' is missing in 'feeds'.`);if(C)for(let _ of this.outputNames)p[_]=null;let y=await this.handler.run(o,p,h),k={};for(let _ in y)if(Object.hasOwnProperty.call(y,_)){let v=y[_];v instanceof Ll?k[_]=v:k[_]=new Ll(v.type,v.data,v.dims)}return Ml(),k}async release(){return this.handler.dispose()}static async create(o,a,u,p){Rl();let h,C={};if(typeof o=="string"){if(h=o,typeof a=="object"&&a!==null)C=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(o instanceof Uint8Array){if(h=o,typeof a=="object"&&a!==null)C=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(o instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&o instanceof SharedArrayBuffer){let v=o,M=0,B=o.byteLength;if(typeof a=="object"&&a!==null)C=a;else if(typeof a=="number"){if(M=a,!Number.isSafeInteger(M))throw new RangeError("'byteOffset' must be an integer.");if(M<0||M>=v.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${v.byteLength}).`);if(B=o.byteLength-M,typeof u=="number"){if(B=u,!Number.isSafeInteger(B))throw new RangeError("'byteLength' must be an integer.");if(B<=0||M+B>v.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${v.byteLength-M}].`);if(typeof p=="object"&&p!==null)C=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else if(typeof u<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof a<"u")throw new TypeError("'options' must be an object.");h=new Uint8Array(v,M,B)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[y,k]=await lm(C),_=await y.createInferenceSessionHandler(h,k);return Ml(),new Kk(_)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Mg,K_=xr(()=>{Y_(),Mg=vm}),q_=xr(()=>{}),X_=xr(()=>{}),Z_=xr(()=>{}),J_=xr(()=>{}),xm={};Hf(xm,{InferenceSession:()=>Mg,TRACE:()=>qf,TRACE_FUNC_BEGIN:()=>Rl,TRACE_FUNC_END:()=>Ml,Tensor:()=>Ll,env:()=>Kn,registerBackend:()=>Bd});var jl=xr(()=>{L_(),j_(),K_(),km(),q_(),X_(),_m(),Z_(),J_()}),Eg=xr(()=>{}),Mm={};Hf(Mm,{default:()=>Em});var Bg,Tg,Em,$_=xr(()=>{var i;ay(),Pd(),Qg(),Bg="ort-wasm-proxy-worker",Tg=((i=globalThis.self)==null?void 0:i.name)===Bg,Tg&&(self.onmessage=o=>{let{type:a,in:u}=o.data;try{switch(a){case"init-wasm":Rg(u.wasm).then(()=>{Xp(u).then(()=>{postMessage({type:a})},p=>{postMessage({type:a,err:p})})},p=>{postMessage({type:a,err:p})});break;case"init-ep":{let{epName:p,env:h}=u;Zp(h,p).then(()=>{postMessage({type:a})},C=>{postMessage({type:a,err:C})});break}case"copy-from":{let{buffer:p}=u,h=N2(p);postMessage({type:a,out:h});break}case"create":{let{model:p,options:h}=u;Jp(p,h).then(C=>{postMessage({type:a,out:C})},C=>{postMessage({type:a,err:C})});break}case"release":$p(u),postMessage({type:a});break;case"run":{let{sessionId:p,inputIndices:h,inputs:C,outputIndices:y,options:k}=u;t1(p,h,C,y,new Array(y.length).fill(null),k).then(_=>{_.some(v=>v[3]!=="cpu")?postMessage({type:a,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:a,out:_},s1([...C,..._]))},_=>{postMessage({type:a,err:_})});break}case"end-profiling":r1(u),postMessage({type:a});break;default:}}catch(p){postMessage({type:a,err:p})}}),Em=Tg?null:o=>new Worker(o??nl,{type:"module",name:Bg})}),Bm={};Hf(Bm,{default:()=>Tm});var Pg,Dg,Tm,Pm,tv=xr(()=>{var i,o;Dg=(Pg=self.location.href,async function(a={}){var In;var u,p,h=a,C=new Promise((z,K)=>{u=z,p=K}),y=typeof window=="object",k=typeof WorkerGlobalScope<"u",_=k&&((In=self.name)==null?void 0:In.startsWith("em-pthread"));h.mountExternalData=(z,K)=>{z.startsWith("./")&&(z=z.substring(2)),(h.Bd||(h.Bd=new Map)).set(z,K)},h.unmountExternalData=()=>{delete h.Bd};var v=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let M=()=>{let z=(re,me,_e)=>(...at)=>{let yt=Ca,Ut=me==null?void 0:me();at=re(...at);let rr=me==null?void 0:me();return Ut!==rr&&(re=rr,_e(Ut),me=_e=null),Ca!=yt?new Promise((pr,Nr)=>{Mo={resolve:pr,reject:Nr}}):at},K=re=>async(...me)=>{var _e;try{if(h.Cd)throw Error("Session already started");let at=h.Cd={be:me[0],errors:[]},yt=await re(...me);if(h.Cd!==at)throw Error("Session mismatch");(_e=h.Dd)==null||_e.flush();let Ut=at.errors;if(0<Ut.length){let rr=await Promise.all(Ut);if(rr=rr.filter(pr=>pr),0<rr.length)throw Error(rr.join(`
`))}return yt}finally{h.Cd=null}};h._OrtCreateSession=z(h._OrtCreateSession,()=>h._OrtCreateSession,re=>h._OrtCreateSession=re),h._OrtRun=K(z(h._OrtRun,()=>h._OrtRun,re=>h._OrtRun=re)),h._OrtRunWithBinding=K(z(h._OrtRunWithBinding,()=>h._OrtRunWithBinding,re=>h._OrtRunWithBinding=re)),h._OrtBindInput=z(h._OrtBindInput,()=>h._OrtBindInput,re=>h._OrtBindInput=re),M=void 0};h.jsepInit=(z,K)=>{if(M==null||M(),z==="webgpu"){[h.Dd,h.Rd,h.Vd,h.Hd,h.Ud,h.hc,h.Wd,h.Zd,h.Sd,h.Td,h.Xd]=K;let re=h.Dd;h.jsepRegisterBuffer=(me,_e,at,yt)=>re.registerBuffer(me,_e,at,yt),h.jsepGetBuffer=me=>re.getBuffer(me),h.jsepCreateDownloader=(me,_e,at)=>re.createDownloader(me,_e,at),h.jsepOnCreateSession=me=>{re.onCreateSession(me)},h.jsepOnReleaseSession=me=>{re.onReleaseSession(me)},h.jsepOnRunStart=me=>re.onRunStart(me),h.$d=(me,_e)=>{re.upload(me,_e)}}else if(z==="webnn"){[h.Dd,h.Yd,h.Id,h.jsepEnsureTensor,h.Jd,h.jsepDownloadTensor]=K,h.jsepReleaseTensorId=h.Id,h.jsepUploadTensor=h.Jd;let re=h.Dd;h.jsepOnRunStart=me=>re.onRunStart(me),h.jsepOnRunEnd=re.onRunEnd.bind(re),h.jsepRegisterMLContext=(me,_e)=>{re.registerMLContext(me,_e)},h.jsepOnReleaseSession=me=>{re.onReleaseSession(me)},h.jsepCreateMLTensorDownloader=(me,_e)=>re.createMLTensorDownloader(me,_e),h.jsepRegisterMLTensor=(me,_e,at,yt)=>re.registerMLTensor(me,_e,at,yt),h.jsepCreateMLContext=me=>re.createMLContext(me),h.jsepRegisterMLConstant=(me,_e,at,yt,Ut)=>re.registerMLConstant(me,_e,at,yt,Ut,h.Bd),h.jsepRegisterGraphInput=re.registerGraphInput.bind(re),h.jsepIsGraphInput=re.isGraphInput.bind(re),h.jsepCreateTemporaryTensor=re.createTemporaryTensor.bind(re)}};var B,S,N=Object.assign({},h),V=(z,K)=>{throw K},Z="";(y||k)&&(k?Z=self.location.href:typeof document<"u"&&document.currentScript&&(Z=document.currentScript.src),Pg&&(Z=Pg),Z=Z.startsWith("blob:")?"":Z.slice(0,Z.replace(/[?#].*/,"").lastIndexOf("/")+1),k&&(S=z=>{var K=new XMLHttpRequest;return K.open("GET",z,!1),K.responseType="arraybuffer",K.send(null),new Uint8Array(K.response)}),B=async z=>{if(ye(z))return new Promise((re,me)=>{var _e=new XMLHttpRequest;_e.open("GET",z,!0),_e.responseType="arraybuffer",_e.onload=()=>{_e.status==200||_e.status==0&&_e.response?re(_e.response):me(_e.status)},_e.onerror=me,_e.send(null)});var K=await fetch(z,{credentials:"same-origin"});if(K.ok)return K.arrayBuffer();throw Error(K.status+" : "+K.url)});var O=console.log.bind(console),Q=console.error.bind(console),q=O,f=Q;Object.assign(h,N),N=null;var I,e,c,P,J,D,j,Ie,ge,ke,Ee,Ne,Xe,At=h.wasmBinary,xe=!1,ye=z=>z.startsWith("file://");function ue(){return I.buffer!=P.buffer&&Re(),P}function ie(){return I.buffer!=P.buffer&&Re(),J}function be(){return I.buffer!=P.buffer&&Re(),D}function Ye(){return I.buffer!=P.buffer&&Re(),j}function Le(){return I.buffer!=P.buffer&&Re(),Ie}function lt(){return I.buffer!=P.buffer&&Re(),ge}function ft(){return I.buffer!=P.buffer&&Re(),ke}function pt(){return I.buffer!=P.buffer&&Re(),Xe}if(_){let z=function(K){try{var re=K.data,me=re.yd;if(me==="load"){let _e=[];self.onmessage=at=>_e.push(at),self.startWorker=()=>{postMessage({yd:"loaded"});for(let at of _e)z(at);self.onmessage=z};for(let at of re.Od)h[at]&&!h[at].proxy||(h[at]=(...yt)=>{postMessage({yd:"callHandler",Nd:at,args:yt})},at=="print"&&(q=h[at]),at=="printErr"&&(f=h[at]));I=re.he,Re(),ct(re.ie)}else if(me==="run"){zn(re.xd),hA(re.xd,0,0,1,0,0),os(),as(re.xd),He||(fn(),He=!0);try{Va(re.de,re.Fd)}catch(_e){if(_e!="unwind")throw _e}}else re.target!=="setimmediate"&&(me==="checkMailbox"?He&&kr():me&&(f(`worker: received unknown command ${me}`),f(re)))}catch(_e){throw Yo(),_e}};var ct,He=!1;f=function(...K){K=K.join(" "),console.error(K)},self.alert=function(...K){postMessage({yd:"alert",text:K.join(" "),fe:Pi()})},self.onunhandledrejection=K=>{throw K.reason||K},self.onmessage=z}function Re(){var z=I.buffer;h.HEAP8=P=new Int8Array(z),h.HEAP16=D=new Int16Array(z),h.HEAPU8=J=new Uint8Array(z),h.HEAPU16=j=new Uint16Array(z),h.HEAP32=Ie=new Int32Array(z),h.HEAPU32=ge=new Uint32Array(z),h.HEAPF32=ke=new Float32Array(z),h.HEAPF64=Xe=new Float64Array(z),h.HEAP64=Ee=new BigInt64Array(z),h.HEAPU64=Ne=new BigUint64Array(z)}function Se(){_?startWorker(h):gr.Bb()}_||(I=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),Re());var Qe,ht=0,wt=null;function Bt(){if(--ht==0&&wt){var z=wt;wt=null,z()}}function Mt(z){throw f(z="Aborted("+z+")"),xe=!0,z=new WebAssembly.RuntimeError(z+". Build with -sASSERTIONS for more info."),p(z),z}function oe(){return{a:{Ta:H,Va:ve,W:Pr,la:Kt,b:On,u:Pn,R:Dn,Za:qn,d:sa,pb:Br,g:$a,T:ks,Ga:vn,lb:ci,nb:ui,Ha:di,Ea:Fa,wb:ai,Da:fi,pa:Ri,mb:Xn,jb:Zn,Fa:ba,kb:Gi,Ma:gi,za:bn,eb:zi,cb:Tt,ya:st,V:pe,N:he,db:qe,ma:Ar,fb:Wr,zb:xs,hb:Ns,qb:Tr,ab:ha,Aa:xa,yb:as,Ja:Gs,S:Ms,Wa:fa,$:Al,H:uo,E:ni,l:Ln,F:Qr,B:VA,X:WA,J:cl,v:oA,O:Kl,D:ii,t:ca,A:Ro,z:go,w:jn,r:po,tb:ji,ub:UA,vb:jo,rb:Vo,sb:mr,bb:cA,Oa:HA,La:mi,y:YA,ja:Xa,Ba:ul,Ka:Vn,qa:dl,Ia:io,ib:oo,U:vr,fa:fl,Sa:uA,gb:Bo,Qa:To,Pa:Yi,Ab:Ho,Ca:fA,ob:Vt,aa:qA,oa:Za,xb:gA,na:ds,$a:We,ia:Ds,sa:Na,ga:Ce,da:Rt,ua:ma,p:ee,e:pl,c:GA,ea:xt,f:Oo,n:t,k:T,Y:s,ka:x,j:Ae,wa:mt,Ra:an,ca:Ur,Ua:Ja,P:St,K:A,_:jr,Q:Me,Z:ea,x:n,m:_o,va:Ir,i:SA,h:r,ra:La,ta:Ia,o:rs,q:l,s:m,I:w,C:U,L:F,xa:ut,_a:Ze,G:As,Ya:sr,ba:da,M:g,Xa:br,ha:zs,a:I,Na:Nt}}}var zt={1320978:()=>typeof wasmOffsetConverter<"u",1321035:(z,K,re,me,_e)=>{if(h===void 0||!h.Bd)return 1;if((z=aa(Number(z>>>0))).startsWith("./")&&(z=z.substring(2)),!(z=h.Bd.get(z)))return 2;if(K=Number(K>>>0),re=Number(re>>>0),me=Number(me>>>0),K+re>z.byteLength)return 3;try{let at=z.subarray(K,K+re);switch(_e){case 0:ie().set(at,me>>>0);break;case 1:h.$d(me,at);break;default:return 4}return 0}catch{return 4}},1321750:(z,K,re)=>{h.Jd(z,ie().subarray(K>>>0,K+re>>>0))},1321813:()=>h.Yd(),1321854:z=>{h.Id(z)},1321890:()=>{h.Sd()},1321921:()=>{h.Td()},1321950:()=>{h.Xd()},1321975:z=>h.Rd(z),1322008:z=>h.Vd(z),1322040:(z,K,re)=>{h.Hd(Number(z),Number(K),Number(re),!0)},1322103:(z,K,re)=>{h.Hd(Number(z),Number(K),Number(re))},1322160:z=>{h.hc("Abs",z,void 0)},1322211:z=>{h.hc("Neg",z,void 0)},1322262:z=>{h.hc("Floor",z,void 0)},1322315:z=>{h.hc("Ceil",z,void 0)},1322367:z=>{h.hc("Reciprocal",z,void 0)},1322425:z=>{h.hc("Sqrt",z,void 0)},1322477:z=>{h.hc("Exp",z,void 0)},1322528:z=>{h.hc("Erf",z,void 0)},1322579:z=>{h.hc("Sigmoid",z,void 0)},1322634:(z,K,re)=>{h.hc("HardSigmoid",z,{alpha:K,beta:re})},1322713:z=>{h.hc("Log",z,void 0)},1322764:z=>{h.hc("Sin",z,void 0)},1322815:z=>{h.hc("Cos",z,void 0)},1322866:z=>{h.hc("Tan",z,void 0)},1322917:z=>{h.hc("Asin",z,void 0)},1322969:z=>{h.hc("Acos",z,void 0)},1323021:z=>{h.hc("Atan",z,void 0)},1323073:z=>{h.hc("Sinh",z,void 0)},1323125:z=>{h.hc("Cosh",z,void 0)},1323177:z=>{h.hc("Asinh",z,void 0)},1323230:z=>{h.hc("Acosh",z,void 0)},1323283:z=>{h.hc("Atanh",z,void 0)},1323336:z=>{h.hc("Tanh",z,void 0)},1323388:z=>{h.hc("Not",z,void 0)},1323439:(z,K,re)=>{h.hc("Clip",z,{min:K,max:re})},1323508:z=>{h.hc("Clip",z,void 0)},1323560:(z,K)=>{h.hc("Elu",z,{alpha:K})},1323618:z=>{h.hc("Gelu",z,void 0)},1323670:z=>{h.hc("Relu",z,void 0)},1323722:(z,K)=>{h.hc("LeakyRelu",z,{alpha:K})},1323786:(z,K)=>{h.hc("ThresholdedRelu",z,{alpha:K})},1323856:(z,K)=>{h.hc("Cast",z,{to:K})},1323914:z=>{h.hc("Add",z,void 0)},1323965:z=>{h.hc("Sub",z,void 0)},1324016:z=>{h.hc("Mul",z,void 0)},1324067:z=>{h.hc("Div",z,void 0)},1324118:z=>{h.hc("Pow",z,void 0)},1324169:z=>{h.hc("Equal",z,void 0)},1324222:z=>{h.hc("Greater",z,void 0)},1324277:z=>{h.hc("GreaterOrEqual",z,void 0)},1324339:z=>{h.hc("Less",z,void 0)},1324391:z=>{h.hc("LessOrEqual",z,void 0)},1324450:(z,K,re,me,_e)=>{h.hc("ReduceMean",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1324625:(z,K,re,me,_e)=>{h.hc("ReduceMax",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1324799:(z,K,re,me,_e)=>{h.hc("ReduceMin",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1324973:(z,K,re,me,_e)=>{h.hc("ReduceProd",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1325148:(z,K,re,me,_e)=>{h.hc("ReduceSum",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1325322:(z,K,re,me,_e)=>{h.hc("ReduceL1",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1325495:(z,K,re,me,_e)=>{h.hc("ReduceL2",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1325668:(z,K,re,me,_e)=>{h.hc("ReduceLogSum",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1325845:(z,K,re,me,_e)=>{h.hc("ReduceSumSquare",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1326025:(z,K,re,me,_e)=>{h.hc("ReduceLogSumExp",z,{keepDims:!!K,noopWithEmptyAxes:!!re,axes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1326205:z=>{h.hc("Where",z,void 0)},1326258:(z,K,re)=>{h.hc("Transpose",z,{perm:K?Array.from(Le().subarray(Number(K)>>>0,Number(re)>>>0)):[]})},1326382:(z,K,re,me)=>{h.hc("DepthToSpace",z,{blocksize:K,mode:aa(re),format:me?"NHWC":"NCHW"})},1326515:(z,K,re,me)=>{h.hc("DepthToSpace",z,{blocksize:K,mode:aa(re),format:me?"NHWC":"NCHW"})},1326648:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea,ti)=>{h.hc("ConvTranspose",z,{format:rr?"NHWC":"NCHW",autoPad:K,dilations:[re],group:me,kernelShape:[_e],pads:[at,yt],strides:[Ut],wIsConst:()=>!!ue()[pr>>>0],outputPadding:Nr?Array.from(Le().subarray(Number(Nr)>>>0,Number(ns)>>>0)):[],outputShape:ys?Array.from(Le().subarray(Number(ys)>>>0,Number(Ea)>>>0)):[],activation:aa(ti)})},1327081:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>{h.hc("ConvTranspose",z,{format:Ut?"NHWC":"NCHW",autoPad:K,dilations:Array.from(Le().subarray(Number(re)>>>0,2+(Number(re)>>>0)>>>0)),group:me,kernelShape:Array.from(Le().subarray(Number(_e)>>>0,2+(Number(_e)>>>0)>>>0)),pads:Array.from(Le().subarray(Number(at)>>>0,4+(Number(at)>>>0)>>>0)),strides:Array.from(Le().subarray(Number(yt)>>>0,2+(Number(yt)>>>0)>>>0)),wIsConst:()=>!!ue()[rr>>>0],outputPadding:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],outputShape:ns?Array.from(Le().subarray(Number(ns)>>>0,Number(ys)>>>0)):[],activation:aa(Ea)})},1327742:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea,ti)=>{h.hc("ConvTranspose",z,{format:rr?"NHWC":"NCHW",autoPad:K,dilations:[re],group:me,kernelShape:[_e],pads:[at,yt],strides:[Ut],wIsConst:()=>!!ue()[pr>>>0],outputPadding:Nr?Array.from(Le().subarray(Number(Nr)>>>0,Number(ns)>>>0)):[],outputShape:ys?Array.from(Le().subarray(Number(ys)>>>0,Number(Ea)>>>0)):[],activation:aa(ti)})},1328175:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>{h.hc("ConvTranspose",z,{format:Ut?"NHWC":"NCHW",autoPad:K,dilations:Array.from(Le().subarray(Number(re)>>>0,2+(Number(re)>>>0)>>>0)),group:me,kernelShape:Array.from(Le().subarray(Number(_e)>>>0,2+(Number(_e)>>>0)>>>0)),pads:Array.from(Le().subarray(Number(at)>>>0,4+(Number(at)>>>0)>>>0)),strides:Array.from(Le().subarray(Number(yt)>>>0,2+(Number(yt)>>>0)>>>0)),wIsConst:()=>!!ue()[rr>>>0],outputPadding:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],outputShape:ns?Array.from(Le().subarray(Number(ns)>>>0,Number(ys)>>>0)):[],activation:aa(Ea)})},1328836:(z,K)=>{h.hc("GlobalAveragePool",z,{format:K?"NHWC":"NCHW"})},1328927:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>{h.hc("AveragePool",z,{format:Ea?"NHWC":"NCHW",auto_pad:K,ceil_mode:re,count_include_pad:me,storage_order:_e,dilations:at?Array.from(Le().subarray(Number(at)>>>0,Number(yt)>>>0)):[],kernel_shape:Ut?Array.from(Le().subarray(Number(Ut)>>>0,Number(rr)>>>0)):[],pads:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],strides:ns?Array.from(Le().subarray(Number(ns)>>>0,Number(ys)>>>0)):[]})},1329406:(z,K)=>{h.hc("GlobalAveragePool",z,{format:K?"NHWC":"NCHW"})},1329497:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>{h.hc("AveragePool",z,{format:Ea?"NHWC":"NCHW",auto_pad:K,ceil_mode:re,count_include_pad:me,storage_order:_e,dilations:at?Array.from(Le().subarray(Number(at)>>>0,Number(yt)>>>0)):[],kernel_shape:Ut?Array.from(Le().subarray(Number(Ut)>>>0,Number(rr)>>>0)):[],pads:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],strides:ns?Array.from(Le().subarray(Number(ns)>>>0,Number(ys)>>>0)):[]})},1329976:(z,K)=>{h.hc("GlobalMaxPool",z,{format:K?"NHWC":"NCHW"})},1330063:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>{h.hc("MaxPool",z,{format:Ea?"NHWC":"NCHW",auto_pad:K,ceil_mode:re,count_include_pad:me,storage_order:_e,dilations:at?Array.from(Le().subarray(Number(at)>>>0,Number(yt)>>>0)):[],kernel_shape:Ut?Array.from(Le().subarray(Number(Ut)>>>0,Number(rr)>>>0)):[],pads:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],strides:ns?Array.from(Le().subarray(Number(ns)>>>0,Number(ys)>>>0)):[]})},1330538:(z,K)=>{h.hc("GlobalMaxPool",z,{format:K?"NHWC":"NCHW"})},1330625:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>{h.hc("MaxPool",z,{format:Ea?"NHWC":"NCHW",auto_pad:K,ceil_mode:re,count_include_pad:me,storage_order:_e,dilations:at?Array.from(Le().subarray(Number(at)>>>0,Number(yt)>>>0)):[],kernel_shape:Ut?Array.from(Le().subarray(Number(Ut)>>>0,Number(rr)>>>0)):[],pads:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],strides:ns?Array.from(Le().subarray(Number(ns)>>>0,Number(ys)>>>0)):[]})},1331100:(z,K,re,me,_e)=>{h.hc("Gemm",z,{alpha:K,beta:re,transA:me,transB:_e})},1331204:z=>{h.hc("MatMul",z,void 0)},1331258:(z,K,re,me)=>{h.hc("ArgMax",z,{keepDims:!!K,selectLastIndex:!!re,axis:me})},1331366:(z,K,re,me)=>{h.hc("ArgMin",z,{keepDims:!!K,selectLastIndex:!!re,axis:me})},1331474:(z,K)=>{h.hc("Softmax",z,{axis:K})},1331537:(z,K)=>{h.hc("Concat",z,{axis:K})},1331597:(z,K,re,me,_e)=>{h.hc("Split",z,{axis:K,numOutputs:re,splitSizes:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1331753:z=>{h.hc("Expand",z,void 0)},1331807:(z,K)=>{h.hc("Gather",z,{axis:Number(K)})},1331878:(z,K)=>{h.hc("GatherElements",z,{axis:Number(K)})},1331957:(z,K)=>{h.hc("GatherND",z,{batch_dims:Number(K)})},1332036:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr)=>{h.hc("Resize",z,{antialias:K,axes:re?Array.from(Le().subarray(Number(re)>>>0,Number(me)>>>0)):[],coordinateTransformMode:aa(_e),cubicCoeffA:at,excludeOutside:yt,extrapolationValue:Ut,keepAspectRatioPolicy:aa(rr),mode:aa(pr),nearestMode:aa(Nr)})},1332398:(z,K,re,me,_e,at,yt)=>{h.hc("Slice",z,{starts:K?Array.from(Le().subarray(Number(K)>>>0,Number(re)>>>0)):[],ends:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[],axes:at?Array.from(Le().subarray(Number(at)>>>0,Number(yt)>>>0)):[]})},1332662:z=>{h.hc("Tile",z,void 0)},1332714:(z,K,re)=>{h.hc("InstanceNormalization",z,{epsilon:K,format:re?"NHWC":"NCHW"})},1332828:(z,K,re)=>{h.hc("InstanceNormalization",z,{epsilon:K,format:re?"NHWC":"NCHW"})},1332942:z=>{h.hc("Range",z,void 0)},1332995:(z,K)=>{h.hc("Einsum",z,{equation:aa(K)})},1333076:(z,K,re,me,_e)=>{h.hc("Pad",z,{mode:K,value:re,pads:me?Array.from(Le().subarray(Number(me)>>>0,Number(_e)>>>0)):[]})},1333219:(z,K,re,me,_e,at)=>{h.hc("BatchNormalization",z,{epsilon:K,momentum:re,spatial:!!_e,trainingMode:!!me,format:at?"NHWC":"NCHW"})},1333388:(z,K,re,me,_e,at)=>{h.hc("BatchNormalization",z,{epsilon:K,momentum:re,spatial:!!_e,trainingMode:!!me,format:at?"NHWC":"NCHW"})},1333557:(z,K,re)=>{h.hc("CumSum",z,{exclusive:Number(K),reverse:Number(re)})},1333654:(z,K,re)=>{h.hc("DequantizeLinear",z,{axis:K,blockSize:re})},1333744:(z,K,re,me,_e)=>{h.hc("GridSample",z,{align_corners:K,mode:aa(re),padding_mode:aa(me),format:_e?"NHWC":"NCHW"})},1333914:(z,K,re,me,_e)=>{h.hc("GridSample",z,{align_corners:K,mode:aa(re),padding_mode:aa(me),format:_e?"NHWC":"NCHW"})},1334084:(z,K)=>{h.hc("ScatterND",z,{reduction:aa(K)})},1334169:(z,K,re,me,_e,at,yt,Ut,rr)=>{h.hc("Attention",z,{numHeads:K,isUnidirectional:re,maskFilterValue:me,scale:_e,doRotary:at,qkvHiddenSizes:yt?Array.from(Le().subarray(Number(Ut)>>>0,Number(Ut)+yt>>>0)):[],pastPresentShareBuffer:!!rr})},1334441:z=>{h.hc("BiasAdd",z,void 0)},1334496:z=>{h.hc("BiasSplitGelu",z,void 0)},1334557:z=>{h.hc("FastGelu",z,void 0)},1334613:(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea,ti,rA)=>{h.hc("Conv",z,{format:ns?"NHWC":"NCHW",auto_pad:K,dilations:re?Array.from(Le().subarray(Number(re)>>>0,Number(me)>>>0)):[],group:_e,kernel_shape:at?Array.from(Le().subarray(Number(at)>>>0,Number(yt)>>>0)):[],pads:Ut?Array.from(Le().subarray(Number(Ut)>>>0,Number(rr)>>>0)):[],strides:pr?Array.from(Le().subarray(Number(pr)>>>0,Number(Nr)>>>0)):[],w_is_const:()=>!!ue()[Number(ys)>>>0],activation:aa(Ea),activation_params:ti?Array.from(ft().subarray(Number(ti)>>>0,Number(rA)>>>0)):[]})},1335197:z=>{h.hc("Gelu",z,void 0)},1335249:(z,K,re,me,_e,at,yt,Ut,rr)=>{h.hc("GroupQueryAttention",z,{numHeads:K,kvNumHeads:re,scale:me,softcap:_e,doRotary:at,rotaryInterleaved:yt,smoothSoftmax:Ut,localWindowSize:rr})},1335466:(z,K,re,me)=>{h.hc("LayerNormalization",z,{axis:K,epsilon:re,simplified:!!me})},1335577:(z,K,re,me)=>{h.hc("LayerNormalization",z,{axis:K,epsilon:re,simplified:!!me})},1335688:(z,K,re,me,_e,at)=>{h.hc("MatMulNBits",z,{k:K,n:re,accuracyLevel:me,bits:_e,blockSize:at})},1335815:(z,K,re,me,_e,at)=>{h.hc("MultiHeadAttention",z,{numHeads:K,isUnidirectional:re,maskFilterValue:me,scale:_e,doRotary:at})},1335974:(z,K)=>{h.hc("QuickGelu",z,{alpha:K})},1336038:(z,K,re,me,_e)=>{h.hc("RotaryEmbedding",z,{interleaved:!!K,numHeads:re,rotaryEmbeddingDim:me,scale:_e})},1336177:(z,K,re)=>{h.hc("SkipLayerNormalization",z,{epsilon:K,simplified:!!re})},1336279:(z,K,re)=>{h.hc("SkipLayerNormalization",z,{epsilon:K,simplified:!!re})},1336381:(z,K,re,me)=>{h.hc("GatherBlockQuantized",z,{gatherAxis:K,quantizeAxis:re,blockSize:me})},1336502:z=>{h.Wd(z)},1336536:(z,K)=>h.Zd(Number(z),Number(K),h.Cd.be,h.Cd.errors)};function ve(z,K,re){return RA(async()=>{await h.Ud(Number(z),Number(K),Number(re))})}function H(){return typeof wasmOffsetConverter<"u"}class ce{constructor(K){Te(this,"name","ExitStatus");this.message=`Program terminated with exit(${K})`,this.status=K}}var ne=z=>{z.terminate(),z.onmessage=()=>{}},ze=[],$e=z=>{Xt.length==0&&(ts(),Ks(Xt[0]));var K=Xt.pop();if(!K)return 6;Jt.push(K),Rr[z.xd]=K,K.xd=z.xd;var re={yd:"run",de:z.ce,Fd:z.Fd,xd:z.xd};return K.postMessage(re,z.Ld),0},gt=0,It=(z,K,...re)=>{for(var me=2*re.length,_e=ls(),at=Co(8*me),yt=at>>>3,Ut=0;Ut<re.length;Ut++){var rr=re[Ut];typeof rr=="bigint"?(Ee[yt+2*Ut]=1n,Ee[yt+2*Ut+1]=rr):(Ee[yt+2*Ut]=0n,pt()[yt+2*Ut+1>>>0]=rr)}return z=Pa(z,0,me,at,K),Is(_e),z};function Nt(z){if(_)return It(0,1,z);if(c=z,!(0<gt)){for(var K of Jt)ne(K);for(K of Xt)ne(K);Xt=[],Jt=[],Rr={},xe=!0}V(0,new ce(z))}function _t(z){if(_)return It(1,0,z);Vt(z)}var Vt=z=>{if(c=z,_)throw _t(z),"unwind";Nt(z)},Xt=[],Jt=[],wr=[],Rr={},$s=z=>{var K=z.xd;delete Rr[K],Xt.push(z),Jt.splice(Jt.indexOf(z),1),z.xd=0,Po(K)};function os(){wr.forEach(z=>z())}var Ks=z=>new Promise(K=>{z.onmessage=_e=>{var at=(_e=_e.data).yd;if(_e.Ed&&_e.Ed!=Pi()){var yt=Rr[_e.Ed];yt?yt.postMessage(_e,_e.Ld):f(`Internal error! Worker sent a message "${at}" to target pthread ${_e.Ed}, but that thread no longer exists!`)}else at==="checkMailbox"?kr():at==="spawnThread"?$e(_e):at==="cleanupThread"?$s(Rr[_e.ee]):at==="loaded"?(z.loaded=!0,K(z)):at==="alert"?alert(`Thread ${_e.fe}: ${_e.text}`):_e.target==="setimmediate"?z.postMessage(_e):at==="callHandler"?h[_e.Nd](..._e.args):at&&f(`worker sent an unknown command ${at}`)},z.onerror=_e=>{throw f(`worker sent an error! ${_e.filename}:${_e.lineno}: ${_e.message}`),_e};var re,me=[];for(re of[])h.propertyIsEnumerable(re)&&me.push(re);z.postMessage({yd:"load",Od:me,he:I,ie:e})});function ts(){var z=new Worker((()=>{let K=URL;return self.location.href>"file:"&&self.location.href<"file;"?new K("ort.bundle.min.mjs",self.location.href):new URL(self.location.href)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});Xt.push(z)}var zn=z=>{Re();var K=lt()[z+52>>>2>>>0];z=lt()[z+56>>>2>>>0],mA(K,K-z),Is(K)},Va=(z,K)=>{gt=0,z=Ua(z,K),0<gt?c=z:Ko(z)},Wa=[];function Pr(z){var K=new Bs(z>>>=0);if(ue()[K.wd+12>>>0]==0){var re=1;ue()[K.wd+12>>>0]=re}return re=0,ue()[K.wd+13>>>0]=re,Wa.push(K),bA(z),wA(z)}var Sr=0,Kt=()=>{fs(0,0);var z=Wa.pop();qo(z.Gd),Sr=0};class Bs{constructor(K){this.Gd=K,this.wd=K-24}}function $a(z){throw Sr||(Sr=z>>>0),Sr}var en=z=>{var K=Sr;if(!K)return Ao(0),0;var re=new Bs(K);lt()[re.wd+16>>>2>>>0]=K;var me=lt()[re.wd+4>>>2>>>0];if(!me)return Ao(0),K;for(var _e of z){if(_e===0||_e===me)break;if(CA(_e,me,re.wd+16))return Ao(_e),K}return Ao(me),K};function On(){return en([])}function Pn(z){return en([z>>>0])}function Dn(z,K){return en([z>>>0,K>>>0])}var qn=()=>{var z=Wa.pop();z||Mt("no exception to throw");var K=z.Gd;if(ue()[z.wd+13>>>0]==0){Wa.push(z);var re=1;ue()[z.wd+13>>>0]=re,re=0,ue()[z.wd+12>>>0]=re}throw Sr=K};function sa(z,K,re){var me=new Bs(z>>>=0);throw K>>>=0,re>>>=0,lt()[me.wd+16>>>2>>>0]=0,lt()[me.wd+4>>>2>>>0]=K,lt()[me.wd+8>>>2>>>0]=re,Sr=z}function Zt(z,K,re,me){return _?It(2,1,z,K,re,me):Br(z,K,re,me)}function Br(z,K,re,me){if(z>>>=0,re>>>=0,me>>>=0,v===void 0)return 6;var _e=[];return _&&_e.length===0?Zt(z,K>>>=0,re,me):(z={ce:re,xd:z,Fd:me,Ld:_e},_?(z.yd="spawnThread",postMessage(z,_e),0):$e(z))}var zr=typeof TextDecoder<"u"?new TextDecoder:void 0,qs=(z,K=0,re=NaN)=>{var me=(K>>>=0)+re;for(re=K;z[re]&&!(re>=me);)++re;if(16<re-K&&z.buffer&&zr)return zr.decode(z.buffer instanceof ArrayBuffer?z.subarray(K,re):z.slice(K,re));for(me="";K<re;){var _e=z[K++];if(128&_e){var at=63&z[K++];if((224&_e)==192)me+=String.fromCharCode((31&_e)<<6|at);else{var yt=63&z[K++];65536>(_e=(240&_e)==224?(15&_e)<<12|at<<6|yt:(7&_e)<<18|at<<12|yt<<6|63&z[K++])?me+=String.fromCharCode(_e):(_e-=65536,me+=String.fromCharCode(55296|_e>>10,56320|1023&_e))}}else me+=String.fromCharCode(_e)}return me},aa=(z,K)=>(z>>>=0)?qs(ie(),z,K):"";function ks(z,K,re){return _?It(3,1,z,K,re):0}function vn(z,K){if(_)return It(4,1,z,K)}var Qn=z=>{for(var K=0,re=0;re<z.length;++re){var me=z.charCodeAt(re);127>=me?K++:2047>=me?K+=2:55296<=me&&57343>=me?(K+=4,++re):K+=3}return K},Sn=(z,K,re)=>{var me=ie();if(K>>>=0,0<re){var _e=K;re=K+re-1;for(var at=0;at<z.length;++at){var yt=z.charCodeAt(at);if(55296<=yt&&57343>=yt&&(yt=65536+((1023&yt)<<10)|1023&z.charCodeAt(++at)),127>=yt){if(K>=re)break;me[K++>>>0]=yt}else{if(2047>=yt){if(K+1>=re)break;me[K++>>>0]=192|yt>>6}else{if(65535>=yt){if(K+2>=re)break;me[K++>>>0]=224|yt>>12}else{if(K+3>=re)break;me[K++>>>0]=240|yt>>18,me[K++>>>0]=128|yt>>12&63}me[K++>>>0]=128|yt>>6&63}me[K++>>>0]=128|63&yt}}me[K>>>0]=0,z=K-_e}else z=0;return z};function ci(z,K){if(_)return It(5,1,z,K)}function ui(z,K,re){if(_)return It(6,1,z,K,re)}function di(z,K,re){return _?It(7,1,z,K,re):0}function Fa(z,K){if(_)return It(8,1,z,K)}function ai(z,K,re){if(_)return It(9,1,z,K,re)}function fi(z,K,re,me){if(_)return It(10,1,z,K,re,me)}function Ri(z,K,re,me){if(_)return It(11,1,z,K,re,me)}function Xn(z,K,re,me){if(_)return It(12,1,z,K,re,me)}function Zn(z){if(_)return It(13,1,z)}function ba(z,K){if(_)return It(14,1,z,K)}function Gi(z,K,re){if(_)return It(15,1,z,K,re)}var Fi,Jn,gi=()=>Mt(""),tn=z=>{for(var K="";ie()[z>>>0];)K+=Fi[ie()[z++>>>0]];return K},Ei={},pi={};function Jr(z,K,re={}){return function(me,_e,at={}){var yt=_e.name;if(!me)throw new Jn(`type "${yt}" must have a positive integer typeid pointer`);if(pi.hasOwnProperty(me)){if(at.Pd)return;throw new Jn(`Cannot register type '${yt}' twice`)}pi[me]=_e,Ei.hasOwnProperty(me)&&(_e=Ei[me],delete Ei[me],_e.forEach(Ut=>Ut()))}(z,K,re)}var Cs=(z,K,re)=>{switch(K){case 1:return re?me=>ue()[me>>>0]:me=>ie()[me>>>0];case 2:return re?me=>be()[me>>>1>>>0]:me=>Ye()[me>>>1>>>0];case 4:return re?me=>Le()[me>>>2>>>0]:me=>lt()[me>>>2>>>0];case 8:return re?me=>Ee[me>>>3]:me=>Ne[me>>>3];default:throw new TypeError(`invalid integer width (${K}): ${z}`)}};function bn(z,K,re){re>>>=0,Jr(z>>>=0,{name:K=tn(K>>>0),fromWireType:me=>me,toWireType:function(me,_e){if(typeof _e!="bigint"&&typeof _e!="number")throw _e=_e===null?"null":(me=typeof _e)=="object"||me==="array"||me==="function"?_e.toString():""+_e,new TypeError(`Cannot convert "${_e}" to ${this.name}`);return typeof _e=="number"&&(_e=BigInt(_e)),_e},zd:Nn,readValueFromPointer:Cs(K,re,K.indexOf("u")==-1),Ad:null})}var Nn=8;function zi(z,K,re,me){Jr(z>>>=0,{name:K=tn(K>>>0),fromWireType:function(_e){return!!_e},toWireType:function(_e,at){return at?re:me},zd:Nn,readValueFromPointer:function(_e){return this.fromWireType(ie()[_e>>>0])},Ad:null})}var Bi=[],rn=[];function Ln(z){9<(z>>>=0)&&--rn[z+1]==0&&(rn[z]=void 0,Bi.push(z))}var Qt=z=>{if(!z)throw new Jn("Cannot use deleted val. handle = "+z);return rn[z]},Be=z=>{switch(z){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let K=Bi.pop()||rn.length;return rn[K]=z,rn[K+1]=1,K}};function ot(z){return this.fromWireType(lt()[z>>>2>>>0])}var bt={name:"emscripten::val",fromWireType:z=>{var K=Qt(z);return Ln(z),K},toWireType:(z,K)=>Be(K),zd:Nn,readValueFromPointer:ot,Ad:null};function Tt(z){return Jr(z>>>0,bt)}var Pt=(z,K)=>{switch(K){case 4:return function(re){return this.fromWireType(ft()[re>>>2>>>0])};case 8:return function(re){return this.fromWireType(pt()[re>>>3>>>0])};default:throw new TypeError(`invalid float width (${K}): ${z}`)}};function st(z,K,re){re>>>=0,Jr(z>>>=0,{name:K=tn(K>>>0),fromWireType:me=>me,toWireType:(me,_e)=>_e,zd:Nn,readValueFromPointer:Pt(K,re),Ad:null})}function pe(z,K,re,me,_e){if(z>>>=0,re>>>=0,K=tn(K>>>0),_e===-1&&(_e=4294967295),_e=Ut=>Ut,me===0){var at=32-8*re;_e=Ut=>Ut<<at>>>at}var yt=K.includes("unsigned")?function(Ut,rr){return rr>>>0}:function(Ut,rr){return rr};Jr(z,{name:K,fromWireType:_e,toWireType:yt,zd:Nn,readValueFromPointer:Cs(K,re,me!==0),Ad:null})}function he(z,K,re){function me(at){var yt=lt()[at>>>2>>>0];return at=lt()[at+4>>>2>>>0],new _e(ue().buffer,at,yt)}var _e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][K];Jr(z>>>=0,{name:re=tn(re>>>0),fromWireType:me,zd:Nn,readValueFromPointer:me},{Pd:!0})}function qe(z,K){Jr(z>>>=0,{name:K=tn(K>>>0),fromWireType:function(re){for(var me,_e=lt()[re>>>2>>>0],at=re+4,yt=at,Ut=0;Ut<=_e;++Ut){var rr=at+Ut;Ut!=_e&&ie()[rr>>>0]!=0||(yt=aa(yt,rr-yt),me===void 0?me=yt:(me+="\0",me+=yt),yt=rr+1)}return Ci(re),me},toWireType:function(re,me){me instanceof ArrayBuffer&&(me=new Uint8Array(me));var _e=typeof me=="string";if(!(_e||me instanceof Uint8Array||me instanceof Uint8ClampedArray||me instanceof Int8Array))throw new Jn("Cannot pass non-string to std::string");var at=_e?Qn(me):me.length,yt=mo(4+at+1),Ut=yt+4;if(lt()[yt>>>2>>>0]=at,_e)Sn(me,Ut,at+1);else if(_e)for(_e=0;_e<at;++_e){var rr=me.charCodeAt(_e);if(255<rr)throw Ci(yt),new Jn("String has UTF-16 code units that do not fit in 8 bits");ie()[Ut+_e>>>0]=rr}else for(_e=0;_e<at;++_e)ie()[Ut+_e>>>0]=me[_e];return re!==null&&re.push(Ci,yt),yt},zd:Nn,readValueFromPointer:ot,Ad(re){Ci(re)}})}var it=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,kt=(z,K)=>{for(var re=z>>1,me=re+K/2;!(re>=me)&&Ye()[re>>>0];)++re;if(32<(re<<=1)-z&&it)return it.decode(ie().slice(z,re));for(re="",me=0;!(me>=K/2);++me){var _e=be()[z+2*me>>>1>>>0];if(_e==0)break;re+=String.fromCharCode(_e)}return re},Ht=(z,K,re)=>{if(re??(re=2147483647),2>re)return 0;var me=K;re=(re-=2)<2*z.length?re/2:z.length;for(var _e=0;_e<re;++_e){var at=z.charCodeAt(_e);be()[K>>>1>>>0]=at,K+=2}return be()[K>>>1>>>0]=0,K-me},ir=z=>2*z.length,fr=(z,K)=>{for(var re=0,me="";!(re>=K/4);){var _e=Le()[z+4*re>>>2>>>0];if(_e==0)break;++re,65536<=_e?(_e-=65536,me+=String.fromCharCode(55296|_e>>10,56320|1023&_e)):me+=String.fromCharCode(_e)}return me},nr=(z,K,re)=>{if(K>>>=0,re??(re=2147483647),4>re)return 0;var me=K;re=me+re-4;for(var _e=0;_e<z.length;++_e){var at=z.charCodeAt(_e);if(55296<=at&&57343>=at&&(at=65536+((1023&at)<<10)|1023&z.charCodeAt(++_e)),Le()[K>>>2>>>0]=at,(K+=4)+4>re)break}return Le()[K>>>2>>>0]=0,K-me},Yt=z=>{for(var K=0,re=0;re<z.length;++re){var me=z.charCodeAt(re);55296<=me&&57343>=me&&++re,K+=4}return K};function Ar(z,K,re){if(z>>>=0,K>>>=0,re=tn(re>>>=0),K===2)var me=kt,_e=Ht,at=ir,yt=Ut=>Ye()[Ut>>>1>>>0];else K===4&&(me=fr,_e=nr,at=Yt,yt=Ut=>lt()[Ut>>>2>>>0]);Jr(z,{name:re,fromWireType:Ut=>{for(var rr,pr=lt()[Ut>>>2>>>0],Nr=Ut+4,ns=0;ns<=pr;++ns){var ys=Ut+4+ns*K;ns!=pr&&yt(ys)!=0||(Nr=me(Nr,ys-Nr),rr===void 0?rr=Nr:(rr+="\0",rr+=Nr),Nr=ys+K)}return Ci(Ut),rr},toWireType:(Ut,rr)=>{if(typeof rr!="string")throw new Jn(`Cannot pass non-string to C++ string type ${re}`);var pr=at(rr),Nr=mo(4+pr+K);return lt()[Nr>>>2>>>0]=pr/K,_e(rr,Nr+4,pr+K),Ut!==null&&Ut.push(Ci,Nr),Nr},zd:Nn,readValueFromPointer:ot,Ad(Ut){Ci(Ut)}})}function Wr(z,K){Jr(z>>>=0,{Qd:!0,name:K=tn(K>>>0),zd:0,fromWireType:()=>{},toWireType:()=>{}})}function xs(z){hA(z>>>0,!k,1,!y,131072,!1),os()}var Ys=z=>{if(!xe)try{if(z(),!(0<gt))try{_?Ko(c):Vt(c)}catch(K){K instanceof ce||K=="unwind"||V(0,K)}}catch(K){K instanceof ce||K=="unwind"||V(0,K)}};function as(z){z>>>=0,typeof Atomics.ge=="function"&&(Atomics.ge(Le(),z>>>2,z).value.then(kr),z+=128,Atomics.store(Le(),z>>>2,1))}var kr=()=>{var z=Pi();z&&(as(z),Ys(bo))};function Ns(z,K){(z>>>=0)==K>>>0?setTimeout(kr):_?postMessage({Ed:z,yd:"checkMailbox"}):(z=Rr[z])&&z.postMessage({yd:"checkMailbox"})}var qt=[];function Tr(z,K,re,me,_e){for(K>>>=0,me/=2,qt.length=me,re=_e>>>0>>>3,_e=0;_e<me;_e++)qt[_e]=Ee[re+2*_e]?Ee[re+2*_e+1]:pt()[re+2*_e+1>>>0];return(K?zt[K]:xn[z])(...qt)}var ha=()=>{gt=0};function xa(z){z>>>=0,_?postMessage({yd:"cleanupThread",ee:z}):$s(Rr[z])}function Gs(z){}var Fs=(z,K)=>{var re=pi[z];if(re===void 0)throw z=Vi(z),re=tn(z),Ci(z),new Jn(`${K} has unknown type ${re}`);return re},Ls=(z,K,re)=>{var me=[];return z=z.toWireType(me,re),me.length&&(lt()[K>>>2>>>0]=Be(me)),z};function Ms(z,K,re){return K>>>=0,re>>>=0,z=Qt(z>>>0),K=Fs(K,"emval::as"),Ls(K,re,z)}function fa(z,K){return K>>>=0,z=Qt(z>>>0),(K=Fs(K,"emval::as")).toWireType(null,z)}var Ba=z=>{try{z()}catch(K){Mt(K)}},Ma=0,Ca=null,na=0,za=[],Hr={},la={},Rn=0,Mo=null,ol=[];function RA(z){return function(K){if(!xe){if(Ma===0){var re=!1,me=!1;K((_e=0)=>{if(!xe&&(na=_e,re=!0,me)){Ma=2,Ba(()=>zo(Ca)),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.resume(),_e=!1;try{var at=function(){var rr=Le()[Ca+8>>>2>>>0];return rr=gr[la[rr]],--gt,rr()}()}catch(rr){at=rr,_e=!0}var yt=!1;if(!Ca){var Ut=Mo;Ut&&(Mo=null,(_e?Ut.reject:Ut.resolve)(at),yt=!0)}if(_e&&!yt)throw at}}),me=!0,re||(Ma=1,Ca=function(){var _e=mo(65548),at=_e+12;lt()[_e>>>2>>>0]=at,lt()[_e+4>>>2>>>0]=at+65536,at=za[0];var yt=Hr[at];return yt===void 0&&(yt=Rn++,Hr[at]=yt,la[yt]=at),at=yt,Le()[_e+8>>>2>>>0]=at,_e}(),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.pause(),Ba(()=>DA(Ca)))}else Ma===2?(Ma=0,Ba(wn),Ci(Ca),Ca=null,ol.forEach(Ys)):Mt(`invalid state: ${Ma}`);return na}}(K=>{z().then(K)})}function Al(z){return z>>>=0,RA(async()=>{var K=await Qt(z);return Be(K)})}var hi=[];function uo(z,K,re,me){return re>>>=0,me>>>=0,(z=hi[z>>>0])(null,K=Qt(K>>>0),re,me)}var ll={},fo=z=>{var K=ll[z];return K===void 0?tn(z):K};function ni(z,K,re,me,_e){return re>>>=0,me>>>=0,_e>>>=0,(z=hi[z>>>0])(K=Qt(K>>>0),K[re=fo(re)],me,_e)}var dn=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Qr(z){return(z>>>=0)==0?Be(dn()):(z=fo(z),Be(dn()[z]))}var $n=z=>{var K=hi.length;return hi.push(z),K},jA=(z,K)=>{for(var re=Array(z),me=0;me<z;++me)re[me]=Fs(lt()[K+4*me>>>2>>>0],"parameter "+me);return re},Eo=(z,K)=>Object.defineProperty(K,"name",{value:z});function VA(z,K,re){var me=(K=jA(z,K>>>0)).shift();z--;var _e=`return function (obj, func, destructorsRef, args) {
`,at=0,yt=[];re===0&&yt.push("obj");for(var Ut=["retType"],rr=[me],pr=0;pr<z;++pr)yt.push("arg"+pr),Ut.push("argType"+pr),rr.push(K[pr]),_e+=`  var arg${pr} = argType${pr}.readValueFromPointer(args${at?"+"+at:""});
`,at+=K[pr].zd;return _e+=`  var rv = ${re===1?"new func":"func.call"}(${yt.join(", ")});
`,me.Qd||(Ut.push("emval_returnValue"),rr.push(Ls),_e+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Ut.push(_e+`};
`),z=function(Nr){var ns=Function;if(!(ns instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof ns} which is not a function`);var ys=Eo(ns.name||"unknownFunctionName",function(){});return ys.prototype=ns.prototype,ys=new ys,(Nr=ns.apply(ys,Nr))instanceof Object?Nr:ys}(Ut)(...rr),re=`methodCaller<(${K.map(Nr=>Nr.name).join(", ")}) => ${me.name}>`,$n(Eo(re,z))}function WA(z){return z=fo(z>>>0),Be(h[z])}function cl(z,K){return K>>>=0,z=Qt(z>>>0),K=Qt(K),Be(z[K])}function oA(z){9<(z>>>=0)&&(rn[z+1]+=1)}function Kl(){return Be([])}function ii(z){z=Qt(z>>>0);for(var K=Array(z.length),re=0;re<z.length;re++)K[re]=z[re];return Be(K)}function ca(z){return Be(fo(z>>>0))}function Ro(){return Be({})}function go(z){for(var K=Qt(z>>>=0);K.length;){var re=K.pop();K.pop()(re)}Ln(z)}function jn(z,K,re){K>>>=0,re>>>=0,z=Qt(z>>>0),K=Qt(K),re=Qt(re),z[K]=re}function po(z,K){return K>>>=0,z=(z=Fs(z>>>0,"_emval_take_value")).readValueFromPointer(K),Be(z)}function ji(z,K){z=-9007199254740992>z||9007199254740992<z?NaN:Number(z),K>>>=0,z=new Date(1e3*z),Le()[K>>>2>>>0]=z.getUTCSeconds(),Le()[K+4>>>2>>>0]=z.getUTCMinutes(),Le()[K+8>>>2>>>0]=z.getUTCHours(),Le()[K+12>>>2>>>0]=z.getUTCDate(),Le()[K+16>>>2>>>0]=z.getUTCMonth(),Le()[K+20>>>2>>>0]=z.getUTCFullYear()-1900,Le()[K+24>>>2>>>0]=z.getUTCDay(),z=(z.getTime()-Date.UTC(z.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,Le()[K+28>>>2>>>0]=z}var AA=z=>z%4==0&&(z%100!=0||z%400==0),lA=[0,31,60,91,121,152,182,213,244,274,305,335],ao=[0,31,59,90,120,151,181,212,243,273,304,334];function UA(z,K){z=-9007199254740992>z||9007199254740992<z?NaN:Number(z),K>>>=0,z=new Date(1e3*z),Le()[K>>>2>>>0]=z.getSeconds(),Le()[K+4>>>2>>>0]=z.getMinutes(),Le()[K+8>>>2>>>0]=z.getHours(),Le()[K+12>>>2>>>0]=z.getDate(),Le()[K+16>>>2>>>0]=z.getMonth(),Le()[K+20>>>2>>>0]=z.getFullYear()-1900,Le()[K+24>>>2>>>0]=z.getDay();var re=(AA(z.getFullYear())?lA:ao)[z.getMonth()]+z.getDate()-1|0;Le()[K+28>>>2>>>0]=re,Le()[K+36>>>2>>>0]=-60*z.getTimezoneOffset(),re=new Date(z.getFullYear(),6,1).getTimezoneOffset();var me=new Date(z.getFullYear(),0,1).getTimezoneOffset();z=0|(re!=me&&z.getTimezoneOffset()==Math.min(me,re)),Le()[K+32>>>2>>>0]=z}function jo(z){z>>>=0;var K=new Date(Le()[z+20>>>2>>>0]+1900,Le()[z+16>>>2>>>0],Le()[z+12>>>2>>>0],Le()[z+8>>>2>>>0],Le()[z+4>>>2>>>0],Le()[z>>>2>>>0],0),re=Le()[z+32>>>2>>>0],me=K.getTimezoneOffset(),_e=new Date(K.getFullYear(),6,1).getTimezoneOffset(),at=new Date(K.getFullYear(),0,1).getTimezoneOffset(),yt=Math.min(at,_e);return 0>re?Le()[z+32>>>2>>>0]=+(_e!=at&&yt==me):0<re!=(yt==me)&&(_e=Math.max(at,_e),K.setTime(K.getTime()+6e4*((0<re?yt:_e)-me))),Le()[z+24>>>2>>>0]=K.getDay(),re=(AA(K.getFullYear())?lA:ao)[K.getMonth()]+K.getDate()-1|0,Le()[z+28>>>2>>>0]=re,Le()[z>>>2>>>0]=K.getSeconds(),Le()[z+4>>>2>>>0]=K.getMinutes(),Le()[z+8>>>2>>>0]=K.getHours(),Le()[z+12>>>2>>>0]=K.getDate(),Le()[z+16>>>2>>>0]=K.getMonth(),Le()[z+20>>>2>>>0]=K.getYear(),z=K.getTime(),BigInt(isNaN(z)?-1:z/1e3)}function Vo(z,K,re,me,_e,at,yt){return _?It(16,1,z,K,re,me,_e,at,yt):-52}function mr(z,K,re,me,_e,at){if(_)return It(17,1,z,K,re,me,_e,at)}var Ti={},vr=()=>performance.timeOrigin+performance.now();function cA(z,K){if(_)return It(18,1,z,K);if(Ti[z]&&(clearTimeout(Ti[z].id),delete Ti[z]),!K)return 0;var re=setTimeout(()=>{delete Ti[z],Ys(()=>gn(z,performance.timeOrigin+performance.now()))},K);return Ti[z]={id:re,ke:K},0}function HA(z,K,re,me){z>>>=0,K>>>=0,re>>>=0,me>>>=0;var _e=new Date().getFullYear(),at=new Date(_e,0,1).getTimezoneOffset();_e=new Date(_e,6,1).getTimezoneOffset();var yt=Math.max(at,_e);lt()[z>>>2>>>0]=60*yt,Le()[K>>>2>>>0]=+(at!=_e),z=(K=Ut=>{var rr=Math.abs(Ut);return`UTC${0<=Ut?"-":"+"}${String(Math.floor(rr/60)).padStart(2,"0")}${String(rr%60).padStart(2,"0")}`})(at),K=K(_e),_e<at?(Sn(z,re,17),Sn(K,me,17)):(Sn(z,me,17),Sn(K,re,17))}var Vn=()=>Date.now();function mi(z,K,re){return 0<=z&&3>=z?(z===0?z=Date.now():z=performance.timeOrigin+performance.now(),Ee[re>>>0>>>3]=BigInt(Math.round(1e6*z)),0):28}var no=[],ho=(z,K)=>{no.length=0;for(var re;re=ie()[z++>>>0];){var me=re!=105;K+=(me&=re!=112)&&K%8?4:0,no.push(re==112?lt()[K>>>2>>>0]:re==106?Ee[K>>>3]:re==105?Le()[K>>>2>>>0]:pt()[K>>>3>>>0]),K+=me?8:4}return no};function YA(z,K,re){return z>>>=0,K=ho(K>>>0,re>>>0),zt[z](...K)}function Xa(z,K,re){return z>>>=0,K=ho(K>>>0,re>>>0),zt[z](...K)}var ul=()=>{};function dl(z,K){return f(aa(z>>>0,K>>>0))}var io=()=>{throw gt+=1,"unwind"};function oo(){return 4294901760}var fl=()=>navigator.hardwareConcurrency;function uA(){return Mt("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Bo(z){z>>>=0;var K=ie().length;if(z<=K||4294901760<z)return!1;for(var re=1;4>=re;re*=2){var me=K*(1+.2/re);me=Math.min(me,z+100663296);e:{me=(Math.min(4294901760,65536*Math.ceil(Math.max(z,me)/65536))-I.buffer.byteLength+65535)/65536|0;try{I.grow(me),Re();var _e=1;break e}catch{}_e=void 0}if(_e)return!0}return!1}var _r=()=>(Mt("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),ei={},dA=z=>{z.forEach(K=>{_r()})};function To(){var z=Error().stack.toString().split(`
`);return z[0]=="Error"&&z.shift(),dA(z),ei.Kd=_r(),ei.ae=z,ei.Kd}function Yi(z,K,re){if(z>>>=0,K>>>=0,ei.Kd==z)var me=ei.ae;else(me=Error().stack.toString().split(`
`))[0]=="Error"&&me.shift(),dA(me);for(var _e=3;me[_e]&&_r()!=z;)++_e;for(z=0;z<re&&me[z+_e];++z)Le()[K+4*z>>>2>>>0]=_r();return z}var Wo,Uo={},KA=()=>{if(!Wo){var z,K={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(z in Uo)Uo[z]===void 0?delete K[z]:K[z]=Uo[z];var re=[];for(z in K)re.push(`${z}=${K[z]}`);Wo=re}return Wo};function Ho(z,K){if(_)return It(19,1,z,K);z>>>=0,K>>>=0;var re=0;return KA().forEach((me,_e)=>{var at=K+re;for(_e=lt()[z+4*_e>>>2>>>0]=at,at=0;at<me.length;++at)ue()[_e++>>>0]=me.charCodeAt(at);ue()[_e>>>0]=0,re+=me.length+1}),0}function fA(z,K){if(_)return It(20,1,z,K);z>>>=0,K>>>=0;var re=KA();lt()[z>>>2>>>0]=re.length;var me=0;return re.forEach(_e=>me+=_e.length+1),lt()[K>>>2>>>0]=me,0}function qA(z){return _?It(21,1,z):52}function Za(z,K,re,me){return _?It(22,1,z,K,re,me):52}function gA(z,K,re,me){return _?It(23,1,z,K,re,me):70}var gl=[null,[],[]];function ds(z,K,re,me){if(_)return It(24,1,z,K,re,me);K>>>=0,re>>>=0,me>>>=0;for(var _e=0,at=0;at<re;at++){var yt=lt()[K>>>2>>>0],Ut=lt()[K+4>>>2>>>0];K+=8;for(var rr=0;rr<Ut;rr++){var pr=ie()[yt+rr>>>0],Nr=gl[z];pr===0||pr===10?((z===1?q:f)(qs(Nr)),Nr.length=0):Nr.push(pr)}_e+=Ut}return lt()[me>>>2>>>0]=_e,0}function zs(z){return z>>>0}_||function(){for(var z=h.numThreads-1;z--;)ts();ze.unshift(()=>{ht++,function(K){_?K():Promise.all(Xt.map(Ks)).then(K)}(()=>Bt())})}();for(var pA=Array(256),bi=0;256>bi;++bi)pA[bi]=String.fromCharCode(bi);Fi=pA,Jn=h.BindingError=class extends Error{constructor(z){super(z),this.name="BindingError"}},h.InternalError=class extends Error{constructor(z){super(z),this.name="InternalError"}},rn.push(0,1,void 0,1,null,1,!0,1,!1,1),h.count_emval_handles=()=>rn.length/2-5-Bi.length;var gr,xn=[Nt,_t,Zt,ks,vn,ci,ui,di,Fa,ai,fi,Ri,Xn,Zn,ba,Gi,Vo,mr,cA,Ho,fA,qA,Za,gA,ds];(async function(){function z(me,_e){return gr=me.exports,gr=function(){var at=gr,yt={};for(let[Ut,rr]of Object.entries(at))yt[Ut]=typeof rr=="function"?(...pr)=>{za.push(Ut);try{return rr(...pr)}finally{xe||(za.pop(),Ca&&Ma===1&&za.length===0&&(Ma=0,gt+=1,Ba(ko),typeof Fibers<"u"&&Fibers.le()))}}:rr;return yt}(),gr=function(){var at=gr,yt=rr=>pr=>rr(pr)>>>0,Ut=rr=>()=>rr()>>>0;return(at=Object.assign({},at)).Cb=yt(at.Cb),at.fc=Ut(at.fc),at.ic=yt(at.ic),at.vc=yt(at.vc),at.wc=Ut(at.wc),at.Ac=yt(at.Ac),at}(),wr.push(gr.jc),e=_e,Bt(),gr}ht++;var K=oe();if(h.instantiateWasm)return new Promise(me=>{h.instantiateWasm(K,(_e,at)=>{z(_e,at),me(_e.exports)})});if(_)return new Promise(me=>{ct=_e=>{var at=new WebAssembly.Instance(_e,oe());me(z(at,_e))}});Qe??(Qe=h.locateFile?h.locateFile?h.locateFile("ort-wasm-simd-threaded.jsep.wasm",Z):Z+"ort-wasm-simd-threaded.jsep.wasm":new URL("/assets/ort-wasm-simd-threaded.jsep-BAR87mbD.wasm",self.location.href).href);try{var re=await async function(me){var _e=Qe;if(!At&&typeof WebAssembly.instantiateStreaming=="function"&&!ye(_e))try{var at=fetch(_e,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(at,me)}catch(yt){f(`wasm streaming compile failed: ${yt}`),f("falling back to ArrayBuffer instantiation")}return async function(yt,Ut){try{var rr=await async function(pr){if(!At)try{var Nr=await B(pr);return new Uint8Array(Nr)}catch{}if(pr==Qe&&At)pr=new Uint8Array(At);else{if(!S)throw"both async and sync fetching of the wasm failed";pr=S(pr)}return pr}(yt);return await WebAssembly.instantiate(rr,Ut)}catch(pr){f(`failed to asynchronously prepare wasm: ${pr}`),Mt(pr)}}(_e,me)}(K);return z(re.instance,re.module)}catch(me){return p(me),Promise.reject(me)}})();var Vi=z=>(Vi=gr.Cb)(z),fn=()=>(fn=gr.Db)();h._OrtInit=(z,K)=>(h._OrtInit=gr.Eb)(z,K),h._OrtGetLastError=(z,K)=>(h._OrtGetLastError=gr.Fb)(z,K),h._OrtCreateSessionOptions=(z,K,re,me,_e,at,yt,Ut,rr,pr)=>(h._OrtCreateSessionOptions=gr.Gb)(z,K,re,me,_e,at,yt,Ut,rr,pr),h._OrtAppendExecutionProvider=(z,K)=>(h._OrtAppendExecutionProvider=gr.Hb)(z,K),h._OrtAddFreeDimensionOverride=(z,K,re)=>(h._OrtAddFreeDimensionOverride=gr.Ib)(z,K,re),h._OrtAddSessionConfigEntry=(z,K,re)=>(h._OrtAddSessionConfigEntry=gr.Jb)(z,K,re),h._OrtReleaseSessionOptions=z=>(h._OrtReleaseSessionOptions=gr.Kb)(z),h._OrtCreateSession=(z,K,re)=>(h._OrtCreateSession=gr.Lb)(z,K,re),h._OrtReleaseSession=z=>(h._OrtReleaseSession=gr.Mb)(z),h._OrtGetInputOutputCount=(z,K,re)=>(h._OrtGetInputOutputCount=gr.Nb)(z,K,re),h._OrtGetInputName=(z,K)=>(h._OrtGetInputName=gr.Ob)(z,K),h._OrtGetOutputName=(z,K)=>(h._OrtGetOutputName=gr.Pb)(z,K),h._OrtFree=z=>(h._OrtFree=gr.Qb)(z),h._OrtCreateTensor=(z,K,re,me,_e,at)=>(h._OrtCreateTensor=gr.Rb)(z,K,re,me,_e,at),h._OrtGetTensorData=(z,K,re,me,_e)=>(h._OrtGetTensorData=gr.Sb)(z,K,re,me,_e),h._OrtReleaseTensor=z=>(h._OrtReleaseTensor=gr.Tb)(z),h._OrtCreateRunOptions=(z,K,re,me)=>(h._OrtCreateRunOptions=gr.Ub)(z,K,re,me),h._OrtAddRunConfigEntry=(z,K,re)=>(h._OrtAddRunConfigEntry=gr.Vb)(z,K,re),h._OrtReleaseRunOptions=z=>(h._OrtReleaseRunOptions=gr.Wb)(z),h._OrtCreateBinding=z=>(h._OrtCreateBinding=gr.Xb)(z),h._OrtBindInput=(z,K,re)=>(h._OrtBindInput=gr.Yb)(z,K,re),h._OrtBindOutput=(z,K,re,me)=>(h._OrtBindOutput=gr.Zb)(z,K,re,me),h._OrtClearBoundOutputs=z=>(h._OrtClearBoundOutputs=gr._b)(z),h._OrtReleaseBinding=z=>(h._OrtReleaseBinding=gr.$b)(z),h._OrtRunWithBinding=(z,K,re,me,_e)=>(h._OrtRunWithBinding=gr.ac)(z,K,re,me,_e),h._OrtRun=(z,K,re,me,_e,at,yt,Ut)=>(h._OrtRun=gr.bc)(z,K,re,me,_e,at,yt,Ut),h._OrtEndProfiling=z=>(h._OrtEndProfiling=gr.cc)(z),h._JsepOutput=(z,K,re)=>(h._JsepOutput=gr.dc)(z,K,re),h._JsepGetNodeName=z=>(h._JsepGetNodeName=gr.ec)(z);var Pi=()=>(Pi=gr.fc)(),Ci=h._free=z=>(Ci=h._free=gr.gc)(z),mo=h._malloc=z=>(mo=h._malloc=gr.ic)(z),hA=(z,K,re,me,_e,at)=>(hA=gr.kc)(z,K,re,me,_e,at),Yo=()=>(Yo=gr.lc)(),Pa=(z,K,re,me,_e)=>(Pa=gr.mc)(z,K,re,me,_e),Po=z=>(Po=gr.nc)(z),Ko=z=>(Ko=gr.oc)(z),gn=(z,K)=>(gn=gr.pc)(z,K),bo=()=>(bo=gr.qc)(),fs=(z,K)=>(fs=gr.rc)(z,K),Ao=z=>(Ao=gr.sc)(z),mA=(z,K)=>(mA=gr.tc)(z,K),Is=z=>(Is=gr.uc)(z),Co=z=>(Co=gr.vc)(z),ls=()=>(ls=gr.wc)(),qo=z=>(qo=gr.xc)(z),bA=z=>(bA=gr.yc)(z),CA=(z,K,re)=>(CA=gr.zc)(z,K,re),wA=z=>(wA=gr.Ac)(z),Oi=h.dynCall_iii=(z,K,re)=>(Oi=h.dynCall_iii=gr.Bc)(z,K,re),Xo=h.dynCall_vi=(z,K)=>(Xo=h.dynCall_vi=gr.Cc)(z,K),Ua=h.dynCall_ii=(z,K)=>(Ua=h.dynCall_ii=gr.Dc)(z,K),Zo=h.dynCall_vii=(z,K,re)=>(Zo=h.dynCall_vii=gr.Ec)(z,K,re),Jo=h.dynCall_iiii=(z,K,re,me)=>(Jo=h.dynCall_iiii=gr.Fc)(z,K,re,me),Do=h.dynCall_viii=(z,K,re,me)=>(Do=h.dynCall_viii=gr.Gc)(z,K,re,me),Wn=h.dynCall_iiiii=(z,K,re,me,_e)=>(Wn=h.dynCall_iiiii=gr.Hc)(z,K,re,me,_e),So=h.dynCall_viiii=(z,K,re,me,_e)=>(So=h.dynCall_viiii=gr.Ic)(z,K,re,me,_e),IA=h.dynCall_viiiiii=(z,K,re,me,_e,at,yt)=>(IA=h.dynCall_viiiiii=gr.Jc)(z,K,re,me,_e,at,yt),wi=h.dynCall_viiiiiii=(z,K,re,me,_e,at,yt,Ut)=>(wi=h.dynCall_viiiiiii=gr.Kc)(z,K,re,me,_e,at,yt,Ut),yA=h.dynCall_ji=(z,K)=>(yA=h.dynCall_ji=gr.Lc)(z,K),$o=h.dynCall_v=z=>($o=h.dynCall_v=gr.Mc)(z),eA=h.dynCall_viiiii=(z,K,re,me,_e,at)=>(eA=h.dynCall_viiiii=gr.Nc)(z,K,re,me,_e,at),wo=h.dynCall_i=z=>(wo=h.dynCall_i=gr.Oc)(z),kA=h.dynCall_fii=(z,K,re)=>(kA=h.dynCall_fii=gr.Pc)(z,K,re),_A=h.dynCall_viiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr)=>(_A=h.dynCall_viiiiiiii=gr.Qc)(z,K,re,me,_e,at,yt,Ut,rr),XA=h.dynCall_viiiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr)=>(XA=h.dynCall_viiiiiiiiii=gr.Rc)(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr),Cn=h.dynCall_jiii=(z,K,re,me)=>(Cn=h.dynCall_jiii=gr.Sc)(z,K,re,me),Io=h.dynCall_dii=(z,K,re)=>(Io=h.dynCall_dii=gr.Tc)(z,K,re),Mn=h.dynCall_viiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr)=>(Mn=h.dynCall_viiiiiiiii=gr.Uc)(z,K,re,me,_e,at,yt,Ut,rr,pr),vA=h.dynCall_viiiiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns)=>(vA=h.dynCall_viiiiiiiiiii=gr.Vc)(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns),Go=h.dynCall_iiiiii=(z,K,re,me,_e,at)=>(Go=h.dynCall_iiiiii=gr.Wc)(z,K,re,me,_e,at),Ii=h.dynCall_iij=(z,K,re)=>(Ii=h.dynCall_iij=gr.Xc)(z,K,re),wa=h.dynCall_iiiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr)=>(wa=h.dynCall_iiiiiiiiii=gr.Yc)(z,K,re,me,_e,at,yt,Ut,rr,pr),xA=h.dynCall_iiiiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr)=>(xA=h.dynCall_iiiiiiiiiii=gr.Zc)(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr),Ki=h.dynCall_vij=(z,K,re)=>(Ki=h.dynCall_vij=gr._c)(z,K,re),lo=h.dynCall_iiif=(z,K,re,me)=>(lo=h.dynCall_iiif=gr.$c)(z,K,re,me),ZA=h.dynCall_iiij=(z,K,re,me)=>(ZA=h.dynCall_iiij=gr.ad)(z,K,re,me),MA=h.dynCall_fiii=(z,K,re,me)=>(MA=h.dynCall_fiii=gr.bd)(z,K,re,me),tA=h.dynCall_viiiiiiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)=>(tA=h.dynCall_viiiiiiiiiiiii=gr.cd)(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea),JA=h.dynCall_vjiii=(z,K,re,me,_e)=>(JA=h.dynCall_vjiii=gr.dd)(z,K,re,me,_e),qi=h.dynCall_vif=(z,K,re)=>(qi=h.dynCall_vif=gr.ed)(z,K,re),yi=h.dynCall_iiiiiii=(z,K,re,me,_e,at,yt)=>(yi=h.dynCall_iiiiiii=gr.fd)(z,K,re,me,_e,at,yt),EA=h.dynCall_iiiij=(z,K,re,me,_e)=>(EA=h.dynCall_iiiij=gr.gd)(z,K,re,me,_e),Fo=h.dynCall_iiiiiiii=(z,K,re,me,_e,at,yt,Ut)=>(Fo=h.dynCall_iiiiiiii=gr.hd)(z,K,re,me,_e,at,yt,Ut),sn=h.dynCall_viiiiiiiiiiii=(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys)=>(sn=h.dynCall_viiiiiiiiiiii=gr.id)(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys),ua=h.dynCall_diii=(z,K,re,me)=>(ua=h.dynCall_diii=gr.jd)(z,K,re,me),yo=h.dynCall_jiiii=(z,K,re,me,_e)=>(yo=h.dynCall_jiiii=gr.kd)(z,K,re,me,_e),BA=h.dynCall_viiij=(z,K,re,me,_e)=>(BA=h.dynCall_viiij=gr.ld)(z,K,re,me,_e),Xi=h.dynCall_fiiii=(z,K,re,me,_e)=>(Xi=h.dynCall_fiiii=gr.md)(z,K,re,me,_e),Zi=h.dynCall_viiif=(z,K,re,me,_e)=>(Zi=h.dynCall_viiif=gr.nd)(z,K,re,me,_e),Ji=h.dynCall_diiii=(z,K,re,me,_e)=>(Ji=h.dynCall_diiii=gr.od)(z,K,re,me,_e),TA=h.dynCall_viiid=(z,K,re,me,_e)=>(TA=h.dynCall_viiid=gr.pd)(z,K,re,me,_e),En=h.dynCall_iiiijii=(z,K,re,me,_e,at,yt)=>(En=h.dynCall_iiiijii=gr.qd)(z,K,re,me,_e,at,yt),PA=h.dynCall_iiiiiij=(z,K,re,me,_e,at,yt)=>(PA=h.dynCall_iiiiiij=gr.rd)(z,K,re,me,_e,at,yt),DA=z=>(DA=gr.sd)(z),ko=()=>(ko=gr.td)(),zo=z=>(zo=gr.ud)(z),wn=()=>(wn=gr.vd)();function SA(z,K,re){var me=ls();try{Zo(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function GA(z,K,re){var me=ls();try{return Oi(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function _o(z,K){var re=ls();try{Xo(z,K)}catch(me){if(Is(re),me!==me+0)throw me;fs(1,0)}}function pl(z,K){var re=ls();try{return Ua(z,K)}catch(me){if(Is(re),me!==me+0)throw me;fs(1,0)}}function Oo(z,K,re,me){var _e=ls();try{return Jo(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;fs(1,0)}}function rs(z,K,re,me,_e){var at=ls();try{So(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function t(z,K,re,me,_e){var at=ls();try{return Wn(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function r(z,K,re,me){var _e=ls();try{Do(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;fs(1,0)}}function s(z,K,re,me,_e,at,yt){var Ut=ls();try{return yi(z,K,re,me,_e,at,yt)}catch(rr){if(Is(Ut),rr!==rr+0)throw rr;fs(1,0)}}function n(z){var K=ls();try{$o(z)}catch(re){if(Is(K),re!==re+0)throw re;fs(1,0)}}function A(z,K,re){var me=ls();try{return Ii(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function l(z,K,re,me,_e,at){var yt=ls();try{eA(z,K,re,me,_e,at)}catch(Ut){if(Is(yt),Ut!==Ut+0)throw Ut;fs(1,0)}}function g(z,K,re){var me=ls();try{Ki(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function m(z,K,re,me,_e,at,yt){var Ut=ls();try{IA(z,K,re,me,_e,at,yt)}catch(rr){if(Is(Ut),rr!==rr+0)throw rr;fs(1,0)}}function w(z,K,re,me,_e,at,yt,Ut){var rr=ls();try{wi(z,K,re,me,_e,at,yt,Ut)}catch(pr){if(Is(rr),pr!==pr+0)throw pr;fs(1,0)}}function T(z,K,re,me,_e,at){var yt=ls();try{return Go(z,K,re,me,_e,at)}catch(Ut){if(Is(yt),Ut!==Ut+0)throw Ut;fs(1,0)}}function x(z,K,re,me,_e,at,yt,Ut){var rr=ls();try{return Fo(z,K,re,me,_e,at,yt,Ut)}catch(pr){if(Is(rr),pr!==pr+0)throw pr;fs(1,0)}}function F(z,K,re,me,_e,at,yt,Ut,rr,pr){var Nr=ls();try{Mn(z,K,re,me,_e,at,yt,Ut,rr,pr)}catch(ns){if(Is(Nr),ns!==ns+0)throw ns;fs(1,0)}}function U(z,K,re,me,_e,at,yt,Ut,rr){var pr=ls();try{_A(z,K,re,me,_e,at,yt,Ut,rr)}catch(Nr){if(Is(pr),Nr!==Nr+0)throw Nr;fs(1,0)}}function ee(z){var K=ls();try{return wo(z)}catch(re){if(Is(K),re!==re+0)throw re;fs(1,0)}}function Ae(z,K,re,me,_e,at,yt,Ut,rr,pr){var Nr=ls();try{return wa(z,K,re,me,_e,at,yt,Ut,rr,pr)}catch(ns){if(Is(Nr),ns!==ns+0)throw ns;fs(1,0)}}function Ce(z,K,re){var me=ls();try{return kA(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function Me(z,K,re,me){var _e=ls();try{return Cn(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;return fs(1,0),0n}}function We(z,K,re){var me=ls();try{return Io(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function Ze(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns){var ys=ls();try{vA(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns)}catch(Ea){if(Is(ys),Ea!==Ea+0)throw Ea;fs(1,0)}}function ut(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr){var ns=ls();try{XA(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr)}catch(ys){if(Is(ns),ys!==ys+0)throw ys;fs(1,0)}}function mt(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr){var ns=ls();try{return xA(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr)}catch(ys){if(Is(ns),ys!==ys+0)throw ys;fs(1,0)}}function xt(z,K,re,me){var _e=ls();try{return lo(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;fs(1,0)}}function St(z,K,re,me){var _e=ls();try{return ZA(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;fs(1,0)}}function Rt(z,K,re,me){var _e=ls();try{return MA(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;fs(1,0)}}function sr(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea){var ti=ls();try{tA(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys,Ea)}catch(rA){if(Is(ti),rA!==rA+0)throw rA;fs(1,0)}}function br(z,K,re,me,_e){var at=ls();try{JA(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function Ir(z,K,re){var me=ls();try{qi(z,K,re)}catch(_e){if(Is(me),_e!==_e+0)throw _e;fs(1,0)}}function jr(z,K){var re=ls();try{return yA(z,K)}catch(me){if(Is(re),me!==me+0)throw me;return fs(1,0),0n}}function Ur(z,K,re,me,_e){var at=ls();try{return EA(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function As(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys){var Ea=ls();try{sn(z,K,re,me,_e,at,yt,Ut,rr,pr,Nr,ns,ys)}catch(ti){if(Is(Ea),ti!==ti+0)throw ti;fs(1,0)}}function Ds(z,K,re,me){var _e=ls();try{return ua(z,K,re,me)}catch(at){if(Is(_e),at!==at+0)throw at;fs(1,0)}}function ea(z,K,re,me,_e){var at=ls();try{return yo(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;return fs(1,0),0n}}function da(z,K,re,me,_e){var at=ls();try{BA(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function ma(z,K,re,me,_e){var at=ls();try{return Xi(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function Ia(z,K,re,me,_e){var at=ls();try{Zi(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function Na(z,K,re,me,_e){var at=ls();try{return Ji(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function La(z,K,re,me,_e){var at=ls();try{TA(z,K,re,me,_e)}catch(yt){if(Is(at),yt!==yt+0)throw yt;fs(1,0)}}function Ja(z,K,re,me,_e,at,yt){var Ut=ls();try{return En(z,K,re,me,_e,at,yt)}catch(rr){if(Is(Ut),rr!==rr+0)throw rr;fs(1,0)}}function an(z,K,re,me,_e,at,yt){var Ut=ls();try{return PA(z,K,re,me,_e,at,yt)}catch(rr){if(Is(Ut),rr!==rr+0)throw rr;fs(1,0)}}return h.stackSave=()=>ls(),h.stackRestore=z=>Is(z),h.stackAlloc=z=>Co(z),h.setValue=function(z,K,re="i8"){switch(re.endsWith("*")&&(re="*"),re){case"i1":case"i8":ue()[z>>>0]=K;break;case"i16":be()[z>>>1>>>0]=K;break;case"i32":Le()[z>>>2>>>0]=K;break;case"i64":Ee[z>>>3]=BigInt(K);break;case"float":ft()[z>>>2>>>0]=K;break;case"double":pt()[z>>>3>>>0]=K;break;case"*":lt()[z>>>2>>>0]=K;break;default:Mt(`invalid type for setValue: ${re}`)}},h.getValue=function(z,K="i8"){switch(K.endsWith("*")&&(K="*"),K){case"i1":case"i8":return ue()[z>>>0];case"i16":return be()[z>>>1>>>0];case"i32":return Le()[z>>>2>>>0];case"i64":return Ee[z>>>3];case"float":return ft()[z>>>2>>>0];case"double":return pt()[z>>>3>>>0];case"*":return lt()[z>>>2>>>0];default:Mt(`invalid type for getValue: ${K}`)}},h.UTF8ToString=aa,h.stringToUTF8=Sn,h.lengthBytesUTF8=Qn,function z(){if(0<ht)wt=z;else if(_)u(h),Se();else{for(;0<ze.length;)ze.shift()(h);0<ht?wt=z:(h.calledRun=!0,xe||(Se(),u(h)))}}(),h.PTR_SIZE=4,C}),Tm=Dg,Pm=(o=(i=globalThis.self)==null?void 0:i.name)==null?void 0:o.startsWith("em-pthread"),Pm&&Dg()}),Sg,Gg,Dm,nl,Sm,y2,Gm,Fm,Fg,zm,zg,Om,Og,Qm,Qg=xr(()=>{Eg(),Sg=typeof location>"u"?void 0:location.origin,Gg=self.location.href>"file:"&&self.location.href<"file;",Dm=()=>{{if(Gg){let i=URL;return new URL(new i("ort.bundle.min.mjs",self.location.href).href,Sg).href}return self.location.href}},nl=Dm(),Sm=()=>{if(nl&&!nl.startsWith("blob:"))return nl.substring(0,nl.lastIndexOf("/")+1)},y2=(i,o)=>{try{let a=o??nl;return(a?new URL(i,a):new URL(i)).origin===Sg}catch{return!1}},Gm=(i,o)=>{let a=o??nl;try{return(a?new URL(i,a):new URL(i)).href}catch{return}},Fm=(i,o)=>`${o??"./"}${i}`,Fg=async i=>{let o=await(await fetch(i,{credentials:"same-origin"})).blob();return URL.createObjectURL(o)},zm=async i=>(await import(i)).default,zg=($_(),w2(Mm)).default,Om=async()=>{if(!nl)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(y2(nl))return[void 0,zg()];let i=await Fg(nl);return[i,zg(i)]},Og=(tv(),w2(Bm)).default,Qm=async(i,o,a)=>{if(!i&&!o&&Og&&nl&&y2(nl))return[void 0,Og];{let u="ort-wasm-simd-threaded.jsep.mjs",p=i??Gm(u,o),h=a&&p&&!y2(p,o),C=h?await Fg(p):p??Fm(u,o);return[h?C:void 0,await zm(C)]}}}),Ng,k2,Xf,Lg,Nm,Lm,Rg,ro,Pd=xr(()=>{Qg(),k2=!1,Xf=!1,Lg=!1,Nm=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Lm=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Rg=async i=>{if(k2)return Promise.resolve();if(Xf)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Lg)throw new Error("previous call to 'initializeWebAssembly()' failed.");Xf=!0;let o=i.initTimeout,a=i.numThreads;if(!Lm())throw new Error("WebAssembly SIMD is not supported in the current environment.");let u=Nm();a>1&&!u&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+a+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),i.numThreads=a=1);let p=i.wasmPaths,h=typeof p=="string"?p:void 0,C=p==null?void 0:p.mjs,y=(C==null?void 0:C.href)??C,k=p==null?void 0:p.wasm,_=(k==null?void 0:k.href)??k,v=i.wasmBinary,[M,B]=await Qm(y,h,a>1),S=!1,N=[];if(o>0&&N.push(new Promise(V=>{setTimeout(()=>{S=!0,V()},o)})),N.push(new Promise((V,Z)=>{let O={numThreads:a};if(v)O.wasmBinary=v;else if(_||h)O.locateFile=Q=>_??h+Q;else if(y&&y.indexOf("blob:")!==0)O.locateFile=Q=>new URL(Q,y).href;else if(M){let Q=Sm();Q&&(O.locateFile=q=>Q+q)}B(O).then(Q=>{Xf=!1,k2=!0,Ng=Q,V(),M&&URL.revokeObjectURL(M)},Q=>{Xf=!1,Lg=!0,Z(Q)})})),await Promise.race(N),S)throw new Error(`WebAssembly backend initializing failed due to timeout: ${o}ms`)},ro=()=>{if(k2&&Ng)return Ng;throw new Error("WebAssembly is not initialized yet.")}}),xo,_2,Ka,jg=xr(()=>{Pd(),xo=(i,o)=>{let a=ro(),u=a.lengthBytesUTF8(i)+1,p=a._malloc(u);return a.stringToUTF8(i,p,u),o.push(p),p},_2=(i,o,a,u)=>{if(typeof i=="object"&&i!==null){if(a.has(i))throw new Error("Circular reference in options");a.add(i)}Object.entries(i).forEach(([p,h])=>{let C=o?o+p:p;if(typeof h=="object")_2(h,C+".",a,u);else if(typeof h=="string"||typeof h=="number")u(C,h.toString());else if(typeof h=="boolean")u(C,h?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof h}`)})},Ka=i=>{let o=ro(),a=o.stackSave();try{let u=o.PTR_SIZE,p=o.stackAlloc(2*u);o._OrtGetLastError(p,p+u);let h=Number(o.getValue(p,u===4?"i32":"i64")),C=o.getValue(p+u,"*"),y=C?o.UTF8ToString(C):"";throw new Error(`${i} ERROR_CODE: ${h}, ERROR_MESSAGE: ${y}`)}finally{o.stackRestore(a)}}}),Rm,rv=xr(()=>{Pd(),jg(),Rm=i=>{let o=ro(),a=0,u=[],p=i||{};try{if((i==null?void 0:i.logSeverityLevel)===void 0)p.logSeverityLevel=2;else if(typeof i.logSeverityLevel!="number"||!Number.isInteger(i.logSeverityLevel)||i.logSeverityLevel<0||i.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${i.logSeverityLevel}`);if((i==null?void 0:i.logVerbosityLevel)===void 0)p.logVerbosityLevel=0;else if(typeof i.logVerbosityLevel!="number"||!Number.isInteger(i.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${i.logVerbosityLevel}`);(i==null?void 0:i.terminate)===void 0&&(p.terminate=!1);let h=0;return(i==null?void 0:i.tag)!==void 0&&(h=xo(i.tag,u)),a=o._OrtCreateRunOptions(p.logSeverityLevel,p.logVerbosityLevel,!!p.terminate,h),a===0&&Ka("Can't create run options."),(i==null?void 0:i.extra)!==void 0&&_2(i.extra,"",new WeakSet,(C,y)=>{let k=xo(C,u),_=xo(y,u);o._OrtAddRunConfigEntry(a,k,_)!==0&&Ka(`Can't set a run config entry: ${C} - ${y}.`)}),[a,u]}catch(h){throw a!==0&&o._OrtReleaseRunOptions(a),u.forEach(C=>o._free(C)),h}}}),jm,Vm,Wm,Um,Hm,sv=xr(()=>{Pd(),jg(),jm=i=>{switch(i){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${i}`)}},Vm=i=>{switch(i){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${i}`)}},Wm=i=>{i.extra||(i.extra={}),i.extra.session||(i.extra.session={});let o=i.extra.session;o.use_ort_model_bytes_directly||(o.use_ort_model_bytes_directly="1"),i.executionProviders&&i.executionProviders.some(a=>(typeof a=="string"?a:a.name)==="webgpu")&&(i.enableMemPattern=!1)},Um=(i,o,a)=>{for(let u of o){let p=typeof u=="string"?u:u.name;switch(p){case"webnn":if(p="WEBNN",typeof u!="string"){let C=u==null?void 0:u.deviceType;if(C){let y=xo("deviceType",a),k=xo(C,a);ro()._OrtAddSessionConfigEntry(i,y,k)!==0&&Ka(`Can't set a session config entry: 'deviceType' - ${C}.`)}}break;case"webgpu":if(p="JS",typeof u!="string"){let C=u;if(C!=null&&C.preferredLayout){if(C.preferredLayout!=="NCHW"&&C.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${C.preferredLayout}`);let y=xo("preferredLayout",a),k=xo(C.preferredLayout,a);ro()._OrtAddSessionConfigEntry(i,y,k)!==0&&Ka(`Can't set a session config entry: 'preferredLayout' - ${C.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${p}`)}let h=xo(p,a);ro()._OrtAppendExecutionProvider(i,h)!==0&&Ka(`Can't append execution provider: ${p}.`)}},Hm=i=>{let o=ro(),a=0,u=[],p=i||{};Wm(p);try{let h=jm(p.graphOptimizationLevel??"all"),C=Vm(p.executionMode??"sequential"),y=typeof p.logId=="string"?xo(p.logId,u):0,k=p.logSeverityLevel??2;if(!Number.isInteger(k)||k<0||k>4)throw new Error(`log serverity level is not valid: ${k}`);let _=p.logVerbosityLevel??0;if(!Number.isInteger(_)||_<0||_>4)throw new Error(`log verbosity level is not valid: ${_}`);let v=typeof p.optimizedModelFilePath=="string"?xo(p.optimizedModelFilePath,u):0;if(a=o._OrtCreateSessionOptions(h,!!p.enableCpuMemArena,!!p.enableMemPattern,C,!!p.enableProfiling,0,y,k,_,v),a===0&&Ka("Can't create session options."),p.executionProviders&&Um(a,p.executionProviders,u),p.enableGraphCapture!==void 0){if(typeof p.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${p.enableGraphCapture}`);let M=xo("enableGraphCapture",u),B=xo(p.enableGraphCapture.toString(),u);o._OrtAddSessionConfigEntry(a,M,B)!==0&&Ka(`Can't set a session config entry: 'enableGraphCapture' - ${p.enableGraphCapture}.`)}if(p.freeDimensionOverrides)for(let[M,B]of Object.entries(p.freeDimensionOverrides)){if(typeof M!="string")throw new Error(`free dimension override name must be a string: ${M}`);if(typeof B!="number"||!Number.isInteger(B)||B<0)throw new Error(`free dimension override value must be a non-negative integer: ${B}`);let S=xo(M,u);o._OrtAddFreeDimensionOverride(a,S,B)!==0&&Ka(`Can't set a free dimension override: ${M} - ${B}.`)}return p.extra!==void 0&&_2(p.extra,"",new WeakSet,(M,B)=>{let S=xo(M,u),N=xo(B,u);o._OrtAddSessionConfigEntry(a,S,N)!==0&&Ka(`Can't set a session config entry: ${M} - ${B}.`)}),[a,u]}catch(h){throw a!==0&&o._OrtReleaseSessionOptions(a)!==0&&Ka("Can't release session options."),u.forEach(C=>o._free(C)),h}}}),Ef,Dd,Sd,Vg,v2,Wg,Ug,Hg,Qs=xr(()=>{Ef=i=>{switch(i){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${i}`)}},Dd=i=>{switch(i){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${i}`)}},Sd=(i,o)=>{let a=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][i],u=typeof o=="number"?o:o.reduce((p,h)=>p*h,1);return a>0?Math.ceil(u*a):void 0},Vg=i=>{switch(i){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${i}`)}},v2=i=>{switch(i){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${i}`)}},Wg=i=>i==="float32"||i==="float16"||i==="int32"||i==="int64"||i==="uint32"||i==="uint8"||i==="bool"||i==="uint4"||i==="int4",Ug=i=>i==="float32"||i==="float16"||i==="int32"||i==="int64"||i==="uint32"||i==="uint64"||i==="int8"||i==="uint8"||i==="bool"||i==="uint4"||i==="int4",Hg=i=>{switch(i){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${i}`)}}}),Yg,Ym=xr(()=>{Eg(),Yg=async i=>{if(typeof i=="string"){let o=await fetch(i);if(!o.ok)throw new Error(`failed to load external data file: ${i}`);let a=o.headers.get("Content-Length"),u=a?parseInt(a,10):0;if(u<1073741824)return new Uint8Array(await o.arrayBuffer());{if(!o.body)throw new Error(`failed to load external data file: ${i}, no response body.`);let p=o.body.getReader(),h;try{h=new ArrayBuffer(u)}catch(y){if(y instanceof RangeError){let k=Math.ceil(u/65536);h=new WebAssembly.Memory({initial:k,maximum:k}).buffer}else throw y}let C=0;for(;;){let{done:y,value:k}=await p.read();if(y)break;let _=k.byteLength;new Uint8Array(h,C,_).set(k),C+=_}return new Uint8Array(h,0,u)}}else return i instanceof Blob?new Uint8Array(await i.arrayBuffer()):i instanceof Uint8Array?i:new Uint8Array(i)}}),Km,qm,Xm,Zm,Kg,Jm,Ga,E0=xr(()=>{Qs(),Km=["V","I","W","E","F"],qm=(i,o)=>{console.log(`[${Km[i]},${new Date().toISOString()}]${o}`)},Kg=(i,o)=>{Xm=i,Zm=o},Jm=(i,o)=>{let a=v2(i),u=v2(Xm);a>=u&&qm(a,typeof o=="function"?o():o)},Ga=(...i)=>{Zm&&Jm(...i)}}),qg,$m=xr(()=>{Qs(),qg=(i,o)=>new(Vg(o))(i)}),Xg=xr(()=>{}),Zg,x2,M2,eb,tb,Jg,$g,rb,sb,av=xr(()=>{E0(),Xg(),Zg=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),x2=[],M2=i=>Math.ceil(Number(i)/16)*16,eb=i=>{for(let o=0;o<x2.length;o++){let a=x2[o];if(i<=a)return a}return Math.ceil(i/16)*16},tb=1,Jg=()=>tb++,$g=async(i,o,a,u)=>{let p=M2(a),h=i.device.createBuffer({size:p,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let C=i.getCommandEncoder();i.endComputePass(),C.copyBufferToBuffer(o,0,h,0,p),i.flush(),await h.mapAsync(GPUMapMode.READ);let y=h.getMappedRange();if(u){let k=u();return k.set(new Uint8Array(y,0,a)),k}else return new Uint8Array(y.slice(0,a))}finally{h.destroy()}},rb=class{constructor(i){this.backend=i,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[o]of Zg)x2.push(o),this.freeBuffers.set(o,[]),this.freeUniformBuffers.set(o,[]);this.sessionCount=0}upload(i,o){let a=o.buffer,u=o.byteOffset,p=o.byteLength,h=M2(p),C=this.storageCache.get(i);if(!C)throw new Error("gpu data for uploading does not exist");if(Number(C.originalSize)!==p)throw new Error(`inconsistent data size. gpu data size=${C.originalSize}, data size=${p}`);let y=this.backend.device.createBuffer({mappedAtCreation:!0,size:h,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),k=y.getMappedRange();new Uint8Array(k).set(new Uint8Array(a,u,p)),y.unmap();let _=this.backend.device.createCommandEncoder();_.copyBufferToBuffer(y,0,C.gpuData.buffer,0,h),this.backend.device.queue.submit([_.finish()]),y.destroy(),Ga("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${i})`)}memcpy(i,o){let a=this.storageCache.get(i);if(!a)throw new Error("source gpu data for memcpy does not exist");let u=this.storageCache.get(o);if(!u)throw new Error("destination gpu data for memcpy does not exist");if(a.originalSize!==u.originalSize)throw new Error("inconsistent source and destination gpu data size");let p=M2(a.originalSize),h=this.backend.getCommandEncoder();this.backend.endComputePass(),h.copyBufferToBuffer(a.gpuData.buffer,0,u.gpuData.buffer,0,p)}registerExternalBuffer(i,o,a){let u;if(a){if(u=a[0],i===a[1])return Ga("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${o}) => id=${u}, buffer is the same, skip.`),u;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else u=Jg();return this.storageCache.set(u,{gpuData:{id:u,type:0,buffer:i},originalSize:o}),Ga("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${o}) => id=${u}, registered.`),u}unregisterExternalBuffer(i){i!==void 0&&(this.storageCache.delete(i),Ga("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${i}`))}create(i,o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let a=eb(i),u,p=(o&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,h=(o&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(p||h){let y=(p?this.freeBuffers:this.freeUniformBuffers).get(a);y?y.length>0?u=y.pop():u=this.backend.device.createBuffer({size:a,usage:o}):u=this.backend.device.createBuffer({size:a,usage:o})}else u=this.backend.device.createBuffer({size:a,usage:o});let C={id:Jg(),type:0,buffer:u};return this.storageCache.set(C.id,{gpuData:C,originalSize:Number(i)}),Ga("verbose",()=>`[WebGPU] GpuDataManager.create(size=${i}) => id=${C.id}`),C}get(i){var o;return(o=this.storageCache.get(i))==null?void 0:o.gpuData}release(i){let o=typeof i=="bigint"?Number(i):i,a=this.storageCache.get(o);if(!a){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Ga("verbose",()=>`[WebGPU] GpuDataManager.release(id=${o}), gpuDataId=${a.gpuData.id}`),this.storageCache.delete(o),this.buffersPending.push(a.gpuData.buffer),a.originalSize}async download(i,o){let a=this.storageCache.get(Number(i));if(!a)throw new Error("data does not exist");await $g(this.backend,a.gpuData.buffer,a.originalSize,o)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let i of this.buffersPending){let o=Zg.get(i.size);if((i.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let a=this.freeBuffers.get(i.size)||[];o===void 0||a.length>=o?i.destroy():a.push(i)}else if((i.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let a=this.freeUniformBuffers.get(i.size)||[];o===void 0||a.length>=o?i.destroy():a.push(i)}else i.destroy()}this.buffersPending=[]}else{let i=this.capturedPendingBuffers.get(this.backend.currentSessionId);i||(i=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,i));for(let o of this.buffersPending)i.push(o);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(i=>{i.forEach(o=>{o.destroy()})}),this.freeUniformBuffers.forEach(i=>{i.forEach(o=>{o.destroy()})}),this.storageCache.forEach(i=>{i.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(i=>{i.forEach(o=>{o.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(i){let o=this.capturedPendingBuffers.get(i);o&&(o.forEach(a=>{a.destroy()}),this.capturedPendingBuffers.delete(i)),this.sessionCount-=1,this.sessionCount===0&&(Ga("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(a=>{a.gpuData.buffer.destroy()}),this.storageCache=new Map)}},sb=(...i)=>new rb(...i)}),ab,un,Mi=xr(()=>{ab=class{constructor(i){Object.assign(this,i)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(i=>`${this[i]}`).join(";")),this.key}},un=i=>new ab(i)}),nb,Bf,ar,E2,ib,ob,Ab,Js=xr(()=>{nb=class{static calcMatMulShape(i,o){return i[1]!==o[0]?void 0:[i[0],o[1]]}},Bf=class{static calcShape(i,o,a=!1){let u=i.length,p=o.length;if(u===0)return o;if(p===0)return i;let h=Math.max(i.length,o.length),C=new Array(h);if(a){if(u<2||p<2)return;let y=nb.calcMatMulShape([i[u-2],i[u-1]],[o[p-2],o[p-1]]);if(y===void 0)return;[C[h-2],C[h-1]]=y}for(let y=a?3:1;y<=h;y++){let k=u-y<0?1:i[u-y],_=p-y<0?1:o[p-y];if(k!==_&&k>1&&_>1)return;let v=Math.max(k,_);if(k&&_)C[h-y]=Math.max(k,_);else{if(v>1)return;C[h-y]=0}}return C}static isValidBroadcast(i,o){let a=i.length,u=o.length;if(a>u)return!1;for(let p=1;p<=a;p++)if(i[a-p]!==1&&i[a-p]!==o[u-p])return!1;return!0}},ar=class og{static size(o){return og.getSizeFromDimensionRange(o,0,o.length)}static convertShape(o,a=4){let u=o.length;if(u===0)return[];let p=new Array(u),h=u-1;for(;h>=0;){if(o[h]%a===0){p[h]=o[h]/a;break}if(a%o[h]!==0)throw new Error("cannot convert shape");p[h]=1,a/=o[h],h--}for(h--;h>=0;h--)p[h]=o[h];return p}static sizeFromDimension(o,a){if(a<0||a>o.length)throw new Error(`invalid dimension of ${a} for sizeFromDimension as Tensor has ${o.length} dimensions.`);return og.getSizeFromDimensionRange(o,a,o.length)}static sizeToDimension(o,a){if(a<0||a>o.length)throw new Error(`invalid dimension of ${a} for sizeToDimension as Tensor has ${o.length} dimensions.`);return og.getSizeFromDimensionRange(o,0,a)}static getSizeFromDimensionRange(o,a,u){let p=1;for(let h=a;h<u;h++){if(o[h]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");p*=Number(o[h])}return p}static computeStrides(o){let a=o.length;if(a===0)return[];if(a===1)return[1];let u=new Array(a);u[a-1]=1,u[a-2]=o[a-1];for(let p=a-3;p>=0;--p)u[p]=u[p+1]*o[p+1];return u}static normalizeAxis(o,a){if(o<-a&&o>=a)throw new Error("unsupported axis for this operation.");return o<0?o+a:o}static normalizeAxes(o,a){return o.map(u=>this.normalizeAxis(u,a??o.length))}static sortBasedOnPerm(o,a){return a?a.map(u=>o[u]):o.slice().reverse()}static padShape(o,a){let u=o.length;return o.map((p,h)=>p+a[h]+a[h+u])}static areEqual(o,a){return o.length!==a.length?!1:o.every((u,p)=>u===a[p])}},E2=class d2{static adjustPoolAttributes(o,a,u,p,h,C){if(!o&&u.length!==a.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(o)for(let y=0;y<a.length-2;y++)y>=u.length?u.push(a[y+2]):u[y]=a[y+2];for(let y=0;y<u.length;y++)if(y<p.length){if(p[y]<0)throw new Error("strides should be greater than or equal to 1")}else p.push(1);for(let y=0;y<u.length;y++)if(y<h.length){if(h[y]<0)throw new Error("dilations should be greater than or equal to 1")}else h.push(1);for(let y=0;y<u.length*2;y++)if(y<C.length){if(C[y]<0)throw new Error("pad should be greater than or equal to 1")}else C.push(0);for(let y=0;y<u.length;y++){if(u[y]<=0)throw new Error("kernel shapes need to be greater than 0");if(C[y]>=u[y]||C[y+u.length]>=u[y])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(o,a,u,p,h,C,y){if(y){if(h.length!==2*(o.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(a.length!==o.length-2)throw new Error("length of strides should be the length of data dimensions");if(p.length!==o.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let k=0;k<o.length-2;k++)d2.adjustPadAndReturnShape(o[k+(C?1:2)],a[k],u[k],p[k],h,k,k+o.length-2,y)}}static computePoolOutputShape(o,a,u,p,h,C,y){if(a.length<=0)throw new Error("input shape must be of size greater than 0");let k=[a[0],a[1]];return d2.computeShapeHelper(o,a,k,u,p,h,C,y),k}static computeConvOutputShape(o,a,u,p,h,C,y){if(o.length<=0||a.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let k=[o[0],a[0]];return d2.computeShapeHelper(!1,o,k,u,p,h,C,y),k}static computeShapeHelper(o,a,u,p,h,C,y,k){if(o)for(let _=0;_<a.length-2;_++)u.push(1);else for(let _=0;_<a.length-2;_++)u.push(d2.adjustPadAndReturnShape(a[_+2],p[_],h[_],C[_],y,_,_+a.length-2,k))}static adjustPadAndReturnShape(o,a,u,p,h,C,y,k){let _=u*(p-1)+1;if(k&&k!=="NOTSET")switch(k){case"VALID":return h[C]=0,h[y]=0,Math.floor((o-_)/a+1);case"SAME_LOWER":case"SAME_UPPER":if(u!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let v=((o+a-1)/a-1)*a+p-o;return h[C]=Math.floor(k==="SAME_LOWER"?(v+1)/2:v/2),h[y]=v-h[C],Math.floor((o+v-p)/a+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((o+h[C]+h[y]-_)/a+1)}},ib=class{static getShapeOfGemmResult(i,o,a,u,p){if(i.length!==2||a.length!==2)throw new Error("shape need to be of size 2");let h,C,y;o?(h=i[1],C=i[0]):(h=i[0],C=i[1]);let k=-1;if(u?(y=a[0],k=1):(y=a[1],k=0),a[k]!==C)throw new Error("dimension mismatch");if(h<=0||y<=0||C<=0)throw new Error("invalid shape specified");if(p&&!Bf.isValidBroadcast(p,[h,y]))throw new Error("gemm: invalid bias shape for broadcast");return[h,y,C]}},ob=-34028234663852886e22,Ab=34028234663852886e22}),Tf,B2,so,Lo,bs,li,ep,Pf,Vc,ms,Zf,ur,us,lb,tp,cb,ub,Aa=xr(()=>{Qs(),Js(),Tf=64,B2=(i,o)=>{if(o===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(i)){case 10:return o>1?`vec${o}<f16>`:"f16";case 1:return o>1?`vec${o}<f32>`:"f32";case 6:return o>1?`vec${o}<i32>`:"i32";case 12:return o>1?`vec${o}<u32>`:"u32";case 7:if(o>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(o>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(o!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${i}`)}},so=(i,o=1)=>{let a=B2(i,o);return typeof a=="string"?a:a[0]},Lo=(i,o=1)=>{let a=B2(i,o);return typeof a=="string"?a:a[1]},bs=(...i)=>{let o=[];return i.forEach(a=>{a.length!==0&&o.push({type:12,data:a},{type:12,data:ar.computeStrides(a)})}),o},li=i=>i%4===0?4:i%2===0?2:1,ep=(i="f32",o,a="0")=>!o||o===1?`${i}(${a})`:`vec${o}<${i}>(${a})`,Pf=(i,o,a)=>i==="f32"?a:o===1?`f32(${a})`:`vec${o}<f32>(${a})`,Vc=(i,o)=>o===4?`(${i}.x + ${i}.y + ${i}.z + ${i}.w)`:o===2?`(${i}.x + ${i}.y)`:o===3?`(${i}.x + ${i}.y + ${i}.z)`:i,ms=(i,o,a,u)=>i.startsWith("uniforms.")&&a>4?typeof o=="string"?u==="f16"?`${i}[(${o}) / 8][(${o}) % 8 / 4][(${o}) % 8 % 4]`:`${i}[(${o}) / 4][(${o}) % 4]`:u==="f16"?`${i}[${Math.floor(o/8)}][${Math.floor(o%8/4)}][${o%8%4}]`:`${i}[${Math.floor(o/4)}][${o%4}]`:a>1?`${i}[${o}]`:i,Zf=(i,o,a,u,p)=>{let h=typeof a=="number",C=h?a:a.length,y=[...new Array(C).keys()],k=C<2?"u32":C<=4?`vec${C}<u32>`:`array<u32, ${C}>`,_=B2(o,p),v=typeof _=="string"?_:_[1],M=typeof _=="string"?_:_[0],B={indices:k,value:v,storage:M,tensor:o},S=ue=>typeof ue=="string"?ue:`${ue}u`,N={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},V=h?"uniforms.":"",Z=`${V}${i}_shape`,O=`${V}${i}_strides`,Q="";for(let ue=0;ue<C-1;ue++)Q+=`
    let dim${ue} = current / ${ms(O,ue,C)};
    let rest${ue} = current % ${ms(O,ue,C)};
    indices[${ue}] = dim${ue};
    current = rest${ue};
    `;Q+=`indices[${C-1}] = current;`;let q=C<2?"":`
  fn o2i_${i}(offset: u32) -> ${B.indices} {
    var indices: ${B.indices};
    var current = offset;
    ${Q}
    return indices;
  }`,f=ue=>(N.offsetToIndices=!0,C<2?ue:`o2i_${i}(${ue})`),I=[];if(C>=2)for(let ue=C-1;ue>=0;ue--)I.push(`${ms(O,ue,C)} * (indices[${ue}])`);let e=C<2?"":`
  fn i2o_${i}(indices: ${B.indices}) -> u32 {
    return ${I.join("+")};
  }`,c=ue=>(N.indicesToOffset=!0,C<2?ue:`i2o_${i}(${ue})`),P=(...ue)=>C===0?"0u":`${B.indices}(${ue.map(S).join(",")})`,J=(ue,ie)=>C<2?`${ue}`:`${ms(ue,ie,C)}`,D=(ue,ie,be)=>C<2?`${ue}=${be};`:`${ms(ue,ie,C)}=${be};`,j={},Ie=(ue,ie)=>{N.broadcastedIndicesToOffset=!0;let be=`${ie.name}broadcastedIndicesTo${i}Offset`;if(be in j)return`${be}(${ue})`;let Ye=[];for(let Le=C-1;Le>=0;Le--){let lt=ie.indicesGet("outputIndices",Le+ie.rank-C);Ye.push(`${J(O,Le)} * (${lt} % ${J(Z,Le)})`)}return j[be]=`fn ${be}(outputIndices: ${ie.type.indices}) -> u32 {
             return ${Ye.length>0?Ye.join("+"):"0u"};
           }`,`${be}(${ue})`},ge=(ue,ie)=>(()=>{if(B.storage===B.value)return`${i}[${ue}]=${ie};`;if(B.storage==="vec2<u32>"&&B.value==="i32")return`${i}[${ue}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(B.storage==="vec2<u32>"&&B.value==="u32")return`${i}[${ue}]=vec2<u32>(u32(${ie}), 0u);`;if(B.storage==="u32"&&B.value==="vec4<bool>")return`${i}[${ue}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${B.storage} and value type ${B.value} yet`)})(),ke=ue=>(()=>{if(B.storage===B.value)return`${i}[${ue}]`;if(B.storage==="vec2<u32>"&&B.value==="i32")return`i32(${i}[${ue}].x)`;if(B.storage==="vec2<u32>"&&B.value==="u32")return`u32(${i}[${ue}].x)`;if(B.storage==="u32"&&B.value==="vec4<bool>")return`vec4<bool>(bool(${i}[${ue}] & 0xFFu), bool(${i}[${ue}] & 0xFF00u), bool(${i}[${ue}] & 0xFF0000u), bool(${i}[${ue}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${B.storage} and value type ${B.value} yet`)})(),Ee=C<2?"":`
  fn get_${i}ByIndices(indices: ${B.indices}) -> ${v} {
    return ${ke(`i2o_${i}(indices)`)};
  }`,Ne=C<2?"":(()=>{let ue=y.map(be=>`d${be}: u32`).join(", "),ie=y.map(be=>`d${be}`).join(", ");return`
  fn get_${i}(${ue}) -> ${v} {
    return get_${i}ByIndices(${P(ie)});
  }`})(),Xe=(...ue)=>{if(ue.length!==C)throw new Error(`indices length must be ${C}`);let ie=ue.map(S).join(",");return C===0?ke("0u"):C===1?ke(ie[0]):(N.get=!0,N.getByIndices=!0,N.indicesToOffset=!0,`get_${i}(${ie})`)},At=ue=>C<2?ke(ue):(N.getByIndices=!0,N.indicesToOffset=!0,`get_${i}ByIndices(${ue})`),xe=C<2?"":`
  fn set_${i}ByIndices(indices: ${B.indices}, value: ${v}) {
    ${ge(`i2o_${i}(indices)`,"value")}
  }`,ye=C<2?"":(()=>{let ue=y.map(be=>`d${be}: u32`).join(", "),ie=y.map(be=>`d${be}`).join(", ");return`
  fn set_${i}(${ue}, value: ${v}) {
    set_${i}ByIndices(${P(ie)}, value);
  }`})();return{impl:()=>{let ue=[],ie=!1;return N.offsetToIndices&&(ue.push(q),ie=!0),N.indicesToOffset&&(ue.push(e),ie=!0),N.broadcastedIndicesToOffset&&(Object.values(j).forEach(be=>ue.push(be)),ie=!0),N.set&&(ue.push(ye),ie=!0),N.setByIndices&&(ue.push(xe),ie=!0),N.get&&(ue.push(Ne),ie=!0),N.getByIndices&&(ue.push(Ee),ie=!0),!h&&ie&&ue.unshift(`const ${Z} = ${B.indices}(${a.join(",")});`,`const ${O} = ${B.indices}(${ar.computeStrides(a).join(",")});`),ue.join(`
`)},type:B,offsetToIndices:f,indicesToOffset:c,broadcastedIndicesToOffset:Ie,indices:P,indicesGet:J,indicesSet:D,set:(...ue)=>{if(ue.length!==C+1)throw new Error(`indices length must be ${C}`);let ie=ue[C];if(typeof ie!="string")throw new Error("value must be string");let be=ue.slice(0,C).map(S).join(",");return C===0?ge("0u",ie):C===1?ge(be[0],ie):(N.set=!0,N.setByIndices=!0,N.indicesToOffset=!0,`set_${i}(${be}, ${ie})`)},setByOffset:ge,setByIndices:(ue,ie)=>C<2?ge(ue,ie):(N.setByIndices=!0,N.indicesToOffset=!0,`set_${i}ByIndices(${ue}, ${ie});`),get:Xe,getByOffset:ke,getByIndices:At,usage:u,name:i,strides:O,shape:Z,rank:C}},ur=(i,o,a,u=1)=>Zf(i,o,a,"input",u),us=(i,o,a,u=1)=>Zf(i,o,a,"output",u),lb=(i,o,a)=>Zf(i,o,a,"atomicOutput",1),tp=(i,o,a,u=1)=>Zf(i,o,a,"internal",u),cb=class{constructor(i,o){this.normalizedDispatchGroup=i,this.limits=o,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(i){return`if (global_idx >= ${typeof i=="number"?`${i}u`:i}) { return; }`}mainStart(i=Tf){let o=typeof i=="number"?i:i[0],a=typeof i=="number"?1:i[1],u=typeof i=="number"?1:i[2];if(o>this.limits.maxComputeWorkgroupSizeX||a>this.limits.maxComputeWorkgroupSizeY||u>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${o}, ${a}, ${u}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(o*a*u>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${o}, ${a}, ${u}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let p=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,h=p?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,C=p?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${o*a*u}u + local_idx;`;return`@compute @workgroup_size(${o}, ${a}, ${u})
  fn main(${h}) {
    ${C}
  `}appendVariableUniforms(i){i.rank!==0&&(i.shape.startsWith("uniforms.")&&this.uniforms.push({name:i.shape.replace("uniforms.",""),type:"u32",length:i.rank}),i.strides.startsWith("uniforms.")&&this.uniforms.push({name:i.strides.replace("uniforms.",""),type:"u32",length:i.rank}))}declareVariable(i,o){if(i.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(i),this.appendVariableUniforms(i);let a=i.usage==="input"?"read":"read_write",u=i.usage==="atomicOutput"?"atomic<i32>":i.type.storage;return`@group(0) @binding(${o}) var<storage, ${a}> ${i.name}: array<${u}>;`}declareVariables(...i){return i.map(o=>this.declareVariable(o,this.variableIndex++)).join(`
`)}registerInternalVariable(i){if(i.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(i),this.appendVariableUniforms(i)}registerInternalVariables(...i){return i.forEach(o=>this.registerInternalVariable(o)),this}registerUniform(i,o,a=1){return this.uniforms.push({name:i,type:o,length:a}),this}registerUniforms(i){return this.uniforms=this.uniforms.concat(i),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let i=[];for(let{name:o,type:a,length:u}of this.uniforms)if(u&&u>4)a==="f16"?i.push(`@align(16) ${o}:array<mat2x4<${a}>, ${Math.ceil(u/8)}>`):i.push(`${o}:array<vec4<${a}>, ${Math.ceil(u/4)}>`);else{let p=u==null||u===1?a:`vec${u}<${a}>`;i.push(`${o}:${p}`)}return`
      struct Uniforms { ${i.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(i=>i.impl()).join(`
`)+this.internalVariables.map(i=>i.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let i=o=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(o)];return this.uniforms.map(o=>[i(o.type),o.length??1])}},ub=(i,o)=>new cb(i,o)}),db,rp,fb,gb,pb,hb,il,mb,bb,Wc=xr(()=>{Qs(),Js(),Mi(),Aa(),db=(i,o)=>{if(!i||i.length!==1)throw new Error("Transpose requires 1 input.");if(o.length!==0&&o.length!==i[0].dims.length)throw new Error(`perm size ${o.length} does not match input rank ${i[0].dims.length}`)},rp=(i,o)=>o.length!==0?o:[...new Array(i).keys()].reverse(),fb=(i,o)=>ar.sortBasedOnPerm(i,rp(i.length,o)),gb=(i,o,a,u)=>{let p=`fn perm(i: ${u.type.indices}) -> ${a.type.indices} {
    var a: ${a.type.indices};`;for(let h=0;h<o;++h)p+=`a[${i[h]}]=i[${h}];`;return p+="return a;}"},pb=(i,o)=>{let a=[],u=[];for(let p=0;p<i.length;++p)i[p]!==1&&a.push(i[p]),i[o[p]]!==1&&u.push(o[p]);return{newShape:a,newPerm:u}},hb=(i,o)=>{let a=0;for(let u=0;u<i.length;++u)if(o[i[u]]!==1){if(i[u]<a)return!1;a=i[u]}return!0},il=(i,o)=>{let a=i.dataType,u=i.dims.length,p=rp(u,o),h=fb(i.dims,p),C=i.dims,y=h,k=u<2||hb(p,i.dims),_;if(k)return _=N=>{let V=ur("input",a,C,4),Z=us("output",a,y,4);return`
  ${N.registerUniform("output_size","u32").declareVariables(V,Z)}
  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let N=ar.size(h);return{outputs:[{dims:h,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(N/64/4)},programUniforms:[{type:12,data:Math.ceil(N/4)}]}},getShaderSource:_};let{newShape:v,newPerm:M}=pb(i.dims,p),B=ar.areEqual(M,[2,3,1]),S=ar.areEqual(M,[3,1,2]);if(v.length===2||B||S){C=B?[v[0],v[1]*v[2]]:S?[v[0]*v[1],v[2]]:v,y=[C[1],C[0]];let N=16;return _=V=>{let Z=ur("a",a,C.length),O=us("output",a,y.length);return`
  ${V.registerUniform("output_size","u32").declareVariables(Z,O)}
  var<workgroup> tile : array<array<${O.type.value}, ${N+1}>, ${N}>;
  ${V.mainStart([N,N,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${N} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${N}u + local_id.x;
    let input_row = workgroup_id_x * ${N}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${Z.getByIndices(`${Z.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${N}u + local_id.x;
    let output_row = workgroup_id_y * ${N}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${O.setByIndices(`${O.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let V=ar.size(h);return{outputs:[{dims:h,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(y[1]/N),y:Math.ceil(y[0]/N)},programUniforms:[{type:12,data:V},...bs(C,y)]}},getShaderSource:_}}return _=N=>{let V=ur("a",a,C.length),Z=us("output",a,y.length);return`
  ${N.registerUniform("output_size","u32").declareVariables(V,Z)}

  ${gb(p,u,V,Z)}

  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${Z.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${Z.setByOffset("global_idx",V.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${o}`,inputDependencies:["rank"]},getRunData:()=>{let N=ar.size(h);return{outputs:[{dims:h,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(N/64)},programUniforms:[{type:12,data:N},...bs(C,y)]}},getShaderSource:_}},mb=(i,o)=>{db(i.inputs,o.perm),i.compute(il(i.inputs[0],o.perm))},bb=i=>un({perm:i.perm})}),Cb,wb,Ib,yb,kb,_b,vb,xb,Mb,Eb,Vl,Bb,Tb,Pb,Db,Sb,Gb,Fb,zb,Ob,Qb,nv=xr(()=>{Qs(),Js(),Aa(),ap(),Wc(),Cb={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},wb={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ib={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},yb={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},kb=(i,o)=>{let a=[];for(let u=o-i;u<o;++u)a.push(u);return a},_b=(i,o)=>{let a=[],u=i.length;for(let h=0;h<u;h++)o.indexOf(h)===-1&&a.push(i[h]);let p=o.map(h=>i[h]);return[a,p]},vb=(i,o)=>{let a=i.length+o.length,u=[],p=0;for(let h=0;h<a;h++)o.indexOf(h)===-1?u.push(i[p++]):u.push(1);return u},xb=(i,o)=>{for(let a=0;a<i.length;++a)if(i[i.length-a-1]!==o-1-a)return!1;return!0},Mb=(i,o)=>{let a=[];if(!xb(i,o)){for(let u=0;u<o;++u)i.indexOf(u)===-1&&a.push(u);i.forEach(u=>a.push(u))}return a},Eb=(i,o,a,u,p,h,C)=>{let y=a[0].dims,k=ar.size(h),_=ar.size(C),v=ur("_A",a[0].dataType,y),M=us("output",p,h),B=64;k===1&&(B=256);let S=`
          var<workgroup> aBestValues : array<f32, ${B}>;
       `,N=V=>`
        ${V.registerUniform("reduceSize","u32").declareVariables(v,M)}
        ${S}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${V.mainStart(B)}

          let outputIndex = global_idx / ${B};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Ib[u]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${B}) {
           let candidate = f32(${v.getByOffset("offset + k")});
           bestValue = ${Cb[u]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${B}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${wb[u]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${M.setByOffset("outputIndex",`${u==="mean"?`${M.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${M.type.storage}(${yb[u]})`}`)};
         }
        }`;return{name:i,shaderCache:{hint:`${o};${B}`,inputDependencies:["type"]},getShaderSource:N,getRunData:()=>({outputs:[{dims:h,dataType:p}],dispatchGroup:{x:k},programUniforms:[{type:12,data:_}]})}},Vl=(i,o,a,u)=>{let p=i.inputs.length===1?a:sp(i.inputs,a),h=p.axes;h.length===0&&!p.noopWithEmptyAxes&&(h=i.inputs[0].dims.map((S,N)=>N));let C=ar.normalizeAxes(h,i.inputs[0].dims.length),y=C,k=i.inputs[0],_=Mb(y,i.inputs[0].dims.length);_.length>0&&(k=i.compute(il(i.inputs[0],_),{inputs:[0],outputs:[-1]})[0],y=kb(y.length,k.dims.length));let[v,M]=_b(k.dims,y),B=v;p.keepDims&&(B=vb(v,C)),i.compute(Eb(o,p.cacheKey,[k],u,i.inputs[0].dataType,B,M),{inputs:[k]})},Bb=(i,o)=>{Vl(i,"ReduceMeanShared",o,"mean")},Tb=(i,o)=>{Vl(i,"ReduceL1Shared",o,"l1")},Pb=(i,o)=>{Vl(i,"ReduceL2Shared",o,"l2")},Db=(i,o)=>{Vl(i,"ReduceLogSumExpShared",o,"logSumExp")},Sb=(i,o)=>{Vl(i,"ReduceMaxShared",o,"max")},Gb=(i,o)=>{Vl(i,"ReduceMinShared",o,"min")},Fb=(i,o)=>{Vl(i,"ReduceProdShared",o,"prod")},zb=(i,o)=>{Vl(i,"ReduceSumShared",o,"sum")},Ob=(i,o)=>{Vl(i,"ReduceSumSquareShared",o,"sumSquare")},Qb=(i,o)=>{Vl(i,"ReduceLogSumShared",o,"logSum")}}),Wl,Nb,T2,sp,Ul,Lb,Rb,jb,Vb,Wb,Ub,Hb,Yb,Kb,qb,Hl,Xb,Zb,Jb,$b,eC,tC,rC,sC,aC,nC,ap=xr(()=>{Qs(),Js(),Mi(),Aa(),nv(),Wl=i=>{if(!i||i.length===0||i.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(i.length===2&&i[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Nb=i=>["","",`var value = ${i.getByIndices("input_indices")};`,""],T2=(i,o,a,u,p,h,C=!1,y=!1)=>{let k=[],_=a[0].dims,v=_.length,M=ar.normalizeAxes(p,v),B=!y&&M.length===0;_.forEach((V,Z)=>{B||M.indexOf(Z)>=0?C&&k.push(1):k.push(V)});let S=k.length,N=ar.size(k);return{name:i,shaderCache:o,getShaderSource:V=>{let Z=[],O=ur("_A",a[0].dataType,v),Q=us("output",h,S),q=u(O,Q,M),f=q[2];for(let I=0,e=0;I<v;I++)B||M.indexOf(I)>=0?(C&&e++,f=`for(var j${I}: u32 = 0; j${I} < ${_[I]}; j${I}++) {
                  ${q[2].includes("last_index")?`let last_index = j${I};`:""}
                  ${O.indicesSet("input_indices",I,`j${I}`)}
                  ${f}
                }`):(Z.push(`${O.indicesSet("input_indices",I,Q.indicesGet("output_indices",e))};`),e++);return`

        ${V.registerUniform("output_size","u32").declareVariables(O,Q)}

        ${V.mainStart()}
          ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${O.type.indices};
          let output_indices = ${Q.offsetToIndices("global_idx")};

          ${Z.join(`
`)}
          ${q[0]}       // init ops for reduce max/min
          ${q[1]}
          ${f}
          ${q[3]}
          ${q.length===4?Q.setByOffset("global_idx","value"):q.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:k,dataType:h}],dispatchGroup:{x:Math.ceil(N/64)},programUniforms:[{type:12,data:N},...bs(_,k)]})}},sp=(i,o)=>{let a=[];return i[1].dims[0]>0&&i[1].getBigInt64Array().forEach(u=>a.push(Number(u))),un({axes:a,keepDims:o.keepDims,noopWithEmptyAxes:o.noopWithEmptyAxes})},Ul=(i,o,a,u)=>{let p=i.inputs,h=p.length===1?a:sp(p,a);i.compute(T2(o,{hint:h.cacheKey,inputDependencies:["rank"]},[p[0]],h.noopWithEmptyAxes&&h.axes.length===0?Nb:u,h.axes,p[0].dataType,h.keepDims,h.noopWithEmptyAxes),{inputs:[0]})},Lb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceLogSum",o,(a,u)=>[`var value = ${u.type.storage}(0);`,"",`value += ${a.getByIndices("input_indices")};`,"value = log(value);"])},Rb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceL1",o,(a,u)=>[`var value = ${u.type.storage}(0);`,"",`value += abs(${a.getByIndices("input_indices")});`,""])},jb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceL2",o,(a,u)=>[`var t = ${u.type.value}(0); var value = ${u.type.value}(0);`,"",`t = ${a.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Vb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceLogSumExp",o,(a,u)=>[`var value = ${u.type.storage}(0);`,"",`value += exp(${a.getByIndices("input_indices")});`,"value = log(value);"])},Wb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceMax",o,(a,u,p)=>{let h=[];for(let C=0;C<a.rank;C++)(p.indexOf(C)>=0||p.length===0)&&h.push(a.indicesSet("input_indices",C,0));return[`${h.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};`,`value = max(value, ${a.getByIndices("input_indices")});`,""]})},Ub=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceMean",o,(a,u,p)=>{let h=1;for(let C=0;C<a.rank;C++)(p.indexOf(C)>=0||p.length===0)&&(h*=i.inputs[0].dims[C]);return["var sum = f32(0);","",`sum += f32(${a.getByIndices("input_indices")});`,`let value = ${u.type.value}(sum / ${h});`]})},Hb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceMin",o,(a,u,p)=>{let h=[];for(let C=0;C<a.rank;C++)(p.indexOf(C)>=0||p.length===0)&&h.push(`input_indices[${C}] = 0;`);return[`${h.join(`
`)}`,`var value = ${a.getByIndices("input_indices")};`,`value = min(value, ${a.getByIndices("input_indices")});`,""]})},Yb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceProd",o,(a,u)=>[`var value = ${u.type.storage}(1);`,"",`value *= ${a.getByIndices("input_indices")};`,""])},Kb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceSum",o,(a,u)=>[`var value = ${u.type.storage}(0);`,"",`value += ${a.getByIndices("input_indices")};`,""])},qb=(i,o)=>{Wl(i.inputs),Ul(i,"ReduceSumSquare",o,(a,u)=>[`var t = ${u.type.value}(0); var value = ${u.type.value}(0);`,"",`t = ${a.getByIndices("input_indices")}; value += t * t;`,""])},Hl=(i,o,a)=>{if(o.length===0)return a;let u=1,p=1;for(let h=0;h<o.length;h++)o.indexOf(h)===-1?u*=i[h]:p*=i[h];return p<32&&u>1024},Xb=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Ub(i,o):Bb(i,o)},Zb=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Rb(i,o):Tb(i,o)},Jb=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?jb(i,o):Pb(i,o)},$b=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Vb(i,o):Db(i,o)},eC=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Wb(i,o):Sb(i,o)},tC=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Hb(i,o):Gb(i,o)},rC=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Yb(i,o):Fb(i,o)},sC=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Kb(i,o):zb(i,o)},aC=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?qb(i,o):Ob(i,o)},nC=(i,o)=>{Hl(i.inputs[0].dims,o.axes,o.noopWithEmptyAxes)?Lb(i,o):Qb(i,o)}}),np,iC,oC,ip,iv=xr(()=>{Qs(),Mi(),ap(),np=i=>{if(!i||i.length===0||i.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(i[0].dataType!==1)throw new Error("Invalid input type.")},iC=(i,o)=>{np(i.inputs);let a=(u,p,h)=>{let C=[];for(let y=0;y<u.rank;y++)(h.indexOf(y)>=0||h.length===0)&&C.push(`input_indices[${y}] = 0;`);return[`${C.join(`
`)}`,`var value = ${u.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${o.selectLastIndex>0?"<=":"<"} value) {
         value = ${u.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",p.setByOffset("global_idx","best_index")]};i.compute(T2("ArgMin",{hint:o.cacheKey,inputDependencies:["rank"]},[i.inputs[0]],a,[o.axis],7,o.keepDims),{inputs:[0]})},oC=(i,o)=>{np(i.inputs);let a=(u,p,h)=>{let C=[];for(let y=0;y<u.rank;y++)(h.indexOf(y)>=0||h.length===0)&&C.push(`input_indices[${y}] = 0;`);return[`${C.join(`
`)}`,`var value = ${u.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${o.selectLastIndex>0?">=":">"} value) {
         value = ${u.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",p.setByOffset("global_idx","best_index")]};i.compute(T2("argMax",{hint:o.cacheKey,inputDependencies:["rank"]},[i.inputs[0]],a,[o.axis],7,o.keepDims),{inputs:[0]})},ip=i=>un(i)}),AC,P2,lC,cC,uC,Jf,dC,fC,op=xr(()=>{Qs(),Js(),Xg(),Aa(),AC=(i,o)=>{let a=i[0],u=i[1],p=i[2],h=i[3],C=i[4],y=i[5];if(C&&y)throw new Error("Attention cannot have both past and attention_bias");if(a.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let k=a.dims[0],_=a.dims[1],v=a.dims[2];if(p.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(u.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(u.dims[0]!==v)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(p.dims[0]!==u.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let M=p.dims[0]/3,B=M,S=B;if(o.qkvHiddenSizes.length>0){if(o.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let q of o.qkvHiddenSizes)if(q%o.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");M=o.qkvHiddenSizes[0],B=o.qkvHiddenSizes[1],S=o.qkvHiddenSizes[2]}let N=_;if(M!==B)throw new Error("qkv_hidden_sizes first element should be same as the second");if(p.dims[0]!==M+B+S)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let V=0;if(C){if(B!==S)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(C.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(C.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(C.dims[1]!==k)throw new Error('Input "past" second dimension must be batch_size');if(C.dims[2]!==o.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(C.dims[4]!==B/o.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');o.pastPresentShareBuffer||(V=C.dims[3])}let Z=N+V,O=-1,Q=0;if(h)throw new Error("Mask not supported");if(C)throw new Error("past is not supported");if(y){if(y.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(y.dims[0]!==k||y.dims[1]!==o.numHeads||y.dims[2]!==_||y.dims[3]!==Z)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:k,sequenceLength:_,pastSequenceLength:V,kvSequenceLength:N,totalSequenceLength:Z,maxSequenceLength:O,inputHiddenSize:v,hiddenSize:M,vHiddenSize:S,headSize:Math.floor(M/o.numHeads),vHeadSize:Math.floor(S/o.numHeads),numHeads:o.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:o.maskFilterValue,maskType:Q,scale:o.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},P2=(i,o,a)=>o&&i?`
      let total_sequence_length_input = u32(${o.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${i==null?void 0:i.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${a?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,lC=(i,o,a,u,p,h,C,y)=>{let k=li(C?1:h),_=64,v=h/k;v<_&&(_=32);let M=Math.ceil(h/k/_),B=[{type:12,data:o},{type:12,data:a},{type:12,data:u},{type:12,data:p},{type:12,data:v},{type:12,data:M}],S=so(i.dataType,k),N=Lo(1,k),V=["type"];C&&V.push("type"),y&&V.push("type");let Z=O=>{let Q=us("x",i.dataType,i.dims,k),q=[Q],f=C?ur("seq_lens",C.dataType,C.dims):void 0;f&&q.push(f);let I=y?ur("total_sequence_length_input",y.dataType,y.dims):void 0;I&&q.push(I);let e=Lo(i.dataType),c=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${_}>;
  var<workgroup> thread_sum: array<f32, ${_}>;
  ${O.registerUniforms(c).declareVariables(...q)}
  ${O.mainStart([_,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${P2(f,I,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${_}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${C?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${N}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${N}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(k){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${k}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${_}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${N}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${N}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(k){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${k}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${_}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${Q.type.value}(${e}(1.0) / ${e}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${N}(x[offset + i]);
        x[offset + i] = ${Q.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${C?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${Q.type.value}(${e}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${_};${S};${k}`,inputDependencies:V},getShaderSource:Z,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:p,z:o*a},programUniforms:B})}},cC=(i,o,a,u,p,h,C,y,k)=>{let _=C+h.kvSequenceLength,v=[h.batchSize,h.numHeads,h.sequenceLength,_],M=i>1&&u,B=h.kvNumHeads?h.kvNumHeads:h.numHeads,S=M?[h.batchSize,B,_,h.headSize]:void 0,N=h.nReps?h.nReps:1,V=h.scale===0?1/Math.sqrt(h.headSize):h.scale,Z=li(h.headSize),O=h.headSize/Z,Q=12,q={x:Math.ceil(_/Q),y:Math.ceil(h.sequenceLength/Q),z:h.batchSize*h.numHeads},f=[{type:12,data:h.sequenceLength},{type:12,data:O},{type:12,data:_},{type:12,data:h.numHeads},{type:12,data:h.headSize},{type:1,data:V},{type:12,data:C},{type:12,data:h.kvSequenceLength},{type:12,data:N}],I=M&&u&&ar.size(u.dims)>0,e=["type","type"];I&&e.push("type"),p&&e.push("type"),y&&e.push("type"),k&&e.push("type");let c=[{dims:v,dataType:o.dataType,gpuDataType:0}];M&&c.push({dims:S,dataType:o.dataType,gpuDataType:0});let P=J=>{let D=ur("q",o.dataType,o.dims,Z),j=ur("key",a.dataType,a.dims,Z),Ie=[D,j];if(I){let xe=ur("past_key",u.dataType,u.dims,Z);Ie.push(xe)}p&&Ie.push(ur("attention_bias",p.dataType,p.dims));let ge=y?ur("seq_lens",y.dataType,y.dims):void 0;ge&&Ie.push(ge);let ke=k?ur("total_sequence_length_input",k.dataType,k.dims):void 0;ke&&Ie.push(ke);let Ee=us("output",o.dataType,v),Ne=[Ee];M&&Ne.push(us("present_key",o.dataType,S,Z));let Xe=Lo(1,Z),At=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${Q}u;

  var<workgroup> tileQ: array<${D.type.storage}, ${Q*Q}>;
  var<workgroup> tileK: array<${D.type.storage}, ${Q*Q}>;
  ${J.registerUniforms(At).declareVariables(...Ie,...Ne)}
  ${J.mainStart([Q,Q,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${N===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${N===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${P2(ge,ke,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${I&&M?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${M?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Xe}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${I&&M?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${M?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Xe}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(Z){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${Z}`)}})()};
        output[outputIdx] = ${Ee.type.value} (sum * uniforms.alpha) + ${p?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${Z};${p!==void 0};${u!==void 0};${i}`,inputDependencies:e},getRunData:()=>({outputs:c,dispatchGroup:q,programUniforms:f}),getShaderSource:P}},uC=(i,o,a,u,p,h,C=void 0,y=void 0)=>{let k=h+p.kvSequenceLength,_=p.nReps?p.nReps:1,v=p.vHiddenSize*_,M=i>1&&u,B=p.kvNumHeads?p.kvNumHeads:p.numHeads,S=M?[p.batchSize,B,k,p.headSize]:void 0,N=[p.batchSize,p.sequenceLength,v],V=12,Z={x:Math.ceil(p.vHeadSize/V),y:Math.ceil(p.sequenceLength/V),z:p.batchSize*p.numHeads},O=[{type:12,data:p.sequenceLength},{type:12,data:k},{type:12,data:p.vHeadSize},{type:12,data:p.numHeads},{type:12,data:p.headSize},{type:12,data:v},{type:12,data:h},{type:12,data:p.kvSequenceLength},{type:12,data:_}],Q=M&&u&&ar.size(u.dims)>0,q=["type","type"];Q&&q.push("type"),C&&q.push("type"),y&&q.push("type");let f=[{dims:N,dataType:o.dataType,gpuDataType:0}];M&&f.push({dims:S,dataType:o.dataType,gpuDataType:0});let I=e=>{let c=ur("probs",o.dataType,o.dims),P=ur("v",a.dataType,a.dims),J=[c,P];Q&&J.push(ur("past_value",u.dataType,u.dims));let D=C?ur("seq_lens",C.dataType,C.dims):void 0;C&&J.push(D);let j=y?ur("total_sequence_length_input",y.dataType,y.dims):void 0;y&&J.push(j);let Ie=[us("output",o.dataType,N)];M&&Ie.push(us("present_value",o.dataType,S));let ge=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${V}u;
  var<workgroup> tileQ: array<${c.type.value}, ${V*V}>;
  var<workgroup> tileV: array<${c.type.value}, ${V*V}>;
  ${e.registerUniforms(ge).declareVariables(...J,...Ie)}
  ${e.mainStart([V,V,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${_===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${_===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${P2(D,j,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${Q&&M?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${M?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${c.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${Q&&M?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${M?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${u!==void 0};${i}`,inputDependencies:q},getRunData:()=>({outputs:f,dispatchGroup:Z,programUniforms:O}),getShaderSource:I}},Jf=(i,o,a,u,p,h,C,y,k,_,v=void 0,M=void 0)=>{let B=Math.min(i.outputCount,1+(C?1:0)+(y?1:0)),S=B>1?_.pastSequenceLength:0,N=S+_.kvSequenceLength,V=k&&ar.size(k.dims)>0?k:void 0,Z=[o,a];B>1&&C&&ar.size(C.dims)>0&&Z.push(C),V&&Z.push(V),v&&Z.push(v),M&&Z.push(M);let O=i.compute(cC(B,o,a,C,V,_,S,v,M),{inputs:Z,outputs:B>1?[-1,1]:[-1]})[0];i.compute(lC(O,_.batchSize,_.numHeads,S,_.sequenceLength,N,v,M),{inputs:v&&M?[O,v,M]:[O],outputs:[]});let Q=[O,u];B>1&&y&&ar.size(y.dims)>0&&Q.push(y),v&&Q.push(v),M&&Q.push(M),i.compute(uC(B,O,u,y,_,S,v,M),{inputs:Q,outputs:B>1?[0,2]:[0]})},dC=(i,o)=>{let a=[o.batchSize,o.numHeads,o.sequenceLength,o.headSize],u=o.sequenceLength,p=o.inputHiddenSize,h=o.headSize,C=12,y={x:Math.ceil(o.headSize/C),y:Math.ceil(o.sequenceLength/C),z:o.batchSize*o.numHeads},k=[i.inputs[0],i.inputs[1],i.inputs[2]],_=[{type:12,data:u},{type:12,data:p},{type:12,data:h},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:12,data:o.hiddenSize},{type:12,data:o.hiddenSize+o.hiddenSize+o.vHiddenSize}],v=M=>{let B=us("output_q",k[0].dataType,a),S=us("output_k",k[0].dataType,a),N=us("output_v",k[0].dataType,a),V=ur("input",k[0].dataType,k[0].dims),Z=ur("weight",k[1].dataType,k[1].dims),O=ur("bias",k[2].dataType,k[2].dims),Q=V.type.storage,q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${C}u;
  var<workgroup> tileInput: array<${Q}, ${C*C}>;
  var<workgroup> tileWeightQ: array<${Q}, ${C*C}>;
  var<workgroup> tileWeightK: array<${Q}, ${C*C}>;
  var<workgroup> tileWeightV: array<${Q}, ${C*C}>;
  ${M.registerUniforms(q).declareVariables(V,Z,O,B,S,N)}
  ${M.mainStart([C,C,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${Q}(0);
    var valueK = ${Q}(0);
    var valueV = ${Q}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return i.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:i.inputs[0].dataType,gpuDataType:0},{dims:a,dataType:i.inputs[0].dataType,gpuDataType:0},{dims:a,dataType:i.inputs[0].dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:_}),getShaderSource:v},{inputs:k,outputs:[-1,-1,-1]})},fC=(i,o)=>{let a=AC(i.inputs,o),[u,p,h]=dC(i,a);return Jf(i,u,p,h,i.inputs[4],void 0,void 0,void 0,i.inputs[5],a)}}),gC,pC,hC,mC,ov=xr(()=>{jl(),Qs(),Js(),Mi(),Aa(),gC=(i,o)=>{if(!i||i.length!==5)throw new Error("BatchNormalization requires 5 inputs");let a=(u,p,h)=>{let C=p.length;if(C!==u.length)throw new Error(`${h}: num dimensions != ${C}`);p.forEach((y,k)=>{if(y!==u[k])throw new Error(`${h}: dim[${k}] do not match`)})};if(i[0].dims.length>1){let u=o.format==="NHWC"?o.spatial?i[0].dims.slice(-1):i[0].dims.slice(-1).concat(i[0].dims.slice(1,i[0].dims.length-1)):i[0].dims.slice(1,o.spatial?2:void 0);a(i[1].dims,u,"Invalid input scale"),a(i[2].dims,u,"Invalid input B"),a(i[3].dims,u,"Invalid input mean"),a(i[4].dims,u,"Invalid input var")}else a(i[1].dims,[1],"Invalid input scale"),a(i[2].dims,[1],"Invalid input B"),a(i[3].dims,[1],"Invalid input mean"),a(i[4].dims,[1],"Invalid input var")},pC=(i,o)=>{let{epsilon:a,spatial:u,format:p}=o,h=i[0].dims,C=u?li(h[h.length-1]):1,y=p==="NHWC"&&h.length>1?C:1,k=ar.size(h)/C,_=u,v=_?h.length:h,M=ur("x",i[0].dataType,i[0].dims,C),B=ur("scale",i[1].dataType,i[1].dims,y),S=ur("bias",i[2].dataType,i[2].dims,y),N=ur("inputMean",i[3].dataType,i[3].dims,y),V=ur("inputVar",i[4].dataType,i[4].dims,y),Z=us("y",i[0].dataType,v,C),O=()=>{let q="";if(u)q=`let cOffset = ${h.length===1?"0u":p==="NHWC"?`outputIndices[${h.length-1}] / ${C}`:"outputIndices[1]"};`;else if(p==="NCHW")q=`
            ${Z.indicesSet("outputIndices","0","0")}
            let cOffset = ${Z.indicesToOffset("outputIndices")};`;else{q=`var cIndices = ${B.type.indices}(0);
                       cIndices[0] = outputIndices[${h.length-1}];`;for(let f=1;f<B.rank;f++)q+=`cIndices[${f}] = outputIndices[${f}];`;q+=`let cOffset = ${B.indicesToOffset("cIndices")};`}return q},Q=q=>`
  const epsilon = ${a};
  ${q.registerUniform("outputSize","u32").declareVariables(M,B,S,N,V,Z)}
  ${q.mainStart()}
  ${q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${Z.offsetToIndices(`global_idx * ${C}`)};
    ${O()}
    let scale = ${B.getByOffset("cOffset")};
    let bias = ${S.getByOffset("cOffset")};
    let inputMean = ${N.getByOffset("cOffset")};
    let inputVar = ${V.getByOffset("cOffset")};
    let x = ${M.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${Z.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${o.epsilon}_${o.format}_${u}_${C}`,inputDependencies:_?["rank","type","type","type","type"]:void 0},getShaderSource:Q,getRunData:()=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:_?[{type:12,data:k},...bs(h)]:[{type:12,data:k}]})}},hC=i=>un(i),mC=(i,o)=>{let{inputs:a,outputCount:u}=i,p=hC({...o,outputCount:u});if(Kn.webgpu.validateInputContent&&gC(a,p),o.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");i.compute(pC(a,p))}}),bC,CC,wC,Av=xr(()=>{Js(),Aa(),bC=i=>{if(i[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(i[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(i[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(i[0].dims[2]!==i[1].dims[0])throw new Error("last dimension of input and bias are not the same")},CC=i=>{let o=i[0].dims,a=i[0].dims[2],u=ar.size(o)/4,p=i[0].dataType,h=ur("input",p,o,4),C=ur("bias",p,[a],4),y=ur("residual",p,o,4),k=us("output",p,o,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:o,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:_=>`
  const channels = ${a}u / 4;
  ${_.declareVariables(h,C,y,k)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes(u)}
    let value = ${h.getByOffset("global_idx")}
      + ${C.getByOffset("global_idx % channels")} + ${y.getByOffset("global_idx")};
    ${k.setByOffset("global_idx","value")}
  }`}},wC=i=>{bC(i.inputs),i.compute(CC(i.inputs))}}),IC,ja,yC,kC,_C,vC,xC,MC,EC,BC,TC,PC,DC,SC,GC,FC,$f,zC,D2,OC,QC,NC,LC,RC,jC,VC,WC,UC,HC,YC,KC,qC,XC,ZC,JC,Ap,$C,lp,cp,ew,tw,rw,sw,aw,nw,up=xr(()=>{Qs(),Js(),Mi(),Aa(),IC=(i,o,a,u,p,h,C)=>{let y=Math.ceil(o/4),k="";typeof p=="string"?k=`${p}(a)`:k=p("a");let _=ur("inputData",a,[y],4),v=us("outputData",u,[y],4),M=[{name:"vec_size",type:"u32"}];return C&&M.push(...C),`
      ${i.registerUniforms(M).declareVariables(_,v)}

  ${h??""}

  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${_.getByOffset("global_idx")};
    ${v.setByOffset("global_idx",k)}
  }`},ja=(i,o,a,u,p,h=i.dataType,C,y)=>{let k=[{type:12,data:Math.ceil(ar.size(i.dims)/4)}];return C&&k.push(...C),{name:o,shaderCache:{hint:p,inputDependencies:["type"]},getShaderSource:_=>IC(_,ar.size(i.dims),i.dataType,h,a,u,y),getRunData:_=>({outputs:[{dims:i.dims,dataType:h}],dispatchGroup:{x:Math.ceil(ar.size(_[0].dims)/64/4)},programUniforms:k})}},yC=i=>{i.compute(ja(i.inputs[0],"Abs","abs"))},kC=i=>{i.compute(ja(i.inputs[0],"Acos","acos"))},_C=i=>{i.compute(ja(i.inputs[0],"Acosh","acosh"))},vC=i=>{i.compute(ja(i.inputs[0],"Asin","asin"))},xC=i=>{i.compute(ja(i.inputs[0],"Asinh","asinh"))},MC=i=>{i.compute(ja(i.inputs[0],"Atan","atan"))},EC=i=>{i.compute(ja(i.inputs[0],"Atanh","atanh"))},BC=i=>un(i),TC=(i,o)=>{let a;switch(o.to){case 10:a="vec4<f16>";break;case 1:a="vec4<f32>";break;case 12:a="vec4<u32>";break;case 6:a="vec4<i32>";break;case 9:a="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${o.to}`)}i.compute(ja(i.inputs[0],"Cast",a,void 0,o.cacheKey,o.to))},PC=i=>{let o,a,u=i.length>=2&&i[1].data!==0,p=i.length>=3&&i[2].data!==0;switch(i[0].dataType){case 1:o=u?i[1].getFloat32Array()[0]:-34028234663852886e22,a=p?i[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:o=u?i[1].getUint16Array()[0]:64511,a=p?i[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return un({min:o,max:a})},DC=(i,o)=>{let a=o||PC(i.inputs),u=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"Clip",p=>`clamp(${p}, vec4<${u}>(uniforms.min), vec4<${u}>(uniforms.max))`,void 0,a.cacheKey,void 0,[{type:i.inputs[0].dataType,data:a.min},{type:i.inputs[0].dataType,data:a.max}],[{name:"min",type:u},{name:"max",type:u}]),{inputs:[0]})},SC=i=>{i.compute(ja(i.inputs[0],"Ceil","ceil"))},GC=i=>{i.compute(ja(i.inputs[0],"Cos","cos"))},FC=i=>{i.compute(ja(i.inputs[0],"Cosh","cosh"))},$f=i=>un(i),zC=(i,o)=>{let a=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"Elu",u=>`elu_vf32(${u})`,`
  const elu_alpha_ = ${a}(${o.alpha});

  fn elu_f32(a: ${a}) -> ${a} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${a}>) -> vec4<${a}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,o.cacheKey))},D2=(i="f32")=>`
const r0: ${i} = 0.3275911;
const r1: ${i} = 0.254829592;
const r2: ${i} = -0.284496736;
const r3: ${i} = 1.421413741;
const r4: ${i} = -1.453152027;
const r5: ${i} = 1.061405429;

fn erf_vf32(v: vec4<${i}>) -> vec4<${i}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,OC=i=>{let o=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"Erf",a=>`erf_vf32(${a})`,D2(o)))},QC=i=>{i.compute(ja(i.inputs[0],"Exp","exp"))},NC=i=>{i.compute(ja(i.inputs[0],"Floor","floor"))},LC=i=>{let o=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"Gelu",a=>`0.5 * ${a} * (1.0 + erf_vf32(${a} * 0.7071067811865475))`,D2(o)))},RC=(i,o)=>{let a=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"LeakyRelu",u=>`select(leaky_relu_alpha_ * ${u}, ${u}, ${u} >= vec4<${a}>(0.0))`,`const leaky_relu_alpha_ = ${a}(${o.alpha});`,o.cacheKey))},jC=i=>{i.compute(ja(i.inputs[0],"Not",o=>`!${o}`))},VC=i=>{i.compute(ja(i.inputs[0],"Neg",o=>`-${o}`))},WC=i=>{i.compute(ja(i.inputs[0],"Reciprocal",o=>`1.0/${o}`))},UC=i=>{let o=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"Relu",a=>`select(vec4<${o}>(0.0), ${a}, ${a} > vec4<${o}>(0.0))`))},HC=i=>{i.compute(ja(i.inputs[0],"Sigmoid",o=>`(1.0 / (1.0 + exp(-${o})))`))},YC=i=>un(i),KC=(i,o)=>{let a=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"HardSigmoid",u=>`max(vec4<${a}>(0.0), min(vec4<${a}>(1.0), ${o.alpha} * ${u} + vec4<${a}>(${o.beta})))`,void 0,o.cacheKey))},qC=i=>{i.compute(ja(i.inputs[0],"Sin","sin"))},XC=i=>{i.compute(ja(i.inputs[0],"Sinh","sinh"))},ZC=i=>{i.compute(ja(i.inputs[0],"Sqrt","sqrt"))},JC=i=>{i.compute(ja(i.inputs[0],"Tan","tan"))},Ap=i=>`sign(${i}) * (1 - exp(-2 * abs(${i}))) / (1 + exp(-2 * abs(${i})))`,$C=i=>{i.compute(ja(i.inputs[0],"Tanh",Ap))},lp=(i="f32")=>`
const fast_gelu_a: ${i} = 0.5;
const fast_gelu_b: ${i} = 0.7978845608028654;
const fast_gelu_c: ${i} = 0.035677408136300125;

fn tanh_v(v: vec4<${i}>) -> vec4<${i}> {
  return ${Ap("v")};
}
`,cp=i=>`(fast_gelu_a + fast_gelu_a * tanh_v(${i} * (fast_gelu_c * ${i} * ${i} + fast_gelu_b))) * ${i}`,ew=i=>{let o=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"FastGelu",cp,lp(o),void 0,i.inputs[0].dataType))},tw=(i,o)=>{let a=Lo(i.inputs[0].dataType);return i.compute(ja(i.inputs[0],"ThresholdedRelu",u=>`select(vec4<${a}>(0.0), ${u}, ${u} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${a}>(${o.alpha});`,o.cacheKey)),0},rw=i=>{i.compute(ja(i.inputs[0],"Log","log"))},sw=(i,o)=>`
const alpha = vec4<${i}>(${o});
const one = ${i}(1.0);
const zero = ${i}(0.0);

fn quick_gelu_impl(x: vec4<${i}>) -> vec4<${i}> {
  let v = x *alpha;
  var x1 : vec4<${i}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,aw=i=>`quick_gelu_impl(${i})`,nw=(i,o)=>{let a=Lo(i.inputs[0].dataType);i.compute(ja(i.inputs[0],"QuickGelu",aw,sw(a,o.alpha),o.cacheKey,i.inputs[0].dataType))}}),iw,ow,Aw,lv=xr(()=>{Js(),Aa(),up(),iw=i=>{if(i[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(i[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(i[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(i[0].dims[2]!==i[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ow=i=>{let o=i[0].dims.slice();o[2]=o[2]/2;let a=ur("input",i[0].dataType,i[0].dims,4),u=ur("bias",i[0].dataType,[i[0].dims[2]],4),p=us("output",i[0].dataType,o,4),h=ar.size(o)/4,C=so(i[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:o,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)}}),getShaderSource:y=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${i[0].dims[2]/4/2}u;

  ${y.declareVariables(a,u,p)}

  ${D2(C)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes(h)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${p.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Aw=i=>{iw(i.inputs),i.compute(ow(i.inputs))}}),lw,cw,Yl,uw,dw,fw,gw,pw,hw,mw,bw,Cw,ww,cv=xr(()=>{Qs(),Js(),Aa(),lw=(i,o,a,u,p,h,C,y,k,_,v,M)=>{let B,S;typeof y=="string"?B=S=(Q,q)=>`${y}((${Q}),(${q}))`:typeof y=="function"?B=S=y:(B=y.scalar,S=y.vector);let N=us("outputData",v,u.length,4),V=ur("aData",k,o.length,4),Z=ur("bData",_,a.length,4),O;if(p)if(h){let Q=ar.size(o)===1,q=ar.size(a)===1,f=o.length>0&&o[o.length-1]%4===0,I=a.length>0&&a[a.length-1]%4===0;Q||q?O=N.setByOffset("global_idx",S(Q?`${V.type.value}(${V.getByOffset("0")}.x)`:V.getByOffset("global_idx"),q?`${Z.type.value}(${Z.getByOffset("0")}.x)`:Z.getByOffset("global_idx"))):O=`
            let outputIndices = ${N.offsetToIndices("global_idx * 4u")};
            let offsetA = ${V.broadcastedIndicesToOffset("outputIndices",N)};
            let offsetB = ${Z.broadcastedIndicesToOffset("outputIndices",N)};
            ${N.setByOffset("global_idx",S(C||f?V.getByOffset("offsetA / 4u"):`${V.type.value}(${V.getByOffset("offsetA / 4u")}[offsetA % 4u])`,C||I?Z.getByOffset("offsetB / 4u"):`${Z.type.value}(${Z.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else O=N.setByOffset("global_idx",S(V.getByOffset("global_idx"),Z.getByOffset("global_idx")));else{if(!h)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Q=(q,f,I="")=>{let e=`aData[indexA${f}][componentA${f}]`,c=`bData[indexB${f}][componentB${f}]`;return`
            let outputIndices${f} = ${N.offsetToIndices(`global_idx * 4u + ${f}u`)};
            let offsetA${f} = ${V.broadcastedIndicesToOffset(`outputIndices${f}`,N)};
            let offsetB${f} = ${Z.broadcastedIndicesToOffset(`outputIndices${f}`,N)};
            let indexA${f} = offsetA${f} / 4u;
            let indexB${f} = offsetB${f} / 4u;
            let componentA${f} = offsetA${f} % 4u;
            let componentB${f} = offsetB${f} % 4u;
            ${q}[${f}] = ${I}(${B(e,c)});
          `};v===9?O=`
            var data = vec4<u32>(0);
            ${Q("data",0,"u32")}
            ${Q("data",1,"u32")}
            ${Q("data",2,"u32")}
            ${Q("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:O=`
            ${Q("outputData[global_idx]",0)}
            ${Q("outputData[global_idx]",1)}
            ${Q("outputData[global_idx]",2)}
            ${Q("outputData[global_idx]",3)}
          `}return`
        ${i.registerUniform("vec_size","u32").declareVariables(V,Z,N)}

        ${M??""}

        ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${O}
      }`},cw=(i,o,a,u,p,h,C=a.dataType)=>{let y=a.dims.map(V=>Number(V)??1),k=u.dims.map(V=>Number(V)??1),_=!ar.areEqual(y,k),v=y,M=ar.size(y),B=!1,S=!1,N=[_];if(_){let V=Bf.calcShape(y,k,!1);if(!V)throw new Error("Can't perform binary op on the given tensors");v=V.slice(),M=ar.size(v);let Z=ar.size(y)===1,O=ar.size(k)===1,Q=y.length>0&&y[y.length-1]%4===0,q=k.length>0&&k[k.length-1]%4===0;N.push(Z),N.push(O),N.push(Q),N.push(q);let f=1;for(let I=1;I<v.length;I++){let e=y[y.length-I],c=k[k.length-I];if(e===c)f*=e;else break}f%4===0?(S=!0,B=!0):(Z||O||Q||q)&&(B=!0)}else B=!0;return N.push(B),{name:i,shaderCache:{hint:o+N.map(V=>V.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:V=>lw(V,y,k,v,B,_,S,p,a.dataType,u.dataType,C,h),getRunData:()=>({outputs:[{dims:v,dataType:C}],dispatchGroup:{x:Math.ceil(M/64/4)},programUniforms:[{type:12,data:Math.ceil(ar.size(v)/4)},...bs(y,k,v)]})}},Yl=(i,o,a,u,p,h)=>{i.compute(cw(o,p??"",i.inputs[0],i.inputs[1],a,u,h))},uw=i=>{Yl(i,"Add",(o,a)=>`${o}+${a}`)},dw=i=>{Yl(i,"Div",(o,a)=>`${o}/${a}`)},fw=i=>{Yl(i,"Equal",{scalar:(o,a)=>`u32(${o}==${a})`,vector:(o,a)=>`vec4<u32>(${o}==${a})`},void 0,void 0,9)},gw=i=>{Yl(i,"Mul",(o,a)=>`${o}*${a}`)},pw=i=>{let o=ur("input",i.inputs[0].dataType,i.inputs[0].dims).type.value;Yl(i,"Pow",{scalar:(a,u)=>`pow_custom(${a},${u})`,vector:(a,u)=>`pow_vector_custom(${a},${u})`},`
    fn pow_custom(a : ${o}, b : ${o}) -> ${o} {
      if (b == ${o}(0.0)) {
        return ${o}(1.0);
      } else if (a < ${o}(0.0) && f32(b) != floor(f32(b))) {
        return ${o}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${o}(1.0), round(f32(abs(b) % ${o}(2.0))) != 1.0) * ${o}(${o==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${o}>, b : vec4<${o}>) -> vec4<${o}> {
      // TODO: implement vectorized pow
      return vec4<${o}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},hw=i=>{Yl(i,"Sub",(o,a)=>`${o}-${a}`)},mw=i=>{Yl(i,"Greater",{scalar:(o,a)=>`u32(${o}>${a})`,vector:(o,a)=>`vec4<u32>(${o}>${a})`},void 0,void 0,9)},bw=i=>{Yl(i,"Less",{scalar:(o,a)=>`u32(${o}<${a})`,vector:(o,a)=>`vec4<u32>(${o}<${a})`},void 0,void 0,9)},Cw=i=>{Yl(i,"GreaterOrEqual",{scalar:(o,a)=>`u32(${o}>=${a})`,vector:(o,a)=>`vec4<u32>(${o}>=${a})`},void 0,void 0,9)},ww=i=>{Yl(i,"LessOrEqual",{scalar:(o,a)=>`u32(${o}<=${a})`,vector:(o,a)=>`vec4<u32>(${o}<=${a})`},void 0,void 0,9)}}),Iw,yw,kw,_w,vw,xw,uv=xr(()=>{Qs(),Js(),Mi(),Aa(),Iw=(i,o)=>{if(!i||i.length<1)throw new Error("too few inputs");let a=0,u=i[a],p=u.dataType,h=u.dims.length;i.forEach((C,y)=>{if(y!==a){if(C.dataType!==p)throw new Error("input tensors should be one type");if(C.dims.length!==h)throw new Error("input tensors should have the same shape");C.dims.forEach((k,_)=>{if(_!==o&&k!==u.dims[_])throw new Error("non concat dimensions must match")})}})},yw=(i,o)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${i}u>(${o});
    for (var i: u32 = 0u; i < ${i}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${i}u;
  }`,kw=(i,o)=>{let a=i.length,u=[];for(let p=0;p<a;++p){let h=o.setByOffset("global_idx",i[p].getByIndices("indices"));a===1?u.push(h):p===0?u.push(`if (inputIndex == ${p}u) { ${h} }`):p===a-1?u.push(`else { ${h} }`):u.push(`else if (inputIndex == ${p}) { ${h} }`)}return u.join(`
`)},_w=(i,o,a,u)=>{let p=ar.size(a),h=new Array(i.length),C=new Array(i.length),y=0,k=[],_=[],v=[{type:12,data:p}];for(let V=0;V<i.length;++V)y+=i[V].dims[o],h[V]=y,_.push(i[V].dims.length),C[V]=ur(`input${V}`,u,_[V]),k.push("rank"),v.push({type:12,data:h[V]});for(let V=0;V<i.length;++V)v.push(...bs(i[V].dims));v.push(...bs(a));let M=us("output",u,a.length),B=M.indicesGet("indices",o),S=Array.from(Array(h.length).keys()).map(V=>`uniforms.sizeInConcatAxis${V}`).join(","),N=V=>`

  ${(()=>{V.registerUniform("outputSize","u32");for(let Z=0;Z<i.length;Z++)V.registerUniform(`sizeInConcatAxis${Z}`,"u32");return V.declareVariables(...C,M)})()}

  ${yw(h.length,S)}

  ${V.mainStart()}
    ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${M.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${B});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${h.length}u>(${S});
      ${B} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${kw(C,M)}
  }`;return{name:"Concat",shaderCache:{hint:`${o}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:v}),getShaderSource:N}},vw=(i,o)=>{let a=i.inputs,u=a[0].dims,p=ar.normalizeAxis(o.axis,u.length);Iw(a,p);let h=u.slice();h[p]=a.reduce((y,k)=>y+(k.dims.length>p?k.dims[p]:0),0);let C=a.filter(y=>ar.size(y.dims)>0);i.compute(_w(C,p,h,a[0].dataType),{inputs:C})},xw=i=>un({axis:i.axis})}),Gd,Fd,zd,dp,Od=xr(()=>{Qs(),Js(),Gd=(i,o,a="f32")=>{switch(i.activation){case"Relu":return`value = max(value, ${o}(0.0));`;case"Sigmoid":return`value = (${o}(1.0) / (${o}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${o}(${a}(uniforms.clip_min)), ${o}(${a}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${o}(0.0), min(${o}(1.0), ${a}(uniforms.alpha) * value + ${a}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${a}(uniforms.alpha) * value, value, value >= ${o}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${i.activation}`)}},Fd=(i,o)=>{i.activation==="Clip"?o.push({type:1,data:i.clipMax},{type:1,data:i.clipMin}):i.activation==="HardSigmoid"?o.push({type:1,data:i.alpha},{type:1,data:i.beta}):i.activation==="LeakyRelu"&&o.push({type:1,data:i.alpha})},zd=(i,o)=>{i.activation==="Clip"?o.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):i.activation==="HardSigmoid"?o.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):i.activation==="LeakyRelu"&&o.push({name:"alpha",type:"f32"})},dp=i=>{let o=(i==null?void 0:i.activation)||"";if(o==="HardSigmoid"){let[a,u]=(i==null?void 0:i.activation_params)||[.2,.5];return{activation:o,alpha:a,beta:u}}else if(o==="Clip"){let[a,u]=(i==null?void 0:i.activation_params)||[ob,Ab];return{activation:o,clipMax:u,clipMin:a}}else if(o==="LeakyRelu"){let[a]=(i==null?void 0:i.activation_params)||[.01];return{activation:o,alpha:a}}return{activation:o}}}),co,Mw,fp=xr(()=>{co=(i,o)=>{switch(i){case 1:return o;case 2:return`vec2<${o}>`;case 3:return`vec3<${o}>`;case 4:return`vec4<${o}>`;default:throw new Error(`${i}-component is not supported.`)}},Mw=i=>`
      ${i?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ew,dv=xr(()=>{Ew=i=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${i}.x), i32(${i}.y), i32(${i}.z), 1));
}
`}),e2,gp,pp=xr(()=>{Qs(),Js(),Aa(),Od(),e2=(i,o,a,u,p)=>{let h=u-a;return`
      ${Array.from({length:a}).map((C,y)=>`
      if (${ms(o.shape,y,o.rank)} != 1) {
        ${o.indicesSet(i,y,ms(p,y+h,u))}
      } else {
        ${o.indicesSet(i,y,0)}
      }`).join("")}
`},gp=(i,o,a,u,p=!1,h)=>{let C=i[0].dims,y=i[1].dims,k=C[C.length-2],_=y[y.length-1],v=C[C.length-1],M=li(_),B=li(v),S=li(k),N=ar.size(a)/M/S,V=i.length>2,Z=u?u.slice(0,-2):a.slice(0,-2),O=[ar.size(Z),k,_],Q=[{type:12,data:N},{type:12,data:k},{type:12,data:_},{type:12,data:v}];Fd(o,Q),Q.push(...bs(Z,C,y)),V&&Q.push(...bs(i[2].dims)),Q.push(...bs(O));let q=f=>{let I=tp("batch_dims",i[0].dataType,Z.length),e=ur("a",i[0].dataType,C.length,B),c=ur("b",i[1].dataType,y.length,M),P=us("output",i[0].dataType,O.length,M),J=so(P.type.tensor),D=Gd(o,P.type.value,J),j=[e,c],Ie="";if(V){let Ee=p?M:1;j.push(ur("bias",i[2].dataType,i[2].dims.length,Ee)),Ie=`${p?`value += bias[col / ${Ee}];`:`value += ${P.type.value}(bias[row + i]);`}`}let ge=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];zd(o,ge);let ke=()=>{let Ee=`var a_data: ${e.type.value};`;for(let Ne=0;Ne<B;Ne++)Ee+=`
              let b_data${Ne} = b[(b_offset + (k + ${Ne}) * uniforms.N + col) / ${M}];`;for(let Ne=0;Ne<S;Ne++){Ee+=`a_data = a[(a_offset + (row + ${Ne}) * uniforms.K + k) / ${B}];`;for(let Xe=0;Xe<B;Xe++)Ee+=`
            values[${Ne}] = fma(${c.type.value}(a_data${B===1?"":`[${Xe}]`}), b_data${Xe}, values[${Ne}]);
`}return Ee};return`
  ${f.registerUniforms(ge).registerInternalVariables(I).declareVariables(...j,P)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${M})) * ${M};
    var index1 = global_idx / (uniforms.N / ${M});
    let stride1 = uniforms.M / ${S};
    let row = (index1 % stride1) * ${S};
    let batch = index1 / stride1;

    ${a.length===2?"":`let batch_indices = ${I.offsetToIndices("batch")};`}

    var a_indices: ${e.type.indices};
    ${e2("a_indices",e,e.rank-2,I.rank,"batch_indices")}
    ${e.indicesSet("a_indices",e.rank-2,0)}
    ${e.indicesSet("a_indices",e.rank-1,0)}
    let a_offset = ${e.indicesToOffset("a_indices")};

    var b_indices: ${c.type.indices};
    ${e2("b_indices",c,c.rank-2,I.rank,"batch_indices")}
    ${c.indicesSet("b_indices",c.rank-2,0)}
    ${c.indicesSet("b_indices",c.rank-1,0)}
    let b_offset = ${c.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${S}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${B}) {
      ${ke()}
    }
    for (var i = 0u; i < ${S}u; i++) {
      var value = values[i];
      ${Ie}
      ${D}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${M}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${o.activation};${M};${B};${S};${p}`,inputDependencies:V?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:h?h(a):a,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(N/64)},programUniforms:Q}),getShaderSource:q}}}),Bw,Tw,hp,mp,Pw,bp,Dw,S2,Cp=xr(()=>{Qs(),Js(),Aa(),Od(),pp(),fp(),Bw=(i,o)=>i?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${o?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${o?", batchIndices":""});
        `,Tw=(i,o)=>i?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${o===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${o===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${o===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,hp=(i,o,a="f32",u,p=!1,h=32,C=!1,y=32)=>{let k=o[1]*i[1],_=o[0]*i[0],v=p?k:h,M=p?h:k,B=v/o[0],S=h/o[1];if(!((p&&B===4&&i[1]===4||!p&&(B===3||B===4))&&v%o[0]===0&&h%o[1]===0&&i[0]===4))throw new Error(`If transposeA ${p} is true, innerElementSize ${B} and workPerThread[1] ${i[1]} must be 4.
      Otherwise, innerElementSize ${B} must be 3 or 4.
  tileAWidth ${v} must be divisible by workgroupSize[0]${o[0]}. tileInner ${h} must be divisible by workgroupSize[1] ${o[1]}. colPerThread ${i[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${B}<${a}>, ${v/B}>, ${M}>;
var<workgroup> mm_Bsub: array<array<vec4<${a}>, ${_/i[0]}>, ${h}>;

const rowPerThread = ${i[1]};
const colPerThread = ${i[0]};
const innerElementSize = ${B};
const tileInner = ${h};

@compute @workgroup_size(${o[0]}, ${o[1]}, ${o[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${C?"0":"i32(globalId.z)"};
  ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${k};

  let num_tiles = ${C?`${Math.ceil(y/h)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${C?`i32(globalId.z) * ${y}`:"0"};

  var acc: array<vec4<${a}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${S};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Bw(p,u)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${u?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${B===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Tw(p,B)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},mp=(i,o)=>i?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${o?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${o?", batchIndices":""});
            `,Pw=i=>i?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",bp=(i,o,a="f32",u,p=!1,h=32,C=!1,y=32,k=!1)=>{let _=i[1]*o[1],v=i[0]*o[0],M=p?_:h,B=p?h:_;if(!(B%o[1]===0&&M%o[0]===0&&h%o[1]===0))throw new Error(`tileAHight ${B} must be divisible by workgroupSize[1]${o[1]}, tileAWidth ${M} must be divisible by workgroupSize[0]${o[0]}, tileInner ${h} must be divisible by workgroupSize[1]${o[1]}`);let S=B/o[1],N=M/o[0],V=h/o[1],Z=k?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${_};
    let globalColStart = i32(workgroupId.x) * ${v};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${B}; inputRow = inputRow + ${o[1]}) {
        for (var inputCol = localCol; inputCol < ${M}; inputCol = inputCol + ${o[0]}) {
          ${mp(p,u)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${o[1]}) {
            for (var inputCol = localCol; inputCol < ${v}; inputCol = inputCol + ${o[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${u?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${a}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${o[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${p?`mm_Asub[k][localRow + innerRow * ${o[1]}];`:`mm_Asub[localRow + innerRow * ${o[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${o[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${o[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${_};

let tileRowA = i32(localId.y) * ${S};
let tileColA = i32(localId.x) * ${N};
let tileRowB = i32(localId.y) * ${V};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${N}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${mp(p,u)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${V}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${u?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${a}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Pw(p)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${a}, ${M}>, ${B}>;
  var<workgroup> mm_Bsub : array<array<${a}, ${v}>, ${h}>;
  const rowPerThread = ${i[1]};
  const colPerThread = ${i[0]};
  const tileInner = ${h};

@compute @workgroup_size(${o[0]}, ${o[1]}, ${o[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${C?"0":"i32(globalId.z)"};
    ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${C?`${Math.ceil(y/h)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${C?`i32(globalId.z) * ${y}`:"0"};

    var acc : array<array<${a}, colPerThread>, rowPerThread>;
    ${Z}
  }
`},Dw=(i,o,a,u,p=!1)=>{let[h,C,y,k]=u,_=so(u[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${co(i,_)} {
      var value = ${co(i,_)}(0.0);
      let col = colIn * ${i};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${C.type.indices};
        ${e2("aIndices",C,C.rank-2,h.rank,"batchIndices")}
        ${C.indicesSet("aIndices",C.rank-2,"u32(row)")}
        ${C.indicesSet("aIndices",C.rank-1,"u32(colIn)")}
        value = ${C.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${co(i,_)} {
      var value = ${co(i,_)}(0.0);
      let col = colIn * ${i};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${y.type.indices};
        ${e2("bIndices",y,y.rank-2,h.rank,"batchIndices")}
        ${y.indicesSet("bIndices",y.rank-2,"u32(row)")}
        ${y.indicesSet("bIndices",y.rank-1,"u32(colIn)")}
        value = ${y.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${co(i,_)}) {
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${o?`value = value + ${p?"bias[colIn]":`${co(i,_)}(bias[row])`};`:""}
        ${a}
        ${k.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},S2=(i,o,a,u,p=!1,h)=>{let C=i[0].dims,y=i[1].dims,k=C.slice(0,-2),_=y.slice(0,-2),v=u?u.slice(0,-2):a.slice(0,-2),M=ar.size(v),B=C[C.length-2],S=C[C.length-1],N=y[y.length-1],V=S%4===0&&N%4===0,Z=B<=8?[4,1,1]:[4,4,1],O=[8,8,1],Q=[Math.ceil(N/O[0]/Z[0]),Math.ceil(B/O[1]/Z[1]),Math.ceil(M/O[2]/Z[2])],q=V?4:1,f=[...k,B,S/q],I=f.length,e=[..._,S,N/q],c=e.length,P=[M,B,N/q],J=[{type:6,data:B},{type:6,data:N},{type:6,data:S}];Fd(o,J),J.push(...bs(v,f,e));let D=["rank","rank"],j=i.length>2;j&&(J.push(...bs(i[2].dims)),D.push("rank")),J.push(...bs(P));let Ie=ge=>{let ke=v.length,Ee=tp("batchDims",i[0].dataType,ke,1),Ne=so(i[0].dataType),Xe=ur("a",i[0].dataType,I,q),At=ur("b",i[1].dataType,c,q),xe=us("result",i[0].dataType,P.length,q),ye=[Xe,At];if(j){let Le=p?q:1;ye.push(ur("bias",i[2].dataType,i[2].dims.length,Le))}let ue=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];zd(o,ue);let ie=so(xe.type.tensor),be=Gd(o,xe.type.value,ie),Ye=Dw(q,j,be,[Ee,Xe,At,xe],p);return`
  ${ge.registerUniforms(ue).registerInternalVariables(Ee).declareVariables(...ye,xe)}
  ${Ye}
  ${V?hp(Z,O,Ne,Ee):bp(Z,O,Ne,Ee)}
                   `};return{name:"MatMul",shaderCache:{hint:`${Z};${o.activation};${V};${p}`,inputDependencies:D},getRunData:()=>({outputs:[{dims:h?h(a):a,dataType:i[0].dataType}],dispatchGroup:{x:Q[0],y:Q[1],z:Q[2]},programUniforms:J}),getShaderSource:Ie}}}),Sw,Gw,fv=xr(()=>{Qs(),E0(),Aa(),Od(),fp(),dv(),Cp(),Sw=(i,o,a,u,p=!1,h,C=4,y=4,k=4,_="f32")=>{let v=J=>{switch(J){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${_}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${J} is not supported.`)}},M=J=>{switch(J){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${J} is not supported.`)}},B=i?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,S=i?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,N=i?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",V=i?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",Z=i?"row":"col",O=i?"col":"row",Q=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${i?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${Z} / outWidth;
    let outCol = ${Z} % outWidth;

    let WRow = ${O} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${O} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${O} % inChannels;
    var resData = ${co(C,_)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${N} && xCol >= 0 && xCol < ${V}) {
      ${B}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${v(C)}
    }
    return resData;`,q=i?o&&u?`
    let col = colIn * ${C};
    ${Q}`:`
    let col = colIn * ${C};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${Q}
    }
    return ${co(C,_)}(0.0);`:u&&a?`
    let col = colIn * ${C};
    ${Q}`:`
    let col = colIn * ${C};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Q}
    }
    return ${co(C,_)}(0.0);`,f=i?u&&a?M(y):`
    let col = colIn * ${y};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${M(y)}
    }
    return ${co(y,_)}(0.0);`:`
    let col = colIn * ${y};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${M(y)}
    }
    return ${co(y,_)}(0.0);`,I=co(k,_),e=co(i?C:y,_),c=co(i?y:C,_),P=Gd(h,I,_);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${e} {
      ${i?q:f}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${c} {
      ${i?f:q}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${I}) {
      let col = colIn * ${k};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${i?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${S}
      ${Mw(p)}
      ${P}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Gw=(i,o,a,u,p,h,C,y,k)=>{let _=o.format==="NHWC",v=_?i[0].dims[3]:i[0].dims[1],M=a[0],B=_?a[2]:a[3],S=_?a[1]:a[2],N=_?a[3]:a[1],V=_&&(v%4===0||v%3===0)&&N%4===0,Z=_?N:B*S,O=_?B*S:N,Q=[8,8,1],q=u<=8?[4,1,1]:[4,4,1],f=[Math.ceil(Z/Q[0]/q[0]),Math.ceil(O/Q[1]/q[1]),Math.ceil(M/Q[2]/q[2])];Ga("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${f}`);let I=V?_&&v%4!==0?3:4:1,e=Q[1]*q[1],c=Q[0]*q[0],P=Math.max(Q[0]*I,Q[1]),J=u%e===0,D=p%c===0,j=h%P===0,Ie=V?[I,4,4]:[1,1,1],ge=[{type:6,data:u},{type:6,data:p},{type:6,data:h},{type:6,data:[o.pads[0],o.pads[1]]},{type:6,data:o.strides},{type:6,data:o.dilations}];Fd(o,ge),ge.push(...bs(i[0].dims,i[1].dims));let ke=["rank","rank"];C&&(ge.push(...bs(i[2].dims)),ke.push("rank")),ge.push(...bs(a));let Ee=Ne=>{let Xe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];zd(o,Xe);let At=V?4:1,xe=so(i[0].dataType),ye=`
      fn setOutputAtIndex(flatIndex : i32, value : ${V?`vec4<${xe}>`:xe}) {
        result[flatIndex] = ${V?`vec4<${xe}>`:xe}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${V?`vec4<${xe}>`:xe}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${V?"/ 4":""}, value);
      }`,ue=ur("x",i[0].dataType,i[0].dims.length,I===3?1:I),ie=ur("w",i[1].dataType,i[1].dims.length,At),be=[ue,ie],Ye=us("result",i[0].dataType,a.length,At);if(C){let Le=ur("bias",i[2].dataType,i[2].dims.length,At);be.push(Le),ye+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${V?`vec4<${xe}>`:xe} {
          return bias[coords.${_?"w":"y"}${V?"/ 4":""}];
        }`}return`
        ${Ew("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Ne.registerUniforms(Xe).declareVariables(...be,Ye)}
        ${ye}
        ${Sw(_,J,D,j,C,o,Ie[0],Ie[1],Ie[2],xe)}
        ${V?hp(q,Q,xe,void 0,!_,P):bp(q,Q,xe,void 0,!_,P,!1,void 0,y)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${o.cacheKey};${I};${V};${J};${D};${j};${e};${c};${P}`,inputDependencies:ke},getRunData:()=>({outputs:[{dims:k?k(a):a,dataType:i[0].dataType}],dispatchGroup:{x:f[0],y:f[1],z:f[2]},programUniforms:ge}),getShaderSource:Ee}}}),Fw,wp,t2,zw,Ip,Ow,Qw,Nw,gv=xr(()=>{Qs(),E0(),Js(),Aa(),Od(),fp(),Fw=i=>{let o=1;for(let a=0;a<i.length;a++)o*=i[a];return o},wp=i=>typeof i=="number"?[i,i,i]:i,t2=(i,o)=>o<=1?i:i+(i-1)*(o-1),zw=(i,o,a,u=1)=>{let p=t2(o,u);return Math.floor((i[0]*(a-1)-a+p)/2)},Ip=(i,o,a,u,p)=>{p==null&&(p=zw(i,o[0],u[0]));let h=[0,0,0,a];for(let C=0;C<3;C++)i[C]+2*p>=o[C]&&(h[C]=Math.trunc((i[C]-o[C]+2*p)/u[C]+1));return h},Ow=(i,o,a,u,p,h,C,y,k,_)=>{let v,M,B,S;if(i==="VALID"&&(i=0),typeof i=="number"){v={top:i,bottom:i,left:i,right:i,front:i,back:i};let N=Ip([o,a,u,1],[y,k,_],1,[p,h,C],i);M=N[0],B=N[1],S=N[2]}else if(Array.isArray(i)){if(!i.every((V,Z,O)=>V===O[0]))throw Error(`Unsupported padding parameter: ${i}`);v={top:i[0],bottom:i[1],left:i[2],right:i[3],front:i[4],back:i[5]};let N=Ip([o,a,u,1],[y,k,_],1,[p,h,C],i[0]);M=N[0],B=N[1],S=N[2]}else if(i==="SAME_UPPER"){M=Math.ceil(o/p),B=Math.ceil(a/h),S=Math.ceil(u/C);let N=(M-1)*p+y-o,V=(B-1)*h+k-a,Z=(S-1)*C+_-u,O=Math.floor(N/2),Q=N-O,q=Math.floor(V/2),f=V-q,I=Math.floor(Z/2),e=Z-I;v={top:q,bottom:f,left:I,right:e,front:O,back:Q}}else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:v,outDepth:M,outHeight:B,outWidth:S}},Qw=(i,o,a,u,p,h=!1,C="channelsLast")=>{let y,k,_,v,M;if(C==="channelsLast")[y,k,_,v,M]=i;else if(C==="channelsFirst")[y,M,k,_,v]=i;else throw new Error(`Unknown dataFormat ${C}`);let[B,,S,N,V]=o,[Z,O,Q]=wp(a),[q,f,I]=wp(u),e=t2(S,q),c=t2(N,f),P=t2(V,I),{padInfo:J,outDepth:D,outHeight:j,outWidth:Ie}=Ow(p,k,_,v,Z,O,Q,e,c,P),ge=h?B*M:B,ke=[0,0,0,0,0];return C==="channelsFirst"?ke=[y,ge,D,j,Ie]:C==="channelsLast"&&(ke=[y,D,j,Ie,ge]),{batchSize:y,dataFormat:C,inDepth:k,inHeight:_,inWidth:v,inChannels:M,outDepth:D,outHeight:j,outWidth:Ie,outChannels:ge,padInfo:J,strideDepth:Z,strideHeight:O,strideWidth:Q,filterDepth:S,filterHeight:N,filterWidth:V,effectiveFilterDepth:e,effectiveFilterHeight:c,effectiveFilterWidth:P,dilationDepth:q,dilationHeight:f,dilationWidth:I,inShape:i,outShape:ke,filterShape:o}},Nw=(i,o,a,u,p,h)=>{let C=h==="channelsLast";C?i[0].dims[3]:i[0].dims[1];let y=[64,1,1],k={x:a.map((Z,O)=>O)},_=[Math.ceil(Fw(k.x.map(Z=>a[Z]))/y[0]),1,1];Ga("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${_}`);let v=1,M=ar.size(a),B=[{type:12,data:M},{type:12,data:u},{type:12,data:p},{type:12,data:o.strides},{type:12,data:o.dilations}];Fd(o,B),B.push(...bs(i[0].dims,i[1].dims));let S=["rank","rank"],N=i.length===3;N&&(B.push(...bs(i[2].dims)),S.push("rank")),B.push(...bs(a));let V=Z=>{let O=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:u.length},{name:"pads",type:"u32",length:p.length},{name:"strides",type:"u32",length:o.strides.length},{name:"dilations",type:"u32",length:o.dilations.length}];zd(o,O);let Q=1,q=so(i[0].dataType),f=ur("x",i[0].dataType,i[0].dims.length,v),I=ur("W",i[1].dataType,i[1].dims.length,Q),e=[f,I],c=us("result",i[0].dataType,a.length,Q),P="";if(N){let j=ur("bias",i[2].dataType,i[2].dims.length,Q);e.push(j),P+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${q} {
          return bias[${C?ms("coords",4,5):ms("coords",1,5)}];
        }`}let J=co(v,q),D=Gd(o,J,q);return`
            ${P}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${f.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${I.getByIndices("aIndices")};
            }
          ${Z.registerUniforms(O).declareVariables(...e,c)}
          ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${c.offsetToIndices("global_idx")};
              let batch = ${ms("coords",0,f.rank)};
              let d2 = ${C?ms("coords",f.rank-1,f.rank):ms("coords",1,f.rank)};
              let xFRCCorner = vec3<u32>(${C?ms("coords",1,f.rank):ms("coords",2,f.rank)},
              ${C?ms("coords",2,f.rank):ms("coords",3,f.rank)},
              ${C?ms("coords",3,f.rank):ms("coords",4,f.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${C?ms("uniforms.x_shape",1,f.rank):ms("uniforms.x_shape",2,f.rank)};
              let xShapeZ = ${C?ms("uniforms.x_shape",2,f.rank):ms("uniforms.x_shape",3,f.rank)};
              let xShapeW = ${C?ms("uniforms.x_shape",3,f.rank):ms("uniforms.x_shape",4,f.rank)};
              let xShapeU = ${C?ms("uniforms.x_shape",4,f.rank):ms("uniforms.x_shape",1,f.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${C?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${C?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${C?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${C?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${N?"value = value + getBiasByOutputCoords(coords)":""};
              ${D}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${o.cacheKey};${C};${v};${N}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:a,dataType:i[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]},programUniforms:B}),getShaderSource:V}}}),Lw,Rw,pv=xr(()=>{Qs(),Js(),Aa(),Od(),Lw=(i,o,a,u)=>{let p=i.length>2,h=p?"value += b[output_channel];":"",C=i[0].dims,y=i[1].dims,k=o.format==="NHWC",_=k?a[3]:a[1],v=_/o.group,M=k&&v>=4?li(_):1,B=ar.size(a)/M,S=[{type:12,data:B},{type:12,data:o.dilations},{type:12,data:[o.strides[0],o.strides[1]]},{type:12,data:[o.pads[0],o.pads[1]]},{type:12,data:v}];Fd(o,S),S.push(...bs(C,[y[0],y[1],y[2],y[3]/M]));let N=p?["rank","rank","rank"]:["rank","rank"];S.push(...bs([a[0],a[1],a[2],a[3]/M]));let V=Z=>{let O=us("output",i[0].dataType,a.length,M),Q=so(O.type.tensor),q=Gd(o,O.type.value,Q),f=ur("x",i[0].dataType,C.length),I=ur("w",i[1].dataType,y.length,M),e=[f,I];p&&e.push(ur("b",i[2].dataType,i[2].dims,M));let c=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:o.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];zd(o,c);let P=k?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${f.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${I.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${f.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${I.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${Z.registerUniforms(c).declareVariables(...e,O)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${O.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${k?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${k?1:2}], outputIndices[${k?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${M} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${k?2:1}];

    var value: ${O.type.value} = ${O.type.value}(0);
    ${P}
    ${h}
    ${q}
    ${O.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${o.cacheKey}_${M}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:u?u(a):a,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:S}),getShaderSource:V}},Rw=(i,o,a,u)=>{let p=i.length>2,h=li(a[3]),C=li(a[2]),y=ar.size(a)/h/C,k=[i[0].dims[0],i[0].dims[1],i[0].dims[2],i[0].dims[3]/h],_=[i[1].dims[0],i[1].dims[1],i[1].dims[2],i[1].dims[3]/h],v=[a[0],a[1],a[2],a[3]/h],M=[{type:12,data:y},{type:6,data:[o.strides[0],o.strides[1]]},{type:6,data:[o.pads[0],o.pads[1]]}];Fd(o,M),M.push(...bs(k,_,v));let B=(C-1)*o.strides[1]+_[1],S=N=>{let V=us("output",i[0].dataType,v.length,h),Z=so(V.type.tensor),O=Gd(o,V.type.value,Z),Q=ur("x",i[0].dataType,k.length,h),q=ur("w",i[1].dataType,_.length,h),f=[Q,q];p&&f.push(ur("b",i[2].dataType,i[2].dims,h));let I=p?"value += b[output_channel];":"",e=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return zd(o,e),`
  ${N.registerUniforms(e).declareVariables(...f,V)}
  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${C}u;
    let col = (index1 % width1) * ${C}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${Q.type.value}, ${B}>;
    var values: array<${V.type.value}, ${C}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${_[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${B}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${Q.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${Q.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${_[1]}; w_width++) {
          let w_val = ${q.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${C}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${C}u; i++) {
      var value = values[i];
      ${I}
      ${O}
      ${V.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${o.cacheKey};${h};${C};${B};${_[0]};${_[1]}`,inputDependencies:p?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:u?u(a):a,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:M}),getShaderSource:S}}}),jw,G2,Vw,F2,yp,kp,Ww,Uw,_p,hv=xr(()=>{Js(),fv(),gv(),Cp(),pv(),Od(),pp(),Wc(),jw=(i,o,a,u,p,h)=>{let C=i[0],y=i.slice(h?1:2,h?3:4),k=y.length,_=o[0],v=o.slice(2).map((B,S)=>B+(B-1)*(a[S]-1)),M=y.map((B,S)=>B+u[S]+u[S+k]).map((B,S)=>Math.floor((B-v[S]+p[S])/p[S]));return M.splice(0,0,C),M.splice(h?3:1,0,_),M},G2=[2,3,1,0],Vw=(i,o)=>{if(!i||i.length!==2&&i.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(i[0].dims.length>5)throw new Error("greater than 5D is not supported");if(i[0].dims.length!==i[1].dims.length)throw new Error("filter does not have same dimension as input");let a=i[0].dims[o.format==="NHWC"?i[0].dims.length-1:1],u=i[1].dims[1]*o.group;if(a!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(i.length===3&&(i[2].dims.length!==1||i[1].dims[0]!==i[2].dims[0]))throw new Error("invalid bias");let p=i[0].dims.length-2;if(o.dilations.length!==p)throw new Error(`dilations should be ${p}D`);if(o.strides.length!==p)throw new Error(`strides should be ${p}D`);if(o.pads.length!==p*2)throw new Error(`pads should be ${p*2}D`);if(o.kernelShape.length!==0&&o.kernelShape.length!==i[1].dims.length-2)throw new Error("invalid kernel shape")},F2=(i,o)=>{let a=i.kernelShape.slice();a.length<o[1].dims.length-2&&a.push(...Array(o[1].dims.length-2-a.length).fill(0));for(let h=2;h<o[1].dims.length;++h)a[h-2]===0&&(a[h-2]=o[1].dims[h]);let u=i.pads.slice();E2.adjustPadsBasedOnAutoPad(o[0].dims,i.strides,i.dilations,a,u,i.format==="NHWC",i.autoPad);let p=Object.assign({},i);return Object.assign(p,{kernelShape:a,pads:u}),p},yp=i=>{let o=dp(i),a=i.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][i.auto_pad],p=i.dilations,h=i.group,C=i.kernel_shape,y=i.pads,k=i.strides,_=i.w_is_const();return{autoPad:u,format:a,dilations:p,group:h,kernelShape:C,pads:y,strides:k,wIsConst:_,...o,cacheKey:`${i.format};${o.activation};`}},kp=(i,o,a,u)=>{let p=a.format==="NHWC",h=jw(o[0].dims,o[1].dims,a.dilations,a.pads,a.strides,p);if(a.group!==1){let e=[o[0]];if(p){let c=i.kernelCustomData.wT??i.compute(il(o[1],G2),{inputs:[1],outputs:[a.wIsConst?-2:-1]})[0];a.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=c),e.push(c)}else e.push(o[1]);o.length===3&&e.push(o[2]),!i.adapterInfo.isArchitecture("ampere")&&p&&o[1].dims[0]===a.group&&o[1].dims[1]===1&&a.dilations[0]===1&&a.dilations[1]===1?i.compute(Rw(e,a,h,u),{inputs:e}):i.compute(Lw(e,a,h,u),{inputs:e});return}let C=o.length===3,y=o[0].dims[p?1:2],k=o[0].dims[p?2:3],_=o[0].dims[p?3:1],v=o[1].dims[2],M=o[1].dims[3],B=h[p?1:2],S=h[p?2:3],N=h[p?3:1],V=p&&v===y&&M===k&&a.pads[0]===0&&a.pads[1]===0;if(V||v===1&&M===1&&a.dilations[0]===1&&a.dilations[1]===1&&a.strides[0]===1&&a.strides[1]===1&&a.pads[0]===0&&a.pads[1]===0){let e=h[0],c,P,J,D=[];if(p){let ge=i.kernelCustomData.wT??i.compute(il(o[1],G2),{inputs:[1],outputs:[a.wIsConst?-2:-1]})[0];if(a.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=ge),V){let ke=y*k*_;c=o[0].reshape([1,e,ke]),P=ge.reshape([1,ke,N]),J=[1,e,N]}else c=o[0].reshape([e,y*k,_]),P=ge.reshape([1,_,N]),J=[e,B*S,N];D.push(c),D.push(P)}else c=o[0].reshape([e,_,y*k]),P=o[1].reshape([1,N,_]),J=[e,N,B*S],D.push(P),D.push(c);C&&D.push(o[2]);let j=J[2],Ie=D[0].dims[D[0].dims.length-1];j<8&&Ie<8?i.compute(gp(D,a,h,J,p,u),{inputs:D}):i.compute(S2(D,a,h,J,p,u),{inputs:D});return}let Z=!0,O=i.kernelCustomData.wT??i.compute(il(o[1],G2),{inputs:[1],outputs:[a.wIsConst?-2:-1]})[0];a.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=O);let Q=[o[0],O];C&&Q.push(o[2]);let q=p?B*S:N,f=p?N:B*S,I=v*M*_;i.compute(Gw(Q,a,h,q,f,I,C,Z,u),{inputs:Q})},Ww=(i,o)=>{let a=o.format==="NHWC",u=[i.inputs[0].reshape(a?[i.inputs[0].dims[0],1,i.inputs[0].dims[1],i.inputs[0].dims[2]]:[i.inputs[0].dims[0],i.inputs[0].dims[1],1,i.inputs[0].dims[2]]),i.inputs[1].reshape([i.inputs[1].dims[0],i.inputs[1].dims[1],1,i.inputs[1].dims[2]])];i.inputs.length===3&&u.push(i.inputs[2]);let p=[0,o.pads[0],0,o.pads[1]],h=[1].concat(o.strides),C=[1].concat(o.dilations),y=[1].concat(o.kernelShape),k=F2({...o,pads:p,strides:h,dilations:C,kernelShape:y},u);kp(i,u,k,_=>a?[_[0],_[2],_[3]]:[_[0],_[1],_[3]])},Uw=(i,o,a)=>{let u=a.format==="NHWC"?"channelsLast":"channelsFirst",p=F2(a,o),h=a.autoPad==="NOTSET"?a.pads:a.autoPad,C=Qw(o[0].dims,o[1].dims,a.strides,a.dilations,h,!1,u);i.compute(Nw(o,p,C.outShape,[C.filterDepth,C.filterHeight,C.filterWidth],[C.padInfo.front,C.padInfo.top,C.padInfo.left],u))},_p=(i,o)=>{if(Vw(i.inputs,o),i.inputs[0].dims.length===3)Ww(i,o);else if(i.inputs[0].dims.length===5)Uw(i,i.inputs,o);else{let a=F2(o,i.inputs);kp(i,i.inputs,a)}}}),Hw,mv=xr(()=>{Qs(),E0(),Js(),Aa(),Hw=(i,o,a)=>{let u=i.length>2,p=o.outputShape,h=o.format==="NHWC",C=o.group,y=i[1].dims,k=y[2]/C,_=y[3],v=h?li(k):1,M=h&&_===1&&k>=4,B=M?Math.floor(k/4)*4:Math.floor(k/v)*v,S=k-B,N=h?li(_):1,V=h?_===1?v:N:1,Z=ar.size(p)/N,O=[Math.ceil(Z/64),1,1];Ga("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${O}`);let Q=["rank","rank"],q=[o.strides[0],o.strides[1]],f=[o.kernelShape[h?1:2],o.kernelShape[h?2:3]],I=[o.dilations[0],o.dilations[1]],e=[f[0]+(o.dilations[0]<=1?0:(o.kernelShape[h?1:2]-1)*(o.dilations[0]-1)),f[1]+(o.dilations[1]<=1?0:(o.kernelShape[h?2:3]-1)*(o.dilations[1]-1))],c=[e[0]-1-Math.floor((o.pads[0]+o.pads[2])/2),e[1]-1-Math.floor((o.pads[1]+o.pads[3])/2)],P=[{type:12,data:Z},{type:12,data:q},{type:12,data:f},{type:12,data:I},{type:12,data:e},{type:6,data:c},{type:12,data:B},{type:12,data:k},{type:12,data:_},...bs(i[0].dims,i[1].dims)];u&&(P.push(...bs(i[2].dims)),Q.push("rank")),P.push(...bs(p));let J=D=>{let j=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:q.length},{name:"filter_dims",type:"u32",length:f.length},{name:"dilations",type:"u32",length:f.length},{name:"effective_filter_dims",type:"u32",length:e.length},{name:"pads",type:"i32",length:c.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Ie=so(i[0].dataType),ge=h?1:2,ke=h?2:3,Ee=h?3:1,Ne=ur("W",i[1].dataType,i[1].dims.length,V),Xe=ur("Dy",i[0].dataType,i[0].dims.length,v),At=[Xe,Ne];u&&At.push(ur("bias",i[2].dataType,[p[Ee]].length,N));let xe=us("result",i[0].dataType,p.length,N),ye=()=>{let be="";if(M)v===4?be+=`
        let xValue = ${Xe.getByOffset("x_offset")};
        let wValue = ${Ne.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:v===2?be+=`
          dotProd = dotProd + dot(vec4<${Ie}>(${Xe.getByOffset("x_offset")}, ${Xe.getByOffset("x_offset + 1u")}), vec4<${Ie}>(${Ne.getByOffset("w_offset")}, ${Ne.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:v===1&&(be+=`
          dotProd = dotProd + dot(vec4<${Ie}>(${Xe.getByOffset("x_offset")}, ${Xe.getByOffset("x_offset + 1u")}, ${Xe.getByOffset("x_offset + 2u")}, ${Xe.getByOffset("x_offset + 3u")}), vec4<${Ie}>(${Ne.getByOffset("w_offset")}, ${Ne.getByOffset("w_offset + 1u")}, ${Ne.getByOffset("w_offset + 2u")}, ${Ne.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(be+=`
                  let xValue = ${h?Xe.getByOffset(`${Xe.indicesToOffset(`${Xe.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${v}`):Xe.get("batch","inputChannel","idyR","idyC")};
        `,v===1)be+=`
          let w_offset = ${Ne.indicesToOffset(`${Ne.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${Ne.getByOffset(`w_offset / ${V}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let Ye=0;Ye<v;Ye++)be+=`
            let wValue${Ye} = ${Ne.getByOffset(`${Ne.indicesToOffset(`${Ne.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${Ye}, wOutChannel)`)} / ${V}`)};
            dotProd = dotProd + xValue[${Ye}] * wValue${Ye};`;return be},ue=()=>{if(S===0)return"";if(!M)throw new Error(`packInputAs4 ${M} is not true.`);let be="";if(v===1){be+="dotProd = dotProd";for(let Ye=0;Ye<S;Ye++)be+=`
            + ${Xe.getByOffset(`x_offset + ${Ye}`)} * ${Ne.getByOffset(`w_offset + ${Ye}`)}`;be+=";"}else if(v===2){if(S!==2)throw new Error(`Invalid inputChannelsRemainder ${S}.`);be+=`
          let xValue = ${Xe.getByOffset("x_offset")};
          let wValue = ${Ne.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return be},ie=`
            let outputIndices = ${xe.offsetToIndices(`global_idx * ${N}`)};
            let batch = ${xe.indicesGet("outputIndices",0)};
            let d1 = ${xe.indicesGet("outputIndices",Ee)};
            let r = ${xe.indicesGet("outputIndices",ge)};
            let c = ${xe.indicesGet("outputIndices",ke)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${xe.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${Ie}(dyRCorner) + ${Ie}(wR)) / ${Ie}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${Ie}(uniforms.Dy_shape[${ge}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${Ie}(dyCCorner) + ${Ie}(wC)) / ${Ie}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${Ie}(uniforms.Dy_shape[${ke}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${M?`
                var x_offset = ${Xe.indicesToOffset(`${Xe.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${v};
                var w_offset = ${Ne.indicesToOffset(`${Ne.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${V};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${M?4:v}) {
                  ${ye()}
                  inputChannel = inputChannel + ${M?4:v};
                }
                ${ue()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${u?` + bias[d1 / ${N}]`:""};
            ${xe.setByOffset("global_idx","value")};
          `;return`
    ${D.registerUniforms(j).declareVariables(...At,xe)}
      ${D.mainStart()}
      ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${ie}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${o.cacheKey};${v}${V}${N}${M}${S}`,inputDependencies:Q},getRunData:()=>({dispatchGroup:{x:O[0],y:O[1],z:O[2]},outputs:[{dims:a?a(p):p,dataType:i[0].dataType}],programUniforms:P}),getShaderSource:J}}}),Yw,Kw,qw,vp,Xw,Zw,xp,Jw,$w,bv=xr(()=>{mv(),Od(),Wc(),Yw=(i,o,a,u,p,h)=>(i-1)*o+a+(u-1)*p+1-h,Kw=(i,o,a,u,p)=>{let h=Math.floor(i/2);o==="SAME_UPPER"?(a[u]=h,a[p]=i-h):o==="SAME_LOWER"&&(a[u]=i-h,a[p]=h)},qw=(i,o,a,u,p,h,C,y,k,_)=>{let v=i.length-2,M=_.length===0;k.length<v&&k.push(...Array(v-k.length).fill(0));let B=i[0],S=o[y?3:1]*p;for(let N=0,V=i.length-v-(y?1:0);N<v;++N,++V){let Z=i[V],O=M?Z*C[N]:_[N],Q=Yw(Z,C[N],h[N],o[V],a[N],O);Kw(Q,u,h,N,N+v),M&&_.push(C[N]*(Z-1)+k[N]+(o[V]-1)*a[N]+1-h[N]-h[N+v])}_.splice(0,0,B),_.splice(y?3:1,0,S)},vp=(i,o)=>{let a=i.kernelShape.slice();if(i.kernelShape.length===0||i.kernelShape.reduce((M,B)=>M*B,1)===0){a.length=0;for(let M=2;M<o[1].dims.length;++M)a.push(o[1].dims[M])}let u=i.format==="NHWC";a.splice(0,0,o[1].dims[0]),a.splice(u?3:1,0,o[1].dims[1]);let p=i.pads.slice(),h=i.outputShape.slice(),C=i.outputPadding.slice(),y=o[0].dims,k=i.dilations.slice();if(k.reduce((M,B)=>M+B,0)===0){let M=o[0].dims.length-2;k=new Array(M).fill(1)}let _=i.strides.slice();if(_.reduce((M,B)=>M+B,0)===0){let M=o[0].dims.length-2;_=new Array(M).fill(1)}qw(y,a,k,i.autoPad,i.group,p,_,u,C,h);let v=Object.assign({},i);return Object.assign(v,{kernelShape:a,pads:p,outputPadding:C,outputShape:h,dilations:k,strides:_}),v},Xw=i=>{let o=dp(i),a=i.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof i.autoPad>"u"?0:i.autoPad],p=i.dilations,h=i.group,C=i.kernelShape,y=i.pads,k=i.strides,_=i.wIsConst(),v=i.outputPadding,M=i.outputShape;return{autoPad:u,format:a,dilations:p,group:h,kernelShape:C,outputPadding:v,outputShape:M,pads:y,strides:k,wIsConst:_,...o,cacheKey:`${i.format};${o.activation};`}},Zw=(i,o)=>{if(!i||i.length!==2&&i.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(i[0].dims.length!==4&&i[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(i[0].dims.length!==i[1].dims.length)throw new Error("filter does not have same dimension as input");let a=i[0].dims[o.format==="NHWC"?i[0].dims.length-1:1],u=i[1].dims[0];if(a!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let p=i[1].dims[1]*o.group;if(i.length===3&&(i[2].dims.length!==1||i[2].dims[0]!==p))throw new Error("invalid bias");let h=i[0].dims.length-2;if(o.dilations.reduce((C,y)=>C+y,0)>0&&o.dilations.length!==h)throw new Error(`dilations should be ${h}D`);if(o.strides.reduce((C,y)=>C+y,0)>0&&o.strides.length!==h)throw new Error(`strides should be ${h}D`);if(o.pads.reduce((C,y)=>C+y,0)>0&&o.pads.length!==h*2)throw new Error(`pads should be ${h*2}D`);if(o.outputPadding.length!==h&&o.outputPadding.length!==0)throw new Error(`output_padding should be ${h}D`);if(o.kernelShape.reduce((C,y)=>C+y,0)>0&&o.kernelShape.length!==0&&o.kernelShape.length!==i[1].dims.length-2)throw new Error("invalid kernel shape");if(o.outputShape.length!==0&&o.outputShape.length!==i[0].dims.length-2)throw new Error("invalid output shape")},xp=(i,o,a,u)=>{let p=i.kernelCustomData.wT??i.compute(il(o[1],[2,3,0,1]),{inputs:[1],outputs:[a.wIsConst?-2:-1]})[0];a.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=p);let h=[o[0],p];o.length===3&&h.push(o[2]),i.compute(Hw(h,a,u),{inputs:h})},Jw=(i,o)=>{let a=o.format==="NHWC",u=[i.inputs[0].reshape(a?[i.inputs[0].dims[0],1,i.inputs[0].dims[1],i.inputs[0].dims[2]]:[i.inputs[0].dims[0],i.inputs[0].dims[1],1,i.inputs[0].dims[2]]),i.inputs[1].reshape([i.inputs[1].dims[0],i.inputs[1].dims[1],1,i.inputs[1].dims[2]])];i.inputs.length===3&&u.push(i.inputs[2]);let p=o.kernelShape;(p.length===0||p[0]===0)&&(p=[i.inputs[1].dims[2]]);let h=o.dilations;(h.length===0||h[0]===0)&&(h=[1]);let C=o.strides;(C.length===0||C[0]===0)&&(C=[1]);let y=o.pads;y.length===0&&(y=[0,0]),y=[0,y[0],0,y[1]],C=[1].concat(C),h=[1].concat(h),p=[1].concat(p);let k=o.outputPadding;k=[0].concat(k);let _=vp({...o,pads:y,strides:C,dilations:h,kernelShape:p,outputPadding:k},u);xp(i,u,_,v=>a?[v[0],v[2],v[3]]:[v[0],v[1],v[3]])},$w=(i,o)=>{if(Zw(i.inputs,o),i.inputs[0].dims.length===3)Jw(i,o);else{let a=vp(o,i.inputs);xp(i,i.inputs,a)}}}),e3,t3,r3,Cv=xr(()=>{Qs(),Js(),Mi(),Aa(),e3=(i,o,a,u)=>{let p=ar.size(o),h=o.length,C=ur("input",i,h),y=us("output",i,h),k=a.dataType===6?a.getInt32Array()[0]:Number(a.getBigInt64Array()[0]),_=ar.normalizeAxis(k,h),v=M=>{let B=` i32(${C.indicesGet("inputIndices","uniforms.axis")}) `,S=ms("uniforms.input_shape","uniforms.axis",h),N=u.reverse?B+(u.exclusive?" + 1":""):"0",V=u.reverse?S:B+(u.exclusive?"":" + 1");return`
                ${M.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(C,y)}
                ${M.mainStart()}
                  ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${y.offsetToIndices("global_idx")};
                  var sum = ${y.type.value}(0);
                  let first : i32 = ${N};
                  let last : i32 = ${V};
                  for (var i : i32 = first; i < last; i++) {
                    ${C.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${C.getByIndices("inputIndices")};
                  }
                  ${y.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:u.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:12,data:_},...bs(o,o)]}),getShaderSource:v}},t3=(i,o)=>{let a=i.inputs[0].dims,u=i.inputs[0].dataType,p=i.inputs[1];i.compute(e3(u,a,p,o),{inputs:[0]})},r3=i=>{let o=i.exclusive===1,a=i.reverse===1;return un({exclusive:o,reverse:a})}}),s3,a3,n3,i3,o3,wv=xr(()=>{Qs(),Js(),Mi(),Aa(),s3=i=>{if(!i||i.length!==1)throw new Error("DepthToSpace requires 1 input.");if(i[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},a3=(i,o,a,u)=>{let p=[];p.push(`fn perm(i: ${u.type.indices}) -> ${a.type.indices} {
    var a: ${a.type.indices};`);for(let h=0;h<o;++h)p.push(a.indicesSet("a",i[h],`i[${h}]`));return p.push("return a;}"),p.join(`
`)},n3=(i,o)=>{let a,u,p,h,C,y,k=o.format==="NHWC",_=o.blocksize,v=o.mode==="DCR";k?([a,u,p,h]=i.dims,C=v?[a,u,p,_,_,h/_**2]:[a,u,p,h/_**2,_,_],y=v?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([a,u,p,h]=[i.dims[0],i.dims[2],i.dims[3],i.dims[1]],C=v?[a,_,_,h/_**2,u,p]:[a,h/_**2,_,_,u,p],y=v?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let M=i.reshape(C),B=M.dims.length,S=i.dataType,N=ur("a",S,B),V=us("output",S,B),Z=O=>`
  ${O.registerUniform("output_size","u32").declareVariables(N,V)}

  ${a3(y,B,N,V)}

  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${V.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${V.setByOffset("global_idx",N.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${i.dims};${o.blocksize};${o.mode}`,inputDependencies:["rank"]},getRunData:O=>{let Q=k?[a,u*_,p*_,h/_**2]:[a,h/_**2,u*_,p*_],q=ar.size(Q),f=M.dims,I=ar.sortBasedOnPerm(f,y);return{outputs:[{dims:Q,dataType:O[0].dataType}],dispatchGroup:{x:Math.ceil(q/64)},programUniforms:[{type:12,data:q},...bs(f,I)]}},getShaderSource:Z}},i3=(i,o)=>{s3(i.inputs),i.compute(n3(i.inputs[0],o))},o3=i=>un({blocksize:i.blocksize,mode:i.mode,format:i.format})}),z2,r2,Mp,A3,l3,c3,u3,Ep,d3,f3,g3,Iv=xr(()=>{Qs(),Js(),Mi(),Aa(),z2="[a-zA-Z]|\\.\\.\\.",r2="("+z2+")+",Mp="^"+r2+"$",A3="("+r2+",)*"+r2,l3="^"+A3+"$",c3=class{constructor(i=-1){this.symbolToIndices=new Map,this.inputIndex=i}addSymbol(i,o){let a=this.symbolToIndices.get(i);a===void 0?a=[o]:a.push(o),this.symbolToIndices.set(i,a)}},u3=class{constructor(i,o){var p;this.equation=o,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[a,u]=o.includes("->")?o.split("->",2):[o,""];if(!a.match(RegExp(l3)))throw new Error("Invalid LHS term");if(a.split(",").forEach((h,C)=>{let y=i[C].dims.slice();if(!h.match(RegExp(Mp)))throw new Error("Invalid LHS term");let k=this.processTerm(h,!0,y,C);this.lhs.push(k)}),u==="")u+=[...this.symbolToInfo.entries()].filter(([h,C])=>C.count===1||h==="...").map(([h])=>h).join("");else if(!u.match(RegExp(r2)))throw new Error("Invalid RHS");(p=u.match(RegExp(z2,"g")))==null||p.forEach(h=>{if(h==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let C=this.symbolToInfo.get(h);if(C===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(C.dimValue)}}),this.rhs=this.processTerm(u,!1,this.outputDims)}addSymbol(i,o,a){let u=this.symbolToInfo.get(i);if(u!==void 0){if(u.dimValue!==o&&u.count!==1)throw new Error("Dimension mismatch");u.count++,u.inputIndices.push(a)}else u={count:1,dimValue:o,inputIndices:[a]};this.symbolToInfo.set(i,u)}processTerm(i,o,a,u=-1){let p=a.length,h=!1,C=[],y=0;if(!i.match(RegExp(Mp))&&!o&&i!=="")throw new Error("Invalid LHS term");let k=i.match(RegExp(z2,"g")),_=new c3(u);return k==null||k.forEach((v,M)=>{if(v==="..."){if(h)throw new Error("Only one ellipsis is allowed per input term");h=!0;let B=p-k.length+1;if(B<0)throw new Error("Ellipsis out of bounds");if(C=a.slice(y,y+B),this.hasEllipsis){if(this.ellipsisDims.length!==C.length||this.ellipsisDims.toString()!==C.toString())throw new Error("Ellipsis dimensions mismatch")}else if(o)this.hasEllipsis=!0,this.ellipsisDims=C;else throw new Error("Ellipsis must be specified in the LHS");for(let S=0;S<C.length;S++){let N=String.fromCharCode(48+S);_.addSymbol(N,M+S),this.addSymbol(N,a[y++],u)}}else _.addSymbol(v,M+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(v,a[y++],u)}),_}},Ep=i=>i+"_max",d3=(i,o,a,u)=>{let p=i.map(_=>_.length).map((_,v)=>ur(`input${v}`,o,_)),h=ar.size(u),C=us("output",o,u.length),y=[...a.symbolToInfo.keys()].filter(_=>!a.rhs.symbolToIndices.has(_)),k=_=>{let v=[],M="var prod = 1.0;",B="var sum = 0.0;",S="sum += prod;",N=[],V=[],Z=[],O=[],Q=a.symbolToInfo.size===a.rhs.symbolToIndices.size;a.symbolToInfo.forEach((f,I)=>{var e;if(a.rhs.symbolToIndices.has(I)){let c=(e=a.rhs.symbolToIndices.get(I))==null?void 0:e[0];c!==void 0&&a.lhs.forEach((P,J)=>{if(f.inputIndices.includes(J)){let D=P.symbolToIndices.get(I);if(D===void 0)throw new Error("Invalid symbol error");D.forEach(j=>{v.push(`${p[J].indicesSet(`input${J}Indices`,j,C.indicesGet("outputIndices",c))}`)})}})}else a.lhs.forEach((c,P)=>{if(f.inputIndices.includes(P)){let J=c.symbolToIndices.get(I);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(D=>{N.push(`${p[P].indicesSet(`input${P}Indices`,D,`${I}`)}`)}),O.push(`prod *= ${p[P].getByIndices(`input${P}Indices`)};`)}}),V.push(`for(var ${I}: u32 = 0; ${I} < uniforms.${Ep(I)}; ${I}++) {`),Z.push("}")});let q=Q?[...v,`let sum = ${p.map((f,I)=>f.getByIndices(`input${I}Indices`)).join(" * ")};`]:[...v,B,...V,...N,M,...O,S,...Z];return`
            ${_.registerUniforms(y.map(f=>({name:`${Ep(f)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...p,C)}

            ${_.mainStart()}
            ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${C.offsetToIndices("global_idx")};
            ${p.map((f,I)=>`var input${I}Indices: ${p[I].type.indices};`).join(`
`)}
            ${q.join(`
`)};
            ${C.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:a.equation,inputDependencies:i.map(()=>"rank")},getRunData:()=>{let _=y.filter(M=>a.symbolToInfo.has(M)).map(M=>{var B;return{type:12,data:((B=a.symbolToInfo.get(M))==null?void 0:B.dimValue)||0}});_.push({type:12,data:h});let v=i.map((M,B)=>[...bs(M)]).reduce((M,B)=>M.concat(B),_);return v.push(...bs(u)),{outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:v}},getShaderSource:k}},f3=(i,o)=>{let a=new u3(i.inputs,o.equation),u=a.outputDims,p=i.inputs.map((h,C)=>h.dims);i.compute(d3(p,i.inputs[0].dataType,a,u))},g3=i=>{let o=i.equation.replace(/\s+/g,"");return un({equation:o})}}),p3,Bp,h3,m3,b3,yv=xr(()=>{Qs(),Js(),Aa(),p3=i=>{if(!i||i.length!==2)throw new Error("Expand requires 2 input.");let o=i[0].dims,a=Array.from(i[1].getBigInt64Array(),Number),u=a.length<o.length?0:a.length-o.length,p=o.length<a.length?0:o.length-a.length;for(;u<a.length&&p<o.length;++u,++p)if(a[u]!==o[p]&&a[u]!==1&&o[p]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Bp=(i,o)=>{let a=i.length-o.length,u=[];for(let p=0;p<a;++p)u.push(i[p]);for(let p=0;p<o.length;++p)u.push(o[p]===1?i[p+a]:o[p]);return u},h3=(i,o)=>i.length>o.length?Bp(i,o):Bp(o,i),m3=i=>{let o=i[0].dims,a=Array.from(i[1].getBigInt64Array(),Number),u=h3(o,a),p=i[0].dataType,h=p===9||ar.size(o)===1,C=p===9||o.length>0&&o[o.length-1]%4===0?4:1,y=h||u.length>0&&u[u.length-1]%4===0?4:1,k=Math.ceil(ar.size(u)/y),_=M=>{let B=ur("input",p,o.length,C),S=us("output",p,u.length,y),N;if(p===9){let V=(Z,O,Q="")=>`
          let outputIndices${O} = ${S.offsetToIndices(`outputOffset + ${O}u`)};
          let offset${O} = ${B.broadcastedIndicesToOffset(`outputIndices${O}`,S)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${Z}[${O}] = ${Q}(${B.getByOffset(`index${O}`)}[component${O}]);
        `;N=`
        let outputOffset = global_idx * ${y};
        var data = vec4<u32>(0);
        ${V("data",0,"u32")}
        ${V("data",1,"u32")}
        ${V("data",2,"u32")}
        ${V("data",3,"u32")}
        ${S.setByOffset("global_idx","data")}
      }`}else N=`
        let outputIndices = ${S.offsetToIndices(`global_idx * ${y}`)};
        let inputOffset = ${B.broadcastedIndicesToOffset("outputIndices",S)};
        let data = ${S.type.value}(${B.getByOffset(`inputOffset / ${C}`)});
        ${S.setByOffset("global_idx","data")}
      }`;return`
    ${M.registerUniform("vec_size","u32").declareVariables(B,S)}
    ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${N}`},v=[{type:12,data:k},...bs(o,u)];return{name:"Expand",shaderCache:{hint:`${u.length};${C}${y}`,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:[{dims:u,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:v})}},b3=i=>{p3(i.inputs),i.compute(m3(i.inputs),{inputs:[0]})}}),C3,w3,kv=xr(()=>{Qs(),Js(),Aa(),up(),C3=i=>{let o=i[0].dataType,a=ar.size(i[0].dims),u=ar.size(i[1].dims),p=u%4===0,h=C=>{let y=ur("x",o,[1],4),k=ur("bias",o,[1],4),_=us("y",o,[1],4),v=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],M=S=>`
      let bias${S}_offset: u32 = (global_idx * 4 + ${S}) % uniforms.bias_size;
      let bias${S} = ${k.getByOffset(`bias${S}_offset / 4`)}[bias${S}_offset % 4];`,B=p?`
      let bias = ${k.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${M(0)}${M(1)}${M(2)}${M(3)}
      let bias = ${y.type.value}(bias0, bias1, bias2, bias3);`;return`${C.registerUniforms(v).declareVariables(y,k,_)}

    ${lp(Lo(o))}

    ${C.mainStart(Tf)}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${y.getByOffset("global_idx")};
      ${B}
      let x_in = x + bias;
      ${_.setByOffset("global_idx",cp("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${p}`,inputDependencies:["type","type"]},getShaderSource:h,getRunData:C=>({outputs:[{dims:C[0].dims,dataType:C[0].dataType}],programUniforms:[{type:12,data:Math.ceil(a/4)},{type:12,data:u}],dispatchGroup:{x:Math.ceil(a/Tf/4)}})}},w3=i=>{i.inputs.length<2||ar.size(i.inputs[1].dims)===0?ew(i):i.compute(C3(i.inputs))}}),I3,y3,k3,_3,_v=xr(()=>{Qs(),Js(),Mi(),Aa(),I3=i=>{if(!i||i.length!==2)throw new Error("Gather requires 2 inputs.")},y3=(i,o)=>{let a=i[0].dims,u=i[1].dims,p=a.length,h=ar.normalizeAxis(o.axis,p),C=a.slice(0);C.splice(h,1,...u);let y=a[h],k=i[0].dataType===9?4:1,_=Math.ceil(ar.size(C)/k),v=[{type:12,data:_},{type:6,data:y},{type:12,data:h},...bs(i[0].dims,i[1].dims,C)],M=B=>{let S=ur("data",i[0].dataType,i[0].dims.length,k),N=ur("inputIndices",i[1].dataType,i[1].dims.length),V=us("output",i[0].dataType,C.length,k),Z=Q=>{let q=u.length,f=`var indicesIndices${Q}  = ${N.type.indices}(0);`;for(let I=0;I<q;I++)f+=`${q>1?`indicesIndices${Q}[${I}]`:`indicesIndices${Q}`} = ${C.length>1?`outputIndices${Q}[uniforms.axis + ${I}]`:`outputIndices${Q}`};`;f+=`
          var idx${Q} = ${N.getByIndices(`indicesIndices${Q}`)};
          if (idx${Q} < 0) {
            idx${Q} = idx${Q} + uniforms.axisDimLimit;
          }
          var dataIndices${Q} : ${S.type.indices};
        `;for(let I=0,e=0;I<p;I++)I===h?(f+=`${p>1?`dataIndices${Q}[${I}]`:`dataIndices${Q}`} = u32(idx${Q});`,e+=q):(f+=`${p>1?`dataIndices${Q}[${I}]`:`dataIndices${Q}`} = ${C.length>1?`outputIndices${Q}[${e}]`:`outputIndices${Q}`};`,e++);return f},O;if(i[0].dataType===9){let Q=(q,f,I="")=>`
          let outputIndices${f} = ${V.offsetToIndices(`outputOffset + ${f}u`)};
          ${Z(f)};
          let offset${f} = ${S.indicesToOffset(`dataIndices${f}`)};
          let index${f} = offset${f} / 4u;
          let component${f} = offset${f} % 4u;
          ${q}[${f}] = ${I}(${S.getByOffset(`index${f}`)}[component${f}]);
        `;O=`
        let outputOffset = global_idx * ${k};
        var value = vec4<u32>(0);
        ${Q("value",0,"u32")}
        ${Q("value",1,"u32")}
        ${Q("value",2,"u32")}
        ${Q("value",3,"u32")}
        ${V.setByOffset("global_idx","value")}
      `}else O=`
      let outputIndices = ${V.offsetToIndices("global_idx")};
      ${Z("")};
      let value = ${S.getByIndices("dataIndices")};
      ${V.setByOffset("global_idx","value")};
      `;return`
      ${B.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(S,N,V)}
      ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${O}
      }`};return{name:"Gather",shaderCache:{hint:o.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:v}),getShaderSource:M}},k3=i=>un({axis:i.axis}),_3=(i,o)=>{let a=i.inputs;I3(a),i.compute(y3(i.inputs,o))}}),v3,x3,M3,vv=xr(()=>{Qs(),Js(),Aa(),v3=(i,o,a,u,p,h,C,y,k)=>{let _=[{type:12,data:h},{type:12,data:u},{type:12,data:p},{type:12,data:a},{type:12,data:C},{type:12,data:y},{type:12,data:k}],v=[h];_.push(...bs(o.dims,v));let M=B=>{let S=ur("indices_data",o.dataType,o.dims.length),N=us("input_slice_offsets_data",12,1,1),V=[S,N],Z=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:p.length},{name:"sizes_from_slice_dims_data",type:"u32",length:a.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${B.registerUniforms(Z).declareVariables(...V)}
  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${p.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${a.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return i.compute({name:"computeSliceOffsets",shaderCache:{hint:`${p.length}_${a.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:v,dataType:i.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:_}),getShaderSource:M},{inputs:[o],outputs:[-1]})[0]},x3=(i,o)=>{let a=i.inputs,u=a[0].dims,p=a[0].dataType,h=a[1].dims,C=h[h.length-1],y=ar.sizeToDimension(h,h.length-1),k=ar.sizeFromDimension(u,o.batchDims+C),_=ar.sizeToDimension(u,o.batchDims),v=ar.sizeFromDimension(u,o.batchDims),M=y/_,B=new Array(C),S=k;for(let f=0;f<C;++f)B[C-1-f]=S,S*=u[o.batchDims+C-1-f];let N=v3(i,a[1],B,o.batchDims,u,y,M,v,C),V=o.batchDims+C;if(V>u.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let Z=h.slice(0,-1).concat(u.slice(V)),O=ar.size(Z),Q=[{type:12,data:O},{type:12,data:k},...bs(a[0].dims,N.dims,Z)],q=f=>{let I=ur("data",a[0].dataType,a[0].dims.length),e=ur("slice_offsets",12,N.dims.length),c=us("output",a[0].dataType,Z.length);return`
          ${f.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(I,e,c)}
            ${f.mainStart()}
            ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};i.compute({name:"GatherND",shaderCache:{hint:o.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:Z,dataType:p}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:Q}),getShaderSource:q},{inputs:[a[0],N]})},M3=i=>({batchDims:i.batch_dims,cacheKey:""})}),E3,B3,T3,P3,xv=xr(()=>{Qs(),Js(),Mi(),Aa(),E3=(i,o)=>{if(i.length<3||i.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let a=ar.normalizeAxis(o.quantizeAxis,i[0].dims.length),u=o.blockSize,p=i[0],h=i[2],C=i.length===4?i[3]:void 0;if(h.dims.length!==p.dims.length||!p.dims.map((y,k)=>k===a?Math.ceil(y/u)===h.dims[k]:y===h.dims[k]).reduce((y,k)=>y&&k,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(C){if(C.dataType!==p.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(C.dims.length!==h.dims.length||!C.dims.map((y,k)=>y===h.dims[k]).reduce((y,k)=>y&&k,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},B3=(i,o)=>{let a=i[0].dims,u=i[1].dims,p=a.length,h=ar.normalizeAxis(o.gatherAxis,p),C=ar.normalizeAxis(o.quantizeAxis,p),y=a.slice(0);y.splice(h,1,...u);let k=ar.size(y),_=i[2].dataType,v=i[0].dataType===22,M=[{type:12,data:k},{type:12,data:C},{type:12,data:h},{type:12,data:o.blockSize},...bs(...i.map((S,N)=>S.dims),y)],B=S=>{let N=ur("data",i[0].dataType,i[0].dims.length),V=ur("inputIndices",i[1].dataType,i[1].dims.length),Z=ur("scales",i[2].dataType,i[2].dims.length),O=i.length>3?ur("zeroPoint",i[3].dataType,i[3].dims.length):void 0,Q=us("output",_,y.length),q=[N,V,Z];O&&q.push(O);let f=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${S.registerUniforms(f).declareVariables(...q,Q)}
        ${S.mainStart()}
        let output_indices = ${Q.offsetToIndices("global_idx")};
        var indices_indices = ${V.type.indices}(0);
        ${u.length>1?`
          for (var i: u32 = 0; i < ${u.length}; i++) {
            let index = ${Q.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${V.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${Q.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${N.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${Q.indicesGet("output_indices","i")};
          ${N.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${V.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${a[h]};
        }
        ${N.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${y.length}; i++) {
          let index = ${Q.indicesGet("output_indices",`i + ${u.length} - 1`)};
          ${N.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${N.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${N.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${v?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${Z.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${Z.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${Z.getByIndices("scale_indices")};
        ${O?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${O.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${O.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${v?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Lo(_)}(quantized_data - zero_point) * scale;
        ${Q.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${o.cacheKey};${i.filter((S,N)=>N!==1).map(S=>S.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:i.length},(S,N)=>"rank")},getRunData:()=>({outputs:[{dims:y,dataType:_}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:M}),getShaderSource:B}},T3=(i,o)=>{let a=i.inputs;E3(a,o),i.compute(B3(i.inputs,o))},P3=i=>un({blockSize:i.blockSize,gatherAxis:i.gatherAxis,quantizeAxis:i.quantizeAxis})}),D3,S3,G3,F3,Mv=xr(()=>{Qs(),Js(),Mi(),Aa(),D3=i=>{if(!i||i.length!==2)throw new Error("GatherElements requires 2 inputs.");if(i[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(i[0].dims.length!==i[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},S3=(i,o)=>{let a=i[0].dims,u=i[0].dataType,p=a.length,h=i[1].dims,C=i[1].dataType,y=ar.normalizeAxis(o.axis,p),k=a[y],_=h.slice(0),v=ar.size(_),M=ur("input",u,p),B=ur("indicesInput",C,h.length),S=us("output",u,_.length),N=[{type:12,data:v},{type:6,data:k},{type:12,data:y}];return N.push(...bs(a,h,_)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:N}),getShaderSource:V=>`
      ${V.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(M,B,S)}
      ${V.mainStart()}
      ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${S.offsetToIndices("global_idx")};

      var idx = ${B.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${M.type.indices}(outputIndices);
      ${M.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${M.getByIndices("inputIndices")};

      ${S.setByOffset("global_idx","value")};
  }`}},G3=i=>un({axis:i.axis}),F3=(i,o)=>{let a=i.inputs;D3(a),i.compute(S3(i.inputs,o))}}),z3,O3,Q3,N3,Ev=xr(()=>{Qs(),Js(),Aa(),z3=i=>{if(!i)throw new Error("Input is missing");if(i.length<2||i.length>3)throw new Error("Invaid input number.");if(i.length===3&&i[2].dims.length>2)throw new Error("Invalid input shape of C");if(i[0].dataType!==i[1].dataType||i.length===3&&i[0].dataType!==i[2].dataType)throw new Error("Input types are mismatched")},O3=(i,o)=>{let a=i[0].dims.slice(),u=i[1].dims.slice(),[p,h,C]=ib.getShapeOfGemmResult(a,o.transA,u,o.transB,i.length===3?i[2].dims:void 0),y=[p,h];if(!y)throw new Error("Can't use gemm on the given tensors");let k=16,_=Math.ceil(h/k),v=Math.ceil(p/k),M=!0,B=ar.size(y),S=[{type:12,data:M?_:B},{type:12,data:p},{type:12,data:h},{type:12,data:C},{type:1,data:o.alpha},{type:1,data:o.beta}],N=["type","type"];i.length===3&&(S.push(...bs(i[2].dims)),N.push("rank")),S.push(...bs(y));let V=O=>{let Q="";o.transA&&o.transB?Q="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":o.transA&&!o.transB?Q="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!o.transA&&o.transB?Q="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!o.transA&&!o.transB&&(Q="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let q=o.alpha===1?"":"value *= uniforms.alpha;",f=ur("a",i[0].dataType,i[0].dims),I=ur("b",i[1].dataType,i[1].dims),e=f.type.value,c=null,P=[f,I];i.length===3&&(c=ur("c",i[2].dataType,i[2].dims.length),P.push(c));let J=us("output",i[0].dataType,y.length);P.push(J);let D=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${O.registerUniforms(D).declareVariables(...P)}

  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${e}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${Q}
    }

    ${q}
    ${c!=null?`let cOffset = ${c.broadcastedIndicesToOffset("vec2(m, n)",J)}; value += ${e}(uniforms.beta) * ${c.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},Z=O=>{let Q=ur("a",i[0].dataType,i[0].dims),q=ur("b",i[1].dataType,i[1].dims),f=null,I=[Q,q];i.length===3&&(f=ur("c",i[2].dataType,i[2].dims.length),I.push(f));let e=us("output",i[0].dataType,y.length);I.push(e);let c=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],P="",J="";o.transA&&o.transB?(J=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Q.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${q.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):o.transA&&!o.transB?(J=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Q.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${q.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!o.transA&&o.transB?(J=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Q.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${q.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!o.transA&&!o.transB&&(J=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Q.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${q.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let D=o.alpha===1?"":"value *= uniforms.alpha;";return`
  ${O.registerUniforms(c).declareVariables(...I)}
  var<workgroup> tile_a: array<array<${Q.type.storage}, ${k}>, ${k}>;
  var<workgroup> tile_b: array<array<${q.type.storage}, ${k}>, ${k}>;
  ${O.mainStart([k,k,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${k};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${k};
    let num_tiles = (uniforms.K - 1) / ${k} + 1;
    var k_start = 0u;
    var value = ${e.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${J}
      k_start = k_start + ${k};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${k}; k++) {
        ${P}
      }
      workgroupBarrier();
    }

    ${D}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${f!=null?`let cOffset = ${f.broadcastedIndicesToOffset("vec2(m, n)",e)}; value += ${e.type.value}(uniforms.beta) * ${f.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return M?{name:"GemmShared",shaderCache:{hint:`${o.cacheKey}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:y,dataType:i[0].dataType}],dispatchGroup:{x:_*v},programUniforms:S}),getShaderSource:Z}:{name:"Gemm",shaderCache:{hint:`${o.cacheKey}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:y,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:S}),getShaderSource:V}},Q3=i=>{let o=i.transA,a=i.transB,u=i.alpha,p=i.beta;return{transA:o,transB:a,alpha:u,beta:p,cacheKey:`${i.transA};${i.transB};${i.alpha===1}`}},N3=(i,o)=>{z3(i.inputs),i.compute(O3(i.inputs,o))}}),s0,B0,Qd,Nd,L3,R3,j3,V3,W3,U3,H3,Y3,K3,q3,Bv=xr(()=>{Qs(),Js(),Mi(),Aa(),[s0,B0,Qd,Nd]=[0,1,2,3],L3=i=>{if(i[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(i[0].dims.length!==i[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(i[0].dims.length-2!==i[1].dims[i[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${i[0].dims.length-2}`);if(i[0].dims[0]!==i[1].dims[0])throw new Error("grid batch size must match input batch size")},R3=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,j3=i=>`
  fn gs_bicubic_interpolate(p: mat4x4<${i}>, x: f32, y: f32) -> ${i} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${i}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,V3=i=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${i.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,W3=i=>`
  ${i.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,U3=(i,o,a)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${o} {
     var pixel = ${o}(0);
     var indices = vec4<u32>(0);
     indices[${s0}] = batch;
     indices[${B0}] = channel;`+(()=>{switch(a.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Qd}] = u32(r);
            indices[${Nd}] = u32(c);
          }
        `;case"border":return`
          indices[${Qd}] = u32(clamp(r, 0, H - 1));
          indices[${Nd}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Qd}] = gs_reflect(r, border[1], border[3]);
          indices[${Nd}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${a.paddingMode} is not supported`)}})()+`
    return ${i.getByIndices("indices")};
  }
`,H3=(i,o,a)=>(()=>{switch(a.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${s0}], indices[${B0}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${s0}], indices[${B0}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${s0}], indices[${B0}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${s0}], indices[${B0}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${s0}], indices[${B0}], border);

          let dx2 = ${o}(f32(x2) - x);
          let dx1 = ${o}(x - f32(x1));
          let dy2 = ${o}(f32(y2) - y);
          let dy1 = ${o}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${o}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${s0}], indices[${B0}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${a.mode} is not supported`)}})()+`${i.setByOffset("global_idx","result")}`,Y3=(i,o)=>{let a=ur("x",i[0].dataType,i[0].dims.length),u=[i[1].dims[0],i[1].dims[1],i[1].dims[2]],p=ur("grid",i[1].dataType,u.length,2),h=[i[0].dims[0],i[0].dims[1],i[1].dims[1],i[1].dims[2]];o.format==="NHWC"&&(h=[i[0].dims[0],i[1].dims[1],i[1].dims[2],i[0].dims[3]],[s0,B0,Qd,Nd]=[0,3,1,2]);let C=us("output",i[0].dataType,h.length),y=a.type.value,k=ar.size(h),_=[{type:12,data:k},...bs(i[0].dims,u,h)],v=M=>`
  ${M.registerUniform("output_size","u32").declareVariables(a,p,C)}
  ${R3}
  ${j3(y)}
  ${V3(o)}
  ${W3(o)}
  ${U3(a,y,o)}

  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Qd}]);
      let W_in = i32(uniforms.x_shape[${Nd}]);

      ${o.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${C.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${s0}], indices[${Qd}], indices[${Nd}]);
      let nxy = ${p.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${H3(C,y,o)}
  }`;return{name:"GridSample",shaderCache:{hint:`${o.cacheKey}`,inputDependencies:["type","type"]},getRunData:M=>{let B=ar.size(h);return{outputs:[{dims:h,dataType:M[0].dataType}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:_}},getShaderSource:v}},K3=(i,o)=>{L3(i.inputs),i.compute(Y3(i.inputs,o))},q3=i=>un({alignCorners:i.align_corners,mode:i.mode,paddingMode:i.padding_mode,format:i.format})}),nA,X3,Z3,Tp,J3,s2,$3,eI=xr(()=>{Qs(),Js(),Mi(),Xg(),op(),Aa(),Wc(),nA=(i,o)=>i.length>o&&i[o].dims.length>0?i[o]:void 0,X3=(i,o)=>{let a=i[0],u=nA(i,1),p=nA(i,2),h=nA(i,3),C=nA(i,4),y=nA(i,5),k=nA(i,6),_=nA(i,7);if(a.dims.length!==3&&a.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let v=a.dims[0],M=a.dims[1],B=a.dims.length===3?a.dims[2]:o.numHeads*a.dims[4],S=M,N=0,V=0,Z=Math.floor(B/o.numHeads);if(k&&_&&ar.size(k.dims)&&ar.size(_.dims)){if(k.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(k.dims[0]!==v||k.dims[1]!==o.numHeads||k.dims[3]!==Z)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(_.dims[0]!==v||_.dims[1]!==o.numHeads||_.dims[3]!==Z)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(k.dims[2]!==_.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(_.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');N=k.dims[2],V=k.dims[2]}else if(k&&ar.size(k.dims)||_&&ar.size(_.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let O;if(u&&ar.size(u.dims)>0){if(a.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(u.dims.length<3||u.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(a.dims[0]!==u.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(u.dims.length===3){if(u.dims[2]!==a.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');O=2,S=u.dims[1]}else if(u.dims.length===5){if(u.dims[2]!==o.numHeads||u.dims[3]!==2||u.dims[4]!==Z)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(p)throw new Error('Expect "value" be none when "key" has packed kv format.');O=5,S=u.dims[1]}else{if(u.dims[1]!==o.numHeads||u.dims[3]!==Z)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');O=0,S=u.dims[2]}}else{if(a.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(a.dims[2]!==o.numHeads||a.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');O=3}if(h&&ar.size(h.dims)>0){if(h.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(u&&u.dims.length===5&&u.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Q=N+S,q=0;if(C&&ar.size(C.dims)>0){q=8;let c=C.dims;throw c.length===1?c[0]===v?q=1:c[0]===3*v+2&&(q=3):c.length===2&&c[0]===v&&c[1]===Q&&(q=5),q===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let f=!1,I=B;if(p&&ar.size(p.dims)>0){if(p.dims.length!==3&&p.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(a.dims[0]!==p.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(p.dims.length===3){if(S!==p.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');I=p.dims[2]}else{if(S!==p.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');I=p.dims[1]*p.dims[3],f=!0}}let e=!1;if(C&&ar.size(C.dims)>0)throw new Error("Key padding mask is not supported");if(y&&ar.size(y.dims)>0){if(y.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(y.dims[0]!==v||y.dims[1]!==o.numHeads||y.dims[2]!==M||y.dims[3]!==Q)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:v,sequenceLength:M,pastSequenceLength:N,kvSequenceLength:S,totalSequenceLength:Q,maxSequenceLength:V,inputHiddenSize:0,hiddenSize:B,vHiddenSize:I,headSize:Z,vHeadSize:Math.floor(I/o.numHeads),numHeads:o.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:o.maskFilterValue,maskType:q,scale:o.scale,broadcastResPosBias:e,passPastInKv:f,qkvFormat:O}},Z3=i=>un({...i}),Tp=un({perm:[0,2,1,3]}),J3=(i,o,a,u,p,h,C)=>{let y=[u,p,h],k=ar.size(y),_=[{type:12,data:k},{type:12,data:C},{type:12,data:h}],v=M=>{let B=us("qkv_with_bias",o.dataType,y),S=ur("qkv",o.dataType,y),N=ur("bias",a.dataType,y),V=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${M.registerUniforms(V).declareVariables(S,N,B)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return i.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:y,dataType:o.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:_}),getShaderSource:v},{inputs:[o,a],outputs:[-1]})[0]},s2=(i,o,a,u,p,h,C,y)=>{let k=h;if(C&&ar.size(C.dims)>0){if(u===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return k=J3(i,h,C,o,u,a*p,y),k=k.reshape([o,u,a,p]),a===1||u===1?k:i.compute(il(k,Tp.perm),{inputs:[k],outputs:[-1]})[0]}else return h.dims.length===3&&(k=h.reshape([o,u,a,p])),a===1||u===1?k:i.compute(il(k,Tp.perm),{inputs:[k],outputs:[-1]})[0]},$3=(i,o)=>{let a=X3(i.inputs,o),u=i.inputs[0],p=nA(i.inputs,1),h=nA(i.inputs,2),C=nA(i.inputs,3),y=nA(i.inputs,4),k=nA(i.inputs,5),_=nA(i.inputs,6),v=nA(i.inputs,7);if(u.dims.length===5)throw new Error("Packed QKV is not implemented");if((p==null?void 0:p.dims.length)===5)throw new Error("Packed KV is not implemented");let M=p&&h&&p.dims.length===4&&h.dims.length===4,B=s2(i,a.batchSize,a.numHeads,a.sequenceLength,a.headSize,u,C,0);if(M)return Jf(i,B,p,h,y,void 0,_,v,k,a);if(!p||!h)throw new Error("key and value must be provided");let S=s2(i,a.batchSize,a.numHeads,a.kvSequenceLength,a.headSize,p,C,a.hiddenSize),N=s2(i,a.batchSize,a.numHeads,a.kvSequenceLength,a.vHeadSize,h,C,2*a.hiddenSize);Jf(i,B,S,N,y,void 0,_,v,k,a)}}),tI,rI,sI,aI,Pp,nI,iI,oI=xr(()=>{Qs(),Js(),Mi(),Aa(),tI=i=>{if(!i||i.length<1)throw new Error("too few inputs")},rI=(i,o)=>{let a=[],u=o.numOutputs;return i[1].dims[0]>0&&(i[1].getBigInt64Array().forEach(p=>a.push(Number(p))),u=a.length),un({numOutputs:u,axis:o.axis,splitSizes:a})},sI=i=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${i}u; i += 1u ) {
    if (index < ${ms("uniforms.size_in_split_axis","i",i)}) {
        return i;
    }
    }
    return ${i}u;
}`,aI=i=>{let o=i.length,a=[];for(let u=0;u<o;++u){let p=i[u].setByIndices("indices","input[global_idx]");o===1?a.push(p):u===0?a.push(`if (output_number == ${u}u) { ${p} }`):u===o-1?a.push(`else { ${p} }`):a.push(`else if (output_number == ${u}) { ${p} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${i[0].type.indices}, global_idx: u32) {
        ${a.join(`
`)}
      }`},Pp=(i,o)=>{let a=i[0].dims,u=ar.size(a),p=i[0].dataType,h=ar.normalizeAxis(o.axis,a.length),C=new Array(o.numOutputs),y=ur("input",p,a.length),k=new Array(o.numOutputs),_=[],v=[],M=0,B=[{type:12,data:u}];for(let N=0;N<o.numOutputs;N++){M+=o.splitSizes[N],k[N]=M;let V=a.slice();V[h]=o.splitSizes[N],v.push(V),C[N]=us(`output${N}`,p,V.length),_.push({dims:v[N],dataType:i[0].dataType})}B.push({type:12,data:k},...bs(a,...v));let S=N=>`
  ${N.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",k.length).declareVariables(y,...C)}
  ${sI(k.length)}
  ${aI(C)}

  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${y.offsetToIndices("global_idx")};
    var index = ${y.indicesGet("indices",h)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ms("uniforms.size_in_split_axis","output_number - 1u",k.length)};
      ${y.indicesSet("indices",h,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:B})}},nI=(i,o)=>{tI(i.inputs);let a=i.inputs.length===1?o:rI(i.inputs,o);i.compute(Pp(i.inputs,a),{inputs:[0]})},iI=i=>{let o=i.axis,a=i.splitSizes,u=i.numOutputs<0?a.length:i.numOutputs;if(u!==a.length)throw new Error("numOutputs and splitSizes lengh must be equal");return un({axis:o,numOutputs:u,splitSizes:a})}}),AI,lI,Dp,cI,Tv=xr(()=>{Mi(),op(),eI(),oI(),Wc(),AI=(i,o)=>{if(o.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(o.doRotary&&i.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let a=i[0],u=i[1],p=i[2],h=i[3],C=i[4];if(o.localWindowSize!==-1)throw new Error("Local attention is not supported");if(o.softcap!==0)throw new Error("Softcap is not supported");if(o.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(o.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(a.dims.length!==3&&a.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let y=!1,k=a.dims[0],_=a.dims[1],v=a.dims.length===3?y?a.dims[2]/3:a.dims[2]:o.numHeads*a.dims[4],M=_,B=0,S=!u||u.dims.length===0,N=Math.floor(S?v/(o.numHeads+2*o.kvNumHeads):v/o.numHeads);S&&(v=N*o.numHeads);let V=h&&h.dims.length!==0,Z=C&&C.dims.length!==0;if(V&&h.dims.length===4&&h.dims[0]===k&&h.dims[1]!==o.kvNumHeads&&h.dims[2]===o.kvNumHeads&&h.dims[3]===N)throw new Error("BSNH pastKey/pastValue is not supported");if(V&&Z){if(h.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(C.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');B=h.dims[2]}else if(V||Z)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let O=1;if(u&&u.dims.length>0){if(a.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(u.dims.length<3||u.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(a.dims[0]!==u.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(u.dims.length===3){if(a.dims[2]%u.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');M=u.dims[1]}else if(u.dims.length===5){if(u.dims[2]!==o.numHeads||u.dims[3]!==2||u.dims[4]!==N)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(p)throw new Error('Expect "value" be none when "key" has packed kv format.');M=u.dims[1]}else{if(u.dims[1]!==o.numHeads||u.dims[3]!==N)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');M=u.dims[2]}}else{if(a.dims.length!==3&&a.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(a.dims.length===5&&(a.dims[2]!==o.numHeads||a.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');O=3}let Q=0,q=!1,f=o.kvNumHeads?N*o.kvNumHeads:v;if(p&&p.dims.length>0){if(p.dims.length!==3&&p.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(a.dims[0]!==p.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(p.dims.length===3){if(M!==p.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');f=p.dims[2]}else{if(M!==p.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');f=p.dims[1]*p.dims[3],q=!0}}let I=i.length>4?i[5]:void 0;if(I&&I.dims.length!==1&&I.dims[0]!==k)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:k,sequenceLength:_,pastSequenceLength:B,kvSequenceLength:M,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:v,vHiddenSize:f,headSize:N,vHeadSize:Math.floor(f/o.kvNumHeads),numHeads:o.numHeads,kvNumHeads:o.kvNumHeads,nReps:o.numHeads/o.kvNumHeads,pastPresentShareBuffer:!1,maskType:Q,scale:o.scale,broadcastResPosBias:!1,passPastInKv:q,qkvFormat:O}},lI=un({perm:[0,2,1,3]}),Dp=(i,o,a)=>{let u=o,p=a.kvNumHeads;return o.dims.length===3&&a.kvSequenceLength!==0&&(u=o.reshape([a.batchSize,a.kvSequenceLength,p,a.headSize]),u=i.compute(il(u,lI.perm),{inputs:[u],outputs:[-1]})[0]),u},cI=(i,o)=>{var Z;let a=AI(i.inputs,o);if(i.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((Z=i.inputs[1])==null?void 0:Z.dims.length)===5)throw new Error("Packed KV is not implemented");let u=i.inputs[0],p=i.inputs[1]&&i.inputs[1].dims.length>0?i.inputs[1]:void 0,h=i.inputs[2]&&i.inputs[2].dims.length>0?i.inputs[2]:void 0,C=i.inputs[3]&&i.inputs[3].dims.length!==0?i.inputs[3]:void 0,y=i.inputs[4]&&i.inputs[4].dims.length!==0?i.inputs[4]:void 0,k=i.inputs.length>4?i.inputs[5]:void 0,_=i.inputs.length>5?i.inputs[6]:void 0,v=a.kvNumHeads?a.kvNumHeads:a.numHeads,M=un({axis:2,numOutputs:3,splitSizes:[a.numHeads*a.headSize,v*a.headSize,v*a.headSize]}),[B,S,N]=!p&&!h?i.compute(Pp([u],M),{inputs:[u],outputs:[-1,-1,-1]}):[u,p,h],V=s2(i,a.batchSize,a.numHeads,a.sequenceLength,a.headSize,B,void 0,0);Jf(i,V,Dp(i,S,a),Dp(i,N,a),void 0,void 0,C,y,void 0,a,k,_)}}),Sp,uI,dI,fI,Pv=xr(()=>{Qs(),Js(),Wc(),Aa(),Sp=(i,o,a,u,p,h,C,y)=>{let k=li(h),_=k===1?"f32":`vec${k}f`,v=k===1?"vec2f":`mat2x${k}f`,M=p*C,B=64;M===1&&(B=256);let S=[p,C,h/k],N=[p,C,2],V=["rank","type","type"],Z=[];Z.push(...bs(S,N));let O=Q=>{let q=ur("x",o.dataType,3,k),f=ur("scale",a.dataType,a.dims),I=ur("bias",u.dataType,u.dims),e=us("output",1,3,2),c=[q,f,I,e];return`
  var<workgroup> workgroup_shared : array<${v}, ${B}>;
  const workgroup_size = ${B}u;
  ${Q.declareVariables(...c)}
  ${Q.mainStart(B)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${_}(0);
    var squared_sum = ${_}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${_}(${q.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${v}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Vc("workgroup_shared[0][0]",k)} / f32(hight * ${k});
      let squared_sum_final = ${Vc("workgroup_shared[0][1]",k)} / f32(hight * ${k});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${y}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return i.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${k};${y};${B}`,inputDependencies:V},getRunData:()=>({outputs:[{dims:N,dataType:1}],dispatchGroup:{x:M},programUniforms:Z}),getShaderSource:O},{inputs:[o,a,u],outputs:[-1]})[0]},uI=(i,o,a)=>{let u=o[0].dims,p=u,h=2,C=u[0],y=u[1],k=ar.sizeFromDimension(u,h),_=li(k),v=ar.size(p)/_,M=Sp(i,o[0],o[1],o[2],C,k,y,a.epsilon),B=[C,y,k/_],S=[C,y],N=["type","none"],V=Z=>{let O=ur("x",o[0].dataType,B.length,_),Q=ur("scale_shift",1,S.length,2),q=us("output",o[0].dataType,B.length,_),f=[O,Q,q];return`
  ${Z.registerUniform("output_size","u32").declareVariables(...f)}
  ${Z.mainStart()}
  ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${q.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${Q.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${O.getByOffset("global_idx")} * ${q.type.value}(scale_shift.x) + ${q.type.value}(scale_shift.y);
      ${q.setByOffset("global_idx","value")};
  }`};i.compute({name:"InstanceNormalization",shaderCache:{hint:`${_}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:p,dataType:o[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...bs(B,S,B)]}),getShaderSource:V},{inputs:[o[0],M]})},dI=(i,o,a)=>{let u=o[0].dims,p=u,h=u[0],C=u[u.length-1],y=ar.sizeFromDimension(u,1)/C,k=li(C),_=ar.size(p)/k,v=[{type:12,data:y},{type:12,data:Math.floor(C/k)}],M=["type","type"],B=!1,S=[0,u.length-1];for(let O=0;O<u.length-2;O++)B=B||u[O+1]!==1,S.push(O+1);B=B&&u[u.length-1]!==1;let N=B?i.compute(il(i.inputs[0],S),{inputs:[i.inputs[0]],outputs:[-1]})[0]:i.inputs[0].reshape(Array.from({length:u.length},(O,Q)=>u[S[Q]])),V=Sp(i,N,o[1],o[2],h,y,C,a.epsilon),Z=O=>{let Q=so(o[0].dataType),q=k===1?"vec2f":`mat${k}x2f`,f=c=>{let P=c===0?"x":"y",J=k===1?"f32":`vec${k}f`;switch(k){case 1:return`${Q}(${J}(scale.${P}))`;case 2:return`vec2<${Q}>(${J}(scale[0].${P}, scale[1].${P}))`;case 4:return`vec4<${Q}>(${J}(scale[0].${P}, scale[1].${P}, scale[2].${P}, scale[3].${P}))`;default:throw new Error(`Not supported compoents ${k}`)}},I=ur("input",o[0].dataType,o[0].dims,k),e=us("output",o[0].dataType,p,k);return`
  @group(0) @binding(0) var<storage, read> input : array<${I.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${q}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${e.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${O.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${f(0)}, ${f(1)});
  }`};i.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${k}`,inputDependencies:M},getRunData:()=>({outputs:[{dims:p,dataType:o[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:v}),getShaderSource:Z},{inputs:[o[0],V]})},fI=(i,o)=>{o.format==="NHWC"?dI(i,i.inputs,o):uI(i,i.inputs,o)}}),gI,pI,hI,Dv=xr(()=>{Qs(),Js(),Aa(),gI=i=>{if(!i||i.length<2)throw new Error("layerNorm requires at least 2 inputs.")},pI=(i,o,a)=>{let u=o.simplified,p=i[0].dims,h=i[1],C=!u&&i[2],y=p,k=ar.normalizeAxis(o.axis,p.length),_=ar.sizeToDimension(p,k),v=ar.sizeFromDimension(p,k),M=ar.size(h.dims),B=C?ar.size(C.dims):0;if(M!==v||C&&B!==v)throw new Error(`Size of X.shape()[axis:] == ${v}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${M} and bias size of ${B}`);let S=[];for(let I=0;I<p.length;++I)I<k?S.push(p[I]):S.push(1);let N=li(v),V=["type","type"],Z=[{type:12,data:_},{type:1,data:v},{type:12,data:Math.floor(v/N)},{type:1,data:o.epsilon}];C&&V.push("type");let O=a>1,Q=a>2,q=I=>{let e=so(i[0].dataType),c=[ur("x",i[0].dataType,i[0].dims,N),ur("scale",h.dataType,h.dims,N)];C&&c.push(ur("bias",C.dataType,C.dims,N)),c.push(us("output",i[0].dataType,y,N)),O&&c.push(us("mean_data_output",1,S)),Q&&c.push(us("inv_std_output",1,S));let P=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${I.registerUniforms(P).declareVariables(...c)}
  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ep("f32",N)};
    var mean_square_vector = ${ep("f32",N)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Pf(e,N,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Vc("mean_vector",N)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Vc("mean_square_vector",N)} / uniforms.norm_size ${u?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Pf(e,N,"x[j + offset]")};
      let f32scale = ${Pf(e,N,"scale[j]")};
      output[j + offset] = ${c[0].type.value}((f32input ${u?"":"- mean"}) * inv_std_dev * f32scale
        ${C?`+ ${Pf(e,N,"bias[j]")}`:""}
      );
    }

    ${O?"mean_data_output[global_idx] = mean":""};
    ${Q?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},f=[{dims:y,dataType:i[0].dataType}];return O&&f.push({dims:S,dataType:1}),Q&&f.push({dims:S,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${N};${a};${u}`,inputDependencies:V},getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(_/64)},programUniforms:Z}),getShaderSource:q}},hI=(i,o)=>{gI(i.inputs),i.compute(pI(i.inputs,o,i.outputCount))}}),mI,bI,Sv=xr(()=>{Js(),pp(),Cp(),mI=i=>{if(!i||i.length!==2)throw new Error("MatMul requires 2 inputs.");if(i[0].dims[i[0].dims.length-1]!==i[1].dims[i[1].dims.length-2])throw new Error("shared dimension does not match.")},bI=i=>{mI(i.inputs);let o=Bf.calcShape(i.inputs[0].dims,i.inputs[1].dims,!0);if(!o)throw new Error("Can't use matmul on the given tensors");let a=o[o.length-1],u=i.inputs[0].dims[i.inputs[0].dims.length-1];if(a<8&&u<8)i.compute(gp(i.inputs,{activation:""},o));else{let p=o[o.length-2],h=ar.size(i.inputs[0].dims.slice(0,-2)),C=ar.size(i.inputs[1].dims.slice(0,-2));if(h!==1&&p===1&&C===1){let y=i.inputs[0].reshape([1,h,u]),k=i.inputs[1].reshape([1,u,a]),_=[1,h,a],v=[y,k];i.compute(S2(v,{activation:""},o,_),{inputs:v})}else i.compute(S2(i.inputs,{activation:""},o))}}}),CI,wI,II,yI,kI,Gv=xr(()=>{Qs(),Js(),Mi(),Aa(),CI=(i,o)=>{if(i.length<3||i.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let a=i[0],u=a.dims.length;if(a.dims[u-1]!==o.k)throw new Error("The last dim of input shape does not match the k value");let p=Math.floor((o.k+o.blockSize-1)/o.blockSize),h=o.blockSize/8*o.bits,C=i[1];if(!ar.areEqual(C.dims,[o.n,p,h]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let y=i[2].dims;if(ar.size(y)!==o.n*p)throw new Error("scales input size error.");if(i.length===4){let k=i[3].dims,_=o.bits>4?o.n*p:o.n*Math.floor((p+1)/2);if(ar.size(k)!==_)throw new Error("zeroPoints input size error.")}},wI=(i,o)=>{let a=i[0].dims,u=a.length,p=a[u-2],h=o.k,C=o.n,y=a.slice(0,u-2),k=ar.size(y),_=i[1].dims[2]/4,v=i[0].dataType,M=li(o.k),B=li(_),S=li(C),N=y.concat([p,C]),V=p>1&&C/S%2===0?2:1,Z=ar.size(N)/S/V,O=64,Q=[],q=[k,p,h/M],f=ar.convertShape(i[1].dims).slice();f.splice(-1,1,_/B),Q.push(...bs(q)),Q.push(...bs(f)),Q.push(...bs(i[2].dims)),i.length===4&&Q.push(...bs(ar.convertShape(i[3].dims)));let I=[k,p,C/S];Q.push(...bs(I));let e=c=>{let P=q.length,J=ur("a",i[0].dataType,P,M),D=ur("b",12,f.length,B),j=ur("scales",i[2].dataType,i[2].dims.length),Ie=[J,D,j],ge=i.length===4?ur("zero_points",12,i[3].dims.length):void 0;ge&&Ie.push(ge);let ke=I.length,Ee=us("output",i[0].dataType,ke,S),Ne=so(i[0].dataType),Xe=(()=>{switch(M){case 1:return`array<${Ne}, 8>`;case 2:return`mat4x2<${Ne}>`;case 4:return`mat2x4<${Ne}>`;default:throw new Error(`${M}-component is not supported.`)}})(),At=()=>{let ue=`
          // reuse a data
            var input_offset = ${J.indicesToOffset(`${J.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Xe};
            for (var j: u32 = 0; j < ${8/M}; j++) {
              a_data[j] = ${J.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let ie=0;ie<S*V;ie++)ue+=`
            b_value = ${B===1?`b${ie}_data`:`b${ie}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Xe}(${Array.from({length:4},(be,Ye)=>`${Ne}(b_value_lower[${Ye}]), ${Ne}(b_value_upper[${Ye}])`).join(", ")});
            b_dequantized_values = ${M===1?`${Xe}(${Array.from({length:8},(be,Ye)=>`(b_quantized_values[${Ye}] - ${ge?`zero_point${ie}`:"zero_point"}) * scale${ie}`).join(", ")});`:`(b_quantized_values - ${Xe}(${Array(8).fill(`${ge?`zero_point${ie}`:"zero_point"}`).join(",")})) * scale${ie};`};
            workgroup_shared[local_id.x * ${V} + ${Math.floor(ie/S)}]${S>1?`[${ie%S}]`:""} += ${Array.from({length:8/M},(be,Ye)=>`${M===1?`a_data[${Ye}] * b_dequantized_values[${Ye}]`:`dot(a_data[${Ye}], b_dequantized_values[${Ye}])`}`).join(" + ")};
          `;return ue},xe=()=>{let ue=`
            var col_index = col * ${S};
            ${ge?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Ne}(8);`}
            `;for(let ie=0;ie<S*V;ie++)ue+=`
            let scale${ie} = ${j.getByOffset("col_index * nBlocksPerCol + block")};
            ${ge?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${ge.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${ie} = ${Ne}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return ue},ye=()=>{let ue=`col_index = col * ${S};`;for(let ie=0;ie<S*V;ie++)ue+=`
            let b${ie}_data = ${D.getByIndices(`${D.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return ue+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Xe};
            var b_dequantized_values: ${Xe};`,ue};return`
        var<workgroup> workgroup_shared: array<${Ee.type.value}, ${V*O}>;
        ${c.declareVariables(...Ie,Ee)}
        ${c.mainStart([O,1,1])}
          let output_indices = ${Ee.offsetToIndices(`(global_idx / ${O}) * ${V}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${O}) {
            //process one block
            var word_offset: u32 = block * ${o.blockSize/M};
            ${xe()}
            for (var word: u32 = 0; word < ${_}; word += ${B}) {
              ${ye()}
              for (var i: u32 = 0; i < ${B}; i++) {
                ${At()}
                word_offset += ${8/M};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${V}) {
            var output_value: ${Ee.type.value} = ${Ee.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${O}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${V};
            }
            ${Ee.setByIndices(`${Ee.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${o.blockSize};${o.bits};${M};${B};${S};${V};${O}`,inputDependencies:Array(i.length).fill("rank")},getRunData:()=>({outputs:[{dims:N,dataType:v}],dispatchGroup:{x:Z},programUniforms:Q}),getShaderSource:e}},II=(i,o)=>{let a=i[0].dims,u=a.length,p=a[u-2],h=o.k,C=o.n,y=a.slice(0,u-2),k=ar.size(y),_=i[1].dims[2]/4,v=i[0].dataType,M=li(o.k),B=li(_),S=y.concat([p,C]),N=128,V=C%8===0?8:C%4===0?4:1,Z=N/V,O=Z*B*8,Q=O/M,q=O/o.blockSize,f=ar.size(S)/V,I=[],e=[k,p,h/M],c=ar.convertShape(i[1].dims).slice();c.splice(-1,1,_/B),I.push(...bs(e)),I.push(...bs(c)),I.push(...bs(i[2].dims)),i.length===4&&I.push(...bs(ar.convertShape(i[3].dims)));let P=[k,p,C];I.push(...bs(P));let J=D=>{let j=e.length,Ie=ur("a",i[0].dataType,j,M),ge=ur("b",12,c.length,B),ke=ur("scales",i[2].dataType,i[2].dims.length),Ee=[Ie,ge,ke],Ne=i.length===4?ur("zero_points",12,i[3].dims.length):void 0;Ne&&Ee.push(Ne);let Xe=P.length,At=us("output",i[0].dataType,Xe),xe=so(i[0].dataType),ye=()=>{switch(M){case 1:return`
          let a_data0 = vec4<${xe}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${xe}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${xe}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${xe}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${M}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${Ie.type.value}, ${Q}>;
        var<workgroup> inter_results: array<array<${At.type.value}, ${Z}>, ${V}>;
        ${D.declareVariables(...Ee,At)}
        ${D.mainStart([Z,V,1])}
          let output_indices = ${At.offsetToIndices(`workgroup_index * ${V}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${q} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${Q};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${Q}; a_offset += ${N})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Ie.getByIndices(`${Ie.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Ie.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${q} + local_id.x;
            ${Ne?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Ne.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${xe}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${xe}(8);`}
            let scale = ${ke.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${ge.getByIndices(`${ge.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${o.blockSize/M};
            for (var i: u32 = 0; i < ${B}; i++) {
              ${ye()}
              let b_value = ${B===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${xe}>(${Array.from({length:4},(ue,ie)=>`${xe}(b_value_lower[${ie}]), ${xe}(b_value_upper[${ie}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${xe}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(ue,ie)=>`${`dot(a_data${ie}, b_dequantized_values[${ie}])`}`).join(" + ")};
              word_offset += ${8/M};
            }
            workgroupBarrier();
          }

          if (local_idx < ${V}) {
            var output_value: ${At.type.value} = ${At.type.value}(0);
            for (var b = 0u; b < ${Z}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${At.setByIndices(`${At.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${o.blockSize};${M};${B};${Z};${V}`,inputDependencies:Array(i.length).fill("rank")},getRunData:()=>({outputs:[{dims:S,dataType:v}],dispatchGroup:{x:f},programUniforms:I}),getShaderSource:J}},yI=(i,o)=>{CI(i.inputs,o),o.blockSize===32&&i.adapterInfo.isVendor("intel")&&i.adapterInfo.isArchitecture("gen-12lp")?i.compute(II(i.inputs,o)):i.compute(wI(i.inputs,o))},kI=i=>un(i)}),_I,vI,xI,MI,EI,BI,TI,PI,DI,Fv=xr(()=>{Qs(),Js(),Aa(),_I=i=>{if(!i||i.length<1)throw new Error("Too few inputs");if(i[0].dataType!==1&&i[0].dataType!==10)throw new Error("Input type must be float or float16.");if(i.length>=2){let o=i[0].dims.length*2===i[1].dims[0];if(i.length===4&&(o=i[3].dims[0]*2===i[1].dims[0]),!o)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},vI=(i,o,a)=>{let u="";for(let p=o-1;p>=0;--p)u+=`
            k = i32(${i.indicesGet("indices",p)}) - ${ms("uniforms.pads",p,a)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ms("uniforms.x_shape",p,o)})) {
              break;
            }
            offset += k * i32(${ms("uniforms.x_strides",p,o)});
        `;return`
          value = ${i.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${u}
            value = x[offset];
          }
      `},xI=(i,o,a)=>{let u="";for(let p=o-1;p>=0;--p)u+=`
                k = i32(${i.indicesGet("indices",p)}) - ${ms("uniforms.pads",p,a)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ms("uniforms.x_shape",p,o)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ms("uniforms.x_shape",p,o)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ms("uniforms.x_strides",p,o)});
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},MI=(i,o,a)=>{let u="";for(let p=o-1;p>=0;--p)u+=`
                k = i32(${i.indicesGet("indices",p)}) - ${ms("uniforms.pads",p,a)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ms("uniforms.x_shape",p,o)})) {
                  k = i32(${ms("uniforms.x_shape",p,o)}) - 1;
                }
                offset += k * i32(${ms("uniforms.x_strides",p,o)});
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},EI=(i,o,a)=>{let u="";for(let p=o-1;p>=0;--p)u+=`
                k = i32(${i.indicesGet("indices",p)}) - ${ms("uniforms.pads",p,a)};
                if (k < 0)  {
                  k += i32(${ms("uniforms.x_shape",p,o)}]);
                }
                if (k >= i32(${ms("uniforms.x_shape",p,o)})) {
                  k -= i32(${ms("uniforms.x_shape",p,o)});
                }
                offset += k * i32(${ms("uniforms.x_strides",p,o)});
            `;return`
              var offset = 0;
              var k = 0;
              ${u}
              value = x[offset];
          `},BI=(i,o,a)=>{switch(a.mode){case 0:return vI(i,o,a.pads.length);case 1:return xI(i,o,a.pads.length);case 2:return MI(i,o,a.pads.length);case 3:return EI(i,o,a.pads.length);default:throw new Error("Invalid mode")}},TI=(i,o)=>{let a=ar.padShape(i[0].dims.slice(),o.pads),u=i[0].dims,p=ar.size(a),h=[{type:12,data:p},{type:6,data:o.pads}],C=i.length>=3&&i[2].data;o.mode===0&&h.push({type:C?i[2].dataType:1,data:o.value}),h.push(...bs(i[0].dims,a));let y=["rank"],k=_=>{let v=us("output",i[0].dataType,a.length),M=ur("x",i[0].dataType,u.length),B=M.type.value,S=BI(v,u.length,o),N=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:o.pads.length}];return o.mode===0&&N.push({name:"constant_value",type:C?B:"f32"}),`
            ${_.registerUniforms(N).declareVariables(M,v)}
            ${_.mainStart()}
            ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${v.offsetToIndices("global_idx")};

            var value = ${B}(0);
            ${S}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${o.mode}${C}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:a,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(ar.size(a)/64)},programUniforms:h}),getShaderSource:k}},PI=(i,o)=>{if(i.length>1){let a=i[1].getBigInt64Array(),u=i.length>=3&&i[2].data?i[2].dataType===10?i[2].getUint16Array()[0]:i[2].getFloat32Array()[0]:0,p=i[0].dims.length,h=new Int32Array(2*p).fill(0);if(i.length>=4){let y=i[3].getBigInt64Array();for(let k=0;k<y.length;k++)h[Number(y[k])]=Number(a[k]),h[Number(y[k])+p]=Number(a[k+y.length])}else a.forEach((y,k)=>h[Number(k)]=Number(y));let C=[];return h.forEach(y=>C.push(y)),{mode:o.mode,value:u,pads:C}}else return o},DI=(i,o)=>{_I(i.inputs);let a=PI(i.inputs,o);i.compute(TI(i.inputs,a),{inputs:[0]})}}),a2,Gp,Fp,zp,Op,SI,GI,Qp,Np,FI,zI,Lp,OI,QI,Rp,NI,LI,RI,jI,zv=xr(()=>{jl(),Qs(),Js(),Aa(),a2=i=>{if(Kn.webgpu.validateInputContent&&(!i||i.length!==1))throw new Error("Pool ops requires 1 input.")},Gp=(i,o,a)=>{let u=o.format==="NHWC",p=i.dims.slice();u&&p.splice(1,0,p.pop());let h=Object.hasOwnProperty.call(o,"dilations"),C=o.kernelShape.slice(),y=o.strides.slice(),k=h?o.dilations.slice():[],_=o.pads.slice();E2.adjustPoolAttributes(a,p,C,y,k,_);let v=E2.computePoolOutputShape(a,p,y,k,C,_,o.autoPad),M=Object.assign({},o);h?Object.assign(M,{kernelShape:C,strides:y,pads:_,dilations:k,cacheKey:o.cacheKey}):Object.assign(M,{kernelShape:C,strides:y,pads:_,cacheKey:o.cacheKey});let B=v.slice();return B.push(B.splice(1,1)[0]),[M,u?B:v]},Fp=(i,o)=>{let a=o.format==="NHWC",u=ar.size(i),p=ar.size(o.kernelShape),h=[{type:12,data:u},{type:12,data:p}],C=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(o.kernelShape.length<=2){let y=o.kernelShape[o.kernelShape.length-1],k=o.strides[o.strides.length-1],_=o.pads[o.pads.length/2-1],v=o.pads[o.pads.length-1],M=!!(_+v);h.push({type:12,data:y},{type:12,data:k},{type:12,data:_},{type:12,data:v}),C.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let B=!1;if(o.kernelShape.length===2){let S=o.kernelShape[o.kernelShape.length-2],N=o.strides[o.strides.length-2],V=o.pads[o.pads.length/2-2],Z=o.pads[o.pads.length-2];B=!!(V+Z),h.push({type:12,data:S},{type:12,data:N},{type:12,data:V},{type:12,data:Z}),C.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[h,C,!0,M,B]}else{if(a)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=ar.computeStrides(o.kernelShape);h.push({type:12,data:y},{type:12,data:o.pads},{type:12,data:o.strides}),C.push({name:"kernelStrides",type:"u32",length:y.length},{name:"pads",type:"u32",length:o.pads.length},{name:"strides",type:"u32",length:o.strides.length});let k=o.pads.reduce((_,v)=>_+v);return[h,C,!!k,!1,!1]}},zp=(i,o,a,u,p,h,C,y,k,_,v,M)=>{let B=p.format==="NHWC",S=o.type.value,N=us("output",o.type.tensor,u);if(p.kernelShape.length<=2){let V="",Z="",O="",Q=a-(B?2:1);if(v?V=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Q}] = indices[${Q}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Q}] < 0 || xIndices[${Q}]
                      >= uniforms.x_shape[${Q}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${o.indicesToOffset("xIndices")}];
                  ${h}
                }`:V=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Q}] = indices[${Q}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${o.indicesToOffset("xIndices")}];
                  ${h}
                }`,p.kernelShape.length===2){let q=a-(B?3:2);M?Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${q}] = indices[${q}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${q}] < 0 || xIndices[${q}] >= uniforms.x_shape[${q}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:Z=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${q}] = indices[${q}] * uniforms.sh - uniforms.phStart + j;
                `,O=`
              }
            `}return`
            ${i.registerUniforms(k).declareVariables(o,N)}

            ${i.mainStart()}
              ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${N.offsetToIndices("global_idx")};
              var xIndices = ${N.offsetToIndices("global_idx")};

              var value = ${S}(${y});
              var pad = 0;
              ${Z}
              ${V}
              ${O}
              ${C}

              output[global_idx] = value;
            }`}else{if(B)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let V=p.kernelShape.length,Z=p.pads.length,O="";return _?O=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${o.indicesToOffset("xIndices")}];
                ${h}
              }`:O=`
              }
              let x_val = x[${o.indicesToOffset("xIndices")}];
              ${h}
            `,`
            ${i.registerUniforms(k).declareVariables(o,N)}

            ${i.mainStart()}
              ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${N.offsetToIndices("global_idx")};
              var xIndices = ${N.offsetToIndices("global_idx")};

              var offsets: array<u32, ${V}>;

              var value = ${S}(${y});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${V-1}u; j++) {
                  offsets[j] = offset / ${ms("uniforms.kernelStrides","j",V)};
                  offset -= offsets[j] * ${ms("uniforms.kernelStrides","j",V)};
                }
                offsets[${V-1}] = offset;

                isPad = false;
                for (var j = ${a-V}u; j < ${a}u; j++) {
                  xIndices[j] = indices[j] * ${ms("uniforms.strides",`j - ${a-V}u`,V)}
                    + offsets[j - ${a-V}u] - ${ms("uniforms.pads","j - 2u",Z)};
                  ${O}
              }
              ${C}

              output[global_idx] = value;
            }`}},Op=i=>`${i.format};${i.ceilMode};${i.autoPad};${i.kernelShape.length}`,SI=i=>`${Op(i)};${i.countIncludePad}`,GI=i=>`${Op(i)};${i.storageOrder};${i.dilations}`,Qp=i=>({format:i.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][i.auto_pad],ceilMode:i.ceil_mode,kernelShape:i.kernel_shape,strides:i.strides,pads:i.pads}),Np=(i,o,a,u)=>{let[p,h]=Gp(o,u,a),C=ur("x",o.dataType,o.dims.length),y=C.type.value,k="value += x_val;",_="";p.countIncludePad?_+=`value /= ${y}(uniforms.kernelSize);`:_+=`value /= ${y}(i32(uniforms.kernelSize) - pad);`;let[v,M,B,S,N]=Fp(h,p);v.push(...bs(o.dims,h));let V=["rank"];return{name:i,shaderCache:{hint:`${u.cacheKey};${B};${S};${N}`,inputDependencies:V},getRunData:()=>({outputs:[{dims:h,dataType:o.dataType}],dispatchGroup:{x:Math.ceil(ar.size(h)/64)},programUniforms:v}),getShaderSource:Z=>zp(Z,C,o.dims.length,h.length,p,k,_,0,M,B,S,N)}},FI=i=>{let o=i.count_include_pad!==0,a=Qp(i);if(a.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let u={countIncludePad:o,...a,cacheKey:""};return{...u,cacheKey:SI(u)}},zI=(i,o)=>{a2(i.inputs),i.compute(Np("AveragePool",i.inputs[0],!1,o))},Lp={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},OI=i=>{let o=i.format;return{format:o,...Lp,cacheKey:o}},QI=(i,o)=>{a2(i.inputs),i.compute(Np("GlobalAveragePool",i.inputs[0],!0,o))},Rp=(i,o,a,u)=>{let[p,h]=Gp(o,u,a),C=`
      value = max(x_val, value);
    `,y="",k=ur("x",o.dataType,o.dims.length),_=["rank"],[v,M,B,S,N]=Fp(h,p);return v.push(...bs(o.dims,h)),{name:i,shaderCache:{hint:`${u.cacheKey};${B};${S};${N}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:h,dataType:o.dataType}],dispatchGroup:{x:Math.ceil(ar.size(h)/64)},programUniforms:v}),getShaderSource:V=>zp(V,k,o.dims.length,h.length,p,C,y,o.dataType===10?-65504:-1e5,M,B,S,N)}},NI=(i,o)=>{a2(i.inputs),i.compute(Rp("MaxPool",i.inputs[0],!1,o))},LI=i=>{let o=i.storage_order,a=i.dilations,u=Qp(i);if(o!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(u.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let p={storageOrder:o,dilations:a,...u,cacheKey:""};return{...p,cacheKey:GI(p)}},RI=i=>{let o=i.format;return{format:o,...Lp,cacheKey:o}},jI=(i,o)=>{a2(i.inputs),i.compute(Rp("GlobalMaxPool",i.inputs[0],!0,o))}}),VI,WI,UI,HI,Ov=xr(()=>{Qs(),Js(),Mi(),Aa(),VI=(i,o)=>{if(i.length<2||i.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(i.length===3&&i[1].dims===i[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(i.length===3&&i[0].dataType!==i[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(i[0].dataType===6&&i.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(i[1].dims.length!==0&&i[1].dims.length!==1&&i[1].dims.length!==i[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(i.length>2){if(i[0].dataType!==i[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(i[1].dims.length!==i[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!i[1].dims.map((a,u)=>a===i[2].dims[u]).reduce((a,u)=>a&&u,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(o.blockSize>0){if(i[1].dims.length===0||i[1].dims.length===1&&i[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!i[1].dims.map((p,h)=>h===o.axis||p===i[0].dims[h]).reduce((p,h)=>p&&h,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(i[1].dims.length!==i[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let a=i[0].dims[o.axis],u=i[1].dims[o.axis];if(o.blockSize<Math.ceil(a/u)||o.blockSize>Math.ceil(a/(u-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},WI=(i,o)=>{let a=ar.normalizeAxis(o.axis,i[0].dims.length),u=i[0].dataType,p=u===3,h=i[0].dims,C=i[1].dataType,y=ar.size(h),k=u===3||u===2,_=k?[Math.ceil(ar.size(i[0].dims)/4)]:i[0].dims,v=i[1].dims,M=i.length>2?i[2]:void 0,B=M?k?[Math.ceil(ar.size(M.dims)/4)]:M.dims:void 0,S=v.length===0||v.length===1&&v[0]===1,N=S===!1&&v.length===1,V=li(y),Z=S&&(!k||V===4),O=Z?V:1,Q=Z&&!k?V:1,q=ur("input",k?12:u,_.length,Q),f=ur("scale",C,v.length),I=M?ur("zero_point",k?12:u,B.length):void 0,e=us("output",C,h.length,O),c=[q,f];I&&c.push(I);let P=[_,v];M&&P.push(B);let J=[{type:12,data:y/O},{type:12,data:a},{type:12,data:o.blockSize},...bs(...P,h)],D=j=>{let Ie=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${j.registerUniforms(Ie).declareVariables(...c,e)}
      ${j.mainStart()}
          ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${e.offsetToIndices("global_idx")};

          // Set input x
          ${k?`
            let input = ${q.getByOffset("global_idx / 4")};
            let x_vec = ${p?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${O===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${q.getByOffset("global_idx")};`};

          // Set scale input
          ${S?`let scale_value= ${f.getByOffset("0")}`:N?`
            let scale_index = ${e.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${f.getByOffset("scale_index")};`:`
            var scale_indices: ${f.type.indices} = output_indices;
            let index = ${f.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${f.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${f.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${I?S?k?`
                let zero_point_input = ${I.getByOffset("0")};
                let zero_point_vec =  ${p?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${I.getByOffset("0")}`:N?k?`
                let zero_point_index = ${e.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${I.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${p?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${e.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${I.getByOffset("zero_point_index")};`:k?`
                let zero_point_offset = ${f.indicesToOffset("scale_indices")};
                let zero_point_input = ${I.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${p?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${I.getByIndices("scale_indices")};`:`let zero_point_value = ${k?p?"i32":"u32":q.type.value}(0);`};
      // Compute and write output
      ${e.setByOffset("global_idx",`${e.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:o.cacheKey,inputDependencies:I?["rank","rank","rank"]:["rank","rank"]},getShaderSource:D,getRunData:()=>({outputs:[{dims:h,dataType:C}],dispatchGroup:{x:Math.ceil(y/O/64),y:1,z:1},programUniforms:J})}},UI=(i,o)=>{VI(i.inputs,o),i.compute(WI(i.inputs,o))},HI=i=>un({axis:i.axis,blockSize:i.blockSize})}),YI,KI,qI,Qv=xr(()=>{jl(),Qs(),Aa(),YI=(i,o,a)=>{let u=i===o,p=i<o&&a<0,h=i>o&&a>0;if(u||p||h)throw new Error("Range these inputs' contents are invalid.")},KI=(i,o,a,u)=>{let p=Math.abs(Math.ceil((o-i)/a)),h=[p],C=p,y=[{type:12,data:C},{type:u,data:i},{type:u,data:a},...bs(h)],k=_=>{let v=us("output",u,h.length),M=v.type.value,B=[{name:"outputSize",type:"u32"},{name:"start",type:M},{name:"delta",type:M}];return`
        ${_.registerUniforms(B).declareVariables(v)}
        ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${M}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${u}`},getShaderSource:k,getRunData:()=>({outputs:[{dims:h,dataType:u}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:y})}},qI=i=>{let o=0,a=0,u=0;i.inputs[0].dataType===6?(o=i.inputs[0].getInt32Array()[0],a=i.inputs[1].getInt32Array()[0],u=i.inputs[2].getInt32Array()[0]):i.inputs[0].dataType===1&&(o=i.inputs[0].getFloat32Array()[0],a=i.inputs[1].getFloat32Array()[0],u=i.inputs[2].getFloat32Array()[0]),Kn.webgpu.validateInputContent&&YI(o,a,u),i.compute(KI(o,a,u,i.inputs[0].dataType),{inputs:[]})}}),XI,ZI,JI,$I,Nv=xr(()=>{Qs(),Js(),Mi(),Aa(),XI=(i,o,a,u)=>{if(i!=="none"&&u!=="i32"&&u!=="u32"&&u!=="f32")throw new Error(`Input ${u} is not supported with reduction ${i}.`);let p=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,h=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${o}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(i){case"none":return`${o}=${a};`;case"add":return u==="i32"||u==="u32"?`atomicAdd(&${o}, bitcast<${u}>(${a}));`:`
              ${p}bitcast<${u}>(oldValue) + (${a})${h}`;case"max":return u==="i32"||u==="u32"?`atomicMax(&${o}, bitcast<${u}>(${a}));`:`
                ${p}max(bitcast<f32>(oldValue), (${a}))${h}`;case"min":return u==="i32"||u==="u32"?`atomicMin(&${o}, bitcast<${u}>(${a}));`:`${p}min(bitcast<${u}>(oldValue), (${a}))${h}`;case"mul":return`${p}(bitcast<${u}>(oldValue) * (${a}))${h}`;default:throw new Error(`Reduction ${i} is not supported.`)}},ZI=(i,o)=>{let a=i[0].dims,u=i[1].dims,p=a,h=1,C=Math.ceil(ar.size(u)/h),y=u[u.length-1],k=ar.sizeFromDimension(a,y),_=[{type:12,data:C},{type:12,data:y},{type:12,data:k},...bs(i[1].dims,i[2].dims,p)],v=M=>{let B=ur("indices",i[1].dataType,i[1].dims.length),S=ur("updates",i[2].dataType,i[2].dims.length,h),N=o.reduction!=="none"&&o.reduction!==""?lb("output",i[0].dataType,p.length):us("output",i[0].dataType,p.length,h);return`
      ${M.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(B,S,N)}
      ${M.mainStart()}
        ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${o.reduction==="none"}) {
    let n = ${ar.size(u)};
    for (var i = 0; i < n; i = i + 1) {
      for (var j = i + 1; j < n; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  if (${o.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    indices_start = 0u;
  }
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${i[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${XI(o.reduction,"output[data_offset + i]","value",N.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${o.cacheKey}_${o.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:p,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:_}),getShaderSource:v}},JI=i=>un({reduction:i.reduction}),$I=(i,o)=>{i.compute(ZI(i.inputs,o),{inputs:[i.inputs[1],i.inputs[2]],outputs:[]})}}),e8,t8,r8,jp,s8,a8,n8,i8,o8,A8,l8,c8,Vp,u8,d8,f8,g8,p8,h8,m8,Lv=xr(()=>{Qs(),Js(),Mi(),Aa(),e8=(i,o)=>{if(i.every(a=>a>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),i.length>0){if(o.mode==="linear"){if(!(i.length===2||i.length===3||i.length===4&&i[0]===1&&i[1]===1||i.length===4&&i[0]===1&&i[3]===1||i.length===5&&i[0]===1&&i[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(o.mode==="cubic"&&!(i.length===2||i.length===4&&i[0]===1&&i[1]===1||i.length===4&&i[0]===1&&i[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},t8=(i,o,a)=>{o.every(p=>p>=0&&p<a||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let u=new Array(a).fill(1);return o.forEach((p,h)=>u[p]=i[h]),u},r8=(i,o,a,u,p,h)=>{let[C,y,k]=a>10?[1,2,3]:[-1,i.length>1?1:-1,-1],_=i[0].dims.length;if(C>0&&i.length>C&&i[C].dims.length>0)i[C].getFloat32Array().forEach(v=>h.push(v));else if(o.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(y>0&&i.length>y&&i[y].dims.length===1&&i[y].dims[0]>0){if(i[y].getFloat32Array().forEach(v=>u.push(v)),u.length!==0&&u.length!==_&&a>=18&&u.length!==o.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");e8(u,o),o.axes.length>0&&t8(u,o.axes,_).forEach((v,M)=>u[M]=v)}if(k>0&&i.length>k&&i[k].dims.length===1&&i[k].dims[0]>0&&(i[k].getBigInt64Array().forEach(v=>p.push(Number(v))),p.length!==0&&p.length!==_&&a>=18&&p.length!==o.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(o.axes.length>0){if(u.length!==0&&u.length!==o.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(p.length!==0&&p.length!==o.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof u<"u"&&typeof p<"u"&&u.length>0&&p.length>_)throw new Error("Resize requires only of scales or sizes to be specified")},jp=(i,o,a,u)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${i}) * (${o});
  let whole = ${u}(big / (${a}));
  let fract = ${u}(big % (${a})) / ${u}(${a});
  return whole + fract;
`,s8=(i,o)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${o} { `+(()=>{switch(i){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${o}(xResized) / ${o}(xScale);
          } else {
            ${jp("xResized","lengthOriginal","lengthResized",o)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${o}(xResized) + 0.5) / ${o}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${o}(xResized) + 0.5) / ${o}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${jp("xResized","lengthOriginal - 1","lengthResized - 1",o)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${o}(roiStart) * ${o}(lengthOriginal - 1) +
                        (${o}(xResized) * ${o}(roiEnd - roiStart) * ${o}(lengthOriginal - 1)) /
                        ${o}(lengthResized - 1);
                  } else {
                    return 0.5 * ${o}(roiStart + roiEnd) * ${o}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${o}xScale * ${o}(lengthResized);
                  const adjustment = ${o}(lengthResized) / outputWidth;
                  const center = ${o}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${o}(xResized) + 0.5) / ${o}(xScale)) - 0.5;`;case"half_pixel":return`return ((${o}(xResized) + 0.5) / ${o}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${i} is not supported`)}})()+"}",a8=(i,o,a)=>`fn getNearestPixelFromOriginal(xOriginal: ${a}, isDownSample: bool) -> ${a} {`+(()=>{switch(i){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(o<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${i} is not supported`)}})()+"}",n8=(i,o,a)=>{let u=new Array(a).fill(0).concat(new Array(a).fill(1)),p=i.length===0?u:i.slice();return o.length>0?(o.forEach((h,C)=>{u[h]=p[C],u[C+a]=p[o.length+C]}),u):p},i8=(i,o,a,u)=>{let p=[];if(a.length>0)if(u.length>0){if(i.forEach(h=>p.push(h)),Math.max(...u)>i.length)throw new Error("axes is out of bound");u.forEach((h,C)=>p[h]=a[C])}else a.forEach(h=>p.push(h));else{if(o.length===0)throw new Error("Resize requires either scales or sizes.");p=i.map((h,C)=>Math.round(h*o[C]))}return p},o8=(i,o,a)=>{let u=(()=>{switch(a.keepAspectRatioPolicy){case"not_larger":return a.axes.length>0?Math.min(...a.axes.map(h=>o[h]),Number.MAX_VALUE):Math.min(...o,Number.MAX_VALUE);case"not_smaller":return a.axes.length>0?Math.max(...a.axes.map(h=>o[h]),Number.MIN_VALUE):Math.max(...o,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${a.keepAspectRatioPolicy} is not supported`)}})();o.fill(1,0,o.length);let p=i.slice();return a.axes.length>0?(a.axes.forEach(h=>o[h]=u),a.axes.forEach(h=>p[h]=Math.round(i[h]*o[h]))):(o.fill(u,0,o.length),p.forEach((h,C)=>p[C]=Math.round(h*o[C]))),p},A8=(i,o,a,u,p)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${i.type.indices}) -> array<${i.type.value}, ${a.length}> {
      var original_indices: array<${i.type.value}, ${a.length}>;
      for (var i:u32 = 0; i < ${a.length}; i++) {
        var output_index = ${i.indicesGet("output_indices","i")};
        var scale = ${ms("uniforms.scales","i",u)};
        var roi_low = ${ms("uniforms.roi","i",p)};
        var roi_hi = ${ms("uniforms.roi",`i + ${o.length}`,p)};
        if (scale == 1.0) {
          original_indices[i] = ${i.type.value}(output_index);
        } else {
          var input_shape_i = ${ms("uniforms.input_shape","i",o.length)};
          var output_shape_i = ${ms("uniforms.output_shape","i",a.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,l8=(i,o,a,u,p,h,C)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${o.type.indices}) -> ${i.type.indices} {
      var input_indices: ${i.type.indices};
      for (var i:u32 = 0; i < ${u.length}; i++) {
        var output_index = ${o.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ms("uniforms.scales","i",p)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ms("uniforms.roi","i",h)};
          var roi_hi = ${ms("uniforms.roi",`i + ${a.length}`,h)};
          var input_shape_i = ${ms("uniforms.input_shape","i",a.length)};
          var output_shape_i = ${ms("uniforms.output_shape","i",u.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${C} || (original_idx >= 0 && original_idx < ${o.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${o.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${i.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,c8=(i,o)=>`
    fn checkInputIndices(input_indices: ${i.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${o.length}; i++) {
        var input_index = ${i.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ms("uniforms.input_shape","i",o.length)}) {
          return false;
        }
      }
      return true;
    }`,Vp=(i,o,a,u)=>i.rank>u?`
    ${i.indicesSet("input_indices",o,"channel")};
    ${i.indicesSet("input_indices",a,"batch")};
`:"",u8=(i,o,a,u,p)=>{let[h,C,y,k]=a.length===2?[-1,0,1,-1]:[0,2,3,1],_=i.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${_} {
      var input_indices: ${i.type.indices};
      ${i.indicesSet("input_indices",C,`max(0, min(row, ${a[C]} - 1))`)};
      ${i.indicesSet("input_indices",y,`max(0, min(col, ${a[y]} - 1))`)};
      ${Vp(i,k,h,2)}
      return ${i.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${o.type.indices}) -> ${_} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${_} = originalIndices[${C}];
      var col:${_} = originalIndices[${y}];
      ${u?`if (row < 0 || row > (${a[C]} - 1) || col < 0 || col > (${a[y]} - 1)) {
        return ${p};
      }`:""};
      row = max(0, min(row, ${a[C]} - 1));
      col = max(0, min(col, ${a[y]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${a.length>2?`u32(originalIndices[${k}])`:"0"};
      var batch: u32 =  ${a.length>2?`u32(originalIndices[${h}])`:"0"};
      var x11: ${_} = getInputValue(batch, channel, row1, col1);
      var x12: ${_} = getInputValue(batch, channel, row1, col2);
      var x21: ${_} = getInputValue(batch, channel, row2, col1);
      var x22: ${_} = getInputValue(batch, channel, row2, col2);
      var dx1: ${_} = abs(row - ${_}(row1));
      var dx2: ${_} = abs(${_}(row2) - row);
      var dy1: ${_} = abs(col - ${_}(col1));
      var dy2: ${_} = abs(${_}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},d8=(i,o,a,u,p,h,C,y,k,_)=>{let v=a.length===2,[M,B]=v?[0,1]:[2,3],S=i.type.value,N=V=>{let Z=V===M?"row":"col";return`
      fn ${Z}CubicInterpolation(input_indices: ${i.type.indices}, output_indices: ${o.type.indices}) -> ${S} {
        var output_index = ${o.indicesGet("output_indices",V)};
        var originalIdx: ${S} = getOriginalCoordinateFromResizedCoordinate(output_index, ${p[V]},
        ${u[V]}, ${a[V]}, ${h[V]}, ${h[V]} + ${a.length});
        var fractOriginalIdx: ${S} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${y} && (originalIdx < 0 || originalIdx > (${a[V]} - 1))) {
          return ${k};
        }
        var data: array<${S}, 4> = array<${S}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${Z}: ${S} = originalIdx + ${S}(i);
          if (${Z} < 0 || ${Z} >= ${a[V]}) {
            ${_?`coefs[i + 1] = 0.0;
                        continue;`:y?`return ${k};`:`${Z} = max(0, min(${Z}, ${a[V]} - 1));`};
          }
        var input_indices_copy: ${i.type.indices} = input_indices;
          ${i.indicesSet("input_indices_copy",V,`u32(${Z})`)};
          data[i + 1] = ${V===M?i.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${N(M)};
    ${N(B)};
  fn getCubicInterpolationCoefs(s: ${S}) -> array<${S}, 4> {
    var absS = abs(s);
    var coeffs: array<${S}, 4> = array<${S}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${S} = 1.0 - absS;
    var twoMinusAbsS: ${S} = 2.0 - absS;
    var onePlusAbsS: ${S} = 1.0 + absS;
    coeffs[0] = ((${C} * onePlusAbsS - 5 * ${C}) * onePlusAbsS + 8 * ${C}) * onePlusAbsS - 4 * ${C};
    coeffs[1] = ((${C} + 2) * absS - (${C} + 3)) * absS * absS + 1;
    coeffs[2] = ((${C} + 2) * oneMinusAbsS - (${C} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${C} * twoMinusAbsS - 5 * ${C}) * twoMinusAbsS + 8 * ${C}) * twoMinusAbsS - 4 * ${C};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${S}, 4>, coefs: array<${S}, 4>) -> ${S} {
    var coefsSum: ${S} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${o.type.indices}) -> ${S} {
    var input_indices: ${i.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},f8=(i,o,a,u,p)=>{let[h,C,y,k,_]=a.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],v=i.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${v} {
      var input_indices: ${i.type.indices};
      ${i.indicesSet("input_indices",C,`max(0, min(depth, ${a[C]} - 1))`)};
      ${i.indicesSet("input_indices",y,`max(0, min(height, ${a[y]} - 1))`)};
      ${i.indicesSet("input_indices",k,`max(0, min(width, ${a[k]} - 1))`)};
      ${Vp(i,_,h,3)}
      return ${i.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${o.type.indices}) -> ${v} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${v} = originalIndices[${C}];
      var height:${v} = originalIndices[${y}];
      var width:${v} = originalIndices[${k}];
      ${u?`if (depth < 0 || depth > (${a[C]} - 1) || height < 0 || height > (${a[y]} - 1) || width < 0 || (width > ${a[k]} - 1)) {
      return ${p};
        }`:""};

    depth = max(0, min(depth, ${a[C]} - 1));
      height = max(0, min(height, ${a[y]} - 1));
      width = max(0, min(width, ${a[k]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${a.length>3?`u32(originalIndices[${_}])`:"0"};
      var batch: u32 =  ${a.length>3?`u32(originalIndices[${h}])`:"0"};

      var x111: ${v} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${v} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${v} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${v} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${v} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${v} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${v} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${v} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${v} = abs(depth - ${v}(depth1));
      var dx2: ${v} = abs(${v}(depth2) - depth);
      var dy1: ${v} = abs(height - ${v}(height1));
      var dy2: ${v} = abs(${v}(height2) - height);
      var dz1: ${v} = abs(width - ${v}(width1));
      var dz2: ${v} = abs(${v}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},g8=(i,o,a,u,p,h)=>{let C=i.dims,y=n8(h,o.axes,C.length),k=i8(C,u,p,o.axes),_=u.slice();u.length===0&&(_=C.map((Q,q)=>Q===0?1:k[q]/Q),o.keepAspectRatioPolicy!=="stretch"&&(k=o8(C,_,o)));let v=us("output",i.dataType,k.length),M=ur("input",i.dataType,C.length),B=ar.size(k),S=C.length===k.length&&C.every((Q,q)=>Q===k[q]),N=o.coordinateTransformMode==="tf_crop_and_resize",V=o.extrapolationValue,Z=M.type.value,O=Q=>`
      ${S?"":`
      ${s8(o.coordinateTransformMode,Z)};
      ${(()=>{switch(o.mode){case"nearest":return`
              ${c8(M,C)};
              ${a8(o.nearestMode,a,Z)};
              ${l8(M,v,C,k,_.length,y.length,N)};
              `;case"linear":return`
              ${A8(v,C,k,_.length,y.length)};
              ${(()=>{if(C.length===2||C.length===4)return`${u8(M,v,C,N,V)}`;if(C.length===3||C.length===5)return`${f8(M,v,C,N,V)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(C.length===2||C.length===4)return`${d8(M,v,C,k,_,y,o.cubicCoeffA,N,o.extrapolationValue,o.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${Q.registerUniform("output_size","u32").registerUniform("scales","f32",_.length).registerUniform("roi","f32",y.length).declareVariables(M,v)}
      ${Q.mainStart()}
        ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${S?"output[global_idx] = input[global_idx];":`
        let output_indices = ${v.offsetToIndices("global_idx")};
        var input_indices: ${M.type.indices};
        ${(()=>{switch(o.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${M.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${o.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${C.length===2||C.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${o.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${o.cacheKey}|${a}|${_.length>0?o.mode==="cubic"?_:_.length:""}|${p.length>0?p:""}|${y.length>0?y:""}|${S}|${o.mode==="nearest"?C.length:C}`,inputDependencies:["rank"]},getShaderSource:O,getRunData:()=>({outputs:[{dims:k,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:[{type:12,data:B},{type:1,data:_},{type:1,data:y},...bs(C,k)]})}},p8=i=>{let o=i.customDataBuffer;return new Uint32Array(o,o.byteOffset,1)[0]},h8=(i,o)=>{let a=[],u=[],p=[],h=p8(i);if(o.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");r8(i.inputs,o,h,a,u,p),i.compute(g8(i.inputs[0],o,h,a,u,p),{inputs:[0]})},m8=i=>{let o=i.antialias,a=i.axes,u=i.coordinateTransformMode,p=i.cubicCoeffA,h=i.excludeOutside!==0,C=i.extrapolationValue,y=i.keepAspectRatioPolicy,k=i.mode,_=i.nearestMode===""?"simple":i.nearestMode;return un({antialias:o,axes:a,coordinateTransformMode:u,cubicCoeffA:p,excludeOutside:h,extrapolationValue:C,keepAspectRatioPolicy:y,mode:k,nearestMode:_})}}),b8,C8,w8,Rv=xr(()=>{Qs(),Js(),Mi(),Aa(),b8=(i,o)=>{let[a,u,p,h]=i,{numHeads:C,rotaryEmbeddingDim:y}=o;if(a.dims.length!==3&&a.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${a.dims.length}`);if(!ar.areEqual(u.dims,[])&&!ar.areEqual(u.dims,[1])&&u.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${u.dims.length}`);if(p.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${p.dims.length}`);if(h.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${h.dims.length}`);if(!ar.areEqual(p.dims,h.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(y>0&&C===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let k=a.dims[0],_=a.dims[a.dims.length-2],v=p.dims[0],M=ar.sizeFromDimension(a.dims,1)/_,B=y===0?p.dims[1]*2:M/C;if(y>B)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(u.dims.length===2){if(k!==u.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${u.dims[0]}`);if(_!==u.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${u.dims[1]}`)}if(B/2!==p.dims[1]&&y/2!==p.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${p.dims[1]}`);if(_>v)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},C8=(i,o)=>{let{interleaved:a,numHeads:u,rotaryEmbeddingDim:p,scale:h}=o,C=i[0].dims[0],y=ar.sizeFromDimension(i[0].dims,1),k=i[0].dims[i[0].dims.length-2],_=y/k,v=i[2].dims[1],M=p===0?v*2:_/u,B=new Array(C,k,_/M,M-v),S=ar.computeStrides(B),N=[{type:1,data:h},{type:12,data:B},{type:12,data:S},...i[0].dims.length===3?new Array({type:12,data:[y,_,M,1]}):[],...i[0].dims.length===4?new Array({type:12,data:[y,M,k*M,1]}):[],...bs(i[0].dims,i[1].dims,i[2].dims,i[3].dims,i[0].dims)],V=Z=>{let O=ur("input",i[0].dataType,i[0].dims.length),Q=ur("position_ids",i[1].dataType,i[1].dims.length),q=ur("cos_cache",i[2].dataType,i[2].dims.length),f=ur("sin_cache",i[3].dataType,i[3].dims.length),I=us("output",i[0].dataType,i[0].dims.length);return Z.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:B.length},{name:"global_strides",type:"u32",length:S.length},{name:"input_output_strides",type:"u32",length:S.length}]),`
        ${Z.declareVariables(O,Q,q,f,I)}

        ${Z.mainStart(Tf)}
          let half_rotary_emb_dim = uniforms.${q.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${Q.broadcastedIndicesToOffset("bsnh.xy",us("",Q.type.tensor,2))};
            let position_id =
                u32(${Q.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${a});
            let j = i + select(half_rotary_emb_dim, 1, ${a});
            let re = ${O.getByOffset("i")} * ${q.get("position_id","bsnh[3]")} -
                ${O.getByOffset("j")} * ${f.get("position_id","bsnh[3]")};
            ${I.setByOffset("i","re")}
            let im = ${O.getByOffset("i")} * ${f.get("position_id","bsnh[3]")} +
                ${O.getByOffset("j")} * ${q.get("position_id","bsnh[3]")};
            ${I.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${I.setByOffset("k",O.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:un({interleaved:a}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:V,getRunData:()=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(ar.size(B)/Tf)},programUniforms:N})}},w8=(i,o)=>{b8(i.inputs,o),i.compute(C8(i.inputs,o))}}),I8,y8,k8,jv=xr(()=>{Qs(),Js(),Aa(),I8=i=>{if(!i||i.length<3)throw new Error("layerNorm requires at least 3 inputs.");let o=i[0],a=i[1],u=i[2];if(o.dataType!==a.dataType||o.dataType!==u.dataType)throw new Error("All inputs must have the same data type");if(o.dims.length!==3&&o.dims.length!==2)throw new Error("Input must be 2D or 3D");if(a.dims.length!==3&&a.dims.length!==2)throw new Error("Skip must be 2D or 3D");let p=o.dims[o.dims.length-1],h=o.dims[o.dims.length-2];if(a.dims[a.dims.length-1]!==p)throw new Error("Skip must have the same hidden size as input");if(a.dims[a.dims.length-2]!==h)throw new Error("Skip must have the same sequence length as input");if(u.dims.length!==1)throw new Error("Gamma must be 1D");if(u.dims[u.dims.length-1]!==p)throw new Error("Gamma must have the same hidden size as input");if(i.length>3){let C=i[3];if(C.dims.length!==1)throw new Error("Beta must be 1D");if(C.dims[C.dims.length-1]!==p)throw new Error("Beta must have the same hidden size as input")}if(i.length>4){let C=i[4];if(C.dims.length!==1)throw new Error("Bias must be 1D");if(C.dims[C.dims.length-1]!==p)throw new Error("Bias must have the same hidden size as input")}},y8=(i,o,a,u)=>{let p=o.simplified,h=i[0].dims,C=ar.size(h),y=h,k=C,_=h.slice(-1)[0],v=u?h.slice(0,-1).concat(1):[],M=!p&&i.length>3,B=i.length>4,S=u&&a>1,N=u&&a>2,V=a>3,Z=64,O=li(_),Q=[{type:12,data:k},{type:12,data:O},{type:12,data:_},{type:1,data:o.epsilon}],q=I=>{let e=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],c=[ur("x",i[0].dataType,i[0].dims,O),ur("skip",i[1].dataType,i[1].dims,O),ur("gamma",i[2].dataType,i[2].dims,O)];M&&c.push(ur("beta",i[3].dataType,i[3].dims,O)),B&&c.push(ur("bias",i[4].dataType,i[4].dims,O)),c.push(us("output",i[0].dataType,y,O)),S&&c.push(us("mean_output",1,v)),N&&c.push(us("inv_std_output",1,v)),V&&c.push(us("input_skip_bias_sum",i[0].dataType,y,O));let P=so(i[0].dataType),J=so(1,O);return`

      ${I.registerUniforms(e).declareVariables(...c)}
      var<workgroup> sum_shared : array<${J}, ${Z}>;
      var<workgroup> sum_squared_shared : array<${J}, ${Z}>;

      ${I.mainStart([Z,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${Z};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${Z};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${Z-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${B?"bias[offset1d + i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${V?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Pf(P,O,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${Z};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Vc("sum",O)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Vc("square_sum",O)} / f32(uniforms.hidden_size) ${p?"":"- mean * mean"} + uniforms.epsilon);
        ${S?"mean_output[global_idx] = mean;":""}
        ${N?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${p?"":`- ${P}(mean)`}) *
            ${P}(inv_std_dev) * gamma[offset1d + i]
            ${M?"+ beta[offset1d + i]":""};
        }
      }`},f=[{dims:y,dataType:i[0].dataType}];return a>1&&f.push({dims:v,dataType:1}),a>2&&f.push({dims:v,dataType:1}),a>3&&f.push({dims:h,dataType:i[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${O};${S};${N};${V}`,inputDependencies:i.map((I,e)=>"type")},getShaderSource:q,getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(k/_)},programUniforms:Q})}},k8=(i,o)=>{I8(i.inputs);let a=[0];i.outputCount>1&&a.push(-3),i.outputCount>2&&a.push(-3),i.outputCount>3&&a.push(3),i.compute(y8(i.inputs,o,i.outputCount,!1),{outputs:a})}}),_8,n2,v8,Wp,x8,M8,E8,B8,Vv=xr(()=>{Qs(),Js(),Mi(),Aa(),_8=(i,o)=>{if(!i||i.length<1)throw new Error("too few inputs");if(o.axes.length!==0){if(o.axes.length!==o.starts.length||o.axes.length!==o.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(o.starts.length!==o.ends.length)throw new Error("starts and ends must have the same length");i.slice(1).forEach((a,u)=>{if(i[u+1].dataType!==6&&i[u+1].dataType!==7)throw new Error(`Input ${u} must be an array of int32 or int64`)})},n2=(i,o)=>{let a=[];if(i.length>o)if(i[o].dataType===7)i[o].getBigInt64Array().forEach(u=>a.push(Number(u)));else if(i[o].dataType===6)i[o].getInt32Array().forEach(u=>a.push(Number(u)));else throw new Error(`Input ${o} must be an array of int32 or int64`);return a},v8=(i,o)=>{if(i.length>1){let a=n2(i,1),u=n2(i,2),p=n2(i,3);return p.length===0&&(p=[...Array(i[0].dims.length).keys()]),un({starts:a,ends:u,axes:p})}else return o},Wp=(i,o,a,u,p)=>{let h=i;return i<0&&(h+=a[u[o]]),p[o]<0?Math.max(0,Math.min(h,a[u[o]]-1)):Math.max(0,Math.min(h,a[u[o]]))},x8=(i,o,a)=>`fn calculateInputIndices(output_indices: ${o.type.indices}) -> ${i.type.indices} {
          var input_indices: ${i.type.indices};
          var carry = 0u;
          for (var i = ${a.length}; i >= 0; i--) {
            let input_shape_i = ${ms("uniforms.input_shape","i",a.length)};
            let steps_i = ${ms("uniforms.steps","i",a.length)};
            let signs_i = ${ms("uniforms.signs","i",a.length)};
            let starts_i = ${ms("uniforms.starts","i",a.length)};
            var output_index = ${o.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${i.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,M8=(i,o)=>{let a=i[0].dims,u=ar.size(a),p=o.axes.length>0?ar.normalizeAxes(o.axes,a.length):[...Array(a.length).keys()],h=n2(i,4);h.forEach(O=>O!==0||(()=>{throw new Error("step cannot be 0")})),h.length===0&&(h=Array(p.length).fill(1));let C=o.starts.map((O,Q)=>Wp(O,Q,a,p,h)),y=o.ends.map((O,Q)=>Wp(O,Q,a,p,h));if(p.length!==C.length||p.length!==y.length)throw new Error("start, ends and axes should have the same number of elements");if(p.length!==a.length)for(let O=0;O<a.length;++O)p.includes(O)||(C.splice(O,0,0),y.splice(O,0,a[O]),h.splice(O,0,1));let k=h.map(O=>Math.sign(O));h.forEach((O,Q,q)=>{if(O<0){let f=(y[Q]-C[Q])/O,I=C[Q],e=I+f*h[Q];C[Q]=e,y[Q]=I,q[Q]=-O}});let _=a.slice(0);p.forEach((O,Q)=>{_[O]=Math.ceil((y[O]-C[O])/h[O])});let v={dims:_,dataType:i[0].dataType},M=us("output",i[0].dataType,_.length),B=ur("input",i[0].dataType,i[0].dims.length),S=ar.size(_),N=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:C.length},{name:"signs",type:"i32",length:k.length},{name:"steps",type:"u32",length:h.length}],V=[{type:12,data:S},{type:12,data:C},{type:6,data:k},{type:12,data:h},...bs(i[0].dims,_)],Z=O=>`
      ${O.registerUniforms(N).declareVariables(B,M)}
        ${x8(B,M,a)}
        ${O.mainStart()}
          ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${M.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${M.setByOffset("global_idx",B.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${k.length}_${C.length}_${h.length}`,inputDependencies:["rank"]},getShaderSource:Z,getRunData:()=>({outputs:[v],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:V})}},E8=(i,o)=>{_8(i.inputs,o);let a=v8(i.inputs,o);i.compute(M8(i.inputs,a),{inputs:[0]})},B8=i=>{let o=i.starts,a=i.ends,u=i.axes;return un({starts:o,ends:a,axes:u})}}),T8,P8,D8,S8,Wv=xr(()=>{Qs(),Js(),Mi(),Wc(),Aa(),T8=i=>{if(!i||i.length!==1)throw new Error("Softmax op requires 1 input.")},P8=(i,o)=>{let a=i.inputs[0],u=a.dims,p=ar.size(u),h=u.length,C=ar.normalizeAxis(o.axis,h),y=C<u.length-1,k,_=[];y?(_=Array.from({length:h},(c,P)=>P),_[C]=h-1,_[h-1]=C,k=i.compute(il(a,_),{inputs:[a],outputs:[-1]})[0]):k=a;let v=k.dims,M=v[h-1],B=p/M,S=li(M),N=M/S,V=64;B===1&&(V=256);let Z=(c,P)=>P===4?`max(max(${c}.x, ${c}.y), max(${c}.z, ${c}.w))`:P===2?`max(${c}.x, ${c}.y)`:P===3?`max(max(${c}.x, ${c}.y), ${c}.z)`:c,O=ur("x",k.dataType,k.dims,S),Q=us("result",k.dataType,k.dims,S),q=O.type.value,f=so(k.dataType)==="f32"?`var threadMax = ${q}(-3.402823e+38f);`:`var threadMax = ${q}(-65504.0h);`,I=c=>`
      var<workgroup> rowMaxShared : ${q};
      var<workgroup> rowSumShared : ${q};
      var<workgroup> threadShared : array<${q}, ${V}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${q} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${q}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${c.registerUniform("packedCols","i32").declareVariables(O,Q)}
      ${c.mainStart(V)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${V};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${f}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${q}(${Z("threadShared[0]",S)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${q}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${q}(${Vc("threadShared[0]",S)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,e=i.compute({name:"Softmax",shaderCache:{hint:`${S};${V}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:v,dataType:k.dataType}],dispatchGroup:{x:B},programUniforms:[{type:6,data:N}]}),getShaderSource:I},{inputs:[k],outputs:[y?-1:0]})[0];y&&i.compute(il(e,_),{inputs:[e]})},D8=(i,o)=>{T8(i.inputs),P8(i,o)},S8=i=>un({axis:i.axis})}),Up,G8,F8,z8,O8,Uv=xr(()=>{Qs(),Js(),Aa(),Up=i=>Array.from(i.getBigInt64Array(),Number),G8=i=>{if(!i||i.length!==2)throw new Error("Tile requires 2 inputs.");if(i[0].dataType!==1&&i[0].dataType!==10&&i[0].dataType!==6&&i[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(i[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(i[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Up(i[1]).length!==i[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},F8=(i,o)=>{let a=[];for(let u=0;u<i.length;++u)a.push(i[u]*o[u]);return a},z8=(i,o)=>{let a=i[0].dims,u=o??Up(i[1]),p=F8(a,u),h=ar.size(p),C=i[0].dataType,y=ur("input",C,a.length),k=us("output",C,p.length),_=v=>`
      const inputShape = ${y.indices(...a)};
      ${v.registerUniform("output_size","u32").declareVariables(y,k)}
      ${v.mainStart()}
      ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${k.offsetToIndices("global_idx")};
      var input_indices: ${y.type.indices};
      for (var i = 0; i < ${a.length}; i++) {
        let input_dim_i = ${y.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${k.indicesGet("output_indices","i")}  % input_dim_i;

        ${y.indicesSet("input_indices","i","input_dim_value")}
      }
      ${k.setByOffset("global_idx",y.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${u}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},...bs(i[0].dims,p)]}),getShaderSource:_}},O8=i=>{G8(i.inputs),i.compute(z8(i.inputs),{inputs:[0]})}}),Q8,N8,L8,Hv=xr(()=>{Qs(),Js(),Aa(),Q8=(i,o,a,u,p)=>{let h=us("output_data",p,a.length,4),C=ur("a_data",o[1].dataType,o[1].dims.length,4),y=ur("b_data",o[2].dataType,o[2].dims.length,4),k=ur("c_data",o[0].dataType,o[0].dims.length,4),_,v=(M,B,S)=>`select(${B}, ${M}, ${S})`;if(!u)_=h.setByOffset("global_idx",v(C.getByOffset("global_idx"),y.getByOffset("global_idx"),k.getByOffset("global_idx")));else{let M=(B,S,N="")=>{let V=`a_data[index_a${S}][component_a${S}]`,Z=`b_data[index_b${S}][component_b${S}]`,O=`bool(c_data[index_c${S}] & (0xffu << (component_c${S} * 8)))`;return`
            let output_indices${S} = ${h.offsetToIndices(`global_idx * 4u + ${S}u`)};
            let offset_a${S} = ${C.broadcastedIndicesToOffset(`output_indices${S}`,h)};
            let offset_b${S} = ${y.broadcastedIndicesToOffset(`output_indices${S}`,h)};
            let offset_c${S} = ${k.broadcastedIndicesToOffset(`output_indices${S}`,h)};
            let index_a${S} = offset_a${S} / 4u;
            let index_b${S} = offset_b${S} / 4u;
            let index_c${S} = offset_c${S} / 4u;
            let component_a${S} = offset_a${S} % 4u;
            let component_b${S} = offset_b${S} % 4u;
            let component_c${S} = offset_c${S} % 4u;
            ${B}[${S}] = ${N}(${v(V,Z,O)});
          `};p===9?_=`
            var data = vec4<u32>(0);
            ${M("data",0,"u32")}
            ${M("data",1,"u32")}
            ${M("data",2,"u32")}
            ${M("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:_=`
            ${M("output_data[global_idx]",0)}
            ${M("output_data[global_idx]",1)}
            ${M("output_data[global_idx]",2)}
            ${M("output_data[global_idx]",3)}
          `}return`
        ${i.registerUniform("vec_size","u32").declareVariables(k,C,y,h)}
        ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${_}
      }`},N8=i=>{let o=i[1].dims,a=i[2].dims,u=i[0].dims,p=i[1].dataType,h=!(ar.areEqual(o,a)&&ar.areEqual(a,u)),C=o,y=ar.size(o);if(h){let _=Bf.calcShape(Bf.calcShape(o,a,!1),u,!1);if(!_)throw new Error("Can't perform where op on the given tensors");C=_,y=ar.size(C)}let k=Math.ceil(y/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:_=>Q8(_,i,C,h,p),getRunData:()=>({outputs:[{dims:C,dataType:p}],dispatchGroup:{x:Math.ceil(y/64/4)},programUniforms:[{type:12,data:k},...bs(u,o,a,C)]})}},L8=i=>{i.compute(N8(i.inputs))}}),R8,Yv=xr(()=>{iv(),op(),ov(),Av(),lv(),cv(),uv(),hv(),bv(),Cv(),wv(),Iv(),yv(),kv(),_v(),vv(),xv(),Mv(),Ev(),Bv(),Tv(),Pv(),Dv(),Sv(),Gv(),eI(),Fv(),zv(),Ov(),Qv(),Nv(),ap(),Lv(),Rv(),jv(),Vv(),Wv(),oI(),Uv(),Wc(),up(),Hv(),R8=new Map([["Abs",[yC]],["Acos",[kC]],["Acosh",[_C]],["Add",[uw]],["ArgMax",[oC,ip]],["ArgMin",[iC,ip]],["Asin",[vC]],["Asinh",[xC]],["Atan",[MC]],["Atanh",[EC]],["Attention",[fC]],["AveragePool",[zI,FI]],["BatchNormalization",[mC]],["BiasAdd",[wC]],["BiasSplitGelu",[Aw]],["Cast",[TC,BC]],["Ceil",[SC]],["Clip",[DC]],["Concat",[vw,xw]],["Conv",[_p,yp]],["ConvTranspose",[$w,Xw]],["Cos",[GC]],["Cosh",[FC]],["CumSum",[t3,r3]],["DepthToSpace",[i3,o3]],["DequantizeLinear",[UI,HI]],["Div",[dw]],["Einsum",[f3,g3]],["Elu",[zC,$f]],["Equal",[fw]],["Erf",[OC]],["Exp",[QC]],["Expand",[b3]],["FastGelu",[w3]],["Floor",[NC]],["FusedConv",[_p,yp]],["Gather",[_3,k3]],["GatherElements",[F3,G3]],["GatherBlockQuantized",[T3,P3]],["GatherND",[x3,M3]],["Gelu",[LC]],["Gemm",[N3,Q3]],["GlobalAveragePool",[QI,OI]],["GlobalMaxPool",[jI,RI]],["Greater",[mw]],["GreaterOrEqual",[Cw]],["GridSample",[K3,q3]],["GroupQueryAttention",[cI]],["HardSigmoid",[KC,YC]],["InstanceNormalization",[fI]],["LayerNormalization",[hI]],["LeakyRelu",[RC,$f]],["Less",[bw]],["LessOrEqual",[ww]],["Log",[rw]],["MatMul",[bI]],["MatMulNBits",[yI,kI]],["MaxPool",[NI,LI]],["Mul",[gw]],["MultiHeadAttention",[$3,Z3]],["Neg",[VC]],["Not",[jC]],["Pad",[DI]],["Pow",[pw]],["QuickGelu",[nw,$f]],["Range",[qI]],["Reciprocal",[WC]],["ReduceMin",[tC]],["ReduceMean",[Xb]],["ReduceMax",[eC]],["ReduceSum",[sC]],["ReduceProd",[rC]],["ReduceL1",[Zb]],["ReduceL2",[Jb]],["ReduceLogSum",[nC]],["ReduceLogSumExp",[$b]],["ReduceSumSquare",[aC]],["Relu",[UC]],["Resize",[h8,m8]],["RotaryEmbedding",[w8]],["ScatterND",[$I,JI]],["Sigmoid",[HC]],["Sin",[qC]],["Sinh",[XC]],["Slice",[E8,B8]],["SkipLayerNormalization",[k8]],["Split",[nI,iI]],["Sqrt",[ZC]],["Softmax",[D8,S8]],["Sub",[hw]],["Tan",[JC]],["Tanh",[$C]],["ThresholdedRelu",[tw,$f]],["Tile",[O8]],["Transpose",[mb,bb]],["Where",[L8]]])}),j8,Kv=xr(()=>{jl(),E0(),Aa(),j8=class{constructor(i){this.backend=i,this.repo=new Map,this.attributesBound=!1}getArtifact(i){return this.repo.get(i)}setArtifact(i,o){this.repo.set(i,o)}run(i,o,a,u,p){Rl(i.programInfo.name);let h=this.backend.device,C=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let y=[];for(let _ of o)y.push({binding:y.length,resource:{buffer:_.buffer}});for(let _ of a)y.push({binding:y.length,resource:{buffer:_.buffer}});p&&y.push({binding:y.length,resource:p});let k=h.createBindGroup({layout:i.computePipeline.getBindGroupLayout(0),entries:y,label:i.programInfo.name});if(this.backend.sessionStatus==="capturing"){let _={kernelId:this.backend.currentKernelId,computePipeline:i.computePipeline,bindGroup:k,dispatchGroup:u};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(_)}C.setPipeline(i.computePipeline),C.setBindGroup(0,k),C.dispatchWorkgroups(...u),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ml(i.programInfo.name)}dispose(){}build(i,o){Rl(i.name);let a=this.backend.device,u=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(_=>{a.features.has(_.feature)&&u.push(`enable ${_.extension};`)});let p=ub(o,this.backend.device.limits),h=i.getShaderSource(p),C=`${u.join(`
`)}
${p.additionalImplementations}
${h}`,y=a.createShaderModule({code:C,label:i.name});Ga("verbose",()=>`[WebGPU] ${i.name} shader code: ${C}`);let k=a.createComputePipeline({compute:{module:y,entryPoint:"main"},layout:"auto",label:i.name});return Ml(i.name),{programInfo:i,computePipeline:k,uniformVariablesInfo:p.variablesInfo}}normalizeDispatchGroupSize(i){let o=typeof i=="number"?i:i.x,a=typeof i=="number"?1:i.y||1,u=typeof i=="number"?1:i.z||1,p=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(o<=p&&a<=p&&u<=p)return[o,a,u];let h=o*a*u,C=Math.ceil(Math.sqrt(h));if(C>p){if(C=Math.ceil(Math.cbrt(h)),C>p)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[C,C,C]}else return[C,C,1]}}}),V8,W8,U8,H8,qv=xr(()=>{jl(),Qs(),E0(),$m(),av(),Yv(),Kv(),V8=(i,o)=>{if(o.length!==i.length)throw new Error(`inputDependencies length ${o.length} is not equal to inputTensors length ${i.length}.`);let a=[];for(let u=0;u<i.length;++u){let p=i[u].dataType;switch(o[u]){case"none":{a.push("");break}case"type":{a.push(`${p}`);break}case"rank":{let h=i[u].dims.length;a.push(`${p};${h}`);break}case"dims":{let h=i[u].dims.join(",");a.push(`${p};${h}`);break}default:throw new Error(`unsupported input dependency: ${o[u]}`)}}return a.join("|")},W8=(i,o,a)=>{var p,h;let u=i.name;return(p=i.shaderCache)!=null&&p.hint&&(u+="["+i.shaderCache.hint+"]"),u+=":"+a+`:${V8(o,((h=i.shaderCache)==null?void 0:h.inputDependencies)??new Array(o.length).fill("dims"))}`,u},U8=class{constructor(i){i&&(this.architecture=i.architecture,this.vendor=i.vendor)}isArchitecture(i){return this.architecture===i}isVendor(i){return this.vendor===i}},H8=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let i=this.kernelCustomData.get(this.currentKernelId);return i||(i={},this.kernelCustomData.set(this.currentKernelId,i)),i}async initialize(i,o){this.env=i;let a=[],u={requiredLimits:{maxComputeWorkgroupStorageSize:o.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:o.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:o.limits.maxStorageBufferBindingSize,maxBufferSize:o.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:o.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:o.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:o.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:o.limits.maxComputeWorkgroupSizeZ},requiredFeatures:a},p=h=>o.features.has(h)&&a.push(h)&&!0;p("chromium-experimental-timestamp-query-inside-passes")||p("timestamp-query"),p("shader-f16"),p("subgroups"),this.device=await o.requestDevice(u),this.adapterInfo=new U8(o.info||await o.requestAdapterInfo()),this.gpuDataManager=sb(this),this.programManager=new j8(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Kg(i.logLevel,!!i.debug),this.device.onuncapturederror=h=>{h.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${h.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:o,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let i=this.getCommandEncoder(),o={};this.queryType==="at-passes"&&(o.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=i.beginComputePass(o)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Rl(),this.endComputePass();let i;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),i=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(i,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,i,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&i.mapAsync(GPUMapMode.READ).then(()=>{var u;let o=new BigUint64Array(i.getMappedRange()),a=this.pendingQueries.get(i);for(let p=0;p<o.length/2;p++){let h=a[p],C=h.kernelId,y=this.kernels.get(C),k=y.kernelType,_=y.kernelName,v=h.programName,M=h.inputTensorViews,B=h.outputTensorViews,S=o[p*2],N=o[p*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=S);let V=Number(S-this.queryTimeBase),Z=Number(N-this.queryTimeBase);if(!Number.isSafeInteger(V)||!Number.isSafeInteger(Z))throw new RangeError("incorrect timestamp range");if((u=this.env.webgpu.profiling)!=null&&u.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:M.map(O=>({dims:O.dims,dataType:Dd(O.dataType)})),outputsMetadata:B.map(O=>({dims:O.dims,dataType:Dd(O.dataType)})),kernelId:C,kernelType:k,kernelName:_,programName:v,startTime:V,endTime:Z});else{let O="";M.forEach((q,f)=>{O+=`input[${f}]: [${q.dims}] | ${Dd(q.dataType)}, `});let Q="";B.forEach((q,f)=>{Q+=`output[${f}]: [${q.dims}] | ${Dd(q.dataType)}, `}),console.log(`[profiling] kernel "${C}|${k}|${_}|${v}" ${O}${Q}execution time: ${Z-V} ns`)}qf("GPU",`${v}::${S}::${N}`)}i.unmap(),this.pendingQueries.delete(i)}),Ml()}run(i,o,a,u,p,h){Rl(i.name);let C=[];for(let Q=0;Q<o.length;++Q){let q=o[Q].data;if(q===0)continue;let f=this.gpuDataManager.get(q);if(!f)throw new Error(`no GPU data for input: ${q}`);C.push(f)}let{outputs:y,dispatchGroup:k,programUniforms:_}=i.getRunData(o),v=a.length===0?y.map((Q,q)=>q):a;if(v.length!==y.length)throw new Error(`Output size ${v.length} must be equal to ${y.length}.`);let M=[],B=[];for(let Q=0;Q<y.length;++Q){if(!Number.isInteger(v[Q])||v[Q]<-3||v[Q]>=h)throw new Error(`Invalid output index: ${v[Q]}`);if(v[Q]===-3)continue;let q=v[Q]===-1,f=v[Q]===-2,I=q||f?p(y[Q].dataType,y[Q].dims):u(v[Q],y[Q].dataType,y[Q].dims);if(M.push(I),I.data===0)continue;let e=this.gpuDataManager.get(I.data);if(!e)throw new Error(`no GPU data for output: ${I.data}`);if(q&&this.temporaryData.push(e),f){let c=this.kernelPersistentData.get(this.currentKernelId);c||(c=[],this.kernelPersistentData.set(this.currentKernelId,c)),c.push(e)}B.push(e)}if(C.length!==o.length||B.length!==M.length){if(B.length===0)return Ml(i.name),M;throw new Error(`Program ${i.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let S;if(_){let Q=0,q=[];_.forEach(c=>{let P=typeof c.data=="number"?[c.data]:c.data;if(P.length===0)return;let J=c.type===10?2:4,D,j;c.type===10?(j=P.length>4?16:P.length>2?8:P.length*J,D=P.length>4?16:J*P.length):(j=P.length<=2?P.length*J:16,D=16),Q=Math.ceil(Q/j)*j,q.push(Q);let Ie=c.type===10?8:4;Q+=P.length>4?Math.ceil(P.length/Ie)*D:P.length*J});let f=16;Q=Math.ceil(Q/f)*f;let I=new ArrayBuffer(Q);_.forEach((c,P)=>{let J=q[P],D=typeof c.data=="number"?[c.data]:c.data;if(c.type===6)new Int32Array(I,J,D.length).set(D);else if(c.type===12)new Uint32Array(I,J,D.length).set(D);else if(c.type===10)new Uint16Array(I,J,D.length).set(D);else if(c.type===1)new Float32Array(I,J,D.length).set(D);else throw new Error(`Unsupported uniform type: ${Dd(c.type)}`)});let e=this.gpuDataManager.create(Q,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(e.buffer,0,I,0,Q),this.gpuDataManager.release(e.id),S={offset:0,size:Q,buffer:e.buffer}}let N=this.programManager.normalizeDispatchGroupSize(k),V=N[1]===1&&N[2]===1,Z=W8(i,o,V),O=this.programManager.getArtifact(Z);if(O||(O=this.programManager.build(i,N),this.programManager.setArtifact(Z,O),Ga("info",()=>`[artifact] key: ${Z}, programName: ${i.name}`)),_&&O.uniformVariablesInfo){if(_.length!==O.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${O.uniformVariablesInfo.length}, got ${_.length} in program "${O.programInfo.name}".`);for(let Q=0;Q<_.length;Q++){let q=_[Q],f=q.type,I=typeof q.data=="number"?1:q.data.length,[e,c]=O.uniformVariablesInfo[Q];if(f!==e||I!==c)throw new Error(`Uniform variable ${Q} mismatch: expect type ${e} with size ${c}, got type ${f} with size ${I} in program "${O.programInfo.name}".`)}}if(Ga("info",()=>`[ProgramManager] run "${i.name}" (key=${Z}) with ${N[0]}x${N[1]}x${N[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Q={kernelId:this.currentKernelId,programName:O.programInfo.name,inputTensorViews:o,outputTensorViews:M};this.pendingKernels.push(Q),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Q)}return this.programManager.run(O,C,B,N,S),Ml(i.name),M}upload(i,o){this.gpuDataManager.upload(i,o)}memcpy(i,o){this.gpuDataManager.memcpy(i,o)}async download(i,o){await this.gpuDataManager.download(i,o)}alloc(i){return this.gpuDataManager.create(i).id}free(i){return this.gpuDataManager.release(i)}createKernel(i,o,a,u){let p=R8.get(i);if(!p)throw new Error(`kernel not implemented: ${i}`);let h={kernelType:i,kernelName:u,kernelEntry:p[0],attributes:[p[1],a]};this.kernels.set(o,h)}releaseKernel(i){let o=this.kernelPersistentData.get(i);if(o){for(let a of o)this.gpuDataManager.release(a.id);this.kernelPersistentData.delete(i)}this.kernelCustomData.delete(i),this.kernels.delete(i)}computeKernel(i,o,a){let u=this.kernels.get(i);if(!u)throw new Error(`kernel not created: ${i}`);let p=u.kernelType,h=u.kernelName,C=u.kernelEntry,y=u.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${p}] ${h}" is not allowed to be called recursively`);this.currentKernelId=i,y[0]&&(y[1]=y[0](y[1]),y[0]=void 0),Ga("info",()=>`[WebGPU] Start to run kernel "[${p}] ${h}"...`);let k=this.env.debug;this.temporaryData=[];try{return k&&this.device.pushErrorScope("validation"),C(o,y[1]),0}catch(_){return a.push(Promise.resolve(`[WebGPU] Kernel "[${p}] ${h}" failed. ${_}`)),1}finally{k&&a.push(this.device.popErrorScope().then(_=>_?`GPU validation error for kernel "[${p}] ${h}": ${_.message}`:null));for(let _ of this.temporaryData)this.gpuDataManager.release(_.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(i,o,a,u){let p=this.sessionExternalDataMapping.get(i);p||(p=new Map,this.sessionExternalDataMapping.set(i,p));let h=p.get(o),C=this.gpuDataManager.registerExternalBuffer(a,u,h);return p.set(o,[C,a]),C}unregisterBuffers(i){let o=this.sessionExternalDataMapping.get(i);o&&(o.forEach(a=>this.gpuDataManager.unregisterExternalBuffer(a[0])),this.sessionExternalDataMapping.delete(i))}getBuffer(i){let o=this.gpuDataManager.get(i);if(!o)throw new Error(`no GPU data for buffer: ${i}`);return o.buffer}createDownloader(i,o,a){return async()=>{let u=await $g(this,i,o);return qg(u.buffer,a)}}writeTimestamp(i){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,i)}setQueryType(){var i;this.queryType="none",(((i=this.env.webgpu.profiling)==null?void 0:i.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ga("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ga("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ga("info","replay"),this.sessionStatus="replaying";let i=this.capturedCommandList.get(this.currentSessionId),o=this.capturedPendingKernels.get(this.currentSessionId),a=i.length;this.pendingKernels=[];for(let u=0;u<a;u++){let p=this.getComputePassEncoder(),h=i[u];this.writeTimestamp(this.pendingDispatchNumber*2),p.setPipeline(h.computePipeline),p.setBindGroup(0,h.bindGroup),p.dispatchWorkgroups(...h.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(o[u]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(i){this.unregisterBuffers(i),this.capturedCommandList.has(i)&&this.capturedCommandList.delete(i),this.capturedPendingKernels.has(i)&&this.capturedPendingKernels.delete(i),this.gpuDataManager.onReleaseSession(i)}onRunStart(i){this.currentSessionId=i,this.setQueryType()}}}),Y8,Hp,K8,Yp,Kp,qp,q8,X8,Xv=xr(()=>{E0(),Y8=1,Hp=()=>Y8++,K8=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Yp=(i,o)=>{let a=K8.get(i);if(!a)throw new Error("Unsupported data type.");return o.length>0?Math.ceil(o.reduce((u,p)=>u*p)*a/8):0},Kp=class{constructor(i){this.sessionId=i.sessionId,this.mlContext=i.context,this.mlTensor=i.tensor,this.dataType=i.dataType,this.tensorShape=i.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Yp(this.dataType,this.tensorShape)}destroy(){Ga("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(i){this.mlContext.writeTensor(this.mlTensor,i)}async read(i){return i?this.mlContext.readTensor(this.mlTensor,i):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(i,o,a){return this.mlContext===i&&this.dataType===o&&this.tensorShape.length===a.length&&this.tensorShape.every((u,p)=>u===a[p])}},qp=class{constructor(i,o){this.tensorManager=i,this.wrapper=o}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(i,o,a,u){let p=this.tensorManager.getMLContext(i);if(this.wrapper){if(this.wrapper.canReuseTensor(p,o,a))return this.wrapper.tensor;if(u){if(this.wrapper.byteLength!==Yp(o,a))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let h=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(i,o,a,h,!0,!0),u&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(i){if(this.wrapper)if(i.byteLength===this.wrapper.byteLength){this.wrapper.write(i);return}else Ga("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(i):this.activeUpload=new Uint8Array(i)}async download(i){if(this.activeUpload)if(i){i instanceof ArrayBuffer?new Uint8Array(i).set(this.activeUpload):new Uint8Array(i.buffer,i.byteOffset,i.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return i?this.wrapper.read(i):this.wrapper.read()}},q8=class{constructor(i){this.backend=i,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(i){let o=this.backend.getMLContext(i);if(!o)throw new Error("MLContext not found for session.");return o}reserveTensorId(){let i=Hp();return this.tensorTrackersById.set(i,new qp(this)),i}releaseTensorId(i){let o=this.tensorTrackersById.get(i);o&&(this.tensorTrackersById.delete(i),o.tensorWrapper&&this.releaseTensor(o.tensorWrapper))}async ensureTensor(i,o,a,u,p){Ga("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${o}, dataType: ${a}, shape: ${u}, copyOld: ${p}}`);let h=this.tensorTrackersById.get(o);if(!h)throw new Error("Tensor not found.");return h.ensureTensor(i,a,u,p)}upload(i,o){let a=this.tensorTrackersById.get(i);if(!a)throw new Error("Tensor not found.");a.upload(o)}async download(i,o){Ga("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${i}, dstBuffer: ${o==null?void 0:o.byteLength}}`);let a=this.tensorTrackersById.get(i);if(!a)throw new Error("Tensor not found.");return a.download(o)}releaseTensorsForSession(i){for(let o of this.freeTensors)o.sessionId===i&&o.destroy();this.freeTensors=this.freeTensors.filter(o=>o.sessionId!==i)}registerTensor(i,o,a,u){let p=this.getMLContext(i),h=Hp(),C=new Kp({sessionId:i,context:p,tensor:o,dataType:a,shape:u});return this.tensorTrackersById.set(h,new qp(this,C)),this.externalTensors.add(C),h}async getCachedTensor(i,o,a,u,p,h){let C=this.getMLContext(i);for(let[k,_]of this.freeTensors.entries())if(_.canReuseTensor(C,o,a)){Ga("verbose",()=>`[WebNN] Reusing tensor {dataType: ${o}, shape: ${a}}`);let v=this.freeTensors.splice(k,1)[0];return v.sessionId=i,v}Ga("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${o}, shape: ${a}}`);let y=await C.createTensor({dataType:o,shape:a,dimensions:a,usage:u,writable:p,readable:h});return new Kp({sessionId:i,context:C,tensor:y,dataType:o,shape:a})}releaseTensor(i){this.externalTensors.has(i)&&this.externalTensors.delete(i),this.freeTensors.push(i)}},X8=(...i)=>new q8(...i)}),O2,Z8,J8,Zv=xr(()=>{Qs(),Pd(),$m(),Xv(),E0(),O2=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Z8=(i,o)=>{if(i===o)return!0;if(i===void 0||o===void 0)return!1;let a=Object.keys(i).sort(),u=Object.keys(o).sort();return a.length===u.length&&a.every((p,h)=>p===u[h]&&i[p]===o[p])},J8=class{constructor(i){this.tensorManager=X8(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,Kg(i.logLevel,!!i.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(i){Ga("verbose",()=>`[WebNN] onRunStart {sessionId: ${i}}`),this.activeSessionId=i}onRunEnd(i){Ga("verbose",()=>`[WebNN] onRunEnd {sessionId: ${i}}`);let o=this.temporarySessionTensorIds.get(i);if(o){for(let a of o)Ga("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${a}}`),this.tensorManager.releaseTensorId(a);this.temporarySessionTensorIds.delete(i),this.activeSessionId=void 0}}async createMLContext(i){if(i instanceof GPUDevice){let a=this.mlContextCache.findIndex(u=>u.gpuDevice===i);if(a!==-1)return this.mlContextCache[a].mlContext;{let u=await navigator.ml.createContext(i);return this.mlContextCache.push({gpuDevice:i,mlContext:u}),u}}else if(i===void 0){let a=this.mlContextCache.findIndex(u=>u.options===void 0&&u.gpuDevice===void 0);if(a!==-1)return this.mlContextCache[a].mlContext;{let u=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:u}),u}}let o=this.mlContextCache.findIndex(a=>Z8(a.options,i));if(o!==-1)return this.mlContextCache[o].mlContext;{let a=await navigator.ml.createContext(i);return this.mlContextCache.push({options:i,mlContext:a}),a}}registerMLContext(i,o){this.mlContextBySessionId.set(i,o);let a=this.sessionIdsByMLContext.get(o);a||(a=new Set,this.sessionIdsByMLContext.set(o,a)),a.add(i),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(i,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(i){this.sessionGraphInputs.delete(i);let o=this.mlContextBySessionId.get(i);if(!o)return;this.tensorManager.releaseTensorsForSession(i),this.mlContextBySessionId.delete(i);let a=this.sessionIdsByMLContext.get(o);if(a.delete(i),a.size===0){this.sessionIdsByMLContext.delete(o);let u=this.mlContextCache.findIndex(p=>p.mlContext===o);u!==-1&&this.mlContextCache.splice(u,1)}}getMLContext(i){return this.mlContextBySessionId.get(i)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(i){Ga("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${i}}`),this.tensorManager.releaseTensorId(i)}async ensureTensor(i,o,a,u,p){let h=O2.get(a);if(!h)throw new Error(`Unsupported ONNX data type: ${a}`);return this.tensorManager.ensureTensor(i??this.currentSessionId,o,h,u,p)}async createTemporaryTensor(i,o,a){Ga("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${o}, shape: ${a}}`);let u=O2.get(o);if(!u)throw new Error(`Unsupported ONNX data type: ${o}`);let p=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(i,p,u,a,!1);let h=this.temporarySessionTensorIds.get(i);return h?h.push(p):this.temporarySessionTensorIds.set(i,[p]),p}uploadTensor(i,o){if(!ro().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Ga("verbose",()=>`[WebNN] uploadTensor {tensorId: ${i}, data: ${o.byteLength}}`),this.tensorManager.upload(i,o)}async downloadTensor(i,o){return this.tensorManager.download(i,o)}createMLTensorDownloader(i,o){return async()=>{let a=await this.tensorManager.download(i);return qg(a,o)}}registerMLTensor(i,o,a,u){let p=O2.get(a);if(!p)throw new Error(`Unsupported ONNX data type: ${a}`);let h=this.tensorManager.registerTensor(i,o,p,u);return Ga("verbose",()=>`[WebNN] registerMLTensor {tensor: ${o}, dataType: ${p}, dimensions: ${u}} -> {tensorId: ${h}}`),h}registerMLConstant(i,o,a,u,p,h){if(!h)throw new Error("External mounted files are not available.");let C=i;i.startsWith("./")&&(C=i.substring(2));let y=h.get(C);if(!y)throw new Error(`File with name ${C} not found in preloaded files.`);if(o+a>y.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let k=y.slice(o,o+a).buffer,_;switch(p.dataType){case"float32":_=new Float32Array(k);break;case"float16":_=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(k):new Uint16Array(k);break;case"int32":_=new Int32Array(k);break;case"uint32":_=new Uint32Array(k);break;case"int64":_=new BigInt64Array(k);break;case"uint64":_=new BigUint64Array(k);break;case"int8":_=new Int8Array(k);break;case"int4":case"uint4":case"uint8":_=new Uint8Array(k);break;default:throw new Error(`Unsupported data type: ${p.dataType} in creating WebNN Constant from external data.`)}return Ga("verbose",()=>`[WebNN] registerMLConstant {dataType: ${p.dataType}, shape: ${p.shape}}}`),u.constant(p,_)}registerGraphInput(i){this.temporaryGraphInputs.push(i)}isGraphInput(i,o){let a=this.sessionGraphInputs.get(i);return a?a.includes(o):!1}flush(){}}}),$8={};Hf($8,{init:()=>ty});var Q2,ey,ty,Jv=xr(()=>{Qs(),qv(),E0(),Js(),Zv(),Q2=class qk{constructor(o,a,u,p){this.module=o,this.dataType=a,this.data=u,this.dims=p}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let o=ar.size(this.dims);return o===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,o)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let o=ar.size(this.dims);return o===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,o)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let o=ar.size(this.dims);return o===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,o)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let o=ar.size(this.dims);return o===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,o)}reshape(o){if(ar.size(o)!==ar.size(this.dims))throw new Error("Invalid new shape");return new qk(this.module,this.dataType,this.data,o)}},ey=class{constructor(i,o,a){this.module=i,this.backend=o,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=o.adapterInfo;let u=i.PTR_SIZE,p=a/i.PTR_SIZE,h=u===4?"i32":"i64";this.opKernelContext=Number(i.getValue(u*p++,h));let C=Number(i.getValue(u*p++,h));this.outputCount=Number(i.getValue(u*p++,h)),this.customDataOffset=Number(i.getValue(u*p++,"*")),this.customDataSize=Number(i.getValue(u*p++,h));let y=[];for(let k=0;k<C;k++){let _=Number(i.getValue(u*p++,h)),v=Number(i.getValue(u*p++,"*")),M=Number(i.getValue(u*p++,h)),B=[];for(let S=0;S<M;S++)B.push(Number(i.getValue(u*p++,h)));y.push(new Q2(i,_,v,B))}this.inputs=y}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(i,o){var C;let a=((C=o==null?void 0:o.inputs)==null?void 0:C.map(y=>typeof y=="number"?this.inputs[y]:y))??this.inputs,u=(o==null?void 0:o.outputs)??[],p=(y,k,_)=>new Q2(this.module,k,this.output(y,_),_),h=(y,k)=>{let _=Sd(y,k);if(!_)throw new Error(`Unsupported data type: ${y}`);let v=_>0?this.backend.gpuDataManager.create(_).id:0;return new Q2(this.module,y,v,k)};return this.backend.run(i,a,u,p,h,this.outputCount)}output(i,o){let a=this.module.stackSave();try{let u=this.module.PTR_SIZE,p=u===4?"i32":"i64",h=this.module.stackAlloc((1+o.length)*u);this.module.setValue(h,o.length,p);for(let C=0;C<o.length;C++)this.module.setValue(h+u*(C+1),o[C],p);return this.module._JsepOutput(this.opKernelContext,i,h)}catch(u){throw new Error(`Failed to generate kernel's output[${i}] with dims [${o}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${u}`)}finally{this.module.stackRestore(a)}}},ty=async(i,o,a,u)=>{let p=o.jsepInit;if(!p)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(i==="webgpu"){let h=new H8;await h.initialize(a,u),p("webgpu",[h,C=>h.alloc(Number(C)),C=>h.free(C),(C,y,k,_=!1)=>{if(_)Ga("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(C)}, dst=${Number(y)}, size=${Number(k)}`),h.memcpy(Number(C),Number(y));else{Ga("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(C)}, gpuDataId=${Number(y)}, size=${Number(k)}`);let v=o.HEAPU8.subarray(Number(C>>>0),Number(C>>>0)+Number(k));h.upload(Number(y),v)}},async(C,y,k)=>{Ga("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${C}, dataOffset=${y}, size=${k}`),await h.download(Number(C),()=>o.HEAPU8.subarray(Number(y)>>>0,Number(y+k)>>>0))},(C,y,k)=>h.createKernel(C,Number(y),k,o.UTF8ToString(o._JsepGetNodeName(Number(y)))),C=>h.releaseKernel(C),(C,y,k,_)=>{Ga("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${k}, kernel=${C}, contextDataOffset=${y}`);let v=new ey(o,h,Number(y));return h.computeKernel(Number(C),v,_)},()=>h.captureBegin(),()=>h.captureEnd(),()=>h.replay()])}else{let h=new J8(a);p("webnn",[h,()=>h.reserveTensorId(),C=>h.releaseTensorId(C),async(C,y,k,_,v)=>h.ensureTensor(C,y,k,_,v),(C,y)=>{h.uploadTensor(C,y)},async(C,y)=>h.downloadTensor(C,y)])}}}),ry,Xp,Zp,Uc,sy,N2,Jp,$p,e1,t1,r1,s1,ay=xr(()=>{rv(),sv(),Qs(),Pd(),jg(),Ym(),ry=(i,o)=>{ro()._OrtInit(i,o)!==0&&Ka("Can't initialize onnxruntime.")},Xp=async i=>{ry(i.wasm.numThreads,v2(i.logLevel))},Zp=async(i,o)=>{{let a=(Jv(),w2($8)).init;if(o==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let u=i.webgpu.adapter;if(u){if(typeof u.limits!="object"||typeof u.features!="object"||typeof u.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let p=i.webgpu.powerPreference;if(p!==void 0&&p!=="low-power"&&p!=="high-performance")throw new Error(`Invalid powerPreference setting: "${p}"`);let h=i.webgpu.forceFallbackAdapter;if(h!==void 0&&typeof h!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${h}"`);if(u=await navigator.gpu.requestAdapter({powerPreference:p,forceFallbackAdapter:h}),!u)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await a("webgpu",ro(),i,u)}if(o==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await a("webnn",ro(),i)}}},Uc=new Map,sy=i=>{let o=ro(),a=o.stackSave();try{let u=o.PTR_SIZE,p=o.stackAlloc(2*u);o._OrtGetInputOutputCount(i,p,p+u)!==0&&Ka("Can't get session input/output count.");let h=u===4?"i32":"i64";return[Number(o.getValue(p,h)),Number(o.getValue(p+u,h))]}finally{o.stackRestore(a)}},N2=i=>{let o=ro(),a=o._malloc(i.byteLength);if(a===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${i.byteLength}.`);return o.HEAPU8.set(i,a),[a,i.byteLength]},Jp=async(i,o)=>{var M,B,S;let a,u,p=ro();Array.isArray(i)?[a,u]=i:i.buffer===p.HEAPU8.buffer?[a,u]=[i.byteOffset,i.byteLength]:[a,u]=N2(i);let h=0,C=0,y=0,k=[],_=[],v=[];try{if([C,k]=Hm(o),(o==null?void 0:o.externalData)&&p.mountExternalData){let I=[];for(let e of o.externalData){let c=typeof e=="string"?e:e.path;I.push(Yg(typeof e=="string"?e:e.data).then(P=>{p.mountExternalData(c,P)}))}await Promise.all(I)}for(let I of(o==null?void 0:o.executionProviders)??[])if((typeof I=="string"?I:I.name)==="webnn"){if(p.shouldTransferToMLTensor=!1,typeof I!="string"){let e=I,c=e==null?void 0:e.context,P=e==null?void 0:e.gpuDevice,J=e==null?void 0:e.deviceType,D=e==null?void 0:e.powerPreference;c?p.currentContext=c:P?p.currentContext=await p.jsepCreateMLContext(P):p.currentContext=await p.jsepCreateMLContext({deviceType:J,powerPreference:D})}else p.currentContext=await p.jsepCreateMLContext();break}h=await p._OrtCreateSession(a,u,C),h===0&&Ka("Can't create a session."),(M=p.jsepOnCreateSession)==null||M.call(p),p.currentContext&&(p.jsepRegisterMLContext(h,p.currentContext),p.currentContext=void 0,p.shouldTransferToMLTensor=!0);let[N,V]=sy(h),Z=!!(o!=null&&o.enableGraphCapture),O=[],Q=[],q=[];for(let I=0;I<N;I++){let e=p._OrtGetInputName(h,I);e===0&&Ka("Can't get an input name."),_.push(e),O.push(p.UTF8ToString(e))}for(let I=0;I<V;I++){let e=p._OrtGetOutputName(h,I);e===0&&Ka("Can't get an output name."),v.push(e);let c=p.UTF8ToString(e);Q.push(c);{if(Z&&(o==null?void 0:o.preferredOutputLocation)===void 0){q.push("gpu-buffer");continue}let P=typeof(o==null?void 0:o.preferredOutputLocation)=="string"?o.preferredOutputLocation:((B=o==null?void 0:o.preferredOutputLocation)==null?void 0:B[c])??"cpu";if(P!=="cpu"&&P!=="cpu-pinned"&&P!=="gpu-buffer"&&P!=="ml-tensor")throw new Error(`Not supported preferred output location: ${P}.`);if(Z&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);q.push(P)}}let f=null;return q.some(I=>I==="gpu-buffer"||I==="ml-tensor")&&(y=p._OrtCreateBinding(h),y===0&&Ka("Can't create IO binding."),f={handle:y,outputPreferredLocations:q,outputPreferredLocationsEncoded:q.map(I=>Hg(I))}),Uc.set(h,[h,_,v,f,Z,!1]),[h,O,Q]}catch(N){throw _.forEach(V=>p._OrtFree(V)),v.forEach(V=>p._OrtFree(V)),y!==0&&p._OrtReleaseBinding(y)!==0&&Ka("Can't release IO binding."),h!==0&&p._OrtReleaseSession(h)!==0&&Ka("Can't release session."),N}finally{p._free(a),C!==0&&p._OrtReleaseSessionOptions(C)!==0&&Ka("Can't release session options."),k.forEach(N=>p._free(N)),(S=p.unmountExternalData)==null||S.call(p)}},$p=i=>{var k;let o=ro(),a=Uc.get(i);if(!a)throw new Error(`cannot release session. invalid session id: ${i}`);let[u,p,h,C,y]=a;C&&(y&&o._OrtClearBoundOutputs(C.handle)!==0&&Ka("Can't clear bound outputs."),o._OrtReleaseBinding(C.handle)!==0&&Ka("Can't release IO binding.")),(k=o.jsepOnReleaseSession)==null||k.call(o,i),p.forEach(_=>o._OrtFree(_)),h.forEach(_=>o._OrtFree(_)),o._OrtReleaseSession(u)!==0&&Ka("Can't release session."),Uc.delete(i)},e1=async(i,o,a,u,p,h=!1)=>{if(!i){o.push(0);return}let C=ro(),y=C.PTR_SIZE,k=i[0],_=i[1],v=i[3],M=v,B,S;if(k==="string"&&(v==="gpu-buffer"||v==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(h&&v!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${p} when enableGraphCapture is true.`);if(v==="gpu-buffer"){let Z=i[2].gpuBuffer;S=Sd(Ef(k),_);let O=C.jsepRegisterBuffer;if(!O)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');B=O(u,p,Z,S)}else if(v==="ml-tensor"){let Z=i[2].mlTensor;S=Sd(Ef(k),_);let O=C.jsepRegisterMLTensor;if(!O)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');B=O(u,Z,Ef(k),_)}else{let Z=i[2];if(Array.isArray(Z)){S=y*Z.length,B=C._malloc(S),a.push(B);for(let O=0;O<Z.length;O++){if(typeof Z[O]!="string")throw new TypeError(`tensor data at index ${O} is not a string`);C.setValue(B+O*y,xo(Z[O],a),"*")}}else{let O=C.jsepIsGraphInput;if(k!=="string"&&O){let Q=C._OrtGetInputName(u,p),q=C.UTF8ToString(Q);if(O(u,q)){let f=Ef(k);S=Sd(f,_),M="ml-tensor";let I=C.jsepCreateTemporaryTensor,e=C.jsepUploadTensor;if(!I||!e)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let c=await I(u,f,_);e(c,new Uint8Array(Z.buffer,Z.byteOffset,Z.byteLength)),B=c}else S=Z.byteLength,B=C._malloc(S),a.push(B),C.HEAPU8.set(new Uint8Array(Z.buffer,Z.byteOffset,S),B)}else S=Z.byteLength,B=C._malloc(S),a.push(B),C.HEAPU8.set(new Uint8Array(Z.buffer,Z.byteOffset,S),B)}}let N=C.stackSave(),V=C.stackAlloc(4*_.length);try{_.forEach((O,Q)=>C.setValue(V+Q*y,O,y===4?"i32":"i64"));let Z=C._OrtCreateTensor(Ef(k),B,S,V,_.length,Hg(M));Z===0&&Ka(`Can't create tensor for input/output. session=${u}, index=${p}.`),o.push(Z)}finally{C.stackRestore(N)}},t1=async(i,o,a,u,p,h)=>{var j,Ie,ge;let C=ro(),y=C.PTR_SIZE,k=Uc.get(i);if(!k)throw new Error(`cannot run inference. invalid session id: ${i}`);let _=k[0],v=k[1],M=k[2],B=k[3],S=k[4],N=k[5],V=o.length,Z=u.length,O=0,Q=[],q=[],f=[],I=[],e=C.stackSave(),c=C.stackAlloc(V*y),P=C.stackAlloc(V*y),J=C.stackAlloc(Z*y),D=C.stackAlloc(Z*y);try{[O,Q]=Rm(h);for(let Ne=0;Ne<V;Ne++)await e1(a[Ne],q,I,i,o[Ne],S);for(let Ne=0;Ne<Z;Ne++)await e1(p[Ne],f,I,i,V+u[Ne],S);for(let Ne=0;Ne<V;Ne++)C.setValue(c+Ne*y,q[Ne],"*"),C.setValue(P+Ne*y,v[o[Ne]],"*");for(let Ne=0;Ne<Z;Ne++)C.setValue(J+Ne*y,f[Ne],"*"),C.setValue(D+Ne*y,M[u[Ne]],"*");if(B&&!N){let{handle:Ne,outputPreferredLocations:Xe,outputPreferredLocationsEncoded:At}=B;if(v.length!==V)throw new Error(`input count from feeds (${V}) is expected to be always equal to model's input count (${v.length}).`);for(let xe=0;xe<V;xe++){let ye=o[xe];await C._OrtBindInput(Ne,v[ye],q[xe])!==0&&Ka(`Can't bind input[${xe}] for session=${i}.`)}for(let xe=0;xe<Z;xe++){let ye=u[xe];(j=p[xe])!=null&&j[3]?C._OrtBindOutput(Ne,M[ye],f[xe],0)!==0&&Ka(`Can't bind pre-allocated output[${xe}] for session=${i}.`):C._OrtBindOutput(Ne,M[ye],0,At[ye])!==0&&Ka(`Can't bind output[${xe}] to ${Xe[xe]} for session=${i}.`)}Uc.set(i,[_,v,M,B,S,!0])}(Ie=C.jsepOnRunStart)==null||Ie.call(C,_);let ke;B?ke=await C._OrtRunWithBinding(_,B.handle,Z,J,O):ke=await C._OrtRun(_,P,c,V,D,Z,J,O),ke!==0&&Ka("failed to call OrtRun().");let Ee=[];for(let Ne=0;Ne<Z;Ne++){let Xe=Number(C.getValue(J+Ne*y,"*"));if(Xe===f[Ne]){Ee.push(p[Ne]);continue}let At=C.stackSave(),xe=C.stackAlloc(4*y),ye=!1,ue,ie=0;try{C._OrtGetTensorData(Xe,xe,xe+y,xe+2*y,xe+3*y)!==0&&Ka(`Can't access output tensor data on index ${Ne}.`);let be=y===4?"i32":"i64",Ye=Number(C.getValue(xe,be));ie=C.getValue(xe+y,"*");let Le=C.getValue(xe+y*2,"*"),lt=Number(C.getValue(xe+y*3,be)),ft=[];for(let He=0;He<lt;He++)ft.push(Number(C.getValue(Le+He*y,be)));C._OrtFree(Le)!==0&&Ka("Can't free memory for tensor dims.");let pt=ft.reduce((He,Re)=>He*Re,1);ue=Dd(Ye);let ct=B==null?void 0:B.outputPreferredLocations[u[Ne]];if(ue==="string"){if(ct==="gpu-buffer"||ct==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let He=[];for(let Re=0;Re<pt;Re++){let Se=C.getValue(ie+Re*y,"*"),Qe=C.getValue(ie+(Re+1)*y,"*"),ht=Re===pt-1?void 0:Qe-Se;He.push(C.UTF8ToString(Se,ht))}Ee.push([ue,ft,He,"cpu"])}else if(ct==="gpu-buffer"&&pt>0){let He=C.jsepGetBuffer;if(!He)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Re=He(ie),Se=Sd(Ye,pt);if(Se===void 0||!Wg(ue))throw new Error(`Unsupported data type: ${ue}`);ye=!0,Ee.push([ue,ft,{gpuBuffer:Re,download:C.jsepCreateDownloader(Re,Se,ue),dispose:()=>{C._OrtReleaseTensor(Xe)!==0&&Ka("Can't release tensor.")}},"gpu-buffer"])}else if(ct==="ml-tensor"&&pt>0){let He=C.jsepEnsureTensor;if(!He)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Sd(Ye,pt)===void 0||!Ug(ue))throw new Error(`Unsupported data type: ${ue}`);let Re=await He(i,ie,Ye,ft,!1);ye=!0,Ee.push([ue,ft,{mlTensor:Re,download:C.jsepCreateMLTensorDownloader(ie,ue),dispose:()=>{C.jsepReleaseTensorId(ie),C._OrtReleaseTensor(Xe)}},"ml-tensor"])}else{let He=Vg(ue),Re=new He(pt);new Uint8Array(Re.buffer,Re.byteOffset,Re.byteLength).set(C.HEAPU8.subarray(ie,ie+Re.byteLength)),Ee.push([ue,ft,Re,"cpu"])}}finally{C.stackRestore(At),ue==="string"&&ie&&C._free(ie),ye||C._OrtReleaseTensor(Xe),(ge=C.jsepOnRunEnd)==null||ge.call(C,_)}}return B&&!S&&(C._OrtClearBoundOutputs(B.handle)!==0&&Ka("Can't clear bound outputs."),Uc.set(i,[_,v,M,B,S,!1])),Ee}finally{C.stackRestore(e),q.forEach(ke=>C._OrtReleaseTensor(ke)),f.forEach(ke=>C._OrtReleaseTensor(ke)),I.forEach(ke=>C._free(ke)),O!==0&&C._OrtReleaseRunOptions(O),Q.forEach(ke=>C._free(ke))}},r1=i=>{let o=ro(),a=Uc.get(i);if(!a)throw new Error("invalid session id");let u=a[0],p=o._OrtEndProfiling(u);p===0&&Ka("Can't get an profile file name."),o._OrtFree(p)},s1=i=>{let o=[];for(let a of i){let u=a[2];!Array.isArray(u)&&"buffer"in u&&o.push(u.buffer)}return o}}),Hc,LA,Df,i2,o2,L2,a1,R2,Ld,Rd,ny,iy,oy,Ay,ly,cy,uy,dy,fy=xr(()=>{jl(),ay(),Pd(),Qg(),Hc=()=>!!Kn.wasm.proxy&&typeof document<"u",Df=!1,i2=!1,o2=!1,R2=new Map,Ld=(i,o)=>{let a=R2.get(i);a?a.push(o):R2.set(i,[o])},Rd=()=>{if(Df||!i2||o2||!LA)throw new Error("worker not ready")},ny=i=>{switch(i.data.type){case"init-wasm":Df=!1,i.data.err?(o2=!0,a1[1](i.data.err)):(i2=!0,a1[0]()),L2&&(URL.revokeObjectURL(L2),L2=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let o=R2.get(i.data.type);i.data.err?o.shift()[1](i.data.err):o.shift()[0](i.data.out);break}}},iy=async()=>{if(!i2){if(Df)throw new Error("multiple calls to 'initWasm()' detected.");if(o2)throw new Error("previous call to 'initWasm()' failed.");if(Df=!0,Hc())return new Promise((i,o)=>{LA==null||LA.terminate(),Om().then(([a,u])=>{try{LA=u,LA.onerror=h=>o(h),LA.onmessage=ny,a1=[i,o];let p={type:"init-wasm",in:Kn};!p.in.wasm.wasmPaths&&(a||Gg)&&(p.in.wasm.wasmPaths={wasm:new URL("/assets/ort-wasm-simd-threaded.jsep-BAR87mbD.wasm",self.location.href).href}),LA.postMessage(p),L2=a}catch(p){o(p)}},o)});try{await Rg(Kn.wasm),await Xp(Kn),i2=!0}catch(i){throw o2=!0,i}finally{Df=!1}}},oy=async i=>{if(Hc())return Rd(),new Promise((o,a)=>{Ld("init-ep",[o,a]);let u={type:"init-ep",in:{epName:i,env:Kn}};LA.postMessage(u)});await Zp(Kn,i)},Ay=async i=>Hc()?(Rd(),new Promise((o,a)=>{Ld("copy-from",[o,a]);let u={type:"copy-from",in:{buffer:i}};LA.postMessage(u,[i.buffer])})):N2(i),ly=async(i,o)=>{if(Hc()){if(o!=null&&o.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Rd(),new Promise((a,u)=>{Ld("create",[a,u]);let p={type:"create",in:{model:i,options:{...o}}},h=[];i instanceof Uint8Array&&h.push(i.buffer),LA.postMessage(p,h)})}else return Jp(i,o)},cy=async i=>{if(Hc())return Rd(),new Promise((o,a)=>{Ld("release",[o,a]);let u={type:"release",in:i};LA.postMessage(u)});$p(i)},uy=async(i,o,a,u,p,h)=>{if(Hc()){if(a.some(C=>C[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(p.some(C=>C))throw new Error("pre-allocated output tensor is not supported for proxy.");return Rd(),new Promise((C,y)=>{Ld("run",[C,y]);let k=a,_={type:"run",in:{sessionId:i,inputIndices:o,inputs:k,outputIndices:u,options:h}};LA.postMessage(_,s1(k))})}else return t1(i,o,a,u,p,h)},dy=async i=>{if(Hc())return Rd(),new Promise((o,a)=>{Ld("end-profiling",[o,a]);let u={type:"end-profiling",in:i};LA.postMessage(u)});r1(i)}}),n1,gy,py,$v=xr(()=>{jl(),fy(),Qs(),Eg(),Ym(),n1=(i,o)=>{switch(i.location){case"cpu":return[i.type,i.dims,i.data,"cpu"];case"gpu-buffer":return[i.type,i.dims,{gpuBuffer:i.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[i.type,i.dims,{mlTensor:i.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${i.location} for ${o()}`)}},gy=i=>{switch(i[3]){case"cpu":return new Ll(i[0],i[2],i[1]);case"gpu-buffer":{let o=i[0];if(!Wg(o))throw new Error(`not supported data type: ${o} for deserializing GPU tensor`);let{gpuBuffer:a,download:u,dispose:p}=i[2];return Ll.fromGpuBuffer(a,{dataType:o,dims:i[1],download:u,dispose:p})}case"ml-tensor":{let o=i[0];if(!Ug(o))throw new Error(`not supported data type: ${o} for deserializing MLTensor tensor`);let{mlTensor:a,download:u,dispose:p}=i[2];return Ll.fromMLTensor(a,{dataType:o,dims:i[1],download:u,dispose:p})}default:throw new Error(`invalid data location: ${i[3]}`)}},py=class{async fetchModelAndCopyToWasmMemory(i){return Ay(await Yg(i))}async loadModel(i,o){Rl();let a;typeof i=="string"?a=await this.fetchModelAndCopyToWasmMemory(i):a=i,[this.sessionId,this.inputNames,this.outputNames]=await ly(a,o),Ml()}async dispose(){return cy(this.sessionId)}async run(i,o,a){Rl();let u=[],p=[];Object.entries(i).forEach(M=>{let B=M[0],S=M[1],N=this.inputNames.indexOf(B);if(N===-1)throw new Error(`invalid input '${B}'`);u.push(S),p.push(N)});let h=[],C=[];Object.entries(o).forEach(M=>{let B=M[0],S=M[1],N=this.outputNames.indexOf(B);if(N===-1)throw new Error(`invalid output '${B}'`);h.push(S),C.push(N)});let y=u.map((M,B)=>n1(M,()=>`input "${this.inputNames[p[B]]}"`)),k=h.map((M,B)=>M?n1(M,()=>`output "${this.outputNames[C[B]]}"`):null),_=await uy(this.sessionId,p,y,C,k,a),v={};for(let M=0;M<_.length;M++)v[this.outputNames[C[M]]]=h[M]??gy(_[M]);return Ml(),v}startProfiling(){}endProfiling(){dy(this.sessionId)}}}),hy={};Hf(hy,{OnnxruntimeWebAssemblyBackend:()=>o1,initializeFlags:()=>i1,wasmBackend:()=>my});var i1,o1,my,ex=xr(()=>{jl(),fy(),$v(),i1=()=>{if((typeof Kn.wasm.initTimeout!="number"||Kn.wasm.initTimeout<0)&&(Kn.wasm.initTimeout=0),Kn.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof Kn.wasm.proxy!="boolean"&&(Kn.wasm.proxy=!1),typeof Kn.wasm.trace!="boolean"&&(Kn.wasm.trace=!1),typeof Kn.wasm.numThreads!="number"||!Number.isInteger(Kn.wasm.numThreads)||Kn.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)Kn.wasm.numThreads=1;else{let i=typeof navigator>"u"?Q_("node:os").cpus().length:navigator.hardwareConcurrency;Kn.wasm.numThreads=Math.min(4,Math.ceil((i||1)/2))}},o1=class{async init(i){i1(),await iy(),await oy(i)}async createInferenceSessionHandler(i,o){let a=new py;return await a.loadModel(i,o),Promise.resolve(a)}},my=new o1});jl(),jl(),jl();var tx="1.22.0-dev.20250306-ccf8fdd9ea",rx=xm;{let i=(ex(),w2(hy)).wasmBackend;Bd("webgpu",i,5),Bd("webnn",i,5),Bd("cpu",i,10),Bd("wasm",i,10)}Object.defineProperty(Kn.versions,"web",{value:tx,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sx=Object.freeze({__proto__:null,get InferenceSession(){return Mg},get TRACE(){return qf},get TRACE_FUNC_BEGIN(){return Rl},get TRACE_FUNC_END(){return Ml},get Tensor(){return Ll},default:rx,get env(){return Kn},get registerBackend(){return Bd}}),T0={},ax={"onnxruntime-common":i=>{i.exports=G_},"onnxruntime-web":i=>{i.exports=sx},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(i,o,a)=>{a.r(o),a.d(o,{Environment:()=>Bt,Interpreter:()=>Mt,Template:()=>ve,parse:()=>ue,tokenize:()=>M});var u=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),p=Object.freeze({set:u.Set,for:u.For,in:u.In,is:u.Is,if:u.If,else:u.Else,endif:u.EndIf,elif:u.ElseIf,endfor:u.EndFor,and:u.And,or:u.Or,not:u.Not,"not in":u.NotIn,macro:u.Macro,endmacro:u.EndMacro,true:u.BooleanLiteral,false:u.BooleanLiteral,none:u.NullLiteral,True:u.BooleanLiteral,False:u.BooleanLiteral,None:u.NullLiteral}),h=class{constructor(H,ce){this.value=H,this.type=ce}};function C(H){return/\w/.test(H)}function y(H){return/[0-9]/.test(H)}var k=[["{%",u.OpenStatement],["%}",u.CloseStatement],["{{",u.OpenExpression],["}}",u.CloseExpression],["(",u.OpenParen],[")",u.CloseParen],["{",u.OpenCurlyBracket],["}",u.CloseCurlyBracket],["[",u.OpenSquareBracket],["]",u.CloseSquareBracket],[",",u.Comma],[".",u.Dot],[":",u.Colon],["|",u.Pipe],["<=",u.ComparisonBinaryOperator],[">=",u.ComparisonBinaryOperator],["==",u.ComparisonBinaryOperator],["!=",u.ComparisonBinaryOperator],["<",u.ComparisonBinaryOperator],[">",u.ComparisonBinaryOperator],["+",u.AdditiveBinaryOperator],["-",u.AdditiveBinaryOperator],["*",u.MultiplicativeBinaryOperator],["/",u.MultiplicativeBinaryOperator],["%",u.MultiplicativeBinaryOperator],["=",u.Equals]],_=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function v(H,ce={}){return H.endsWith(`
`)&&(H=H.slice(0,-1)),H=H.replace(/{#.*?#}/gs,"{##}"),ce.lstrip_blocks&&(H=H.replace(/^[ \t]*({[#%])/gm,"$1")),ce.trim_blocks&&(H=H.replace(/([#%]})\n/g,"$1")),H.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function M(H,ce={}){var It,Nt,_t;const ne=[],ze=v(H,ce);let $e=0;const gt=Vt=>{let Xt="";for(;Vt(ze[$e]);){if(ze[$e]==="\\"){if(++$e,$e>=ze.length)throw new SyntaxError("Unexpected end of input");const Jt=ze[$e++],wr=_.get(Jt);if(wr===void 0)throw new SyntaxError(`Unexpected escaped character: ${Jt}`);Xt+=wr;continue}if(Xt+=ze[$e++],$e>=ze.length)throw new SyntaxError("Unexpected end of input")}return Xt};e:for(;$e<ze.length;){const Vt=(It=ne.at(-1))==null?void 0:It.type;if(Vt===void 0||Vt===u.CloseStatement||Vt===u.CloseExpression){let Jt="";for(;$e<ze.length&&!(ze[$e]==="{"&&(ze[$e+1]==="%"||ze[$e+1]==="{"));)Jt+=ze[$e++];if(Jt.length>0){ne.push(new h(Jt,u.Text));continue}}gt(Jt=>/\s/.test(Jt));const Xt=ze[$e];if(Xt==="-"||Xt==="+"){const Jt=(Nt=ne.at(-1))==null?void 0:Nt.type;if(Jt===u.Text||Jt===void 0)throw new SyntaxError(`Unexpected character: ${Xt}`);switch(Jt){case u.Identifier:case u.NumericLiteral:case u.BooleanLiteral:case u.NullLiteral:case u.StringLiteral:case u.CloseParen:case u.CloseSquareBracket:break;default:{++$e;const wr=gt(y);ne.push(new h(`${Xt}${wr}`,wr.length>0?u.NumericLiteral:u.UnaryOperator));continue}}}for(const[Jt,wr]of k)if(ze.slice($e,$e+Jt.length)===Jt){ne.push(new h(Jt,wr)),$e+=Jt.length;continue e}if(Xt==="'"||Xt==='"'){++$e;const Jt=gt(wr=>wr!==Xt);ne.push(new h(Jt,u.StringLiteral)),++$e;continue}if(y(Xt)){const Jt=gt(y);ne.push(new h(Jt,u.NumericLiteral));continue}if(C(Xt)){const Jt=gt(C),wr=Object.hasOwn(p,Jt)?p[Jt]:u.Identifier;wr===u.In&&((_t=ne.at(-1))==null?void 0:_t.type)===u.Not?(ne.pop(),ne.push(new h("not in",u.NotIn))):ne.push(new h(Jt,wr));continue}throw new SyntaxError(`Unexpected character: ${Xt}`)}return ne}var B=class{constructor(){Te(this,"type","Statement")}},S=class extends B{constructor(ce){super();Te(this,"type","Program");this.body=ce}},N=class extends B{constructor(ce,ne,ze){super();Te(this,"type","If");this.test=ce,this.body=ne,this.alternate=ze}},V=class extends B{constructor(ce,ne,ze,$e){super();Te(this,"type","For");this.loopvar=ce,this.iterable=ne,this.body=ze,this.defaultBlock=$e}},Z=class extends B{constructor(ce,ne){super();Te(this,"type","Set");this.assignee=ce,this.value=ne}},O=class extends B{constructor(ce,ne,ze){super();Te(this,"type","Macro");this.name=ce,this.args=ne,this.body=ze}},Q=class extends B{constructor(){super(...arguments);Te(this,"type","Expression")}},q=class extends Q{constructor(ce,ne,ze){super();Te(this,"type","MemberExpression");this.object=ce,this.property=ne,this.computed=ze}},f=class extends Q{constructor(ce,ne){super();Te(this,"type","CallExpression");this.callee=ce,this.args=ne}},I=class extends Q{constructor(ce){super();Te(this,"type","Identifier");this.value=ce}},e=class extends Q{constructor(ce){super();Te(this,"type","Literal");this.value=ce}},c=class extends e{constructor(){super(...arguments);Te(this,"type","NumericLiteral")}},P=class extends e{constructor(){super(...arguments);Te(this,"type","StringLiteral")}},J=class extends e{constructor(){super(...arguments);Te(this,"type","BooleanLiteral")}},D=class extends e{constructor(){super(...arguments);Te(this,"type","NullLiteral")}},j=class extends e{constructor(){super(...arguments);Te(this,"type","ArrayLiteral")}},Ie=class extends e{constructor(){super(...arguments);Te(this,"type","TupleLiteral")}},ge=class extends e{constructor(){super(...arguments);Te(this,"type","ObjectLiteral")}},ke=class extends Q{constructor(ce,ne,ze){super();Te(this,"type","BinaryExpression");this.operator=ce,this.left=ne,this.right=ze}},Ee=class extends Q{constructor(ce,ne){super();Te(this,"type","FilterExpression");this.operand=ce,this.filter=ne}},Ne=class extends Q{constructor(ce,ne){super();Te(this,"type","SelectExpression");this.iterable=ce,this.test=ne}},Xe=class extends Q{constructor(ce,ne,ze){super();Te(this,"type","TestExpression");this.operand=ce,this.negate=ne,this.test=ze}},At=class extends Q{constructor(ce,ne){super();Te(this,"type","UnaryExpression");this.operator=ce,this.argument=ne}},xe=class extends Q{constructor(ce=void 0,ne=void 0,ze=void 0){super();Te(this,"type","SliceExpression");this.start=ce,this.stop=ne,this.step=ze}},ye=class extends Q{constructor(ce,ne){super();Te(this,"type","KeywordArgumentExpression");this.key=ce,this.value=ne}};function ue(H){const ce=new S([]);let ne=0;function ze(Zt,Br){const zr=H[ne++];if(!zr||zr.type!==Zt)throw new Error(`Parser Error: ${Br}. ${zr.type} !== ${Zt}.`);return zr}function $e(){switch(H[ne].type){case u.Text:return Nt();case u.OpenStatement:return _t();case u.OpenExpression:return Vt();default:throw new SyntaxError(`Unexpected token type: ${H[ne].type}`)}}function gt(...Zt){return ne+Zt.length<=H.length&&Zt.some((Br,zr)=>Br!==H[ne+zr].type)}function It(...Zt){return ne+Zt.length<=H.length&&Zt.every((Br,zr)=>Br===H[ne+zr].type)}function Nt(){return new P(ze(u.Text,"Expected text token").value)}function _t(){ze(u.OpenStatement,"Expected opening statement token");let Zt;switch(H[ne].type){case u.Set:++ne,Zt=Xt(),ze(u.CloseStatement,"Expected closing statement token");break;case u.If:++ne,Zt=Jt(),ze(u.OpenStatement,"Expected {% token"),ze(u.EndIf,"Expected endif token"),ze(u.CloseStatement,"Expected %} token");break;case u.Macro:++ne,Zt=wr(),ze(u.OpenStatement,"Expected {% token"),ze(u.EndMacro,"Expected endmacro token"),ze(u.CloseStatement,"Expected %} token");break;case u.For:++ne,Zt=$s(),ze(u.OpenStatement,"Expected {% token"),ze(u.EndFor,"Expected endfor token"),ze(u.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${H[ne].type}`)}return Zt}function Vt(){ze(u.OpenExpression,"Expected opening expression token");const Zt=os();return ze(u.CloseExpression,"Expected closing expression token"),Zt}function Xt(){const Zt=os();if(It(u.Equals)){++ne;const Br=Xt();return new Z(Zt,Br)}return Zt}function Jt(){var qs,aa,ks,vn,Qn,Sn,ci,ui;const Zt=os();ze(u.CloseStatement,"Expected closing statement token");const Br=[],zr=[];for(;!(((qs=H[ne])==null?void 0:qs.type)===u.OpenStatement&&(((aa=H[ne+1])==null?void 0:aa.type)===u.ElseIf||((ks=H[ne+1])==null?void 0:ks.type)===u.Else||((vn=H[ne+1])==null?void 0:vn.type)===u.EndIf));)Br.push($e());if(((Qn=H[ne])==null?void 0:Qn.type)===u.OpenStatement&&((Sn=H[ne+1])==null?void 0:Sn.type)!==u.EndIf)if(++ne,It(u.ElseIf))ze(u.ElseIf,"Expected elseif token"),zr.push(Jt());else for(ze(u.Else,"Expected else token"),ze(u.CloseStatement,"Expected closing statement token");!(((ci=H[ne])==null?void 0:ci.type)===u.OpenStatement&&((ui=H[ne+1])==null?void 0:ui.type)===u.EndIf);)zr.push($e());return new N(Zt,Br,zr)}function wr(){const Zt=sa();if(Zt.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Br=Bs();ze(u.CloseStatement,"Expected closing statement token");const zr=[];for(;gt(u.OpenStatement,u.EndMacro);)zr.push($e());return new O(Zt,Br,zr)}function Rr(Zt=!1){const Br=Zt?sa:os,zr=[Br()],qs=It(u.Comma);for(;qs&&(++ne,zr.push(Br()),!!It(u.Comma)););return qs?new Ie(zr):zr[0]}function $s(){const Zt=Rr(!0);if(!(Zt instanceof I||Zt instanceof Ie))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Zt.type} instead`);ze(u.In,"Expected `in` keyword following loop variable");const Br=os();ze(u.CloseStatement,"Expected closing statement token");const zr=[];for(;gt(u.OpenStatement,u.EndFor)&&gt(u.OpenStatement,u.Else);)zr.push($e());const qs=[];if(It(u.OpenStatement,u.Else))for(++ne,++ne,ze(u.CloseStatement,"Expected closing statement token");gt(u.OpenStatement,u.EndFor);)qs.push($e());return new V(Zt,Br,zr,qs)}function os(){return Ks()}function Ks(){const Zt=ts();if(It(u.If)){++ne;const Br=ts();if(It(u.Else)){++ne;const zr=ts();return new N(Br,[Zt],[zr])}else return new Ne(Zt,Br)}return Zt}function ts(){let Zt=zn();for(;It(u.Or);){const Br=H[ne];++ne;const zr=zn();Zt=new ke(Br,Zt,zr)}return Zt}function zn(){let Zt=Va();for(;It(u.And);){const Br=H[ne];++ne;const zr=Va();Zt=new ke(Br,Zt,zr)}return Zt}function Va(){let Zt;for(;It(u.Not);){const Br=H[ne];++ne;const zr=Va();Zt=new At(Br,zr)}return Zt??Wa()}function Wa(){let Zt=Pr();for(;It(u.ComparisonBinaryOperator)||It(u.In)||It(u.NotIn);){const Br=H[ne];++ne;const zr=Pr();Zt=new ke(Br,Zt,zr)}return Zt}function Pr(){let Zt=Pn();for(;It(u.AdditiveBinaryOperator);){const Br=H[ne];++ne;const zr=Pn();Zt=new ke(Br,Zt,zr)}return Zt}function Sr(){const Zt=On(sa());return It(u.OpenParen)?Kt(Zt):Zt}function Kt(Zt){let Br=new f(Zt,Bs());return Br=On(Br),It(u.OpenParen)&&(Br=Kt(Br)),Br}function Bs(){ze(u.OpenParen,"Expected opening parenthesis for arguments list");const Zt=$a();return ze(u.CloseParen,"Expected closing parenthesis for arguments list"),Zt}function $a(){const Zt=[];for(;!It(u.CloseParen);){let Br=os();if(It(u.Equals)){if(++ne,!(Br instanceof I))throw new SyntaxError("Expected identifier for keyword argument");const zr=os();Br=new ye(Br,zr)}Zt.push(Br),It(u.Comma)&&++ne}return Zt}function en(){const Zt=[];let Br=!1;for(;!It(u.CloseSquareBracket);)It(u.Colon)?(Zt.push(void 0),++ne,Br=!0):(Zt.push(os()),It(u.Colon)&&(++ne,Br=!0));if(Zt.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Br){if(Zt.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new xe(...Zt)}return Zt[0]}function On(Zt){for(;It(u.Dot)||It(u.OpenSquareBracket);){const Br=H[ne];++ne;let zr;const qs=Br.type!==u.Dot;if(qs)zr=en(),ze(u.CloseSquareBracket,"Expected closing square bracket");else if(zr=sa(),zr.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Zt=new q(Zt,zr,qs)}return Zt}function Pn(){let Zt=Dn();for(;It(u.MultiplicativeBinaryOperator);){const Br=H[ne];++ne;const zr=Dn();Zt=new ke(Br,Zt,zr)}return Zt}function Dn(){let Zt=qn();for(;It(u.Is);){++ne;const Br=It(u.Not);Br&&++ne;let zr=sa();if(zr instanceof J?zr=new I(zr.value.toString()):zr instanceof D&&(zr=new I("none")),!(zr instanceof I))throw new SyntaxError("Expected identifier for the test");Zt=new Xe(Zt,Br,zr)}return Zt}function qn(){let Zt=Sr();for(;It(u.Pipe);){++ne;let Br=sa();if(!(Br instanceof I))throw new SyntaxError("Expected identifier for the filter");It(u.OpenParen)&&(Br=Kt(Br)),Zt=new Ee(Zt,Br)}return Zt}function sa(){const Zt=H[ne];switch(Zt.type){case u.NumericLiteral:return++ne,new c(Number(Zt.value));case u.StringLiteral:return++ne,new P(Zt.value);case u.BooleanLiteral:return++ne,new J(Zt.value.toLowerCase()==="true");case u.NullLiteral:return++ne,new D(null);case u.Identifier:return++ne,new I(Zt.value);case u.OpenParen:{++ne;const Br=Rr();if(H[ne].type!==u.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${H[ne].type} instead`);return++ne,Br}case u.OpenSquareBracket:{++ne;const Br=[];for(;!It(u.CloseSquareBracket);)Br.push(os()),It(u.Comma)&&++ne;return++ne,new j(Br)}case u.OpenCurlyBracket:{++ne;const Br=new Map;for(;!It(u.CloseCurlyBracket);){const zr=os();ze(u.Colon,"Expected colon between key and value in object literal");const qs=os();Br.set(zr,qs),It(u.Comma)&&++ne}return++ne,new ge(Br)}default:throw new SyntaxError(`Unexpected token: ${Zt.type}`)}}for(;ne<H.length;)ce.body.push($e());return ce}function ie(H,ce,ne=1){ce===void 0&&(ce=H,H=0);const ze=[];for(let $e=H;$e<ce;$e+=ne)ze.push($e);return ze}function be(H,ce,ne,ze=1){const $e=Math.sign(ze);$e>=0?(ce=(ce??(ce=0))<0?Math.max(H.length+ce,0):Math.min(ce,H.length),ne=(ne??(ne=H.length))<0?Math.max(H.length+ne,0):Math.min(ne,H.length)):(ce=(ce??(ce=H.length-1))<0?Math.max(H.length+ce,-1):Math.min(ce,H.length-1),ne=(ne??(ne=-1))<-1?Math.max(H.length+ne,-1):Math.min(ne,H.length-1));const gt=[];for(let It=ce;$e*It<$e*ne;It+=ze)gt.push(H[It]);return gt}function Ye(H){return H.replace(/\b\w/g,ce=>ce.toUpperCase())}var Le=class{constructor(H=void 0){Te(this,"type","RuntimeValue");Te(this,"value");Te(this,"builtins",new Map);this.value=H}__bool__(){return new pt(!!this.value)}},lt=class extends Le{constructor(){super(...arguments);Te(this,"type","NumericValue")}},ft=class extends Le{constructor(){super(...arguments);Te(this,"type","StringValue");Te(this,"builtins",new Map([["upper",new Qe(()=>new ft(this.value.toUpperCase()))],["lower",new Qe(()=>new ft(this.value.toLowerCase()))],["strip",new Qe(()=>new ft(this.value.trim()))],["title",new Qe(()=>new ft(Ye(this.value)))],["length",new lt(this.value.length)],["rstrip",new Qe(()=>new ft(this.value.trimEnd()))],["lstrip",new Qe(()=>new ft(this.value.trimStart()))],["split",new Qe(ce=>{const ne=ce[0]??new ht;if(!(ne instanceof ft||ne instanceof ht))throw new Error("sep argument must be a string or null");const ze=ce[1]??new lt(-1);if(!(ze instanceof lt))throw new Error("maxsplit argument must be a number");let $e=[];if(ne instanceof ht){const gt=this.value.trimStart();for(const{0:It,index:Nt}of gt.matchAll(/\S+/g)){if(ze.value!==-1&&$e.length>=ze.value&&Nt!==void 0){$e.push(It+gt.slice(Nt+It.length));break}$e.push(It)}}else{if(ne.value==="")throw new Error("empty separator");$e=this.value.split(ne.value),ze.value!==-1&&$e.length>ze.value&&$e.push($e.splice(ze.value).join(ne.value))}return new Re($e.map(gt=>new ft(gt)))})]]))}},pt=class extends Le{constructor(){super(...arguments);Te(this,"type","BooleanValue")}},ct=class extends Le{constructor(){super(...arguments);Te(this,"type","ObjectValue");Te(this,"builtins",new Map([["get",new Qe(([ce,ne])=>{if(!(ce instanceof ft))throw new Error(`Object key must be a string: got ${ce.type}`);return this.value.get(ce.value)??ne??new ht})],["items",new Qe(()=>new Re(Array.from(this.value.entries()).map(([ce,ne])=>new Re([new ft(ce),ne]))))]]))}__bool__(){return new pt(this.value.size>0)}},He=class extends ct{constructor(){super(...arguments);Te(this,"type","KeywordArgumentsValue")}},Re=class extends Le{constructor(){super(...arguments);Te(this,"type","ArrayValue");Te(this,"builtins",new Map([["length",new lt(this.value.length)]]))}__bool__(){return new pt(this.value.length>0)}},Se=class extends Re{constructor(){super(...arguments);Te(this,"type","TupleValue")}},Qe=class extends Le{constructor(){super(...arguments);Te(this,"type","FunctionValue")}},ht=class extends Le{constructor(){super(...arguments);Te(this,"type","NullValue")}},wt=class extends Le{constructor(){super(...arguments);Te(this,"type","UndefinedValue")}},Bt=class{constructor(H){Te(this,"variables",new Map([["namespace",new Qe(H=>{if(H.length===0)return new ct(new Map);if(H.length!==1||!(H[0]instanceof ct))throw new Error("`namespace` expects either zero arguments or a single object argument");return H[0]})]]));Te(this,"tests",new Map([["boolean",H=>H.type==="BooleanValue"],["callable",H=>H instanceof Qe],["odd",H=>{if(H.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${H.type}`);return H.value%2!==0}],["even",H=>{if(H.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${H.type}`);return H.value%2===0}],["false",H=>H.type==="BooleanValue"&&!H.value],["true",H=>H.type==="BooleanValue"&&H.value],["none",H=>H.type==="NullValue"],["string",H=>H.type==="StringValue"],["number",H=>H.type==="NumericValue"],["integer",H=>H.type==="NumericValue"&&Number.isInteger(H.value)],["iterable",H=>H.type==="ArrayValue"||H.type==="StringValue"],["mapping",H=>H.type==="ObjectValue"],["lower",H=>{const ce=H.value;return H.type==="StringValue"&&ce===ce.toLowerCase()}],["upper",H=>{const ce=H.value;return H.type==="StringValue"&&ce===ce.toUpperCase()}],["none",H=>H.type==="NullValue"],["defined",H=>H.type!=="UndefinedValue"],["undefined",H=>H.type==="UndefinedValue"],["equalto",(H,ce)=>H.value===ce.value],["eq",(H,ce)=>H.value===ce.value]]));this.parent=H}set(H,ce){return this.declareVariable(H,oe(ce))}declareVariable(H,ce){if(this.variables.has(H))throw new SyntaxError(`Variable already declared: ${H}`);return this.variables.set(H,ce),ce}setVariable(H,ce){return this.variables.set(H,ce),ce}resolve(H){if(this.variables.has(H))return this;if(this.parent)return this.parent.resolve(H);throw new Error(`Unknown variable: ${H}`)}lookupVariable(H){try{return this.resolve(H).variables.get(H)??new wt}catch{return new wt}}},Mt=class{constructor(H){Te(this,"global");this.global=H??new Bt}run(H){return this.evaluate(H,this.global)}evaluateBinaryExpression(H,ce){const ne=this.evaluate(H.left,ce);switch(H.operator.value){case"and":return ne.__bool__().value?this.evaluate(H.right,ce):ne;case"or":return ne.__bool__().value?ne:this.evaluate(H.right,ce)}const ze=this.evaluate(H.right,ce);switch(H.operator.value){case"==":return new pt(ne.value==ze.value);case"!=":return new pt(ne.value!=ze.value)}if(ne instanceof wt||ze instanceof wt)throw new Error("Cannot perform operation on undefined values");if(ne instanceof ht||ze instanceof ht)throw new Error("Cannot perform operation on null values");if(ne instanceof lt&&ze instanceof lt)switch(H.operator.value){case"+":return new lt(ne.value+ze.value);case"-":return new lt(ne.value-ze.value);case"*":return new lt(ne.value*ze.value);case"/":return new lt(ne.value/ze.value);case"%":return new lt(ne.value%ze.value);case"<":return new pt(ne.value<ze.value);case">":return new pt(ne.value>ze.value);case">=":return new pt(ne.value>=ze.value);case"<=":return new pt(ne.value<=ze.value)}else if(ne instanceof Re&&ze instanceof Re)switch(H.operator.value){case"+":return new Re(ne.value.concat(ze.value))}else if(ze instanceof Re){const $e=ze.value.find(gt=>gt.value===ne.value)!==void 0;switch(H.operator.value){case"in":return new pt($e);case"not in":return new pt(!$e)}}if(ne instanceof ft||ze instanceof ft)switch(H.operator.value){case"+":return new ft(ne.value.toString()+ze.value.toString())}if(ne instanceof ft&&ze instanceof ft)switch(H.operator.value){case"in":return new pt(ze.value.includes(ne.value));case"not in":return new pt(!ze.value.includes(ne.value))}if(ne instanceof ft&&ze instanceof ct)switch(H.operator.value){case"in":return new pt(ze.value.has(ne.value));case"not in":return new pt(!ze.value.has(ne.value))}throw new SyntaxError(`Unknown operator "${H.operator.value}" between ${ne.type} and ${ze.type}`)}evaluateArguments(H,ce){const ne=[],ze=new Map;for(const $e of H)if($e.type==="KeywordArgumentExpression"){const gt=$e;ze.set(gt.key.value,this.evaluate(gt.value,ce))}else{if(ze.size>0)throw new Error("Positional arguments must come before keyword arguments");ne.push(this.evaluate($e,ce))}return[ne,ze]}evaluateFilterExpression(H,ce){const ne=this.evaluate(H.operand,ce);if(H.filter.type==="Identifier"){const ze=H.filter;if(ze.value==="tojson")return new ft(zt(ne));if(ne instanceof Re)switch(ze.value){case"list":return ne;case"first":return ne.value[0];case"last":return ne.value[ne.value.length-1];case"length":return new lt(ne.value.length);case"reverse":return new Re(ne.value.reverse());case"sort":return new Re(ne.value.sort(($e,gt)=>{if($e.type!==gt.type)throw new Error(`Cannot compare different types: ${$e.type} and ${gt.type}`);switch($e.type){case"NumericValue":return $e.value-gt.value;case"StringValue":return $e.value.localeCompare(gt.value);default:throw new Error(`Cannot compare type: ${$e.type}`)}}));case"join":return new ft(ne.value.map($e=>$e.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${ze.value}`)}else if(ne instanceof ft)switch(ze.value){case"length":return new lt(ne.value.length);case"upper":return new ft(ne.value.toUpperCase());case"lower":return new ft(ne.value.toLowerCase());case"title":return new ft(Ye(ne.value));case"capitalize":return new ft(ne.value.charAt(0).toUpperCase()+ne.value.slice(1));case"trim":return new ft(ne.value.trim());case"indent":return new ft(ne.value.split(`
`).map(($e,gt)=>gt===0||$e.length===0?$e:"    "+$e).join(`
`));case"join":case"string":return ne;default:throw new Error(`Unknown StringValue filter: ${ze.value}`)}else if(ne instanceof lt)switch(ze.value){case"abs":return new lt(Math.abs(ne.value));default:throw new Error(`Unknown NumericValue filter: ${ze.value}`)}else if(ne instanceof ct)switch(ze.value){case"items":return new Re(Array.from(ne.value.entries()).map(([$e,gt])=>new Re([new ft($e),gt])));case"length":return new lt(ne.value.size);default:throw new Error(`Unknown ObjectValue filter: ${ze.value}`)}throw new Error(`Cannot apply filter "${ze.value}" to type: ${ne.type}`)}else if(H.filter.type==="CallExpression"){const ze=H.filter;if(ze.callee.type!=="Identifier")throw new Error(`Unknown filter: ${ze.callee.type}`);const $e=ze.callee.value;if($e==="tojson"){const[,gt]=this.evaluateArguments(ze.args,ce),It=gt.get("indent")??new ht;if(!(It instanceof lt||It instanceof ht))throw new Error("If set, indent must be a number");return new ft(zt(ne,It.value))}else if($e==="join"){let gt;if(ne instanceof ft)gt=Array.from(ne.value);else if(ne instanceof Re)gt=ne.value.map(Vt=>Vt.value);else throw new Error(`Cannot apply filter "${$e}" to type: ${ne.type}`);const[It,Nt]=this.evaluateArguments(ze.args,ce),_t=It.at(0)??Nt.get("separator")??new ft("");if(!(_t instanceof ft))throw new Error("separator must be a string");return new ft(gt.join(_t.value))}if(ne instanceof Re){switch($e){case"selectattr":case"rejectattr":{const gt=$e==="selectattr";if(ne.value.some(Jt=>!(Jt instanceof ct)))throw new Error(`\`${$e}\` can only be applied to array of objects`);if(ze.args.some(Jt=>Jt.type!=="StringLiteral"))throw new Error(`arguments of \`${$e}\` must be strings`);const[It,Nt,_t]=ze.args.map(Jt=>this.evaluate(Jt,ce));let Vt;if(Nt){const Jt=ce.tests.get(Nt.value);if(!Jt)throw new Error(`Unknown test: ${Nt.value}`);Vt=Jt}else Vt=(...Jt)=>Jt[0].__bool__().value;const Xt=ne.value.filter(Jt=>{const wr=Jt.value.get(It.value),Rr=wr?Vt(wr,_t):!1;return gt?Rr:!Rr});return new Re(Xt)}case"map":{const[,gt]=this.evaluateArguments(ze.args,ce);if(gt.has("attribute")){const It=gt.get("attribute");if(!(It instanceof ft))throw new Error("attribute must be a string");const Nt=gt.get("default"),_t=ne.value.map(Vt=>{if(!(Vt instanceof ct))throw new Error("items in map must be an object");return Vt.value.get(It.value)??Nt??new wt});return new Re(_t)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${$e}`)}else if(ne instanceof ft){switch($e){case"indent":{const[gt,It]=this.evaluateArguments(ze.args,ce),Nt=gt.at(0)??It.get("width")??new lt(4);if(!(Nt instanceof lt))throw new Error("width must be a number");const _t=gt.at(1)??It.get("first")??new pt(!1),Vt=gt.at(2)??It.get("blank")??new pt(!1),Xt=ne.value.split(`
`),Jt=" ".repeat(Nt.value),wr=Xt.map((Rr,$s)=>!_t.value&&$s===0||!Vt.value&&Rr.length===0?Rr:Jt+Rr);return new ft(wr.join(`
`))}}throw new Error(`Unknown StringValue filter: ${$e}`)}else throw new Error(`Cannot apply filter "${$e}" to type: ${ne.type}`)}throw new Error(`Unknown filter: ${H.filter.type}`)}evaluateTestExpression(H,ce){const ne=this.evaluate(H.operand,ce),ze=ce.tests.get(H.test.value);if(!ze)throw new Error(`Unknown test: ${H.test.value}`);const $e=ze(ne);return new pt(H.negate?!$e:$e)}evaluateUnaryExpression(H,ce){const ne=this.evaluate(H.argument,ce);switch(H.operator.value){case"not":return new pt(!ne.value);default:throw new SyntaxError(`Unknown operator: ${H.operator.value}`)}}evalProgram(H,ce){return this.evaluateBlock(H.body,ce)}evaluateBlock(H,ce){let ne="";for(const ze of H){const $e=this.evaluate(ze,ce);$e.type!=="NullValue"&&$e.type!=="UndefinedValue"&&(ne+=$e.value)}return new ft(ne)}evaluateIdentifier(H,ce){return ce.lookupVariable(H.value)}evaluateCallExpression(H,ce){const[ne,ze]=this.evaluateArguments(H.args,ce);ze.size>0&&ne.push(new He(ze));const $e=this.evaluate(H.callee,ce);if($e.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${$e.type}`);return $e.value(ne,ce)}evaluateSliceExpression(H,ce,ne){if(!(H instanceof Re||H instanceof ft))throw new Error("Slice object must be an array or string");const ze=this.evaluate(ce.start,ne),$e=this.evaluate(ce.stop,ne),gt=this.evaluate(ce.step,ne);if(!(ze instanceof lt||ze instanceof wt))throw new Error("Slice start must be numeric or undefined");if(!($e instanceof lt||$e instanceof wt))throw new Error("Slice stop must be numeric or undefined");if(!(gt instanceof lt||gt instanceof wt))throw new Error("Slice step must be numeric or undefined");return H instanceof Re?new Re(be(H.value,ze.value,$e.value,gt.value)):new ft(be(Array.from(H.value),ze.value,$e.value,gt.value).join(""))}evaluateMemberExpression(H,ce){const ne=this.evaluate(H.object,ce);let ze;if(H.computed){if(H.property.type==="SliceExpression")return this.evaluateSliceExpression(ne,H.property,ce);ze=this.evaluate(H.property,ce)}else ze=new ft(H.property.value);let $e;if(ne instanceof ct){if(!(ze instanceof ft))throw new Error(`Cannot access property with non-string: got ${ze.type}`);$e=ne.value.get(ze.value)??ne.builtins.get(ze.value)}else if(ne instanceof Re||ne instanceof ft)if(ze instanceof lt)$e=ne.value.at(ze.value),ne instanceof ft&&($e=new ft(ne.value.at(ze.value)));else if(ze instanceof ft)$e=ne.builtins.get(ze.value);else throw new Error(`Cannot access property with non-string/non-number: got ${ze.type}`);else{if(!(ze instanceof ft))throw new Error(`Cannot access property with non-string: got ${ze.type}`);$e=ne.builtins.get(ze.value)}return $e instanceof Le?$e:new wt}evaluateSet(H,ce){const ne=this.evaluate(H.value,ce);if(H.assignee.type==="Identifier"){const ze=H.assignee.value;ce.setVariable(ze,ne)}else if(H.assignee.type==="MemberExpression"){const ze=H.assignee,$e=this.evaluate(ze.object,ce);if(!($e instanceof ct))throw new Error("Cannot assign to member of non-object");if(ze.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");$e.value.set(ze.property.value,ne)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(H.assignee)}`);return new ht}evaluateIf(H,ce){const ne=this.evaluate(H.test,ce);return this.evaluateBlock(ne.__bool__().value?H.body:H.alternate,ce)}evaluateFor(H,ce){const ne=new Bt(ce);let ze,$e;if(H.iterable.type==="SelectExpression"){const Vt=H.iterable;$e=this.evaluate(Vt.iterable,ne),ze=Vt.test}else $e=this.evaluate(H.iterable,ne);if(!($e instanceof Re))throw new Error(`Expected iterable type in for loop: got ${$e.type}`);const gt=[],It=[];for(let Vt=0;Vt<$e.value.length;++Vt){const Xt=new Bt(ne),Jt=$e.value[Vt];let wr;if(H.loopvar.type==="Identifier")wr=Rr=>Rr.setVariable(H.loopvar.value,Jt);else if(H.loopvar.type==="TupleLiteral"){const Rr=H.loopvar;if(Jt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Jt.type}`);const $s=Jt;if(Rr.value.length!==$s.value.length)throw new Error(`Too ${Rr.value.length>$s.value.length?"few":"many"} items to unpack`);wr=os=>{for(let Ks=0;Ks<Rr.value.length;++Ks){if(Rr.value[Ks].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Rr.value[Ks].type}`);os.setVariable(Rr.value[Ks].value,$s.value[Ks])}}}else throw new Error(`Invalid loop variable(s): ${H.loopvar.type}`);ze&&(wr(Xt),!this.evaluate(ze,Xt).__bool__().value)||(gt.push(Jt),It.push(wr))}let Nt="",_t=!0;for(let Vt=0;Vt<gt.length;++Vt){const Xt=new Map([["index",new lt(Vt+1)],["index0",new lt(Vt)],["revindex",new lt(gt.length-Vt)],["revindex0",new lt(gt.length-Vt-1)],["first",new pt(Vt===0)],["last",new pt(Vt===gt.length-1)],["length",new lt(gt.length)],["previtem",Vt>0?gt[Vt-1]:new wt],["nextitem",Vt<gt.length-1?gt[Vt+1]:new wt]]);ne.setVariable("loop",new ct(Xt)),It[Vt](ne);const Jt=this.evaluateBlock(H.body,ne);Nt+=Jt.value,_t=!1}if(_t){const Vt=this.evaluateBlock(H.defaultBlock,ne);Nt+=Vt.value}return new ft(Nt)}evaluateMacro(H,ce){return ce.setVariable(H.name.value,new Qe((ne,ze)=>{var It;const $e=new Bt(ze);ne=ne.slice();let gt;((It=ne.at(-1))==null?void 0:It.type)==="KeywordArgumentsValue"&&(gt=ne.pop());for(let Nt=0;Nt<H.args.length;++Nt){const _t=H.args[Nt],Vt=ne[Nt];if(_t.type==="Identifier"){const Xt=_t;if(!Vt)throw new Error(`Missing positional argument: ${Xt.value}`);$e.setVariable(Xt.value,Vt)}else if(_t.type==="KeywordArgumentExpression"){const Xt=_t,Jt=Vt??(gt==null?void 0:gt.value.get(Xt.key.value))??this.evaluate(Xt.value,$e);$e.setVariable(Xt.key.value,Jt)}else throw new Error(`Unknown argument type: ${_t.type}`)}return this.evaluateBlock(H.body,$e)})),new ht}evaluate(H,ce){if(H===void 0)return new wt;switch(H.type){case"Program":return this.evalProgram(H,ce);case"Set":return this.evaluateSet(H,ce);case"If":return this.evaluateIf(H,ce);case"For":return this.evaluateFor(H,ce);case"Macro":return this.evaluateMacro(H,ce);case"NumericLiteral":return new lt(Number(H.value));case"StringLiteral":return new ft(H.value);case"BooleanLiteral":return new pt(H.value);case"NullLiteral":return new ht(H.value);case"ArrayLiteral":return new Re(H.value.map(ne=>this.evaluate(ne,ce)));case"TupleLiteral":return new Se(H.value.map(ne=>this.evaluate(ne,ce)));case"ObjectLiteral":{const ne=new Map;for(const[ze,$e]of H.value){const gt=this.evaluate(ze,ce);if(!(gt instanceof ft))throw new Error(`Object keys must be strings: got ${gt.type}`);ne.set(gt.value,this.evaluate($e,ce))}return new ct(ne)}case"Identifier":return this.evaluateIdentifier(H,ce);case"CallExpression":return this.evaluateCallExpression(H,ce);case"MemberExpression":return this.evaluateMemberExpression(H,ce);case"UnaryExpression":return this.evaluateUnaryExpression(H,ce);case"BinaryExpression":return this.evaluateBinaryExpression(H,ce);case"FilterExpression":return this.evaluateFilterExpression(H,ce);case"TestExpression":return this.evaluateTestExpression(H,ce);default:throw new SyntaxError(`Unknown node type: ${H.type}`)}}};function oe(H){switch(typeof H){case"number":return new lt(H);case"string":return new ft(H);case"boolean":return new pt(H);case"undefined":return new wt;case"object":return H===null?new ht:Array.isArray(H)?new Re(H.map(oe)):new ct(new Map(Object.entries(H).map(([ce,ne])=>[ce,oe(ne)])));case"function":return new Qe((ce,ne)=>{const ze=H(...ce.map($e=>$e.value))??null;return oe(ze)});default:throw new Error(`Cannot convert to runtime value: ${H}`)}}function zt(H,ce,ne){const ze=ne??0;switch(H.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(H.value);case"ArrayValue":case"ObjectValue":{const $e=ce?" ".repeat(ce):"",gt=`
`+$e.repeat(ze),It=gt+$e;if(H.type==="ArrayValue"){const Nt=H.value.map(_t=>zt(_t,ce,ze+1));return ce?`[${It}${Nt.join(`,${It}`)}${gt}]`:`[${Nt.join(", ")}]`}else{const Nt=Array.from(H.value.entries()).map(([_t,Vt])=>{const Xt=`"${_t}": ${zt(Vt,ce,ze+1)}`;return ce?`${It}${Xt}`:Xt});return ce?`{${Nt.join(",")}${gt}}`:`{${Nt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${H.type}`)}}var ve=class{constructor(H){Te(this,"parsed");const ce=M(H,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ue(ce)}render(H){const ce=new Bt;if(ce.set("false",!1),ce.set("true",!0),ce.set("raise_exception",$e=>{throw new Error($e)}),ce.set("range",ie),H)for(const[$e,gt]of Object.entries(H))ce.set($e,gt);return new Mt(ce).run(this.parsed).value}}},"./src/backends/onnx.js":(i,o,a)=>{var u;a.r(o),a.d(o,{Tensor:()=>y.Tensor,createInferenceSession:()=>Z,deviceToExecutionProviders:()=>N,isONNXProxy:()=>q,isONNXTensor:()=>O});var p=a("./src/env.js"),h=a("?2ce3"),C=a("onnxruntime-web"),y=a("onnxruntime-common");const k=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),_=[];let v,M;const B=Symbol.for("onnxruntime");if(B in globalThis)M=globalThis[B];else if(p.apis.IS_NODE_ENV){switch(M=h??(u||(u=a.t(h,2))),process.platform){case"win32":_.push("dml");break;case"linux":process.arch==="x64"&&_.push("cuda");break}_.push("cpu"),v=["cpu"]}else M=C,p.apis.IS_WEBNN_AVAILABLE&&_.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),p.apis.IS_WEBGPU_AVAILABLE&&_.push("webgpu"),_.push("wasm"),v=["wasm"];const S=M.InferenceSession;function N(f=null){if(!f)return v;switch(f){case"auto":return _;case"gpu":return _.filter(I=>["webgpu","cuda","dml","webnn-gpu"].includes(I))}if(_.includes(f))return[k[f]??f];throw new Error(`Unsupported device: "${f}". Should be one of: ${_.join(", ")}.`)}let V=null;async function Z(f,I,e){V&&await V;const c=S.create(f,I);V??(V=c);const P=await c;return P.config=e,P}function O(f){return f instanceof M.Tensor}const Q=M==null?void 0:M.env;Q!=null&&Q.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!Q.wasm.wasmPaths&&(Q.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${p.env.version}/dist/`),Q.wasm.proxy=!1),Q!=null&&Q.webgpu&&(Q.webgpu.powerPreference="high-performance");function q(){var f;return(f=Q==null?void 0:Q.wasm)==null?void 0:f.proxy}p.env.backends.onnx=Q},"./src/base/feature_extraction_utils.js":(i,o,a)=>{a.r(o),a.d(o,{FeatureExtractor:()=>C,validate_audio_inputs:()=>y});var u=a("./src/utils/constants.js"),p=a("./src/utils/generic.js"),h=a("./src/utils/hub.js");class C extends p.Callable{constructor(_){super(),this.config=_}static async from_pretrained(_,v){const M=await(0,h.getModelJSON)(_,u.FEATURE_EXTRACTOR_NAME,!0,v);return new this(M)}}function y(k,_){var v;if(!(k instanceof Float32Array||k instanceof Float64Array))throw new Error(`${_} expects input to be a Float32Array or a Float64Array, but got ${((v=k==null?void 0:k.constructor)==null?void 0:v.name)??typeof k} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(i,o,a)=>{a.r(o),a.d(o,{ImageProcessor:()=>f,center_to_corners_format:()=>M,post_process_instance_segmentation:()=>q,post_process_object_detection:()=>B,post_process_panoptic_segmentation:()=>Q,post_process_semantic_segmentation:()=>S});var u=a("./src/utils/generic.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/maths.js");a("./src/utils/image.js");var C=a("./src/utils/core.js"),y=a("./src/utils/hub.js"),k=a("./src/utils/constants.js");function _(I,e,c=0,P=null){const J=I/e;let D=(0,h.bankers_round)(J)*e;return P!==null&&D>P&&(D=Math.floor(J)*e),D<c&&(D=Math.ceil(J)*e),D}function v([I,e],c){return[Math.max(Math.floor(I/c),1)*c,Math.max(Math.floor(e/c),1)*c]}function M([I,e,c,P]){return[I-c/2,e-P/2,I+c/2,e+P/2]}function B(I,e=.5,c=null,P=!1){const J=I.logits,D=I.pred_boxes,[j,Ie,ge]=J.dims;if(c!==null&&c.length!==j)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let ke=[];for(let Ee=0;Ee<j;++Ee){let Ne=c!==null?c[Ee]:null,Xe={boxes:[],classes:[],scores:[]},At=J[Ee],xe=D[Ee];for(let ye=0;ye<Ie;++ye){let ue=At[ye],ie=[],be;if(P){be=ue.sigmoid().data;for(let Ye=0;Ye<be.length;++Ye)be[Ye]>e&&ie.push(Ye)}else{let Ye=(0,h.max)(ue.data)[1];if(Ye===ge-1||(be=(0,h.softmax)(ue.data),be[Ye]<e))continue;ie.push(Ye)}for(const Ye of ie){let Le=xe[ye].data;Le=M(Le),Ne!==null&&(Le=Le.map((lt,ft)=>lt*Ne[(ft+1)%2])),Xe.boxes.push(Le),Xe.classes.push(Ye),Xe.scores.push(be[Ye])}}ke.push(Xe)}return ke}function S(I,e=null){const c=I.logits,P=c.dims[0];if(e!==null&&e.length!==P)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const J=[];for(let D=0;D<P;++D){const j=e!==null?e[D]:null;let Ie=c[D];j!==null&&(Ie=(0,p.interpolate)(Ie,j,"bilinear",!1));const[ge,ke]=j??Ie.dims.slice(-2),Ee=new p.Tensor("int32",new Int32Array(ge*ke),[ge,ke]),Ne=Ie[0].data,Xe=Ee.data;for(let ye=1;ye<Ie.dims[0];++ye){const ue=Ie[ye].data;for(let ie=0;ie<ue.length;++ie)ue[ie]>Ne[ie]&&(Ne[ie]=ue[ie],Xe[ie]=ye)}const At=new Array(Ie.dims[0]);for(let ye=0;ye<Xe.length;++ye){const ue=Xe[ye];At[ue]=ue}const xe=At.filter(ye=>ye!==void 0);J.push({segmentation:Ee,labels:xe})}return J}function N(I,e,c,P){const J=[],D=[],j=[];for(let Ie=0;Ie<I.dims[0];++Ie){const ge=I[Ie],ke=e[Ie],Ee=(0,h.max)(ge.data)[1];if(Ee===P)continue;const Xe=(0,h.softmax)(ge.data)[Ee];Xe>c&&(J.push(ke),D.push(Xe),j.push(Ee))}return[J,D,j]}function V(I,e,c,P=.5,J=.8){const D=[];let j=0,Ie=0;const ge=e[c].data;for(let Ee=0;Ee<I.length;++Ee)I[Ee]===c&&(D.push(Ee),++j),ge[Ee]>=P&&++Ie;let ke=j>0&&Ie>0;return ke&&(ke=j/Ie>J),[ke,D]}function Z(I,e,c,P,J,D=null,j=null){const[Ie,ge]=j??I[0].dims,ke=new p.Tensor("int32",new Int32Array(Ie*ge),[Ie,ge]),Ee=[];if(j!==null)for(let ye=0;ye<I.length;++ye)I[ye]=(0,p.interpolate)(I[ye],j,"bilinear",!1);const Ne=new Int32Array(I[0].data.length),Xe=new Float32Array(I[0].data.length);for(let ye=0;ye<I.length;++ye){let ue=e[ye];const ie=I[ye].data;for(let be=0;be<ie.length;++be)ie[be]*=ue,ie[be]>Xe[be]&&(Ne[be]=ye,Xe[be]=ie[be])}let At=0;const xe=ke.data;for(let ye=0;ye<c.length;++ye){const ue=c[ye],[ie,be]=V(Ne,I,ye,P,J);if(ie){++At;for(const Ye of be)xe[Ye]=At;Ee.push({id:At,label_id:ue,score:e[ye]})}}return[ke,Ee]}function O(I,e,c=28,P=56*56,J=14*14*4*1280){if(I<c||e<c)throw new Error(`height:${I} or width:${e} must be larger than factor:${c}`);if(Math.max(I,e)/Math.min(I,e)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(I,e)/Math.min(I,e)}`);let D=Math.round(I/c)*c,j=Math.round(e/c)*c;if(D*j>J){const Ie=Math.sqrt(I*e/J);D=Math.floor(I/Ie/c)*c,j=Math.floor(e/Ie/c)*c}else if(D*j<P){const Ie=Math.sqrt(P/(I*e));D=Math.ceil(I*Ie/c)*c,j=Math.ceil(e*Ie/c)*c}return[D,j]}function Q(I,e=.5,c=.5,P=.8,J=null,D=null){J===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),J=new Set);const j=I.class_queries_logits??I.logits,ge=(I.masks_queries_logits??I.pred_masks).sigmoid();let[ke,Ee,Ne]=j.dims;if(Ne-=1,D!==null&&D.length!==ke)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Xe=[];for(let At=0;At<ke;++At){let xe=D!==null?D[At]:null,ye=j[At],ue=ge[At],[ie,be,Ye]=N(ye,ue,e,Ne);if(Ye.length===0){let[ft,pt]=xe??ue.dims.slice(-2),ct=new p.Tensor("int32",new Int32Array(ft*pt).fill(-1),[ft,pt]);Xe.push({segmentation:ct,segments_info:[]});continue}let[Le,lt]=Z(ie,be,Ye,c,P,J,xe);Xe.push({segmentation:Le,segments_info:lt})}return Xe}function q(I,e=.5,c=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class f extends u.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??this.size!==void 0,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,c,P=2){const J=e.height,D=e.width,j=c.height,Ie=c.width;let ge=Math.min(J,j),ke=Math.min(D,Ie);return ge===J&&ke===D?e:(J>D?ke=Math.floor(D*ge/J):D>J&&(ge=Math.floor(J*ke/D)),await e.resize(ke,ge,{resample:P}))}async crop_margin(e,c=200){const P=e.clone().grayscale(),J=(0,h.min)(P.data)[0],j=(0,h.max)(P.data)[0]-J;if(j===0)return e;const Ie=c/255;let ge=P.width,ke=P.height,Ee=0,Ne=0;const Xe=P.data;for(let At=0;At<P.height;++At){const xe=At*P.width;for(let ye=0;ye<P.width;++ye)(Xe[xe+ye]-J)/j<Ie&&(ge=Math.min(ge,ye),ke=Math.min(ke,At),Ee=Math.max(Ee,ye),Ne=Math.max(Ne,At))}return e=await e.crop([ge,ke,Ee,Ne]),e}pad_image(e,c,P,{mode:J="constant",center:D=!1,constant_values:j=0}={}){const[Ie,ge,ke]=c;let Ee,Ne;if(typeof P=="number"?(Ee=P,Ne=P):P==="square"?Ee=Ne=Math.max(Ie,ge):(Ee=P.width,Ne=P.height),Ee!==ge||Ne!==Ie){const Xe=new Float32Array(Ee*Ne*ke);if(Array.isArray(j))for(let ye=0;ye<Xe.length;++ye)Xe[ye]=j[ye%ke];else j!==0&&Xe.fill(j);const[At,xe]=D?[Math.floor((Ee-ge)/2),Math.floor((Ne-Ie)/2)]:[0,0];for(let ye=0;ye<Ie;++ye){const ue=(ye+xe)*Ee,ie=ye*ge;for(let be=0;be<ge;++be){const Ye=(ue+be+At)*ke,Le=(ie+be)*ke;for(let lt=0;lt<ke;++lt)Xe[Ye+lt]=e[Le+lt]}}if(J==="symmetric"){if(D)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ye=Ie-1,ue=ge-1;for(let ie=0;ie<Ne;++ie){const be=ie*Ee,Ye=(0,C.calculateReflectOffset)(ie,ye)*ge;for(let Le=0;Le<Ee;++Le){if(ie<Ie&&Le<ge)continue;const lt=(be+Le)*ke,ft=(Ye+(0,C.calculateReflectOffset)(Le,ue))*ke;for(let pt=0;pt<ke;++pt)Xe[lt+pt]=e[ft+pt]}}}e=Xe,c=[Ne,Ee,ke]}return[e,c]}rescale(e){for(let c=0;c<e.length;++c)e[c]=this.rescale_factor*e[c]}get_resize_output_image_size(e,c){const[P,J]=e.size;let D,j;if(this.do_thumbnail){const{height:Ie,width:ge}=c;D=Math.min(Ie,ge)}else Number.isInteger(c)?(D=c,j=this.config.max_size??D):c!==void 0&&(D=c.shortest_edge,j=c.longest_edge);if(D!==void 0||j!==void 0){const Ie=D===void 0?1:Math.max(D/P,D/J),ge=P*Ie,ke=J*Ie,Ee=j===void 0?1:Math.min(j/ge,j/ke);let Ne=Math.floor(Number((ge*Ee).toFixed(2))),Xe=Math.floor(Number((ke*Ee).toFixed(2)));return this.size_divisibility!==void 0&&([Ne,Xe]=v([Ne,Xe],this.size_divisibility)),[Ne,Xe]}else if(c!==void 0&&c.width!==void 0&&c.height!==void 0){let Ie=c.width,ge=c.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let ke=ge/J,Ee=Ie/P;Math.abs(1-Ee)<Math.abs(1-ke)?ke=Ee:Ee=ke,ge=_(ke*J,this.config.ensure_multiple_of),Ie=_(Ee*P,this.config.ensure_multiple_of)}return[Ie,ge]}else{if(this.size_divisibility!==void 0)return v([P,J],this.size_divisibility);if(c.min_pixels!==void 0&&c.max_pixels!==void 0){const{min_pixels:Ie,max_pixels:ge}=c,ke=this.config.patch_size*this.config.merge_size;return O(J,P,ke,Ie,ge)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(c)}`)}}async resize(e){const[c,P]=this.get_resize_output_image_size(e,this.size);return await e.resize(c,P,{resample:this.resample})}async preprocess(e,{do_normalize:c=null,do_pad:P=null,do_convert_rgb:J=null,do_convert_grayscale:D=null,do_flip_channel_order:j=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[Ie,ge]=e.size;if(J??this.do_convert_rgb?e=e.rgb():D&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let At,xe;Number.isInteger(this.crop_size)?(At=this.crop_size,xe=this.crop_size):(At=this.crop_size.width,xe=this.crop_size.height),e=await e.center_crop(At,xe)}const ke=[e.height,e.width];let Ee=Float32Array.from(e.data),Ne=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(Ee),c??this.do_normalize){let At=this.image_mean;Array.isArray(this.image_mean)||(At=new Array(e.channels).fill(At));let xe=this.image_std;if(Array.isArray(this.image_std)||(xe=new Array(e.channels).fill(At)),At.length!==e.channels||xe.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${At.length}) and \`image_std\` (${xe.length}) must match the number of channels in the image (${e.channels}).`);for(let ye=0;ye<Ee.length;ye+=e.channels)for(let ue=0;ue<e.channels;++ue)Ee[ye+ue]=(Ee[ye+ue]-At[ue])/xe[ue]}if(P??this.do_pad){if(this.pad_size)[Ee,Ne]=this.pad_image(Ee,[e.height,e.width,e.channels],this.pad_size);else if(this.size_divisibility){const[At,xe]=v([Ne[1],Ne[0]],this.size_divisibility);[Ee,Ne]=this.pad_image(Ee,Ne,{width:At,height:xe})}}if(j??this.do_flip_channel_order){if(Ne[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let At=0;At<Ee.length;At+=3){const xe=Ee[At];Ee[At]=Ee[At+2],Ee[At+2]=xe}}const Xe=new p.Tensor("float32",Ee,Ne).permute(2,0,1);return{original_size:[ge,Ie],reshaped_input_size:ke,pixel_values:Xe}}async _call(e,...c){Array.isArray(e)||(e=[e]);const P=await Promise.all(e.map(D=>this.preprocess(D)));return{pixel_values:(0,p.stack)(P.map(D=>D.pixel_values),0),original_sizes:P.map(D=>D.original_size),reshaped_input_sizes:P.map(D=>D.reshaped_input_size)}}static async from_pretrained(e,c){const P=await(0,y.getModelJSON)(e,k.IMAGE_PROCESSOR_NAME,!0,c);return new this(P)}}},"./src/base/processing_utils.js":(i,o,a)=>{a.r(o),a.d(o,{Processor:()=>C});var u=a("./src/utils/constants.js"),p=a("./src/utils/generic.js"),h=a("./src/utils/hub.js");class C extends p.Callable{constructor(k,_){super(),this.config=k,this.components=_}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(k,_={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(k,{tokenize:!1,..._})}batch_decode(...k){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...k)}decode(...k){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...k)}async _call(k,..._){for(const v of[this.image_processor,this.feature_extractor,this.tokenizer])if(v)return v(k,..._);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(k,_){const[v,M]=await Promise.all([this.uses_processor_config?(0,h.getModelJSON)(k,u.PROCESSOR_NAME,!0,_):{},Promise.all(this.classes.filter(B=>B in this).map(async B=>{const S=await this[B].from_pretrained(k,_);return[B.replace(/_class$/,""),S]})).then(Object.fromEntries)]);return new this(v,M)}}Te(C,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Te(C,"uses_processor_config",!1)},"./src/configs.js":(i,o,a)=>{a.r(o),a.d(o,{AutoConfig:()=>_,PretrainedConfig:()=>k,getKeyValueShapes:()=>y});var u=a("./src/utils/core.js"),p=a("./src/utils/hub.js");async function h(v,M){return await(0,p.getModelJSON)(v,"config.json",!0,M)}function C(v){const M={};let B={};switch(v.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":B=C(v.text_config);break;case"moondream1":B=C(v.phi_config);break;case"musicgen":B=C(v.decoder);break;case"multi_modality":B=C(v.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":M.num_heads="n_head",M.num_layers="n_layer",M.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":M.num_heads="num_attention_heads",M.num_layers="num_hidden_layers",M.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":M.num_heads="num_key_value_heads",M.num_layers="num_hidden_layers",M.hidden_size="hidden_size",M.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":M.num_heads="num_key_value_heads",M.num_layers="num_hidden_layers",M.dim_kv="head_dim";break;case"openelm":M.num_heads="num_kv_heads",M.num_layers="num_transformer_layers",M.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":M.num_heads="num_heads",M.num_layers="num_layers",M.hidden_size="hidden_size";break;case"bloom":M.num_heads="n_head",M.num_layers="n_layer",M.hidden_size="hidden_size";break;case"mpt":M.num_heads="n_heads",M.num_layers="n_layers",M.hidden_size="d_model";break;case"exaone":M.num_heads="num_key_value_heads",M.num_layers="num_layers",M.dim_kv="head_dim",M.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":M.num_decoder_layers="num_decoder_layers",M.num_decoder_heads="num_heads",M.decoder_dim_kv="d_kv",M.num_encoder_layers="num_layers",M.num_encoder_heads="num_heads",M.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":M.num_decoder_layers="decoder_layers",M.num_decoder_heads="decoder_attention_heads",M.decoder_hidden_size="d_model",M.num_encoder_layers="encoder_layers",M.num_encoder_heads="encoder_attention_heads",M.encoder_hidden_size="d_model";break;case"speecht5":M.num_decoder_layers="decoder_layers",M.num_decoder_heads="decoder_attention_heads",M.decoder_hidden_size="hidden_size",M.num_encoder_layers="encoder_layers",M.num_encoder_heads="encoder_attention_heads",M.encoder_hidden_size="hidden_size";break;case"trocr":M.num_encoder_layers=M.num_decoder_layers="decoder_layers",M.num_encoder_heads=M.num_decoder_heads="decoder_attention_heads",M.encoder_hidden_size=M.decoder_hidden_size="d_model";break;case"musicgen_decoder":M.num_encoder_layers=M.num_decoder_layers="num_hidden_layers",M.num_encoder_heads=M.num_decoder_heads="num_attention_heads",M.encoder_hidden_size=M.decoder_hidden_size="hidden_size";break;case"moonshine":M.num_decoder_layers="decoder_num_hidden_layers",M.num_decoder_heads="decoder_num_key_value_heads",M.num_encoder_layers="encoder_num_hidden_layers",M.num_encoder_heads="encoder_num_key_value_heads",M.encoder_hidden_size=M.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const N=C(v.decoder),V="num_decoder_layers"in N,Z=(0,u.pick)(v,["model_type","is_encoder_decoder"]);return V?(Z.num_decoder_layers=N.num_decoder_layers,Z.num_decoder_heads=N.num_decoder_heads,Z.decoder_hidden_size=N.decoder_hidden_size,Z.num_encoder_layers=N.num_encoder_layers,Z.num_encoder_heads=N.num_encoder_heads,Z.encoder_hidden_size=N.encoder_hidden_size):(Z.num_layers=N.num_layers,Z.num_heads=N.num_heads,Z.hidden_size=N.hidden_size),Z}const S={...B,...(0,u.pick)(v,["model_type","multi_query","is_encoder_decoder"])};for(const N in M)S[N]=v[M[N]];return S}function y(v,{prefix:M="past_key_values",batch_size:B=1}={}){const S={},N=v.normalized_config;if(N.is_encoder_decoder&&"num_encoder_heads"in N&&"num_decoder_heads"in N){const V=N.encoder_dim_kv??N.encoder_hidden_size/N.num_encoder_heads,Z=N.decoder_dim_kv??N.decoder_hidden_size/N.num_decoder_heads,O=[B,N.num_encoder_heads,0,V],Q=[B,N.num_decoder_heads,0,Z];for(let q=0;q<N.num_decoder_layers;++q)S[`${M}.${q}.encoder.key`]=O,S[`${M}.${q}.encoder.value`]=O,S[`${M}.${q}.decoder.key`]=Q,S[`${M}.${q}.decoder.value`]=Q}else{const V=N.num_heads,Z=N.num_layers,O=N.dim_kv??N.hidden_size/(N.num_attention_heads??V);if(N.model_type==="falcon"){const Q=[B*V,0,O];for(let q=0;q<Z;++q)S[`${M}.${q}.key`]=Q,S[`${M}.${q}.value`]=Q}else if(N.multi_query){const Q=[B*V,0,2*O];for(let q=0;q<Z;++q)S[`${M}.${q}.key_value`]=Q}else if(N.model_type==="bloom"){const Q=[B*V,O,0],q=[B*V,0,O];for(let f=0;f<Z;++f)S[`${M}.${f}.key`]=Q,S[`${M}.${f}.value`]=q}else if(N.model_type==="openelm")for(let Q=0;Q<Z;++Q){const q=[B,V[Q],0,O];S[`${M}.${Q}.key`]=q,S[`${M}.${Q}.value`]=q}else{const Q=[B,V,0,O];for(let q=0;q<Z;++q)S[`${M}.${q}.key`]=Q,S[`${M}.${q}.value`]=Q}}return S}class k{constructor(M){Te(this,"model_type",null);Te(this,"is_encoder_decoder",!1);Te(this,"max_position_embeddings");Te(this,"transformers.js_config");Object.assign(this,M),this.normalized_config=C(this)}static async from_pretrained(M,{progress_callback:B=null,config:S=null,cache_dir:N=null,local_files_only:V=!1,revision:Z="main"}={}){S&&!(S instanceof k)&&(S=new k(S));const O=S??await h(M,{progress_callback:B,config:S,cache_dir:N,local_files_only:V,revision:Z});return new this(O)}}class _{static async from_pretrained(...M){return k.from_pretrained(...M)}}},"./src/env.js":(i,o,a)=>{var P,J;a.r(o),a.d(o,{apis:()=>Z,env:()=>e});var u=a("?569f"),p=a("?3f59"),h=a("?154a");const C="3.4.2",y=typeof window<"u"&&typeof window.document<"u",k=typeof self<"u"&&((P=self.constructor)==null?void 0:P.name)==="DedicatedWorkerGlobalScope",_=typeof self<"u"&&"caches"in self,v=typeof navigator<"u"&&"gpu"in navigator,M=typeof navigator<"u"&&"ml"in navigator,B=typeof process<"u",S=B&&((J=process==null?void 0:process.release)==null?void 0:J.name)==="node",N=!c(u),V=!c(p),Z=Object.freeze({IS_BROWSER_ENV:y,IS_WEBWORKER_ENV:k,IS_WEB_CACHE_AVAILABLE:_,IS_WEBGPU_AVAILABLE:v,IS_WEBNN_AVAILABLE:M,IS_PROCESS_AVAILABLE:B,IS_NODE_ENV:S,IS_FS_AVAILABLE:N,IS_PATH_AVAILABLE:V}),O=N&&V;let Q="./";if(O){const D=Object({url:self.location.href}).url;D?Q=p.dirname(p.dirname(h.fileURLToPath(D))):typeof __dirname<"u"&&(Q=p.dirname(__dirname))}const q=O?p.join(Q,"/.cache/"):null,f="/models/",I=O?p.join(Q,f):f,e={version:C,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(y||k),localModelPath:I,useFS:N,useBrowserCache:_,useFSCache:N,cacheDir:q,useCustomCache:!1,customCache:null};function c(D){return Object.keys(D).length===0}},"./src/generation/configuration_utils.js":(i,o,a)=>{a.r(o),a.d(o,{GenerationConfig:()=>p});var u=a("./src/utils/core.js");class p{constructor(C){Te(this,"max_length",20);Te(this,"max_new_tokens",null);Te(this,"min_length",0);Te(this,"min_new_tokens",null);Te(this,"early_stopping",!1);Te(this,"max_time",null);Te(this,"do_sample",!1);Te(this,"num_beams",1);Te(this,"num_beam_groups",1);Te(this,"penalty_alpha",null);Te(this,"use_cache",!0);Te(this,"temperature",1);Te(this,"top_k",50);Te(this,"top_p",1);Te(this,"typical_p",1);Te(this,"epsilon_cutoff",0);Te(this,"eta_cutoff",0);Te(this,"diversity_penalty",0);Te(this,"repetition_penalty",1);Te(this,"encoder_repetition_penalty",1);Te(this,"length_penalty",1);Te(this,"no_repeat_ngram_size",0);Te(this,"bad_words_ids",null);Te(this,"force_words_ids",null);Te(this,"renormalize_logits",!1);Te(this,"constraints",null);Te(this,"forced_bos_token_id",null);Te(this,"forced_eos_token_id",null);Te(this,"remove_invalid_values",!1);Te(this,"exponential_decay_length_penalty",null);Te(this,"suppress_tokens",null);Te(this,"streamer",null);Te(this,"begin_suppress_tokens",null);Te(this,"forced_decoder_ids",null);Te(this,"guidance_scale",null);Te(this,"num_return_sequences",1);Te(this,"output_attentions",!1);Te(this,"output_hidden_states",!1);Te(this,"output_scores",!1);Te(this,"return_dict_in_generate",!1);Te(this,"pad_token_id",null);Te(this,"bos_token_id",null);Te(this,"eos_token_id",null);Te(this,"encoder_no_repeat_ngram_size",0);Te(this,"decoder_start_token_id",null);Te(this,"generation_kwargs",{});Object.assign(this,(0,u.pick)(C,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(i,o,a)=>{a.r(o),a.d(o,{ClassifierFreeGuidanceLogitsProcessor:()=>O,ForcedBOSTokenLogitsProcessor:()=>k,ForcedEOSTokenLogitsProcessor:()=>_,LogitsProcessor:()=>h,LogitsProcessorList:()=>y,LogitsWarper:()=>C,MinLengthLogitsProcessor:()=>N,MinNewTokensLengthLogitsProcessor:()=>V,NoBadWordsLogitsProcessor:()=>Z,NoRepeatNGramLogitsProcessor:()=>B,RepetitionPenaltyLogitsProcessor:()=>S,SuppressTokensAtBeginLogitsProcessor:()=>v,TemperatureLogitsWarper:()=>Q,TopKLogitsWarper:()=>f,TopPLogitsWarper:()=>q,WhisperTimeStampLogitsProcessor:()=>M});var u=a("./src/utils/generic.js");a("./src/utils/tensor.js");var p=a("./src/utils/maths.js");class h extends u.Callable{_call(e,c){throw Error("`_call` should be implemented in a subclass")}}class C extends u.Callable{_call(e,c){throw Error("`_call` should be implemented in a subclass")}}class y extends u.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,c){let P=c;for(const J of this.processors)P=J(e,P);return P}[Symbol.iterator](){return this.processors.values()}}class k extends h{constructor(e){super(),this.bos_token_id=e}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length===1){const J=c[P].data;J.fill(-1/0),J[this.bos_token_id]=0}return c}}class _ extends h{constructor(e,c){super(),this.max_length=e,this.eos_token_id=Array.isArray(c)?c:[c]}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length===this.max_length-1){const J=c[P].data;J.fill(-1/0);for(const D of this.eos_token_id)J[D]=0}return c}}class v extends h{constructor(e,c){super(),this.begin_suppress_tokens=e,this.begin_index=c}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length===this.begin_index){const J=c[P].data;for(const D of this.begin_suppress_tokens)J[D]=-1/0}return c}}class M extends h{constructor(e,c){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=c.length,c.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data;if(J[this.no_timestamps_token_id]=-1/0,e[P].length===this.begin_index-1){J.fill(-1/0),J[this.timestamp_begin]=0;continue}const D=e[P].slice(this.begin_index),j=D.length>=1&&D[D.length-1]>=this.timestamp_begin,Ie=D.length<2||D[D.length-2]>=this.timestamp_begin;if(j&&(Ie?J.subarray(this.timestamp_begin).fill(-1/0):J.subarray(0,this.eos_token_id).fill(-1/0)),e[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const Ne=this.timestamp_begin+this.max_initial_timestamp_index;J.subarray(Ne+1).fill(-1/0)}const ge=(0,p.log_softmax)(J),ke=Math.log(ge.subarray(this.timestamp_begin).map(Math.exp).reduce((Ne,Xe)=>Ne+Xe)),Ee=(0,p.max)(ge.subarray(0,this.timestamp_begin))[0];ke>Ee&&J.subarray(0,this.timestamp_begin).fill(-1/0)}return c}}class B extends h{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const c=e.length,P=[];for(let D=0;D<c+1-this.no_repeat_ngram_size;++D){const j=[];for(let Ie=0;Ie<this.no_repeat_ngram_size;++Ie)j.push(e[D+Ie]);P.push(j.map(Number))}const J=new Map;for(const D of P){const j=D.slice(0,D.length-1),Ie=JSON.stringify(j),ge=J.get(Ie)??[];ge.push(D[D.length-1]),J.set(Ie,ge)}return J}getGeneratedNgrams(e,c){const P=c.slice(c.length+1-this.no_repeat_ngram_size,c.length);return e.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(e){const c=[];if(e.length+1<this.no_repeat_ngram_size)return c;{const P=this.getNgrams(e);return this.getGeneratedNgrams(P,e)}}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data,D=this.calcBannedNgramTokens(e[P]);for(const j of D)J[j]=-1/0}return c}}class S extends h{constructor(e){super(),this.penalty=e}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data;for(const D of new Set(e[P])){const j=Number(D);J[j]<0?J[j]*=this.penalty:J[j]/=this.penalty}}return c}}class N extends h{constructor(e,c){super(),this.min_length=e,this.eos_token_id=Array.isArray(c)?c:[c]}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length<this.min_length){const J=c[P].data;for(const D of this.eos_token_id)J[D]=-1/0}return c}}class V extends h{constructor(e,c,P){super(),this.prompt_length_to_skip=e,this.min_new_tokens=c,this.eos_token_id=Array.isArray(P)?P:[P]}_call(e,c){for(let P=0;P<e.length;++P)if(e[P].length-this.prompt_length_to_skip<this.min_new_tokens){const D=c[P].data;for(const j of this.eos_token_id)D[j]=-1/0}return c}}class Z extends h{constructor(e,c){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(c)?c:[c]}_call(e,c){for(let P=0;P<e.length;++P){const J=c[P].data,D=e[P];for(const j of this.bad_words_ids){let Ie=!0;for(let ge=1;ge<=j.length-1&&j.length<D.length;++ge)if(j.at(-ge-1)!=D.at(-ge)){Ie=!1;break}Ie&&(J[j.at(-1)]=-1/0)}}return c}}class O extends h{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,c){if(c.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${c.dims[0]} for the logits and ${e.length} for the input ids.`);const P=e.length,J=c.slice([0,P],null),D=c.slice([P,c.dims[0]],null);for(let j=0;j<D.data.length;++j)D.data[j]+=(J.data[j]-D.data[j])*this.guidance_scale;return D}}class Q extends C{constructor(e){super(),this.temperature=e}_call(e,c){const P=c.data;for(let J=0;J<P.length;++J)P[J]/=this.temperature;return c}}class q extends C{constructor(e,{filter_value:c=-1/0,min_tokens_to_keep:P=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=e,this.filter_value=c,this.min_tokens_to_keep=P}}class f extends C{constructor(e,{filter_value:c=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,P),this.filter_value=c}}},"./src/generation/logits_sampler.js":(i,o,a)=>{a.r(o),a.d(o,{LogitsSampler:()=>C});var u=a("./src/utils/generic.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/maths.js");a("./src/generation/configuration_utils.js");class C extends u.Callable{constructor(M){super(),this.generation_config=M}async _call(M){return this.sample(M)}async sample(M){throw Error("sample should be implemented in subclasses.")}getLogits(M,B){let S=M.dims.at(-1),N=M.data;if(B===-1)N=N.slice(-S);else{let V=B*S;N=N.slice(V,V+S)}return N}randomSelect(M){let B=0;for(let N=0;N<M.length;++N)B+=M[N];let S=Math.random()*B;for(let N=0;N<M.length;++N)if(S-=M[N],S<=0)return N;return 0}static getSampler(M){if(M.do_sample)return new k(M);if(M.num_beams>1)return new _(M);if(M.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${M.num_return_sequences}.`);return new y(M)}}class y extends C{async sample(M){const B=(0,h.max)(M.data)[1];return[[BigInt(B),0]]}}class k extends C{async sample(M){let B=M.dims.at(-1);this.generation_config.top_k>0&&(B=Math.min(this.generation_config.top_k,B));const[S,N]=await(0,p.topk)(M,B),V=(0,h.softmax)(S.data);return Array.from({length:this.generation_config.num_beams},()=>{const Z=this.randomSelect(V);return[N.data[Z],Math.log(V[Z])]})}}class _ extends C{async sample(M){let B=M.dims.at(-1);this.generation_config.top_k>0&&(B=Math.min(this.generation_config.top_k,B));const[S,N]=await(0,p.topk)(M,B),V=(0,h.softmax)(S.data);return Array.from({length:this.generation_config.num_beams},(Z,O)=>[N.data[O],Math.log(V[O])])}}},"./src/generation/stopping_criteria.js":(i,o,a)=>{a.r(o),a.d(o,{EosTokenCriteria:()=>y,InterruptableStoppingCriteria:()=>k,MaxLengthCriteria:()=>C,StoppingCriteria:()=>p,StoppingCriteriaList:()=>h});var u=a("./src/utils/generic.js");class p extends u.Callable{_call(v,M){throw Error("StoppingCriteria needs to be subclassed")}}class h extends u.Callable{constructor(){super(),this.criteria=[]}push(v){this.criteria.push(v)}extend(v){v instanceof h?v=v.criteria:v instanceof p&&(v=[v]),this.criteria.push(...v)}_call(v,M){const B=new Array(v.length).fill(!1);for(const S of this.criteria){const N=S(v,M);for(let V=0;V<B.length;++V)B[V]||(B[V]=N[V])}return B}[Symbol.iterator](){return this.criteria.values()}}class C extends p{constructor(v,M=null){super(),this.max_length=v,this.max_position_embeddings=M}_call(v){return v.map(M=>M.length>=this.max_length)}}class y extends p{constructor(v){super(),Array.isArray(v)||(v=[v]),this.eos_token_id=v}_call(v,M){return v.map(B=>{const S=B.at(-1);return this.eos_token_id.some(N=>S==N)})}}class k extends p{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(v,M){return new Array(v.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(i,o,a)=>{a.r(o),a.d(o,{BaseStreamer:()=>C,TextStreamer:()=>k,WhisperTextStreamer:()=>_});var u=a("./src/utils/core.js"),p=a("./src/tokenizers.js"),h=a("./src/env.js");class C{put(M){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const y=h.apis.IS_PROCESS_AVAILABLE?v=>process.stdout.write(v):v=>console.log(v);class k extends C{constructor(M,{skip_prompt:B=!1,callback_function:S=null,token_callback_function:N=null,skip_special_tokens:V=!0,decode_kwargs:Z={},...O}={}){super(),this.tokenizer=M,this.skip_prompt=B,this.callback_function=S??y,this.token_callback_function=N,this.decode_kwargs={skip_special_tokens:V,...Z,...O},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(M){var Z;if(M.length>1)throw Error("TextStreamer only supports batch size of 1");const B=this.next_tokens_are_prompt;if(B&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const S=M[0];(Z=this.token_callback_function)==null||Z.call(this,S),this.token_cache=(0,u.mergeArrays)(this.token_cache,S);const N=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let V;B||N.endsWith(`
`)?(V=N.slice(this.print_len),this.token_cache=[],this.print_len=0):N.length>0&&(0,p.is_chinese_char)(N.charCodeAt(N.length-1))?(V=N.slice(this.print_len),this.print_len+=V.length):(V=N.slice(this.print_len,N.lastIndexOf(" ")+1),this.print_len+=V.length),this.on_finalized_text(V,!1)}end(){let M;this.token_cache.length>0?(M=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):M="",this.next_tokens_are_prompt=!0,this.on_finalized_text(M,!0)}on_finalized_text(M,B){var S,N;M.length>0&&((S=this.callback_function)==null||S.call(this,M)),B&&this.callback_function===y&&h.apis.IS_PROCESS_AVAILABLE&&((N=this.callback_function)==null||N.call(this,`
`))}}class _ extends k{constructor(M,{skip_prompt:B=!1,callback_function:S=null,token_callback_function:N=null,on_chunk_start:V=null,on_chunk_end:Z=null,on_finalize:O=null,time_precision:Q=.02,skip_special_tokens:q=!0,decode_kwargs:f={}}={}){super(M,{skip_prompt:B,skip_special_tokens:q,callback_function:S,token_callback_function:N,decode_kwargs:f}),this.timestamp_begin=M.timestamp_begin,this.on_chunk_start=V,this.on_chunk_end=Z,this.on_finalize=O,this.time_precision=Q,this.waiting_for_timestamp=!1}put(M){var S,N;if(M.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const B=M[0];if(B.length===1){const V=Number(B[0])-this.timestamp_begin;if(V>=0){const Z=V*this.time_precision;this.waiting_for_timestamp?(S=this.on_chunk_end)==null||S.call(this,Z):(N=this.on_chunk_start)==null||N.call(this,Z),this.waiting_for_timestamp=!this.waiting_for_timestamp,M=[[]]}}return super.put(M)}end(){var M;super.end(),(M=this.on_finalize)==null||M.call(this)}}},"./src/models.js":(i,o,a)=>{a.r(o),a.d(o,{ASTForAudioClassification:()=>jA,ASTModel:()=>$n,ASTPreTrainedModel:()=>Qr,AlbertForMaskedLM:()=>he,AlbertForQuestionAnswering:()=>pe,AlbertForSequenceClassification:()=>st,AlbertModel:()=>Pt,AlbertPreTrainedModel:()=>Tt,AutoModel:()=>Gt,AutoModelForAudioClassification:()=>Un,AutoModelForAudioFrameClassification:()=>Gn,AutoModelForAudioTextToText:()=>gf,AutoModelForCTC:()=>ri,AutoModelForCausalLM:()=>Vr,AutoModelForDepthEstimation:()=>Il,AutoModelForDocumentQuestionAnswering:()=>$i,AutoModelForImageClassification:()=>Ts,AutoModelForImageFeatureExtraction:()=>t0,AutoModelForImageMatting:()=>Da,AutoModelForImageSegmentation:()=>js,AutoModelForImageTextToText:()=>md,AutoModelForImageToImage:()=>Ui,AutoModelForMaskGeneration:()=>Ha,AutoModelForMaskedLM:()=>Zr,AutoModelForNormalEstimation:()=>Dl,AutoModelForObjectDetection:()=>nn,AutoModelForPoseEstimation:()=>yl,AutoModelForQuestionAnswering:()=>_s,AutoModelForSemanticSegmentation:()=>Us,AutoModelForSeq2SeqLM:()=>cr,AutoModelForSequenceClassification:()=>er,AutoModelForSpeechSeq2Seq:()=>Gr,AutoModelForTextToSpectrogram:()=>Fr,AutoModelForTextToWaveform:()=>Er,AutoModelForTokenClassification:()=>$t,AutoModelForUniversalSegmentation:()=>_a,AutoModelForVision2Seq:()=>ka,AutoModelForXVector:()=>Hn,AutoModelForZeroShotObjectDetection:()=>pn,BartForConditionalGeneration:()=>Ys,BartForSequenceClassification:()=>as,BartModel:()=>xs,BartPretrainedModel:()=>Wr,BaseModelOutput:()=>ht,BeitForImageClassification:()=>Rt,BeitModel:()=>St,BeitPreTrainedModel:()=>xt,BertForMaskedLM:()=>Mt,BertForQuestionAnswering:()=>ve,BertForSequenceClassification:()=>oe,BertForTokenClassification:()=>zt,BertModel:()=>Bt,BertPreTrainedModel:()=>wt,BlenderbotForConditionalGeneration:()=>Fs,BlenderbotModel:()=>Gs,BlenderbotPreTrainedModel:()=>xa,BlenderbotSmallForConditionalGeneration:()=>fa,BlenderbotSmallModel:()=>Ms,BlenderbotSmallPreTrainedModel:()=>Ls,BloomForCausalLM:()=>Fo,BloomModel:()=>EA,BloomPreTrainedModel:()=>yi,CLIPModel:()=>cA,CLIPPreTrainedModel:()=>vr,CLIPSegForImageSegmentation:()=>dA,CLIPSegModel:()=>ei,CLIPSegPreTrainedModel:()=>_r,CLIPTextModel:()=>HA,CLIPTextModelWithProjection:()=>Vn,CLIPVisionModel:()=>mi,CLIPVisionModelWithProjection:()=>no,CamembertForMaskedLM:()=>On,CamembertForQuestionAnswering:()=>qn,CamembertForSequenceClassification:()=>Pn,CamembertForTokenClassification:()=>Dn,CamembertModel:()=>en,CamembertPreTrainedModel:()=>$a,CausalLMOutput:()=>zA,CausalLMOutputWithPast:()=>zc,ChineseCLIPModel:()=>io,ChineseCLIPPreTrainedModel:()=>dl,ClapAudioModelWithProjection:()=>cc,ClapModel:()=>Hd,ClapPreTrainedModel:()=>f0,ClapTextModelWithProjection:()=>lc,CodeGenForCausalLM:()=>Ci,CodeGenModel:()=>Pi,CodeGenPreTrainedModel:()=>fn,CohereForCausalLM:()=>IA,CohereModel:()=>So,CoherePreTrainedModel:()=>Wn,ConvBertForMaskedLM:()=>os,ConvBertForQuestionAnswering:()=>zn,ConvBertForSequenceClassification:()=>Ks,ConvBertForTokenClassification:()=>ts,ConvBertModel:()=>$s,ConvBertPreTrainedModel:()=>Rr,ConvNextForImageClassification:()=>lu,ConvNextModel:()=>Au,ConvNextPreTrainedModel:()=>R0,ConvNextV2ForImageClassification:()=>cu,ConvNextV2Model:()=>Qi,ConvNextV2PreTrainedModel:()=>j0,DPTForDepthEstimation:()=>Zc,DPTModel:()=>F0,DPTPreTrainedModel:()=>G0,DacDecoderModel:()=>Tc,DacDecoderOutput:()=>ld,DacEncoderModel:()=>tf,DacEncoderOutput:()=>Bc,DacModel:()=>cd,DacPreTrainedModel:()=>Ec,DebertaForMaskedLM:()=>Br,DebertaForQuestionAnswering:()=>aa,DebertaForSequenceClassification:()=>zr,DebertaForTokenClassification:()=>qs,DebertaModel:()=>Zt,DebertaPreTrainedModel:()=>sa,DebertaV2ForMaskedLM:()=>Qn,DebertaV2ForQuestionAnswering:()=>ui,DebertaV2ForSequenceClassification:()=>Sn,DebertaV2ForTokenClassification:()=>ci,DebertaV2Model:()=>vn,DebertaV2PreTrainedModel:()=>ks,DecisionTransformerModel:()=>Ic,DecisionTransformerPreTrainedModel:()=>Ju,DeiTForImageClassification:()=>rr,DeiTModel:()=>Ut,DeiTPreTrainedModel:()=>yt,DepthAnythingForDepthEstimation:()=>$c,DepthAnythingPreTrainedModel:()=>Jc,DepthProForDepthEstimation:()=>ru,DepthProPreTrainedModel:()=>O0,DetrForObjectDetection:()=>Ir,DetrForSegmentation:()=>jr,DetrModel:()=>br,DetrObjectDetectionOutput:()=>Ur,DetrPreTrainedModel:()=>sr,DetrSegmentationOutput:()=>As,Dinov2ForImageClassification:()=>uu,Dinov2Model:()=>n0,Dinov2PreTrainedModel:()=>V0,Dinov2WithRegistersForImageClassification:()=>du,Dinov2WithRegistersModel:()=>$A,Dinov2WithRegistersPreTrainedModel:()=>El,DistilBertForMaskedLM:()=>Xn,DistilBertForQuestionAnswering:()=>Ri,DistilBertForSequenceClassification:()=>ai,DistilBertForTokenClassification:()=>fi,DistilBertModel:()=>Fa,DistilBertPreTrainedModel:()=>di,DonutSwinModel:()=>ou,DonutSwinPreTrainedModel:()=>iu,EfficientNetForImageClassification:()=>Hu,EfficientNetModel:()=>Uu,EfficientNetPreTrainedModel:()=>gc,ElectraForMaskedLM:()=>Pr,ElectraForQuestionAnswering:()=>Bs,ElectraForSequenceClassification:()=>Sr,ElectraForTokenClassification:()=>Kt,ElectraModel:()=>Wa,ElectraPreTrainedModel:()=>Va,EsmForMaskedLM:()=>Gi,EsmForSequenceClassification:()=>Fi,EsmForTokenClassification:()=>Jn,EsmModel:()=>ba,EsmPreTrainedModel:()=>Zn,ExaoneForCausalLM:()=>Is,ExaoneModel:()=>mA,ExaonePreTrainedModel:()=>Ao,FalconForCausalLM:()=>Ac,FalconModel:()=>Ru,FalconPreTrainedModel:()=>oc,FastViTForImageClassification:()=>g,FastViTModel:()=>l,FastViTPreTrainedModel:()=>A,Florence2ForConditionalGeneration:()=>AA,Florence2PreTrainedModel:()=>ji,GLPNForDepthEstimation:()=>L0,GLPNModel:()=>nu,GLPNPreTrainedModel:()=>N0,GPT2LMHeadModel:()=>Wo,GPT2Model:()=>Yi,GPT2PreTrainedModel:()=>To,GPTBigCodeForCausalLM:()=>Vi,GPTBigCodeModel:()=>xn,GPTBigCodePreTrainedModel:()=>gr,GPTJForCausalLM:()=>bi,GPTJModel:()=>pA,GPTJPreTrainedModel:()=>zs,GPTNeoForCausalLM:()=>Za,GPTNeoModel:()=>qA,GPTNeoPreTrainedModel:()=>fA,GPTNeoXForCausalLM:()=>ds,GPTNeoXModel:()=>gl,GPTNeoXPreTrainedModel:()=>gA,Gemma2ForCausalLM:()=>kA,Gemma2Model:()=>wo,Gemma2PreTrainedModel:()=>eA,Gemma3ForCausalLM:()=>Cn,Gemma3Model:()=>XA,Gemma3PreTrainedModel:()=>_A,GemmaForCausalLM:()=>$o,GemmaModel:()=>yA,GemmaPreTrainedModel:()=>wi,GlmForCausalLM:()=>fs,GlmModel:()=>bo,GlmPreTrainedModel:()=>gn,GraniteForCausalLM:()=>Do,GraniteModel:()=>Jo,GranitePreTrainedModel:()=>Zo,GroundingDinoForObjectDetection:()=>gu,GroundingDinoPreTrainedModel:()=>fu,GroupViTModel:()=>n,GroupViTPreTrainedModel:()=>s,HeliumForCausalLM:()=>Ko,HeliumModel:()=>Po,HeliumPreTrainedModel:()=>Pa,HieraForImageClassification:()=>ns,HieraModel:()=>Nr,HieraPreTrainedModel:()=>pr,HubertForCTC:()=>l0,HubertForSequenceClassification:()=>Z0,HubertModel:()=>Gu,HubertPreTrainedModel:()=>Vd,IJepaForImageClassification:()=>ko,IJepaModel:()=>DA,IJepaPreTrainedModel:()=>PA,Idefics3ForConditionalGeneration:()=>jo,Idefics3PreTrainedModel:()=>UA,ImageMattingOutput:()=>m0,JAISLMHeadModel:()=>Ho,JAISModel:()=>KA,JAISPreTrainedModel:()=>Uo,JinaCLIPModel:()=>fl,JinaCLIPPreTrainedModel:()=>oo,JinaCLIPTextModel:()=>uA,JinaCLIPVisionModel:()=>Bo,LiteWhisperForConditionalGeneration:()=>cl,LlamaForCausalLM:()=>Yo,LlamaModel:()=>hA,LlamaPreTrainedModel:()=>mo,LlavaForConditionalGeneration:()=>go,LlavaOnevisionForConditionalGeneration:()=>jn,LlavaPreTrainedModel:()=>Ro,LongT5ForConditionalGeneration:()=>fr,LongT5Model:()=>ir,LongT5PreTrainedModel:()=>Ht,M2M100ForConditionalGeneration:()=>Iu,M2M100Model:()=>wu,M2M100PreTrainedModel:()=>Bl,MBartForCausalLM:()=>ha,MBartForConditionalGeneration:()=>qt,MBartForSequenceClassification:()=>Tr,MBartModel:()=>Ns,MBartPreTrainedModel:()=>kr,MPNetForMaskedLM:()=>Nn,MPNetForQuestionAnswering:()=>rn,MPNetForSequenceClassification:()=>zi,MPNetForTokenClassification:()=>Bi,MPNetModel:()=>bn,MPNetPreTrainedModel:()=>Cs,MT5ForConditionalGeneration:()=>Ar,MT5Model:()=>Yt,MT5PreTrainedModel:()=>nr,MarianMTModel:()=>Cu,MarianModel:()=>H0,MarianPreTrainedModel:()=>U0,MaskFormerForInstanceSegmentation:()=>ml,MaskFormerModel:()=>hl,MaskFormerPreTrainedModel:()=>Qo,MaskedLMOutput:()=>kn,Metric3DForDepthEstimation:()=>Q0,Metric3DPreTrainedModel:()=>su,Metric3Dv2ForDepthEstimation:()=>sA,Metric3Dv2PreTrainedModel:()=>au,MgpstrForSceneTextRecognition:()=>kc,MgpstrModelOutput:()=>$u,MgpstrPreTrainedModel:()=>ed,MimiDecoderModel:()=>Ad,MimiDecoderOutput:()=>vc,MimiEncoderModel:()=>Mc,MimiEncoderOutput:()=>od,MimiModel:()=>xc,MimiPreTrainedModel:()=>$l,MistralForCausalLM:()=>ac,MistralModel:()=>Nu,MistralPreTrainedModel:()=>sc,MobileBertForMaskedLM:()=>Ei,MobileBertForQuestionAnswering:()=>Jr,MobileBertForSequenceClassification:()=>pi,MobileBertModel:()=>tn,MobileBertPreTrainedModel:()=>gi,MobileLLMForCausalLM:()=>qo,MobileLLMModel:()=>ls,MobileLLMPreTrainedModel:()=>Co,MobileNetV1ForImageClassification:()=>mc,MobileNetV1ForSemanticSegmentation:()=>Ku,MobileNetV1Model:()=>Yu,MobileNetV1PreTrainedModel:()=>p0,MobileNetV2ForImageClassification:()=>Cc,MobileNetV2ForSemanticSegmentation:()=>qu,MobileNetV2Model:()=>bc,MobileNetV2PreTrainedModel:()=>Cl,MobileNetV3ForImageClassification:()=>Zd,MobileNetV3ForSemanticSegmentation:()=>Jd,MobileNetV3Model:()=>Xd,MobileNetV3PreTrainedModel:()=>ya,MobileNetV4ForImageClassification:()=>Zu,MobileNetV4ForSemanticSegmentation:()=>wc,MobileNetV4Model:()=>Xu,MobileNetV4PreTrainedModel:()=>Jl,MobileViTForImageClassification:()=>F,MobileViTModel:()=>x,MobileViTPreTrainedModel:()=>T,MobileViTV2ForImageClassification:()=>Ae,MobileViTV2Model:()=>ee,MobileViTV2PreTrainedModel:()=>U,ModelOutput:()=>Qe,ModernBertForMaskedLM:()=>ne,ModernBertForSequenceClassification:()=>ze,ModernBertForTokenClassification:()=>$e,ModernBertModel:()=>ce,ModernBertPreTrainedModel:()=>H,Moondream1ForConditionalGeneration:()=>po,MoonshineForConditionalGeneration:()=>ii,MoonshineModel:()=>Kl,MoonshinePreTrainedModel:()=>oA,MptForCausalLM:()=>yo,MptModel:()=>ua,MptPreTrainedModel:()=>sn,MultiModalityCausalLM:()=>$d,MultiModalityPreTrainedModel:()=>yc,MusicgenForCausalLM:()=>qd,MusicgenForConditionalGeneration:()=>hc,MusicgenModel:()=>Kd,MusicgenPreTrainedModel:()=>pc,NomicBertModel:()=>It,NomicBertPreTrainedModel:()=>gt,OPTForCausalLM:()=>Zi,OPTModel:()=>Xi,OPTPreTrainedModel:()=>BA,Olmo2ForCausalLM:()=>Ua,Olmo2Model:()=>Xo,Olmo2PreTrainedModel:()=>Oi,OlmoForCausalLM:()=>wA,OlmoModel:()=>CA,OlmoPreTrainedModel:()=>bA,OpenELMForCausalLM:()=>vA,OpenELMModel:()=>Mn,OpenELMPreTrainedModel:()=>Io,OwlViTForObjectDetection:()=>We,OwlViTModel:()=>Me,OwlViTPreTrainedModel:()=>Ce,Owlv2ForObjectDetection:()=>mt,Owlv2Model:()=>ut,Owlv2PreTrainedModel:()=>Ze,PaliGemmaForConditionalGeneration:()=>ao,PaliGemmaPreTrainedModel:()=>lA,PatchTSMixerForPrediction:()=>ad,PatchTSMixerModel:()=>sd,PatchTSMixerPreTrainedModel:()=>_c,PatchTSTForPrediction:()=>rd,PatchTSTModel:()=>ef,PatchTSTPreTrainedModel:()=>td,Phi3ForCausalLM:()=>qi,Phi3Model:()=>JA,Phi3PreTrainedModel:()=>tA,Phi3VForCausalLM:()=>Ti,Phi3VPreTrainedModel:()=>mr,PhiForCausalLM:()=>MA,PhiModel:()=>ZA,PhiPreTrainedModel:()=>lo,PreTrainedModel:()=>Se,PretrainedMixin:()=>Lr,PvtForImageClassification:()=>_o,PvtModel:()=>GA,PvtPreTrainedModel:()=>SA,PyAnnoteForAudioFrameClassification:()=>vu,PyAnnoteModel:()=>jd,PyAnnotePreTrainedModel:()=>Y0,QuestionAnsweringModelOutput:()=>oi,Qwen2ForCausalLM:()=>wa,Qwen2Model:()=>Ii,Qwen2PreTrainedModel:()=>Go,Qwen2VLForConditionalGeneration:()=>Ki,Qwen2VLPreTrainedModel:()=>xA,RFDetrForObjectDetection:()=>z,RFDetrModel:()=>In,RFDetrObjectDetectionOutput:()=>K,RFDetrPreTrainedModel:()=>an,RTDetrForObjectDetection:()=>da,RTDetrModel:()=>ea,RTDetrObjectDetectionOutput:()=>ma,RTDetrPreTrainedModel:()=>Ds,RTDetrV2ForObjectDetection:()=>La,RTDetrV2Model:()=>Na,RTDetrV2ObjectDetectionOutput:()=>Ja,RTDetrV2PreTrainedModel:()=>Ia,ResNetForImageClassification:()=>ti,ResNetModel:()=>Ea,ResNetPreTrainedModel:()=>ys,RoFormerForMaskedLM:()=>Vt,RoFormerForQuestionAnswering:()=>wr,RoFormerForSequenceClassification:()=>Xt,RoFormerForTokenClassification:()=>Jt,RoFormerModel:()=>_t,RoFormerPreTrainedModel:()=>Nt,RobertaForMaskedLM:()=>Ca,RobertaForQuestionAnswering:()=>Hr,RobertaForSequenceClassification:()=>na,RobertaForTokenClassification:()=>za,RobertaModel:()=>Ma,RobertaPreTrainedModel:()=>Ba,SamImageSegmentationOutput:()=>ql,SamModel:()=>bu,SamPreTrainedModel:()=>mu,SapiensForDepthEstimation:()=>eu,SapiensForNormalEstimation:()=>tu,SapiensForSemanticSegmentation:()=>z0,SapiensPreTrainedModel:()=>a0,SegformerForImageClassification:()=>Vu,SegformerForSemanticSegmentation:()=>g0,SegformerModel:()=>Yd,SegformerPreTrainedModel:()=>Zl,Seq2SeqLMOutput:()=>on,SequenceClassifierOutput:()=>ss,SiglipModel:()=>YA,SiglipPreTrainedModel:()=>ho,SiglipTextModel:()=>Xa,SiglipVisionModel:()=>ul,SmolVLMForConditionalGeneration:()=>Vo,SnacDecoderModel:()=>rf,SnacEncoderModel:()=>dd,SnacModel:()=>ud,SnacPreTrainedModel:()=>FA,SpeechT5ForSpeechToText:()=>Ou,SpeechT5ForTextToSpeech:()=>Qu,SpeechT5HifiGan:()=>rc,SpeechT5Model:()=>Wd,SpeechT5PreTrainedModel:()=>u0,SqueezeBertForMaskedLM:()=>Be,SqueezeBertForQuestionAnswering:()=>bt,SqueezeBertForSequenceClassification:()=>ot,SqueezeBertModel:()=>Qt,SqueezeBertPreTrainedModel:()=>Ln,StableLmForCausalLM:()=>fc,StableLmModel:()=>Wu,StableLmPreTrainedModel:()=>dc,Starcoder2ForCausalLM:()=>ic,Starcoder2Model:()=>Lu,Starcoder2PreTrainedModel:()=>nc,StyleTextToSpeech2Model:()=>c0,StyleTextToSpeech2PreTrainedModel:()=>zu,Swin2SRForImageSuperResolution:()=>Xc,Swin2SRModel:()=>S0,Swin2SRPreTrainedModel:()=>D0,SwinForImageClassification:()=>Kc,SwinForSemanticSegmentation:()=>qc,SwinModel:()=>Yc,SwinPreTrainedModel:()=>rA,T5ForConditionalGeneration:()=>kt,T5Model:()=>it,T5PreTrainedModel:()=>qe,TableTransformerForObjectDetection:()=>_e,TableTransformerModel:()=>me,TableTransformerObjectDetectionOutput:()=>at,TableTransformerPreTrainedModel:()=>re,TokenClassifierOutput:()=>yn,TrOCRForCausalLM:()=>Ud,TrOCRPreTrainedModel:()=>d0,UltravoxModel:()=>id,UltravoxPreTrainedModel:()=>nd,UniSpeechForCTC:()=>Bu,UniSpeechForSequenceClassification:()=>Tu,UniSpeechModel:()=>Eu,UniSpeechPreTrainedModel:()=>tl,UniSpeechSatForAudioFrameClassification:()=>bl,UniSpeechSatForCTC:()=>Du,UniSpeechSatForSequenceClassification:()=>Su,UniSpeechSatModel:()=>Pu,UniSpeechSatPreTrainedModel:()=>Xl,ViTForImageClassification:()=>En,ViTMAEModel:()=>Oo,ViTMAEPreTrainedModel:()=>pl,ViTMSNForImageClassification:()=>r,ViTMSNModel:()=>t,ViTMSNPreTrainedModel:()=>rs,ViTModel:()=>TA,ViTPreTrainedModel:()=>Ji,VisionEncoderDecoderModel:()=>ca,VitMatteForImageMatting:()=>w,VitMattePreTrainedModel:()=>m,VitPoseForPoseEstimation:()=>wn,VitPosePreTrainedModel:()=>zo,VitsModel:()=>uc,VitsModelOutput:()=>bd,VitsPreTrainedModel:()=>ju,Wav2Vec2BertForCTC:()=>q0,Wav2Vec2BertForSequenceClassification:()=>X0,Wav2Vec2BertModel:()=>K0,Wav2Vec2BertPreTrainedModel:()=>A0,Wav2Vec2ForAudioFrameClassification:()=>_u,Wav2Vec2ForCTC:()=>o0,Wav2Vec2ForSequenceClassification:()=>ku,Wav2Vec2Model:()=>yu,Wav2Vec2PreTrainedModel:()=>el,WavLMForAudioFrameClassification:()=>tc,WavLMForCTC:()=>$0,WavLMForSequenceClassification:()=>Fu,WavLMForXVector:()=>ec,WavLMModel:()=>J0,WavLMPreTrainedModel:()=>Tl,WeSpeakerResNetModel:()=>Mu,WeSpeakerResNetPreTrainedModel:()=>xu,WhisperForConditionalGeneration:()=>WA,WhisperModel:()=>VA,WhisperPreTrainedModel:()=>Eo,XLMForQuestionAnswering:()=>Al,XLMForSequenceClassification:()=>ol,XLMForTokenClassification:()=>RA,XLMModel:()=>Rn,XLMPreTrainedModel:()=>la,XLMRobertaForMaskedLM:()=>ll,XLMRobertaForQuestionAnswering:()=>dn,XLMRobertaForSequenceClassification:()=>fo,XLMRobertaForTokenClassification:()=>ni,XLMRobertaModel:()=>uo,XLMRobertaPreTrainedModel:()=>hi,XLMWithLMHeadModel:()=>Mo,XVectorOutput:()=>eo,YolosForObjectDetection:()=>pu,YolosModel:()=>i0,YolosObjectDetectionOutput:()=>hu,YolosPreTrainedModel:()=>W0});var u=a("./src/configs.js"),p=a("./src/backends/onnx.js"),h=a("./src/utils/dtypes.js"),C=a("./src/utils/generic.js"),y=a("./src/utils/core.js"),k=a("./src/utils/hub.js"),_=a("./src/utils/constants.js"),v=a("./src/generation/logits_process.js"),M=a("./src/generation/configuration_utils.js"),B=a("./src/utils/tensor.js"),S=a("./src/utils/image.js"),N=a("./src/utils/maths.js"),V=a("./src/generation/stopping_criteria.js"),Z=a("./src/generation/logits_sampler.js"),O=a("./src/env.js"),Q=a("./src/models/whisper/generation_whisper.js"),q=a("./src/models/whisper/common_whisper.js");const f={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},I=new Map,e=new Map,c=new Map;async function P(se,we,Ue){var Hi;const vt=((Hi=Ue.config)==null?void 0:Hi["transformers.js_config"])??{};let Wt=Ue.device??vt.device;Wt&&typeof Wt!="string"&&(Wt.hasOwnProperty(we)?Wt=Wt[we]:(console.warn(`device not specified for "${we}". Using the default device.`),Wt=null));const jt=Wt??(O.apis.IS_NODE_ENV?"cpu":"wasm"),lr=(0,p.deviceToExecutionProviders)(jt);let hr=Ue.dtype??vt.dtype;if(typeof hr!="string"&&(hr&&hr.hasOwnProperty(we)?hr=hr[we]:(hr=h.DEFAULT_DEVICE_DTYPE_MAPPING[jt]??h.DATA_TYPES.fp32,console.warn(`dtype not specified for "${we}". Using the default dtype (${hr}) for this device (${jt}).`))),hr===h.DATA_TYPES.auto){let oa=vt.dtype;typeof oa!="string"&&(oa=oa[we]),oa&&oa!==h.DATA_TYPES.auto&&h.DATA_TYPES.hasOwnProperty(oa)?hr=oa:hr=h.DEFAULT_DEVICE_DTYPE_MAPPING[jt]??h.DATA_TYPES.fp32}const Mr=hr;if(h.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Mr)){if(Mr===h.DATA_TYPES.fp16&&jt==="webgpu"&&!await(0,h.isWebGpuFp16Supported)())throw new Error(`The device (${jt}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Mr}. Should be one of: ${Object.keys(h.DATA_TYPES).join(", ")}`);const Dr=vt.kv_cache_dtype?typeof vt.kv_cache_dtype=="string"?vt.kv_cache_dtype:vt.kv_cache_dtype[Mr]??"float32":void 0;if(Dr&&!["float32","float16"].includes(Dr))throw new Error(`Invalid kv_cache_dtype: ${Dr}. Should be one of: float32, float16`);const Kr={dtype:Mr,kv_cache_dtype:Dr},Hs=h.DEFAULT_DTYPE_SUFFIX_MAPPING[Mr],cs=`${we}${Hs}.onnx`,ia=`${Ue.subfolder??""}/${cs}`,ws={...Ue.session_options};ws.executionProviders??(ws.executionProviders=lr);const Xs=vt.free_dimension_overrides;Xs?ws.freeDimensionOverrides??(ws.freeDimensionOverrides=Xs):jt.startsWith("webnn")&&!ws.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Es=(0,k.getModelFile)(se,ia,!0,Ue,O.apis.IS_NODE_ENV),ta=Ue.use_external_data_format??vt.use_external_data_format;let Ya=[];if(ta){let oa;typeof ta=="object"?ta.hasOwnProperty(cs)?oa=ta[cs]:ta.hasOwnProperty(we)?oa=ta[we]:oa=!1:oa=ta;const hn=+oa;if(hn>k.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${hn}) exceeds the maximum allowed value (${k.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let si=0;si<hn;++si){const _i=`${cs}_data${si===0?"":"_"+si}`,OA=`${Ue.subfolder??""}/${_i}`;Ya.push(new Promise(async(r0,Cd)=>{const to=await(0,k.getModelFile)(se,OA,!0,Ue,O.apis.IS_NODE_ENV);r0(to instanceof Uint8Array?{path:_i,data:to}:_i)}))}}else ws.externalData!==void 0&&(Ya=ws.externalData.map(async oa=>{if(typeof oa.data=="string"){const hn=await(0,k.getModelFile)(se,oa.data,!0,Ue);return{...oa,data:hn}}return oa}));if(Ya.length>0){const oa=await Promise.all(Ya);O.apis.IS_NODE_ENV||(ws.externalData=oa)}if(jt==="webgpu"){const oa=(0,u.getKeyValueShapes)(Ue.config,{prefix:"present"});if(Object.keys(oa).length>0&&!(0,p.isONNXProxy)()){const hn={};for(const si in oa)hn[si]="gpu-buffer";ws.preferredOutputLocation=hn}}return{buffer_or_path:await Es,session_options:ws,session_config:Kr}}async function J(se,we,Ue){return Object.fromEntries(await Promise.all(Object.keys(we).map(async vt=>{const{buffer_or_path:Wt,session_options:jt,session_config:lr}=await P(se,we[vt],Ue),hr=await(0,p.createInferenceSession)(Wt,jt,lr);return[vt,hr]})))}async function D(se,we,Ue){return Object.fromEntries(await Promise.all(Object.keys(we).map(async vt=>{const Wt=await(0,k.getModelJSON)(se,we[vt],!1,Ue);return[vt,Wt]})))}function j(se,we){const Ue=Object.create(null),vt=[];for(const lr of se.inputNames){const hr=we[lr];if(!(hr instanceof B.Tensor)){vt.push(lr);continue}Ue[lr]=(0,p.isONNXProxy)()?hr.clone():hr}if(vt.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${vt.join(", ")}.`);const Wt=Object.keys(we).length,jt=se.inputNames.length;if(Wt>jt){let lr=Object.keys(we).filter(hr=>!se.inputNames.includes(hr));console.warn(`WARNING: Too many inputs were provided (${Wt} > ${jt}). The following inputs will be ignored: "${lr.join(", ")}".`)}return Ue}async function Ie(se,we){const Ue=j(se,we);try{const vt=Object.fromEntries(Object.entries(Ue).map(([jt,lr])=>[jt,lr.ort_tensor]));let Wt=await se.run(vt);return Wt=ge(Wt),Wt}catch(vt){const Wt=Object.fromEntries(Object.entries(Ue).map(([jt,{type:lr,dims:hr,data:Mr}])=>[jt,{type:lr,dims:hr,data:Mr}]));throw console.error(`An error occurred during model execution: "${vt}".`),console.error("Inputs given to model:",Wt),vt}}function ge(se){for(let we in se)(0,p.isONNXTensor)(se[we])?se[we]=new B.Tensor(se[we]):typeof se[we]=="object"&&ge(se[we]);return se}function ke(se){if(se instanceof B.Tensor)return se;if(se.length===0)throw Error("items must be non-empty");if(Array.isArray(se[0])){if(se.some(we=>we.length!==se[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new B.Tensor("int64",BigInt64Array.from(se.flat().map(we=>BigInt(we))),[se.length,se[0].length])}else return new B.Tensor("int64",BigInt64Array.from(se.map(we=>BigInt(we))),[1,se.length])}function Ee(se){return new B.Tensor("bool",[se],[1])}async function Ne(se,we){let{encoder_outputs:Ue,input_ids:vt,decoder_input_ids:Wt,...jt}=we;if(!Ue){const hr=(0,y.pick)(we,se.sessions.model.inputNames);Ue=(await Xe(se,hr)).last_hidden_state}return jt.input_ids=Wt,jt.encoder_hidden_states=Ue,se.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(jt.encoder_attention_mask=we.attention_mask),await xe(se,jt,!0)}async function Xe(se,we){const Ue=se.sessions.model,vt=(0,y.pick)(we,Ue.inputNames);if(Ue.inputNames.includes("inputs_embeds")&&!vt.inputs_embeds){if(!we.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");vt.inputs_embeds=await se.encode_text({input_ids:we.input_ids})}if(Ue.inputNames.includes("token_type_ids")&&!vt.token_type_ids){if(!vt.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");vt.token_type_ids=(0,B.zeros_like)(vt.input_ids)}if(Ue.inputNames.includes("pixel_mask")&&!vt.pixel_mask){if(!vt.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Wt=vt.pixel_values.dims;vt.pixel_mask=(0,B.ones)([Wt[0],Wt[2],Wt[3]])}return await Ie(Ue,vt)}async function At(se,we){const Ue=await se.encode(we);return await se.decode(Ue)}async function xe(se,we,Ue=!1){const vt=se.sessions[Ue?"decoder_model_merged":"model"],{past_key_values:Wt,...jt}=we;if(vt.inputNames.includes("use_cache_branch")&&(jt.use_cache_branch=Ee(!!Wt)),vt.inputNames.includes("position_ids")&&jt.attention_mask&&!jt.position_ids){const hr=["paligemma","gemma3_text","gemma3"].includes(se.config.model_type)?1:0;jt.position_ids=ft(jt,Wt,hr)}se.addPastKeyValues(jt,Wt);const lr=(0,y.pick)(jt,vt.inputNames);return await Ie(vt,lr)}function ye({modality_token_id:se,inputs_embeds:we,modality_features:Ue,input_ids:vt,attention_mask:Wt}){const jt=vt.tolist().map(Dr=>Dr.reduce((Kr,Hs,cs)=>(Hs==se&&Kr.push(cs),Kr),[])),lr=jt.reduce((Dr,Kr)=>Dr+Kr.length,0),hr=Ue.dims[0];if(lr!==hr)throw new Error(`Number of tokens and features do not match: tokens: ${lr}, features ${hr}`);let Mr=0;for(let Dr=0;Dr<jt.length;++Dr){const Kr=jt[Dr],Hs=we[Dr];for(let cs=0;cs<Kr.length;++cs)Hs[Kr[cs]].data.set(Ue[Mr++].data)}return{inputs_embeds:we,attention_mask:Wt}}function ue({image_token_id:se,inputs_embeds:we,image_features:Ue,input_ids:vt,attention_mask:Wt}){return ye({modality_token_id:se,inputs_embeds:we,modality_features:Ue,input_ids:vt,attention_mask:Wt})}function ie({audio_token_id:se,inputs_embeds:we,audio_features:Ue,input_ids:vt,attention_mask:Wt}){return ye({modality_token_id:se,inputs_embeds:we,modality_features:Ue,input_ids:vt,attention_mask:Wt})}async function be(se,{encode_function:we,merge_function:Ue,modality_input_name:vt,modality_output_name:Wt,input_ids:jt=null,attention_mask:lr=null,position_ids:hr=null,inputs_embeds:Mr=null,past_key_values:Dr=null,generation_config:Kr=null,logits_processor:Hs=null,...cs}){const ia=cs[vt];if(!Mr){if(Mr=await se.encode_text({input_ids:jt,...cs}),ia&&jt.dims[1]!==1){const Xs=await we({[vt]:ia,...cs});({inputs_embeds:Mr,attention_mask:lr}=Ue({[Wt]:Xs,inputs_embeds:Mr,input_ids:jt,attention_mask:lr}))}else if(Dr&&ia&&jt.dims[1]===1){const Xs=jt.dims[1],Es=Object.values(Dr)[0].dims.at(-2);lr=(0,B.cat)([(0,B.ones)([jt.dims[0],Es]),lr.slice(null,[lr.dims[1]-Xs,lr.dims[1]])],1)}}if(!hr&&se.config.model_type==="qwen2_vl"){const{image_grid_thw:Xs,video_grid_thw:Es}=cs;[hr]=se.get_rope_index(jt,Xs,Es,lr)}return await xe(se,{inputs_embeds:Mr,past_key_values:Dr,attention_mask:lr,position_ids:hr,generation_config:Kr,logits_processor:Hs},!0)}async function Ye(se,we){return await be(se,{...we,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:se.encode_audio.bind(se),merge_function:se._merge_input_ids_with_audio_features.bind(se)})}async function Le(se,we){return await be(se,{...we,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:se.encode_image.bind(se),merge_function:se._merge_input_ids_with_image_features.bind(se)})}function lt(se,we=0){const[Ue,vt]=se.dims,Wt=se.data,jt=new BigInt64Array(Wt.length);for(let lr=0;lr<Ue;++lr){const hr=lr*vt;let Mr=BigInt(we);for(let Dr=0;Dr<vt;++Dr){const Kr=hr+Dr;Wt[Kr]===0n?jt[Kr]=BigInt(1):(jt[Kr]=Mr,Mr+=Wt[Kr])}}return{data:jt,dims:se.dims}}function ft(se,we=null,Ue=0){const{input_ids:vt,inputs_embeds:Wt,attention_mask:jt}=se,{data:lr,dims:hr}=lt(jt,Ue);let Mr=new B.Tensor("int64",lr,hr);if(we){const Dr=-(vt??Wt).dims.at(1);Mr=Mr.slice(null,[Dr,null])}return Mr}function pt(se,we,Ue,vt){if(Ue.past_key_values){const Wt=Object.values(Ue.past_key_values)[0].dims.at(-2),{input_ids:jt,attention_mask:lr}=Ue;if(!(lr&&lr.dims[1]>jt.dims[1])){if(Wt<jt.dims[1])Ue.input_ids=jt.slice(null,[Wt,null]);else if(se.config.image_token_index!=null&&jt.data.some(hr=>hr==se.config.image_token_index)){const hr=se.config.num_image_tokens;if(!hr)throw new Error("`num_image_tokens` is missing in the model configuration.");const Mr=jt.dims[1]-(Wt-hr);Ue.input_ids=jt.slice(null,[-Mr,null]),Ue.attention_mask=(0,B.ones)([1,Wt+Mr])}}}return Ue}function ct(se,we,Ue,vt){return Ue.past_key_values&&(we=we.map(Wt=>[Wt.at(-1)])),{...Ue,decoder_input_ids:ke(we)}}function He(se,...we){return se.config.is_encoder_decoder?ct(se,...we):pt(se,...we)}function Re(se,we,Ue,vt){const Wt=!!Ue.past_key_values;return vt.guidance_scale!==null&&vt.guidance_scale>1&&(Wt?Ue.input_ids=(0,B.cat)([Ue.input_ids,Ue.input_ids],0):(Ue.input_ids=(0,B.cat)([Ue.input_ids,(0,B.full_like)(Ue.input_ids,BigInt(vt.pad_token_id))],0),Ue.attention_mask=(0,B.cat)([Ue.attention_mask,(0,B.full_like)(Ue.attention_mask,0n)],0))),(Wt||!Ue.pixel_values)&&(Ue.pixel_values=(0,B.full)([0,0,3,384,384],1)),Wt&&(Ue.images_seq_mask=new B.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),Ue.images_emb_mask=new B.Tensor("bool",new Array(0).fill(!1),[1,1,0])),Ue}class Se extends C.Callable{constructor(Ue,vt,Wt){super();Te(this,"main_input_name","input_ids");Te(this,"forward_params",["input_ids","attention_mask"]);this.config=Ue,this.sessions=vt,this.configs=Wt;const jt=c.get(this.constructor),lr=I.get(jt);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,lr){case f.DecoderOnly:this.can_generate=!0,this._forward=xe,this._prepare_inputs_for_generation=pt;break;case f.Seq2Seq:case f.Vision2Seq:case f.Musicgen:this.can_generate=!0,this._forward=Ne,this._prepare_inputs_for_generation=ct;break;case f.EncoderDecoder:this._forward=Ne;break;case f.ImageTextToText:this.can_generate=!0,this._forward=Le,this._prepare_inputs_for_generation=He;break;case f.AudioTextToText:this.can_generate=!0,this._forward=Ye,this._prepare_inputs_for_generation=He;break;case f.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=He;break;case f.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=Re;break;case f.AutoEncoder:this._forward=At;break;default:this._forward=Xe;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var vt;const Ue=[];for(const Wt of Object.values(this.sessions))(vt=Wt==null?void 0:Wt.handler)!=null&&vt.dispose&&Ue.push(Wt.handler.dispose());return await Promise.all(Ue)}static async from_pretrained(Ue,{progress_callback:vt=null,config:Wt=null,cache_dir:jt=null,local_files_only:lr=!1,revision:hr="main",model_file_name:Mr=null,subfolder:Dr="onnx",device:Kr=null,dtype:Hs=null,use_external_data_format:cs=null,session_options:ia={}}={}){let ws={progress_callback:vt,config:Wt,cache_dir:jt,local_files_only:lr,revision:hr,model_file_name:Mr,subfolder:Dr,device:Kr,dtype:Hs,use_external_data_format:cs,session_options:ia};const Xs=c.get(this),Es=I.get(Xs);Wt=ws.config=await u.AutoConfig.from_pretrained(Ue,ws);let ta;if(Es===f.DecoderOnly)ta=await Promise.all([J(Ue,{model:ws.model_file_name??"model"},ws),D(Ue,{generation_config:"generation_config.json"},ws)]);else if(Es===f.Seq2Seq||Es===f.Vision2Seq)ta=await Promise.all([J(Ue,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},ws),D(Ue,{generation_config:"generation_config.json"},ws)]);else if(Es===f.MaskGeneration)ta=await Promise.all([J(Ue,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},ws)]);else if(Es===f.EncoderDecoder)ta=await Promise.all([J(Ue,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},ws)]);else if(Es===f.ImageTextToText){const Ya={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Wt.is_encoder_decoder&&(Ya.model="encoder_model"),ta=await Promise.all([J(Ue,Ya,ws),D(Ue,{generation_config:"generation_config.json"},ws)])}else if(Es===f.AudioTextToText){const Ya={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};ta=await Promise.all([J(Ue,Ya,ws),D(Ue,{generation_config:"generation_config.json"},ws)])}else if(Es===f.Musicgen)ta=await Promise.all([J(Ue,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},ws),D(Ue,{generation_config:"generation_config.json"},ws)]);else if(Es===f.MultiModality)ta=await Promise.all([J(Ue,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},ws),D(Ue,{generation_config:"generation_config.json"},ws)]);else if(Es===f.Phi3V)ta=await Promise.all([J(Ue,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},ws),D(Ue,{generation_config:"generation_config.json"},ws)]);else if(Es===f.AutoEncoder)ta=await Promise.all([J(Ue,{encoder_model:"encoder_model",decoder_model:"decoder_model"},ws)]);else{if(Es!==f.EncoderOnly){const Ya=Xs??(Wt==null?void 0:Wt.model_type);Ya!=="custom"&&console.warn(`Model type for '${Ya}' not found, assuming encoder-only architecture. Please report this at ${_.GITHUB_ISSUE_URL}.`)}ta=await Promise.all([J(Ue,{model:ws.model_file_name??"model"},ws)])}return new this(Wt,...ta)}async _call(Ue){return await this.forward(Ue)}async forward(Ue){return await this._forward(this,Ue)}get generation_config(){var Ue;return((Ue=this.configs)==null?void 0:Ue.generation_config)??null}_get_logits_warper(Ue){const vt=new v.LogitsProcessorList;return Ue.temperature!==null&&Ue.temperature!==1&&vt.push(new v.TemperatureLogitsWarper(Ue.temperature)),Ue.top_k!==null&&Ue.top_k!==0&&vt.push(new v.TopKLogitsWarper(Ue.top_k)),Ue.top_p!==null&&Ue.top_p<1&&vt.push(new v.TopPLogitsWarper(Ue.top_p)),vt}_get_logits_processor(Ue,vt,Wt=null){const jt=new v.LogitsProcessorList;if(Ue.repetition_penalty!==null&&Ue.repetition_penalty!==1&&jt.push(new v.RepetitionPenaltyLogitsProcessor(Ue.repetition_penalty)),Ue.no_repeat_ngram_size!==null&&Ue.no_repeat_ngram_size>0&&jt.push(new v.NoRepeatNGramLogitsProcessor(Ue.no_repeat_ngram_size)),Ue.bad_words_ids!==null&&jt.push(new v.NoBadWordsLogitsProcessor(Ue.bad_words_ids,Ue.eos_token_id)),Ue.min_length!==null&&Ue.eos_token_id!==null&&Ue.min_length>0&&jt.push(new v.MinLengthLogitsProcessor(Ue.min_length,Ue.eos_token_id)),Ue.min_new_tokens!==null&&Ue.eos_token_id!==null&&Ue.min_new_tokens>0&&jt.push(new v.MinNewTokensLengthLogitsProcessor(vt,Ue.min_new_tokens,Ue.eos_token_id)),Ue.forced_bos_token_id!==null&&jt.push(new v.ForcedBOSTokenLogitsProcessor(Ue.forced_bos_token_id)),Ue.forced_eos_token_id!==null&&jt.push(new v.ForcedEOSTokenLogitsProcessor(Ue.max_length,Ue.forced_eos_token_id)),Ue.begin_suppress_tokens!==null){const lr=vt>1||Ue.forced_bos_token_id===null?vt:vt+1;jt.push(new v.SuppressTokensAtBeginLogitsProcessor(Ue.begin_suppress_tokens,lr))}return Ue.guidance_scale!==null&&Ue.guidance_scale>1&&jt.push(new v.ClassifierFreeGuidanceLogitsProcessor(Ue.guidance_scale)),Wt!==null&&jt.extend(Wt),jt}_prepare_generation_config(Ue,vt,Wt=M.GenerationConfig){const jt={...this.config};for(const hr of["decoder","generator","text_config"])hr in jt&&Object.assign(jt,jt[hr]);const lr=new Wt(jt);return Object.assign(lr,this.generation_config??{}),Ue&&Object.assign(lr,Ue),vt&&Object.assign(lr,(0,y.pick)(vt,Object.getOwnPropertyNames(lr))),lr}_get_stopping_criteria(Ue,vt=null){const Wt=new V.StoppingCriteriaList;return Ue.max_length!==null&&Wt.push(new V.MaxLengthCriteria(Ue.max_length,this.config.max_position_embeddings??null)),Ue.eos_token_id!==null&&Wt.push(new V.EosTokenCriteria(Ue.eos_token_id)),vt&&Wt.extend(vt),Wt}_validate_model_class(){if(!this.can_generate){const Ue=[h0,hd,pd,gd],vt=c.get(this.constructor),Wt=new Set,jt=this.config.model_type;for(const hr of Ue){const Mr=hr.get(jt);Mr&&Wt.add(Mr[0])}let lr=`The current model class (${vt}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Wt.size>0&&(lr+=` Please use the following class instead: ${[...Wt].join(", ")}`),Error(lr)}}prepare_inputs_for_generation(...Ue){return this._prepare_inputs_for_generation(this,...Ue)}_update_model_kwargs_for_generation({generated_input_ids:Ue,outputs:vt,model_inputs:Wt,is_encoder_decoder:jt}){return Wt.past_key_values=this.getPastKeyValues(vt,Wt.past_key_values),Wt.input_ids=new B.Tensor("int64",Ue.flat(),[Ue.length,1]),jt||(Wt.attention_mask=(0,B.cat)([Wt.attention_mask,(0,B.ones)([Wt.attention_mask.dims[0],1])],1)),Wt.position_ids=null,Wt}_prepare_model_inputs({inputs:Ue,bos_token_id:vt,model_kwargs:Wt}){const jt=(0,y.pick)(Wt,this.forward_params),lr=this.main_input_name;if(lr in jt){if(Ue)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else jt[lr]=Ue;return{inputs_tensor:jt[lr],model_inputs:jt,model_input_name:lr}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ue,model_inputs:vt,model_input_name:Wt,generation_config:jt}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!vt.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:hr,pixel_values:Mr,attention_mask:Dr,...Kr}=vt,Hs=await this._prepare_inputs_embeds(vt);vt={...Kr,...(0,y.pick)(Hs,["inputs_embeds","attention_mask"])}}let{last_hidden_state:lr}=await Xe(this,vt);if(jt.guidance_scale!==null&&jt.guidance_scale>1)lr=(0,B.cat)([lr,(0,B.full_like)(lr,0)],0),"attention_mask"in vt&&(vt.attention_mask=(0,B.cat)([vt.attention_mask,(0,B.zeros_like)(vt.attention_mask)],0));else if(vt.decoder_input_ids){const hr=ke(vt.decoder_input_ids).dims[0];if(hr!==lr.dims[0]){if(lr.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${lr.dims[0]}) than the decoder inputs (${hr}).`);lr=(0,B.cat)(Array.from({length:hr},()=>lr),0)}}return vt.encoder_outputs=lr,vt}_prepare_decoder_input_ids_for_generation({batch_size:Ue,model_input_name:vt,model_kwargs:Wt,decoder_start_token_id:jt,bos_token_id:lr,generation_config:hr}){let{decoder_input_ids:Mr,...Dr}=Wt;if(!(Mr instanceof B.Tensor)){if(Mr)Array.isArray(Mr[0])||(Mr=Array.from({length:Ue},()=>Mr));else if(jt??(jt=lr),this.config.model_type==="musicgen")Mr=Array.from({length:Ue*this.config.decoder.num_codebooks},()=>[jt]);else if(Array.isArray(jt)){if(jt.length!==Ue)throw new Error(`\`decoder_start_token_id\` expcted to have length ${Ue} but got ${jt.length}`);Mr=jt}else Mr=Array.from({length:Ue},()=>[jt]);Mr=ke(Mr)}return Wt.decoder_attention_mask=(0,B.ones_like)(Mr),{input_ids:Mr,model_inputs:Dr}}async generate({inputs:Ue=null,generation_config:vt=null,logits_processor:Wt=null,stopping_criteria:jt=null,streamer:lr=null,...hr}){this._validate_model_class(),vt=this._prepare_generation_config(vt,hr);let{inputs_tensor:Mr,model_inputs:Dr,model_input_name:Kr}=this._prepare_model_inputs({inputs:Ue,model_kwargs:hr});const Hs=this.config.is_encoder_decoder;Hs&&("encoder_outputs"in Dr||(Dr=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Mr,model_inputs:Dr,model_input_name:Kr,generation_config:vt})));let cs;Hs?{input_ids:cs,model_inputs:Dr}=this._prepare_decoder_input_ids_for_generation({batch_size:Dr[Kr].dims.at(0),model_input_name:Kr,model_kwargs:Dr,decoder_start_token_id:vt.decoder_start_token_id,bos_token_id:vt.bos_token_id,generation_config:vt}):cs=Dr[Kr];let ia=cs.dims.at(-1);vt.max_new_tokens!==null&&(vt.max_length=ia+vt.max_new_tokens);const ws=this._get_logits_processor(vt,ia,Wt),Xs=this._get_stopping_criteria(vt,jt),Es=Dr[Kr].dims.at(0),ta=Z.LogitsSampler.getSampler(vt),Ya=new Array(Es).fill(0),Tn=cs.tolist();lr&&lr.put(Tn);let Hi,oa={};for(;;){if(Dr=this.prepare_inputs_for_generation(Tn,Dr,vt),Hi=await this.forward(Dr),vt.output_attentions&&vt.return_dict_in_generate){const to=this.getAttentions(Hi);for(const kl in to)kl in oa||(oa[kl]=[]),oa[kl].push(to[kl])}const _i=Hi.logits.slice(null,-1,null),OA=ws(Tn,_i),r0=[];for(let to=0;to<OA.dims.at(0);++to){const kl=OA[to],A2=await ta(kl);for(const[Qf,d]of A2){const b=BigInt(Qf);Ya[to]+=d,Tn[to].push(b),r0.push([b]);break}}if(lr&&lr.put(r0),Xs(Tn).every(to=>to))break;Dr=this._update_model_kwargs_for_generation({generated_input_ids:r0,outputs:Hi,model_inputs:Dr,is_encoder_decoder:Hs})}lr&&lr.end();const hn=this.getPastKeyValues(Hi,Dr.past_key_values,!0),si=new B.Tensor("int64",Tn.flat(),[Tn.length,Tn[0].length]);if(vt.return_dict_in_generate)return{sequences:si,past_key_values:hn,...oa};for(const _i of Object.values(Hi))_i.location==="gpu-buffer"&&_i.dispose();return si}getPastKeyValues(Ue,vt,Wt=!1){const jt=Object.create(null);for(const lr in Ue)if(lr.startsWith("present")){const hr=lr.replace("present","past_key_values"),Mr=lr.includes("encoder");if(Mr&&vt?jt[hr]=vt[hr]:jt[hr]=Ue[lr],vt&&(!Mr||Wt)){const Dr=vt[hr];Dr.location==="gpu-buffer"&&Dr.dispose()}}return jt}getAttentions(Ue){const vt={};for(const Wt of["cross_attentions","encoder_attentions","decoder_attentions"])for(const jt in Ue)jt.startsWith(Wt)&&(Wt in vt||(vt[Wt]=[]),vt[Wt].push(Ue[jt]));return vt}addPastKeyValues(Ue,vt){var Wt,jt,lr;if(vt)Object.assign(Ue,vt);else{const hr=this.sessions.decoder_model_merged??this.sessions.model,Mr=((Wt=hr==null?void 0:hr.config)==null?void 0:Wt.kv_cache_dtype)??"float32",Dr=Mr==="float16"?new B.DataTypeMap.float16:[],Kr=((lr=(jt=Ue[this.main_input_name]??Ue.attention_mask)==null?void 0:jt.dims)==null?void 0:lr[0])??1,Hs=(0,u.getKeyValueShapes)(this.config,{batch_size:Kr});for(const cs in Hs)Ue[cs]=new B.Tensor(Mr,Dr,Hs[cs])}}async encode_image({pixel_values:Ue}){const vt=(await Ie(this.sessions.vision_encoder,{pixel_values:Ue})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${vt.dims[1]}).`),this.config.num_image_tokens=vt.dims[1]),vt}async encode_text({input_ids:Ue}){return(await Ie(this.sessions.embed_tokens,{input_ids:Ue})).inputs_embeds}async encode_audio({audio_values:Ue}){return(await Ie(this.sessions.audio_encoder,{audio_values:Ue})).audio_features}}class Qe{}class ht extends Qe{constructor({last_hidden_state:we,hidden_states:Ue=null,attentions:vt=null}){super(),this.last_hidden_state=we,this.hidden_states=Ue,this.attentions=vt}}class wt extends Se{}class Bt extends wt{}class Mt extends wt{async _call(we){return new kn(await super._call(we))}}class oe extends wt{async _call(we){return new ss(await super._call(we))}}class zt extends wt{async _call(we){return new yn(await super._call(we))}}class ve extends wt{async _call(we){return new oi(await super._call(we))}}class H extends Se{}class ce extends H{}class ne extends H{async _call(we){return new kn(await super._call(we))}}class ze extends H{async _call(we){return new ss(await super._call(we))}}class $e extends H{async _call(we){return new yn(await super._call(we))}}class gt extends Se{}class It extends gt{}class Nt extends Se{}class _t extends Nt{}class Vt extends Nt{async _call(we){return new kn(await super._call(we))}}class Xt extends Nt{async _call(we){return new ss(await super._call(we))}}class Jt extends Nt{async _call(we){return new yn(await super._call(we))}}class wr extends Nt{async _call(we){return new oi(await super._call(we))}}class Rr extends Se{}class $s extends Rr{}class os extends Rr{async _call(we){return new kn(await super._call(we))}}class Ks extends Rr{async _call(we){return new ss(await super._call(we))}}class ts extends Rr{async _call(we){return new yn(await super._call(we))}}class zn extends Rr{async _call(we){return new oi(await super._call(we))}}class Va extends Se{}class Wa extends Va{}class Pr extends Va{async _call(we){return new kn(await super._call(we))}}class Sr extends Va{async _call(we){return new ss(await super._call(we))}}class Kt extends Va{async _call(we){return new yn(await super._call(we))}}class Bs extends Va{async _call(we){return new oi(await super._call(we))}}class $a extends Se{}class en extends $a{}class On extends $a{async _call(we){return new kn(await super._call(we))}}class Pn extends $a{async _call(we){return new ss(await super._call(we))}}class Dn extends $a{async _call(we){return new yn(await super._call(we))}}class qn extends $a{async _call(we){return new oi(await super._call(we))}}class sa extends Se{}class Zt extends sa{}class Br extends sa{async _call(we){return new kn(await super._call(we))}}class zr extends sa{async _call(we){return new ss(await super._call(we))}}class qs extends sa{async _call(we){return new yn(await super._call(we))}}class aa extends sa{async _call(we){return new oi(await super._call(we))}}class ks extends Se{}class vn extends ks{}class Qn extends ks{async _call(we){return new kn(await super._call(we))}}class Sn extends ks{async _call(we){return new ss(await super._call(we))}}class ci extends ks{async _call(we){return new yn(await super._call(we))}}class ui extends ks{async _call(we){return new oi(await super._call(we))}}class di extends Se{}class Fa extends di{}class ai extends di{async _call(we){return new ss(await super._call(we))}}class fi extends di{async _call(we){return new yn(await super._call(we))}}class Ri extends di{async _call(we){return new oi(await super._call(we))}}class Xn extends di{async _call(we){return new kn(await super._call(we))}}class Zn extends Se{}class ba extends Zn{}class Gi extends Zn{async _call(we){return new kn(await super._call(we))}}class Fi extends Zn{async _call(we){return new ss(await super._call(we))}}class Jn extends Zn{async _call(we){return new yn(await super._call(we))}}class gi extends Se{}class tn extends gi{}class Ei extends gi{async _call(we){return new kn(await super._call(we))}}class pi extends gi{async _call(we){return new ss(await super._call(we))}}class Jr extends gi{async _call(we){return new oi(await super._call(we))}}class Cs extends Se{}class bn extends Cs{}class Nn extends Cs{async _call(we){return new kn(await super._call(we))}}class zi extends Cs{async _call(we){return new ss(await super._call(we))}}class Bi extends Cs{async _call(we){return new yn(await super._call(we))}}class rn extends Cs{async _call(we){return new oi(await super._call(we))}}class Ln extends Se{}class Qt extends Ln{}class Be extends Ln{async _call(we){return new kn(await super._call(we))}}class ot extends Ln{async _call(we){return new ss(await super._call(we))}}class bt extends Ln{async _call(we){return new oi(await super._call(we))}}class Tt extends Se{}class Pt extends Tt{}class st extends Tt{async _call(we){return new ss(await super._call(we))}}class pe extends Tt{async _call(we){return new oi(await super._call(we))}}class he extends Tt{async _call(we){return new kn(await super._call(we))}}class qe extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class it extends qe{}class kt extends qe{}class Ht extends Se{}class ir extends Ht{}class fr extends Ht{}class nr extends Se{}class Yt extends nr{}class Ar extends nr{}class Wr extends Se{}class xs extends Wr{}class Ys extends Wr{}class as extends Wr{async _call(we){return new ss(await super._call(we))}}class kr extends Se{}class Ns extends kr{}class qt extends kr{}class Tr extends kr{async _call(we){return new ss(await super._call(we))}}class ha extends kr{}class xa extends Se{}class Gs extends xa{}class Fs extends xa{}class Ls extends Se{}class Ms extends Ls{}class fa extends Ls{}class Ba extends Se{}class Ma extends Ba{}class Ca extends Ba{async _call(we){return new kn(await super._call(we))}}class na extends Ba{async _call(we){return new ss(await super._call(we))}}class za extends Ba{async _call(we){return new yn(await super._call(we))}}class Hr extends Ba{async _call(we){return new oi(await super._call(we))}}class la extends Se{}class Rn extends la{}class Mo extends la{async _call(we){return new kn(await super._call(we))}}class ol extends la{async _call(we){return new ss(await super._call(we))}}class RA extends la{async _call(we){return new yn(await super._call(we))}}class Al extends la{async _call(we){return new oi(await super._call(we))}}class hi extends Se{}class uo extends hi{}class ll extends hi{async _call(we){return new kn(await super._call(we))}}class fo extends hi{async _call(we){return new ss(await super._call(we))}}class ni extends hi{async _call(we){return new yn(await super._call(we))}}class dn extends hi{async _call(we){return new oi(await super._call(we))}}class Qr extends Se{}class $n extends Qr{}class jA extends Qr{}class Eo extends Se{constructor(){super(...arguments);Te(this,"requires_attention_mask",!1);Te(this,"main_input_name","input_features");Te(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class VA extends Eo{}class WA extends Eo{_prepare_generation_config(we,Ue){return super._prepare_generation_config(we,Ue,Q.WhisperGenerationConfig)}_retrieve_init_tokens(we){const Ue=[we.decoder_start_token_id];let vt=we.language;const Wt=we.task;if(we.is_multilingual){vt||(console.warn("No language specified - defaulting to English (en)."),vt="en");const lr=`<|${(0,q.whisper_language_to_code)(vt)}|>`;Ue.push(we.lang_to_id[lr]),Ue.push(we.task_to_id[Wt??"transcribe"])}else if(vt||Wt)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!we.return_timestamps&&we.no_timestamps_token_id&&Ue.at(-1)!==we.no_timestamps_token_id?Ue.push(we.no_timestamps_token_id):we.return_timestamps&&Ue.at(-1)===we.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),Ue.pop()),Ue.filter(jt=>jt!=null)}async generate({inputs:we=null,generation_config:Ue=null,logits_processor:vt=null,stopping_criteria:Wt=null,...jt}){Ue=this._prepare_generation_config(Ue,jt);const lr=jt.decoder_input_ids??this._retrieve_init_tokens(Ue);if(Ue.return_timestamps&&(vt??(vt=new v.LogitsProcessorList),vt.push(new v.WhisperTimeStampLogitsProcessor(Ue,lr))),Ue.begin_suppress_tokens&&(vt??(vt=new v.LogitsProcessorList),vt.push(new v.SuppressTokensAtBeginLogitsProcessor(Ue.begin_suppress_tokens,lr.length))),Ue.return_token_timestamps){if(!Ue.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");Ue.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),Ue.output_attentions=!0,Ue.return_dict_in_generate=!0}const hr=await super.generate({inputs:we,generation_config:Ue,logits_processor:vt,decoder_input_ids:lr,...jt});return Ue.return_token_timestamps&&(hr.token_timestamps=this._extract_token_timestamps(hr,Ue.alignment_heads,Ue.num_frames)),hr}_extract_token_timestamps(we,Ue,vt=null,Wt=.02){if(!we.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");vt==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let jt=this.config.median_filter_width;jt===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),jt=7);const lr=we.cross_attentions,hr=Array.from({length:this.config.decoder_layers},(Xs,Es)=>(0,B.cat)(lr.map(ta=>ta[Es]),2)),Mr=(0,B.stack)(Ue.map(([Xs,Es])=>{if(Xs>=hr.length)throw new Error(`Layer index ${Xs} is out of bounds for cross attentions (length ${hr.length}).`);return vt?hr[Xs].slice(null,Es,null,[0,vt]):hr[Xs].slice(null,Es)})).transpose(1,0,2,3),[Dr,Kr]=(0,B.std_mean)(Mr,-2,0,!0),Hs=Mr.clone();for(let Xs=0;Xs<Hs.dims[0];++Xs){const Es=Hs[Xs];for(let ta=0;ta<Es.dims[0];++ta){const Ya=Es[ta],Tn=Dr[Xs][ta][0].data,Hi=Kr[Xs][ta][0].data;for(let oa=0;oa<Ya.dims[0];++oa){let hn=Ya[oa].data;for(let si=0;si<hn.length;++si)hn[si]=(hn[si]-Hi[si])/Tn[si];hn.set((0,N.medianFilter)(hn,jt))}}}const cs=[(0,B.mean)(Hs,1)],ia=we.sequences.dims,ws=new B.Tensor("float32",new Float32Array(ia[0]*ia[1]),ia);for(let Xs=0;Xs<ia[0];++Xs){const Es=cs[Xs].neg().squeeze_(0),[ta,Ya]=(0,N.dynamic_time_warping)(Es.tolist()),Tn=Array.from({length:ta.length-1},(hn,si)=>ta[si+1]-ta[si]),Hi=(0,y.mergeArrays)([1],Tn).map(hn=>!!hn),oa=[];for(let hn=0;hn<Hi.length;++hn)Hi[hn]&&oa.push(Ya[hn]*Wt);ws[Xs].data.set(oa,1)}return ws}}class cl extends WA{}class oA extends Se{constructor(){super(...arguments);Te(this,"requires_attention_mask",!1);Te(this,"main_input_name","input_values");Te(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Kl extends oA{}class ii extends oA{}class ca extends Se{constructor(){super(...arguments);Te(this,"main_input_name","pixel_values");Te(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Ro extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class go extends Ro{_merge_input_ids_with_image_features({inputs_embeds:we,image_features:Ue,input_ids:vt,attention_mask:Wt}){const jt=this.config.image_token_index,hr=vt.tolist().map(cs=>cs.findIndex(ia=>ia==jt)),Mr=hr.every(cs=>cs===-1),Dr=hr.every(cs=>cs!==-1);if(!Mr&&!Dr)throw new Error("Every input should contain either 0 or 1 image token.");if(Mr)return{inputs_embeds:we,attention_mask:Wt};const Kr=[],Hs=[];for(let cs=0;cs<hr.length;++cs){const ia=hr[cs],ws=we[cs],Xs=Ue[cs],Es=Wt[cs];Kr.push((0,B.cat)([ws.slice([0,ia]),Xs,ws.slice([ia+1,ws.dims[0]])],0)),Hs.push((0,B.cat)([Es.slice([0,ia]),(0,B.ones)([Xs.dims[0]]),Es.slice([ia+1,Es.dims[0]])],0))}return{inputs_embeds:(0,B.stack)(Kr,0),attention_mask:(0,B.stack)(Hs,0)}}}class jn extends go{}class po extends go{}class ji extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Te(this,"main_input_name","inputs_embeds")}}class AA extends ji{_merge_input_ids_with_image_features({inputs_embeds:we,image_features:Ue,input_ids:vt,attention_mask:Wt}){return{inputs_embeds:(0,B.cat)([Ue,we],1),attention_mask:(0,B.cat)([(0,B.ones)(Ue.dims.slice(0,2)),Wt],1)}}async _prepare_inputs_embeds({input_ids:we,pixel_values:Ue,inputs_embeds:vt,attention_mask:Wt}){if(!we&&!Ue)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let jt,lr;return we&&(jt=await this.encode_text({input_ids:we})),Ue&&(lr=await this.encode_image({pixel_values:Ue})),jt&&lr?{inputs_embeds:vt,attention_mask:Wt}=this._merge_input_ids_with_image_features({inputs_embeds:jt,image_features:lr,input_ids:we,attention_mask:Wt}):vt=jt||lr,{inputs_embeds:vt,attention_mask:Wt}}async forward({input_ids:we,pixel_values:Ue,attention_mask:vt,decoder_input_ids:Wt,decoder_attention_mask:jt,encoder_outputs:lr,past_key_values:hr,inputs_embeds:Mr,decoder_inputs_embeds:Dr}){if(Mr||({inputs_embeds:Mr,attention_mask:vt}=await this._prepare_inputs_embeds({input_ids:we,pixel_values:Ue,inputs_embeds:Mr,attention_mask:vt})),!lr){let{last_hidden_state:cs}=await Xe(this,{inputs_embeds:Mr,attention_mask:vt});lr=cs}if(!Dr){if(!Wt)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Dr=await this.encode_text({input_ids:Wt})}return await xe(this,{inputs_embeds:Dr,attention_mask:jt,encoder_attention_mask:vt,encoder_hidden_states:lr,past_key_values:hr},!0)}}class lA extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ao extends lA{_merge_input_ids_with_image_features(we){const Ue=we.image_features.dims.at(-1),vt=we.image_features.view(-1,Ue);return ue({image_token_id:this.config.image_token_index,...we,image_features:vt})}}class UA extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class jo extends UA{async encode_image({pixel_values:we,pixel_attention_mask:Ue}){return(await Ie(this.sessions.vision_encoder,{pixel_values:we,pixel_attention_mask:Ue})).image_features}_merge_input_ids_with_image_features(we){const Ue=we.image_features.dims.at(-1),vt=we.image_features.view(-1,Ue);return ue({image_token_id:this.config.image_token_id,...we,image_features:vt})}}class Vo extends jo{}class mr extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Ti extends mr{async forward({input_ids:we=null,attention_mask:Ue=null,pixel_values:vt=null,image_sizes:Wt=null,position_ids:jt=null,inputs_embeds:lr=null,past_key_values:hr=null,generation_config:Mr=null,logits_processor:Dr=null,...Kr}){if(!lr){let cs;if(vt&&we.dims[1]!==1){if(!Wt)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:cs}=await Ie(this.sessions.vision_encoder,{pixel_values:vt,image_sizes:Wt}))}else{const ia=this.config.normalized_config.hidden_size;cs=new B.Tensor("float32",[],[0,ia])}({inputs_embeds:lr}=await Ie(this.sessions.prepare_inputs_embeds,{input_ids:we,image_features:cs}))}return await xe(this,{inputs_embeds:lr,past_key_values:hr,attention_mask:Ue,position_ids:jt,generation_config:Mr,logits_processor:Dr},!1)}}class vr extends Se{}class cA extends vr{}class HA extends vr{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class Vn extends vr{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class mi extends vr{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class no extends vr{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class ho extends Se{}class YA extends ho{}class Xa extends ho{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class ul extends vr{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class dl extends Se{}class io extends dl{}class oo extends Se{}class fl extends oo{async forward(we){const Ue=!we.input_ids,vt=!we.pixel_values;if(Ue&&vt)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(Ue&&(we.input_ids=(0,B.ones)([we.pixel_values.dims[0],1])),vt){const{image_size:Dr}=this.config.vision_config;we.pixel_values=(0,B.full)([0,3,Dr,Dr],0)}const{text_embeddings:Wt,image_embeddings:jt,l2norm_text_embeddings:lr,l2norm_image_embeddings:hr}=await super.forward(we),Mr={};return Ue||(Mr.text_embeddings=Wt,Mr.l2norm_text_embeddings=lr),vt||(Mr.image_embeddings=jt,Mr.l2norm_image_embeddings=hr),Mr}}class uA extends oo{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class Bo extends oo{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class _r extends Se{}class ei extends _r{}class dA extends _r{}class To extends Se{}class Yi extends To{}class Wo extends To{}class Uo extends Se{}class KA extends Uo{}class Ho extends Uo{}class fA extends Se{}class qA extends fA{}class Za extends fA{}class gA extends Se{}class gl extends gA{}class ds extends gA{}class zs extends Se{}class pA extends zs{}class bi extends zs{}class gr extends Se{}class xn extends gr{}class Vi extends gr{}class fn extends Se{}class Pi extends fn{}class Ci extends fn{}class mo extends Se{}class hA extends mo{}class Yo extends mo{}class Pa extends Se{}class Po extends Pa{}class Ko extends Pa{}class gn extends Se{}class bo extends gn{}class fs extends gn{}class Ao extends Se{}class mA extends Ao{}class Is extends Ao{}class Co extends Se{}class ls extends Co{}class qo extends Co{}class bA extends Se{}class CA extends bA{}class wA extends bA{}class Oi extends Se{}class Xo extends Oi{}class Ua extends Oi{}class Zo extends Se{}class Jo extends Zo{}class Do extends Zo{}class Wn extends Se{}class So extends Wn{}class IA extends Wn{}class wi extends Se{}class yA extends wi{}class $o extends wi{}class eA extends Se{}class wo extends eA{}class kA extends eA{}class _A extends Se{}class XA extends _A{}class Cn extends _A{}class Io extends Se{}class Mn extends Io{}class vA extends Io{}class Go extends Se{}class Ii extends Go{}class wa extends Go{}class xA extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Ki extends xA{get_rope_index(we,Ue,vt,Wt){const{vision_config:jt,image_token_id:lr,video_token_id:hr,vision_start_token_id:Mr}=this.config,Dr=jt.spatial_merge_size??2,Kr=[];if(Ue||vt){let Hs=we.tolist();Wt||(Wt=(0,B.ones_like)(we));const cs=Wt.tolist(),ia=Array.from({length:3},Ya=>Array.from({length:we.dims[0]},Tn=>Array.from({length:we.dims[1]},Hi=>1))),ws=Ue?Ue.tolist():[],Xs=vt?vt.tolist():[];let Es=0,ta=0;for(let Ya=0;Ya<Hs.length;++Ya){const Tn=Hs[Ya].filter((E,G)=>cs[Ya][G]==1),oa=Tn.reduce((E,G,L)=>(G==Mr&&E.push(L),E),[]).map(E=>Tn[E+1]),hn=oa.filter(E=>E==lr).length,si=oa.filter(E=>E==hr).length;let _i=[],OA=0,r0=hn,Cd=si;for(let E=0;E<oa.length;++E){const G=Tn.findIndex((Ft,Lt)=>Lt>OA&&Ft==lr),L=Tn.findIndex((Ft,Lt)=>Lt>OA&&Ft==hr),W=r0>0&&G!==-1?G:Tn.length+1,R=Cd>0&&L!==-1?L:Tn.length+1;let te,ae,le,Pe;W<R?([ae,le,Pe]=ws[Es],++Es,--r0,te=W):([ae,le,Pe]=Xs[ta],++ta,--Cd,te=R);const[Ge,$,je]=[Number(ae),Math.floor(Number(le)/Dr),Math.floor(Number(Pe)/Dr)],Ke=te-OA,nt=_i.length>0?(0,N.max)(_i.at(-1))[0]+1:0;_i.push(Array.from({length:3*Ke},(Ft,Lt)=>nt+Lt%Ke));const tt=Ke+nt,dt=Ge*$*je,Ct=Array.from({length:dt},(Ft,Lt)=>tt+Math.floor(Lt/($*je))),Et=Array.from({length:dt},(Ft,Lt)=>tt+Math.floor(Lt/je)%$),Ot=Array.from({length:dt},(Ft,Lt)=>tt+Lt%je);_i.push([Ct,Et,Ot].flat()),OA=te+dt}if(OA<Tn.length){const E=_i.length>0?(0,N.max)(_i.at(-1))[0]+1:0,G=Tn.length-OA;_i.push(Array.from({length:3*G},(L,W)=>E+W%G))}const to=_i.reduce((E,G)=>E+G.length,0),kl=new Array(to);let A2=0;for(let E=0;E<3;++E)for(let G=0;G<_i.length;++G){const L=_i[G],W=L.length/3;for(let R=E*W;R<(E+1)*W;++R)kl[A2++]=L[R]}let Qf=0;const d=cs[Ya];for(let E=0;E<d.length;++E)if(d[E]==1){for(let G=0;G<3;++G)ia[G][Ya][E]=kl[G*to/3+Qf];++Qf}const b=(0,N.max)(kl)[0];Kr.push(b+1-Hs[Ya].length)}return[new B.Tensor("int64",ia.flat(1/0),[3,we.dims[0],we.dims[1]]),new B.Tensor("int64",Kr,[Kr.length,1])]}else if(Wt){const{data:Hs,dims:cs}=lt(Wt),ia=BigInt64Array.from({length:3*Hs.length},(Xs,Es)=>Hs[Es%Hs.length]),ws=Array.from({length:cs[0]},(Xs,Es)=>(0,N.max)(Hs.subarray(cs[1]*Es,cs[1]*(Es+1)))[0]+1n+BigInt(cs[1]));return[new B.Tensor("int64",ia,[3,...cs]),new B.Tensor("int64",ws,[ws.length,1])]}else{const[Hs,cs]=we.dims,ia=BigInt64Array.from({length:3*Hs*cs},(ws,Xs)=>BigInt(Math.floor(Xs%cs/Hs)));return[new B.Tensor("int64",ia,[3,...we.dims]),(0,B.zeros)([Hs,1])]}}async encode_image({pixel_values:we,image_grid_thw:Ue}){return(await Ie(this.sessions.vision_encoder,{pixel_values:we,grid_thw:Ue})).image_features}_merge_input_ids_with_image_features(we){return ue({image_token_id:this.config.image_token_id,...we})}prepare_inputs_for_generation(we,Ue,vt){if(Ue.attention_mask&&!Ue.position_ids)if(!Ue.past_key_values)[Ue.position_ids,Ue.rope_deltas]=this.get_rope_index(Ue.input_ids,Ue.image_grid_thw,Ue.video_grid_thw,Ue.attention_mask);else{Ue.pixel_values=null;const Wt=BigInt(Object.values(Ue.past_key_values)[0].dims.at(-2)),jt=Ue.rope_deltas.map(lr=>Wt+lr);Ue.position_ids=(0,B.stack)([jt,jt,jt],0)}return Ue}}class lo extends Se{}class ZA extends lo{}class MA extends lo{}class tA extends Se{}class JA extends tA{}class qi extends tA{}class yi extends Se{}class EA extends yi{}class Fo extends yi{}class sn extends Se{}class ua extends sn{}class yo extends sn{}class BA extends Se{}class Xi extends BA{}class Zi extends BA{}class Ji extends Se{}class TA extends Ji{}class En extends Ji{async _call(we){return new ss(await super._call(we))}}class PA extends Se{}class DA extends PA{}class ko extends PA{async _call(we){return new ss(await super._call(we))}}class zo extends Se{}class wn extends zo{}class SA extends Se{}class GA extends SA{}class _o extends SA{async _call(we){return new ss(await super._call(we))}}class pl extends Se{}class Oo extends pl{}class rs extends Se{}class t extends rs{}class r extends rs{async _call(we){return new ss(await super._call(we))}}class s extends Se{}class n extends s{}class A extends Se{}class l extends A{}class g extends A{async _call(we){return new ss(await super._call(we))}}class m extends Se{}class w extends m{async _call(we){return new m0(await super._call(we))}}class T extends Se{}class x extends T{}class F extends T{async _call(we){return new ss(await super._call(we))}}class U extends Se{}class ee extends U{}class Ae extends U{async _call(we){return new ss(await super._call(we))}}class Ce extends Se{}class Me extends Ce{}class We extends Ce{}class Ze extends Se{}class ut extends Ze{}class mt extends Ze{}class xt extends Se{}class St extends xt{}class Rt extends xt{async _call(we){return new ss(await super._call(we))}}class sr extends Se{}class br extends sr{}class Ir extends sr{async _call(we){return new Ur(await super._call(we))}}class jr extends sr{async _call(we){return new As(await super._call(we))}}class Ur extends Qe{constructor({logits:we,pred_boxes:Ue}){super(),this.logits=we,this.pred_boxes=Ue}}class As extends Qe{constructor({logits:we,pred_boxes:Ue,pred_masks:vt}){super(),this.logits=we,this.pred_boxes=Ue,this.pred_masks=vt}}class Ds extends Se{}class ea extends Ds{}class da extends Ds{async _call(we){return new ma(await super._call(we))}}class ma extends Qe{constructor({logits:we,pred_boxes:Ue}){super(),this.logits=we,this.pred_boxes=Ue}}class Ia extends Se{}class Na extends Ia{}class La extends Ia{async _call(we){return new Ja(await super._call(we))}}class Ja extends ma{}class an extends Se{}class In extends an{}class z extends an{async _call(we){return new K(await super._call(we))}}class K extends ma{}class re extends Se{}class me extends re{}class _e extends re{async _call(we){return new at(await super._call(we))}}class at extends Ur{}class yt extends Se{}class Ut extends yt{}class rr extends yt{async _call(we){return new ss(await super._call(we))}}class pr extends Se{}class Nr extends pr{}class ns extends pr{async _call(we){return new ss(await super._call(we))}}class ys extends Se{}class Ea extends ys{}class ti extends ys{async _call(we){return new ss(await super._call(we))}}class rA extends Se{}class Yc extends rA{}class Kc extends rA{async _call(we){return new ss(await super._call(we))}}class qc extends rA{}class D0 extends Se{}class S0 extends D0{}class Xc extends D0{}class G0 extends Se{}class F0 extends G0{}class Zc extends G0{}class Jc extends Se{}class $c extends Jc{}class a0 extends Se{}class z0 extends a0{}class eu extends a0{}class tu extends a0{}class O0 extends Se{}class ru extends O0{}class su extends Se{}class Q0 extends su{}class au extends Se{}class sA extends au{}class Qo extends Se{}class hl extends Qo{}class ml extends Qo{}class N0 extends Se{}class nu extends N0{}class L0 extends N0{}class iu extends Se{}class ou extends iu{}class R0 extends Se{}class Au extends R0{}class lu extends R0{async _call(we){return new ss(await super._call(we))}}class j0 extends Se{}class Qi extends j0{}class cu extends j0{async _call(we){return new ss(await super._call(we))}}class V0 extends Se{}class n0 extends V0{}class uu extends V0{async _call(we){return new ss(await super._call(we))}}class El extends Se{}class $A extends El{}class du extends El{async _call(we){return new ss(await super._call(we))}}class fu extends Se{}class gu extends fu{}class W0 extends Se{}class i0 extends W0{}class pu extends W0{async _call(we){return new hu(await super._call(we))}}class hu extends Qe{constructor({logits:we,pred_boxes:Ue}){super(),this.logits=we,this.pred_boxes=Ue}}class mu extends Se{}class bu extends mu{async get_image_embeddings({pixel_values:we}){return await Xe(this,{pixel_values:we})}async forward(we){if((!we.image_embeddings||!we.image_positional_embeddings)&&(we={...we,...await this.get_image_embeddings(we)}),!we.input_labels&&we.input_points){const vt=we.input_points.dims.slice(0,-1),Wt=vt.reduce((jt,lr)=>jt*lr,1);we.input_labels=new B.Tensor("int64",new BigInt64Array(Wt).fill(1n),vt)}const Ue={image_embeddings:we.image_embeddings,image_positional_embeddings:we.image_positional_embeddings};return we.input_points&&(Ue.input_points=we.input_points),we.input_labels&&(Ue.input_labels=we.input_labels),we.input_boxes&&(Ue.input_boxes=we.input_boxes),await Ie(this.sessions.prompt_encoder_mask_decoder,Ue)}async _call(we){return new ql(await super._call(we))}}class ql extends Qe{constructor({iou_scores:we,pred_masks:Ue}){super(),this.iou_scores=we,this.pred_masks=Ue}}class U0 extends Se{}class H0 extends U0{}class Cu extends U0{}class Bl extends Se{}class wu extends Bl{}class Iu extends Bl{}class el extends Se{}class yu extends el{}class o0 extends el{async _call(we){return new zA(await super._call(we))}}class ku extends el{async _call(we){return new ss(await super._call(we))}}class _u extends el{async _call(we){return new yn(await super._call(we))}}class Y0 extends Se{}class jd extends Y0{}class vu extends Y0{async _call(we){return new yn(await super._call(we))}}class xu extends Se{}class Mu extends xu{}class tl extends Se{}class Eu extends tl{}class Bu extends tl{async _call(we){return new zA(await super._call(we))}}class Tu extends tl{async _call(we){return new ss(await super._call(we))}}class Xl extends Se{}class Pu extends Xl{}class Du extends Xl{async _call(we){return new zA(await super._call(we))}}class Su extends Xl{async _call(we){return new ss(await super._call(we))}}class bl extends Xl{async _call(we){return new yn(await super._call(we))}}class A0 extends Se{}class K0 extends A0{}class q0 extends A0{async _call(we){return new zA(await super._call(we))}}class X0 extends A0{async _call(we){return new ss(await super._call(we))}}class Vd extends Se{}class Gu extends el{}class l0 extends el{async _call(we){return new zA(await super._call(we))}}class Z0 extends el{async _call(we){return new ss(await super._call(we))}}class Tl extends Se{}class J0 extends Tl{}class $0 extends Tl{async _call(we){return new zA(await super._call(we))}}class Fu extends Tl{async _call(we){return new ss(await super._call(we))}}class ec extends Tl{async _call(we){return new eo(await super._call(we))}}class tc extends Tl{async _call(we){return new yn(await super._call(we))}}class zu extends Se{}class c0 extends zu{}class u0 extends Se{}class Wd extends u0{}class Ou extends u0{}class Qu extends u0{async generate_speech(we,Ue,{threshold:vt=.5,minlenratio:Wt=0,maxlenratio:jt=20,vocoder:lr=null}={}){const hr={input_ids:we},{encoder_outputs:Mr,encoder_attention_mask:Dr}=await Xe(this,hr),Kr=Mr.dims[1]/this.config.reduction_factor,Hs=Math.floor(Kr*jt),cs=Math.floor(Kr*Wt),ia=this.config.num_mel_bins;let ws=[],Xs=null,Es=null,ta=0;for(;;){++ta;const Hi=Ee(!!Es);let oa;Es?oa=Es.output_sequence_out:oa=new B.Tensor("float32",new Float32Array(ia),[1,1,ia]);let hn={use_cache_branch:Hi,output_sequence:oa,encoder_attention_mask:Dr,speaker_embeddings:Ue,encoder_hidden_states:Mr};this.addPastKeyValues(hn,Xs),Es=await Ie(this.sessions.decoder_model_merged,hn),Xs=this.getPastKeyValues(Es,Xs);const{prob:si,spectrum:_i}=Es;if(ws.push(_i),ta>=cs&&(Array.from(si.data).filter(OA=>OA>=vt).length>0||ta>=Hs))break}const Ya=(0,B.cat)(ws),{waveform:Tn}=await Ie(lr.sessions.model,{spectrogram:Ya});return{spectrogram:Ya,waveform:Tn}}}class rc extends Se{constructor(){super(...arguments);Te(this,"main_input_name","spectrogram")}}class d0 extends Se{}class Ud extends d0{}class sc extends Se{}class Nu extends sc{}class ac extends sc{}class nc extends Se{}class Lu extends nc{}class ic extends nc{}class oc extends Se{}class Ru extends oc{}class Ac extends oc{}class f0 extends Se{}class Hd extends f0{}class lc extends f0{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class cc extends f0{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"audio_model"})}}class ju extends Se{}class uc extends ju{async _call(we){return new bd(await super._call(we))}}class Zl extends Se{}class Yd extends Zl{}class Vu extends Zl{}class g0 extends Zl{}class dc extends Se{}class Wu extends dc{}class fc extends dc{}class gc extends Se{}class Uu extends gc{}class Hu extends gc{async _call(we){return new ss(await super._call(we))}}class pc extends Se{}class Kd extends pc{}class qd extends pc{}class hc extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(Ue){const[vt,Wt]=Ue.dims,jt=this.config.decoder.num_codebooks,lr=Wt-jt;let hr=0;for(let Kr=0;Kr<Ue.size;++Kr){if(Ue.data[Kr]===this.config.decoder.pad_token_id)continue;const Hs=Kr%Wt,cs=Math.floor(Kr/Wt)%jt,ia=Hs-cs;ia>0&&ia<=lr&&(Ue.data[hr++]=Ue.data[Kr])}const Mr=Math.floor(vt/jt),Dr=hr/(Mr*jt);return new B.Tensor(Ue.type,Ue.data.slice(0,hr),[Mr,jt,Dr])}prepare_inputs_for_generation(Ue,vt,Wt){let jt=structuredClone(Ue);for(let hr=0;hr<jt.length;++hr)for(let Mr=0;Mr<jt[hr].length;++Mr)hr%this.config.decoder.num_codebooks>=Mr&&(jt[hr][Mr]=BigInt(this.config.decoder.pad_token_id));return Wt.guidance_scale!==null&&Wt.guidance_scale>1&&(jt=jt.concat(jt)),super.prepare_inputs_for_generation(jt,vt,Wt)}async generate(Ue){const vt=await super.generate(Ue),Wt=this._apply_and_filter_by_delay_pattern_mask(vt).unsqueeze_(0),{audio_values:jt}=await Ie(this.sessions.encodec_decode,{audio_codes:Wt});return jt}}class p0 extends Se{}class Yu extends p0{}class mc extends p0{async _call(we){return new ss(await super._call(we))}}class Ku extends p0{}class Cl extends Se{}class bc extends Cl{}class Cc extends Cl{async _call(we){return new ss(await super._call(we))}}class qu extends Cl{}class ya extends Se{}class Xd extends ya{}class Zd extends ya{async _call(we){return new ss(await super._call(we))}}class Jd extends ya{}class Jl extends Se{}class Xu extends Jl{}class Zu extends Jl{async _call(we){return new ss(await super._call(we))}}class wc extends Jl{}class Ju extends Se{}class Ic extends Ju{}class yc extends Se{}class $d extends yc{constructor(...Ue){super(...Ue);Te(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(Ue){const vt=this._generation_mode??"text";let Wt;if(vt==="text"||!Ue.past_key_values){const Dr=this.sessions.prepare_inputs_embeds,Kr=(0,y.pick)(Ue,Dr.inputNames);Wt=await Ie(Dr,Kr)}else{const Dr=this.sessions.gen_img_embeds,Kr=(0,y.pick)({image_ids:Ue.input_ids},Dr.inputNames);Wt=await Ie(Dr,Kr)}const jt={...Ue,...Wt},lr=await xe(this,jt),hr=this.sessions[vt==="text"?"lm_head":"gen_head"];if(!hr)throw new Error(`Unable to find "${hr}" generation head`);const Mr=await Ie(hr,(0,y.pick)(lr,hr.inputNames));return{...Wt,...lr,...Mr}}async generate(Ue){return this._generation_mode="text",super.generate(Ue)}async generate_images(Ue){this._generation_mode="image";const vt=(Ue.inputs??Ue[this.main_input_name]).dims[1],jt=(await super.generate(Ue)).slice(null,[vt,null]),lr=this.sessions.image_decode,{decoded_image:hr}=await Ie(lr,{generated_tokens:jt}),Mr=hr.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Dr=[];for(const Kr of Mr){const Hs=S.RawImage.fromTensor(Kr);Dr.push(Hs)}return Dr}}class $u extends Qe{constructor({char_logits:we,bpe_logits:Ue,wp_logits:vt}){super(),this.char_logits=we,this.bpe_logits=Ue,this.wp_logits=vt}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class ed extends Se{}class kc extends ed{async _call(we){return new $u(await super._call(we))}}class td extends Se{}class ef extends td{}class rd extends td{}class _c extends Se{}class sd extends _c{}class ad extends _c{}class nd extends Se{constructor(){super(...arguments);Te(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class id extends nd{_merge_input_ids_with_audio_features(we){const Ue=we.audio_features.dims.at(-1),vt=we.audio_features.view(-1,Ue);return ie({audio_token_id:this.config.ignore_index,...we,audio_features:vt})}}class $l extends Se{constructor(){super(...arguments);Te(this,"main_input_name","input_values");Te(this,"forward_params",["input_values"])}}class od extends Qe{constructor({audio_codes:we}){super(),this.audio_codes=we}}class vc extends Qe{constructor({audio_values:we}){super(),this.audio_values=we}}class xc extends $l{async encode(we){return new od(await Ie(this.sessions.encoder_model,we))}async decode(we){return new vc(await Ie(this.sessions.decoder_model,we))}}class Mc extends $l{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"encoder_model"})}}class Ad extends $l{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"decoder_model"})}}class Ec extends Se{constructor(){super(...arguments);Te(this,"main_input_name","input_values");Te(this,"forward_params",["input_values"])}}class Bc extends Qe{constructor({audio_codes:we}){super(),this.audio_codes=we}}class ld extends Qe{constructor({audio_values:we}){super(),this.audio_values=we}}class cd extends Ec{async encode(we){return new Bc(await Ie(this.sessions.encoder_model,we))}async decode(we){return new ld(await Ie(this.sessions.decoder_model,we))}}class tf extends Ec{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"encoder_model"})}}class Tc extends Ec{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"decoder_model"})}}class FA extends Se{constructor(){super(...arguments);Te(this,"main_input_name","input_values");Te(this,"forward_params",["input_values"])}}class ud extends FA{async encode(we){return await Ie(this.sessions.encoder_model,we)}async decode(we){return await Ie(this.sessions.decoder_model,we)}}class dd extends FA{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"encoder_model"})}}class rf extends FA{static async from_pretrained(we,Ue={}){return super.from_pretrained(we,{...Ue,model_file_name:Ue.model_file_name??"decoder_model"})}}class Lr{static async from_pretrained(we,{progress_callback:Ue=null,config:vt=null,cache_dir:Wt=null,local_files_only:jt=!1,revision:lr="main",model_file_name:hr=null,subfolder:Mr="onnx",device:Dr=null,dtype:Kr=null,use_external_data_format:Hs=null,session_options:cs={}}={}){const ia={progress_callback:Ue,config:vt,cache_dir:Wt,local_files_only:jt,revision:lr,model_file_name:hr,subfolder:Mr,device:Dr,dtype:Kr,use_external_data_format:Hs,session_options:cs};if(ia.config=await u.AutoConfig.from_pretrained(we,ia),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const ws=ia.config.model_type;for(const Xs of this.MODEL_CLASS_MAPPINGS){let Es=Xs.get(ws);if(!Es){for(const ta of Xs.values())if(ta[0]===ws){Es=ta;break}if(!Es)continue}return await Es[1].from_pretrained(we,ia)}if(this.BASE_IF_FAIL)return et.has(ws)||console.warn(`Unknown model class "${ws}", attempting to construct from base class.`),await Se.from_pretrained(we,ia);throw Error(`Unsupported model type: ${ws}`)}}Te(Lr,"MODEL_CLASS_MAPPINGS",null),Te(Lr,"BASE_IF_FAIL",!1);const sf=new Map([["bert",["BertModel",Bt]],["modernbert",["ModernBertModel",ce]],["nomic_bert",["NomicBertModel",It]],["roformer",["RoFormerModel",_t]],["electra",["ElectraModel",Wa]],["esm",["EsmModel",ba]],["convbert",["ConvBertModel",$s]],["camembert",["CamembertModel",en]],["deberta",["DebertaModel",Zt]],["deberta-v2",["DebertaV2Model",vn]],["mpnet",["MPNetModel",bn]],["albert",["AlbertModel",Pt]],["distilbert",["DistilBertModel",Fa]],["roberta",["RobertaModel",Ma]],["xlm",["XLMModel",Rn]],["xlm-roberta",["XLMRobertaModel",uo]],["clap",["ClapModel",Hd]],["clip",["CLIPModel",cA]],["clipseg",["CLIPSegModel",ei]],["chinese_clip",["ChineseCLIPModel",io]],["siglip",["SiglipModel",YA]],["jina_clip",["JinaCLIPModel",fl]],["mobilebert",["MobileBertModel",tn]],["squeezebert",["SqueezeBertModel",Qt]],["wav2vec2",["Wav2Vec2Model",yu]],["wav2vec2-bert",["Wav2Vec2BertModel",K0]],["unispeech",["UniSpeechModel",Eu]],["unispeech-sat",["UniSpeechSatModel",Pu]],["hubert",["HubertModel",Gu]],["wavlm",["WavLMModel",J0]],["audio-spectrogram-transformer",["ASTModel",$n]],["vits",["VitsModel",uc]],["pyannote",["PyAnnoteModel",jd]],["wespeaker-resnet",["WeSpeakerResNetModel",Mu]],["detr",["DetrModel",br]],["rt_detr",["RTDetrModel",ea]],["rt_detr_v2",["RTDetrV2Model",Na]],["rf_detr",["RFDetrModel",In]],["table-transformer",["TableTransformerModel",me]],["vit",["ViTModel",TA]],["ijepa",["IJepaModel",DA]],["pvt",["PvtModel",GA]],["vit_msn",["ViTMSNModel",t]],["vit_mae",["ViTMAEModel",Oo]],["groupvit",["GroupViTModel",n]],["fastvit",["FastViTModel",l]],["mobilevit",["MobileViTModel",x]],["mobilevitv2",["MobileViTV2Model",ee]],["owlvit",["OwlViTModel",Me]],["owlv2",["Owlv2Model",ut]],["beit",["BeitModel",St]],["deit",["DeiTModel",Ut]],["hiera",["HieraModel",Nr]],["convnext",["ConvNextModel",Au]],["convnextv2",["ConvNextV2Model",Qi]],["dinov2",["Dinov2Model",n0]],["dinov2_with_registers",["Dinov2WithRegistersModel",$A]],["resnet",["ResNetModel",Ea]],["swin",["SwinModel",Yc]],["swin2sr",["Swin2SRModel",S0]],["donut-swin",["DonutSwinModel",ou]],["yolos",["YolosModel",i0]],["dpt",["DPTModel",F0]],["glpn",["GLPNModel",nu]],["hifigan",["SpeechT5HifiGan",rc]],["efficientnet",["EfficientNetModel",Uu]],["decision_transformer",["DecisionTransformerModel",Ic]],["patchtst",["PatchTSTForPrediction",ef]],["patchtsmixer",["PatchTSMixerForPrediction",sd]],["mobilenet_v1",["MobileNetV1Model",Yu]],["mobilenet_v2",["MobileNetV2Model",bc]],["mobilenet_v3",["MobileNetV3Model",Xd]],["mobilenet_v4",["MobileNetV4Model",Xu]],["maskformer",["MaskFormerModel",hl]],["mgp-str",["MgpstrForSceneTextRecognition",kc]],["style_text_to_speech_2",["StyleTextToSpeech2Model",c0]]]),rl=new Map([["t5",["T5Model",it]],["longt5",["LongT5Model",ir]],["mt5",["MT5Model",Yt]],["bart",["BartModel",xs]],["mbart",["MBartModel",Ns]],["marian",["MarianModel",H0]],["whisper",["WhisperModel",VA]],["m2m_100",["M2M100Model",wu]],["blenderbot",["BlenderbotModel",Gs]],["blenderbot-small",["BlenderbotSmallModel",Ms]]]),af=new Map([["mimi",["MimiModel",xc]],["dac",["DacModel",cd]],["snac",["SnacModel",ud]]]),fd=new Map([["bloom",["BloomModel",EA]],["jais",["JAISModel",KA]],["gpt2",["GPT2Model",Yi]],["gptj",["GPTJModel",pA]],["gpt_bigcode",["GPTBigCodeModel",xn]],["gpt_neo",["GPTNeoModel",qA]],["gpt_neox",["GPTNeoXModel",gl]],["codegen",["CodeGenModel",Pi]],["llama",["LlamaModel",hA]],["exaone",["ExaoneModel",mA]],["olmo",["OlmoModel",CA]],["olmo2",["Olmo2Model",Xo]],["mobilellm",["MobileLLMModel",ls]],["granite",["GraniteModel",Jo]],["cohere",["CohereModel",So]],["gemma",["GemmaModel",yA]],["gemma2",["Gemma2Model",wo]],["gemma3_text",["Gemma3Model",XA]],["helium",["HeliumModel",Po]],["glm",["GlmModel",bo]],["openelm",["OpenELMModel",Mn]],["qwen2",["Qwen2Model",Ii]],["phi",["PhiModel",ZA]],["phi3",["Phi3Model",JA]],["mpt",["MptModel",ua]],["opt",["OPTModel",Xi]],["mistral",["MistralModel",Nu]],["starcoder2",["Starcoder2Model",Lu]],["falcon",["FalconModel",Ru]],["stablelm",["StableLmModel",Wu]]]),gd=new Map([["speecht5",["SpeechT5ForSpeechToText",Ou]],["whisper",["WhisperForConditionalGeneration",WA]],["lite-whisper",["LiteWhisperForConditionalGeneration",cl]],["moonshine",["MoonshineForConditionalGeneration",ii]]]),Bn=new Map([["speecht5",["SpeechT5ForTextToSpeech",Qu]]]),Os=new Map([["vits",["VitsModel",uc]],["musicgen",["MusicgenForConditionalGeneration",hc]]]),Ws=new Map([["bert",["BertForSequenceClassification",oe]],["modernbert",["ModernBertForSequenceClassification",ze]],["roformer",["RoFormerForSequenceClassification",Xt]],["electra",["ElectraForSequenceClassification",Sr]],["esm",["EsmForSequenceClassification",Fi]],["convbert",["ConvBertForSequenceClassification",Ks]],["camembert",["CamembertForSequenceClassification",Pn]],["deberta",["DebertaForSequenceClassification",zr]],["deberta-v2",["DebertaV2ForSequenceClassification",Sn]],["mpnet",["MPNetForSequenceClassification",zi]],["albert",["AlbertForSequenceClassification",st]],["distilbert",["DistilBertForSequenceClassification",ai]],["roberta",["RobertaForSequenceClassification",na]],["xlm",["XLMForSequenceClassification",ol]],["xlm-roberta",["XLMRobertaForSequenceClassification",fo]],["bart",["BartForSequenceClassification",as]],["mbart",["MBartForSequenceClassification",Tr]],["mobilebert",["MobileBertForSequenceClassification",pi]],["squeezebert",["SqueezeBertForSequenceClassification",ot]]]),sl=new Map([["bert",["BertForTokenClassification",zt]],["modernbert",["ModernBertForTokenClassification",$e]],["roformer",["RoFormerForTokenClassification",Jt]],["electra",["ElectraForTokenClassification",Kt]],["esm",["EsmForTokenClassification",Jn]],["convbert",["ConvBertForTokenClassification",ts]],["camembert",["CamembertForTokenClassification",Dn]],["deberta",["DebertaForTokenClassification",qs]],["deberta-v2",["DebertaV2ForTokenClassification",ci]],["mpnet",["MPNetForTokenClassification",Bi]],["distilbert",["DistilBertForTokenClassification",fi]],["roberta",["RobertaForTokenClassification",za]],["xlm",["XLMForTokenClassification",RA]],["xlm-roberta",["XLMRobertaForTokenClassification",ni]]]),pd=new Map([["t5",["T5ForConditionalGeneration",kt]],["longt5",["LongT5ForConditionalGeneration",fr]],["mt5",["MT5ForConditionalGeneration",Ar]],["bart",["BartForConditionalGeneration",Ys]],["mbart",["MBartForConditionalGeneration",qt]],["marian",["MarianMTModel",Cu]],["m2m_100",["M2M100ForConditionalGeneration",Iu]],["blenderbot",["BlenderbotForConditionalGeneration",Fs]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",fa]]]),h0=new Map([["bloom",["BloomForCausalLM",Fo]],["gpt2",["GPT2LMHeadModel",Wo]],["jais",["JAISLMHeadModel",Ho]],["gptj",["GPTJForCausalLM",bi]],["gpt_bigcode",["GPTBigCodeForCausalLM",Vi]],["gpt_neo",["GPTNeoForCausalLM",Za]],["gpt_neox",["GPTNeoXForCausalLM",ds]],["codegen",["CodeGenForCausalLM",Ci]],["llama",["LlamaForCausalLM",Yo]],["exaone",["ExaoneForCausalLM",Is]],["olmo",["OlmoForCausalLM",wA]],["olmo2",["Olmo2ForCausalLM",Ua]],["mobilellm",["MobileLLMForCausalLM",qo]],["granite",["GraniteForCausalLM",Do]],["cohere",["CohereForCausalLM",IA]],["gemma",["GemmaForCausalLM",$o]],["gemma2",["Gemma2ForCausalLM",kA]],["gemma3_text",["Gemma3ForCausalLM",Cn]],["helium",["HeliumForCausalLM",Ko]],["glm",["GlmForCausalLM",fs]],["openelm",["OpenELMForCausalLM",vA]],["qwen2",["Qwen2ForCausalLM",wa]],["phi",["PhiForCausalLM",MA]],["phi3",["Phi3ForCausalLM",qi]],["mpt",["MptForCausalLM",yo]],["opt",["OPTForCausalLM",Zi]],["mbart",["MBartForCausalLM",ha]],["mistral",["MistralForCausalLM",ac]],["starcoder2",["Starcoder2ForCausalLM",ic]],["falcon",["FalconForCausalLM",Ac]],["trocr",["TrOCRForCausalLM",Ud]],["stablelm",["StableLmForCausalLM",fc]],["phi3_v",["Phi3VForCausalLM",Ti]]]),Gf=new Map([["multi_modality",["MultiModalityCausalLM",$d]]]),Pc=new Map([["bert",["BertForMaskedLM",Mt]],["modernbert",["ModernBertForMaskedLM",ne]],["roformer",["RoFormerForMaskedLM",Vt]],["electra",["ElectraForMaskedLM",Pr]],["esm",["EsmForMaskedLM",Gi]],["convbert",["ConvBertForMaskedLM",os]],["camembert",["CamembertForMaskedLM",On]],["deberta",["DebertaForMaskedLM",Br]],["deberta-v2",["DebertaV2ForMaskedLM",Qn]],["mpnet",["MPNetForMaskedLM",Nn]],["albert",["AlbertForMaskedLM",he]],["distilbert",["DistilBertForMaskedLM",Xn]],["roberta",["RobertaForMaskedLM",Ca]],["xlm",["XLMWithLMHeadModel",Mo]],["xlm-roberta",["XLMRobertaForMaskedLM",ll]],["mobilebert",["MobileBertForMaskedLM",Ei]],["squeezebert",["SqueezeBertForMaskedLM",Be]]]),nf=new Map([["bert",["BertForQuestionAnswering",ve]],["roformer",["RoFormerForQuestionAnswering",wr]],["electra",["ElectraForQuestionAnswering",Bs]],["convbert",["ConvBertForQuestionAnswering",zn]],["camembert",["CamembertForQuestionAnswering",qn]],["deberta",["DebertaForQuestionAnswering",aa]],["deberta-v2",["DebertaV2ForQuestionAnswering",ui]],["mpnet",["MPNetForQuestionAnswering",rn]],["albert",["AlbertForQuestionAnswering",pe]],["distilbert",["DistilBertForQuestionAnswering",Ri]],["roberta",["RobertaForQuestionAnswering",Hr]],["xlm",["XLMForQuestionAnswering",Al]],["xlm-roberta",["XLMRobertaForQuestionAnswering",dn]],["mobilebert",["MobileBertForQuestionAnswering",Jr]],["squeezebert",["SqueezeBertForQuestionAnswering",bt]]]),hd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",ca]],["idefics3",["Idefics3ForConditionalGeneration",jo]],["smolvlm",["SmolVLMForConditionalGeneration",Vo]]]),Dc=new Map([["llava",["LlavaForConditionalGeneration",go]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",jn]],["moondream1",["Moondream1ForConditionalGeneration",po]],["florence2",["Florence2ForConditionalGeneration",AA]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Ki]],["idefics3",["Idefics3ForConditionalGeneration",jo]],["smolvlm",["SmolVLMForConditionalGeneration",Vo]],["paligemma",["PaliGemmaForConditionalGeneration",ao]]]),of=new Map([["ultravox",["UltravoxModel",id]]]),Ff=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",ca]]]),Af=new Map([["vit",["ViTForImageClassification",En]],["ijepa",["IJepaForImageClassification",ko]],["pvt",["PvtForImageClassification",_o]],["vit_msn",["ViTMSNForImageClassification",r]],["fastvit",["FastViTForImageClassification",g]],["mobilevit",["MobileViTForImageClassification",F]],["mobilevitv2",["MobileViTV2ForImageClassification",Ae]],["beit",["BeitForImageClassification",Rt]],["deit",["DeiTForImageClassification",rr]],["hiera",["HieraForImageClassification",ns]],["convnext",["ConvNextForImageClassification",lu]],["convnextv2",["ConvNextV2ForImageClassification",cu]],["dinov2",["Dinov2ForImageClassification",uu]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",du]],["resnet",["ResNetForImageClassification",ti]],["swin",["SwinForImageClassification",Kc]],["segformer",["SegformerForImageClassification",Vu]],["efficientnet",["EfficientNetForImageClassification",Hu]],["mobilenet_v1",["MobileNetV1ForImageClassification",mc]],["mobilenet_v2",["MobileNetV2ForImageClassification",Cc]],["mobilenet_v3",["MobileNetV3ForImageClassification",Zd]],["mobilenet_v4",["MobileNetV4ForImageClassification",Zu]]]),wl=new Map([["detr",["DetrForObjectDetection",Ir]],["rt_detr",["RTDetrForObjectDetection",da]],["rt_detr_v2",["RTDetrV2ForObjectDetection",La]],["rf_detr",["RFDetrForObjectDetection",z]],["table-transformer",["TableTransformerForObjectDetection",_e]],["yolos",["YolosForObjectDetection",pu]]]),Sc=new Map([["owlvit",["OwlViTForObjectDetection",We]],["owlv2",["Owlv2ForObjectDetection",mt]],["grounding-dino",["GroundingDinoForObjectDetection",gu]]]),e0=new Map([["detr",["DetrForSegmentation",jr]],["clipseg",["CLIPSegForImageSegmentation",dA]]]),Gc=new Map([["segformer",["SegformerForSemanticSegmentation",g0]],["sapiens",["SapiensForSemanticSegmentation",z0]],["swin",["SwinForSemanticSegmentation",qc]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",Ku]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",qu]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",Jd]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",wc]]]),Fc=new Map([["detr",["DetrForSegmentation",jr]],["maskformer",["MaskFormerForInstanceSegmentation",ml]]]),lf=new Map([["sam",["SamModel",bu]]]),cf=new Map([["wav2vec2",["Wav2Vec2ForCTC",o0]],["wav2vec2-bert",["Wav2Vec2BertForCTC",q0]],["unispeech",["UniSpeechForCTC",Bu]],["unispeech-sat",["UniSpeechSatForCTC",Du]],["wavlm",["WavLMForCTC",$0]],["hubert",["HubertForCTC",l0]]]),zf=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",ku]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",X0]],["unispeech",["UniSpeechForSequenceClassification",Tu]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Su]],["wavlm",["WavLMForSequenceClassification",Fu]],["hubert",["HubertForSequenceClassification",Z0]],["audio-spectrogram-transformer",["ASTForAudioClassification",jA]]]),Rs=new Map([["wavlm",["WavLMForXVector",ec]]]),uf=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",bl]],["wavlm",["WavLMForAudioFrameClassification",tc]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",_u]],["pyannote",["PyAnnoteForAudioFrameClassification",vu]]]),ki=new Map([["vitmatte",["VitMatteForImageMatting",w]]]),Ni=new Map([["patchtst",["PatchTSTForPrediction",rd]],["patchtsmixer",["PatchTSMixerForPrediction",ad]]]),Wi=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Xc]]]),Pl=new Map([["dpt",["DPTForDepthEstimation",Zc]],["depth_anything",["DepthAnythingForDepthEstimation",$c]],["glpn",["GLPNForDepthEstimation",L0]],["sapiens",["SapiensForDepthEstimation",eu]],["depth_pro",["DepthProForDepthEstimation",ru]],["metric3d",["Metric3DForDepthEstimation",Q0]],["metric3dv2",["Metric3Dv2ForDepthEstimation",sA]]]),Of=new Map([["sapiens",["SapiensForNormalEstimation",tu]]]),df=new Map([["vitpose",["VitPoseForPoseEstimation",wn]]]),ff=new Map([["clip",["CLIPVisionModelWithProjection",no]],["siglip",["SiglipVisionModel",ul]],["jina_clip",["JinaCLIPVisionModel",Bo]]]),fe=[[sf,f.EncoderOnly],[rl,f.EncoderDecoder],[fd,f.DecoderOnly],[af,f.AutoEncoder],[Ws,f.EncoderOnly],[sl,f.EncoderOnly],[pd,f.Seq2Seq],[gd,f.Seq2Seq],[h0,f.DecoderOnly],[Gf,f.MultiModality],[Pc,f.EncoderOnly],[nf,f.EncoderOnly],[hd,f.Vision2Seq],[Dc,f.ImageTextToText],[of,f.AudioTextToText],[Af,f.EncoderOnly],[e0,f.EncoderOnly],[Fc,f.EncoderOnly],[Gc,f.EncoderOnly],[ki,f.EncoderOnly],[Ni,f.EncoderOnly],[Wi,f.EncoderOnly],[Pl,f.EncoderOnly],[Of,f.EncoderOnly],[df,f.EncoderOnly],[wl,f.EncoderOnly],[Sc,f.EncoderOnly],[lf,f.MaskGeneration],[cf,f.EncoderOnly],[zf,f.EncoderOnly],[Bn,f.Seq2Seq],[Os,f.EncoderOnly],[Rs,f.EncoderOnly],[uf,f.EncoderOnly],[ff,f.EncoderOnly]];for(const[se,we]of fe)for(const[Ue,vt]of se.values())I.set(Ue,we),c.set(vt,Ue),e.set(Ue,vt);const Fe=[["MusicgenForConditionalGeneration",hc,f.Musicgen],["Phi3VForCausalLM",Ti,f.Phi3V],["CLIPTextModelWithProjection",Vn,f.EncoderOnly],["SiglipTextModel",Xa,f.EncoderOnly],["JinaCLIPTextModel",uA,f.EncoderOnly],["ClapTextModelWithProjection",lc,f.EncoderOnly],["ClapAudioModelWithProjection",cc,f.EncoderOnly],["DacEncoderModel",tf,f.EncoderOnly],["DacDecoderModel",Tc,f.EncoderOnly],["MimiEncoderModel",Mc,f.EncoderOnly],["MimiDecoderModel",Ad,f.EncoderOnly],["SnacEncoderModel",dd,f.EncoderOnly],["SnacDecoderModel",rf,f.EncoderOnly]];for(const[se,we,Ue]of Fe)I.set(se,Ue),c.set(we,se),e.set(se,we);const et=new Map([["modnet",e0],["birefnet",e0],["isnet",e0],["ben",e0]]);for(const[se,we]of et.entries())we.set(se,["PreTrainedModel",Se]),I.set(se,f.EncoderOnly),c.set(Se,se),e.set(se,Se);class Gt extends Lr{}Te(Gt,"MODEL_CLASS_MAPPINGS",fe.map(we=>we[0])),Te(Gt,"BASE_IF_FAIL",!0);class er extends Lr{}Te(er,"MODEL_CLASS_MAPPINGS",[Ws]);class $t extends Lr{}Te($t,"MODEL_CLASS_MAPPINGS",[sl]);class cr extends Lr{}Te(cr,"MODEL_CLASS_MAPPINGS",[pd]);class Gr extends Lr{}Te(Gr,"MODEL_CLASS_MAPPINGS",[gd]);class Fr extends Lr{}Te(Fr,"MODEL_CLASS_MAPPINGS",[Bn]);class Er extends Lr{}Te(Er,"MODEL_CLASS_MAPPINGS",[Os]);class Vr extends Lr{}Te(Vr,"MODEL_CLASS_MAPPINGS",[h0]);class Zr extends Lr{}Te(Zr,"MODEL_CLASS_MAPPINGS",[Pc]);class _s extends Lr{}Te(_s,"MODEL_CLASS_MAPPINGS",[nf]);class ka extends Lr{}Te(ka,"MODEL_CLASS_MAPPINGS",[hd]);class Ts extends Lr{}Te(Ts,"MODEL_CLASS_MAPPINGS",[Af]);class js extends Lr{}Te(js,"MODEL_CLASS_MAPPINGS",[e0]);class Us extends Lr{}Te(Us,"MODEL_CLASS_MAPPINGS",[Gc]);class _a extends Lr{}Te(_a,"MODEL_CLASS_MAPPINGS",[Fc]);class nn extends Lr{}Te(nn,"MODEL_CLASS_MAPPINGS",[wl]);class pn extends Lr{}Te(pn,"MODEL_CLASS_MAPPINGS",[Sc]);class Ha extends Lr{}Te(Ha,"MODEL_CLASS_MAPPINGS",[lf]);class ri extends Lr{}Te(ri,"MODEL_CLASS_MAPPINGS",[cf]);class Un extends Lr{}Te(Un,"MODEL_CLASS_MAPPINGS",[zf]);class Hn extends Lr{}Te(Hn,"MODEL_CLASS_MAPPINGS",[Rs]);class Gn extends Lr{}Te(Gn,"MODEL_CLASS_MAPPINGS",[uf]);class $i extends Lr{}Te($i,"MODEL_CLASS_MAPPINGS",[Ff]);class Da extends Lr{}Te(Da,"MODEL_CLASS_MAPPINGS",[ki]);class Ui extends Lr{}Te(Ui,"MODEL_CLASS_MAPPINGS",[Wi]);class Il extends Lr{}Te(Il,"MODEL_CLASS_MAPPINGS",[Pl]);class Dl extends Lr{}Te(Dl,"MODEL_CLASS_MAPPINGS",[Of]);class yl extends Lr{}Te(yl,"MODEL_CLASS_MAPPINGS",[df]);class t0 extends Lr{}Te(t0,"MODEL_CLASS_MAPPINGS",[ff]);class md extends Lr{}Te(md,"MODEL_CLASS_MAPPINGS",[Dc]);class gf extends Lr{}Te(gf,"MODEL_CLASS_MAPPINGS",[of]);class on extends Qe{constructor({logits:we,past_key_values:Ue,encoder_outputs:vt,decoder_attentions:Wt=null,cross_attentions:jt=null}){super(),this.logits=we,this.past_key_values=Ue,this.encoder_outputs=vt,this.decoder_attentions=Wt,this.cross_attentions=jt}}class ss extends Qe{constructor({logits:we,...Ue}){super(),this.logits=we;const vt=Object.values(Ue);vt.length>0&&(this.attentions=vt)}}class eo extends Qe{constructor({logits:we,embeddings:Ue}){super(),this.logits=we,this.embeddings=Ue}}class yn extends Qe{constructor({logits:we}){super(),this.logits=we}}class kn extends Qe{constructor({logits:we}){super(),this.logits=we}}class oi extends Qe{constructor({start_logits:we,end_logits:Ue}){super(),this.start_logits=we,this.end_logits=Ue}}class zA extends Qe{constructor({logits:we}){super(),this.logits=we}}class zc extends Qe{constructor({logits:we,past_key_values:Ue}){super(),this.logits=we,this.past_key_values=Ue}}class m0 extends Qe{constructor({alphas:we}){super(),this.alphas=we}}class bd extends Qe{constructor({waveform:we,spectrogram:Ue}){super(),this.waveform=we,this.spectrogram=Ue}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(i,o,a)=>{a.r(o),a.d(o,{ASTFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js");class h extends u.FeatureExtractor{constructor(y){super(y);const k=this.config.sampling_rate,_=(0,p.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(k/2),k,null,"kaldi",!0);for(let v=0;v<_.length;++v)_[v].push(0);this.mel_filters=_,this.window=(0,p.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(y,k){return(0,p.spectrogram)(y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:k,transpose:!0})}async _call(y){(0,u.validate_audio_inputs)(y,"ASTFeatureExtractor");const k=await this._extract_fbank_features(y,this.config.max_length);if(this.config.do_normalize){const _=this.std*2,v=k.data;for(let M=0;M<v.length;++M)v[M]=(v[M]-this.mean)/_}return{input_values:k.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(i,o,a)=>{a.r(o),a.d(o,{AutoFeatureExtractor:()=>C});var u=a("./src/utils/constants.js"),p=a("./src/utils/hub.js");a("./src/base/feature_extraction_utils.js");var h=a("./src/models/feature_extractors.js");class C{static async from_pretrained(k,_={}){const v=await(0,p.getModelJSON)(k,u.FEATURE_EXTRACTOR_NAME,!0,_),M=v.feature_extractor_type,B=h[M];if(!B)throw new Error(`Unknown feature_extractor_type: '${M}'. Please report this at ${u.GITHUB_ISSUE_URL}.`);return new B(v)}}},"./src/models/auto/image_processing_auto.js":(i,o,a)=>{a.r(o),a.d(o,{AutoImageProcessor:()=>y});var u=a("./src/utils/constants.js"),p=a("./src/utils/hub.js"),h=a("./src/base/image_processors_utils.js"),C=a("./src/models/image_processors.js");class y{static async from_pretrained(_,v={}){const M=await(0,p.getModelJSON)(_,u.IMAGE_PROCESSOR_NAME,!0,v),B=M.image_processor_type??M.feature_extractor_type;let S=C[B];return S||(B!==void 0&&console.warn(`Image processor type '${B}' not found, assuming base ImageProcessor. Please report this at ${u.GITHUB_ISSUE_URL}.`),S=h.ImageProcessor),new S(M)}}},"./src/models/auto/processing_auto.js":(i,o,a)=>{a.r(o),a.d(o,{AutoProcessor:()=>_});var u=a("./src/utils/constants.js"),p=a("./src/utils/hub.js"),h=a("./src/base/processing_utils.js"),C=a("./src/models/processors.js"),y=a("./src/models/image_processors.js"),k=a("./src/models/feature_extractors.js");class _{static async from_pretrained(M,B={}){const S=await(0,p.getModelJSON)(M,u.IMAGE_PROCESSOR_NAME,!0,B),{image_processor_type:N,feature_extractor_type:V,processor_class:Z}=S;if(Z&&C[Z])return C[Z].from_pretrained(M,B);if(!N&&!V)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const O={};if(N){const q=y[N];if(!q)throw new Error(`Unknown image_processor_type: '${N}'.`);O.image_processor=new q(S)}if(V){const q=y[V];if(q)O.image_processor=new q(S);else{const f=k[V];if(!f)throw new Error(`Unknown feature_extractor_type: '${V}'.`);O.feature_extractor=new f(S)}}const Q={};return new h.Processor(Q,O)}}},"./src/models/beit/image_processing_beit.js":(i,o,a)=>{a.r(o),a.d(o,{BeitFeatureExtractor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(i,o,a)=>{a.r(o),a.d(o,{BitImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(i,o,a)=>{a.r(o),a.d(o,{ChineseCLIPFeatureExtractor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(i,o,a)=>{a.r(o),a.d(o,{ClapFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js");class h extends u.FeatureExtractor{constructor(y){super(y),this.mel_filters=(0,p.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,p.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,p.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(y,k,_,v){let M;const B=y.length-k;if(B>0)if(_==="rand_trunc"){const S=Math.floor(Math.random()*(B+1));y=y.subarray(S,S+k),M=await this._extract_fbank_features(y,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${_}" not implemented`);else{if(B<0){let S=new Float64Array(k);if(S.set(y),v==="repeat")for(let N=y.length;N<k;N+=y.length)S.set(y.subarray(0,Math.min(y.length,k-N)),N);else if(v==="repeatpad")for(let N=y.length;N<-B;N+=y.length)S.set(y,N);y=S}if(_==="fusion")throw new Error(`Truncation strategy "${_}" not implemented`);M=await this._extract_fbank_features(y,this.mel_filters_slaney,this.config.nb_max_samples)}return M.unsqueeze_(0)}async _extract_fbank_features(y,k,_=null){return(0,p.spectrogram)(y,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:k,log_mel:"dB",max_num_frames:_,do_pad:!1,transpose:!0})}async _call(y,{max_length:k=null}={}){return(0,u.validate_audio_inputs)(y,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(y,k??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(i,o,a)=>{a.r(o),a.d(o,{CLIPFeatureExtractor:()=>h,CLIPImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/convnext/image_processing_convnext.js":(i,o,a)=>{a.r(o),a.d(o,{ConvNextFeatureExtractor:()=>h,ConvNextImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(y){super(y),this.crop_pct=this.config.crop_pct??224/256}async resize(y){var _;const k=(_=this.size)==null?void 0:_.shortest_edge;if(k===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(k<384){const v=Math.floor(k/this.crop_pct),[M,B]=this.get_resize_output_image_size(y,{shortest_edge:v});y=await y.resize(M,B,{resample:this.resample}),y=await y.center_crop(k,k)}else y=await y.resize(k,k,{resample:this.resample});return y}}class h extends p{}},"./src/models/dac/feature_extraction_dac.js":(i,o,a)=>{a.r(o),a.d(o,{DacFeatureExtractor:()=>p});var u=a("./src/models/encodec/feature_extraction_encodec.js");class p extends u.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(i,o,a)=>{a.r(o),a.d(o,{DeiTFeatureExtractor:()=>h,DeiTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/detr/image_processing_detr.js":(i,o,a)=>{a.r(o),a.d(o,{DetrFeatureExtractor:()=>C,DetrImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(k){const _=await super._call(k),v=[_.pixel_values.dims[0],64,64],M=(0,p.full)(v,1n);return{..._,pixel_mask:M}}post_process_object_detection(...k){return(0,u.post_process_object_detection)(...k)}post_process_panoptic_segmentation(...k){return(0,u.post_process_panoptic_segmentation)(...k)}post_process_instance_segmentation(...k){return(0,u.post_process_instance_segmentation)(...k)}}class C extends h{}},"./src/models/donut/image_processing_donut.js":(i,o,a)=>{a.r(o),a.d(o,{DonutFeatureExtractor:()=>h,DonutImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{pad_image(y,k,_,v={}){const[M,B,S]=k;let N=this.image_mean;Array.isArray(this.image_mean)||(N=new Array(S).fill(N));let V=this.image_std;Array.isArray(V)||(V=new Array(S).fill(N));const Z=N.map((O,Q)=>-O/V[Q]);return super.pad_image(y,k,_,{center:!0,constant_values:Z,...v})}}class h extends p{}},"./src/models/dpt/image_processing_dpt.js":(i,o,a)=>{a.r(o),a.d(o,{DPTFeatureExtractor:()=>h,DPTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/efficientnet/image_processing_efficientnet.js":(i,o,a)=>{a.r(o),a.d(o,{EfficientNetImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(C){super(C),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(y=>y*y))}}},"./src/models/encodec/feature_extraction_encodec.js":(i,o,a)=>{a.r(o),a.d(o,{EncodecFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js");class h extends u.FeatureExtractor{async _call(y){(0,u.validate_audio_inputs)(y,"EncodecFeatureExtractor"),y instanceof Float64Array&&(y=new Float32Array(y));const k=this.config.feature_size;if(y.length%k!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${k}).`);const _=[1,k,y.length/k];return{input_values:new p.Tensor("float32",y,_)}}}},"./src/models/feature_extractors.js":(i,o,a)=>{a.r(o),a.d(o,{ASTFeatureExtractor:()=>u.ASTFeatureExtractor,ClapFeatureExtractor:()=>h.ClapFeatureExtractor,DacFeatureExtractor:()=>C.DacFeatureExtractor,EncodecFeatureExtractor:()=>p.EncodecFeatureExtractor,ImageFeatureExtractor:()=>V.ImageProcessor,MoonshineFeatureExtractor:()=>y.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>k.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>_.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>v.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>M.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>B.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>S.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>N.WhisperFeatureExtractor});var u=a("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),p=a("./src/models/encodec/feature_extraction_encodec.js"),h=a("./src/models/clap/feature_extraction_clap.js"),C=a("./src/models/dac/feature_extraction_dac.js"),y=a("./src/models/moonshine/feature_extraction_moonshine.js"),k=a("./src/models/pyannote/feature_extraction_pyannote.js"),_=a("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),v=a("./src/models/snac/feature_extraction_snac.js"),M=a("./src/models/speecht5/feature_extraction_speecht5.js"),B=a("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),S=a("./src/models/wespeaker/feature_extraction_wespeaker.js"),N=a("./src/models/whisper/feature_extraction_whisper.js"),V=a("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(i,o,a)=>{a.r(o),a.d(o,{Florence2Processor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");class C extends u.Processor{constructor(k,_){super(k,_);const{tasks_answer_post_processing_type:v,task_prompts_without_inputs:M,task_prompts_with_input:B}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(v??{})),this.task_prompts_without_inputs=new Map(Object.entries(M??{})),this.task_prompts_with_input=new Map(Object.entries(B??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(k){typeof k=="string"&&(k=[k]);const _=[];for(const v of k)if(this.task_prompts_without_inputs.has(v))_.push(this.task_prompts_without_inputs.get(v));else{for(const[M,B]of this.task_prompts_with_input)if(v.includes(M)){_.push(B.replaceAll("{input}",v).replaceAll(M,""));break}_.length!==k.length&&_.push(v)}return _}post_process_generation(k,_,v){const M=this.tasks_answer_post_processing_type.get(_)??"pure_text";k=k.replaceAll("<s>","").replaceAll("</s>","");let B;switch(M){case"pure_text":B=k;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const S=M==="ocr"?"quad_boxes":"bboxes",N=k.matchAll(this.regexes[S]),V=[],Z=[];for(const[O,Q,...q]of N)V.push(Q?Q.trim():V.at(-1)??""),Z.push(q.map((f,I)=>(Number(f)+.5)/this.size_per_bin*v[I%2]));B={labels:V,[S]:Z};break;default:throw new Error(`Task "${_}" (of type "${M}") not yet implemented.`)}return{[_]:B}}async _call(k,_=null,v={}){if(!k&&!_)throw new Error("Either text or images must be provided");const M=await this.image_processor(k,v),B=_?this.tokenizer(_,v):{};return{...M,...B}}}Te(C,"tokenizer_class",h.AutoTokenizer),Te(C,"image_processor_class",p.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(i,o,a)=>{a.r(o),a.d(o,{GLPNFeatureExtractor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(i,o,a)=>{a.r(o),a.d(o,{GroundingDinoImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(y){const k=await super._call(y),_=k.pixel_values.dims,v=(0,p.ones)([_[0],_[2],_[3]]);return{...k,pixel_mask:v}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(i,o,a)=>{a.r(o),a.d(o,{GroundingDinoProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js"),C=a("./src/base/image_processors_utils.js");function y(_,v){const B=_.dims.at(-1)-1,S=_.tolist();S.fill(!1,0,1),S.fill(!1,B);const N=v.tolist();return S.map((V,Z)=>V?Z:null).filter(V=>V!==null).map(V=>N[V])}class k extends u.Processor{async _call(v,M,B={}){const S=v?await this.image_processor(v,B):{};return{...M?this.tokenizer(M,B):{},...S}}post_process_grounded_object_detection(v,M,{box_threshold:B=.25,text_threshold:S=.25,target_sizes:N=null}={}){const{logits:V,pred_boxes:Z}=v,O=V.dims[0];if(N!==null&&N.length!==O)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const Q=V.dims.at(1),q=V.sigmoid(),f=q.max(-1).tolist(),I=Z.tolist().map(c=>c.map(P=>(0,C.center_to_corners_format)(P))),e=[];for(let c=0;c<O;++c){const P=N!==null?N[c]:null;P!==null&&(I[c]=I[c].map(ge=>ge.map((ke,Ee)=>ke*P[(Ee+1)%2])));const J=f[c],D=[],j=[],Ie=[];for(let ge=0;ge<Q;++ge){const ke=J[ge];if(ke<=B)continue;const Ee=I[c][ge],Ne=q[c][ge];D.push(ke),Ie.push(Ee);const Xe=y(Ne.gt(S),M[c]);j.push(Xe)}e.push({scores:D,boxes:Ie,labels:this.batch_decode(j)})}return e}}Te(k,"tokenizer_class",h.AutoTokenizer),Te(k,"image_processor_class",p.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(i,o,a)=>{a.r(o),a.d(o,{Idefics3ImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{constructor(y){super(y),this.do_image_splitting=y.do_image_splitting??!0,this.max_image_size=y.max_image_size}get_resize_for_vision_encoder(y,k){let[_,v]=y.dims.slice(-2);const M=v/_;return v>=_?(v=Math.ceil(v/k)*k,_=Math.floor(v/M),_=Math.ceil(_/k)*k):(_=Math.ceil(_/k)*k,v=Math.floor(_*M),v=Math.ceil(v/k)*k),{height:_,width:v}}async _call(y,{do_image_splitting:k=null,return_row_col_info:_=!1}={}){let v;if(!Array.isArray(y))v=[[y]];else{if(y.length===0||!y[0])throw new Error("No images provided.");Array.isArray(y[0])?v=y:v=[y]}let M=[],B=[],S=[];const N=[],V=[];for(const c of v){let P=await Promise.all(c.map(j=>this.preprocess(j)));N.push(...P.map(j=>j.original_size)),V.push(...P.map(j=>j.reshaped_input_size)),P.forEach(j=>j.pixel_values.unsqueeze_(0));const{longest_edge:J}=this.max_image_size;let D;if(k??this.do_image_splitting){let j=new Array(P.length),Ie=new Array(P.length);D=await Promise.all(P.map(async(ge,ke)=>{const Ee=this.get_resize_for_vision_encoder(ge.pixel_values,J),Ne=await(0,p.interpolate_4d)(ge.pixel_values,{size:[Ee.height,Ee.width]}),{frames:Xe,num_splits_h:At,num_splits_w:xe}=await this.split_image(Ne,this.max_image_size);return j[ke]=At,Ie[ke]=xe,(0,p.cat)(Xe,0)})),B.push(j),S.push(Ie)}else{const j=[J,J];D=await Promise.all(P.map(Ie=>(0,p.interpolate_4d)(Ie.pixel_values,{size:j}))),B.push(new Array(P.length).fill(0)),S.push(new Array(P.length).fill(0))}M.push((0,p.cat)(D,0))}const Z=M.length,[O,Q,q,f]=M[0].dims;let I,e;if(Z===1)I=M[0].unsqueeze_(0),e=(0,p.full)([Z,O,q,f],!0);else{const c=Math.max(...M.map(D=>D.dims.at(0)));e=(0,p.full)([Z,c,q,f],!0);const P=e.data,J=c*q*f;for(let D=0;D<Z;++D){const j=M[D].dims[0];if(j<c){M[D]=(0,p.cat)([M[D],(0,p.full)([c-j,Q,q,f],0)],0);const Ie=D*J+j*q*f,ge=(D+1)*J;P.fill(!1,Ie,ge)}}I=(0,p.stack)(M,0)}return{pixel_values:I,pixel_attention_mask:e,original_sizes:N,reshaped_input_sizes:V,..._?{rows:B,cols:S}:{}}}async split_image(y,{longest_edge:k}){const _=k,v=k,M=[],[B,S]=y.dims.slice(-2);let N=0,V=0;if(B>_||S>v){N=Math.ceil(B/_),V=Math.ceil(S/v);const Z=Math.ceil(B/N),O=Math.ceil(S/V);for(let f=0;f<N;++f)for(let I=0;I<V;++I){let e,c,P,J;f===N-1?(c=B-Z,J=B):(c=f*Z,J=(f+1)*Z),I===V-1?(e=S-O,P=S):(e=I*O,P=(I+1)*O);const D=[c,e],j=[J,P],Ie=await(0,p.slice)(y,D,j,[2,3]);M.push(Ie)}const Q=_,q=v;(B!==Q||S!==q)&&(y=await(0,p.interpolate_4d)(y,{size:[Q,q]}))}return M.push(y),{frames:M,num_splits_h:N,num_splits_w:V}}}},"./src/models/idefics3/processing_idefics3.js":(i,o,a)=>{a.r(o),a.d(o,{Idefics3Processor:()=>v});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");a("./src/utils/image.js");var C=a("./src/utils/core.js");function y(M,B,S,N,V,Z){let O="";for(let Q=0;Q<B;++Q){for(let q=0;q<S;++q)O+=N+`<row_${Q+1}_col_${q+1}>`+V.repeat(M);O+=`
`}return O+=`
${N}${Z}`+V.repeat(M)+`${N}`,O}function k(M,B,S,N){return`${B}${N}`+S.repeat(M)+`${B}`}function _(M,B,S,N,V,Z){return M===0&&B===0?k(S,N,V,Z):y(S,M,B,N,V,Z)}class v extends u.Processor{constructor(){super(...arguments);Te(this,"fake_image_token","<fake_token_around_image>");Te(this,"image_token","<image>");Te(this,"global_img_token","<global-img>")}async _call(S,N=null,V={}){V.return_row_col_info??(V.return_row_col_info=!0);let Z;N&&(Z=await this.image_processor(N,V)),Array.isArray(S)||(S=[S]);const O=Z.rows??[new Array(S.length).fill(0)],Q=Z.cols??[new Array(S.length).fill(0)],q=this.config.image_seq_len,f=[],I=[];for(let c=0;c<S.length;++c){const P=S[c],J=O[c],D=Q[c];f.push((0,C.count)(P,this.image_token));const j=J.map((ke,Ee)=>_(ke,D[Ee],q,this.fake_image_token,this.image_token,this.global_img_token)),Ie=P.split(this.image_token);if(Ie.length===0)throw new Error("The image token should be present in the text.");let ge=Ie[0];for(let ke=0;ke<j.length;++ke)ge+=j[ke]+Ie[ke+1];I.push(ge)}return{...this.tokenizer(I),...Z}}}Te(v,"image_processor_class",p.AutoImageProcessor),Te(v,"tokenizer_class",h.AutoTokenizer),Te(v,"uses_processor_config",!0)},"./src/models/image_processors.js":(i,o,a)=>{a.r(o),a.d(o,{BeitFeatureExtractor:()=>u.BeitFeatureExtractor,BitImageProcessor:()=>p.BitImageProcessor,CLIPFeatureExtractor:()=>C.CLIPFeatureExtractor,CLIPImageProcessor:()=>C.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>h.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>y.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>y.ConvNextImageProcessor,DPTFeatureExtractor:()=>M.DPTFeatureExtractor,DPTImageProcessor:()=>M.DPTImageProcessor,DeiTFeatureExtractor:()=>k.DeiTFeatureExtractor,DeiTImageProcessor:()=>k.DeiTImageProcessor,DetrFeatureExtractor:()=>_.DetrFeatureExtractor,DetrImageProcessor:()=>_.DetrImageProcessor,DonutFeatureExtractor:()=>v.DonutFeatureExtractor,DonutImageProcessor:()=>v.DonutImageProcessor,EfficientNetImageProcessor:()=>B.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>S.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>N.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>V.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>O.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>Q.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>q.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>I.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>I.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>e.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>e.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>c.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>c.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>J.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>J.MobileViTImageProcessor,NougatImageProcessor:()=>D.NougatImageProcessor,OwlViTFeatureExtractor:()=>Ie.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Ie.OwlViTImageProcessor,Owlv2ImageProcessor:()=>j.Owlv2ImageProcessor,Phi3VImageProcessor:()=>ge.Phi3VImageProcessor,PvtImageProcessor:()=>ke.PvtImageProcessor,Qwen2VLImageProcessor:()=>Ee.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Ne.RTDetrImageProcessor,SamImageProcessor:()=>Xe.SamImageProcessor,SegformerFeatureExtractor:()=>At.SegformerFeatureExtractor,SegformerImageProcessor:()=>At.SegformerImageProcessor,SiglipImageProcessor:()=>xe.SiglipImageProcessor,SmolVLMImageProcessor:()=>ye.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>ue.Swin2SRImageProcessor,VLMImageProcessor:()=>Z.VLMImageProcessor,ViTFeatureExtractor:()=>ie.ViTFeatureExtractor,ViTImageProcessor:()=>ie.ViTImageProcessor,VitMatteImageProcessor:()=>be.VitMatteImageProcessor,VitPoseImageProcessor:()=>Ye.VitPoseImageProcessor,YolosFeatureExtractor:()=>Le.YolosFeatureExtractor,YolosImageProcessor:()=>Le.YolosImageProcessor});var u=a("./src/models/beit/image_processing_beit.js"),p=a("./src/models/bit/image_processing_bit.js"),h=a("./src/models/chinese_clip/image_processing_chinese_clip.js"),C=a("./src/models/clip/image_processing_clip.js"),y=a("./src/models/convnext/image_processing_convnext.js"),k=a("./src/models/deit/image_processing_deit.js"),_=a("./src/models/detr/image_processing_detr.js"),v=a("./src/models/donut/image_processing_donut.js"),M=a("./src/models/dpt/image_processing_dpt.js"),B=a("./src/models/efficientnet/image_processing_efficientnet.js"),S=a("./src/models/glpn/image_processing_glpn.js"),N=a("./src/models/grounding_dino/image_processing_grounding_dino.js"),V=a("./src/models/idefics3/image_processing_idefics3.js"),Z=a("./src/models/janus/image_processing_janus.js"),O=a("./src/models/jina_clip/image_processing_jina_clip.js"),Q=a("./src/models/llava_onevision/image_processing_llava_onevision.js"),q=a("./src/models/mask2former/image_processing_mask2former.js"),f=a("./src/models/maskformer/image_processing_maskformer.js"),I=a("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),e=a("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),c=a("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=a("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),J=a("./src/models/mobilevit/image_processing_mobilevit.js"),D=a("./src/models/nougat/image_processing_nougat.js"),j=a("./src/models/owlv2/image_processing_owlv2.js"),Ie=a("./src/models/owlvit/image_processing_owlvit.js"),ge=a("./src/models/phi3_v/image_processing_phi3_v.js"),ke=a("./src/models/pvt/image_processing_pvt.js"),Ee=a("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Ne=a("./src/models/rt_detr/image_processing_rt_detr.js"),Xe=a("./src/models/sam/image_processing_sam.js"),At=a("./src/models/segformer/image_processing_segformer.js"),xe=a("./src/models/siglip/image_processing_siglip.js"),ye=a("./src/models/smolvlm/image_processing_smolvlm.js"),ue=a("./src/models/swin2sr/image_processing_swin2sr.js"),ie=a("./src/models/vit/image_processing_vit.js"),be=a("./src/models/vitmatte/image_processing_vitmatte.js"),Ye=a("./src/models/vitpose/image_processing_vitpose.js"),Le=a("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(i,o,a)=>{a.r(o),a.d(o,{VLMImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(C){super({do_pad:!0,pad_size:{width:C.image_size,height:C.image_size},...C}),this.constant_values=this.config.background_color.map(y=>y*this.rescale_factor)}pad_image(C,y,k,_){return super.pad_image(C,y,k,{constant_values:this.constant_values,center:!0,..._})}}},"./src/models/janus/processing_janus.js":(i,o,a)=>{a.r(o),a.d(o,{VLChatProcessor:()=>_});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js"),C=a("./src/utils/core.js"),y=a("./src/utils/tensor.js"),k=a("./src/utils/image.js");class _ extends u.Processor{constructor(M,B){super(M,B),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(M,{images:B=null,chat_template:S="default"}={}){B?Array.isArray(B)||(B=[B]):B=await Promise.all(M.filter(D=>D.images).flatMap(D=>D.images).map(D=>k.RawImage.read(D)));const N=this.tokenizer,V=N.apply_chat_template(M,{tokenize:!1,add_generation_prompt:!0,chat_template:S}),Z=D=>N.encode(D,{add_special_tokens:!1}),O=V.split(this.image_tag),Q=O.length-1;if(B.length!==Q)throw new Error(`Number of images provided (${B.length}) does not match number of "${this.image_tag}" image tags (${Q})`);const[q,f,I]=N.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let e=Z(O[0]),c=new Array(e.length).fill(!1);for(let D=1;D<O.length;++D){const j=new Array(this.num_image_tokens).fill(q),Ie=Z(O[D]);e=(0,C.mergeArrays)(e,[f],j,[I],Ie);const ge=new Array(this.num_image_tokens).fill(!0);c=(0,C.mergeArrays)(c,[!1],ge,[!1],new Array(Ie.length).fill(!1))}const P=[1,e.length],J={input_ids:new y.Tensor("int64",e,P),attention_mask:new y.Tensor("int64",new Array(e.length).fill(1),P),images_seq_mask:new y.Tensor("bool",c,P),images_emb_mask:new y.Tensor("bool",new Array(Q*this.num_image_tokens).fill(!0),[1,Q,this.num_image_tokens])};if(B&&B.length>0){const D=await this.image_processor(B);return D.pixel_values.unsqueeze_(0),{...J,...D}}return J}}Te(_,"image_processor_class",p.AutoImageProcessor),Te(_,"tokenizer_class",h.AutoTokenizer),Te(_,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(i,o,a)=>{a.r(o),a.d(o,{JinaCLIPImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{constructor(C){const{resize_mode:y,fill_color:k,interpolation:_,size:v,...M}=C,B=y==="squash"?{width:v,height:v}:y==="shortest"?{shortest_edge:v}:{longest_edge:v},S=_==="bicubic"?3:2;super({...M,size:B,resample:S,do_center_crop:!0,crop_size:v,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(i,o,a)=>{a.r(o),a.d(o,{JinaCLIPProcessor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");class C extends u.Processor{async _call(k=null,_=null,v={}){if(!k&&!_)throw new Error("Either text or images must be provided");const M=k?this.tokenizer(k,v):{},B=_?await this.image_processor(_,v):{};return{...M,...B}}}Te(C,"tokenizer_class",h.AutoTokenizer),Te(C,"image_processor_class",p.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(i,o,a)=>{a.r(o),a.d(o,{LlavaOnevisionImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(i,o,a)=>{a.r(o),a.d(o,{Mask2FormerImageProcessor:()=>p});var u=a("./src/models/maskformer/image_processing_maskformer.js");class p extends u.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(i,o,a)=>{a.r(o),a.d(o,{MaskFormerFeatureExtractor:()=>h,MaskFormerImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_panoptic_segmentation(...y){return(0,u.post_process_panoptic_segmentation)(...y)}post_process_instance_segmentation(...y){return(0,u.post_process_instance_segmentation)(...y)}}class h extends p{}},"./src/models/mgp_str/processing_mgp_str.js":(i,o,a)=>{a.r(o),a.d(o,{MgpstrProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js"),C=a("./src/utils/maths.js");const y={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class k extends u.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(v,M){if(!y.hasOwnProperty(M))throw new Error(`Format ${M} is not supported.`);const[B,S]=y[M],N=this[B].bind(this),[V,Z]=v.dims,O=[],Q=[],q=v.tolist();for(let I=0;I<V;++I){const e=q[I],c=[],P=[];for(let D=1;D<Z;++D){const[j,Ie]=(0,C.max)((0,C.softmax)(e[D]));if(P.push(j),Ie==S)break;c.push(Ie)}const J=P.length>0?P.reduce((D,j)=>D*j,1):0;Q.push(c),O.push(J)}return[N(Q),O]}char_decode(v){return this.char_tokenizer.batch_decode(v).map(M=>M.replaceAll(" ",""))}bpe_decode(v){return this.bpe_tokenizer.batch_decode(v)}wp_decode(v){return this.wp_tokenizer.batch_decode(v).map(M=>M.replaceAll(" ",""))}batch_decode([v,M,B]){const[S,N]=this._decode_helper(v,"char"),[V,Z]=this._decode_helper(M,"bpe"),[O,Q]=this._decode_helper(B,"wp"),q=[],f=[];for(let I=0;I<S.length;++I){const[e,c]=(0,C.max)([N[I],Z[I],Q[I]]);q.push([S[I],V[I],O[I]][c]),f.push(e)}return{generated_text:q,scores:f,char_preds:S,bpe_preds:V,wp_preds:O}}static async from_pretrained(...v){const M=await super.from_pretrained(...v),B=await h.AutoTokenizer.from_pretrained("Xenova/gpt2"),S=await h.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return M.components={image_processor:M.image_processor,char_tokenizer:M.tokenizer,bpe_tokenizer:B,wp_tokenizer:S},M}async _call(v,M=null){const B=await this.image_processor(v);return M&&(B.labels=this.tokenizer(M).input_ids),B}}Te(k,"tokenizer_class",h.AutoTokenizer),Te(k,"image_processor_class",p.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV1FeatureExtractor:()=>h,MobileNetV1ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV2FeatureExtractor:()=>h,MobileNetV2ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV3FeatureExtractor:()=>h,MobileNetV3ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(i,o,a)=>{a.r(o),a.d(o,{MobileNetV4FeatureExtractor:()=>h,MobileNetV4ImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/mobilevit/image_processing_mobilevit.js":(i,o,a)=>{a.r(o),a.d(o,{MobileViTFeatureExtractor:()=>h,MobileViTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/moonshine/feature_extraction_moonshine.js":(i,o,a)=>{a.r(o),a.d(o,{MoonshineFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js");class h extends u.FeatureExtractor{async _call(y){(0,u.validate_audio_inputs)(y,"MoonshineFeatureExtractor"),y instanceof Float64Array&&(y=new Float32Array(y));const k=[1,y.length];return{input_values:new p.Tensor("float32",y,k)}}}},"./src/models/moonshine/processing_moonshine.js":(i,o,a)=>{a.r(o),a.d(o,{MoonshineProcessor:()=>C});var u=a("./src/models/auto/feature_extraction_auto.js"),p=a("./src/tokenizers.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",u.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(i,o,a)=>{a.r(o),a.d(o,{NougatImageProcessor:()=>p});var u=a("./src/models/donut/image_processing_donut.js");class p extends u.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(i,o,a)=>{a.r(o),a.d(o,{Owlv2ImageProcessor:()=>p});var u=a("./src/models/owlvit/image_processing_owlvit.js");class p extends u.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(i,o,a)=>{a.r(o),a.d(o,{OwlViTFeatureExtractor:()=>h,OwlViTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_object_detection(...y){return(0,u.post_process_object_detection)(...y)}}class h extends p{}},"./src/models/owlvit/processing_owlvit.js":(i,o,a)=>{a.r(o),a.d(o,{OwlViTProcessor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");class C extends u.Processor{}Te(C,"tokenizer_class",h.AutoTokenizer),Te(C,"image_processor_class",p.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(i,o,a)=>{a.r(o),a.d(o,{PaliGemmaProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");const C="<image>";function y(_,v,M,B,S){return`${B.repeat(M*S)}${v}${_}
`}class k extends u.Processor{async _call(v,M=null,B={}){M||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),M=""),Array.isArray(v)||(v=[v]),Array.isArray(M)||(M=[M]);const S=this.tokenizer.bos_token,N=this.image_processor.config.image_seq_length;let V;M.some(Q=>Q.includes(C))?V=M.map(Q=>{const q=Q.replaceAll(C,C.repeat(N)),f=q.lastIndexOf(C),I=f===-1?0:f+C.length;return q.slice(0,I)+S+q.slice(I)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),V=M.map(Q=>y(Q,S,N,C,v.length)));const Z=this.tokenizer(V,B);return{...await this.image_processor(v,B),...Z}}}Te(k,"tokenizer_class",h.AutoTokenizer),Te(k,"image_processor_class",p.AutoImageProcessor),Te(k,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(i,o,a)=>{a.r(o),a.d(o,{Phi3VImageProcessor:()=>v});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");const h=336,C=[2,3],{ceil:y,floor:k,sqrt:_}=Math;class v extends u.ImageProcessor{constructor(B){super({...B,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=B.num_crops}calc_num_image_tokens_from_image_size(B,S){const{num_img_tokens:N}=this.config;return k((k(S/h)*k(B/h)+1)*N+1+(k(S/h)+1)*_(N))}get_resize_output_image_size(B,S){const N=this._num_crops,[V,Z]=B.size;let O=V/Z,Q=1;for(;Q*Math.ceil(Q/O)<=N;)Q+=1;Q-=1;const q=Math.floor(Q*336),f=Math.floor(q/O);return[q,f]}pad_image(B,S,N,V={}){const[Z,O]=S,Q=h*y(Z/h),q=h*y(O/h),f=[1,1,1].map((I,e)=>(I-this.image_mean[e])/this.image_std[e]);return super.pad_image(B,S,{width:q,height:Q},{center:!0,constant_values:f,...V})}async _call(B,{num_crops:S=null}={}){if(this._num_crops=S??(S=this.config.num_crops),S<4||_(S)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(B)||(B=[B]);const N=B.length,V=await Promise.all(B.map(c=>this.preprocess(c))),Z=V.map(c=>c.original_size),O=V.map(c=>c.reshaped_input_size),Q=[];for(const{pixel_values:c}of V){c.unsqueeze_(0);const[P,J]=c.dims.slice(-2),D=await(0,p.interpolate_4d)(c,{size:[h,h],mode:"bicubic"});if(S>0){const j=[],Ie=_(S),ge=k(J/Ie),ke=k(P/Ie);for(let Ne=0;Ne<Ie;++Ne)for(let Xe=0;Xe<Ie;++Xe){let At,xe,ye,ue;Ne===Ie-1?(xe=P-ke,ue=P):(xe=Ne*ke,ue=(Ne+1)*ke),Xe===Ie-1?(At=J-ge,ye=J):(At=Xe*ge,ye=(Xe+1)*ge);const ie=[xe,At],be=[ue,ye],Ye=await(0,p.slice)(c,ie,be,C);j.push(Ye)}const Ee=await(0,p.interpolate_4d)((0,p.cat)(j,0),{size:[h,h],mode:"bicubic"});Q.push((0,p.cat)([D,Ee],0))}else Q.push(D)}const q=(0,p.stack)(Q,0),f=O.map(c=>c.map(P=>h*y(P/h))),I=new p.Tensor("int64",f.flat(),[N,2]),e=f.map(([c,P])=>this.calc_num_image_tokens_from_image_size(P,c));return{pixel_values:q,original_sizes:Z,reshaped_input_sizes:O,image_sizes:I,num_img_tokens:e}}}},"./src/models/phi3_v/processing_phi3_v.js":(i,o,a)=>{a.r(o),a.d(o,{Phi3VProcessor:()=>k});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");a("./src/utils/image.js");const C="<|image|>",y=/<\|image_\d+\|>/g;class k extends u.Processor{async _call(v,M=null,{padding:B=!0,truncation:S=!0,num_crops:N=null}={}){Array.isArray(v)||(v=[v]);let V,Z;if(M){Z=await this.image_processor(M,{num_crops:N});const{num_img_tokens:O}=Z,Q=v.map((f,I)=>f.split(y).join(C.repeat(O[I])));V=this.tokenizer(Q,{padding:B,truncation:S});const q=this.tokenizer.model.convert_tokens_to_ids([C])[0];V.input_ids.map_(f=>f==q?-f:f)}else V=this.tokenizer(v);return{...V,...Z}}}Te(k,"image_processor_class",p.AutoImageProcessor),Te(k,"tokenizer_class",h.AutoTokenizer)},"./src/models/processors.js":(i,o,a)=>{a.r(o),a.d(o,{Florence2Processor:()=>u.Florence2Processor,GroundingDinoProcessor:()=>p.GroundingDinoProcessor,Idefics3Processor:()=>h.Idefics3Processor,JinaCLIPProcessor:()=>y.JinaCLIPProcessor,MgpstrProcessor:()=>k.MgpstrProcessor,MoonshineProcessor:()=>_.MoonshineProcessor,OwlViTProcessor:()=>v.OwlViTProcessor,PaliGemmaProcessor:()=>B.PaliGemmaProcessor,Phi3VProcessor:()=>M.Phi3VProcessor,PyAnnoteProcessor:()=>S.PyAnnoteProcessor,Qwen2VLProcessor:()=>N.Qwen2VLProcessor,SamProcessor:()=>V.SamProcessor,SmolVLMProcessor:()=>Z.SmolVLMProcessor,SpeechT5Processor:()=>O.SpeechT5Processor,UltravoxProcessor:()=>Q.UltravoxProcessor,VLChatProcessor:()=>C.VLChatProcessor,Wav2Vec2Processor:()=>q.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>f.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>I.WhisperProcessor});var u=a("./src/models/florence2/processing_florence2.js"),p=a("./src/models/grounding_dino/processing_grounding_dino.js"),h=a("./src/models/idefics3/processing_idefics3.js"),C=a("./src/models/janus/processing_janus.js"),y=a("./src/models/jina_clip/processing_jina_clip.js"),k=a("./src/models/mgp_str/processing_mgp_str.js"),_=a("./src/models/moonshine/processing_moonshine.js"),v=a("./src/models/owlvit/processing_owlvit.js"),M=a("./src/models/phi3_v/processing_phi3_v.js"),B=a("./src/models/paligemma/processing_paligemma.js"),S=a("./src/models/pyannote/processing_pyannote.js"),N=a("./src/models/qwen2_vl/processing_qwen2_vl.js"),V=a("./src/models/sam/processing_sam.js"),Z=a("./src/models/smolvlm/processing_smolvlm.js"),O=a("./src/models/speecht5/processing_speecht5.js"),Q=a("./src/models/ultravox/processing_ultravox.js"),q=a("./src/models/wav2vec2/processing_wav2vec2.js"),f=a("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),I=a("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(i,o,a)=>{a.r(o),a.d(o,{PvtImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(i,o,a)=>{a.r(o),a.d(o,{PyAnnoteFeatureExtractor:()=>C});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/maths.js");class C extends u.FeatureExtractor{async _call(k){(0,u.validate_audio_inputs)(k,"PyAnnoteFeatureExtractor"),k instanceof Float64Array&&(k=new Float32Array(k));const _=[1,1,k.length];return{input_values:new p.Tensor("float32",k,_)}}samples_to_frames(k){return(k-this.config.offset)/this.config.step}post_process_speaker_diarization(k,_){const v=_/this.samples_to_frames(_)/this.config.sampling_rate,M=[];for(const B of k.tolist()){const S=[];let N=-1;for(let V=0;V<B.length;++V){const Z=(0,h.softmax)(B[V]),[O,Q]=(0,h.max)(Z),[q,f]=[V,V+1];Q!==N?(N=Q,S.push({id:Q,start:q,end:f,score:O})):(S.at(-1).end=f,S.at(-1).score+=O)}M.push(S.map(({id:V,start:Z,end:O,score:Q})=>({id:V,start:Z*v,end:O*v,confidence:Q/(O-Z)})))}return M}}},"./src/models/pyannote/processing_pyannote.js":(i,o,a)=>{a.r(o),a.d(o,{PyAnnoteProcessor:()=>h});var u=a("./src/base/processing_utils.js"),p=a("./src/models/pyannote/feature_extraction_pyannote.js");class h extends u.Processor{async _call(y){return await this.feature_extractor(y)}post_process_speaker_diarization(...y){return this.feature_extractor.post_process_speaker_diarization(...y)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Te(h,"feature_extractor_class",p.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(i,o,a)=>{a.r(o),a.d(o,{Qwen2VLImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(y,...k){const{pixel_values:_,original_sizes:v,reshaped_input_sizes:M}=await super._call(y,...k);let B=_;const{temporal_patch_size:S,merge_size:N,patch_size:V}=this.config;B.dims[0]===1&&(B=(0,p.cat)(Array.from({length:S},()=>B),0));const Z=B.dims[0]/S,O=B.dims[1],Q=Math.floor(B.dims[2]/V),q=Math.floor(B.dims[3]/V),f=B.view(Z,S,O,Math.floor(Q/N),N,V,Math.floor(q/N),N,V).permute(0,3,6,4,7,2,1,5,8).view(Z*Q*q,O*S*V*V),I=new p.Tensor("int64",[Z,Q,q],[1,3]);return{pixel_values:f,image_grid_thw:I,original_sizes:v,reshaped_input_sizes:M}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(i,o,a)=>{a.r(o),a.d(o,{Qwen2VLProcessor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js"),h=a("./src/tokenizers.js");a("./src/utils/image.js");class C extends u.Processor{async _call(k,_=null,...v){Array.isArray(k)||(k=[k]);let M,B;if(_&&(M=await this.image_processor(_),B=M.image_grid_thw),B){let N=this.image_processor.config.merge_size**2,V=0;const Z=B.tolist();k=k.map(O=>{for(;O.includes("<|image_pad|>");){const Q=Number(Z[V++].reduce((q,f)=>q*f,1n));O=O.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(Q/N)))}return O.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(k),...M}}}Te(C,"image_processor_class",p.AutoImageProcessor),Te(C,"tokenizer_class",h.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(i,o,a)=>{a.r(o),a.d(o,{RTDetrImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_object_detection(...C){return(0,u.post_process_object_detection)(...C)}}},"./src/models/sam/image_processing_sam.js":(i,o,a)=>{a.r(o),a.d(o,{SamImageProcessor:()=>C});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/core.js"),h=a("./src/utils/tensor.js");class C extends u.ImageProcessor{reshape_input_points(k,_,v,M=!1){k=structuredClone(k);let B=(0,p.calculateDimensions)(k);if(B.length===3)M||(B=[1,...B]),k=[k];else if(B.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let S=0;S<k.length;++S){let N=_[S],V=v[S],Z=[V[0]/N[0],V[1]/N[1]];for(let O=0;O<k[S].length;++O)for(let Q=0;Q<k[S][O].length;++Q)for(let q=0;q<k[S][O][Q].length;++q)k[S][O][Q][q]*=Z[q%2]}return new h.Tensor("float32",Float32Array.from(k.flat(1/0)),B)}add_input_labels(k,_){let v=(0,p.calculateDimensions)(k);if(v.length===2)v=[1,...v],k=[k];else if(v.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(v.some((M,B)=>M!==_.dims[B]))throw Error(`The first ${v.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new h.Tensor("int64",k.flat(1/0).map(BigInt),v)}async _call(k,{input_points:_=null,input_labels:v=null,input_boxes:M=null}={}){const B=await super._call(k);if(_&&(B.input_points=this.reshape_input_points(_,B.original_sizes,B.reshaped_input_sizes)),v){if(!B.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");B.input_labels=this.add_input_labels(v,B.input_points)}return M&&(B.input_boxes=this.reshape_input_points(M,B.original_sizes,B.reshaped_input_sizes,!0)),B}async post_process_masks(k,_,v,{mask_threshold:M=0,binarize:B=!0,pad_size:S=null}={}){const N=[];S=S??this.pad_size;const V=[S.height,S.width];for(let Z=0;Z<_.length;++Z){const O=_[Z],Q=v[Z];let q=await(0,h.interpolate_4d)(k[Z],{mode:"bilinear",size:V});if(q=q.slice(null,null,[0,Q[0]],[0,Q[1]]),q=await(0,h.interpolate_4d)(q,{mode:"bilinear",size:O}),B){const f=q.data,I=new Uint8Array(f.length);for(let e=0;e<f.length;++e)f[e]>M&&(I[e]=1);q=new h.Tensor("bool",I,q.dims)}N.push(q)}return N}generate_crop_boxes(k,_,{crop_n_layers:v=0,overlap_ratio:M=512/1500,points_per_crop:B=32,crop_n_points_downscale_factor:S=1}={}){}}},"./src/models/sam/processing_sam.js":(i,o,a)=>{a.r(o),a.d(o,{SamProcessor:()=>h});var u=a("./src/base/processing_utils.js"),p=a("./src/models/auto/image_processing_auto.js");class h extends u.Processor{async _call(...y){return await this.image_processor(...y)}post_process_masks(...y){return this.image_processor.post_process_masks(...y)}reshape_input_points(...y){return this.image_processor.reshape_input_points(...y)}}Te(h,"image_processor_class",p.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(i,o,a)=>{a.r(o),a.d(o,{SeamlessM4TFeatureExtractor:()=>C});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js"),h=a("./src/utils/audio.js");class C extends u.FeatureExtractor{constructor(k){super(k);const _=this.config.sampling_rate,v=(0,h.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(_/2),_,null,"kaldi",!0);for(let M=0;M<v.length;++M)v[M].push(0);this.mel_filters=v,this.window=(0,h.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(k,_){return k=k.map(v=>v*32768),(0,h.spectrogram)(k,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:_,transpose:!0})}async _call(k,{padding:_=!0,pad_to_multiple_of:v=2,do_normalize_per_mel_bins:M=!0,return_attention_mask:B=!0}={}){(0,u.validate_audio_inputs)(k,"SeamlessM4TFeatureExtractor");let S=await this._extract_fbank_features(k,this.config.max_length);if(M){const[I,e]=S.dims,c=S.data;for(let P=0;P<e;++P){let J=0;for(let ge=0;ge<I;++ge)J+=c[ge*e+P];const D=J/I;let j=0;for(let ge=0;ge<I;++ge)j+=(c[ge*e+P]-D)**2;j/=I-1;const Ie=Math.sqrt(j+1e-7);for(let ge=0;ge<I;++ge){const ke=ge*e+P;c[ke]=(c[ke]-D)/Ie}}}let N;if(_){const[I,e]=S.dims,c=S.data,P=I%v;if(P>0){const J=new Float32Array(e*(I+P));J.set(c),J.fill(this.config.padding_value,c.length);const D=I+P;S=new p.Tensor(S.type,J,[D,e]),B&&(N=new p.Tensor("int64",new BigInt64Array(D),[1,D]),N.data.fill(1n,0,I))}}const[V,Z]=S.dims,O=this.config.stride;if(V%O!==0)throw new Error(`The number of frames (${V}) must be a multiple of the stride (${O}).`);const q=S.view(1,Math.floor(V/O),Z*O),f={input_features:q};if(B){const I=q.dims[1],e=new BigInt64Array(I);if(N){const c=N.data;for(let P=1,J=0;P<V;P+=O,++J)e[J]=c[P]}else e.fill(1n);f.attention_mask=new p.Tensor("int64",e,[1,I])}return f}}},"./src/models/segformer/image_processing_segformer.js":(i,o,a)=>{a.r(o),a.d(o,{SegformerFeatureExtractor:()=>h,SegformerImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_semantic_segmentation(...y){return(0,u.post_process_semantic_segmentation)(...y)}}class h extends p{}},"./src/models/siglip/image_processing_siglip.js":(i,o,a)=>{a.r(o),a.d(o,{SiglipImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(i,o,a)=>{a.r(o),a.d(o,{SmolVLMImageProcessor:()=>u.Idefics3ImageProcessor});var u=a("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(i,o,a)=>{a.r(o),a.d(o,{SmolVLMProcessor:()=>u.Idefics3Processor});var u=a("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(i,o,a)=>{a.r(o),a.d(o,{SnacFeatureExtractor:()=>p});var u=a("./src/models/dac/feature_extraction_dac.js");class p extends u.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(i,o,a)=>{a.r(o),a.d(o,{SpeechT5FeatureExtractor:()=>p});var u=a("./src/base/feature_extraction_utils.js");class p extends u.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(i,o,a)=>{a.r(o),a.d(o,{SpeechT5Processor:()=>C});var u=a("./src/base/processing_utils.js"),p=a("./src/tokenizers.js"),h=a("./src/models/auto/feature_extraction_auto.js");class C extends u.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",h.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(i,o,a)=>{a.r(o),a.d(o,{Swin2SRImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{pad_image(C,y,k,_={}){const[v,M,B]=y;return super.pad_image(C,y,{width:M+(k-M%k)%k,height:v+(k-v%k)%k},{mode:"symmetric",center:!1,constant_values:-1,..._})}}},"./src/models/ultravox/processing_ultravox.js":(i,o,a)=>{a.r(o),a.d(o,{UltravoxProcessor:()=>C});var u=a("./src/models/auto/feature_extraction_auto.js"),p=a("./src/tokenizers.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k,_=null,v={}){if(Array.isArray(k))throw new Error("Batched inputs are not supported yet.");let M={};if(_){const S=_.length,{input_features:N}=await this.feature_extractor(_,{...v,max_length:S}),V=Math.round(S/this.config.encoder_ds_factor+1e-4),Z=1+Math.ceil(V/this.config.stack_factor);M.audio_token_len=[Z],M.audio_values=N;const O=this.config.audio_placeholder;if(!k.includes(O))throw new Error(`The input text does not contain the image token ${O}.`);k=k.replaceAll(O,O.repeat(Z))}return{...this.tokenizer(k,{add_special_tokens:!1,...v}),...M}}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",u.AutoFeatureExtractor),Te(C,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(i,o,a)=>{a.r(o),a.d(o,{ViTFeatureExtractor:()=>h,ViTImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{}class h extends p{}},"./src/models/vitmatte/image_processing_vitmatte.js":(i,o,a)=>{a.r(o),a.d(o,{VitMatteImageProcessor:()=>h});var u=a("./src/base/image_processors_utils.js"),p=a("./src/utils/tensor.js");class h extends u.ImageProcessor{async _call(y,k){Array.isArray(y)||(y=[y]),Array.isArray(k)||(k=[k]);const _=await Promise.all(y.map(B=>this.preprocess(B))),v=await Promise.all(k.map(B=>this.preprocess(B,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,p.stack)(_.map((B,S)=>(0,p.cat)([B.pixel_values,v[S].pixel_values],0)),0),original_sizes:_.map(B=>B.original_size),reshaped_input_sizes:_.map(B=>B.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(i,o,a)=>{a.r(o),a.d(o,{VitPoseImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_pose_estimation(C,y,{threshold:k=null}={}){const _=C.tolist(),[v,M,B,S]=C.dims,N=[];for(let V=0;V<v;++V){const Z=_[V],O=y[V],Q=[];for(let q=0;q<O.length;++q){const f=O[q],I=[],e=[],c=[],P=f.at(-2)/S,J=f.at(-1)/B;for(let D=0;D<Z.length;++D){let[j,Ie]=[0,0],ge=0,ke=-1/0;const Ee=Z[D];for(let Xe=0;Xe<Ee.length;++Xe){const At=Ee[Xe];for(let xe=0;xe<At.length;++xe){const ye=At[xe];ge+=ye,ke=Math.max(ke,ye),j+=(xe+.5)*ye,Ie+=Xe*ye}}if(k!=null&&ke<k)continue;const Ne=[P*j/ge,J*Ie/ge];I.push(Ne),c.push(D),e.push(ke)}Q.push({bbox:f,scores:e,labels:c,keypoints:I})}N.push(Q)}return N}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(i,o,a)=>{a.r(o),a.d(o,{Wav2Vec2FeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js"),p=a("./src/utils/tensor.js");class h extends u.FeatureExtractor{_zero_mean_unit_var_norm(y){const _=y.reduce((M,B)=>M+B,0)/y.length,v=y.reduce((M,B)=>M+(B-_)**2,0)/y.length;return y.map(M=>(M-_)/Math.sqrt(v+1e-7))}async _call(y){(0,u.validate_audio_inputs)(y,"Wav2Vec2FeatureExtractor"),y instanceof Float64Array&&(y=new Float32Array(y));let k=y;this.config.do_normalize&&(k=this._zero_mean_unit_var_norm(k));const _=[1,k.length];return{input_values:new p.Tensor("float32",k,_),attention_mask:new p.Tensor("int64",new BigInt64Array(k.length).fill(1n),_)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(i,o,a)=>{a.r(o),a.d(o,{Wav2Vec2Processor:()=>C});var u=a("./src/tokenizers.js"),p=a("./src/models/auto/feature_extraction_auto.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",u.AutoTokenizer),Te(C,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(i,o,a)=>{a.r(o),a.d(o,{Wav2Vec2ProcessorWithLM:()=>C});var u=a("./src/tokenizers.js"),p=a("./src/models/auto/feature_extraction_auto.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",u.AutoTokenizer),Te(C,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(i,o,a)=>{a.r(o),a.d(o,{WeSpeakerFeatureExtractor:()=>h});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js");class h extends u.FeatureExtractor{constructor(y){super(y);const k=this.config.sampling_rate,_=(0,p.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(k/2),k,null,"kaldi",!0);for(let v=0;v<_.length;++v)_[v].push(0);this.mel_filters=_,this.window=(0,p.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(y){return y=y.map(k=>k*32768),(0,p.spectrogram)(y,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(y){(0,u.validate_audio_inputs)(y,"WeSpeakerFeatureExtractor");const k=(await this._extract_fbank_features(y)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const _=k.mean(1).data,v=k.data,[M,B,S]=k.dims;for(let N=0;N<M;++N){const V=N*B*S,Z=N*S;for(let O=0;O<B;++O){const Q=V+O*S;for(let q=0;q<S;++q)v[Q+q]-=_[Z+q]}}}return{input_features:k}}}},"./src/models/whisper/common_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WHISPER_LANGUAGE_MAPPING:()=>p,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>h,whisper_language_to_code:()=>C});const u=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],p=new Map(u),h=new Map([...u.map(([y,k])=>[k,y]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function C(y){y=y.toLowerCase();let k=h.get(y);if(k===void 0){const _=y.match(/^<\|([a-z]{2})\|>$/);if(_&&(y=_[1]),p.has(y))k=y;else{const M=y.length===2?p.keys():p.values();throw new Error(`Language "${y}" is not supported. Must be one of: ${JSON.stringify(Array.from(M))}`)}}return k}},"./src/models/whisper/feature_extraction_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WhisperFeatureExtractor:()=>C});var u=a("./src/base/feature_extraction_utils.js");a("./src/utils/tensor.js");var p=a("./src/utils/audio.js"),h=a("./src/utils/maths.js");class C extends u.FeatureExtractor{constructor(k){var _;super(k),(_=this.config).mel_filters??(_.mel_filters=(0,p.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,p.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(k){const _=await(0,p.spectrogram)(k,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(k.length/this.config.hop_length),this.config.nb_max_frames)}),v=_.data,M=(0,h.max)(v)[0];for(let B=0;B<v.length;++B)v[B]=(Math.max(v[B],M-8)+4)/4;return _}async _call(k,{max_length:_=null}={}){(0,u.validate_audio_inputs)(k,"WhisperFeatureExtractor");let v;const M=_??this.config.n_samples;return k.length>M?(k.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),v=k.slice(0,M)):(v=new Float32Array(M),v.set(k)),{input_features:(await this._extract_fbank_features(v)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WhisperGenerationConfig:()=>p});var u=a("./src/generation/configuration_utils.js");class p extends u.GenerationConfig{constructor(){super(...arguments);Te(this,"return_timestamps",null);Te(this,"return_token_timestamps",null);Te(this,"num_frames",null);Te(this,"alignment_heads",null);Te(this,"task",null);Te(this,"language",null);Te(this,"no_timestamps_token_id",null);Te(this,"prompt_ids",null);Te(this,"is_multilingual",null);Te(this,"lang_to_id",null);Te(this,"task_to_id",null);Te(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(i,o,a)=>{a.r(o),a.d(o,{WhisperProcessor:()=>C});var u=a("./src/models/auto/feature_extraction_auto.js"),p=a("./src/tokenizers.js"),h=a("./src/base/processing_utils.js");class C extends h.Processor{async _call(k){return await this.feature_extractor(k)}}Te(C,"tokenizer_class",p.AutoTokenizer),Te(C,"feature_extractor_class",u.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(i,o,a)=>{a.r(o),a.d(o,{YolosFeatureExtractor:()=>h,YolosImageProcessor:()=>p});var u=a("./src/base/image_processors_utils.js");class p extends u.ImageProcessor{post_process_object_detection(...y){return(0,u.post_process_object_detection)(...y)}}class h extends p{}},"./src/ops/registry.js":(i,o,a)=>{a.r(o),a.d(o,{TensorOpRegistry:()=>k});var u=a("./src/backends/onnx.js"),p=a("./src/utils/tensor.js"),h=a("./src/env.js");const C=h.apis.IS_BROWSER_ENV||h.apis.IS_WEBWORKER_ENV,y=async(_,v,M)=>{const B=await(0,u.createInferenceSession)(new Uint8Array(_),v);let S=Promise.resolve();return async N=>{const V=(0,u.isONNXProxy)(),Z=Object.fromEntries(Object.entries(N).map(([Q,q])=>[Q,(V?q.clone():q).ort_tensor])),O=await(S=C?S.then(()=>B.run(Z)):B.run(Z));return Array.isArray(M)?M.map(Q=>new p.Tensor(O[Q])):new p.Tensor(O[M])}};class k{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=y([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=y([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=y([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=y([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=y([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=y([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=y([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=y([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Te(k,"session_options",{})},"./src/pipelines.js":(i,o,a)=>{a.r(o),a.d(o,{AudioClassificationPipeline:()=>Ie,AutomaticSpeechRecognitionPipeline:()=>ke,BackgroundRemovalPipeline:()=>At,DepthEstimationPipeline:()=>Le,DocumentQuestionAnsweringPipeline:()=>ie,FeatureExtractionPipeline:()=>D,FillMaskPipeline:()=>q,ImageClassificationPipeline:()=>Ne,ImageFeatureExtractionPipeline:()=>j,ImageSegmentationPipeline:()=>Xe,ImageToImagePipeline:()=>Ye,ImageToTextPipeline:()=>Ee,ObjectDetectionPipeline:()=>ye,Pipeline:()=>V,QuestionAnsweringPipeline:()=>Q,SummarizationPipeline:()=>I,Text2TextGenerationPipeline:()=>f,TextClassificationPipeline:()=>Z,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>be,TokenClassificationPipeline:()=>O,TranslationPipeline:()=>e,ZeroShotAudioClassificationPipeline:()=>ge,ZeroShotClassificationPipeline:()=>J,ZeroShotImageClassificationPipeline:()=>xe,ZeroShotObjectDetectionPipeline:()=>ue,pipeline:()=>pt});var u=a("./src/tokenizers.js"),p=a("./src/models.js"),h=a("./src/models/auto/processing_auto.js");a("./src/base/processing_utils.js");var C=a("./src/utils/generic.js"),y=a("./src/utils/core.js"),k=a("./src/utils/maths.js"),_=a("./src/utils/audio.js"),v=a("./src/utils/tensor.js"),M=a("./src/utils/image.js");async function B(He){return Array.isArray(He)||(He=[He]),await Promise.all(He.map(Re=>M.RawImage.read(Re)))}async function S(He,Re){return Array.isArray(He)||(He=[He]),await Promise.all(He.map(Se=>typeof Se=="string"||Se instanceof URL?(0,_.read_audio)(Se,Re):Se instanceof Float64Array?new Float32Array(Se):Se))}function N(He,Re){Re&&(He=He.map(Bt=>Bt|0));const[Se,Qe,ht,wt]=He;return{xmin:Se,ymin:Qe,xmax:ht,ymax:wt}}class V extends C.Callable{constructor({task:Re,model:Se,tokenizer:Qe=null,processor:ht=null}){super(),this.task=Re,this.model=Se,this.tokenizer=Qe,this.processor=ht}async dispose(){await this.model.dispose()}}class Z extends V{constructor(Re){super(Re)}async _call(Re,{top_k:Se=1}={}){const Qe=this.tokenizer(Re,{padding:!0,truncation:!0}),ht=await this.model(Qe),wt=this.model.config.problem_type==="multi_label_classification"?oe=>oe.sigmoid():oe=>new v.Tensor("float32",(0,k.softmax)(oe.data),oe.dims),Bt=this.model.config.id2label,Mt=[];for(const oe of ht.logits){const zt=wt(oe),ve=await(0,v.topk)(zt,Se),H=ve[0].tolist(),ne=ve[1].tolist().map((ze,$e)=>({label:Bt?Bt[ze]:`LABEL_${ze}`,score:H[$e]}));Se===1?Mt.push(...ne):Mt.push(ne)}return Array.isArray(Re)||Se===1?Mt:Mt[0]}}class O extends V{constructor(Re){super(Re)}async _call(Re,{ignore_labels:Se=["O"]}={}){const Qe=Array.isArray(Re),ht=this.tokenizer(Qe?Re:[Re],{padding:!0,truncation:!0}),Bt=(await this.model(ht)).logits,Mt=this.model.config.id2label,oe=[];for(let zt=0;zt<Bt.dims[0];++zt){const ve=ht.input_ids[zt],H=Bt[zt],ce=[];for(let ne=0;ne<H.dims[0];++ne){const ze=H[ne],$e=(0,k.max)(ze.data)[1],gt=Mt?Mt[$e]:`LABEL_${$e}`;if(Se.includes(gt))continue;const It=this.tokenizer.decode([ve[ne].item()],{skip_special_tokens:!0});if(It==="")continue;const Nt=(0,k.softmax)(ze.data);ce.push({entity:gt,score:Nt[$e],index:ne,word:It})}oe.push(ce)}return Qe?oe:oe[0]}}class Q extends V{constructor(Re){super(Re)}async _call(Re,Se,{top_k:Qe=1}={}){const ht=this.tokenizer(Re,{text_pair:Se,padding:!0,truncation:!0}),{start_logits:wt,end_logits:Bt}=await this.model(ht),Mt=ht.input_ids.tolist(),oe=ht.attention_mask.tolist(),zt=this.tokenizer.all_special_ids,ve=[];for(let H=0;H<wt.dims[0];++H){const ce=Mt[H],ne=ce.findIndex(_t=>_t==this.tokenizer.sep_token_id);oe[H].map((_t,Vt)=>_t==1&&(Vt===0||Vt>ne&&zt.findIndex(Xt=>Xt==ce[Vt])===-1));const ze=wt[H].tolist(),$e=Bt[H].tolist();for(let _t=1;_t<ze.length;++_t)(oe[H]==0||_t<=ne||zt.findIndex(Vt=>Vt==ce[_t])!==-1)&&(ze[_t]=-1/0,$e[_t]=-1/0);const gt=(0,k.softmax)(ze).map((_t,Vt)=>[_t,Vt]),It=(0,k.softmax)($e).map((_t,Vt)=>[_t,Vt]);gt[0][0]=0,It[0][0]=0;const Nt=(0,y.product)(gt,It).filter(_t=>_t[0][1]<=_t[1][1]).map(_t=>[_t[0][1],_t[1][1],_t[0][0]*_t[1][0]]).sort((_t,Vt)=>Vt[2]-_t[2]);for(let _t=0;_t<Math.min(Nt.length,Qe);++_t){const[Vt,Xt,Jt]=Nt[_t],wr=ce.slice(Vt,Xt+1),Rr=this.tokenizer.decode(wr,{skip_special_tokens:!0});ve.push({answer:Rr,score:Jt})}}return Qe===1?ve[0]:ve}}class q extends V{constructor(Re){super(Re)}async _call(Re,{top_k:Se=5}={}){const Qe=this.tokenizer(Re,{padding:!0,truncation:!0}),{logits:ht}=await this.model(Qe),wt=[],Bt=Qe.input_ids.tolist();for(let Mt=0;Mt<Bt.length;++Mt){const oe=Bt[Mt],zt=oe.findIndex(ze=>ze==this.tokenizer.mask_token_id);if(zt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const ve=ht[Mt][zt],H=await(0,v.topk)(new v.Tensor("float32",(0,k.softmax)(ve.data),ve.dims),Se),ce=H[0].tolist(),ne=H[1].tolist();wt.push(ne.map((ze,$e)=>{const gt=oe.slice();return gt[zt]=ze,{score:ce[$e],token:Number(ze),token_str:this.tokenizer.decode([ze]),sequence:this.tokenizer.decode(gt,{skip_special_tokens:!0})}}))}return Array.isArray(Re)?wt:wt[0]}}class f extends V{constructor(Se){super(Se);Te(this,"_key","generated_text")}async _call(Se,Qe={}){Array.isArray(Se)||(Se=[Se]),this.model.config.prefix&&(Se=Se.map(zt=>this.model.config.prefix+zt));const ht=this.model.config.task_specific_params;ht&&ht[this.task]&&ht[this.task].prefix&&(Se=Se.map(zt=>ht[this.task].prefix+zt));const wt=this.tokenizer,Bt={padding:!0,truncation:!0};let Mt;this instanceof e&&"_build_translation_inputs"in wt?Mt=wt._build_translation_inputs(Se,Bt,Qe):Mt=wt(Se,Bt);const oe=await this.model.generate({...Mt,...Qe});return wt.batch_decode(oe,{skip_special_tokens:!0}).map(zt=>({[this._key]:zt}))}}class I extends f{constructor(Se){super(Se);Te(this,"_key","summary_text")}}class e extends f{constructor(Se){super(Se);Te(this,"_key","translation_text")}}function c(He){return Array.isArray(He)&&He.every(Re=>"role"in Re&&"content"in Re)}class P extends V{constructor(Re){super(Re)}async _call(Re,Se={}){let Qe=!1,ht=!1,wt;if(typeof Re=="string")wt=Re=[Re];else if(Array.isArray(Re)&&Re.every(ne=>typeof ne=="string"))Qe=!0,wt=Re;else{if(c(Re))Re=[Re];else if(Array.isArray(Re)&&Re.every(c))Qe=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");ht=!0,wt=Re.map(ne=>this.tokenizer.apply_chat_template(ne,{tokenize:!1,add_generation_prompt:!0}))}const Bt=Se.add_special_tokens??!1,Mt=ht?!1:Se.return_full_text??!0;this.tokenizer.padding_side="left";const oe=this.tokenizer(wt,{add_special_tokens:Bt,padding:!0,truncation:!0}),zt=await this.model.generate({...oe,...Se}),ve=this.tokenizer.batch_decode(zt,{skip_special_tokens:!0});let H;!Mt&&oe.input_ids.dims.at(-1)>0&&(H=this.tokenizer.batch_decode(oe.input_ids,{skip_special_tokens:!0}).map(ne=>ne.length));const ce=Array.from({length:Re.length},ne=>[]);for(let ne=0;ne<ve.length;++ne){const ze=Math.floor(ne/zt.dims[0]*Re.length);H&&(ve[ne]=ve[ne].slice(H[ze])),ce[ze].push({generated_text:ht?[...Re[ze],{role:"assistant",content:ve[ne]}]:ve[ne]})}return!Qe&&ce.length===1?ce[0]:ce}}class J extends V{constructor(Re){super(Re),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Se,Qe])=>[Se.toLowerCase(),Qe])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(Re,Se,{hypothesis_template:Qe="This example is {}.",multi_label:ht=!1}={}){const wt=Array.isArray(Re);wt||(Re=[Re]),Array.isArray(Se)||(Se=[Se]);const Bt=Se.map(zt=>Qe.replace("{}",zt)),Mt=ht||Se.length===1,oe=[];for(const zt of Re){const ve=[];for(const ne of Bt){const ze=this.tokenizer(zt,{text_pair:ne,padding:!0,truncation:!0}),$e=await this.model(ze);Mt?ve.push([$e.logits.data[this.contradiction_id],$e.logits.data[this.entailment_id]]):ve.push($e.logits.data[this.entailment_id])}const ce=(Mt?ve.map(ne=>(0,k.softmax)(ne)[1]):(0,k.softmax)(ve)).map((ne,ze)=>[ne,ze]).sort((ne,ze)=>ze[0]-ne[0]);oe.push({sequence:zt,labels:ce.map(ne=>Se[ne[1]]),scores:ce.map(ne=>ne[0])})}return wt?oe:oe[0]}}class D extends V{constructor(Re){super(Re)}async _call(Re,{pooling:Se="none",normalize:Qe=!1,quantize:ht=!1,precision:wt="binary"}={}){const Bt=this.tokenizer(Re,{padding:!0,truncation:!0}),Mt=await this.model(Bt);let oe=Mt.last_hidden_state??Mt.logits??Mt.token_embeddings;if(Se!=="none")if(Se==="mean")oe=(0,v.mean_pooling)(oe,Bt.attention_mask);else if(Se==="cls")oe=oe.slice(null,0);else throw Error(`Pooling method '${Se}' not supported.`);return Qe&&(oe=oe.normalize(2,-1)),ht&&(oe=(0,v.quantize_embeddings)(oe,wt)),oe}}class j extends V{constructor(Re){super(Re)}async _call(Re,{pool:Se=null}={}){const Qe=await B(Re),{pixel_values:ht}=await this.processor(Qe),wt=await this.model({pixel_values:ht});let Bt;if(Se){if(!("pooler_output"in wt))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Bt=wt.pooler_output}else Bt=wt.last_hidden_state??wt.logits??wt.image_embeds;return Bt}}class Ie extends V{constructor(Re){super(Re)}async _call(Re,{top_k:Se=5}={}){const Qe=this.processor.feature_extractor.config.sampling_rate,ht=await S(Re,Qe),wt=this.model.config.id2label,Bt=[];for(const Mt of ht){const oe=await this.processor(Mt),ve=(await this.model(oe)).logits[0],H=await(0,v.topk)(new v.Tensor("float32",(0,k.softmax)(ve.data),ve.dims),Se),ce=H[0].tolist(),ze=H[1].tolist().map(($e,gt)=>({label:wt?wt[$e]:`LABEL_${$e}`,score:ce[gt]}));Bt.push(ze)}return Array.isArray(Re)?Bt:Bt[0]}}class ge extends V{constructor(Re){super(Re)}async _call(Re,Se,{hypothesis_template:Qe="This is a sound of {}."}={}){const ht=!Array.isArray(Re);ht&&(Re=[Re]);const wt=Se.map(ve=>Qe.replace("{}",ve)),Bt=this.tokenizer(wt,{padding:!0,truncation:!0}),Mt=this.processor.feature_extractor.config.sampling_rate,oe=await S(Re,Mt),zt=[];for(const ve of oe){const H=await this.processor(ve),ce=await this.model({...Bt,...H}),ne=(0,k.softmax)(ce.logits_per_audio.data);zt.push([...ne].map((ze,$e)=>({score:ze,label:Se[$e]})))}return ht?zt[0]:zt}}class ke extends V{constructor(Re){super(Re)}async _call(Re,Se={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(Re,Se);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(Re,Se);case"moonshine":return this._call_moonshine(Re,Se);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(Re,Se){Se.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Se.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Qe=!Array.isArray(Re);Qe&&(Re=[Re]);const ht=this.processor.feature_extractor.config.sampling_rate,wt=await S(Re,ht),Bt=[];for(const Mt of wt){const oe=await this.processor(Mt),ve=(await this.model(oe)).logits[0],H=[];for(const ne of ve)H.push((0,k.max)(ne.data)[1]);const ce=this.tokenizer.decode(H);Bt.push({text:ce})}return Qe?Bt[0]:Bt}async _call_whisper(Re,Se){const Qe=Se.return_timestamps??!1,ht=Se.chunk_length_s??0,wt=Se.force_full_sequences??!1;let Bt=Se.stride_length_s??null;const Mt={...Se};Qe==="word"&&(Mt.return_token_timestamps=!0,Mt.return_timestamps=!1);const oe=!Array.isArray(Re);oe&&(Re=[Re]);const zt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,ve=this.processor.feature_extractor.config.hop_length,H=this.processor.feature_extractor.config.sampling_rate,ce=await S(Re,H),ne=[];for(const ze of ce){let $e=[];if(ht>0){if(Bt===null)Bt=ht/6;else if(ht<=Bt)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Nt=H*ht,_t=H*Bt,Vt=Nt-2*_t;let Xt=0;for(;;){const Jt=Xt+Nt,wr=ze.subarray(Xt,Jt),Rr=await this.processor(wr),$s=Xt===0,os=Jt>=ze.length;if($e.push({stride:[wr.length,$s?0:_t,os?0:_t],input_features:Rr.input_features,is_last:os}),os)break;Xt+=Vt}}else $e=[{stride:[ze.length,0,0],input_features:(await this.processor(ze)).input_features,is_last:!0}];for(const Nt of $e){Mt.num_frames=Math.floor(Nt.stride[0]/ve);const _t=await this.model.generate({inputs:Nt.input_features,...Mt});Qe==="word"?(Nt.tokens=_t.sequences.tolist()[0],Nt.token_timestamps=_t.token_timestamps.tolist()[0].map(Vt=>(0,k.round)(Vt,2))):Nt.tokens=_t[0].tolist(),Nt.stride=Nt.stride.map(Vt=>Vt/H)}const[gt,It]=this.tokenizer._decode_asr($e,{time_precision:zt,return_timestamps:Qe,force_full_sequences:wt});ne.push({text:gt,...It})}return oe?ne[0]:ne}async _call_moonshine(Re,Se){const Qe=!Array.isArray(Re);Qe&&(Re=[Re]);const ht=this.processor.feature_extractor.config.sampling_rate,wt=await S(Re,ht),Bt=[];for(const Mt of wt){const oe=await this.processor(Mt),zt=Math.floor(Mt.length/ht)*6,ve=await this.model.generate({max_new_tokens:zt,...Se,...oe}),H=this.processor.batch_decode(ve,{skip_special_tokens:!0})[0];Bt.push({text:H})}return Qe?Bt[0]:Bt}}class Ee extends V{constructor(Re){super(Re)}async _call(Re,Se={}){const Qe=Array.isArray(Re),ht=await B(Re),{pixel_values:wt}=await this.processor(ht),Bt=[];for(const Mt of wt){Mt.dims=[1,...Mt.dims];const oe=await this.model.generate({inputs:Mt,...Se}),zt=this.tokenizer.batch_decode(oe,{skip_special_tokens:!0}).map(ve=>({generated_text:ve.trim()}));Bt.push(zt)}return Qe?Bt:Bt[0]}}class Ne extends V{constructor(Re){super(Re)}async _call(Re,{top_k:Se=5}={}){const Qe=await B(Re),{pixel_values:ht}=await this.processor(Qe),wt=await this.model({pixel_values:ht}),Bt=this.model.config.id2label,Mt=[];for(const oe of wt.logits){const zt=await(0,v.topk)(new v.Tensor("float32",(0,k.softmax)(oe.data),oe.dims),Se),ve=zt[0].tolist(),ce=zt[1].tolist().map((ne,ze)=>({label:Bt?Bt[ne]:`LABEL_${ne}`,score:ve[ze]}));Mt.push(ce)}return Array.isArray(Re)?Mt:Mt[0]}}class Xe extends V{constructor(Re){super(Re),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(Re,{threshold:Se=.5,mask_threshold:Qe=.5,overlap_mask_area_threshold:ht=.8,label_ids_to_fuse:wt=null,target_sizes:Bt=null,subtask:Mt=null}={}){if(Array.isArray(Re)&&Re.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const zt=await B(Re),ve=zt.map(Nt=>[Nt.height,Nt.width]),H=await this.processor(zt),{inputNames:ce,outputNames:ne}=this.model.sessions.model;if(!ce.includes("pixel_values")){if(ce.length!==1)throw Error(`Expected a single input name, but got ${ce.length} inputs: ${ce}.`);const Nt=ce[0];if(Nt in H)throw Error(`Input name ${Nt} already exists in the inputs.`);H[Nt]=H.pixel_values}const ze=await this.model(H);let $e=null;if(Mt!==null)$e=this.subtasks_mapping[Mt];else if(this.processor.image_processor){for(const[Nt,_t]of Object.entries(this.subtasks_mapping))if(_t in this.processor.image_processor){$e=this.processor.image_processor[_t].bind(this.processor.image_processor),Mt=Nt;break}}const gt=this.model.config.id2label,It=[];if(Mt)if(Mt==="panoptic"||Mt==="instance"){const Nt=$e(ze,Se,Qe,ht,wt,Bt??ve)[0],_t=Nt.segmentation;for(const Vt of Nt.segments_info){const Xt=new Uint8ClampedArray(_t.data.length);for(let wr=0;wr<_t.data.length;++wr)_t.data[wr]===Vt.id&&(Xt[wr]=255);const Jt=new M.RawImage(Xt,_t.dims[1],_t.dims[0],1);It.push({score:Vt.score,label:gt[Vt.label_id],mask:Jt})}}else if(Mt==="semantic"){const{segmentation:Nt,labels:_t}=$e(ze,Bt??ve)[0];for(const Vt of _t){const Xt=new Uint8ClampedArray(Nt.data.length);for(let wr=0;wr<Nt.data.length;++wr)Nt.data[wr]===Vt&&(Xt[wr]=255);const Jt=new M.RawImage(Xt,Nt.dims[1],Nt.dims[0],1);It.push({score:null,label:gt[Vt],mask:Jt})}}else throw Error(`Subtask ${Mt} not supported.`);else{const _t=ze[ne[0]];for(let Vt=0;Vt<ve.length;++Vt){const Xt=ve[Vt],Jt=_t[Vt];Jt.data.some(Rr=>Rr<-1e-5||Rr>1+1e-5)&&Jt.sigmoid_();const wr=await M.RawImage.fromTensor(Jt.mul_(255).to("uint8")).resize(Xt[1],Xt[0]);It.push({label:null,score:null,mask:wr})}}return It}}class At extends Xe{constructor(Re){super(Re)}async _call(Re,Se={}){if(Array.isArray(Re)&&Re.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const ht=await B(Re),wt=await super._call(Re,Se);return ht.map((Mt,oe)=>{const zt=Mt.clone();return zt.putAlpha(wt[oe].mask),zt})}}class xe extends V{constructor(Re){super(Re)}async _call(Re,Se,{hypothesis_template:Qe="This is a photo of {}"}={}){const ht=Array.isArray(Re),wt=await B(Re),Bt=Se.map(ce=>Qe.replace("{}",ce)),Mt=this.tokenizer(Bt,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:oe}=await this.processor(wt),zt=await this.model({...Mt,pixel_values:oe}),ve=this.model.config.model_type==="siglip"?ce=>ce.sigmoid().data:ce=>(0,k.softmax)(ce.data),H=[];for(const ce of zt.logits_per_image){const ze=[...ve(ce)].map(($e,gt)=>({score:$e,label:Se[gt]}));ze.sort(($e,gt)=>gt.score-$e.score),H.push(ze)}return ht?H:H[0]}}class ye extends V{constructor(Re){super(Re)}async _call(Re,{threshold:Se=.9,percentage:Qe=!1}={}){const ht=Array.isArray(Re);if(ht&&Re.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const wt=await B(Re),Bt=Qe?null:wt.map(ne=>[ne.height,ne.width]),{pixel_values:Mt,pixel_mask:oe}=await this.processor(wt),zt=await this.model({pixel_values:Mt,pixel_mask:oe}),ve=this.processor.image_processor.post_process_object_detection(zt,Se,Bt),H=this.model.config.id2label,ce=ve.map(ne=>ne.boxes.map((ze,$e)=>({score:ne.scores[$e],label:H[ne.classes[$e]],box:N(ze,!Qe)})));return ht?ce:ce[0]}}class ue extends V{constructor(Re){super(Re)}async _call(Re,Se,{threshold:Qe=.1,top_k:ht=null,percentage:wt=!1}={}){const Bt=Array.isArray(Re),Mt=await B(Re),oe=this.tokenizer(Se,{padding:!0,truncation:!0}),zt=await this.processor(Mt),ve=[];for(let H=0;H<Mt.length;++H){const ce=Mt[H],ne=wt?null:[[ce.height,ce.width]],ze=zt.pixel_values[H].unsqueeze_(0),$e=await this.model({...oe,pixel_values:ze});let gt;if("post_process_grounded_object_detection"in this.processor){const It=this.processor.post_process_grounded_object_detection($e,oe.input_ids,{box_threshold:Qe,text_threshold:Qe,target_sizes:ne})[0];gt=It.boxes.map((Nt,_t)=>({score:It.scores[_t],label:It.labels[_t],box:N(Nt,!wt)}))}else{const It=this.processor.image_processor.post_process_object_detection($e,Qe,ne,!0)[0];gt=It.boxes.map((Nt,_t)=>({score:It.scores[_t],label:Se[It.classes[_t]],box:N(Nt,!wt)}))}gt.sort((It,Nt)=>Nt.score-It.score),ht!==null&&(gt=gt.slice(0,ht)),ve.push(gt)}return Bt?ve:ve[0]}}class ie extends V{constructor(Re){super(Re)}async _call(Re,Se,Qe={}){const ht=(await B(Re))[0],{pixel_values:wt}=await this.processor(ht),Bt=`<s_docvqa><s_question>${Se}</s_question><s_answer>`,Mt=this.tokenizer(Bt,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,oe=await this.model.generate({inputs:wt,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Mt,...Qe}),ve=this.tokenizer.batch_decode(oe)[0].match(/<s_answer>(.*?)<\/s_answer>/);let H=null;return ve&&ve.length>=2&&(H=ve[1].trim()),[{answer:H}]}}class be extends V{constructor(Se){super(Se);Te(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Se.vocoder??null}async _call(Se,{speaker_embeddings:Qe=null}={}){return this.processor?this._call_text_to_spectrogram(Se,{speaker_embeddings:Qe}):this._call_text_to_waveform(Se)}async _call_text_to_waveform(Se){const Qe=this.tokenizer(Se,{padding:!0,truncation:!0}),{waveform:ht}=await this.model(Qe),wt=this.model.config.sampling_rate;return new _.RawAudio(ht.data,wt)}async _call_text_to_spectrogram(Se,{speaker_embeddings:Qe}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await p.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Qe=="string"||Qe instanceof URL)&&(Qe=new Float32Array(await(await fetch(Qe)).arrayBuffer())),Qe instanceof Float32Array)Qe=new v.Tensor("float32",Qe,[1,Qe.length]);else if(!(Qe instanceof v.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:ht}=this.tokenizer(Se,{padding:!0,truncation:!0}),{waveform:wt}=await this.model.generate_speech(ht,Qe,{vocoder:this.vocoder}),Bt=this.processor.feature_extractor.config.sampling_rate;return new _.RawAudio(wt.data,Bt)}}class Ye extends V{constructor(Re){super(Re)}async _call(Re){const Se=await B(Re),Qe=await this.processor(Se),ht=await this.model(Qe),wt=[];for(const Bt of ht.reconstruction){const Mt=Bt.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");wt.push(M.RawImage.fromTensor(Mt))}return wt.length>1?wt:wt[0]}}class Le extends V{constructor(Re){super(Re)}async _call(Re){const Se=await B(Re),Qe=await this.processor(Se),{predicted_depth:ht}=await this.model(Qe),wt=[];for(let Bt=0;Bt<Se.length;++Bt){const Mt=ht[Bt],[oe,zt]=Mt.dims.slice(-2),[ve,H]=Se[Bt].size,ce=(await(0,v.interpolate_4d)(Mt.view(1,1,oe,zt),{size:[H,ve],mode:"bilinear"})).view(H,ve),ne=ce.min().item(),ze=ce.max().item(),$e=ce.sub(ne).div_(ze-ne).mul_(255).to("uint8").unsqueeze(0),gt=M.RawImage.fromTensor($e);wt.push({predicted_depth:ce,depth:gt})}return wt.length>1?wt:wt[0]}}const lt=Object.freeze({"text-classification":{tokenizer:u.AutoTokenizer,pipeline:Z,model:p.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:u.AutoTokenizer,pipeline:O,model:p.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:u.AutoTokenizer,pipeline:Q,model:p.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:u.AutoTokenizer,pipeline:q,model:p.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:u.AutoTokenizer,pipeline:I,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:u.AutoTokenizer,pipeline:e,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:u.AutoTokenizer,pipeline:f,model:p.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:u.AutoTokenizer,pipeline:P,model:p.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:u.AutoTokenizer,pipeline:J,model:p.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ie,model:p.AutoModelForAudioClassification,processor:h.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:u.AutoTokenizer,pipeline:ge,model:p.AutoModel,processor:h.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:u.AutoTokenizer,pipeline:ke,model:[p.AutoModelForSpeechSeq2Seq,p.AutoModelForCTC],processor:h.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:u.AutoTokenizer,pipeline:be,model:[p.AutoModelForTextToWaveform,p.AutoModelForTextToSpectrogram],processor:[h.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:u.AutoTokenizer,pipeline:Ee,model:p.AutoModelForVision2Seq,processor:h.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:Ne,model:p.AutoModelForImageClassification,processor:h.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Xe,model:[p.AutoModelForImageSegmentation,p.AutoModelForSemanticSegmentation,p.AutoModelForUniversalSegmentation],processor:h.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:At,model:[p.AutoModelForImageSegmentation,p.AutoModelForSemanticSegmentation,p.AutoModelForUniversalSegmentation],processor:h.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:u.AutoTokenizer,pipeline:xe,model:p.AutoModel,processor:h.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ye,model:p.AutoModelForObjectDetection,processor:h.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:u.AutoTokenizer,pipeline:ue,model:p.AutoModelForZeroShotObjectDetection,processor:h.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:u.AutoTokenizer,pipeline:ie,model:p.AutoModelForDocumentQuestionAnswering,processor:h.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Ye,model:p.AutoModelForImageToImage,processor:h.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Le,model:p.AutoModelForDepthEstimation,processor:h.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:u.AutoTokenizer,pipeline:D,model:p.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:h.AutoProcessor,pipeline:j,model:[p.AutoModelForImageFeatureExtraction,p.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),ft=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function pt(He,Re=null,{progress_callback:Se=null,config:Qe=null,cache_dir:ht=null,local_files_only:wt=!1,revision:Bt="main",device:Mt=null,dtype:oe=null,subfolder:zt="onnx",use_external_data_format:ve=null,model_file_name:H=null,session_options:ce={}}={}){He=ft[He]??He;const ne=lt[He.split("_",1)[0]];if(!ne)throw Error(`Unsupported pipeline: ${He}. Must be one of [${Object.keys(lt)}]`);Re||(Re=ne.default.model,console.log(`No model specified. Using default model: "${Re}".`));const ze={progress_callback:Se,config:Qe,cache_dir:ht,local_files_only:wt,revision:Bt,device:Mt,dtype:oe,subfolder:zt,use_external_data_format:ve,model_file_name:H,session_options:ce},$e=new Map([["tokenizer",ne.tokenizer],["model",ne.model],["processor",ne.processor]]),gt=await ct($e,Re,ze);gt.task=He,(0,y.dispatchCallback)(Se,{status:"ready",task:He,model:Re});const It=ne.pipeline;return new It(gt)}async function ct(He,Re,Se){const Qe=Object.create(null),ht=[];for(const[wt,Bt]of He.entries()){if(!Bt)continue;let Mt;Array.isArray(Bt)?Mt=new Promise(async(oe,zt)=>{var H,ce;let ve;for(const ne of Bt){if(ne===null){oe(null);return}try{oe(await ne.from_pretrained(Re,Se));return}catch(ze){if((H=ze.message)!=null&&H.includes("Unsupported model type"))ve=ze;else if((ce=ze.message)!=null&&ce.includes("Could not locate file"))ve=ze;else{zt(ze);return}}}zt(ve)}):Mt=Bt.from_pretrained(Re,Se),Qe[wt]=Mt,ht.push(Mt)}await Promise.all(ht);for(const[wt,Bt]of Object.entries(Qe))Qe[wt]=await Bt;return Qe}},"./src/tokenizers.js":(i,o,a)=>{a.r(o),a.d(o,{AlbertTokenizer:()=>$a,AutoTokenizer:()=>Pt,BartTokenizer:()=>Qn,BertTokenizer:()=>Bs,BlenderbotSmallTokenizer:()=>Ln,BlenderbotTokenizer:()=>rn,BloomTokenizer:()=>di,CLIPTokenizer:()=>bn,CamembertTokenizer:()=>zr,CodeGenTokenizer:()=>Cs,CodeLlamaTokenizer:()=>fi,CohereTokenizer:()=>bt,ConvBertTokenizer:()=>sa,DebertaTokenizer:()=>Pn,DebertaV2Tokenizer:()=>Dn,DistilBertTokenizer:()=>Br,ElectraTokenizer:()=>aa,EsmTokenizer:()=>Gi,FalconTokenizer:()=>Zn,GPT2Tokenizer:()=>vn,GPTNeoXTokenizer:()=>ba,GemmaTokenizer:()=>Jn,Grok1Tokenizer:()=>gi,HerbertTokenizer:()=>qn,LlamaTokenizer:()=>ai,M2M100Tokenizer:()=>pi,MBart50Tokenizer:()=>ci,MBartTokenizer:()=>Sn,MPNetTokenizer:()=>Xn,MarianTokenizer:()=>zi,MgpstrTokenizer:()=>Tt,MobileBertTokenizer:()=>en,NllbTokenizer:()=>Ei,NougatTokenizer:()=>Be,PreTrainedTokenizer:()=>Kt,Qwen2Tokenizer:()=>Fi,RoFormerTokenizer:()=>Zt,RobertaTokenizer:()=>ui,SiglipTokenizer:()=>Nn,SpeechT5Tokenizer:()=>Qt,SqueezeBertTokenizer:()=>On,T5Tokenizer:()=>ks,TokenizerModel:()=>j,VitsTokenizer:()=>ot,Wav2Vec2CTCTokenizer:()=>Bi,WhisperTokenizer:()=>Jr,XLMRobertaTokenizer:()=>Ri,XLMTokenizer:()=>qs,is_chinese_char:()=>q});var u=a("./src/utils/generic.js"),p=a("./src/utils/core.js"),h=a("./src/utils/hub.js"),C=a("./src/utils/maths.js"),y=a("./src/utils/tensor.js"),k=a("./src/utils/data-structures.js"),_=a("./node_modules/@huggingface/jinja/dist/index.js"),v=a("./src/models/whisper/common_whisper.js");async function M(st,pe){const he=await Promise.all([(0,h.getModelJSON)(st,"tokenizer.json",!0,pe),(0,h.getModelJSON)(st,"tokenizer_config.json",!0,pe)]);return pe.legacy!==null&&(he[1].legacy=pe.legacy),he}function B(st,pe){const he=[];let qe=0;for(const it of st.matchAll(pe)){const kt=it[0];qe<it.index&&he.push(st.slice(qe,it.index)),kt.length>0&&he.push(kt),qe=it.index+kt.length}return qe<st.length&&he.push(st.slice(qe)),he}function S(st,pe=!0){if(st.Regex!==void 0){let he=st.Regex.replace(/\\([#&~])/g,"$1");for(const[qe,it]of J)he=he.replaceAll(qe,it);return new RegExp(he,"gu")}else if(st.String!==void 0){const he=(0,p.escapeRegExp)(st.String);return new RegExp(pe?he:`(${he})`,"gu")}else return console.warn("Unknown pattern type:",st),null}function N(st){return new Map(Object.entries(st))}function V(st){const pe=st.dims;switch(pe.length){case 1:return st.tolist();case 2:if(pe[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return st.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${pe.length}.`)}}function Z(st){return st.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function O(st){return st.replace(new RegExp("\\p{M}","gu"),"")}function Q(st){return O(st.toLowerCase())}function q(st){return st>=19968&&st<=40959||st>=13312&&st<=19903||st>=131072&&st<=173791||st>=173824&&st<=177983||st>=177984&&st<=178207||st>=178208&&st<=183983||st>=63744&&st<=64255||st>=194560&&st<=195103}function f(st,pe,he){const qe=[];let it=0;for(;it<st.length;){if(qe.push(st[it]),(pe.get(st[it])??he)!==he){++it;continue}for(;++it<st.length&&(pe.get(st[it])??he)===he;)pe.get(qe.at(-1))!==he&&(qe[qe.length-1]+=st[it])}return qe}function I(st){return st.match(/\S+/g)||[]}const e="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",c=new RegExp(`^[${e}]+$`,"gu"),P=".,!?…。，、।۔،",J=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class D{constructor(pe){this.content=pe.content,this.id=pe.id,this.single_word=pe.single_word??!1,this.lstrip=pe.lstrip??!1,this.rstrip=pe.rstrip??!1,this.special=pe.special??!1,this.normalized=pe.normalized??null}}class j extends u.Callable{constructor(pe){super(),this.config=pe,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(pe,...he){switch(pe.type){case"WordPiece":return new Ie(pe);case"Unigram":return new ge(pe,...he);case"BPE":return new Ne(pe);default:if(pe.vocab)return Array.isArray(pe.vocab)?new ge(pe,...he):typeof pe.vocab=="object"&&pe.continuing_subword_prefix&&pe.unk_token?new Ie(pe):new Xe(pe,...he);throw new Error(`Unknown TokenizerModel type: ${pe.type}`)}}_call(pe){return pe=this.encode(pe),this.fuse_unk&&(pe=f(pe,this.tokens_to_ids,this.unk_token_id)),pe}encode(pe){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(pe){return pe.map(he=>this.tokens_to_ids.get(he)??this.unk_token_id)}convert_ids_to_tokens(pe){return pe.map(he=>this.vocab[he]??this.unk_token)}}class Ie extends j{constructor(pe){super(pe),this.tokens_to_ids=N(pe.vocab),this.unk_token_id=this.tokens_to_ids.get(pe.unk_token),this.unk_token=pe.unk_token,this.max_input_chars_per_word=pe.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[he,qe]of this.tokens_to_ids)this.vocab[qe]=he}encode(pe){const he=[];for(const qe of pe){const it=[...qe];if(it.length>this.max_input_chars_per_word){he.push(this.unk_token);continue}let kt=!1,Ht=0;const ir=[];for(;Ht<it.length;){let fr=it.length,nr=null;for(;Ht<fr;){let Yt=it.slice(Ht,fr).join("");if(Ht>0&&(Yt=this.config.continuing_subword_prefix+Yt),this.tokens_to_ids.has(Yt)){nr=Yt;break}--fr}if(nr===null){kt=!0;break}ir.push(nr),Ht=fr}kt?he.push(this.unk_token):he.push(...ir)}return he}}class ge extends j{constructor(pe,he){super(pe);const qe=pe.vocab.length;this.vocab=new Array(qe),this.scores=new Array(qe);for(let it=0;it<qe;++it)[this.vocab[it],this.scores[it]]=pe.vocab[it];this.unk_token_id=pe.unk_id,this.unk_token=this.vocab[pe.unk_id],this.tokens_to_ids=new Map(this.vocab.map((it,kt)=>[it,kt])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=he.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,C.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new k.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(pe){const he=pe.chars,qe=1;let it=0;for(;it<he.length;){let kt=!1;const Ht=he.slice(it).join(""),ir=this.trie.commonPrefixSearch(Ht);for(const fr of ir){const nr=this.tokens_to_ids.get(fr),Yt=this.scores[nr],Ar=(0,p.len)(fr);pe.insert(it,Ar,Yt,nr),!kt&&Ar===qe&&(kt=!0)}kt||pe.insert(it,qe,this.unk_score,this.unk_token_id),it+=qe}}tokenize(pe){const he=new k.TokenLattice(pe,this.bos_token_id,this.eos_token_id);return this.populateNodes(he),he.tokens()}encode(pe){const he=[];for(const qe of pe){const it=this.tokenize(qe);he.push(...it)}return he}}const ke=(()=>{const st=[...Array.from({length:94},(it,kt)=>kt+33),...Array.from({length:12},(it,kt)=>kt+161),...Array.from({length:82},(it,kt)=>kt+174)],pe=st.slice();let he=0;for(let it=0;it<256;++it)st.includes(it)||(st.push(it),pe.push(256+he),he+=1);const qe=pe.map(it=>String.fromCharCode(it));return Object.fromEntries(st.map((it,kt)=>[it,qe[kt]]))})(),Ee=(0,p.reverseDictionary)(ke);class Ne extends j{constructor(pe){super(pe),this.tokens_to_ids=N(pe.vocab),this.unk_token_id=this.tokens_to_ids.get(pe.unk_token),this.unk_token=pe.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[qe,it]of this.tokens_to_ids)this.vocab[it]=qe;const he=Array.isArray(pe.merges[0]);this.merges=he?pe.merges:pe.merges.map(qe=>qe.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((qe,it)=>[JSON.stringify(qe),it])),this.end_of_word_suffix=pe.end_of_word_suffix,this.continuing_subword_suffix=pe.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(pe){if(pe.length===0)return[];const he=this.cache.get(pe);if(he!==void 0)return he;const qe=Array.from(pe);this.end_of_word_suffix&&(qe[qe.length-1]+=this.end_of_word_suffix);let it=[];if(qe.length>1){const kt=new k.PriorityQueue((fr,nr)=>fr.score<nr.score);let Ht={token:qe[0],bias:0,prev:null,next:null},ir=Ht;for(let fr=1;fr<qe.length;++fr){const nr={bias:fr/qe.length,token:qe[fr],prev:ir,next:null};ir.next=nr,this._add_node(kt,ir),ir=nr}for(;!kt.isEmpty();){const fr=kt.pop();if(fr.deleted||!fr.next||fr.next.deleted)continue;if(fr.deleted=!0,fr.next.deleted=!0,fr.prev){const Yt={...fr.prev};fr.prev.deleted=!0,fr.prev=Yt,Yt.prev?Yt.prev.next=Yt:Ht=Yt}const nr={token:fr.token+fr.next.token,bias:fr.bias,prev:fr.prev,next:fr.next.next};nr.prev?(nr.prev.next=nr,this._add_node(kt,nr.prev)):Ht=nr,nr.next&&(nr.next.prev=nr,this._add_node(kt,nr))}for(let fr=Ht;fr!==null;fr=fr.next)it.push(fr.token)}else it=qe;if(this.continuing_subword_suffix)for(let kt=0;kt<it.length-1;++kt)it[kt]+=this.continuing_subword_suffix;return this.cache.set(pe,it),it}_add_node(pe,he){const qe=this.bpe_ranks.get(JSON.stringify([he.token,he.next.token]));qe!==void 0&&(he.score=qe+he.bias,pe.push(he))}encode(pe){const he=[];for(const qe of pe){if(this.ignore_merges&&this.tokens_to_ids.has(qe)){he.push(qe);continue}const it=this.bpe(qe);for(const kt of it)if(this.tokens_to_ids.has(kt))he.push(kt);else if(this.byte_fallback){const Ht=Array.from(this.text_encoder.encode(kt)).map(ir=>`<0x${ir.toString(16).toUpperCase().padStart(2,"0")}>`);Ht.every(ir=>this.tokens_to_ids.has(ir))?he.push(...Ht):he.push(this.unk_token)}else he.push(this.unk_token)}return he}}class Xe extends j{constructor(pe,he){super(pe),this.tokens_to_ids=N(he.target_lang?pe.vocab[he.target_lang]:pe.vocab),this.bos_token=he.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=he.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=he.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=he.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[qe,it]of this.tokens_to_ids)this.vocab[it]=qe}encode(pe){return pe}}class At extends u.Callable{constructor(pe){super(),this.config=pe}static fromConfig(pe){if(pe===null)return null;switch(pe.type){case"BertNormalizer":return new He(pe);case"Precompiled":return new os(pe);case"Sequence":return new ct(pe);case"Replace":return new xe(pe);case"NFC":return new ue(pe);case"NFD":return new ie(pe);case"NFKC":return new be(pe);case"NFKD":return new Ye(pe);case"Strip":return new Le(pe);case"StripAccents":return new lt(pe);case"Lowercase":return new ft(pe);case"Prepend":return new pt(pe);default:throw new Error(`Unknown Normalizer type: ${pe.type}`)}}normalize(pe){throw Error("normalize should be implemented in subclass.")}_call(pe){return this.normalize(pe)}}class xe extends At{normalize(pe){const he=S(this.config.pattern);return he===null?pe:pe.replaceAll(he,this.config.content)}}class ye extends At{constructor(){super(...arguments);Te(this,"form")}normalize(he){return he=he.normalize(this.form),he}}class ue extends ye{constructor(){super(...arguments);Te(this,"form","NFC")}}class ie extends ye{constructor(){super(...arguments);Te(this,"form","NFD")}}class be extends ye{constructor(){super(...arguments);Te(this,"form","NFKC")}}class Ye extends ye{constructor(){super(...arguments);Te(this,"form","NFKD")}}class Le extends At{normalize(pe){return this.config.strip_left&&this.config.strip_right?pe=pe.trim():(this.config.strip_left&&(pe=pe.trimStart()),this.config.strip_right&&(pe=pe.trimEnd())),pe}}class lt extends At{normalize(pe){return pe=O(pe),pe}}class ft extends At{normalize(pe){return pe=pe.toLowerCase(),pe}}class pt extends At{normalize(pe){return pe=this.config.prepend+pe,pe}}class ct extends At{constructor(pe){super(pe),this.normalizers=pe.normalizers.map(he=>At.fromConfig(he))}normalize(pe){return this.normalizers.reduce((he,qe)=>qe.normalize(he),pe)}}class He extends At{_tokenize_chinese_chars(pe){const he=[];for(let qe=0;qe<pe.length;++qe){const it=pe[qe],kt=it.charCodeAt(0);q(kt)?(he.push(" "),he.push(it),he.push(" ")):he.push(it)}return he.join("")}stripAccents(pe){return pe.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(pe){switch(pe){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(pe)}}_clean_text(pe){const he=[];for(const qe of pe){const it=qe.charCodeAt(0);it===0||it===65533||this._is_control(qe)||(/^\s$/.test(qe)?he.push(" "):he.push(qe))}return he.join("")}normalize(pe){return this.config.clean_text&&(pe=this._clean_text(pe)),this.config.handle_chinese_chars&&(pe=this._tokenize_chinese_chars(pe)),this.config.lowercase?(pe=pe.toLowerCase(),this.config.strip_accents!==!1&&(pe=this.stripAccents(pe))):this.config.strip_accents&&(pe=this.stripAccents(pe)),pe}}class Re extends u.Callable{static fromConfig(pe){if(pe===null)return null;switch(pe.type){case"BertPreTokenizer":return new Se(pe);case"Sequence":return new Ks(pe);case"Whitespace":return new ts(pe);case"WhitespaceSplit":return new zn(pe);case"Metaspace":return new Rr(pe);case"ByteLevel":return new Qe(pe);case"Split":return new ht(pe);case"Punctuation":return new wt(pe);case"Digits":return new Bt(pe);case"Replace":return new Va(pe);default:throw new Error(`Unknown PreTokenizer type: ${pe.type}`)}}pre_tokenize_text(pe,he){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(pe,he){return(Array.isArray(pe)?pe.map(qe=>this.pre_tokenize_text(qe,he)):this.pre_tokenize_text(pe,he)).flat()}_call(pe,he){return this.pre_tokenize(pe,he)}}class Se extends Re{constructor(pe){super(),this.pattern=new RegExp(`[^\\s${e}]+|[${e}]`,"gu")}pre_tokenize_text(pe,he){return pe.trim().match(this.pattern)||[]}}class Qe extends Re{constructor(pe){super(),this.config=pe,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=ke,this.text_encoder=new TextEncoder}pre_tokenize_text(pe,he){return this.add_prefix_space&&!pe.startsWith(" ")&&(pe=" "+pe),(this.use_regex?pe.match(this.pattern)||[]:[pe]).map(it=>Array.from(this.text_encoder.encode(it),kt=>this.byte_encoder[kt]).join(""))}}class ht extends Re{constructor(pe){super(),this.config=pe,this.pattern=S(this.config.pattern,this.config.invert)}pre_tokenize_text(pe,he){var qe;return this.pattern===null?[]:this.config.invert?pe.match(this.pattern)||[]:((qe=this.config.behavior)==null?void 0:qe.toLowerCase())==="removed"?pe.split(this.pattern).filter(it=>it):B(pe,this.pattern)}}class wt extends Re{constructor(pe){super(),this.config=pe,this.pattern=new RegExp(`[^${e}]+|[${e}]+`,"gu")}pre_tokenize_text(pe,he){return pe.match(this.pattern)||[]}}class Bt extends Re{constructor(pe){super(),this.config=pe;const he=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(he,"gu")}pre_tokenize_text(pe,he){return pe.match(this.pattern)||[]}}class Mt extends u.Callable{constructor(pe){super(),this.config=pe}static fromConfig(pe){if(pe===null)return null;switch(pe.type){case"TemplateProcessing":return new ve(pe);case"ByteLevel":return new H(pe);case"RobertaProcessing":return new zt(pe);case"BertProcessing":return new oe(pe);case"Sequence":return new ce(pe);default:throw new Error(`Unknown PostProcessor type: ${pe.type}`)}}post_process(pe,...he){throw Error("post_process should be implemented in subclass.")}_call(pe,...he){return this.post_process(pe,...he)}}class oe extends Mt{constructor(pe){super(pe),this.cls=pe.cls[0],this.sep=pe.sep[0]}post_process(pe,he=null,{add_special_tokens:qe=!0}={}){qe&&(pe=(0,p.mergeArrays)([this.cls],pe,[this.sep]));let it=new Array(pe.length).fill(0);if(he!==null){const kt=qe&&this instanceof zt?[this.sep]:[],Ht=qe?[this.sep]:[];pe=(0,p.mergeArrays)(pe,kt,he,Ht),it=(0,p.mergeArrays)(it,new Array(he.length+kt.length+Ht.length).fill(1))}return{tokens:pe,token_type_ids:it}}}class zt extends oe{}class ve extends Mt{constructor(pe){super(pe),this.single=pe.single,this.pair=pe.pair}post_process(pe,he=null,{add_special_tokens:qe=!0}={}){const it=he===null?this.single:this.pair;let kt=[],Ht=[];for(const ir of it)"SpecialToken"in ir?qe&&(kt.push(ir.SpecialToken.id),Ht.push(ir.SpecialToken.type_id)):"Sequence"in ir&&(ir.Sequence.id==="A"?(kt=(0,p.mergeArrays)(kt,pe),Ht=(0,p.mergeArrays)(Ht,new Array(pe.length).fill(ir.Sequence.type_id))):ir.Sequence.id==="B"&&(kt=(0,p.mergeArrays)(kt,he),Ht=(0,p.mergeArrays)(Ht,new Array(he.length).fill(ir.Sequence.type_id))));return{tokens:kt,token_type_ids:Ht}}}class H extends Mt{post_process(pe,he=null){return he&&(pe=(0,p.mergeArrays)(pe,he)),{tokens:pe}}}class ce extends Mt{constructor(pe){super(pe),this.processors=pe.processors.map(he=>Mt.fromConfig(he))}post_process(pe,he=null,qe={}){let it;for(const kt of this.processors)if(kt instanceof H)pe=kt.post_process(pe).tokens,he&&(he=kt.post_process(he).tokens);else{const Ht=kt.post_process(pe,he,qe);pe=Ht.tokens,it=Ht.token_type_ids}return{tokens:pe,token_type_ids:it}}}class ne extends u.Callable{constructor(pe){super(),this.config=pe,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=pe.trim_offsets}static fromConfig(pe){if(pe===null)return null;switch(pe.type){case"WordPiece":return new Nt(pe);case"Metaspace":return new $s(pe);case"ByteLevel":return new _t(pe);case"Replace":return new ze(pe);case"ByteFallback":return new $e(pe);case"Fuse":return new gt(pe);case"Strip":return new It(pe);case"Sequence":return new Xt(pe);case"CTC":return new Vt(pe);case"BPEDecoder":return new Jt(pe);default:throw new Error(`Unknown Decoder type: ${pe.type}`)}}_call(pe){return this.decode(pe)}decode(pe){return this.decode_chain(pe).join("")}decode_chain(pe){throw Error("`decode_chain` should be implemented in subclass.")}}class ze extends ne{decode_chain(pe){const he=S(this.config.pattern);return he===null?pe:pe.map(qe=>qe.replaceAll(he,this.config.content))}}class $e extends ne{constructor(pe){super(pe),this.text_decoder=new TextDecoder}decode_chain(pe){const he=[];let qe=[];for(const it of pe){let kt=null;if(it.length===6&&it.startsWith("<0x")&&it.endsWith(">")){const Ht=parseInt(it.slice(3,5),16);isNaN(Ht)||(kt=Ht)}if(kt!==null)qe.push(kt);else{if(qe.length>0){const Ht=this.text_decoder.decode(Uint8Array.from(qe));he.push(Ht),qe=[]}he.push(it)}}if(qe.length>0){const it=this.text_decoder.decode(Uint8Array.from(qe));he.push(it),qe=[]}return he}}class gt extends ne{decode_chain(pe){return[pe.join("")]}}class It extends ne{constructor(pe){super(pe),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(pe){return pe.map(he=>{let qe=0;for(let kt=0;kt<this.start&&he[kt]===this.content;++kt){qe=kt+1;continue}let it=he.length;for(let kt=0;kt<this.stop;++kt){const Ht=he.length-kt-1;if(he[Ht]===this.content){it=Ht;continue}else break}return he.slice(qe,it)})}}class Nt extends ne{constructor(pe){super(pe),this.cleanup=pe.cleanup}decode_chain(pe){return pe.map((he,qe)=>(qe!==0&&(he.startsWith(this.config.prefix)?he=he.replace(this.config.prefix,""):he=" "+he),this.cleanup&&(he=Z(he)),he))}}class _t extends ne{constructor(pe){super(pe),this.byte_decoder=Ee,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(pe){const he=pe.join(""),qe=new Uint8Array([...he].map(kt=>this.byte_decoder[kt]));return this.text_decoder.decode(qe)}decode_chain(pe){const he=[];let qe=[];for(const it of pe)this.added_tokens.find(kt=>kt.content===it)!==void 0?(qe.length>0&&(he.push(this.convert_tokens_to_string(qe)),qe=[]),he.push(it)):qe.push(it);return qe.length>0&&he.push(this.convert_tokens_to_string(qe)),he}}class Vt extends ne{constructor(pe){super(pe),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(pe){if(pe.length===0)return"";const he=[pe[0]];for(let kt=1;kt<pe.length;++kt)pe[kt]!==he.at(-1)&&he.push(pe[kt]);let it=he.filter(kt=>kt!==this.pad_token).join("");return this.cleanup&&(it=Z(it).replaceAll(this.word_delimiter_token," ").trim()),it}decode_chain(pe){return[this.convert_tokens_to_string(pe)]}}class Xt extends ne{constructor(pe){super(pe),this.decoders=pe.decoders.map(he=>ne.fromConfig(he))}decode_chain(pe){return this.decoders.reduce((he,qe)=>qe.decode_chain(he),pe)}}class Jt extends ne{constructor(pe){super(pe),this.suffix=this.config.suffix}decode_chain(pe){return pe.map((he,qe)=>he.replaceAll(this.suffix,qe===pe.length-1?"":" "))}}class wr extends ne{decode_chain(pe){let he="";for(let qe=1;qe<pe.length;qe+=2)he+=pe[qe];return[he]}}class Rr extends Re{constructor(pe){super(),this.addPrefixSpace=pe.add_prefix_space,this.replacement=pe.replacement,this.strRep=pe.str_rep||this.replacement,this.prepend_scheme=pe.prepend_scheme??"always"}pre_tokenize_text(pe,{section_index:he=void 0}={}){let qe=pe.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!qe.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&he===0)&&(qe=this.strRep+qe),[qe]}}class $s extends ne{constructor(pe){super(pe),this.addPrefixSpace=pe.add_prefix_space,this.replacement=pe.replacement}decode_chain(pe){const he=[];for(let qe=0;qe<pe.length;++qe){let it=pe[qe].replaceAll(this.replacement," ");this.addPrefixSpace&&qe==0&&it.startsWith(" ")&&(it=it.substring(1)),he.push(it)}return he}}class os extends At{constructor(pe){super(pe),this.charsmap=pe.precompiled_charsmap}normalize(pe){return pe=pe.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),pe=pe.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),pe.includes("～")?pe=pe.split("～").map(qe=>qe.normalize("NFKC")).join("～"):pe=pe.normalize("NFKC"),pe}}class Ks extends Re{constructor(pe){super(),this.tokenizers=pe.pretokenizers.map(he=>Re.fromConfig(he))}pre_tokenize_text(pe,he){return this.tokenizers.reduce((qe,it)=>it.pre_tokenize(qe,he),[pe])}}class ts extends Re{constructor(pe){super()}pre_tokenize_text(pe,he){return pe.match(/\w+|[^\w\s]+/g)||[]}}class zn extends Re{constructor(pe){super()}pre_tokenize_text(pe,he){return I(pe)}}class Va extends Re{constructor(pe){super(),this.config=pe,this.pattern=S(this.config.pattern),this.content=this.config.content}pre_tokenize_text(pe,he){return this.pattern===null?[pe]:[pe.replaceAll(this.pattern,this.config.content)]}}const Wa=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Pr(st,pe,he,qe){for(const it of Object.keys(st)){const kt=pe-st[it].length,Ht=he(it),ir=new Array(kt).fill(Ht);st[it]=qe==="right"?(0,p.mergeArrays)(st[it],ir):(0,p.mergeArrays)(ir,st[it])}}function Sr(st,pe){for(const he of Object.keys(st))st[he].length=pe}class Kt extends u.Callable{constructor(he,qe){super();Te(this,"return_token_type_ids",!1);Te(this,"padding_side","right");this._tokenizer_config=qe,this.normalizer=At.fromConfig(he.normalizer),this.pre_tokenizer=Re.fromConfig(he.pre_tokenizer),this.model=j.fromConfig(he.model,qe),this.post_processor=Mt.fromConfig(he.post_processor),this.decoder=ne.fromConfig(he.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const it of he.added_tokens){const kt=new D(it);this.added_tokens.push(kt),this.model.tokens_to_ids.set(kt.content,kt.id),this.model.vocab[kt.id]=kt.content,kt.special&&(this.special_tokens.push(kt.content),this.all_special_ids.push(kt.id))}if(this.additional_special_tokens=qe.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new k.DictionarySplitter(this.added_tokens.map(it=>it.content)),this.added_tokens_map=new Map(this.added_tokens.map(it=>[it.content,it])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=qe.model_max_length,this.remove_space=qe.remove_space,this.clean_up_tokenization_spaces=qe.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=qe.do_lowercase_and_remove_accent??!1,qe.padding_side&&(this.padding_side=qe.padding_side),this.legacy=!1,this.chat_template=qe.chat_template??null,Array.isArray(this.chat_template)){const it=Object.create(null);for(const{name:kt,template:Ht}of this.chat_template){if(typeof kt!="string"||typeof Ht!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');it[kt]=Ht}this.chat_template=it}this._compiled_template_cache=new Map}getToken(...he){for(const qe of he){const it=this._tokenizer_config[qe];if(it)if(typeof it=="object"){if(it.__type==="AddedToken")return it.content;throw Error(`Unknown token: ${it}`)}else return it}return null}static async from_pretrained(he,{progress_callback:qe=null,config:it=null,cache_dir:kt=null,local_files_only:Ht=!1,revision:ir="main",legacy:fr=null}={}){const nr=await M(he,{progress_callback:qe,config:it,cache_dir:kt,local_files_only:Ht,revision:ir,legacy:fr});return new this(...nr)}_call(he,{text_pair:qe=null,add_special_tokens:it=!0,padding:kt=!1,truncation:Ht=null,max_length:ir=null,return_tensor:fr=!0,return_token_type_ids:nr=null}={}){const Yt=Array.isArray(he);let Ar;if(Yt){if(he.length===0)throw Error("text array must be non-empty");if(qe!==null){if(Array.isArray(qe)){if(he.length!==qe.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Ar=he.map((xs,Ys)=>this._encode_plus(xs,{text_pair:qe[Ys],add_special_tokens:it,return_token_type_ids:nr}))}else Ar=he.map(xs=>this._encode_plus(xs,{add_special_tokens:it,return_token_type_ids:nr}))}else{if(he==null)throw Error("text may not be null or undefined");if(Array.isArray(qe))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Ar=[this._encode_plus(he,{text_pair:qe,add_special_tokens:it,return_token_type_ids:nr})]}if(ir===null?kt==="max_length"?ir=this.model_max_length:ir=(0,C.max)(Ar.map(xs=>xs.input_ids.length))[0]:Ht||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),ir=Math.min(ir,this.model_max_length??1/0),kt||Ht)for(let xs=0;xs<Ar.length;++xs)Ar[xs].input_ids.length!==ir&&(Ar[xs].input_ids.length>ir?Ht&&Sr(Ar[xs],ir):kt&&Pr(Ar[xs],ir,Ys=>Ys==="input_ids"?this.pad_token_id:0,this.padding_side));const Wr={};if(fr){if(!(kt&&Ht)&&Ar.some(Ys=>{var as;for(const kr of Object.keys(Ys))if(Ys[kr].length!==((as=Ar[0][kr])==null?void 0:as.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const xs=[Ar.length,Ar[0].input_ids.length];for(const Ys of Object.keys(Ar[0]))Wr[Ys]=new y.Tensor("int64",BigInt64Array.from(Ar.flatMap(as=>as[Ys]).map(BigInt)),xs)}else{for(const xs of Object.keys(Ar[0]))Wr[xs]=Ar.map(Ys=>Ys[xs]);if(!Yt)for(const xs of Object.keys(Wr))Wr[xs]=Wr[xs][0]}return Wr}_encode_text(he){if(he===null)return null;const qe=this.added_tokens_splitter.split(he);for(let kt=0;kt<qe.length;++kt){const Ht=this.added_tokens_map.get(qe[kt]);Ht&&(Ht.lstrip&&kt>0&&(qe[kt-1]=qe[kt-1].trimEnd()),Ht.rstrip&&kt<qe.length-1&&(qe[kt+1]=qe[kt+1].trimStart()))}return qe.flatMap((kt,Ht)=>{if(kt.length===0)return[];if(this.added_tokens_map.has(kt))return[kt];if(this.remove_space===!0&&(kt=kt.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(kt=Q(kt)),this.normalizer!==null&&(kt=this.normalizer(kt)),kt.length===0)return[];const ir=this.pre_tokenizer!==null?this.pre_tokenizer(kt,{section_index:Ht}):[kt];return this.model(ir)})}_encode_plus(he,{text_pair:qe=null,add_special_tokens:it=!0,return_token_type_ids:kt=null}={}){const{tokens:Ht,token_type_ids:ir}=this._tokenize_helper(he,{pair:qe,add_special_tokens:it}),fr=this.model.convert_tokens_to_ids(Ht),nr={input_ids:fr,attention_mask:new Array(fr.length).fill(1)};return(kt??this.return_token_type_ids)&&ir&&(nr.token_type_ids=ir),nr}_tokenize_helper(he,{pair:qe=null,add_special_tokens:it=!1}={}){const kt=this._encode_text(he),Ht=this._encode_text(qe);return this.post_processor?this.post_processor(kt,Ht,{add_special_tokens:it}):{tokens:(0,p.mergeArrays)(kt??[],Ht??[])}}tokenize(he,{pair:qe=null,add_special_tokens:it=!1}={}){return this._tokenize_helper(he,{pair:qe,add_special_tokens:it}).tokens}encode(he,{text_pair:qe=null,add_special_tokens:it=!0,return_token_type_ids:kt=null}={}){return this._encode_plus(he,{text_pair:qe,add_special_tokens:it,return_token_type_ids:kt}).input_ids}batch_decode(he,qe={}){return he instanceof y.Tensor&&(he=he.tolist()),he.map(it=>this.decode(it,qe))}decode(he,qe={}){if(he instanceof y.Tensor&&(he=V(he)),!Array.isArray(he)||he.length===0||!(0,p.isIntegralNumber)(he[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(he,qe)}decode_single(he,{skip_special_tokens:qe=!1,clean_up_tokenization_spaces:it=null}){let kt=this.model.convert_ids_to_tokens(he);qe&&(kt=kt.filter(ir=>!this.special_tokens.includes(ir)));let Ht=this.decoder?this.decoder(kt):kt.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ht=Ht.replaceAll(this.decoder.end_of_word_suffix," "),qe&&(Ht=Ht.trim())),(it??this.clean_up_tokenization_spaces)&&(Ht=Z(Ht)),Ht}get_chat_template({chat_template:he=null,tools:qe=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const it=this.chat_template;if(he!==null&&Object.hasOwn(it,he))he=it[he];else if(he===null)if(qe!==null&&"tool_use"in it)he=it.tool_use;else if("default"in it)he=it.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(it).sort()}.`)}else if(he===null)if(this.chat_template)he=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return he}apply_chat_template(he,{tools:qe=null,documents:it=null,chat_template:kt=null,add_generation_prompt:Ht=!1,tokenize:ir=!0,padding:fr=!1,truncation:nr=!1,max_length:Yt=null,return_tensor:Ar=!0,return_dict:Wr=!1,tokenizer_kwargs:xs={},...Ys}={}){if(kt=this.get_chat_template({chat_template:kt,tools:qe}),typeof kt!="string")throw Error(`chat_template must be a string, but got ${typeof kt}`);let as=this._compiled_template_cache.get(kt);as===void 0&&(as=new _.Template(kt),this._compiled_template_cache.set(kt,as));const kr=Object.create(null);for(const qt of Wa){const Tr=this.getToken(qt);Tr&&(kr[qt]=Tr)}const Ns=as.render({messages:he,add_generation_prompt:Ht,tools:qe,documents:it,...kr,...Ys});if(ir){const qt=this._call(Ns,{add_special_tokens:!1,padding:fr,truncation:nr,max_length:Yt,return_tensor:Ar,...xs});return Wr?qt:qt.input_ids}return Ns}}class Bs extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class $a extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class en extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class On extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Pn extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Dn extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class qn extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class sa extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Zt extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class Br extends Kt{}class zr extends Kt{}class qs extends Kt{constructor(he,qe){super(he,qe);Te(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class aa extends Kt{constructor(){super(...arguments);Te(this,"return_token_type_ids",!0)}}class ks extends Kt{}class vn extends Kt{}class Qn extends Kt{}class Sn extends Kt{constructor(pe,he){super(pe,he),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(qe=>this.languageRegex.test(qe)),this.lang_to_token=qe=>qe}_build_translation_inputs(pe,he,qe){return tn(this,pe,he,qe)}}class ci extends Sn{}class ui extends Kt{}class di extends Kt{}const Fa="▁";class ai extends Kt{constructor(he,qe){super(he,qe);Te(this,"padding_side","left");this.legacy=qe.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Rr({replacement:Fa,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(he){if(he===null)return null;if(this.legacy||he.length===0)return super._encode_text(he);let qe=super._encode_text(Fa+he.replaceAll(Fa," "));return qe.length>1&&qe[0]===Fa&&this.special_tokens.includes(qe[1])&&(qe=qe.slice(1)),qe}}class fi extends Kt{}class Ri extends Kt{}class Xn extends Kt{}class Zn extends Kt{}class ba extends Kt{}class Gi extends Kt{}class Fi extends Kt{}class Jn extends Kt{}class gi extends Kt{}function tn(st,pe,he,qe){if(!("language_codes"in st)||!Array.isArray(st.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in st)||!(st.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in st)||typeof st.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const it=qe.src_lang,kt=qe.tgt_lang;if(!st.language_codes.includes(kt))throw new Error(`Target language code "${kt}" is not valid. Must be one of: {${st.language_codes.join(", ")}}`);if(it!==void 0){if(!st.language_codes.includes(it))throw new Error(`Source language code "${it}" is not valid. Must be one of: {${st.language_codes.join(", ")}}`);for(const Ht of st.post_processor.config.single)if("SpecialToken"in Ht&&st.languageRegex.test(Ht.SpecialToken.id)){Ht.SpecialToken.id=st.lang_to_token(it);break}}return qe.forced_bos_token_id=st.model.convert_tokens_to_ids([st.lang_to_token(kt)])[0],st._call(pe,he)}class Ei extends Kt{constructor(pe,he){super(pe,he),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(qe=>this.languageRegex.test(qe)),this.lang_to_token=qe=>qe}_build_translation_inputs(pe,he,qe){return tn(this,pe,he,qe)}}class pi extends Kt{constructor(pe,he){super(pe,he),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(qe=>this.languageRegex.test(qe)).map(qe=>qe.slice(2,-2)),this.lang_to_token=qe=>`__${qe}__`}_build_translation_inputs(pe,he,qe){return tn(this,pe,he,qe)}}class Jr extends Kt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(pe,{return_timestamps:he=!1,return_language:qe=!1,time_precision:it=null,force_full_sequences:kt=!0}={}){if(it===null)throw Error("Must specify time_precision");let Ht=null;const ir=he==="word";function fr(){return{language:Ht,timestamp:[null,null],text:""}}const nr=[];let Yt=fr(),Ar=0;const Wr=this.timestamp_begin,Ys=Wr+1500;let as=[],kr=[],Ns=!1,qt=null;const Tr=new Set(this.all_special_ids);for(const Gs of pe){const Fs=Gs.tokens,Ls=ir?Gs.token_timestamps:null;let Ms=null,fa=Wr;if("stride"in Gs){const[Ca,na,za]=Gs.stride;if(Ar-=na,qt=Ca-za,na&&(fa=na/it+Wr),za)for(let Hr=Fs.length-1;Hr>=0;--Hr){const la=Number(Fs[Hr]);if(la>=Wr){if(Ms!==null&&(la-Wr)*it<qt)break;Ms=la}}}let Ba=[],Ma=[];for(let Ca=0;Ca<Fs.length;++Ca){const na=Number(Fs[Ca]);if(Tr.has(na)){const za=this.decode([na]),Hr=v.WHISPER_LANGUAGE_MAPPING.get(za.slice(2,-2));if(Hr!==void 0){if(Ht!==null&&Hr!==Ht&&!he){as.push(Ba);const la=this.findLongestCommonSequence(as)[0],Rn=this.decode(la);Yt.text=Rn,nr.push(Yt),as=[],Ba=[],Yt=fr()}Ht=Yt.language=Hr}}else if(na>=Wr&&na<=Ys){const za=(na-Wr)*it+Ar,Hr=(0,C.round)(za,2);if(Ms!==null&&na>=Ms)Ns=!0;else if(Ns||as.length>0&&na<fa)Ns=!1;else if(Yt.timestamp[0]===null)Yt.timestamp[0]=Hr;else if(Hr!==Yt.timestamp[0]){Yt.timestamp[1]=Hr,as.push(Ba),ir&&kr.push(Ma);const[la,Rn]=this.findLongestCommonSequence(as,kr),Mo=this.decode(la);Yt.text=Mo,ir&&(Yt.words=this.collateWordTimestamps(la,Rn,Ht)),nr.push(Yt),as=[],Ba=[],kr=[],Ma=[],Yt=fr()}}else if(Ba.push(na),ir){let za=(0,C.round)(Ls[Ca]+Ar,2),Hr;if(Ca+1<Ls.length){Hr=(0,C.round)(Ls[Ca+1]+Ar,2);const la=this.decode([na]);c.test(la)&&(Hr=(0,C.round)(Math.min(za+it,Hr),2))}else Hr=null;Ma.push([za,Hr])}}if("stride"in Gs){const[Ca,na,za]=Gs.stride;Ar+=Ca-za}Ba.length>0?(as.push(Ba),ir&&kr.push(Ma)):as.every(Ca=>Ca.length===0)&&(Yt=fr(),as=[],Ba=[],kr=[],Ma=[])}if(as.length>0){if(kt&&he)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Gs,Fs]=this.findLongestCommonSequence(as,kr),Ls=this.decode(Gs);Yt.text=Ls,ir&&(Yt.words=this.collateWordTimestamps(Gs,Fs,Ht)),nr.push(Yt)}let ha=Object.create(null);const xa=nr.map(Gs=>Gs.text).join("");if(he||qe){for(let Gs=0;Gs<nr.length;++Gs){const Fs=nr[Gs];he||delete Fs.timestamp,qe||delete Fs.language}if(ir){const Gs=[];for(const Fs of nr)for(const Ls of Fs.words)Gs.push(Ls);ha={chunks:Gs}}else ha={chunks:nr}}return[xa,ha]}findLongestCommonSequence(pe,he=null){let qe=pe[0],it=qe.length,kt=[];const Ht=Array.isArray(he)&&he.length>0;let ir=Ht?[]:null,fr=Ht?he[0]:null;for(let nr=1;nr<pe.length;++nr){const Yt=pe[nr];let Ar=0,Wr=[it,it,0,0];const xs=Yt.length;for(let ha=1;ha<it+xs;++ha){const xa=Math.max(0,it-ha),Gs=Math.min(it,it+xs-ha),Fs=qe.slice(xa,Gs),Ls=Math.max(0,ha-it),Ms=Math.min(xs,ha),fa=Yt.slice(Ls,Ms);if(Fs.length!==fa.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Ba;Ht?Ba=Fs.filter((na,za)=>na===fa[za]&&fr[xa+za]<=he[nr][Ls+za]).length:Ba=Fs.filter((na,za)=>na===fa[za]).length;const Ma=ha/1e4,Ca=Ba/ha+Ma;Ba>1&&Ca>Ar&&(Ar=Ca,Wr=[xa,Gs,Ls,Ms])}const[Ys,as,kr,Ns]=Wr,qt=Math.floor((as+Ys)/2),Tr=Math.floor((Ns+kr)/2);kt.push(...qe.slice(0,qt)),qe=Yt.slice(Tr),it=qe.length,Ht&&(ir.push(...fr.slice(0,qt)),fr=he[nr].slice(Tr))}return kt.push(...qe),Ht?(ir.push(...fr),[kt,ir]):[kt,[]]}collateWordTimestamps(pe,he,qe){const[it,kt,Ht]=this.combineTokensIntoWords(pe,qe),ir=[];for(let fr=0;fr<it.length;++fr){const nr=Ht[fr];ir.push({text:it[fr],timestamp:[he[nr.at(0)][0],he[nr.at(-1)][1]]})}return ir}combineTokensIntoWords(pe,he,qe=`"'“¡¿([{-`,it=`"'.。,，!！?？:：”)]}、`){he=he??"english";let kt,Ht,ir;return["chinese","japanese","thai","lao","myanmar"].includes(he)?[kt,Ht,ir]=this.splitTokensOnUnicode(pe):[kt,Ht,ir]=this.splitTokensOnSpaces(pe),this.mergePunctuations(kt,Ht,ir,qe,it)}decode(pe,he){let qe;return he!=null&&he.decode_with_timestamps?(pe instanceof y.Tensor&&(pe=V(pe)),qe=this.decodeWithTimestamps(pe,he)):qe=super.decode(pe,he),qe}decodeWithTimestamps(pe,he){const qe=(he==null?void 0:he.time_precision)??.02,it=Array.from(this.all_special_ids).at(-1)+1;let kt=[[]];for(let Ht of pe)if(Ht=Number(Ht),Ht>=it){const ir=((Ht-it)*qe).toFixed(2);kt.push(`<|${ir}|>`),kt.push([])}else kt[kt.length-1].push(Ht);return kt=kt.map(Ht=>typeof Ht=="string"?Ht:super.decode(Ht,he)),kt.join("")}splitTokensOnUnicode(pe){const he=this.decode(pe,{decode_with_timestamps:!0}),qe="�",it=[],kt=[],Ht=[];let ir=[],fr=[],nr=0;for(let Yt=0;Yt<pe.length;++Yt){const Ar=pe[Yt];ir.push(Ar),fr.push(Yt);const Wr=this.decode(ir,{decode_with_timestamps:!0});(!Wr.includes(qe)||he[nr+Wr.indexOf(qe)]===qe)&&(it.push(Wr),kt.push(ir),Ht.push(fr),ir=[],fr=[],nr+=Wr.length)}return[it,kt,Ht]}splitTokensOnSpaces(pe){const[he,qe,it]=this.splitTokensOnUnicode(pe),kt=[],Ht=[],ir=[],fr=new RegExp(`^[${e}]$`,"gu");for(let nr=0;nr<he.length;++nr){const Yt=he[nr],Ar=qe[nr],Wr=it[nr],xs=Ar[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Ys=Yt.startsWith(" "),as=Yt.trim(),kr=fr.test(as);if(xs||Ys||kr||kt.length===0)kt.push(Yt),Ht.push(Ar),ir.push(Wr);else{const Ns=kt.length-1;kt[Ns]+=Yt,Ht[Ns].push(...Ar),ir[Ns].push(...Wr)}}return[kt,Ht,ir]}mergePunctuations(pe,he,qe,it,kt){const Ht=structuredClone(pe),ir=structuredClone(he),fr=structuredClone(qe);let nr=Ht.length-2,Yt=Ht.length-1;for(;nr>=0;)Ht[nr].startsWith(" ")&&it.includes(Ht[nr].trim())?(Ht[Yt]=Ht[nr]+Ht[Yt],ir[Yt]=(0,p.mergeArrays)(ir[nr],ir[Yt]),fr[Yt]=(0,p.mergeArrays)(fr[nr],fr[Yt]),Ht[nr]="",ir[nr]=[],fr[nr]=[]):Yt=nr,--nr;for(nr=0,Yt=1;Yt<Ht.length;)!Ht[nr].endsWith(" ")&&kt.includes(Ht[Yt])?(Ht[nr]+=Ht[Yt],ir[nr]=(0,p.mergeArrays)(ir[nr],ir[Yt]),fr[nr]=(0,p.mergeArrays)(fr[nr],fr[Yt]),Ht[Yt]="",ir[Yt]=[],fr[Yt]=[]):nr=Yt,++Yt;return[Ht.filter(Ar=>Ar),ir.filter(Ar=>Ar.length>0),fr.filter(Ar=>Ar.length>0)]}}class Cs extends Kt{}class bn extends Kt{}class Nn extends Kt{}class zi extends Kt{constructor(pe,he){super(pe,he),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(qe=>this.languageRegex.test(qe)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(pe){if(pe===null)return null;const[he,...qe]=pe.trim().split(this.languageRegex);if(qe.length===0)return super._encode_text(he);if(qe.length===2){const[it,kt]=qe;return this.supported_language_codes.includes(it)||console.warn(`Unsupported language code "${it}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,p.mergeArrays)([it],super._encode_text(kt))}}}class Bi extends Kt{}class rn extends Kt{}class Ln extends Kt{}class Qt extends Kt{}class Be extends Kt{}class ot extends Kt{constructor(pe,he){super(pe,he),this.decoder=new wr({})}}class bt extends Kt{}class Tt extends Kt{}class Pt{static async from_pretrained(pe,{progress_callback:he=null,config:qe=null,cache_dir:it=null,local_files_only:kt=!1,revision:Ht="main",legacy:ir=null}={}){var Wr;const[fr,nr]=await M(pe,{progress_callback:he,config:qe,cache_dir:it,local_files_only:kt,revision:Ht,legacy:ir}),Yt=((Wr=nr.tokenizer_class)==null?void 0:Wr.replace(/Fast$/,""))??"PreTrainedTokenizer";let Ar=this.TOKENIZER_CLASS_MAPPING[Yt];return Ar||(console.warn(`Unknown tokenizer class "${Yt}", attempting to construct from base class.`),Ar=Kt),new Ar(fr,nr)}}Te(Pt,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:ks,DistilBertTokenizer:Br,CamembertTokenizer:zr,DebertaTokenizer:Pn,DebertaV2Tokenizer:Dn,BertTokenizer:Bs,HerbertTokenizer:qn,ConvBertTokenizer:sa,RoFormerTokenizer:Zt,XLMTokenizer:qs,ElectraTokenizer:aa,MobileBertTokenizer:en,SqueezeBertTokenizer:On,AlbertTokenizer:$a,GPT2Tokenizer:vn,BartTokenizer:Qn,MBartTokenizer:Sn,MBart50Tokenizer:ci,RobertaTokenizer:ui,WhisperTokenizer:Jr,CodeGenTokenizer:Cs,CLIPTokenizer:bn,SiglipTokenizer:Nn,MarianTokenizer:zi,BloomTokenizer:di,NllbTokenizer:Ei,M2M100Tokenizer:pi,LlamaTokenizer:ai,CodeLlamaTokenizer:fi,XLMRobertaTokenizer:Ri,MPNetTokenizer:Xn,FalconTokenizer:Zn,GPTNeoXTokenizer:ba,EsmTokenizer:Gi,Wav2Vec2CTCTokenizer:Bi,BlenderbotTokenizer:rn,BlenderbotSmallTokenizer:Ln,SpeechT5Tokenizer:Qt,NougatTokenizer:Be,VitsTokenizer:ot,Qwen2Tokenizer:Fi,GemmaTokenizer:Jn,Grok1Tokenizer:gi,CohereTokenizer:bt,MgpstrTokenizer:Tt,PreTrainedTokenizer:Kt})},"./src/utils/audio.js":(i,o,a)=>{a.r(o),a.d(o,{RawAudio:()=>Ie,hamming:()=>B,hanning:()=>M,mel_filter_bank:()=>q,read_audio:()=>_,spectrogram:()=>P,window_function:()=>J});var u=a("./src/utils/hub.js"),p=a("./src/utils/maths.js"),h=a("./src/utils/core.js"),C=a("./src/env.js"),y=a("?7a2c"),k=a("./src/utils/tensor.js");async function _(ge,ke){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Ee=await(await(0,u.getFile)(ge)).arrayBuffer(),Ne=new AudioContext({sampleRate:ke});typeof ke>"u"&&console.warn(`No sampling rate provided, using default of ${Ne.sampleRate}Hz.`);const Xe=await Ne.decodeAudioData(Ee);let At;if(Xe.numberOfChannels===2){const xe=Math.sqrt(2),ye=Xe.getChannelData(0),ue=Xe.getChannelData(1);At=new Float32Array(ye.length);for(let ie=0;ie<Xe.length;++ie)At[ie]=xe*(ye[ie]+ue[ie])/2}else At=Xe.getChannelData(0);return At}function v(ge,ke){if(ge<1)return new Float64Array;if(ge===1)return new Float64Array([1]);const Ee=1-ke,Ne=2*Math.PI/(ge-1),Xe=new Float64Array(ge);for(let At=0;At<ge;++At)Xe[At]=ke-Ee*Math.cos(At*Ne);return Xe}function M(ge){return v(ge,.5)}function B(ge){return v(ge,.54)}const S={htk:ge=>2595*Math.log10(1+ge/700),kaldi:ge=>1127*Math.log(1+ge/700),slaney:(ge,ke=1e3,Ee=15,Ne=27/Math.log(6.4))=>ge>=ke?Ee+Math.log(ge/ke)*Ne:3*ge/200};function N(ge,ke="htk"){const Ee=S[ke];if(!Ee)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ge=="number"?Ee(ge):ge.map(Ne=>Ee(Ne))}const V={htk:ge=>700*(10**(ge/2595)-1),kaldi:ge=>700*(Math.exp(ge/1127)-1),slaney:(ge,ke=1e3,Ee=15,Ne=Math.log(6.4)/27)=>ge>=Ee?ke*Math.exp(Ne*(ge-Ee)):200*ge/3};function Z(ge,ke="htk"){const Ee=V[ke];if(!Ee)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ge=="number"?Ee(ge):ge.map(Ne=>Ee(Ne))}function O(ge,ke){const Ee=Float64Array.from({length:ke.length-1},(xe,ye)=>ke[ye+1]-ke[ye]),Ne=Array.from({length:ge.length},()=>new Array(ke.length));for(let xe=0;xe<ge.length;++xe){const ye=Ne[xe];for(let ue=0;ue<ke.length;++ue)ye[ue]=ke[ue]-ge[xe]}const Xe=ke.length-2,At=Array.from({length:Xe},()=>new Array(ge.length));for(let xe=0;xe<ge.length;++xe){const ye=Ne[xe];for(let ue=0;ue<Xe;++ue){const ie=-ye[ue]/Ee[ue],be=ye[ue+2]/Ee[ue+1];At[ue][xe]=Math.max(0,Math.min(ie,be))}}return At}function Q(ge,ke,Ee){const Ne=(ke-ge)/(Ee-1);return Float64Array.from({length:Ee},(Xe,At)=>ge+Ne*At)}function q(ge,ke,Ee,Ne,Xe,At=null,xe="htk",ye=!1){if(At!==null&&At!=="slaney")throw new Error('norm must be one of null or "slaney"');const ue=N(Ee,xe),ie=N(Ne,xe),be=Q(ue,ie,ke+2);let Ye=Z(be,xe),Le;if(ye){const ft=Xe/(ge*2);Le=N(Float64Array.from({length:ge},(pt,ct)=>ct*ft),xe),Ye=be}else Le=Q(0,Math.floor(Xe/2),ge);const lt=O(Le,Ye);if(At!==null&&At==="slaney")for(let ft=0;ft<ke;++ft){const pt=lt[ft],ct=2/(Ye[ft+2]-Ye[ft]);for(let He=0;He<ge;++He)pt[He]*=ct}return lt}function f(ge,ke,Ee){const Ne=new ge.constructor(ge.length+ke+Ee),Xe=ge.length-1;for(let At=0;At<ge.length;++At)Ne[ke+At]=ge[At];for(let At=1;At<=ke;++At)Ne[ke-At]=ge[(0,h.calculateReflectOffset)(At,Xe)];for(let At=1;At<=Ee;++At)Ne[Xe+ke+At]=ge[(0,h.calculateReflectOffset)(Xe-At,Xe)];return Ne}function I(ge,ke,Ee,Ne,Xe){if(Ee<=0)throw new Error("reference must be greater than zero");if(Ne<=0)throw new Error("min_value must be greater than zero");Ee=Math.max(Ne,Ee);const At=Math.log10(Ee);for(let xe=0;xe<ge.length;++xe)ge[xe]=ke*Math.log10(Math.max(Ne,ge[xe])-At);if(Xe!==null){if(Xe<=0)throw new Error("db_range must be greater than zero");const xe=(0,p.max)(ge)[0]-Xe;for(let ye=0;ye<ge.length;++ye)ge[ye]=Math.max(ge[ye],xe)}return ge}function e(ge,ke=1,Ee=1e-5,Ne=null){return I(ge,20,ke,Ee,Ne)}function c(ge,ke=1,Ee=1e-10,Ne=null){return I(ge,10,ke,Ee,Ne)}async function P(ge,ke,Ee,Ne,{fft_length:Xe=null,power:At=1,center:xe=!0,pad_mode:ye="reflect",onesided:ue=!0,preemphasis:ie=null,mel_filters:be=null,mel_floor:Ye=1e-10,log_mel:Le=null,reference:lt=1,min_value:ft=1e-10,db_range:pt=null,remove_dc_offset:ct=null,min_num_frames:He=null,max_num_frames:Re=null,do_pad:Se=!0,transpose:Qe=!1}={}){const ht=ke.length;if(Xe===null&&(Xe=Ee),Ee>Xe)throw Error(`frame_length (${Ee}) may not be larger than fft_length (${Xe})`);if(ht!==Ee)throw new Error(`Length of the window (${ht}) must equal frame_length (${Ee})`);if(Ne<=0)throw new Error("hop_length must be greater than zero");if(At===null&&be!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(xe){if(ye!=="reflect")throw new Error(`pad_mode="${ye}" not implemented yet.`);const gt=Math.floor((Xe-1)/2)+1;ge=f(ge,gt,gt)}let wt=Math.floor(1+Math.floor((ge.length-Ee)/Ne));He!==null&&wt<He&&(wt=He);const Bt=ue?Math.floor(Xe/2)+1:Xe;let Mt=wt,oe=wt;Re!==null&&(Re>wt?Se&&(oe=Re):oe=Mt=Re);const zt=new p.FFT(Xe),ve=new Float64Array(Xe),H=new Float64Array(zt.outputBufferSize),ce=new Float32Array(Bt*oe);for(let gt=0;gt<Mt;++gt){const It=gt*Ne,Nt=Math.min(ge.length-It,Ee);Nt!==Ee&&ve.fill(0,0,Ee);for(let _t=0;_t<Nt;++_t)ve[_t]=ge[It+_t];if(ct){let _t=0;for(let Xt=0;Xt<Nt;++Xt)_t+=ve[Xt];const Vt=_t/Nt;for(let Xt=0;Xt<Nt;++Xt)ve[Xt]-=Vt}if(ie!==null){for(let _t=Nt-1;_t>=1;--_t)ve[_t]-=ie*ve[_t-1];ve[0]*=1-ie}for(let _t=0;_t<ke.length;++_t)ve[_t]*=ke[_t];zt.realTransform(H,ve);for(let _t=0;_t<Bt;++_t){const Vt=_t<<1;ce[_t*oe+gt]=H[Vt]**2+H[Vt+1]**2}}if(At!==null&&At!==2){const gt=2/At;for(let It=0;It<ce.length;++It)ce[It]**=gt}const ne=be.length;let ze=await(0,k.matmul)(new k.Tensor("float32",be.flat(),[ne,Bt]),new k.Tensor("float32",ce,[Bt,oe]));Qe&&(ze=ze.transpose(1,0));const $e=ze.data;for(let gt=0;gt<$e.length;++gt)$e[gt]=Math.max(Ye,$e[gt]);if(At!==null&&Le!==null){const gt=Math.min($e.length,Mt*ne);switch(Le){case"log":for(let It=0;It<gt;++It)$e[It]=Math.log($e[It]);break;case"log10":for(let It=0;It<gt;++It)$e[It]=Math.log10($e[It]);break;case"dB":if(At===1)e($e,lt,ft,pt);else if(At===2)c($e,lt,ft,pt);else throw new Error(`Cannot use log_mel option '${Le}' with power ${At}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Le}'`)}}return ze}function J(ge,ke,{periodic:Ee=!0,frame_length:Ne=null,center:Xe=!0}={}){const At=Ee?ge+1:ge;let xe;switch(ke){case"boxcar":xe=new Float64Array(At).fill(1);break;case"hann":case"hann_window":xe=M(At);break;case"hamming":xe=B(At);break;case"povey":xe=M(At).map(ye=>Math.pow(ye,.85));break;default:throw new Error(`Unknown window type ${ke}.`)}if(Ee&&(xe=xe.subarray(0,ge)),Ne===null)return xe;if(ge>Ne)throw new Error(`Length of the window (${ge}) may not be larger than frame_length (${Ne})`);return xe}function D(ge,ke){let Ee=44;const Ne=new ArrayBuffer(Ee+ge.length*4),Xe=new DataView(Ne);j(Xe,0,"RIFF"),Xe.setUint32(4,36+ge.length*4,!0),j(Xe,8,"WAVE"),j(Xe,12,"fmt "),Xe.setUint32(16,16,!0),Xe.setUint16(20,3,!0),Xe.setUint16(22,1,!0),Xe.setUint32(24,ke,!0),Xe.setUint32(28,ke*4,!0),Xe.setUint16(32,4,!0),Xe.setUint16(34,32,!0),j(Xe,36,"data"),Xe.setUint32(40,ge.length*4,!0);for(let At=0;At<ge.length;++At,Ee+=4)Xe.setFloat32(Ee,ge[At],!0);return Ne}function j(ge,ke,Ee){for(let Ne=0;Ne<Ee.length;++Ne)ge.setUint8(ke+Ne,Ee.charCodeAt(Ne))}class Ie{constructor(ke,Ee){this.audio=ke,this.sampling_rate=Ee}toWav(){return D(this.audio,this.sampling_rate)}toBlob(){const ke=this.toWav();return new Blob([ke],{type:"audio/wav"})}async save(ke){let Ee;if(C.apis.IS_BROWSER_ENV){if(C.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");Ee=h.saveBlob}else if(C.apis.IS_FS_AVAILABLE)Ee=async(Ne,Xe)=>{let At=await Xe.arrayBuffer();y.writeFileSync(Ne,Buffer.from(At))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await Ee(ke,this.toBlob())}}},"./src/utils/constants.js":(i,o,a)=>{a.r(o),a.d(o,{CHAT_TEMPLATE_NAME:()=>k,CONFIG_NAME:()=>p,FEATURE_EXTRACTOR_NAME:()=>h,GENERATION_CONFIG_NAME:()=>_,GITHUB_ISSUE_URL:()=>u,IMAGE_PROCESSOR_NAME:()=>C,PROCESSOR_NAME:()=>y});const u="https://github.com/huggingface/transformers.js/issues/new/choose",p="config.json",h="preprocessor_config.json",C=h,y="processor_config.json",k="chat_template.json",_="generation_config.json"},"./src/utils/core.js":(i,o,a)=>{a.r(o),a.d(o,{calculateDimensions:()=>_,calculateReflectOffset:()=>S,count:()=>O,dispatchCallback:()=>u,escapeRegExp:()=>h,isIntegralNumber:()=>y,isNullishDimension:()=>k,isTypedArray:()=>C,len:()=>Z,mergeArrays:()=>M,pick:()=>V,pop:()=>v,product:()=>B,reverseDictionary:()=>p,saveBlob:()=>N});function u(Q,q){Q&&Q(q)}function p(Q){return Object.fromEntries(Object.entries(Q).map(([q,f])=>[f,q]))}function h(Q){return Q.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function C(Q){var q,f,I;return((I=(f=(q=Q==null?void 0:Q.prototype)==null?void 0:q.__proto__)==null?void 0:f.constructor)==null?void 0:I.name)==="TypedArray"}function y(Q){return Number.isInteger(Q)||typeof Q=="bigint"}function k(Q){return Q==null||Q===-1}function _(Q){const q=[];let f=Q;for(;Array.isArray(f);)q.push(f.length),f=f[0];return q}function v(Q,q,f=void 0){const I=Q[q];if(I!==void 0)return delete Q[q],I;if(f===void 0)throw Error(`Key ${q} does not exist in object.`);return f}function M(...Q){return Array.prototype.concat.apply([],Q)}function B(...Q){return Q.reduce((q,f)=>q.flatMap(I=>f.map(e=>[I,e])))}function S(Q,q){return Math.abs((Q+q)%(2*q)-q)}function N(Q,q){const f=URL.createObjectURL(q),I=document.createElement("a");I.href=f,I.download=Q,I.click(),I.remove(),URL.revokeObjectURL(f)}function V(Q,q){return Object.assign({},...q.map(f=>{if(Q[f]!==void 0)return{[f]:Q[f]}}))}function Z(Q){let q=0;for(const f of Q)++q;return q}function O(Q,q){let f=0;for(const I of Q)I===q&&++f;return f}},"./src/utils/data-structures.js":(i,o,a)=>{a.r(o),a.d(o,{CharTrie:()=>p,DictionarySplitter:()=>k,PriorityQueue:()=>u,TokenLattice:()=>C});class u{constructor(v=(B,S)=>B>S,M=1/0){this._heap=[],this._comparator=v,this._maxSize=M}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...v){return this.extend(v)}extend(v){for(const M of v)if(this.size<this._maxSize)this._heap.push(M),this._siftUp();else{const B=this._smallest();this._comparator(M,this._heap[B])&&(this._heap[B]=M,this._siftUpFrom(B))}return this.size}pop(){const v=this.peek(),M=this.size-1;return M>0&&this._swap(0,M),this._heap.pop(),this._siftDown(),v}replace(v){const M=this.peek();return this._heap[0]=v,this._siftDown(),M}_parent(v){return(v+1>>>1)-1}_left(v){return(v<<1)+1}_right(v){return v+1<<1}_greater(v,M){return this._comparator(this._heap[v],this._heap[M])}_swap(v,M){const B=this._heap[v];this._heap[v]=this._heap[M],this._heap[M]=B}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(v){for(;v>0&&this._greater(v,this._parent(v));)this._swap(v,this._parent(v)),v=this._parent(v)}_siftDown(){let v=0;for(;this._left(v)<this.size&&this._greater(this._left(v),v)||this._right(v)<this.size&&this._greater(this._right(v),v);){const M=this._right(v)<this.size&&this._greater(this._right(v),this._left(v))?this._right(v):this._left(v);this._swap(v,M),v=M}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class p{constructor(){this.root=h.default()}extend(v){for(const M of v)this.push(M)}push(v){let M=this.root;for(const B of v){let S=M.children.get(B);S===void 0&&(S=h.default(),M.children.set(B,S)),M=S}M.isLeaf=!0}*commonPrefixSearch(v){let M=this.root;if(M===void 0)return;let B="";for(const S of v){if(B+=S,M=M.children.get(S),M===void 0)return;M.isLeaf&&(yield B)}}}class h{constructor(v,M){this.isLeaf=v,this.children=M}static default(){return new h(!1,new Map)}}class C{constructor(v,M,B){this.chars=Array.from(v),this.len=this.chars.length,this.bosTokenId=M,this.eosTokenId=B,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const S=new y(this.bosTokenId,0,0,0,0),N=new y(this.eosTokenId,1,this.len,0,0);this.nodes.push(S.clone()),this.nodes.push(N.clone()),this.beginNodes[this.len].push(N),this.endNodes[0].push(S)}insert(v,M,B,S){const N=this.nodes.length,V=new y(S,N,v,M,B);this.beginNodes[v].push(V),this.endNodes[v+M].push(V),this.nodes.push(V)}viterbi(){const v=this.len;let M=0;for(;M<=v;){if(this.beginNodes[M].length==0)return[];for(let Z of this.beginNodes[M]){Z.prev=null;let O=0,Q=null;for(let q of this.endNodes[M]){const f=q.backtraceScore+Z.score;(Q===null||f>O)&&(Q=q.clone(),O=f)}if(Q!==null)Z.prev=Q,Z.backtraceScore=O;else return[]}++M}const B=[],N=this.beginNodes[v][0].prev;if(N===null)return[];let V=N.clone();for(;V.prev!==null;)B.push(V.clone()),V=V.clone().prev.clone();return B.reverse(),B}piece(v){return this.chars.slice(v.pos,v.pos+v.length).join("")}tokens(){return this.viterbi().map(M=>this.piece(M))}tokenIds(){return this.viterbi().map(M=>M.tokenId)}}class y{constructor(v,M,B,S,N){this.tokenId=v,this.nodeId=M,this.pos=B,this.length=S,this.score=N,this.prev=null,this.backtraceScore=0}clone(){const v=new y(this.tokenId,this.nodeId,this.pos,this.length,this.score);return v.prev=this.prev,v.backtraceScore=this.backtraceScore,v}}class k{constructor(v){this.trie=this._buildTrie(v)}_buildTrie(v){var B;const M=Object.create(null);for(const S of v){let N=M;for(let V=0;V<S.length;++V)N=N[B=S[V]]??(N[B]=Object.create(null));N.end=S}return M}split(v){const M=[],B=v.length;let S=0,N=0;for(;N<B;){let V=this.trie,Z=null,O=N;for(;O<B&&(V=V[v[O]]);)V.end&&(Z=V.end),++O;Z?(N>S&&M.push(v.slice(S,N)),M.push(Z),N+=Z.length,S=N):++N}return S<B&&M.push(v.slice(S)),M}}},"./src/utils/devices.js":(i,o,a)=>{a.r(o),a.d(o,{DEVICE_TYPES:()=>u});const u=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(i,o,a)=>{a.r(o),a.d(o,{DATA_TYPES:()=>C,DEFAULT_DEVICE_DTYPE_MAPPING:()=>y,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>k,isWebGpuFp16Supported:()=>h});var u=a("./src/env.js"),p=a("./src/utils/devices.js");const h=function(){let _;return async function(){if(_===void 0)if(!u.apis.IS_WEBGPU_AVAILABLE)_=!1;else try{_=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{_=!1}return _}}(),C=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),y=Object.freeze({[p.DEVICE_TYPES.wasm]:C.q8}),k=Object.freeze({[C.fp32]:"",[C.fp16]:"_fp16",[C.int8]:"_int8",[C.uint8]:"_uint8",[C.q8]:"_quantized",[C.q4]:"_q4",[C.q4f16]:"_q4f16",[C.bnb4]:"_bnb4"})},"./src/utils/generic.js":(i,o,a)=>{a.r(o),a.d(o,{Callable:()=>u});const u=class{constructor(){let p=function(...h){return p._call(...h)};return Object.setPrototypeOf(p,new.target.prototype)}_call(...p){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(i,o,a)=>{a.r(o),a.d(o,{MAX_EXTERNAL_DATA_CHUNKS:()=>y,getFile:()=>S,getModelFile:()=>Q,getModelJSON:()=>q});var u=a("?7a2c"),p=a("?a42a"),h=a("./src/env.js"),C=a("./src/utils/core.js");const y=100,k={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class _{constructor(c){if(this.filePath=c,this.headers=new Headers,this.exists=u.existsSync(c),this.exists){this.status=200,this.statusText="OK";let P=u.statSync(c);this.headers.set("content-length",P.size.toString()),this.updateContentType();const J=u.createReadStream(c);this.body=new ReadableStream({start(D){J.on("data",j=>D.enqueue(j)),J.on("end",()=>D.close()),J.on("error",j=>D.error(j))},cancel(){J.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const c=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",k[c]??"application/octet-stream")}clone(){let c=new _(this.filePath);return c.exists=this.exists,c.status=this.status,c.statusText=this.statusText,c.headers=new Headers(this.headers),c}async arrayBuffer(){return(await u.promises.readFile(this.filePath)).buffer}async blob(){const c=await u.promises.readFile(this.filePath);return new Blob([c],{type:this.headers.get("content-type")})}async text(){return await u.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function v(e,c=null,P=null){let J;try{J=new URL(e)}catch{return!1}return!(c&&!c.includes(J.protocol)||P&&!P.includes(J.hostname))}const M=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function B(e){return!(!M.test(e)||e.includes("..")||e.includes("--")||e.endsWith(".git")||e.endsWith(".ipynb"))}async function S(e){var c;if(h.env.useFS&&!v(e,["http:","https:","blob:"]))return new _(e.toString());if(typeof process<"u"&&((c=process==null?void 0:process.release)==null?void 0:c.name)==="node"){const P=!!(T0!=null&&T0.TESTING_REMOTELY),J=h.env.version,D=new Headers;if(D.set("User-Agent",`transformers.js/${J}; is_ci/${P};`),v(e,["http:","https:"],["huggingface.co","hf.co"])){const Ie=(T0==null?void 0:T0.HF_TOKEN)??(T0==null?void 0:T0.HF_ACCESS_TOKEN);Ie&&D.set("Authorization",`Bearer ${Ie}`)}return fetch(e,{headers:D})}else return fetch(e)}const N={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function V(e,c,P){if(!P)return null;const J=N[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${J}: "${c}".`)}class Z{constructor(c){this.path=c}async match(c){let P=p.join(this.path,c),J=new _(P);if(J.exists)return J}async put(c,P,J=void 0){let D=p.join(this.path,c);try{const j=P.headers.get("Content-Length"),Ie=parseInt(j??"0");let ge=0;await u.promises.mkdir(p.dirname(D),{recursive:!0});const ke=u.createWriteStream(D),Ee=P.body.getReader();for(;;){const{done:Ne,value:Xe}=await Ee.read();if(Ne)break;await new Promise((xe,ye)=>{ke.write(Xe,ue=>{if(ue){ye(ue);return}xe()})}),ge+=Xe.length;const At=Ie?ge/Ie*100:0;J==null||J({progress:At,loaded:ge,total:Ie})}ke.close()}catch(j){try{await u.promises.unlink(D)}catch{}throw j}}}async function O(e,...c){for(let P of c)try{let J=await e.match(P);if(J)return J}catch{continue}}async function Q(e,c,P=!0,J={},D=!1){if(!h.env.allowLocalModels){if(J.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!h.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,C.dispatchCallback)(J.progress_callback,{status:"initiate",name:e,file:c});let j;if(!j&&h.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{j=await caches.open("transformers-cache")}catch(Ye){console.warn("An error occurred while opening the browser cache:",Ye)}}if(!j&&h.env.useFSCache&&(j=new Z(J.cache_dir??h.env.cacheDir)),!j&&h.env.useCustomCache){if(!h.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!h.env.customCache.match||!h.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");j=h.env.customCache}const Ie=J.revision??"main",ge=I(e,c),ke=B(e),Ee=ke?I(h.env.localModelPath,ge):ge,Ne=I(h.env.remoteHost,h.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(Ie)),c);let Xe;const At=j instanceof Z?Ie==="main"?ge:I(e,Ie,c):Ne;let xe=!1,ye;j&&(ye=await O(j,Ee,At));const ue=ye!==void 0;if(ye===void 0){if(h.env.allowLocalModels)if(v(ge,["http:","https:"])){if(J.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ge}.`);if(!h.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ge}.`)}else try{ye=await S(Ee),Xe=Ee}catch(Le){console.warn(`Unable to load from local path "${Ee}": "${Le}"`)}if(ye===void 0||ye.status===404){if(J.local_files_only||!h.env.allowRemoteModels){if(P)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${Ee}".`);return null}if(!ke)throw Error(`Local file missing at "${Ee}" and download aborted due to invalid model ID "${e}".`);if(ye=await S(Ne),ye.status!==200)return V(ye.status,Ne,P);Xe=At}xe=j&&typeof Response<"u"&&ye instanceof Response&&ye.status===200}(0,C.dispatchCallback)(J.progress_callback,{status:"download",name:e,file:c});let ie;if(!(h.apis.IS_NODE_ENV&&D)){let Ye;J.progress_callback?ue&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Ye=new Uint8Array(await ye.arrayBuffer()),(0,C.dispatchCallback)(J.progress_callback,{status:"progress",name:e,file:c,progress:100,loaded:Ye.length,total:Ye.length})):Ye=await f(ye,Le=>{(0,C.dispatchCallback)(J.progress_callback,{status:"progress",name:e,file:c,...Le})}):Ye=new Uint8Array(await ye.arrayBuffer()),ie=Ye}if(xe&&Xe&&await j.match(Xe)===void 0&&(ie?await j.put(Xe,new Response(ie,{headers:ye.headers})).catch(Ye=>{console.warn(`Unable to add response to browser cache: ${Ye}.`)}):await j.put(Xe,ye,J.progress_callback)),(0,C.dispatchCallback)(J.progress_callback,{status:"done",name:e,file:c}),ie){if(D)throw new Error("Cannot return path in a browser environment.");return ie}if(ye instanceof _)return ye.filePath;const be=await j.match(Xe);if(be instanceof _)return be.filePath;throw new Error("Unable to return path for response.")}async function q(e,c,P=!0,J={}){const D=await Q(e,c,P,J,!1);if(D===null)return{};const Ie=new TextDecoder("utf-8").decode(D);return JSON.parse(Ie)}async function f(e,c){const P=e.headers.get("Content-Length");P===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let J=parseInt(P??"0"),D=new Uint8Array(J),j=0;const Ie=e.body.getReader();async function ge(){const{done:ke,value:Ee}=await Ie.read();if(ke)return;const Ne=j+Ee.length;if(Ne>J){J=Ne;const At=new Uint8Array(J);At.set(D),D=At}D.set(Ee,j),j=Ne;const Xe=j/J*100;return c({progress:Xe,loaded:j,total:J}),ge()}return await ge(),D}function I(...e){return e=e.map((c,P)=>(P&&(c=c.replace(new RegExp("^/"),"")),P!==e.length-1&&(c=c.replace(new RegExp("/$"),"")),c)),e.join("/")}},"./src/utils/image.js":(i,o,a)=>{a.r(o),a.d(o,{RawImage:()=>N,load_image:()=>V});var u=a("./src/utils/core.js"),p=a("./src/utils/hub.js"),h=a("./src/env.js"),C=a("./src/utils/tensor.js"),y=a("?2b25");let k,_,v;const M=h.apis.IS_BROWSER_ENV||h.apis.IS_WEBWORKER_ENV;if(M)k=(Z,O)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Z,O)},v=self.createImageBitmap,_=self.ImageData;else if(y)v=async Z=>{const Q=(await Z.metadata()).channels,{data:q,info:f}=await Z.rotate().raw().toBuffer({resolveWithObject:!0}),I=new N(new Uint8ClampedArray(q),f.width,f.height,f.channels);return Q!==void 0&&Q!==f.channels&&I.convert(Q),I};else throw new Error("Unable to load image processing library.");const B={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},S=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class N{constructor(O,Q,q,f){this.data=O,this.width=Q,this.height=q,this.channels=f}get size(){return[this.width,this.height]}static async read(O){if(O instanceof N)return O;if(typeof O=="string"||O instanceof URL)return await this.fromURL(O);if(O instanceof Blob)return await this.fromBlob(O);if(typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&O instanceof OffscreenCanvas)return this.fromCanvas(O);throw new Error(`Unsupported input type: ${typeof O}`)}static fromCanvas(O){if(!M)throw new Error("fromCanvas() is only supported in browser environments.");const q=O.getContext("2d").getImageData(0,0,O.width,O.height).data;return new N(q,O.width,O.height,4)}static async fromURL(O){const Q=await(0,p.getFile)(O);if(Q.status!==200)throw new Error(`Unable to read image from "${O}" (${Q.status} ${Q.statusText})`);const q=await Q.blob();return this.fromBlob(q)}static async fromBlob(O){if(M){const Q=await v(O),q=k(Q.width,Q.height).getContext("2d");return q.drawImage(Q,0,0),new this(q.getImageData(0,0,Q.width,Q.height).data,Q.width,Q.height,4)}else{const Q=y(await O.arrayBuffer());return await v(Q)}}static fromTensor(O,Q="CHW"){if(O.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${O.dims.length} dimensions.`);if(Q==="CHW")O=O.transpose(1,2,0);else if(Q!=="HWC")throw new Error(`Unsupported channel format: ${Q}`);if(!(O.data instanceof Uint8ClampedArray||O.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${O.type}`);switch(O.dims[2]){case 1:case 2:case 3:case 4:return new N(O.data,O.dims[1],O.dims[0],O.dims[2]);default:throw new Error(`Unsupported number of channels: ${O.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const O=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let Q=0,q=0;Q<this.data.length;Q+=this.channels){const f=this.data[Q],I=this.data[Q+1],e=this.data[Q+2];O[q++]=Math.round(.2989*f+.587*I+.114*e)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(O,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const O=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let Q=0,q=0;Q<this.data.length;++Q)O[q++]=this.data[Q],O[q++]=this.data[Q],O[q++]=this.data[Q];break;case 4:for(let Q=0,q=0;Q<this.data.length;Q+=4)O[q++]=this.data[Q],O[q++]=this.data[Q+1],O[q++]=this.data[Q+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(O,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const O=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let Q=0,q=0;Q<this.data.length;++Q)O[q++]=this.data[Q],O[q++]=this.data[Q],O[q++]=this.data[Q],O[q++]=255;break;case 3:for(let Q=0,q=0;Q<this.data.length;Q+=3)O[q++]=this.data[Q],O[q++]=this.data[Q+1],O[q++]=this.data[Q+2],O[q++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(O,this.width,this.height,4)}putAlpha(O){if(O.width!==this.width||O.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${O.width}x${O.height}`);if(O.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${O.channels}`);const Q=this.data,q=O.data,f=this.width*this.height;if(this.channels===3){const I=new Uint8ClampedArray(f*4);for(let e=0,c=0,P=0;e<f;++e)I[P++]=Q[c++],I[P++]=Q[c++],I[P++]=Q[c++],I[P++]=q[e];return this._update(I,this.width,this.height,4)}else if(this.channels===4){for(let I=0;I<f;++I)Q[4*I+3]=q[I];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(O,Q,{resample:q=2}={}){if(this.width===O&&this.height===Q)return this;let f=B[q]??q;const I=(0,u.isNullishDimension)(O),e=(0,u.isNullishDimension)(Q);if(I&&e)return this;if(I?O=Q/this.height*this.width:e&&(Q=O/this.width*this.height),M){const c=this.channels,P=this.toCanvas(),J=k(O,Q).getContext("2d");return J.drawImage(P,0,0,O,Q),new N(J.getImageData(0,0,O,Q).data,O,Q,4).convert(c)}else{let c=this.toSharp();switch(f){case"box":case"hamming":(f==="box"||f==="hamming")&&(console.warn(`Resampling method ${f} is not yet supported. Using bilinear instead.`),f="bilinear");case"nearest":case"bilinear":case"bicubic":c=c.affine([O/this.width,0,0,Q/this.height],{interpolator:f});break;case"lanczos":c=c.resize({width:O,height:Q,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${f} is not supported.`)}return await v(c)}}async pad([O,Q,q,f]){if(O=Math.max(O,0),Q=Math.max(Q,0),q=Math.max(q,0),f=Math.max(f,0),O===0&&Q===0&&q===0&&f===0)return this;if(M){const I=this.channels,e=this.toCanvas(),c=this.width+O+Q,P=this.height+q+f,J=k(c,P).getContext("2d");return J.drawImage(e,0,0,this.width,this.height,O,q,this.width,this.height),new N(J.getImageData(0,0,c,P).data,c,P,4).convert(I)}else{const I=this.toSharp().extend({left:O,right:Q,top:q,bottom:f});return await v(I)}}async crop([O,Q,q,f]){if(O=Math.max(O,0),Q=Math.max(Q,0),q=Math.min(q,this.width-1),f=Math.min(f,this.height-1),O===0&&Q===0&&q===this.width-1&&f===this.height-1)return this;const I=q-O+1,e=f-Q+1;if(M){const c=this.channels,P=this.toCanvas(),J=k(I,e).getContext("2d");return J.drawImage(P,O,Q,I,e,0,0,I,e),new N(J.getImageData(0,0,I,e).data,I,e,4).convert(c)}else{const c=this.toSharp().extract({left:O,top:Q,width:I,height:e});return await v(c)}}async center_crop(O,Q){if(this.width===O&&this.height===Q)return this;const q=(this.width-O)/2,f=(this.height-Q)/2;if(M){const I=this.channels,e=this.toCanvas(),c=k(O,Q).getContext("2d");let P=0,J=0,D=0,j=0;return q>=0?P=q:D=-q,f>=0?J=f:j=-f,c.drawImage(e,P,J,O,Q,D,j,O,Q),new N(c.getImageData(0,0,O,Q).data,O,Q,4).convert(I)}else{let I=this.toSharp();if(q>=0&&f>=0)I=I.extract({left:Math.floor(q),top:Math.floor(f),width:O,height:Q});else if(q<=0&&f<=0){const e=Math.floor(-f),c=Math.floor(-q);I=I.extend({top:e,left:c,right:O-this.width-c,bottom:Q-this.height-e})}else{let e=[0,0],c=0;f<0?(e[0]=Math.floor(-f),e[1]=Q-this.height-e[0]):c=Math.floor(f);let P=[0,0],J=0;q<0?(P[0]=Math.floor(-q),P[1]=O-this.width-P[0]):J=Math.floor(q),I=I.extend({top:e[0],bottom:e[1],left:P[0],right:P[1]}).extract({left:J,top:c,width:O,height:Q})}return await v(I)}}async toBlob(O="image/png",Q=1){if(!M)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:O,quality:Q})}toTensor(O="CHW"){let Q=new C.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(O!=="HWC")if(O==="CHW")Q=Q.permute(2,0,1);else throw new Error(`Unsupported channel format: ${O}`);return Q}toCanvas(){if(!M)throw new Error("toCanvas() is only supported in browser environments.");const O=this.clone().rgba(),Q=k(O.width,O.height),q=new _(O.data,O.width,O.height);return Q.getContext("2d").putImageData(q,0,0),Q}split(){const{data:O,width:Q,height:q,channels:f}=this,I=O.constructor,e=O.length/f,c=Array.from({length:f},()=>new I(e));for(let P=0;P<e;++P){const J=f*P;for(let D=0;D<f;++D)c[D][P]=O[J+D]}return c.map(P=>new N(P,Q,q,1))}_update(O,Q,q,f=null){return this.data=O,this.width=Q,this.height=q,f!==null&&(this.channels=f),this}clone(){return new N(this.data.slice(),this.width,this.height,this.channels)}convert(O){if(this.channels===O)return this;switch(O){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(O){if(M){if(h.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const Q=O.split(".").pop().toLowerCase(),q=S.get(Q)??"image/png",f=await this.toBlob(q);(0,u.saveBlob)(O,f)}else{if(h.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(O);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(M)throw new Error("toSharp() is only supported in server-side environments.");return y(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const V=N.read.bind(N)},"./src/utils/maths.js":(i,o,a)=>{a.r(o),a.d(o,{FFT:()=>V,bankers_round:()=>Q,cos_sim:()=>k,dot:()=>y,dynamic_time_warping:()=>q,interpolate_data:()=>u,log_softmax:()=>C,magnitude:()=>_,max:()=>M,medianFilter:()=>Z,min:()=>v,permute_data:()=>p,round:()=>O,softmax:()=>h});function u(f,[I,e,c],[P,J],D="bilinear",j=!1){const Ie=J/c,ge=P/e,ke=new f.constructor(P*J*I),Ee=e*c,Ne=P*J;for(let Xe=0;Xe<P;++Xe)for(let At=0;At<J;++At){const xe=Xe*J+At,ye=(At+.5)/Ie-.5,ue=(Xe+.5)/ge-.5;let ie=Math.floor(ye),be=Math.floor(ue);const Ye=Math.min(ie+1,c-1),Le=Math.min(be+1,e-1);ie=Math.max(ie,0),be=Math.max(be,0);const lt=ye-ie,ft=ue-be,pt=(1-lt)*(1-ft),ct=lt*(1-ft),He=(1-lt)*ft,Re=lt*ft,Se=be*c,Qe=Le*c,ht=Se+ie,wt=Se+Ye,Bt=Qe+ie,Mt=Qe+Ye;for(let oe=0;oe<I;++oe){const zt=oe*Ee;ke[oe*Ne+xe]=pt*f[zt+ht]+ct*f[zt+wt]+He*f[zt+Bt]+Re*f[zt+Mt]}}return ke}function p(f,I,e){const c=new Array(e.length),P=new Array(e.length);for(let j=e.length-1,Ie=1;j>=0;--j)P[j]=Ie,c[j]=I[e[j]],Ie*=c[j];const J=e.map((j,Ie)=>P[e.indexOf(Ie)]),D=new f.constructor(f.length);for(let j=0;j<f.length;++j){let Ie=0;for(let ge=I.length-1,ke=j;ge>=0;--ge)Ie+=ke%I[ge]*J[ge],ke=Math.floor(ke/I[ge]);D[Ie]=f[j]}return[D,c]}function h(f){const I=M(f)[0],e=f.map(J=>Math.exp(J-I)),c=e.reduce((J,D)=>J+D,0);return e.map(J=>J/c)}function C(f){const I=M(f)[0];let e=0;for(let J=0;J<f.length;++J)e+=Math.exp(f[J]-I);const c=Math.log(e);return f.map(J=>J-I-c)}function y(f,I){let e=0;for(let c=0;c<f.length;++c)e+=f[c]*I[c];return e}function k(f,I){const e=y(f,I),c=_(f),P=_(I);return e/(c*P)}function _(f){return Math.sqrt(f.reduce((I,e)=>I+e*e,0))}function v(f){if(f.length===0)throw Error("Array must not be empty");let I=f[0],e=0;for(let c=1;c<f.length;++c)f[c]<I&&(I=f[c],e=c);return[I,e]}function M(f){if(f.length===0)throw Error("Array must not be empty");let I=f[0],e=0;for(let c=1;c<f.length;++c)f[c]>I&&(I=f[c],e=c);return[I,e]}function B(f){return f>0&&(f&f-1)===0}class S{constructor(I){if(this.size=I|0,this.size<=1||!B(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=I<<1,this.table=new Float64Array(this.size*2);for(let c=0;c<this.table.length;c+=2){const P=Math.PI*c/this.size;this.table[c]=Math.cos(P),this.table[c+1]=-Math.sin(P)}let e=0;for(let c=1;this.size>c;c<<=1)++e;this._width=e%2===0?e-1:e,this._bitrev=new Int32Array(1<<this._width);for(let c=0;c<this._bitrev.length;++c){this._bitrev[c]=0;for(let P=0;P<this._width;P+=2){const J=this._width-P-2;this._bitrev[c]|=(c>>>P&3)<<J}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(I,e){const c=e||new Array(I.length>>>1);for(let P=0;P<I.length;P+=2)c[P>>>1]=I[P];return c}toComplexArray(I,e){const c=e||this.createComplexArray();for(let P=0;P<c.length;P+=2)c[P]=I[P>>>1],c[P+1]=0;return c}transform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,1)}realTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._realTransform4(I,e,1)}inverseTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,-1);for(let c=0;c<I.length;++c)I[c]/=this.size}_transform4(I,e,c){const P=this._csize;let D=1<<this._width,j=P/D<<1,Ie,ge;const ke=this._bitrev;if(j===4)for(Ie=0,ge=0;Ie<P;Ie+=j,++ge){const Ne=ke[ge];this._singleTransform2(e,I,Ie,Ne,D)}else for(Ie=0,ge=0;Ie<P;Ie+=j,++ge){const Ne=ke[ge];this._singleTransform4(e,I,Ie,Ne,D,c)}const Ee=this.table;for(D>>=2;D>=2;D>>=2){j=P/D<<1;const Ne=j>>>2;for(Ie=0;Ie<P;Ie+=j){const Xe=Ie+Ne-1;for(let At=Ie,xe=0;At<Xe;At+=2,xe+=D){const ye=At,ue=ye+Ne,ie=ue+Ne,be=ie+Ne,Ye=I[ye],Le=I[ye+1],lt=I[ue],ft=I[ue+1],pt=I[ie],ct=I[ie+1],He=I[be],Re=I[be+1],Se=Ee[xe],Qe=c*Ee[xe+1],ht=lt*Se-ft*Qe,wt=lt*Qe+ft*Se,Bt=Ee[2*xe],Mt=c*Ee[2*xe+1],oe=pt*Bt-ct*Mt,zt=pt*Mt+ct*Bt,ve=Ee[3*xe],H=c*Ee[3*xe+1],ce=He*ve-Re*H,ne=He*H+Re*ve,ze=Ye+oe,$e=Le+zt,gt=Ye-oe,It=Le-zt,Nt=ht+ce,_t=wt+ne,Vt=c*(ht-ce),Xt=c*(wt-ne);I[ye]=ze+Nt,I[ye+1]=$e+_t,I[ue]=gt+Xt,I[ue+1]=It-Vt,I[ie]=ze-Nt,I[ie+1]=$e-_t,I[be]=gt-Xt,I[be+1]=It+Vt}}}}_singleTransform2(I,e,c,P,J){const D=I[P],j=I[P+1],Ie=I[P+J],ge=I[P+J+1];e[c]=D+Ie,e[c+1]=j+ge,e[c+2]=D-Ie,e[c+3]=j-ge}_singleTransform4(I,e,c,P,J,D){const j=J*2,Ie=J*3,ge=I[P],ke=I[P+1],Ee=I[P+J],Ne=I[P+J+1],Xe=I[P+j],At=I[P+j+1],xe=I[P+Ie],ye=I[P+Ie+1],ue=ge+Xe,ie=ke+At,be=ge-Xe,Ye=ke-At,Le=Ee+xe,lt=Ne+ye,ft=D*(Ee-xe),pt=D*(Ne-ye);e[c]=ue+Le,e[c+1]=ie+lt,e[c+2]=be+pt,e[c+3]=Ye-ft,e[c+4]=ue-Le,e[c+5]=ie-lt,e[c+6]=be-pt,e[c+7]=Ye+ft}_realTransform4(I,e,c){const P=this._csize;let D=1<<this._width,j=P/D<<1,Ie,ge;const ke=this._bitrev;if(j===4)for(Ie=0,ge=0;Ie<P;Ie+=j,++ge){const Xe=ke[ge];this._singleRealTransform2(e,I,Ie,Xe>>>1,D>>>1)}else for(Ie=0,ge=0;Ie<P;Ie+=j,++ge){const Xe=ke[ge];this._singleRealTransform4(e,I,Ie,Xe>>>1,D>>>1,c)}const Ee=this.table;for(D>>=2;D>=2;D>>=2){j=P/D<<1;const Xe=j>>>1,At=Xe>>>1,xe=At>>>1;for(Ie=0;Ie<P;Ie+=j)for(let ye=0,ue=0;ye<=xe;ye+=2,ue+=D){const ie=Ie+ye,be=ie+At,Ye=be+At,Le=Ye+At,lt=I[ie],ft=I[ie+1],pt=I[be],ct=I[be+1],He=I[Ye],Re=I[Ye+1],Se=I[Le],Qe=I[Le+1],ht=lt,wt=ft,Bt=Ee[ue],Mt=c*Ee[ue+1],oe=pt*Bt-ct*Mt,zt=pt*Mt+ct*Bt,ve=Ee[2*ue],H=c*Ee[2*ue+1],ce=He*ve-Re*H,ne=He*H+Re*ve,ze=Ee[3*ue],$e=c*Ee[3*ue+1],gt=Se*ze-Qe*$e,It=Se*$e+Qe*ze,Nt=ht+ce,_t=wt+ne,Vt=ht-ce,Xt=wt-ne,Jt=oe+gt,wr=zt+It,Rr=c*(oe-gt),$s=c*(zt-It);if(I[ie]=Nt+Jt,I[ie+1]=_t+wr,I[be]=Vt+$s,I[be+1]=Xt-Rr,ye===0){I[Ye]=Nt-Jt,I[Ye+1]=_t-wr;continue}if(ye===xe)continue;const os=Ie+At-ye,Ks=Ie+Xe-ye;I[os]=Vt-c*$s,I[os+1]=-Xt-c*Rr,I[Ks]=Nt-c*Jt,I[Ks+1]=-_t+c*wr}}const Ne=P>>>1;for(let Xe=2;Xe<Ne;Xe+=2)I[P-Xe]=I[Xe],I[P-Xe+1]=-I[Xe+1]}_singleRealTransform2(I,e,c,P,J){const D=I[P],j=I[P+J];e[c]=D+j,e[c+1]=0,e[c+2]=D-j,e[c+3]=0}_singleRealTransform4(I,e,c,P,J,D){const j=J*2,Ie=J*3,ge=I[P],ke=I[P+J],Ee=I[P+j],Ne=I[P+Ie],Xe=ge+Ee,At=ge-Ee,xe=ke+Ne,ye=D*(ke-Ne);e[c]=Xe+xe,e[c+1]=0,e[c+2]=At,e[c+3]=-ye,e[c+4]=Xe-xe,e[c+5]=0,e[c+6]=At,e[c+7]=ye}}class N{constructor(I){const e=2*(I-1),c=2*(2*I-1),P=2**Math.ceil(Math.log2(c));this.bufferSize=P,this._a=e;const J=new Float64Array(c),D=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const j=-2*Math.PI/I,Ie=Math.cos(j),ge=Math.sin(j);for(let ke=0;ke<c>>1;++ke){const Ee=(ke+1-I)**2/2,Ne=Math.sqrt(Ie**2+ge**2)**Ee,Xe=Ee*Math.atan2(ge,Ie),At=2*ke;J[At]=Ne*Math.cos(Xe),J[At+1]=Ne*Math.sin(Xe),D[At]=J[At],D[At+1]=-J[At+1]}this._slicedChirpBuffer=J.subarray(e,c),this._f=new S(P>>1),this._f.transform(this._chirpBuffer,D)}_transform(I,e,c){const P=this._buffer1,J=this._buffer2,D=this._outBuffer1,j=this._outBuffer2,Ie=this._chirpBuffer,ge=this._slicedChirpBuffer,ke=this._a;if(c)for(let Ee=0;Ee<ge.length;Ee+=2){const Ne=Ee+1,Xe=Ee>>1,At=e[Xe];P[Ee]=At*ge[Ee],P[Ne]=At*ge[Ne]}else for(let Ee=0;Ee<ge.length;Ee+=2){const Ne=Ee+1;P[Ee]=e[Ee]*ge[Ee]-e[Ne]*ge[Ne],P[Ne]=e[Ee]*ge[Ne]+e[Ne]*ge[Ee]}this._f.transform(D,P);for(let Ee=0;Ee<Ie.length;Ee+=2){const Ne=Ee+1;J[Ee]=D[Ee]*Ie[Ee]-D[Ne]*Ie[Ne],J[Ne]=D[Ee]*Ie[Ne]+D[Ne]*Ie[Ee]}this._f.inverseTransform(j,J);for(let Ee=0;Ee<j.length;Ee+=2){const Ne=j[Ee+ke],Xe=j[Ee+ke+1],At=ge[Ee],xe=ge[Ee+1];I[Ee]=Ne*At-Xe*xe,I[Ee+1]=Ne*xe+Xe*At}}transform(I,e){this._transform(I,e,!1)}realTransform(I,e){this._transform(I,e,!0)}}class V{constructor(I){this.fft_length=I,this.isPowerOfTwo=B(I),this.isPowerOfTwo?(this.fft=new S(I),this.outputBufferSize=2*I):(this.fft=new N(I),this.outputBufferSize=this.fft.bufferSize)}realTransform(I,e){this.fft.realTransform(I,e)}transform(I,e){this.fft.transform(I,e)}}function Z(f,I){if(I%2===0||I<=0)throw new Error("Window size must be a positive odd number");const e=new f.constructor(f.length),c=new f.constructor(I),P=Math.floor(I/2);for(let J=0;J<f.length;++J){let D=0;for(let j=-P;j<=P;++j){let Ie=J+j;Ie<0?Ie=Math.abs(Ie):Ie>=f.length&&(Ie=2*(f.length-1)-Ie),c[D++]=f[Ie]}c.sort(),e[J]=c[P]}return e}function O(f,I){const e=Math.pow(10,I);return Math.round(f*e)/e}function Q(f){const I=Math.round(f);return Math.abs(f)%1===.5?I%2===0?I:I-1:I}function q(f){const I=f.length,e=f[0].length,c=[I+1,e+1],P=Array.from({length:c[0]},()=>Array(c[1]).fill(1/0));P[0][0]=0;const J=Array.from({length:c[0]},()=>Array(c[1]).fill(-1));for(let ke=1;ke<c[1];++ke)for(let Ee=1;Ee<c[0];++Ee){const Ne=P[Ee-1][ke-1],Xe=P[Ee-1][ke],At=P[Ee][ke-1];let xe,ye;Ne<Xe&&Ne<At?(xe=Ne,ye=0):Xe<Ne&&Xe<At?(xe=Xe,ye=1):(xe=At,ye=2),P[Ee][ke]=f[Ee-1][ke-1]+xe,J[Ee][ke]=ye}for(let ke=0;ke<c[1];++ke)J[0][ke]=2;for(let ke=0;ke<c[0];++ke)J[ke][0]=1;let D=I,j=e,Ie=[],ge=[];for(;D>0||j>0;)switch(Ie.push(D-1),ge.push(j-1),J[D][j]){case 0:--D,--j;break;case 1:--D;break;case 2:--j;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${D}, ${j}]. Please file a bug report.`)}return Ie.reverse(),ge.reverse(),[Ie,ge]}},"./src/utils/tensor.js":(i,o,a)=>{a.r(o),a.d(o,{DataTypeMap:()=>C,Tensor:()=>y,cat:()=>e,full:()=>ge,full_like:()=>ke,interpolate:()=>v,interpolate_4d:()=>M,layer_norm:()=>Q,matmul:()=>B,mean:()=>D,mean_pooling:()=>O,ones:()=>Ee,ones_like:()=>Ne,permute:()=>_,quantize_embeddings:()=>ye,rand:()=>xe,rfft:()=>S,slice:()=>Z,stack:()=>c,std_mean:()=>J,topk:()=>N,zeros:()=>Xe,zeros_like:()=>At});var u=a("./src/utils/maths.js"),p=a("./src/backends/onnx.js"),h=a("./src/ops/registry.js");const C=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class y{constructor(...ie){Te(this,"ort_tensor");return(0,p.isONNXTensor)(ie[0])?this.ort_tensor=ie[0]:this.ort_tensor=new p.Tensor(ie[0],ie[1],ie[2]),new Proxy(this,{get:(be,Ye)=>{if(typeof Ye=="string"){let Le=Number(Ye);if(Number.isInteger(Le))return be._getitem(Le)}return be[Ye]},set:(be,Ye,Le)=>be[Ye]=Le})}get dims(){return this.ort_tensor.dims}set dims(ie){this.ort_tensor.dims=ie}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[ie,...be]=this.dims;if(be.length>0){const Ye=be.reduce((Le,lt)=>Le*lt);for(let Le=0;Le<ie;++Le)yield this._subarray(Le,Ye,be)}else yield*this.data}_getitem(ie){const[be,...Ye]=this.dims;if(ie=I(ie,be),Ye.length>0){const Le=Ye.reduce((lt,ft)=>lt*ft);return this._subarray(ie,Le,Ye)}else return new y(this.type,[this.data[ie]],Ye)}indexOf(ie){const be=this.data;for(let Ye=0;Ye<be.length;++Ye)if(be[Ye]==ie)return Ye;return-1}_subarray(ie,be,Ye){const Le=ie*be,lt=(ie+1)*be,ft="subarray"in this.data?this.data.subarray(Le,lt):this.data.slice(Le,lt);return new y(this.type,ft,Ye)}item(){const ie=this.data;if(ie.length!==1)throw new Error(`a Tensor with ${ie.length} elements cannot be converted to Scalar`);return ie[0]}tolist(){return k(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const ie=this.data;for(let be=0;be<ie.length;++be)ie[be]=1/(1+Math.exp(-ie[be]));return this}map(ie){return this.clone().map_(ie)}map_(ie){const be=this.data;for(let Ye=0;Ye<be.length;++Ye)be[Ye]=ie(be[Ye],Ye,be);return this}mul(ie){return this.clone().mul_(ie)}mul_(ie){const be=this.data;for(let Ye=0;Ye<be.length;++Ye)be[Ye]*=ie;return this}div(ie){return this.clone().div_(ie)}div_(ie){const be=this.data;for(let Ye=0;Ye<be.length;++Ye)be[Ye]/=ie;return this}add(ie){return this.clone().add_(ie)}add_(ie){const be=this.data;for(let Ye=0;Ye<be.length;++Ye)be[Ye]+=ie;return this}sub(ie){return this.clone().sub_(ie)}sub_(ie){const be=this.data;for(let Ye=0;Ye<be.length;++Ye)be[Ye]-=ie;return this}clone(){return new y(this.type,this.data.slice(),this.dims.slice())}slice(...ie){const be=[],Ye=[];for(let He=0;He<this.dims.length;++He){let Re=ie[He];if(Re==null)Ye.push([0,this.dims[He]]),be.push(this.dims[He]);else if(typeof Re=="number")Re=I(Re,this.dims[He],He),Ye.push([Re,Re+1]);else if(Array.isArray(Re)&&Re.length===2){let[Se,Qe]=Re;if(Se=Se===null?0:I(Se,this.dims[He],He,!1),Qe=Qe===null?this.dims[He]:I(Qe,this.dims[He],He,!1),Se>Qe)throw new Error(`Invalid slice: ${Re}`);const ht=[Math.max(Se,0),Math.min(Qe,this.dims[He])];Ye.push(ht),be.push(ht[1]-ht[0])}else throw new Error(`Invalid slice: ${Re}`)}const Le=Ye.map(([He,Re])=>Re-He),lt=Le.reduce((He,Re)=>He*Re),ft=this.data,pt=new ft.constructor(lt),ct=this.stride();for(let He=0;He<lt;++He){let Re=0;for(let Se=Le.length-1,Qe=He;Se>=0;--Se){const ht=Le[Se];Re+=(Qe%ht+Ye[Se][0])*ct[Se],Qe=Math.floor(Qe/ht)}pt[He]=ft[Re]}return new y(this.type,pt,be)}permute(...ie){return _(this,ie)}transpose(...ie){return this.permute(...ie)}sum(ie=null,be=!1){return this.norm(1,ie,be)}norm(ie="fro",be=null,Ye=!1){if(ie==="fro")ie=2;else if(typeof ie=="string")throw Error(`Unsupported norm: ${ie}`);const Le=this.data,lt=(He,Re)=>He+Re**ie;if(be===null){const He=Le.reduce(lt,0)**(1/ie);return new y(this.type,[He],[])}const[ft,pt,ct]=P(lt,this,be,Ye);if(ie!==1)for(let He=0;He<pt.length;++He)pt[He]=pt[He]**(1/ie);return new y(ft,pt,ct)}normalize_(ie=2,be=1){be=I(be,this.dims.length);const Ye=this.norm(ie,be,!0),Le=this.data,lt=Ye.data;for(let ft=0;ft<Le.length;++ft){let pt=0;for(let ct=this.dims.length-1,He=ft,Re=1;ct>=0;--ct){const Se=this.dims[ct];if(ct!==be){const Qe=He%Se;pt+=Qe*Re,Re*=this.dims[ct]}He=Math.floor(He/Se)}Le[ft]/=lt[pt]}return this}normalize(ie=2,be=1){return this.clone().normalize_(ie,be)}stride(){return j(this.dims)}squeeze(ie=null){return new y(this.type,this.data,q(this.dims,ie))}squeeze_(ie=null){return this.dims=q(this.dims,ie),this}unsqueeze(ie=null){return new y(this.type,this.data,f(this.dims,ie))}unsqueeze_(ie=null){return this.dims=f(this.dims,ie),this}flatten_(ie=0,be=-1){be=(be+this.dims.length)%this.dims.length;let Ye=this.dims.slice(0,ie),Le=this.dims.slice(ie,be+1),lt=this.dims.slice(be+1);return this.dims=[...Ye,Le.reduce((ft,pt)=>ft*pt,1),...lt],this}flatten(ie=0,be=-1){return this.clone().flatten_(ie,be)}view(...ie){let be=-1;for(let Le=0;Le<ie.length;++Le)if(ie[Le]===-1){if(be!==-1)throw new Error("Only one dimension can be inferred");be=Le}const Ye=this.data;if(be!==-1){const Le=ie.reduce((lt,ft,pt)=>pt!==be?lt*ft:lt,1);ie[be]=Ye.length/Le}return new y(this.type,Ye,ie)}neg_(){const ie=this.data;for(let be=0;be<ie.length;++be)ie[be]=-ie[be];return this}neg(){return this.clone().neg_()}gt(ie){const be=new Uint8Array(this.data.length),Ye=this.data;for(let Le=0;Le<Ye.length;++Le)be[Le]=Ye[Le]>ie?1:0;return new y("bool",be,this.dims)}lt(ie){const be=new Uint8Array(this.data.length),Ye=this.data;for(let Le=0;Le<Ye.length;++Le)be[Le]=Ye[Le]<ie?1:0;return new y("bool",be,this.dims)}clamp_(ie,be){const Ye=this.data;for(let Le=0;Le<Ye.length;++Le)Ye[Le]=Math.min(Math.max(Ye[Le],ie),be);return this}clamp(ie,be){return this.clone().clamp_(ie,be)}round_(){const ie=this.data;for(let be=0;be<ie.length;++be)ie[be]=Math.round(ie[be]);return this}round(){return this.clone().round_()}mean(ie=null,be=!1){return D(this,ie,be)}min(ie=null,be=!1){if(ie===null){const ft=(0,u.min)(this.data)[0];return new y(this.type,[ft],[])}const[Ye,Le,lt]=P((ft,pt)=>Math.min(ft,pt),this,ie,be,1/0);return new y(Ye,Le,lt)}max(ie=null,be=!1){if(ie===null){const ft=(0,u.max)(this.data)[0];return new y(this.type,[ft],[])}const[Ye,Le,lt]=P((ft,pt)=>Math.max(ft,pt),this,ie,be,-1/0);return new y(Ye,Le,lt)}argmin(ie=null,be=!1){if(ie!==null)throw new Error("`dim !== null` not yet implemented.");const Ye=(0,u.min)(this.data)[1];return new y("int64",[BigInt(Ye)],[])}argmax(ie=null,be=!1){if(ie!==null)throw new Error("`dim !== null` not yet implemented.");const Ye=(0,u.max)(this.data)[1];return new y("int64",[BigInt(Ye)],[])}to(ie){if(this.type===ie)return this;if(!C.hasOwnProperty(ie))throw new Error(`Unsupported type: ${ie}`);let be;const Ye=["int64","uint64"].includes(this.type),Le=["int64","uint64"].includes(ie);return Ye&&!Le?be=Number:!Ye&&Le&&(be=BigInt),new y(ie,C[ie].from(this.data,be),this.dims)}}function k(ue,ie){const be=ue.length,Ye=ie.reduce((lt,ft)=>lt*ft);if(be!==Ye)throw Error(`cannot reshape array of size ${be} into shape (${ie})`);let Le=ue;for(let lt=ie.length-1;lt>=0;lt--)Le=Le.reduce((ft,pt)=>{let ct=ft[ft.length-1];return ct.length<ie[lt]?ct.push(pt):ft.push([pt]),ft},[[]]);return Le[0]}function _(ue,ie){const[be,Ye]=(0,u.permute_data)(ue.data,ue.dims,ie);return new y(ue.type,be,Ye)}function v(ue,[ie,be],Ye="bilinear",Le=!1){const lt=ue.dims.at(-3)??1,ft=ue.dims.at(-2),pt=ue.dims.at(-1);let ct=(0,u.interpolate_data)(ue.data,[lt,ft,pt],[ie,be],Ye,Le);return new y(ue.type,ct,[lt,ie,be])}async function M(ue,{size:ie=null,mode:be="bilinear"}={}){if(ue.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!ie)throw new Error("`interpolate_4d` requires a `size` argument.");let Ye;if(ie.length===2)Ye=[...ue.dims.slice(0,2),...ie];else if(ie.length===3)Ye=[ue.dims[0],...ie];else if(ie.length===4)Ye=ie;else throw new Error("`size` must be of length 2, 3, or 4.");let Le;if(be==="nearest")Le=await h.TensorOpRegistry.nearest_interpolate_4d;else if(be==="bilinear")Le=await h.TensorOpRegistry.bilinear_interpolate_4d;else if(be==="bicubic")Le=await h.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${be}`);const lt=new y("int64",new BigInt64Array(Ye.map(BigInt)),[Ye.length]);return await Le({x:ue,s:lt})}async function B(ue,ie){return await(await h.TensorOpRegistry.matmul)({a:ue,b:ie})}async function S(ue,ie){return await(await h.TensorOpRegistry.rfft)({x:ue,a:ie})}async function N(ue,ie){const be=await h.TensorOpRegistry.top_k;return ie==null?ie=ue.dims.at(-1):ie=Math.min(ie,ue.dims.at(-1)),await be({x:ue,k:new y("int64",[BigInt(ie)],[1])})}const V=ue=>new y("int64",ue,[ue.length]);async function Z(ue,ie,be,Ye,Le){return await(await h.TensorOpRegistry.slice)({x:ue,s:V(ie),e:V(be),a:V(Ye),t:V(Le??new Array(Ye.length).fill(1))})}function O(ue,ie){const be=ue.data,Ye=ie.data,Le=[ue.dims[0],ue.dims[2]],lt=new be.constructor(Le[0]*Le[1]),[ft,pt,ct]=ue.dims;let He=0;for(let Re=0;Re<ft;++Re){const Se=Re*ct*pt;for(let Qe=0;Qe<ct;++Qe){let ht=0,wt=0;const Bt=Re*pt,Mt=Se+Qe;for(let zt=0;zt<pt;++zt){const ve=Number(Ye[Bt+zt]);wt+=ve,ht+=be[Mt+zt*ct]*ve}const oe=ht/wt;lt[He++]=oe}}return new y(ue.type,lt,Le)}function Q(ue,ie,{eps:be=1e-5}={}){if(ue.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ye,Le]=ue.dims;if(ie.length!==1&&ie[0]!==Le)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[lt,ft]=J(ue,1,0,!0),pt=lt.data,ct=ft.data,He=ue.data,Re=new He.constructor(He.length);for(let Se=0;Se<Ye;++Se){const Qe=Se*Le;for(let ht=0;ht<Le;++ht){const wt=Qe+ht;Re[wt]=(He[wt]-ct[Se])/(pt[Se]+be)}}return new y(ue.type,Re,ue.dims)}function q(ue,ie){return ue=ue.slice(),ie===null?ue=ue.filter(be=>be!==1):typeof ie=="number"?ue[ie]===1&&ue.splice(ie,1):Array.isArray(ie)&&(ue=ue.filter((be,Ye)=>be!==1||!ie.includes(Ye))),ue}function f(ue,ie){return ie=I(ie,ue.length+1),ue=ue.slice(),ue.splice(ie,0,1),ue}function I(ue,ie,be=null,Ye=!0){if(ue<-ie||ue>=ie){if(Ye)throw new Error(`IndexError: index ${ue} is out of bounds for dimension${be===null?"":" "+be} with size ${ie}`);return ue<-ie?0:ie}return ue<0&&(ue=(ue%ie+ie)%ie),ue}function e(ue,ie=0){ie=I(ie,ue[0].dims.length);const be=ue[0].dims.slice();be[ie]=ue.reduce((ft,pt)=>ft+pt.dims[ie],0);const Ye=be.reduce((ft,pt)=>ft*pt,1),Le=new ue[0].data.constructor(Ye),lt=ue[0].type;if(ie===0){let ft=0;for(const pt of ue){const ct=pt.data;Le.set(ct,ft),ft+=ct.length}}else{let ft=0;for(let pt=0;pt<ue.length;++pt){const{data:ct,dims:He}=ue[pt];for(let Re=0;Re<ct.length;++Re){let Se=0;for(let Qe=He.length-1,ht=Re,wt=1;Qe>=0;--Qe){const Bt=He[Qe];let Mt=ht%Bt;Qe===ie&&(Mt+=ft),Se+=Mt*wt,wt*=be[Qe],ht=Math.floor(ht/Bt)}Le[Se]=ct[Re]}ft+=He[ie]}}return new y(lt,Le,be)}function c(ue,ie=0){return e(ue.map(be=>be.unsqueeze(ie)),ie)}function P(ue,ie,be=null,Ye=!1,Le=null){const lt=ie.data,ft=ie.dims;be=I(be,ft.length);const pt=ft.slice();pt[be]=1;const ct=new lt.constructor(lt.length/ft[be]);Le!==null&&ct.fill(Le);for(let He=0;He<lt.length;++He){let Re=0;for(let Se=ft.length-1,Qe=He,ht=1;Se>=0;--Se){const wt=ft[Se];if(Se!==be){const Bt=Qe%wt;Re+=Bt*ht,ht*=pt[Se]}Qe=Math.floor(Qe/wt)}ct[Re]=ue(ct[Re],lt[He],He,Re)}return Ye||pt.splice(be,1),[ie.type,ct,pt]}function J(ue,ie=null,be=1,Ye=!1){const Le=ue.data,lt=ue.dims;if(ie===null){const ht=Le.reduce((oe,zt)=>oe+zt,0)/Le.length,wt=Math.sqrt(Le.reduce((oe,zt)=>oe+(zt-ht)**2,0)/(Le.length-be)),Bt=new y(ue.type,[ht],[]);return[new y(ue.type,[wt],[]),Bt]}ie=I(ie,lt.length);const ft=D(ue,ie,Ye),pt=ft.data,[ct,He,Re]=P((Qe,ht,wt,Bt)=>Qe+(ht-pt[Bt])**2,ue,ie,Ye);for(let Qe=0;Qe<He.length;++Qe)He[Qe]=Math.sqrt(He[Qe]/(lt[ie]-be));return[new y(ct,He,Re),ft]}function D(ue,ie=null,be=!1){const Ye=ue.dims,Le=ue.data;if(ie===null){const ct=Le.reduce((He,Re)=>He+Re,0);return new y(ue.type,[ct/Le.length],[])}ie=I(ie,Ye.length);const[lt,ft,pt]=P((ct,He)=>ct+He,ue,ie,be);if(Ye[ie]!==1)for(let ct=0;ct<ft.length;++ct)ft[ct]/=Ye[ie];return new y(lt,ft,pt)}function j(ue){const ie=new Array(ue.length);for(let be=ue.length-1,Ye=1;be>=0;--be)ie[be]=Ye,Ye*=ue[be];return ie}function Ie(ue,ie,be,Ye){const Le=ue.reduce((lt,ft)=>lt*ft,1);return new y(be,new Ye(Le).fill(ie),ue)}function ge(ue,ie){let be,Ye;if(typeof ie=="number")be="float32",Ye=Float32Array;else if(typeof ie=="bigint")be="int64",Ye=BigInt64Array;else if(typeof ie=="boolean")be="bool",Ye=Uint8Array;else throw new Error(`Unsupported data type: ${typeof ie}`);return Ie(ue,ie,be,Ye)}function ke(ue,ie){return ge(ue.dims,ie)}function Ee(ue){return Ie(ue,1n,"int64",BigInt64Array)}function Ne(ue){return Ee(ue.dims)}function Xe(ue){return Ie(ue,0n,"int64",BigInt64Array)}function At(ue){return Xe(ue.dims)}function xe(ue){const ie=ue.reduce((be,Ye)=>be*Ye,1);return new y("float32",Float32Array.from({length:ie},()=>Math.random()),ue)}function ye(ue,ie){if(ue.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(ue.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(ie))throw new Error("The precision must be either 'binary' or 'ubinary'");const be=ie==="binary",Ye=be?"int8":"uint8",Le=be?Int8Array:Uint8Array,lt=ue.data,ft=new Le(lt.length/8);for(let pt=0;pt<lt.length;++pt){const ct=lt[pt]>0?1:0,He=Math.floor(pt/8),Re=pt%8;ft[He]|=ct<<7-Re,be&&Re===0&&(ft[He]-=128)}return new y(Ye,ft,[ue.dims[0],ue.dims[1]/8])}},"./src/utils/video.js":(i,o,a)=>{a.r(o),a.d(o,{RawVideo:()=>C,RawVideoFrame:()=>h,load_video:()=>y});var u=a("./src/utils/image.js"),p=a("./src/env.js");class h{constructor(_,v){this.image=_,this.timestamp=v}}class C{constructor(_,v){_.length>0&&_[0]instanceof u.RawImage&&(_=_.map((M,B)=>new h(M,(B+1)/(_.length+1)*v))),this.frames=_,this.duration=v}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function y(k,{num_frames:_=null,fps:v=null}={}){if(!p.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(_==null&&v==null)throw new Error("Either num_frames or fps must be provided.");const M=[],B=document.createElement("video");if(B.crossOrigin="anonymous",B.muted=!0,typeof k=="string")B.src=k;else if(k instanceof Blob)B.src=URL.createObjectURL(k);else if(k instanceof HTMLVideoElement)B.src=k.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(q=>B.onloadedmetadata=q),B.seekable.start(0)===B.seekable.end(0)){const f=await(await fetch(B.src)).blob();B.src=URL.createObjectURL(f),await new Promise(I=>B.onloadedmetadata=I)}const S=B.duration;let N,V;_!=null?(N=_,V=_===1?0:S/(_-1)):(V=1/v,N=Math.floor(S/V));let Z=[];for(let q=0;q<N;++q)Z.push(_===1?S/2:q*V);const O=document.createElement("canvas");O.width=B.videoWidth,O.height=B.videoHeight;const Q=O.getContext("2d",{willReadFrequently:!0});for(const q of Z){B.currentTime=q,await new Promise(c=>{B.onseeked=c}),Q.drawImage(B,0,0,O.width,O.height);const f=Q.getImageData(0,0,O.width,O.height),I=new u.RawImage(f.data,O.width,O.height,4),e=new h(I,q);M.push(e)}return B.remove(),new C(M,S)}}},by={};function qa(i){var o=by[i];if(o!==void 0)return o.exports;var a=by[i]={exports:{}};return ax[i](a,a.exports,qa),a.exports}(()=>{var i=Object.getPrototypeOf?a=>Object.getPrototypeOf(a):a=>a.__proto__,o;qa.t=function(a,u){if(u&1&&(a=this(a)),u&8||typeof a=="object"&&a&&(u&4&&a.__esModule||u&16&&typeof a.then=="function"))return a;var p=Object.create(null);qa.r(p);var h={};o=o||[null,i({}),i([]),i(i)];for(var C=u&2&&a;typeof C=="object"&&!~o.indexOf(C);C=i(C))Object.getOwnPropertyNames(C).forEach(y=>h[y]=()=>a[y]);return h.default=()=>a,qa.d(p,h),p}})(),qa.d=(i,o)=>{for(var a in o)qa.o(o,a)&&!qa.o(i,a)&&Object.defineProperty(i,a,{enumerable:!0,get:o[a]})},qa.o=(i,o)=>Object.prototype.hasOwnProperty.call(i,o),qa.r=i=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})};var X={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/qa.r(X),qa.d(X,{ASTFeatureExtractor:()=>M.ASTFeatureExtractor,ASTForAudioClassification:()=>a.ASTForAudioClassification,ASTModel:()=>a.ASTModel,ASTPreTrainedModel:()=>a.ASTPreTrainedModel,AlbertForMaskedLM:()=>a.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>a.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>a.AlbertForSequenceClassification,AlbertModel:()=>a.AlbertModel,AlbertPreTrainedModel:()=>a.AlbertPreTrainedModel,AlbertTokenizer:()=>u.AlbertTokenizer,AudioClassificationPipeline:()=>o.AudioClassificationPipeline,AutoConfig:()=>p.AutoConfig,AutoFeatureExtractor:()=>B.AutoFeatureExtractor,AutoImageProcessor:()=>V.AutoImageProcessor,AutoModel:()=>a.AutoModel,AutoModelForAudioClassification:()=>a.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>a.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>a.AutoModelForAudioTextToText,AutoModelForCTC:()=>a.AutoModelForCTC,AutoModelForCausalLM:()=>a.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>a.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>a.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>a.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>a.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>a.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>a.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>a.AutoModelForImageTextToText,AutoModelForImageToImage:()=>a.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>a.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>a.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>a.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>a.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>a.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>a.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>a.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>a.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>a.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>a.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>a.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>a.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>a.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>a.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>a.AutoModelForVision2Seq,AutoModelForXVector:()=>a.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>a.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>Q.AutoProcessor,AutoTokenizer:()=>u.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>o.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>o.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>a.BartForConditionalGeneration,BartForSequenceClassification:()=>a.BartForSequenceClassification,BartModel:()=>a.BartModel,BartPretrainedModel:()=>a.BartPretrainedModel,BartTokenizer:()=>u.BartTokenizer,BaseModelOutput:()=>a.BaseModelOutput,BaseStreamer:()=>q.BaseStreamer,BeitFeatureExtractor:()=>N.BeitFeatureExtractor,BeitForImageClassification:()=>a.BeitForImageClassification,BeitModel:()=>a.BeitModel,BeitPreTrainedModel:()=>a.BeitPreTrainedModel,BertForMaskedLM:()=>a.BertForMaskedLM,BertForQuestionAnswering:()=>a.BertForQuestionAnswering,BertForSequenceClassification:()=>a.BertForSequenceClassification,BertForTokenClassification:()=>a.BertForTokenClassification,BertModel:()=>a.BertModel,BertPreTrainedModel:()=>a.BertPreTrainedModel,BertTokenizer:()=>u.BertTokenizer,BitImageProcessor:()=>N.BitImageProcessor,BlenderbotForConditionalGeneration:()=>a.BlenderbotForConditionalGeneration,BlenderbotModel:()=>a.BlenderbotModel,BlenderbotPreTrainedModel:()=>a.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>a.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>a.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>a.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>u.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>u.BlenderbotTokenizer,BloomForCausalLM:()=>a.BloomForCausalLM,BloomModel:()=>a.BloomModel,BloomPreTrainedModel:()=>a.BloomPreTrainedModel,BloomTokenizer:()=>u.BloomTokenizer,CLIPFeatureExtractor:()=>N.CLIPFeatureExtractor,CLIPImageProcessor:()=>N.CLIPImageProcessor,CLIPModel:()=>a.CLIPModel,CLIPPreTrainedModel:()=>a.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>a.CLIPSegForImageSegmentation,CLIPSegModel:()=>a.CLIPSegModel,CLIPSegPreTrainedModel:()=>a.CLIPSegPreTrainedModel,CLIPTextModel:()=>a.CLIPTextModel,CLIPTextModelWithProjection:()=>a.CLIPTextModelWithProjection,CLIPTokenizer:()=>u.CLIPTokenizer,CLIPVisionModel:()=>a.CLIPVisionModel,CLIPVisionModelWithProjection:()=>a.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>a.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>a.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>a.CamembertForSequenceClassification,CamembertForTokenClassification:()=>a.CamembertForTokenClassification,CamembertModel:()=>a.CamembertModel,CamembertPreTrainedModel:()=>a.CamembertPreTrainedModel,CamembertTokenizer:()=>u.CamembertTokenizer,CausalLMOutput:()=>a.CausalLMOutput,CausalLMOutputWithPast:()=>a.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>N.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>a.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>a.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>a.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>M.ClapFeatureExtractor,ClapModel:()=>a.ClapModel,ClapPreTrainedModel:()=>a.ClapPreTrainedModel,ClapTextModelWithProjection:()=>a.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>I.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>a.CodeGenForCausalLM,CodeGenModel:()=>a.CodeGenModel,CodeGenPreTrainedModel:()=>a.CodeGenPreTrainedModel,CodeGenTokenizer:()=>u.CodeGenTokenizer,CodeLlamaTokenizer:()=>u.CodeLlamaTokenizer,CohereForCausalLM:()=>a.CohereForCausalLM,CohereModel:()=>a.CohereModel,CoherePreTrainedModel:()=>a.CoherePreTrainedModel,CohereTokenizer:()=>u.CohereTokenizer,ConvBertForMaskedLM:()=>a.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>a.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>a.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>a.ConvBertForTokenClassification,ConvBertModel:()=>a.ConvBertModel,ConvBertPreTrainedModel:()=>a.ConvBertPreTrainedModel,ConvBertTokenizer:()=>u.ConvBertTokenizer,ConvNextFeatureExtractor:()=>N.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>a.ConvNextForImageClassification,ConvNextImageProcessor:()=>N.ConvNextImageProcessor,ConvNextModel:()=>a.ConvNextModel,ConvNextPreTrainedModel:()=>a.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>a.ConvNextV2ForImageClassification,ConvNextV2Model:()=>a.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>a.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>N.DPTFeatureExtractor,DPTForDepthEstimation:()=>a.DPTForDepthEstimation,DPTImageProcessor:()=>N.DPTImageProcessor,DPTModel:()=>a.DPTModel,DPTPreTrainedModel:()=>a.DPTPreTrainedModel,DacDecoderModel:()=>a.DacDecoderModel,DacDecoderOutput:()=>a.DacDecoderOutput,DacEncoderModel:()=>a.DacEncoderModel,DacEncoderOutput:()=>a.DacEncoderOutput,DacFeatureExtractor:()=>M.DacFeatureExtractor,DacModel:()=>a.DacModel,DacPreTrainedModel:()=>a.DacPreTrainedModel,DataTypeMap:()=>k.DataTypeMap,DebertaForMaskedLM:()=>a.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>a.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>a.DebertaForSequenceClassification,DebertaForTokenClassification:()=>a.DebertaForTokenClassification,DebertaModel:()=>a.DebertaModel,DebertaPreTrainedModel:()=>a.DebertaPreTrainedModel,DebertaTokenizer:()=>u.DebertaTokenizer,DebertaV2ForMaskedLM:()=>a.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>a.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>a.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>a.DebertaV2ForTokenClassification,DebertaV2Model:()=>a.DebertaV2Model,DebertaV2PreTrainedModel:()=>a.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>u.DebertaV2Tokenizer,DecisionTransformerModel:()=>a.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>a.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>N.DeiTFeatureExtractor,DeiTForImageClassification:()=>a.DeiTForImageClassification,DeiTImageProcessor:()=>N.DeiTImageProcessor,DeiTModel:()=>a.DeiTModel,DeiTPreTrainedModel:()=>a.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>a.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>a.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>o.DepthEstimationPipeline,DepthProForDepthEstimation:()=>a.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>a.DepthProPreTrainedModel,DetrFeatureExtractor:()=>N.DetrFeatureExtractor,DetrForObjectDetection:()=>a.DetrForObjectDetection,DetrForSegmentation:()=>a.DetrForSegmentation,DetrImageProcessor:()=>N.DetrImageProcessor,DetrModel:()=>a.DetrModel,DetrObjectDetectionOutput:()=>a.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>a.DetrPreTrainedModel,DetrSegmentationOutput:()=>a.DetrSegmentationOutput,Dinov2ForImageClassification:()=>a.Dinov2ForImageClassification,Dinov2Model:()=>a.Dinov2Model,Dinov2PreTrainedModel:()=>a.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>a.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>a.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>a.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>a.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>a.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>a.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>a.DistilBertForTokenClassification,DistilBertModel:()=>a.DistilBertModel,DistilBertPreTrainedModel:()=>a.DistilBertPreTrainedModel,DistilBertTokenizer:()=>u.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>o.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>N.DonutFeatureExtractor,DonutImageProcessor:()=>N.DonutImageProcessor,DonutSwinModel:()=>a.DonutSwinModel,DonutSwinPreTrainedModel:()=>a.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>a.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>N.EfficientNetImageProcessor,EfficientNetModel:()=>a.EfficientNetModel,EfficientNetPreTrainedModel:()=>a.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>a.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>a.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>a.ElectraForSequenceClassification,ElectraForTokenClassification:()=>a.ElectraForTokenClassification,ElectraModel:()=>a.ElectraModel,ElectraPreTrainedModel:()=>a.ElectraPreTrainedModel,ElectraTokenizer:()=>u.ElectraTokenizer,EncodecFeatureExtractor:()=>M.EncodecFeatureExtractor,EosTokenCriteria:()=>f.EosTokenCriteria,EsmForMaskedLM:()=>a.EsmForMaskedLM,EsmForSequenceClassification:()=>a.EsmForSequenceClassification,EsmForTokenClassification:()=>a.EsmForTokenClassification,EsmModel:()=>a.EsmModel,EsmPreTrainedModel:()=>a.EsmPreTrainedModel,EsmTokenizer:()=>u.EsmTokenizer,ExaoneForCausalLM:()=>a.ExaoneForCausalLM,ExaoneModel:()=>a.ExaoneModel,ExaonePreTrainedModel:()=>a.ExaonePreTrainedModel,FFT:()=>_.FFT,FalconForCausalLM:()=>a.FalconForCausalLM,FalconModel:()=>a.FalconModel,FalconPreTrainedModel:()=>a.FalconPreTrainedModel,FalconTokenizer:()=>u.FalconTokenizer,FastViTForImageClassification:()=>a.FastViTForImageClassification,FastViTModel:()=>a.FastViTModel,FastViTPreTrainedModel:()=>a.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>o.FeatureExtractionPipeline,FeatureExtractor:()=>v.FeatureExtractor,FillMaskPipeline:()=>o.FillMaskPipeline,Florence2ForConditionalGeneration:()=>a.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>a.Florence2PreTrainedModel,Florence2Processor:()=>O.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>I.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>I.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>N.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>a.GLPNForDepthEstimation,GLPNModel:()=>a.GLPNModel,GLPNPreTrainedModel:()=>a.GLPNPreTrainedModel,GPT2LMHeadModel:()=>a.GPT2LMHeadModel,GPT2Model:()=>a.GPT2Model,GPT2PreTrainedModel:()=>a.GPT2PreTrainedModel,GPT2Tokenizer:()=>u.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>a.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>a.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>a.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>a.GPTJForCausalLM,GPTJModel:()=>a.GPTJModel,GPTJPreTrainedModel:()=>a.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>a.GPTNeoForCausalLM,GPTNeoModel:()=>a.GPTNeoModel,GPTNeoPreTrainedModel:()=>a.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>a.GPTNeoXForCausalLM,GPTNeoXModel:()=>a.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>a.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>u.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>a.Gemma2ForCausalLM,Gemma2Model:()=>a.Gemma2Model,Gemma2PreTrainedModel:()=>a.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>a.Gemma3ForCausalLM,Gemma3Model:()=>a.Gemma3Model,Gemma3PreTrainedModel:()=>a.Gemma3PreTrainedModel,GemmaForCausalLM:()=>a.GemmaForCausalLM,GemmaModel:()=>a.GemmaModel,GemmaPreTrainedModel:()=>a.GemmaPreTrainedModel,GemmaTokenizer:()=>u.GemmaTokenizer,GlmForCausalLM:()=>a.GlmForCausalLM,GlmModel:()=>a.GlmModel,GlmPreTrainedModel:()=>a.GlmPreTrainedModel,GraniteForCausalLM:()=>a.GraniteForCausalLM,GraniteModel:()=>a.GraniteModel,GranitePreTrainedModel:()=>a.GranitePreTrainedModel,Grok1Tokenizer:()=>u.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>a.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>N.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>a.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>O.GroundingDinoProcessor,GroupViTModel:()=>a.GroupViTModel,GroupViTPreTrainedModel:()=>a.GroupViTPreTrainedModel,HeliumForCausalLM:()=>a.HeliumForCausalLM,HeliumModel:()=>a.HeliumModel,HeliumPreTrainedModel:()=>a.HeliumPreTrainedModel,HerbertTokenizer:()=>u.HerbertTokenizer,HieraForImageClassification:()=>a.HieraForImageClassification,HieraModel:()=>a.HieraModel,HieraPreTrainedModel:()=>a.HieraPreTrainedModel,HubertForCTC:()=>a.HubertForCTC,HubertForSequenceClassification:()=>a.HubertForSequenceClassification,HubertModel:()=>a.HubertModel,HubertPreTrainedModel:()=>a.HubertPreTrainedModel,IJepaForImageClassification:()=>a.IJepaForImageClassification,IJepaModel:()=>a.IJepaModel,IJepaPreTrainedModel:()=>a.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>a.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>N.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>a.Idefics3PreTrainedModel,Idefics3Processor:()=>O.Idefics3Processor,ImageClassificationPipeline:()=>o.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>o.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>M.ImageFeatureExtractor,ImageMattingOutput:()=>a.ImageMattingOutput,ImageProcessor:()=>S.ImageProcessor,ImageSegmentationPipeline:()=>o.ImageSegmentationPipeline,ImageToImagePipeline:()=>o.ImageToImagePipeline,ImageToTextPipeline:()=>o.ImageToTextPipeline,InterruptableStoppingCriteria:()=>f.InterruptableStoppingCriteria,JAISLMHeadModel:()=>a.JAISLMHeadModel,JAISModel:()=>a.JAISModel,JAISPreTrainedModel:()=>a.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>N.JinaCLIPImageProcessor,JinaCLIPModel:()=>a.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>a.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>O.JinaCLIPProcessor,JinaCLIPTextModel:()=>a.JinaCLIPTextModel,JinaCLIPVisionModel:()=>a.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>a.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>a.LlamaForCausalLM,LlamaModel:()=>a.LlamaModel,LlamaPreTrainedModel:()=>a.LlamaPreTrainedModel,LlamaTokenizer:()=>u.LlamaTokenizer,LlavaForConditionalGeneration:()=>a.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>a.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>N.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>a.LlavaPreTrainedModel,LogitsProcessor:()=>I.LogitsProcessor,LogitsProcessorList:()=>I.LogitsProcessorList,LogitsWarper:()=>I.LogitsWarper,LongT5ForConditionalGeneration:()=>a.LongT5ForConditionalGeneration,LongT5Model:()=>a.LongT5Model,LongT5PreTrainedModel:()=>a.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>a.M2M100ForConditionalGeneration,M2M100Model:()=>a.M2M100Model,M2M100PreTrainedModel:()=>a.M2M100PreTrainedModel,M2M100Tokenizer:()=>u.M2M100Tokenizer,MBart50Tokenizer:()=>u.MBart50Tokenizer,MBartForCausalLM:()=>a.MBartForCausalLM,MBartForConditionalGeneration:()=>a.MBartForConditionalGeneration,MBartForSequenceClassification:()=>a.MBartForSequenceClassification,MBartModel:()=>a.MBartModel,MBartPreTrainedModel:()=>a.MBartPreTrainedModel,MBartTokenizer:()=>u.MBartTokenizer,MPNetForMaskedLM:()=>a.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>a.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>a.MPNetForSequenceClassification,MPNetForTokenClassification:()=>a.MPNetForTokenClassification,MPNetModel:()=>a.MPNetModel,MPNetPreTrainedModel:()=>a.MPNetPreTrainedModel,MPNetTokenizer:()=>u.MPNetTokenizer,MT5ForConditionalGeneration:()=>a.MT5ForConditionalGeneration,MT5Model:()=>a.MT5Model,MT5PreTrainedModel:()=>a.MT5PreTrainedModel,MarianMTModel:()=>a.MarianMTModel,MarianModel:()=>a.MarianModel,MarianPreTrainedModel:()=>a.MarianPreTrainedModel,MarianTokenizer:()=>u.MarianTokenizer,Mask2FormerImageProcessor:()=>N.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>N.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>a.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>N.MaskFormerImageProcessor,MaskFormerModel:()=>a.MaskFormerModel,MaskFormerPreTrainedModel:()=>a.MaskFormerPreTrainedModel,MaskedLMOutput:()=>a.MaskedLMOutput,MaxLengthCriteria:()=>f.MaxLengthCriteria,Metric3DForDepthEstimation:()=>a.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>a.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>a.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>a.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>a.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>a.MgpstrModelOutput,MgpstrPreTrainedModel:()=>a.MgpstrPreTrainedModel,MgpstrProcessor:()=>O.MgpstrProcessor,MgpstrTokenizer:()=>u.MgpstrTokenizer,MimiDecoderModel:()=>a.MimiDecoderModel,MimiDecoderOutput:()=>a.MimiDecoderOutput,MimiEncoderModel:()=>a.MimiEncoderModel,MimiEncoderOutput:()=>a.MimiEncoderOutput,MimiModel:()=>a.MimiModel,MimiPreTrainedModel:()=>a.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>I.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>I.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>a.MistralForCausalLM,MistralModel:()=>a.MistralModel,MistralPreTrainedModel:()=>a.MistralPreTrainedModel,MobileBertForMaskedLM:()=>a.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>a.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>a.MobileBertForSequenceClassification,MobileBertModel:()=>a.MobileBertModel,MobileBertPreTrainedModel:()=>a.MobileBertPreTrainedModel,MobileBertTokenizer:()=>u.MobileBertTokenizer,MobileLLMForCausalLM:()=>a.MobileLLMForCausalLM,MobileLLMModel:()=>a.MobileLLMModel,MobileLLMPreTrainedModel:()=>a.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>N.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>a.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>a.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>N.MobileNetV1ImageProcessor,MobileNetV1Model:()=>a.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>a.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>N.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>a.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>a.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>N.MobileNetV2ImageProcessor,MobileNetV2Model:()=>a.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>a.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>N.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>a.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>a.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>N.MobileNetV3ImageProcessor,MobileNetV3Model:()=>a.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>a.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>N.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>a.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>a.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>N.MobileNetV4ImageProcessor,MobileNetV4Model:()=>a.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>a.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>N.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>a.MobileViTForImageClassification,MobileViTImageProcessor:()=>N.MobileViTImageProcessor,MobileViTModel:()=>a.MobileViTModel,MobileViTPreTrainedModel:()=>a.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>a.MobileViTV2ForImageClassification,MobileViTV2Model:()=>a.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>a.MobileViTV2PreTrainedModel,ModelOutput:()=>a.ModelOutput,ModernBertForMaskedLM:()=>a.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>a.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>a.ModernBertForTokenClassification,ModernBertModel:()=>a.ModernBertModel,ModernBertPreTrainedModel:()=>a.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>a.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>M.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>a.MoonshineForConditionalGeneration,MoonshineModel:()=>a.MoonshineModel,MoonshinePreTrainedModel:()=>a.MoonshinePreTrainedModel,MoonshineProcessor:()=>O.MoonshineProcessor,MptForCausalLM:()=>a.MptForCausalLM,MptModel:()=>a.MptModel,MptPreTrainedModel:()=>a.MptPreTrainedModel,MultiModalityCausalLM:()=>a.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>a.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>a.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>a.MusicgenForConditionalGeneration,MusicgenModel:()=>a.MusicgenModel,MusicgenPreTrainedModel:()=>a.MusicgenPreTrainedModel,NllbTokenizer:()=>u.NllbTokenizer,NoBadWordsLogitsProcessor:()=>I.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>I.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>a.NomicBertModel,NomicBertPreTrainedModel:()=>a.NomicBertPreTrainedModel,NougatImageProcessor:()=>N.NougatImageProcessor,NougatTokenizer:()=>u.NougatTokenizer,OPTForCausalLM:()=>a.OPTForCausalLM,OPTModel:()=>a.OPTModel,OPTPreTrainedModel:()=>a.OPTPreTrainedModel,ObjectDetectionPipeline:()=>o.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>a.Olmo2ForCausalLM,Olmo2Model:()=>a.Olmo2Model,Olmo2PreTrainedModel:()=>a.Olmo2PreTrainedModel,OlmoForCausalLM:()=>a.OlmoForCausalLM,OlmoModel:()=>a.OlmoModel,OlmoPreTrainedModel:()=>a.OlmoPreTrainedModel,OpenELMForCausalLM:()=>a.OpenELMForCausalLM,OpenELMModel:()=>a.OpenELMModel,OpenELMPreTrainedModel:()=>a.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>N.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>a.OwlViTForObjectDetection,OwlViTImageProcessor:()=>N.OwlViTImageProcessor,OwlViTModel:()=>a.OwlViTModel,OwlViTPreTrainedModel:()=>a.OwlViTPreTrainedModel,OwlViTProcessor:()=>O.OwlViTProcessor,Owlv2ForObjectDetection:()=>a.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>N.Owlv2ImageProcessor,Owlv2Model:()=>a.Owlv2Model,Owlv2PreTrainedModel:()=>a.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>a.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>a.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>O.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>a.PatchTSMixerForPrediction,PatchTSMixerModel:()=>a.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>a.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>a.PatchTSTForPrediction,PatchTSTModel:()=>a.PatchTSTModel,PatchTSTPreTrainedModel:()=>a.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>a.Phi3ForCausalLM,Phi3Model:()=>a.Phi3Model,Phi3PreTrainedModel:()=>a.Phi3PreTrainedModel,Phi3VForCausalLM:()=>a.Phi3VForCausalLM,Phi3VImageProcessor:()=>N.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>a.Phi3VPreTrainedModel,Phi3VProcessor:()=>O.Phi3VProcessor,PhiForCausalLM:()=>a.PhiForCausalLM,PhiModel:()=>a.PhiModel,PhiPreTrainedModel:()=>a.PhiPreTrainedModel,Pipeline:()=>o.Pipeline,PreTrainedModel:()=>a.PreTrainedModel,PreTrainedTokenizer:()=>u.PreTrainedTokenizer,PretrainedConfig:()=>p.PretrainedConfig,PretrainedMixin:()=>a.PretrainedMixin,Processor:()=>Z.Processor,PvtForImageClassification:()=>a.PvtForImageClassification,PvtImageProcessor:()=>N.PvtImageProcessor,PvtModel:()=>a.PvtModel,PvtPreTrainedModel:()=>a.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>M.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>a.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>a.PyAnnoteModel,PyAnnotePreTrainedModel:()=>a.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>O.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>a.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>o.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>a.Qwen2ForCausalLM,Qwen2Model:()=>a.Qwen2Model,Qwen2PreTrainedModel:()=>a.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>u.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>a.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>N.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>a.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>O.Qwen2VLProcessor,RFDetrForObjectDetection:()=>a.RFDetrForObjectDetection,RFDetrModel:()=>a.RFDetrModel,RFDetrObjectDetectionOutput:()=>a.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>a.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>a.RTDetrForObjectDetection,RTDetrImageProcessor:()=>N.RTDetrImageProcessor,RTDetrModel:()=>a.RTDetrModel,RTDetrObjectDetectionOutput:()=>a.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>a.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>a.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>a.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>a.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>a.RTDetrV2PreTrainedModel,RawAudio:()=>h.RawAudio,RawImage:()=>C.RawImage,RawVideo:()=>y.RawVideo,RawVideoFrame:()=>y.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>I.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>a.ResNetForImageClassification,ResNetModel:()=>a.ResNetModel,ResNetPreTrainedModel:()=>a.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>a.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>a.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>a.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>a.RoFormerForTokenClassification,RoFormerModel:()=>a.RoFormerModel,RoFormerPreTrainedModel:()=>a.RoFormerPreTrainedModel,RoFormerTokenizer:()=>u.RoFormerTokenizer,RobertaForMaskedLM:()=>a.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>a.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>a.RobertaForSequenceClassification,RobertaForTokenClassification:()=>a.RobertaForTokenClassification,RobertaModel:()=>a.RobertaModel,RobertaPreTrainedModel:()=>a.RobertaPreTrainedModel,RobertaTokenizer:()=>u.RobertaTokenizer,SamImageProcessor:()=>N.SamImageProcessor,SamImageSegmentationOutput:()=>a.SamImageSegmentationOutput,SamModel:()=>a.SamModel,SamPreTrainedModel:()=>a.SamPreTrainedModel,SamProcessor:()=>O.SamProcessor,SapiensForDepthEstimation:()=>a.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>a.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>a.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>a.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>M.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>N.SegformerFeatureExtractor,SegformerForImageClassification:()=>a.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>a.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>N.SegformerImageProcessor,SegformerModel:()=>a.SegformerModel,SegformerPreTrainedModel:()=>a.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>a.Seq2SeqLMOutput,SequenceClassifierOutput:()=>a.SequenceClassifierOutput,SiglipImageProcessor:()=>N.SiglipImageProcessor,SiglipModel:()=>a.SiglipModel,SiglipPreTrainedModel:()=>a.SiglipPreTrainedModel,SiglipTextModel:()=>a.SiglipTextModel,SiglipTokenizer:()=>u.SiglipTokenizer,SiglipVisionModel:()=>a.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>a.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>N.SmolVLMImageProcessor,SmolVLMProcessor:()=>O.SmolVLMProcessor,SnacDecoderModel:()=>a.SnacDecoderModel,SnacEncoderModel:()=>a.SnacEncoderModel,SnacFeatureExtractor:()=>M.SnacFeatureExtractor,SnacModel:()=>a.SnacModel,SnacPreTrainedModel:()=>a.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>M.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>a.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>a.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>a.SpeechT5HifiGan,SpeechT5Model:()=>a.SpeechT5Model,SpeechT5PreTrainedModel:()=>a.SpeechT5PreTrainedModel,SpeechT5Processor:()=>O.SpeechT5Processor,SpeechT5Tokenizer:()=>u.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>a.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>a.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>a.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>a.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>a.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>u.SqueezeBertTokenizer,StableLmForCausalLM:()=>a.StableLmForCausalLM,StableLmModel:()=>a.StableLmModel,StableLmPreTrainedModel:()=>a.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>a.Starcoder2ForCausalLM,Starcoder2Model:()=>a.Starcoder2Model,Starcoder2PreTrainedModel:()=>a.Starcoder2PreTrainedModel,StoppingCriteria:()=>f.StoppingCriteria,StoppingCriteriaList:()=>f.StoppingCriteriaList,StyleTextToSpeech2Model:()=>a.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>a.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>o.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>I.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>a.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>N.Swin2SRImageProcessor,Swin2SRModel:()=>a.Swin2SRModel,Swin2SRPreTrainedModel:()=>a.Swin2SRPreTrainedModel,SwinForImageClassification:()=>a.SwinForImageClassification,SwinForSemanticSegmentation:()=>a.SwinForSemanticSegmentation,SwinModel:()=>a.SwinModel,SwinPreTrainedModel:()=>a.SwinPreTrainedModel,T5ForConditionalGeneration:()=>a.T5ForConditionalGeneration,T5Model:()=>a.T5Model,T5PreTrainedModel:()=>a.T5PreTrainedModel,T5Tokenizer:()=>u.T5Tokenizer,TableTransformerForObjectDetection:()=>a.TableTransformerForObjectDetection,TableTransformerModel:()=>a.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>a.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>a.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>I.TemperatureLogitsWarper,Tensor:()=>k.Tensor,Text2TextGenerationPipeline:()=>o.Text2TextGenerationPipeline,TextClassificationPipeline:()=>o.TextClassificationPipeline,TextGenerationPipeline:()=>o.TextGenerationPipeline,TextStreamer:()=>q.TextStreamer,TextToAudioPipeline:()=>o.TextToAudioPipeline,TokenClassificationPipeline:()=>o.TokenClassificationPipeline,TokenClassifierOutput:()=>a.TokenClassifierOutput,TokenizerModel:()=>u.TokenizerModel,TopKLogitsWarper:()=>I.TopKLogitsWarper,TopPLogitsWarper:()=>I.TopPLogitsWarper,TrOCRForCausalLM:()=>a.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>a.TrOCRPreTrainedModel,TranslationPipeline:()=>o.TranslationPipeline,UltravoxModel:()=>a.UltravoxModel,UltravoxPreTrainedModel:()=>a.UltravoxPreTrainedModel,UltravoxProcessor:()=>O.UltravoxProcessor,UniSpeechForCTC:()=>a.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>a.UniSpeechForSequenceClassification,UniSpeechModel:()=>a.UniSpeechModel,UniSpeechPreTrainedModel:()=>a.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>a.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>a.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>a.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>a.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>a.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>O.VLChatProcessor,VLMImageProcessor:()=>N.VLMImageProcessor,ViTFeatureExtractor:()=>N.ViTFeatureExtractor,ViTForImageClassification:()=>a.ViTForImageClassification,ViTImageProcessor:()=>N.ViTImageProcessor,ViTMAEModel:()=>a.ViTMAEModel,ViTMAEPreTrainedModel:()=>a.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>a.ViTMSNForImageClassification,ViTMSNModel:()=>a.ViTMSNModel,ViTMSNPreTrainedModel:()=>a.ViTMSNPreTrainedModel,ViTModel:()=>a.ViTModel,ViTPreTrainedModel:()=>a.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>a.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>a.VitMatteForImageMatting,VitMatteImageProcessor:()=>N.VitMatteImageProcessor,VitMattePreTrainedModel:()=>a.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>a.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>N.VitPoseImageProcessor,VitPosePreTrainedModel:()=>a.VitPosePreTrainedModel,VitsModel:()=>a.VitsModel,VitsModelOutput:()=>a.VitsModelOutput,VitsPreTrainedModel:()=>a.VitsPreTrainedModel,VitsTokenizer:()=>u.VitsTokenizer,Wav2Vec2BertForCTC:()=>a.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>a.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>a.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>a.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>u.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>M.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>a.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>a.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>a.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>a.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>a.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>O.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>O.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>a.WavLMForAudioFrameClassification,WavLMForCTC:()=>a.WavLMForCTC,WavLMForSequenceClassification:()=>a.WavLMForSequenceClassification,WavLMForXVector:()=>a.WavLMForXVector,WavLMModel:()=>a.WavLMModel,WavLMPreTrainedModel:()=>a.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>M.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>a.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>a.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>M.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>a.WhisperForConditionalGeneration,WhisperModel:()=>a.WhisperModel,WhisperPreTrainedModel:()=>a.WhisperPreTrainedModel,WhisperProcessor:()=>O.WhisperProcessor,WhisperTextStreamer:()=>q.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>I.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>u.WhisperTokenizer,XLMForQuestionAnswering:()=>a.XLMForQuestionAnswering,XLMForSequenceClassification:()=>a.XLMForSequenceClassification,XLMForTokenClassification:()=>a.XLMForTokenClassification,XLMModel:()=>a.XLMModel,XLMPreTrainedModel:()=>a.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>a.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>a.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>a.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>a.XLMRobertaForTokenClassification,XLMRobertaModel:()=>a.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>a.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>u.XLMRobertaTokenizer,XLMTokenizer:()=>u.XLMTokenizer,XLMWithLMHeadModel:()=>a.XLMWithLMHeadModel,XVectorOutput:()=>a.XVectorOutput,YolosFeatureExtractor:()=>N.YolosFeatureExtractor,YolosForObjectDetection:()=>a.YolosForObjectDetection,YolosImageProcessor:()=>N.YolosImageProcessor,YolosModel:()=>a.YolosModel,YolosObjectDetectionOutput:()=>a.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>a.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>o.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>o.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>o.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>o.ZeroShotObjectDetectionPipeline,bankers_round:()=>_.bankers_round,cat:()=>k.cat,cos_sim:()=>_.cos_sim,dot:()=>_.dot,dynamic_time_warping:()=>_.dynamic_time_warping,env:()=>i.env,full:()=>k.full,full_like:()=>k.full_like,getKeyValueShapes:()=>p.getKeyValueShapes,hamming:()=>h.hamming,hanning:()=>h.hanning,interpolate:()=>k.interpolate,interpolate_4d:()=>k.interpolate_4d,interpolate_data:()=>_.interpolate_data,is_chinese_char:()=>u.is_chinese_char,layer_norm:()=>k.layer_norm,load_image:()=>C.load_image,load_video:()=>y.load_video,log_softmax:()=>_.log_softmax,magnitude:()=>_.magnitude,matmul:()=>k.matmul,max:()=>_.max,mean:()=>k.mean,mean_pooling:()=>k.mean_pooling,medianFilter:()=>_.medianFilter,mel_filter_bank:()=>h.mel_filter_bank,min:()=>_.min,ones:()=>k.ones,ones_like:()=>k.ones_like,permute:()=>k.permute,permute_data:()=>_.permute_data,pipeline:()=>o.pipeline,quantize_embeddings:()=>k.quantize_embeddings,rand:()=>k.rand,read_audio:()=>h.read_audio,rfft:()=>k.rfft,round:()=>_.round,slice:()=>k.slice,softmax:()=>_.softmax,spectrogram:()=>h.spectrogram,stack:()=>k.stack,std_mean:()=>k.std_mean,topk:()=>k.topk,window_function:()=>h.window_function,zeros:()=>k.zeros,zeros_like:()=>k.zeros_like});var i=qa("./src/env.js"),o=qa("./src/pipelines.js"),a=qa("./src/models.js"),u=qa("./src/tokenizers.js"),p=qa("./src/configs.js"),h=qa("./src/utils/audio.js"),C=qa("./src/utils/image.js"),y=qa("./src/utils/video.js"),k=qa("./src/utils/tensor.js"),_=qa("./src/utils/maths.js"),v=qa("./src/base/feature_extraction_utils.js"),M=qa("./src/models/feature_extractors.js"),B=qa("./src/models/auto/feature_extraction_auto.js"),S=qa("./src/base/image_processors_utils.js"),N=qa("./src/models/image_processors.js"),V=qa("./src/models/auto/image_processing_auto.js"),Z=qa("./src/base/processing_utils.js"),O=qa("./src/models/processors.js"),Q=qa("./src/models/auto/processing_auto.js"),q=qa("./src/generation/streamers.js"),f=qa("./src/generation/stopping_criteria.js"),I=qa("./src/generation/logits_process.js")})(),X.ASTFeatureExtractor,X.ASTForAudioClassification,X.ASTModel,X.ASTPreTrainedModel,X.AlbertForMaskedLM,X.AlbertForQuestionAnswering,X.AlbertForSequenceClassification,X.AlbertModel,X.AlbertPreTrainedModel,X.AlbertTokenizer,X.AudioClassificationPipeline,X.AutoConfig,X.AutoFeatureExtractor,X.AutoImageProcessor,X.AutoModel,X.AutoModelForAudioClassification,X.AutoModelForAudioFrameClassification,X.AutoModelForAudioTextToText,X.AutoModelForCTC,X.AutoModelForCausalLM,X.AutoModelForDepthEstimation,X.AutoModelForDocumentQuestionAnswering,X.AutoModelForImageClassification,X.AutoModelForImageFeatureExtraction,X.AutoModelForImageMatting,X.AutoModelForImageSegmentation,X.AutoModelForImageTextToText,X.AutoModelForImageToImage,X.AutoModelForMaskGeneration,X.AutoModelForMaskedLM,X.AutoModelForNormalEstimation,X.AutoModelForObjectDetection,X.AutoModelForPoseEstimation,X.AutoModelForQuestionAnswering,X.AutoModelForSemanticSegmentation,X.AutoModelForSeq2SeqLM,X.AutoModelForSequenceClassification,X.AutoModelForSpeechSeq2Seq,X.AutoModelForTextToSpectrogram,X.AutoModelForTextToWaveform,X.AutoModelForTokenClassification,X.AutoModelForUniversalSegmentation,X.AutoModelForVision2Seq,X.AutoModelForXVector,X.AutoModelForZeroShotObjectDetection,X.AutoProcessor,X.AutoTokenizer,X.AutomaticSpeechRecognitionPipeline,X.BackgroundRemovalPipeline,X.BartForConditionalGeneration,X.BartForSequenceClassification,X.BartModel,X.BartPretrainedModel,X.BartTokenizer,X.BaseModelOutput,X.BaseStreamer,X.BeitFeatureExtractor,X.BeitForImageClassification,X.BeitModel,X.BeitPreTrainedModel,X.BertForMaskedLM,X.BertForQuestionAnswering,X.BertForSequenceClassification,X.BertForTokenClassification,X.BertModel,X.BertPreTrainedModel,X.BertTokenizer,X.BitImageProcessor,X.BlenderbotForConditionalGeneration,X.BlenderbotModel,X.BlenderbotPreTrainedModel,X.BlenderbotSmallForConditionalGeneration,X.BlenderbotSmallModel,X.BlenderbotSmallPreTrainedModel,X.BlenderbotSmallTokenizer,X.BlenderbotTokenizer,X.BloomForCausalLM,X.BloomModel,X.BloomPreTrainedModel,X.BloomTokenizer,X.CLIPFeatureExtractor,X.CLIPImageProcessor,X.CLIPModel,X.CLIPPreTrainedModel,X.CLIPSegForImageSegmentation,X.CLIPSegModel,X.CLIPSegPreTrainedModel,X.CLIPTextModel,X.CLIPTextModelWithProjection,X.CLIPTokenizer,X.CLIPVisionModel,X.CLIPVisionModelWithProjection,X.CamembertForMaskedLM,X.CamembertForQuestionAnswering,X.CamembertForSequenceClassification,X.CamembertForTokenClassification,X.CamembertModel,X.CamembertPreTrainedModel,X.CamembertTokenizer,X.CausalLMOutput,X.CausalLMOutputWithPast,X.ChineseCLIPFeatureExtractor,X.ChineseCLIPModel,X.ChineseCLIPPreTrainedModel,X.ClapAudioModelWithProjection,X.ClapFeatureExtractor,X.ClapModel,X.ClapPreTrainedModel,X.ClapTextModelWithProjection,X.ClassifierFreeGuidanceLogitsProcessor,X.CodeGenForCausalLM,X.CodeGenModel,X.CodeGenPreTrainedModel,X.CodeGenTokenizer,X.CodeLlamaTokenizer,X.CohereForCausalLM,X.CohereModel,X.CoherePreTrainedModel,X.CohereTokenizer,X.ConvBertForMaskedLM,X.ConvBertForQuestionAnswering,X.ConvBertForSequenceClassification,X.ConvBertForTokenClassification,X.ConvBertModel,X.ConvBertPreTrainedModel,X.ConvBertTokenizer,X.ConvNextFeatureExtractor,X.ConvNextForImageClassification,X.ConvNextImageProcessor,X.ConvNextModel,X.ConvNextPreTrainedModel,X.ConvNextV2ForImageClassification,X.ConvNextV2Model,X.ConvNextV2PreTrainedModel,X.DPTFeatureExtractor,X.DPTForDepthEstimation,X.DPTImageProcessor,X.DPTModel,X.DPTPreTrainedModel,X.DacDecoderModel,X.DacDecoderOutput,X.DacEncoderModel,X.DacEncoderOutput,X.DacFeatureExtractor,X.DacModel,X.DacPreTrainedModel,X.DataTypeMap,X.DebertaForMaskedLM,X.DebertaForQuestionAnswering,X.DebertaForSequenceClassification,X.DebertaForTokenClassification,X.DebertaModel,X.DebertaPreTrainedModel,X.DebertaTokenizer,X.DebertaV2ForMaskedLM,X.DebertaV2ForQuestionAnswering,X.DebertaV2ForSequenceClassification,X.DebertaV2ForTokenClassification,X.DebertaV2Model,X.DebertaV2PreTrainedModel,X.DebertaV2Tokenizer,X.DecisionTransformerModel,X.DecisionTransformerPreTrainedModel,X.DeiTFeatureExtractor,X.DeiTForImageClassification,X.DeiTImageProcessor,X.DeiTModel,X.DeiTPreTrainedModel,X.DepthAnythingForDepthEstimation,X.DepthAnythingPreTrainedModel,X.DepthEstimationPipeline,X.DepthProForDepthEstimation,X.DepthProPreTrainedModel,X.DetrFeatureExtractor,X.DetrForObjectDetection,X.DetrForSegmentation,X.DetrImageProcessor,X.DetrModel,X.DetrObjectDetectionOutput,X.DetrPreTrainedModel,X.DetrSegmentationOutput,X.Dinov2ForImageClassification,X.Dinov2Model,X.Dinov2PreTrainedModel,X.Dinov2WithRegistersForImageClassification,X.Dinov2WithRegistersModel,X.Dinov2WithRegistersPreTrainedModel,X.DistilBertForMaskedLM,X.DistilBertForQuestionAnswering,X.DistilBertForSequenceClassification,X.DistilBertForTokenClassification,X.DistilBertModel,X.DistilBertPreTrainedModel,X.DistilBertTokenizer,X.DocumentQuestionAnsweringPipeline,X.DonutFeatureExtractor,X.DonutImageProcessor,X.DonutSwinModel,X.DonutSwinPreTrainedModel,X.EfficientNetForImageClassification,X.EfficientNetImageProcessor,X.EfficientNetModel,X.EfficientNetPreTrainedModel,X.ElectraForMaskedLM,X.ElectraForQuestionAnswering,X.ElectraForSequenceClassification,X.ElectraForTokenClassification,X.ElectraModel,X.ElectraPreTrainedModel,X.ElectraTokenizer,X.EncodecFeatureExtractor,X.EosTokenCriteria,X.EsmForMaskedLM,X.EsmForSequenceClassification,X.EsmForTokenClassification,X.EsmModel,X.EsmPreTrainedModel,X.EsmTokenizer,X.ExaoneForCausalLM,X.ExaoneModel,X.ExaonePreTrainedModel,X.FFT,X.FalconForCausalLM,X.FalconModel,X.FalconPreTrainedModel,X.FalconTokenizer,X.FastViTForImageClassification,X.FastViTModel,X.FastViTPreTrainedModel,X.FeatureExtractionPipeline,X.FeatureExtractor,X.FillMaskPipeline,X.Florence2ForConditionalGeneration,X.Florence2PreTrainedModel,X.Florence2Processor,X.ForcedBOSTokenLogitsProcessor,X.ForcedEOSTokenLogitsProcessor,X.GLPNFeatureExtractor,X.GLPNForDepthEstimation,X.GLPNModel,X.GLPNPreTrainedModel,X.GPT2LMHeadModel,X.GPT2Model,X.GPT2PreTrainedModel,X.GPT2Tokenizer,X.GPTBigCodeForCausalLM,X.GPTBigCodeModel,X.GPTBigCodePreTrainedModel,X.GPTJForCausalLM,X.GPTJModel,X.GPTJPreTrainedModel,X.GPTNeoForCausalLM,X.GPTNeoModel,X.GPTNeoPreTrainedModel,X.GPTNeoXForCausalLM,X.GPTNeoXModel,X.GPTNeoXPreTrainedModel,X.GPTNeoXTokenizer,X.Gemma2ForCausalLM,X.Gemma2Model,X.Gemma2PreTrainedModel,X.Gemma3ForCausalLM,X.Gemma3Model,X.Gemma3PreTrainedModel,X.GemmaForCausalLM,X.GemmaModel,X.GemmaPreTrainedModel,X.GemmaTokenizer,X.GlmForCausalLM,X.GlmModel,X.GlmPreTrainedModel,X.GraniteForCausalLM,X.GraniteModel,X.GranitePreTrainedModel,X.Grok1Tokenizer,X.GroundingDinoForObjectDetection,X.GroundingDinoImageProcessor,X.GroundingDinoPreTrainedModel,X.GroundingDinoProcessor,X.GroupViTModel,X.GroupViTPreTrainedModel,X.HeliumForCausalLM,X.HeliumModel,X.HeliumPreTrainedModel,X.HerbertTokenizer,X.HieraForImageClassification,X.HieraModel,X.HieraPreTrainedModel,X.HubertForCTC,X.HubertForSequenceClassification,X.HubertModel,X.HubertPreTrainedModel,X.IJepaForImageClassification,X.IJepaModel,X.IJepaPreTrainedModel,X.Idefics3ForConditionalGeneration,X.Idefics3ImageProcessor,X.Idefics3PreTrainedModel,X.Idefics3Processor,X.ImageClassificationPipeline,X.ImageFeatureExtractionPipeline,X.ImageFeatureExtractor,X.ImageMattingOutput,X.ImageProcessor,X.ImageSegmentationPipeline,X.ImageToImagePipeline,X.ImageToTextPipeline,X.InterruptableStoppingCriteria,X.JAISLMHeadModel,X.JAISModel,X.JAISPreTrainedModel,X.JinaCLIPImageProcessor,X.JinaCLIPModel,X.JinaCLIPPreTrainedModel,X.JinaCLIPProcessor,X.JinaCLIPTextModel,X.JinaCLIPVisionModel,X.LiteWhisperForConditionalGeneration,X.LlamaForCausalLM,X.LlamaModel,X.LlamaPreTrainedModel,X.LlamaTokenizer,X.LlavaForConditionalGeneration,X.LlavaOnevisionForConditionalGeneration,X.LlavaOnevisionImageProcessor,X.LlavaPreTrainedModel,X.LogitsProcessor,X.LogitsProcessorList,X.LogitsWarper,X.LongT5ForConditionalGeneration,X.LongT5Model,X.LongT5PreTrainedModel,X.M2M100ForConditionalGeneration,X.M2M100Model,X.M2M100PreTrainedModel,X.M2M100Tokenizer,X.MBart50Tokenizer,X.MBartForCausalLM,X.MBartForConditionalGeneration,X.MBartForSequenceClassification,X.MBartModel,X.MBartPreTrainedModel,X.MBartTokenizer,X.MPNetForMaskedLM,X.MPNetForQuestionAnswering,X.MPNetForSequenceClassification,X.MPNetForTokenClassification,X.MPNetModel,X.MPNetPreTrainedModel,X.MPNetTokenizer,X.MT5ForConditionalGeneration,X.MT5Model,X.MT5PreTrainedModel,X.MarianMTModel,X.MarianModel,X.MarianPreTrainedModel,X.MarianTokenizer,X.Mask2FormerImageProcessor,X.MaskFormerFeatureExtractor,X.MaskFormerForInstanceSegmentation,X.MaskFormerImageProcessor,X.MaskFormerModel,X.MaskFormerPreTrainedModel,X.MaskedLMOutput,X.MaxLengthCriteria,X.Metric3DForDepthEstimation,X.Metric3DPreTrainedModel,X.Metric3Dv2ForDepthEstimation,X.Metric3Dv2PreTrainedModel,X.MgpstrForSceneTextRecognition,X.MgpstrModelOutput,X.MgpstrPreTrainedModel,X.MgpstrProcessor,X.MgpstrTokenizer,X.MimiDecoderModel,X.MimiDecoderOutput,X.MimiEncoderModel,X.MimiEncoderOutput,X.MimiModel,X.MimiPreTrainedModel,X.MinLengthLogitsProcessor,X.MinNewTokensLengthLogitsProcessor,X.MistralForCausalLM,X.MistralModel,X.MistralPreTrainedModel,X.MobileBertForMaskedLM,X.MobileBertForQuestionAnswering,X.MobileBertForSequenceClassification,X.MobileBertModel,X.MobileBertPreTrainedModel,X.MobileBertTokenizer,X.MobileLLMForCausalLM,X.MobileLLMModel,X.MobileLLMPreTrainedModel,X.MobileNetV1FeatureExtractor,X.MobileNetV1ForImageClassification,X.MobileNetV1ForSemanticSegmentation,X.MobileNetV1ImageProcessor,X.MobileNetV1Model,X.MobileNetV1PreTrainedModel,X.MobileNetV2FeatureExtractor,X.MobileNetV2ForImageClassification,X.MobileNetV2ForSemanticSegmentation,X.MobileNetV2ImageProcessor,X.MobileNetV2Model,X.MobileNetV2PreTrainedModel,X.MobileNetV3FeatureExtractor,X.MobileNetV3ForImageClassification,X.MobileNetV3ForSemanticSegmentation,X.MobileNetV3ImageProcessor,X.MobileNetV3Model,X.MobileNetV3PreTrainedModel,X.MobileNetV4FeatureExtractor,X.MobileNetV4ForImageClassification,X.MobileNetV4ForSemanticSegmentation,X.MobileNetV4ImageProcessor,X.MobileNetV4Model,X.MobileNetV4PreTrainedModel,X.MobileViTFeatureExtractor,X.MobileViTForImageClassification,X.MobileViTImageProcessor,X.MobileViTModel,X.MobileViTPreTrainedModel,X.MobileViTV2ForImageClassification,X.MobileViTV2Model,X.MobileViTV2PreTrainedModel,X.ModelOutput,X.ModernBertForMaskedLM,X.ModernBertForSequenceClassification,X.ModernBertForTokenClassification,X.ModernBertModel,X.ModernBertPreTrainedModel,X.Moondream1ForConditionalGeneration,X.MoonshineFeatureExtractor,X.MoonshineForConditionalGeneration,X.MoonshineModel,X.MoonshinePreTrainedModel,X.MoonshineProcessor,X.MptForCausalLM,X.MptModel,X.MptPreTrainedModel,X.MultiModalityCausalLM,X.MultiModalityPreTrainedModel,X.MusicgenForCausalLM,X.MusicgenForConditionalGeneration,X.MusicgenModel,X.MusicgenPreTrainedModel,X.NllbTokenizer,X.NoBadWordsLogitsProcessor,X.NoRepeatNGramLogitsProcessor,X.NomicBertModel,X.NomicBertPreTrainedModel,X.NougatImageProcessor,X.NougatTokenizer,X.OPTForCausalLM,X.OPTModel,X.OPTPreTrainedModel,X.ObjectDetectionPipeline,X.Olmo2ForCausalLM,X.Olmo2Model,X.Olmo2PreTrainedModel,X.OlmoForCausalLM,X.OlmoModel,X.OlmoPreTrainedModel,X.OpenELMForCausalLM,X.OpenELMModel,X.OpenELMPreTrainedModel,X.OwlViTFeatureExtractor,X.OwlViTForObjectDetection,X.OwlViTImageProcessor,X.OwlViTModel,X.OwlViTPreTrainedModel,X.OwlViTProcessor,X.Owlv2ForObjectDetection,X.Owlv2ImageProcessor,X.Owlv2Model,X.Owlv2PreTrainedModel,X.PaliGemmaForConditionalGeneration,X.PaliGemmaPreTrainedModel,X.PaliGemmaProcessor,X.PatchTSMixerForPrediction,X.PatchTSMixerModel,X.PatchTSMixerPreTrainedModel,X.PatchTSTForPrediction,X.PatchTSTModel,X.PatchTSTPreTrainedModel,X.Phi3ForCausalLM,X.Phi3Model,X.Phi3PreTrainedModel,X.Phi3VForCausalLM,X.Phi3VImageProcessor,X.Phi3VPreTrainedModel,X.Phi3VProcessor,X.PhiForCausalLM,X.PhiModel,X.PhiPreTrainedModel,X.Pipeline,X.PreTrainedModel,X.PreTrainedTokenizer,X.PretrainedConfig,X.PretrainedMixin,X.Processor,X.PvtForImageClassification,X.PvtImageProcessor,X.PvtModel,X.PvtPreTrainedModel,X.PyAnnoteFeatureExtractor,X.PyAnnoteForAudioFrameClassification,X.PyAnnoteModel,X.PyAnnotePreTrainedModel,X.PyAnnoteProcessor,X.QuestionAnsweringModelOutput,X.QuestionAnsweringPipeline,X.Qwen2ForCausalLM,X.Qwen2Model,X.Qwen2PreTrainedModel,X.Qwen2Tokenizer,X.Qwen2VLForConditionalGeneration,X.Qwen2VLImageProcessor,X.Qwen2VLPreTrainedModel,X.Qwen2VLProcessor,X.RFDetrForObjectDetection,X.RFDetrModel,X.RFDetrObjectDetectionOutput,X.RFDetrPreTrainedModel,X.RTDetrForObjectDetection,X.RTDetrImageProcessor,X.RTDetrModel,X.RTDetrObjectDetectionOutput,X.RTDetrPreTrainedModel,X.RTDetrV2ForObjectDetection,X.RTDetrV2Model,X.RTDetrV2ObjectDetectionOutput,X.RTDetrV2PreTrainedModel,X.RawAudio,X.RawImage,X.RawVideo,X.RawVideoFrame,X.RepetitionPenaltyLogitsProcessor,X.ResNetForImageClassification,X.ResNetModel,X.ResNetPreTrainedModel,X.RoFormerForMaskedLM,X.RoFormerForQuestionAnswering,X.RoFormerForSequenceClassification,X.RoFormerForTokenClassification,X.RoFormerModel,X.RoFormerPreTrainedModel,X.RoFormerTokenizer,X.RobertaForMaskedLM,X.RobertaForQuestionAnswering,X.RobertaForSequenceClassification,X.RobertaForTokenClassification,X.RobertaModel,X.RobertaPreTrainedModel,X.RobertaTokenizer,X.SamImageProcessor,X.SamImageSegmentationOutput,X.SamModel,X.SamPreTrainedModel,X.SamProcessor,X.SapiensForDepthEstimation,X.SapiensForNormalEstimation,X.SapiensForSemanticSegmentation,X.SapiensPreTrainedModel,X.SeamlessM4TFeatureExtractor,X.SegformerFeatureExtractor,X.SegformerForImageClassification,X.SegformerForSemanticSegmentation,X.SegformerImageProcessor,X.SegformerModel,X.SegformerPreTrainedModel,X.Seq2SeqLMOutput,X.SequenceClassifierOutput,X.SiglipImageProcessor,X.SiglipModel,X.SiglipPreTrainedModel,X.SiglipTextModel,X.SiglipTokenizer,X.SiglipVisionModel,X.SmolVLMForConditionalGeneration,X.SmolVLMImageProcessor,X.SmolVLMProcessor,X.SnacDecoderModel,X.SnacEncoderModel,X.SnacFeatureExtractor,X.SnacModel,X.SnacPreTrainedModel,X.SpeechT5FeatureExtractor,X.SpeechT5ForSpeechToText,X.SpeechT5ForTextToSpeech,X.SpeechT5HifiGan,X.SpeechT5Model,X.SpeechT5PreTrainedModel,X.SpeechT5Processor,X.SpeechT5Tokenizer,X.SqueezeBertForMaskedLM,X.SqueezeBertForQuestionAnswering,X.SqueezeBertForSequenceClassification,X.SqueezeBertModel,X.SqueezeBertPreTrainedModel,X.SqueezeBertTokenizer,X.StableLmForCausalLM,X.StableLmModel,X.StableLmPreTrainedModel,X.Starcoder2ForCausalLM,X.Starcoder2Model,X.Starcoder2PreTrainedModel,X.StoppingCriteria,X.StoppingCriteriaList,X.StyleTextToSpeech2Model,X.StyleTextToSpeech2PreTrainedModel,X.SummarizationPipeline,X.SuppressTokensAtBeginLogitsProcessor,X.Swin2SRForImageSuperResolution,X.Swin2SRImageProcessor,X.Swin2SRModel,X.Swin2SRPreTrainedModel,X.SwinForImageClassification,X.SwinForSemanticSegmentation,X.SwinModel,X.SwinPreTrainedModel,X.T5ForConditionalGeneration,X.T5Model,X.T5PreTrainedModel,X.T5Tokenizer,X.TableTransformerForObjectDetection,X.TableTransformerModel,X.TableTransformerObjectDetectionOutput,X.TableTransformerPreTrainedModel,X.TemperatureLogitsWarper,X.Tensor,X.Text2TextGenerationPipeline,X.TextClassificationPipeline,X.TextGenerationPipeline,X.TextStreamer,X.TextToAudioPipeline,X.TokenClassificationPipeline,X.TokenClassifierOutput,X.TokenizerModel,X.TopKLogitsWarper,X.TopPLogitsWarper,X.TrOCRForCausalLM,X.TrOCRPreTrainedModel,X.TranslationPipeline,X.UltravoxModel,X.UltravoxPreTrainedModel,X.UltravoxProcessor,X.UniSpeechForCTC,X.UniSpeechForSequenceClassification,X.UniSpeechModel,X.UniSpeechPreTrainedModel,X.UniSpeechSatForAudioFrameClassification,X.UniSpeechSatForCTC,X.UniSpeechSatForSequenceClassification,X.UniSpeechSatModel,X.UniSpeechSatPreTrainedModel,X.VLChatProcessor,X.VLMImageProcessor,X.ViTFeatureExtractor,X.ViTForImageClassification,X.ViTImageProcessor,X.ViTMAEModel,X.ViTMAEPreTrainedModel,X.ViTMSNForImageClassification,X.ViTMSNModel,X.ViTMSNPreTrainedModel,X.ViTModel,X.ViTPreTrainedModel,X.VisionEncoderDecoderModel,X.VitMatteForImageMatting,X.VitMatteImageProcessor,X.VitMattePreTrainedModel,X.VitPoseForPoseEstimation,X.VitPoseImageProcessor,X.VitPosePreTrainedModel,X.VitsModel,X.VitsModelOutput,X.VitsPreTrainedModel,X.VitsTokenizer,X.Wav2Vec2BertForCTC,X.Wav2Vec2BertForSequenceClassification,X.Wav2Vec2BertModel,X.Wav2Vec2BertPreTrainedModel,X.Wav2Vec2CTCTokenizer,X.Wav2Vec2FeatureExtractor,X.Wav2Vec2ForAudioFrameClassification,X.Wav2Vec2ForCTC,X.Wav2Vec2ForSequenceClassification,X.Wav2Vec2Model,X.Wav2Vec2PreTrainedModel,X.Wav2Vec2Processor,X.Wav2Vec2ProcessorWithLM,X.WavLMForAudioFrameClassification,X.WavLMForCTC,X.WavLMForSequenceClassification,X.WavLMForXVector,X.WavLMModel,X.WavLMPreTrainedModel,X.WeSpeakerFeatureExtractor,X.WeSpeakerResNetModel,X.WeSpeakerResNetPreTrainedModel,X.WhisperFeatureExtractor,X.WhisperForConditionalGeneration,X.WhisperModel,X.WhisperPreTrainedModel,X.WhisperProcessor,X.WhisperTextStreamer,X.WhisperTimeStampLogitsProcessor,X.WhisperTokenizer,X.XLMForQuestionAnswering,X.XLMForSequenceClassification,X.XLMForTokenClassification,X.XLMModel,X.XLMPreTrainedModel,X.XLMRobertaForMaskedLM,X.XLMRobertaForQuestionAnswering,X.XLMRobertaForSequenceClassification,X.XLMRobertaForTokenClassification,X.XLMRobertaModel,X.XLMRobertaPreTrainedModel,X.XLMRobertaTokenizer,X.XLMTokenizer,X.XLMWithLMHeadModel,X.XVectorOutput,X.YolosFeatureExtractor,X.YolosForObjectDetection,X.YolosImageProcessor,X.YolosModel,X.YolosObjectDetectionOutput,X.YolosPreTrainedModel,X.ZeroShotAudioClassificationPipeline,X.ZeroShotClassificationPipeline,X.ZeroShotImageClassificationPipeline,X.ZeroShotObjectDetectionPipeline,X.bankers_round,X.cat,X.cos_sim,X.dot,X.dynamic_time_warping;var P0=X.env;X.full,X.full_like,X.getKeyValueShapes,X.hamming,X.hanning,X.interpolate,X.interpolate_4d,X.interpolate_data,X.is_chinese_char,X.layer_norm,X.load_image,X.load_video,X.log_softmax,X.magnitude,X.matmul,X.max,X.mean,X.mean_pooling,X.medianFilter,X.mel_filter_bank,X.min,X.ones,X.ones_like,X.permute,X.permute_data,X.pipeline,X.quantize_embeddings,X.rand,X.read_audio,X.rfft,X.round,X.slice,X.softmax,X.spectrogram,X.stack,X.std_mean,X.topk,X.window_function,X.zeros,X.zeros_like;var nx=Object.defineProperty,ix=(i,o)=>{for(var a in o)nx(i,a,{get:o[a],enumerable:!0})},A1={};ix(A1,{audioClassification:()=>px,audioToAudio:()=>bx,automaticSpeechRecognition:()=>hx,chatCompletion:()=>Qx,chatCompletionStream:()=>Nx,documentQuestionAnswering:()=>Lx,featureExtraction:()=>xx,fillMask:()=>Mx,imageClassification:()=>Cx,imageSegmentation:()=>wx,imageToImage:()=>_x,imageToText:()=>Ix,objectDetection:()=>yx,questionAnswering:()=>Ex,request:()=>_n,sentenceSimilarity:()=>Bx,streamingRequest:()=>W2,summarization:()=>Tx,tableQuestionAnswering:()=>Px,tabularClassification:()=>Vx,tabularRegression:()=>jx,textClassification:()=>Dx,textGeneration:()=>Sx,textGenerationStream:()=>Gx,textToImage:()=>kx,textToSpeech:()=>mx,tokenClassification:()=>Fx,translation:()=>zx,visualQuestionAnswering:()=>Rx,zeroShotClassification:()=>Ox,zeroShotImageClassification:()=>vx});function ox(i,o){return Object.assign({},...o.map(a=>{if(i[a]!==void 0)return{[a]:i[a]}}))}function Ax(i,o){return i.includes(o)}function lx(i,o){const a=Array.isArray(o)?o:[o],u=Object.keys(i).filter(p=>!Ax(a,p));return ox(i,u)}function j2(i){return/^http(s?):/.test(i)||i.startsWith("/")}var Sf=new Map,cx=10*60*1e3,ux=1e3,Cy="https://huggingface.co";async function wy(i,o,a){if(j2(i))return null;const u=`${i}:${o}`;let p=Sf.get(u);if(p&&p.date<new Date(Date.now()-cx)&&(Sf.delete(u),p=void 0),p===void 0){const h=await((a==null?void 0:a.fetch)??fetch)(`${Cy}/api/models/${i}?expand[]=pipeline_tag`,{headers:o?{Authorization:`Bearer ${o}`}:{}}).then(C=>C.json()).then(C=>C.pipeline_tag).catch(()=>null);if(!h)return null;p={task:h,date:new Date},Sf.set(u,{task:h,date:new Date}),Sf.size>ux&&Sf.delete(Sf.keys().next().value)}return p.task}var Iy="https://api-inference.huggingface.co",V2=null;async function yy(i,o){const{accessToken:a,endpointUrl:u,...p}=i;let{model:h}=i;const{forceTask:C,includeCredentials:y,taskHint:k,wait_for_model:_,use_cache:v,dont_load_model:M,chatCompletion:B}=o??{},S={};if(a&&(S.Authorization=`Bearer ${a}`),!h&&!V2&&k){const Q=await fetch(`${Cy}/api/tasks`);Q.ok&&(V2=await Q.json())}if(!h&&V2&&k){const Q=V2[k];Q&&(h=Q.models[0].id)}if(!h)throw new Error("No model provided, and no default model found for this task");const N="data"in i&&!!i.data;N||(S["Content-Type"]="application/json"),_&&(S["X-Wait-For-Model"]="true"),v===!1&&(S["X-Use-Cache"]="false"),M&&(S["X-Load-Model"]="0");let V=(()=>{if(u&&j2(h))throw new TypeError("Both model and endpointUrl cannot be URLs");return j2(h)?(console.warn("Using a model URL is deprecated, please use the `endpointUrl` parameter instead"),h):u||(C?`${Iy}/pipeline/${C}/${h}`:`${Iy}/models/${h}`)})();B&&!V.endsWith("/chat/completions")&&(V+="/v1/chat/completions");let Z;typeof y=="string"?Z=y:y===!0&&(Z="include");const O={headers:S,method:"POST",body:N?i.data:JSON.stringify({...p.model&&j2(p.model)?lx(p,"model"):p}),...Z&&{credentials:Z},signal:o==null?void 0:o.signal};return{url:V,info:O}}async function _n(i,o){var h,C;const{url:a,info:u}=await yy(i,o),p=await((o==null?void 0:o.fetch)??fetch)(a,u);if((o==null?void 0:o.retry_on_error)!==!1&&p.status===503&&!(o!=null&&o.wait_for_model))return _n(i,{...o,wait_for_model:!0});if(!p.ok){if((h=p.headers.get("Content-Type"))!=null&&h.startsWith("application/json")){const y=await p.json();if([400,422,404,500].includes(p.status)&&(o!=null&&o.chatCompletion))throw new Error(`Server ${i.model} does not seem to support chat completion. Error: ${y.error}`);if(y.error)throw new Error(JSON.stringify(y.error))}throw new Error("An error occurred while fetching the blob")}return(C=p.headers.get("Content-Type"))!=null&&C.startsWith("application/json")?await p.json():await p.blob()}function dx(i){let o,a,u,p=!1;return function(C){o===void 0?(o=C,a=0,u=-1):o=gx(o,C);const y=o.length;let k=0;for(;a<y;){p&&(o[a]===10&&(k=++a),p=!1);let _=-1;for(;a<y&&_===-1;++a)switch(o[a]){case 58:u===-1&&(u=a-k);break;case 13:p=!0;case 10:_=a;break}if(_===-1)break;i(o.subarray(k,_),u),k=a,u=-1}k===y?o=void 0:k!==0&&(o=o.subarray(k),a-=k)}}function fx(i,o,a){let u=ky();const p=new TextDecoder;return function(C,y){if(C.length===0)a==null||a(u),u=ky();else if(y>0){const k=p.decode(C.subarray(0,y)),_=y+(C[y+1]===32?2:1),v=p.decode(C.subarray(_));switch(k){case"data":u.data=u.data?u.data+`
`+v:v;break;case"event":u.event=v;break;case"id":i(u.id=v);break;case"retry":const M=parseInt(v,10);isNaN(M)||o(u.retry=M);break}}}}function gx(i,o){const a=new Uint8Array(i.length+o.length);return a.set(i),a.set(o,i.length),a}function ky(){return{data:"",event:"",id:"",retry:void 0}}async function*W2(i,o){var _,v;const{url:a,info:u}=await yy({...i,stream:!0},o),p=await((o==null?void 0:o.fetch)??fetch)(a,u);if((o==null?void 0:o.retry_on_error)!==!1&&p.status===503&&!(o!=null&&o.wait_for_model))return yield*W2(i,{...o,wait_for_model:!0});if(!p.ok){if((_=p.headers.get("Content-Type"))!=null&&_.startsWith("application/json")){const M=await p.json();if([400,422,404,500].includes(p.status)&&(o!=null&&o.chatCompletion))throw new Error(`Server ${i.model} does not seem to support chat completion. Error: ${M.error}`);if(M.error)throw new Error(M.error)}throw new Error(`Server response contains error: ${p.status}`)}if(!((v=p.headers.get("content-type"))!=null&&v.startsWith("text/event-stream")))throw new Error("Server does not support event stream content type, it returned "+p.headers.get("content-type"));if(!p.body)return;const h=p.body.getReader();let C=[];const k=dx(fx(()=>{},()=>{},M=>{C.push(M)}));try{for(;;){const{done:M,value:B}=await h.read();if(M)return;k(B);for(const S of C)if(S.data.length>0){if(S.data==="[DONE]")return;const N=JSON.parse(S.data);if(typeof N=="object"&&N!==null&&"error"in N)throw new Error(N.error);yield N}C=[]}}finally{h.releaseLock()}}var Fn=class extends TypeError{constructor(i){super(`Invalid inference output: ${i}. Use the 'request' method with the same parameters to do a custom call with no type checking.`),this.name="InferenceOutputError"}};async function px(i,o){const a=await _n(i,{...o,taskHint:"audio-classification"});if(!(Array.isArray(a)&&a.every(p=>typeof p.label=="string"&&typeof p.score=="number")))throw new Fn("Expected Array<{label: string, score: number}>");return a}async function hx(i,o){const a=await _n(i,{...o,taskHint:"automatic-speech-recognition"});if(!(typeof(a==null?void 0:a.text)=="string"))throw new Fn("Expected {text: string}");return a}async function mx(i,o){const a=await _n(i,{...o,taskHint:"text-to-speech"});if(!(a&&a instanceof Blob))throw new Fn("Expected Blob");return a}async function bx(i,o){const a=await _n(i,{...o,taskHint:"audio-to-audio"});if(!(Array.isArray(a)&&a.every(p=>typeof p.label=="string"&&typeof p.blob=="string"&&typeof p["content-type"]=="string")))throw new Fn("Expected Array<{label: string, blob: string, content-type: string}>");return a}async function Cx(i,o){const a=await _n(i,{...o,taskHint:"image-classification"});if(!(Array.isArray(a)&&a.every(p=>typeof p.label=="string"&&typeof p.score=="number")))throw new Fn("Expected Array<{label: string, score: number}>");return a}async function wx(i,o){const a=await _n(i,{...o,taskHint:"image-segmentation"});if(!(Array.isArray(a)&&a.every(p=>typeof p.label=="string"&&typeof p.mask=="string"&&typeof p.score=="number")))throw new Fn("Expected Array<{label: string, mask: string, score: number}>");return a}async function Ix(i,o){var u;const a=(u=await _n(i,{...o,taskHint:"image-to-text"}))==null?void 0:u[0];if(typeof(a==null?void 0:a.generated_text)!="string")throw new Fn("Expected {generated_text: string}");return a}async function yx(i,o){const a=await _n(i,{...o,taskHint:"object-detection"});if(!(Array.isArray(a)&&a.every(p=>typeof p.label=="string"&&typeof p.score=="number"&&typeof p.box.xmin=="number"&&typeof p.box.ymin=="number"&&typeof p.box.xmax=="number"&&typeof p.box.ymax=="number")))throw new Fn("Expected Array<{label:string; score:number; box:{xmin:number; ymin:number; xmax:number; ymax:number}}>");return a}async function kx(i,o){const a=await _n(i,{...o,taskHint:"text-to-image"});if(!(a&&a instanceof Blob))throw new Fn("Expected Blob");return a}function U2(i){if(globalThis.Buffer)return globalThis.Buffer.from(i).toString("base64");{const o=[];return i.forEach(a=>{o.push(String.fromCharCode(a))}),globalThis.btoa(o.join(""))}}async function _x(i,o){let a;i.parameters?a={...i,inputs:U2(new Uint8Array(i.inputs instanceof ArrayBuffer?i.inputs:await i.inputs.arrayBuffer()))}:a={accessToken:i.accessToken,model:i.model,data:i.inputs};const u=await _n(a,{...o,taskHint:"image-to-image"});if(!(u&&u instanceof Blob))throw new Fn("Expected Blob");return u}async function vx(i,o){const a={...i,inputs:{image:U2(new Uint8Array(i.inputs.image instanceof ArrayBuffer?i.inputs.image:await i.inputs.image.arrayBuffer()))}},u=await _n(a,{...o,taskHint:"zero-shot-image-classification"});if(!(Array.isArray(u)&&u.every(h=>typeof h.label=="string"&&typeof h.score=="number")))throw new Fn("Expected Array<{label: string, score: number}>");return u}async function xx(i,o){const a=i.model?await wy(i.model,i.accessToken,o):void 0,u=await _n(i,{...o,taskHint:"feature-extraction",...a==="sentence-similarity"&&{forceTask:"feature-extraction"}});let p=!0;const h=(C,y,k=0)=>k>y?!1:C.every(_=>Array.isArray(_))?C.every(_=>h(_,y,k+1)):C.every(_=>typeof _=="number");if(p=Array.isArray(u)&&h(u,3,0),!p)throw new Fn("Expected Array<number[][][] | number[][] | number[] | number>");return u}async function Mx(i,o){const a=await _n(i,{...o,taskHint:"fill-mask"});if(!(Array.isArray(a)&&a.every(p=>typeof p.score=="number"&&typeof p.sequence=="string"&&typeof p.token=="number"&&typeof p.token_str=="string")))throw new Fn("Expected Array<{score: number, sequence: string, token: number, token_str: string}>");return a}async function Ex(i,o){const a=await _n(i,{...o,taskHint:"question-answering"});if(!(typeof a=="object"&&!!a&&typeof a.answer=="string"&&typeof a.end=="number"&&typeof a.score=="number"&&typeof a.start=="number"))throw new Fn("Expected {answer: string, end: number, score: number, start: number}");return a}async function Bx(i,o){const a=i.model?await wy(i.model,i.accessToken,o):void 0,u=await _n(i,{...o,taskHint:"sentence-similarity",...a==="feature-extraction"&&{forceTask:"sentence-similarity"}});if(!(Array.isArray(u)&&u.every(h=>typeof h=="number")))throw new Fn("Expected number[]");return u}async function Tx(i,o){const a=await _n(i,{...o,taskHint:"summarization"});if(!(Array.isArray(a)&&a.every(p=>typeof(p==null?void 0:p.summary_text)=="string")))throw new Fn("Expected Array<{summary_text: string}>");return a==null?void 0:a[0]}async function Px(i,o){const a=await _n(i,{...o,taskHint:"table-question-answering"});if(!(typeof(a==null?void 0:a.aggregator)=="string"&&typeof a.answer=="string"&&Array.isArray(a.cells)&&a.cells.every(p=>typeof p=="string")&&Array.isArray(a.coordinates)&&a.coordinates.every(p=>Array.isArray(p)&&p.every(h=>typeof h=="number"))))throw new Fn("Expected {aggregator: string, answer: string, cells: string[], coordinates: number[][]}");return a}async function Dx(i,o){var p;const a=(p=await _n(i,{...o,taskHint:"text-classification"}))==null?void 0:p[0];if(!(Array.isArray(a)&&a.every(h=>typeof(h==null?void 0:h.label)=="string"&&typeof h.score=="number")))throw new Fn("Expected Array<{label: string, score: number}>");return a}function H2(i){return Array.isArray(i)?i:[i]}async function Sx(i,o){const a=H2(await _n(i,{...o,taskHint:"text-generation"}));if(!(Array.isArray(a)&&a.every(p=>typeof(p==null?void 0:p.generated_text)=="string")))throw new Fn("Expected Array<{generated_text: string}>");return a==null?void 0:a[0]}async function*Gx(i,o){yield*W2(i,{...o,taskHint:"text-generation"})}async function Fx(i,o){const a=H2(await _n(i,{...o,taskHint:"token-classification"}));if(!(Array.isArray(a)&&a.every(p=>typeof p.end=="number"&&typeof p.entity_group=="string"&&typeof p.score=="number"&&typeof p.start=="number"&&typeof p.word=="string")))throw new Fn("Expected Array<{end: number, entity_group: string, score: number, start: number, word: string}>");return a}async function zx(i,o){const a=await _n(i,{...o,taskHint:"translation"});if(!(Array.isArray(a)&&a.every(p=>typeof(p==null?void 0:p.translation_text)=="string")))throw new Fn("Expected type Array<{translation_text: string}>");return(a==null?void 0:a.length)===1?a==null?void 0:a[0]:a}async function Ox(i,o){const a=H2(await _n(i,{...o,taskHint:"zero-shot-classification"}));if(!(Array.isArray(a)&&a.every(p=>Array.isArray(p.labels)&&p.labels.every(h=>typeof h=="string")&&Array.isArray(p.scores)&&p.scores.every(h=>typeof h=="number")&&typeof p.sequence=="string")))throw new Fn("Expected Array<{labels: string[], scores: number[], sequence: string}>");return a}async function Qx(i,o){const a=await _n(i,{...o,taskHint:"text-generation",chatCompletion:!0});if(!(typeof a=="object"&&Array.isArray(a==null?void 0:a.choices)&&typeof(a==null?void 0:a.created)=="number"&&typeof(a==null?void 0:a.id)=="string"&&typeof(a==null?void 0:a.model)=="string"&&typeof(a==null?void 0:a.system_fingerprint)=="string"&&typeof(a==null?void 0:a.usage)=="object"))throw new Fn("Expected ChatCompletionOutput");return a}async function*Nx(i,o){yield*W2(i,{...o,taskHint:"text-generation",chatCompletion:!0})}async function Lx(i,o){var h;const a={...i,inputs:{question:i.inputs.question,image:U2(new Uint8Array(i.inputs.image instanceof ArrayBuffer?i.inputs.image:await i.inputs.image.arrayBuffer()))}},u=(h=H2(await _n(a,{...o,taskHint:"document-question-answering"})))==null?void 0:h[0];if(!(typeof(u==null?void 0:u.answer)=="string"&&(typeof u.end=="number"||typeof u.end>"u")&&(typeof u.score=="number"||typeof u.score>"u")&&(typeof u.start=="number"||typeof u.start>"u")))throw new Fn("Expected Array<{answer: string, end?: number, score?: number, start?: number}>");return u}async function Rx(i,o){var h;const a={...i,inputs:{question:i.inputs.question,image:U2(new Uint8Array(i.inputs.image instanceof ArrayBuffer?i.inputs.image:await i.inputs.image.arrayBuffer()))}},u=(h=await _n(a,{...o,taskHint:"visual-question-answering"}))==null?void 0:h[0];if(!(typeof(u==null?void 0:u.answer)=="string"&&typeof u.score=="number"))throw new Fn("Expected Array<{answer: string, score: number}>");return u}async function jx(i,o){const a=await _n(i,{...o,taskHint:"tabular-regression"});if(!(Array.isArray(a)&&a.every(p=>typeof p=="number")))throw new Fn("Expected number[]");return a}async function Vx(i,o){const a=await _n(i,{...o,taskHint:"tabular-classification"});if(!(Array.isArray(a)&&a.every(p=>typeof p=="number")))throw new Fn("Expected number[]");return a}var Wx=class{constructor(i="",o={}){Te(this,"accessToken");Te(this,"defaultOptions");this.accessToken=i,this.defaultOptions=o;for(const[a,u]of Object.entries(A1))Object.defineProperty(this,a,{enumerable:!1,value:(p,h)=>u({...p,accessToken:i},{...o,...h})})}endpoint(i){return new Ux(i,this.accessToken,this.defaultOptions)}},Ux=class{constructor(i,o="",a={}){for(const[u,p]of Object.entries(A1))Object.defineProperty(this,u,{enumerable:!1,value:(h,C)=>p({...h,accessToken:o,endpointUrl:i},{...a,...C})})}};class Hx{constructor(o="transformers-cache"){this.cacheName=o}async match(o){return(await caches.open(this.cacheName)).match(o)}async put(o,a){return(await caches.open(this.cacheName)).put(o,a)}}const Yx="transformers-cache";class iA{static setModelOptions(o){this.modelOptions=o}static async getInstance(o=null){return this.instance===null&&(P0.useBrowserCache=!1,P0.useCustomCache=!0,P0.customCache=new Hx(Yx),this.modelOptions.host==="localhost"?(P0.localModelPath="http://localhost/",P0.allowLocalModels=!0,P0.allowRemoteModels=!1):(P0.localModelPath="/models/",P0.allowLocalModels=!1,P0.allowRemoteModels=!0),this.instance=bg.from_pretrained(this.modelOptions.model,{dtype:this.modelOptions.dtype,device:this.modelOptions.device==="CPU"?"wasm":"webgpu",progress_callback:o})),this.instance}static hasModelLoaded(){return this.instance!==null}static async reset(){this.hasModelLoaded()&&(this.instance=null)}}Te(iA,"modelOptions",{host:"huggingface",model:"onnx-community/Kokoro-82M-v1.0-ONNX",device:"CPU",dtype:"q8",voice:"af_bella"}),Te(iA,"instance",null);const Kx=async i=>await(await iA.getInstance()).generate(i,{voice:iA.modelOptions.voice}),qx=async i=>{let o=await iA.getInstance();const a=new m2,u=o.stream(a,{voice:iA.modelOptions.voice});i(a,u)},_y=async(i,o={url:"http://localhost:8880",api_key:"sk-no-key-required",model:"kokoro",voice:"af_bella"})=>{const a=o.url+"/v1/audio/speech";return await new Wx(o.api_key).endpoint(a).textToSpeech({model:o.model,input:i,voice:o.voice,stream:!0,speed:1,response_format:"wav",lang_code:"a",return_download_link:!1})},Xx=i=>iA.modelOptions.host!==i.host||iA.modelOptions.model!==i.model||iA.modelOptions.device!==i.device||iA.modelOptions.dtpe!==i.dtype||iA.modelOptions.voice!==i.voice,Zx=async i=>{Xx(i)&&await iA.reset(),iA.setModelOptions(i),iA.getInstance(o=>{switch(o.status){case"initiate":{let a={status:"init",name:o.file,progress:0,total:100};self.postMessage({jobType:"updateProgressBar",eventName:"ChatBotWidget#requestMultiProgressBar",event:a})}break;case"progress":{let a={status:"update",name:o.file,progress:o.progress};self.postMessage({jobType:"updateProgressBar",eventName:"ChatBotWidget#requestMultiProgressBar",event:a})}break;case"done":self.postMessage({jobType:"updateBtnTitle",eventName:"ChatBotModelOptions#updateBtnTitle",event:""});break}})},Jx=async i=>{const o=i.data.text,u=await(await Kx(o)).toBlob({type:"audio/wav"});self.postMessage({jobType:"audioResp",audio:URL.createObjectURL(u),text:o})},$x=async i=>{const o=i.data.text;qx(async(a,u)=>{a.push(o),a.close();for await(const{text:p,_:h,audio:C}of u){const y=C.toBlob({type:"audio/wav"});self.postMessage({jobType:"streamingAudioChunk",audio:URL.createObjectURL(y),text:p})}self.postMessage({jobType:"streamingAudioChunk#done",text:o})})},eM=async i=>{const o=i.data.text,a=i.data.remoteOptions;let u=new m2;u.push(o),u.close();for await(const h of u){let C=await _y(h,a);self.postMessage({jobType:"streamingAudioChunk",audio:URL.createObjectURL(C),text:h})}await(h=>new Promise(C=>setTimeout(C,h)))(200),self.postMessage({jobType:"streamingAudioChunk#done",text:o})},tM=async i=>{const o=i.data.text,a=i.data.remoteOptions;let u=await _y(o,a);self.postMessage({jobType:"audioResp",audio:URL.createObjectURL(u),text:o})};self.onmessage=async i=>{switch(i.data.jobType){case"loadModel":try{Zx(i.data.modelOptions)}catch(a){self.postMessage({jobType:"error",error:a})}break;case"reset":try{await iA.reset()}catch(a){self.postMessage({jobType:"error",error:a})}break;case"audioGen":try{Jx(i)}catch(a){self.postMessage({jobType:"error",error:a})}break;case"streamingAudio":try{$x(i)}catch(a){self.postMessage({jobType:"error",error:a})}break;case"rAudioGen":try{tM(i)}catch(a){self.postMessage({jobType:"error",error:a})}break;case"rStreamingAudio":try{eM(i)}catch(a){self.postMessage({jobType:"error",error:a})}break}}})();
